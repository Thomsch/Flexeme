digraph  {
m0_6 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84"];
m0_7 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="BsonReader.cs", label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="86-86"];
m0_8 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="BsonReader.cs", label="return new JsonException(message);", span="88-88"];
m0_9 [cluster="Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", file="BsonReader.cs", label="Exit Newtonsoft.Json.JsonException.Create(Newtonsoft.Json.IJsonLineInfo, string, string)", span="84-84"];
m0_0 [cluster="Newtonsoft.Json.JsonException.JsonException()", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonException.JsonException()", span="45-45"];
m0_1 [cluster="Newtonsoft.Json.JsonException.JsonException()", file="BsonReader.cs", label="Exit Newtonsoft.Json.JsonException.JsonException()", span="45-45"];
m0_2 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m0_3 [cluster="Newtonsoft.Json.JsonException.JsonException(string)", file="BsonReader.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(string)", span="54-54"];
m0_4 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m0_5 [cluster="Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", file="BsonReader.cs", label="Exit Newtonsoft.Json.JsonException.JsonException(string, System.Exception)", span="65-65"];
m0_10 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="BsonReader.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139"];
m1_370 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", span="610-610"];
m1_376 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="626-626"];
m1_374 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="624-624"];
m1_377 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="628-628"];
m1_379 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="631-631"];
m1_382 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="635-635"];
m1_371 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':2\r\n  }\r\n}''", span="612-618"];
m1_375 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="625-625"];
m1_372 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="string json = ''[999999999999999999999999999999999999999999999999999999998]''", span="620-620"];
m1_373 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="622-622"];
m1_378 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="629-629"];
m1_380 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="632-632"];
m1_383 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="636-636"];
m1_381 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Assert.IsNull(validationEventArgs)", span="633-633"];
m1_384 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Success()", span="610-610"];
m1_211 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="string json = ''99999999999999999999999999999999999999999999999999999999999999999999''", span="364-364"];
m1_345 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs", label="value == long.MinValue", span="753-753"];
m1_351 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
m1_349 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", span="697-697"];
m1_352 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
m1_354 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="590-590"];
m1_356 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="593-593"];
m1_359 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="597-597"];
m1_363 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="602-602"];
m1_346 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs", label="return ParseResult.Overflow;", span="754-754"];
m1_350 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="out Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", span=""];
m1_365 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="605-605"];
m1_347 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs", label="value = -value", span="756-756"];
m1_348 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Int64TryParse(char[], int, int, out long)", file="ConvertUtils.cs", label="return ParseResult.Success;", span="759-759"];
m1_353 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label=call, span=""];
m1_355 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="591-591"];
m1_357 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="594-594"];
m1_360 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="598-598"];
m1_364 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="603-603"];
m1_358 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="595-595"];
m1_361 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.AreEqual(@''Float 4.001 is not evenly divisible by 0.1. Line 1, position 14.'', validationEventArgs.Message)", span="599-599"];
m1_362 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="600-600"];
m1_366 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatDivisibleBy()", span="569-569"];
m1_152 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="425-425"];
m1_158 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="439-439"];
m1_156 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="initialValue is byte[] && targetType == typeof(Guid)", span="436-436"];
m1_159 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="initialValue is string", span="442-442"];
m1_161 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = new Guid((string)initialValue)", span="446-446"];
m1_163 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="targetType == typeof(Uri)", span="449-449"];
m1_166 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="targetType == typeof(TimeSpan)", span="454-454"];
m1_170 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = System.Convert.FromBase64String((string)initialValue)", span="461-461"];
m1_153 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="initialValue is DateTime && targetType == typeof(DateTimeOffset)", span="429-429"];
m1_157 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = new Guid((byte[])initialValue)", span="438-438"];
m1_172 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="typeof(Type).IsAssignableFrom(targetType)", span="464-464"];
m1_154 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = new DateTimeOffset((DateTime)initialValue)", span="431-431"];
m1_155 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="432-432"];
m1_160 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="targetType == typeof(Guid)", span="444-444"];
m1_162 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="447-447"];
m1_164 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = new Uri((string)initialValue, UriKind.RelativeOrAbsolute)", span="451-451"];
m1_167 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = ParseTimeSpan((string)initialValue)", span="456-456"];
m1_171 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="462-462"];
m1_165 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="452-452"];
m1_168 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="457-457"];
m1_169 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="targetType == typeof(byte[])", span="459-459"];
m1_173 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = Type.GetType((string)initialValue, true)", span="466-466"];
m1_317 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="517-517"];
m1_318 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="517-517"];
m1_319 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="517-517"];
m1_321 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''enum'''':[1.1,2.2]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="530-537"];
m1_323 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="541-541"];
m1_325 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="544-544"];
m1_326 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="545-545"];
m1_327 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="547-547"];
m1_328 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="548-548"];
m1_330 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="551-551"];
m1_337 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(''[2]'', validationEventArgs.Path)", span="560-560"];
m1_333 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="555-555"];
m1_334 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="557-557"];
m1_320 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", span="528-528"];
m1_322 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="string json = ''[1.1,2.2,3.0]''", span="539-539"];
m1_344 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="544-544"];
m1_324 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="543-543"];
m1_329 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="550-550"];
m1_336 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(@''Value 3.0 is not defined in enum. Line 1, position 12.'', validationEventArgs.Message)", span="559-559"];
m1_335 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="558-558"];
m1_343 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="544-544"];
m1_331 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="553-553"];
m1_332 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="554-554"];
m1_342 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="544-544"];
m1_340 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="565-565"];
m1_341 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", span="528-528"];
m1_338 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="562-562"];
m1_339 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatIsNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="563-563"];
m1_121 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="356-356"];
m1_127 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", span="374-374"];
m1_125 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ConvertUtils.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m1_128 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="TryConvertInternal(initialValue, culture, targetType, out value) == ConvertResult.Success", span="378-378"];
m1_122 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", span="391-391"];
m1_126 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ConvertUtils.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_131 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return false;", span="382-382"];
m1_123 [cluster="System.Exception.Exception(string)", file="ConvertUtils.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m1_124 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="ConvertUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m1_129 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return true;", span="379-379"];
m1_130 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = null", span="381-381"];
m1_132 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvert(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = null", span="386-386"];
m1_66 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
m1_35 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="111-111"];
m1_947 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", span="1667-1667"];
m1_948 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(''[1,2,3]'')))", span="1669-1669"];
m1_949 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="ConvertUtils.cs", label="reader.Schema = new JsonSchemaGenerator().Generate(typeof(int[]))", span="1670-1670"];
m1_950 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="ConvertUtils.cs", label="int[] values = new JsonSerializer().Deserialize<int[]>(reader)", span="1671-1671"];
m1_951 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="ConvertUtils.cs", label="Assert.AreEqual(3, values.Length)", span="1673-1673"];
m1_952 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="ConvertUtils.cs", label="Assert.AreEqual(1, values[0])", span="1674-1674"];
m1_953 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="ConvertUtils.cs", label="Assert.AreEqual(2, values[1])", span="1675-1675"];
m1_954 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="ConvertUtils.cs", label="Assert.AreEqual(3, values[2])", span="1676-1676"];
m1_955 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32FromSerializer()", span="1667-1667"];
m1_911 [cluster="System.Convert.ToBase64String(byte[])", file="ConvertUtils.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m1_741 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", span="1215-1215"];
m1_744 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1221-1221"];
m1_747 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1225-1225"];
m1_749 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1228-1228"];
m1_742 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="string json = ''{}''", span="1217-1217"];
m1_743 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="List<string> errors = new List<string>()", span="1219-1219"];
m1_745 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { errors.Add(args.Message); }", span="1222-1222"];
m1_746 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="reader.Schema = GetExtendedSchema()", span="1223-1223"];
m1_748 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1226-1226"];
m1_750 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1229-1229"];
m1_751 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(1, errors.Count)", span="1231-1231"];
m1_752 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''Required properties are missing from object: secondproperty, firstproperty. Line 1, position 2.'', errors[0])", span="1232-1232"];
m1_753 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsMissingRequiredProperties()", span="1215-1215"];
m1_23 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual('''', reader.Path)", span="96-96"];
m1_24 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="98-98"];
m1_25 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="99-99"];
m1_26 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="100-100"];
m1_61 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string)", span="294-294"];
m1_208 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="344-344"];
m1_63 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="295-295"];
m1_1010 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonReaderStubWithIsClosed.JsonReaderStubWithIsClosed()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonReaderStubWithIsClosed.JsonReaderStubWithIsClosed()", span="29-29"];
m1_64 [cluster="lambda expression", file="ConvertUtils.cs", label="call(null, o)", span="295-295"];
m1_205 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", span="332-332"];
m1_284 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="476-476"];
m1_285 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="478-478"];
m1_286 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", span="441-441"];
m1_288 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="457-457"];
m1_290 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", span="482-482"];
m1_292 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="string json = ''10.0''", span="489-489"];
m1_293 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="491-491"];
m1_294 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="493-493"];
m1_295 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="494-494"];
m1_297 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="497-497"];
m1_304 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="494-494"];
m1_300 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="501-501"];
m1_301 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", span="482-482"];
m1_312 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="520-520"];
m1_314 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="Assert.AreEqual(''Float 1.1 is less than minimum value of 5. Line 1, position 3.'', validationEventArgs.Message)", span="522-522"];
m1_287 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="457-457"];
m1_289 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="457-457"];
m1_311 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="518-518"];
m1_291 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''number'''',\r\n  ''''maximum'''':5\r\n}''", span="484-487"];
m1_296 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="495-495"];
m1_303 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="494-494"];
m1_302 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="494-494"];
m1_310 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="517-517"];
m1_298 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="498-498"];
m1_299 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Assert.AreEqual(''Float 10.0 exceeds maximum value of 5. Line 1, position 4.'', validationEventArgs.Message)", span="499-499"];
m1_309 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="516-516"];
m1_307 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="string json = ''1.1''", span="512-512"];
m1_308 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="514-514"];
m1_305 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", span="505-505"];
m1_306 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''number'''',\r\n  ''''minimum'''':5\r\n}''", span="507-510"];
m1_315 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="524-524"];
m1_313 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="521-521"];
m1_316 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.FloatLessThanMinimumValue()", span="505-505"];
m1_606 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", span="997-997"];
m1_612 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1016-1016"];
m1_610 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1014-1014"];
m1_613 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1018-1018"];
m1_615 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1021-1021"];
m1_618 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1025-1025"];
m1_622 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1030-1030"];
m1_607 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string'''',''''required'''':true},\r\n    ''''hobbies'''':{''''type'''':''''string'''',''''required'''':false},\r\n    ''''age'''':{''''type'''':''''integer''''}\r\n  }\r\n}''", span="999-1008"];
m1_611 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1015-1015"];
m1_608 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="string json = ''{'name':'James'}''", span="1010-1010"];
m1_609 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1012-1012"];
m1_614 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1019-1019"];
m1_616 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1022-1022"];
m1_617 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="1023-1023"];
m1_619 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1026-1026"];
m1_620 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="1027-1027"];
m1_623 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1031-1031"];
m1_621 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsNull(validationEventArgs)", span="1028-1028"];
m1_624 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsNull(validationEventArgs)", span="1033-1033"];
m1_625 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingNonRequiredProperties()", span="997-997"];
m1_90 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="178-178"];
m1_15 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="87-87"];
m1_234 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return EnsureTypeAssignable(initialValue, ReflectionUtils.GetObjectType(initialValue), targetType);", span="561-561"];
m1_921 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", span="1621-1621"];
m1_922 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", file="ConvertUtils.cs", label="ExceptionAssert.Throws<JsonSchemaException>(() =>\r\n            {\r\n                JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int));\r\n                s.Maximum = 2;\r\n\r\n                JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5'')))\r\n                {\r\n                    Schema = s\r\n                };\r\n                reader.ReadAsInt32();\r\n            }, ''Integer 5 exceeds maximum value of 2. Line 1, position 1.'')", span="1623-1633"];
m1_923 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32Failure()", span="1621-1621"];
m1_0 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", span="56-56"];
m1_1 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="ConvertUtils.cs", label="string json = ''{'name':'James','hobbies':['pie','cake']}''", span="58-58"];
m1_2 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="ConvertUtils.cs", label="JsonReader reader = new JsonTextReader(new StringReader(json))", span="59-59"];
m1_4 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="ConvertUtils.cs", label="Assert.AreEqual(reader, validatingReader.Reader)", span="62-62"];
m1_5 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", span="56-56"];
m1_6 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m1_7 [cluster="System.IO.StringReader.StringReader(string)", file="ConvertUtils.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m1_3 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CheckInnerReader()", file="ConvertUtils.cs", label="JsonValidatingReader validatingReader = new JsonValidatingReader(reader)", span="61-61"];
m1_11 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string''''},\r\n    ''''hobbies'''':\r\n    {\r\n      ''''type'''':''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}''", span="68-80"];
m1_8 [cluster="Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.JsonValidatingReader(Newtonsoft.Json.JsonReader)", span="318-318"];
m1_9 [cluster="Unk.AreEqual", file="ConvertUtils.cs", label="Entry Unk.AreEqual", span=""];
m1_10 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", span="66-66"];
m1_12 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="string json = @''{'name':''''James'''','hobbies':[''''pie'''','cake']}''", span="82-82"];
m1_240 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="return value;", span="572-572"];
m1_241 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="Func<object, object> castConverter = CastConverters.Get(new TypeConvertKey(valueType, targetType))", span="574-574"];
m1_242 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.EnsureTypeAssignable(object, System.Type, System.Type)", file="ConvertUtils.cs", label="castConverter != null", span="575-575"];
m1_268 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="454-454"];
m1_388 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", span="640-640"];
m1_394 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="656-656"];
m1_392 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="654-654"];
m1_395 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="658-658"];
m1_397 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="661-661"];
m1_401 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="666-666"];
m1_389 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':2\r\n  }\r\n}''", span="642-648"];
m1_393 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="655-655"];
m1_403 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="669-669"];
m1_390 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="string json = ''[999999999999999999999999999999999999999999999999999999999]''", span="650-650"];
m1_391 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="652-652"];
m1_396 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="659-659"];
m1_398 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="662-662"];
m1_402 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="667-667"];
m1_399 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Assert.AreEqual(@''Integer 999999999999999999999999999999999999999999999999999999999 is not evenly divisible by 2. Line 1, position 58.'', validationEventArgs.Message)", span="663-663"];
m1_400 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Assert.AreEqual(''[0]'', validationEventArgs.Path)", span="664-664"];
m1_404 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Failure()", span="640-640"];
m1_94 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="183-183"];
m1_95 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="185-185"];
m1_96 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="186-186"];
m1_97 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="188-188"];
m1_98 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="189-189"];
m1_99 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.AreEqual(''nestedproperty1'', reader.Value.ToString())", span="190-190"];
m1_100 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="192-192"];
m1_101 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="193-193"];
m1_102 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.AreEqual(1.1, reader.Value)", span="194-194"];
m1_103 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="196-196"];
m1_105 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.AreEqual(''nestedproperty2'', reader.Value.ToString())", span="198-198"];
m1_104 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="197-197"];
m1_106 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="200-200"];
m1_477 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", span="790-790"];
m1_483 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="807-807"];
m1_481 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="805-805"];
m1_484 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="809-809"];
m1_486 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="812-812"];
m1_489 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="816-816"];
m1_493 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="821-821"];
m1_478 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''boolean'''',\r\n    ''''enum'''':[true]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="792-799"];
m1_482 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="806-806"];
m1_495 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="824-824"];
m1_479 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="string json = ''[true,false]''", span="801-801"];
m1_480 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="803-803"];
m1_485 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="810-810"];
m1_487 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="813-813"];
m1_490 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="817-817"];
m1_494 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="822-822"];
m1_488 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="814-814"];
m1_491 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(@''Value false is not defined in enum. Line 1, position 11.'', validationEventArgs.Message)", span="818-818"];
m1_492 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(''[1]'', validationEventArgs.Path)", span="819-819"];
m1_496 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BooleanNotInEnum()", span="790-790"];
m1_222 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="369-369"];
m1_252 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="string json = ''1''", span="425-425"];
m1_254 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="429-429"];
m1_255 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="430-430"];
m1_256 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="431-431"];
m1_257 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="433-433"];
m1_258 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="434-434"];
m1_259 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="Assert.AreEqual(''Integer 1 is less than minimum value of 5. Line 1, position 1.'', validationEventArgs.Message)", span="435-435"];
m1_260 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="437-437"];
m1_261 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", span="418-418"];
m1_262 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="430-430"];
m1_263 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="430-430"];
m1_264 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="430-430"];
m1_253 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMinimumValue()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="427-427"];
m1_265 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerIsNotInEnum()", span="441-441"];
m1_217 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="373-373"];
m1_266 [cluster="Unk.ToValue", color=green, community=0, file="ConvertUtils.cs", label="0: Entry Unk.ToValue", span=""];
m1_267 [cluster="Unk.GetType", file="ConvertUtils.cs", label="Entry Unk.GetType", span=""];
m1_271 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetTypeConverter(System.Type)", span="204-204"];
m1_269 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs", label="return JsonTypeReflector.GetTypeConverter(t);", span="610-610"];
m1_270 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="608-608"];
m1_272 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="GetTypeCode(value)", span="616-616"];
m1_273 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="PrimitiveTypeCode.SByte", span="618-618"];
m1_274 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="PrimitiveTypeCode.Byte", span="619-619"];
m1_275 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="PrimitiveTypeCode.Int16", span="620-620"];
m1_276 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="PrimitiveTypeCode.UInt16", span="621-621"];
m1_277 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="PrimitiveTypeCode.Int32", span="622-622"];
m1_279 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="PrimitiveTypeCode.Int64", span="624-624"];
m1_280 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="PrimitiveTypeCode.UInt64", span="625-625"];
m1_283 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="614-614"];
m1_278 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="PrimitiveTypeCode.UInt32", span="623-623"];
m1_281 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="return true;", span="626-626"];
m1_282 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="ConvertUtils.cs", label="return false;", span="628-628"];
m1_931 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", span="1637-1637"];
m1_933 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="ConvertUtils.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''1.5'')))\r\n            {\r\n                Schema = s\r\n            }", span="1641-1644"];
m1_932 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="ConvertUtils.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(decimal))", span="1639-1639"];
m1_934 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="ConvertUtils.cs", label="decimal? d = reader.ReadAsDecimal()", span="1645-1645"];
m1_935 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="ConvertUtils.cs", label="Assert.AreEqual(1.5m, d)", span="1647-1647"];
m1_936 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimal()", span="1637-1637"];
m1_92 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateUnrestrictedArray()", file="ConvertUtils.cs", label="Assert.AreEqual(''nested2'', reader.Value.ToString())", span="180-180"];
m1_210 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}''", span="359-362"];
m1_236 [cluster="Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Linq.JToken.Validate(Newtonsoft.Json.Schema.JsonSchema, Newtonsoft.Json.Schema.ValidationEventHandler)", span="117-117"];
m1_62 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="64-64"];
m1_882 [cluster="Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaModelBuilder.JsonSchemaModelBuilder()", span="37-37"];
m1_16 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="JsonSchema schema = JsonSchema.Parse(schemaJson)", span="88-88"];
m1_250 [cluster="System.ArgumentException.ArgumentException(string)", file="ConvertUtils.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_251 [cluster="System.Type.ToString()", file="ConvertUtils.cs", label="Entry System.Type.ToString()", span="0-0"];
m1_914 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", span="1607-1607"];
m1_916 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="ConvertUtils.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''1'')))\r\n            {\r\n                Schema = s\r\n            }", span="1611-1614"];
m1_915 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="ConvertUtils.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int))", span="1609-1609"];
m1_917 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="ConvertUtils.cs", label="int? i = reader.ReadAsInt32()", span="1615-1615"];
m1_918 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="ConvertUtils.cs", label="Assert.AreEqual(1, i)", span="1617-1617"];
m1_919 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32()", span="1607-1607"];
m1_18 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(schema, reader.Schema)", span="90-90"];
m1_920 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="415-415"];
m1_36 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="112-112"];
m1_37 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(''hobbies'', reader.Value.ToString())", span="113-113"];
m1_38 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual('\'', reader.QuoteChar)", span="114-114"];
m1_39 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(''hobbies'', reader.Path)", span="115-115"];
m1_52 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="132-132"];
m1_53 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="133-133"];
m1_54 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(''hobbies'', reader.Path)", span="134-134"];
m1_55 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="136-136"];
m1_56 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="137-137"];
m1_58 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsFalse(reader.Read())", span="140-140"];
m1_57 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual('''', reader.Path)", span="138-138"];
m1_59 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsNull(validationEventArgs)", span="142-142"];
m1_60 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", span="66-66"];
m1_213 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="368-368"];
m1_249 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="403-414"];
m1_44 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="122-122"];
m1_45 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(''pie'', reader.Value.ToString())", span="123-123"];
m1_47 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(''hobbies[0]'', reader.Path)", span="125-125"];
m1_46 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual('''', reader.QuoteChar)", span="124-124"];
m1_48 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="127-127"];
m1_204 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="352-352"];
m1_214 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="369-369"];
m1_40 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="117-117"];
m1_41 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="118-118"];
m1_42 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(''hobbies'', reader.Path)", span="119-119"];
m1_207 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="344-344"];
m1_19 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(0, reader.Depth)", span="91-91"];
m1_20 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual('''', reader.Path)", span="92-92"];
m1_21 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="94-94"];
m1_209 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", span="357-357"];
m1_177 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="475-475"];
m1_183 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = toConverter.ConvertTo(null, culture, initialValue, targetType)", span="490-490"];
m1_181 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="TypeConverter toConverter = GetConverter(initialType)", span="486-486"];
m1_184 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="491-491"];
m1_178 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="initialValue is BigInteger", span="477-477"];
m1_182 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="toConverter != null && toConverter.CanConvertTo(targetType)", span="488-488"];
m1_188 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="499-499"];
m1_179 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = FromBigInteger((BigInteger)initialValue, targetType)", span="479-479"];
m1_180 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="return ConvertResult.Success;", span="480-480"];
m1_185 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="TypeConverter fromConverter = GetConverter(targetType)", span="494-494"];
m1_186 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="fromConverter != null && fromConverter.CanConvertFrom(initialType)", span="496-496"];
m1_187 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="value = fromConverter.ConvertFrom(null, culture, initialValue)", span="498-498"];
m1_189 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TryConvertInternal(object, System.Globalization.CultureInfo, System.Type, out object)", file="ConvertUtils.cs", label="initialValue == DBNull.Value", span="504-504"];
m1_694 [cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56"];
m1_216 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="372-372"];
m1_65 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="295-295"];
m1_221 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue_BigInteger()", span="357-357"];
m1_237 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="392-392"];
m1_238 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="392-392"];
m1_239 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="392-392"];
m1_243 [cluster="Unk.>", file="ConvertUtils.cs", label="Entry Unk.>", span=""];
m1_244 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="403-414"];
m1_246 [cluster="lambda expression", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(''10'')))", span="410-410"];
m1_245 [cluster="lambda expression", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}''", span="405-408"];
m1_247 [cluster="lambda expression", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="411-411"];
m1_819 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", span="1337-1337"];
m1_829 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1402-1402"];
m1_832 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1410-1410"];
m1_834 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1413-1413"];
m1_838 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1418-1418"];
m1_841 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1422-1422"];
m1_844 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1426-1426"];
m1_849 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1432-1432"];
m1_853 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1437-1437"];
m1_856 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1441-1441"];
m1_860 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1446-1446"];
m1_867 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1454-1454"];
m1_871 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1459-1459"];
m1_876 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1465-1465"];
m1_878 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1468-1468"];
m1_880 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.IsFalse(reader.Read())", span="1471-1471"];
m1_826 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="string json = @''{\r\n  'firstproperty':'blahblahblahblahblahblah',\r\n  'secondproperty':'secasecasecasecaseca',\r\n  'thirdproperty':{\r\n    'thirdproperty_firstproperty':'aaa',\r\n    'additional':'three'\r\n  }\r\n}''", span="1390-1397"];
m1_828 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="List<string> errors = new List<string>()", span="1400-1400"];
m1_830 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) =>\r\n            {\r\n                validationEventArgs = args;\r\n                errors.Add(validationEventArgs.Path + '' - '' + validationEventArgs.Message);\r\n            }", span="1403-1407"];
m1_831 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="reader.Schema = secondSchema", span="1408-1408"];
m1_833 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1411-1411"];
m1_835 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1414-1414"];
m1_836 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''firstproperty'', reader.Value.ToString())", span="1415-1415"];
m1_839 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1419-1419"];
m1_840 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''blahblahblahblahblahblah'', reader.Value.ToString())", span="1420-1420"];
m1_842 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1423-1423"];
m1_843 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''secondproperty'', reader.Value.ToString())", span="1424-1424"];
m1_845 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1427-1427"];
m1_846 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''secasecasecasecaseca'', reader.Value.ToString())", span="1428-1428"];
m1_850 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1433-1433"];
m1_851 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''thirdproperty'', reader.Value.ToString())", span="1434-1434"];
m1_854 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1438-1438"];
m1_857 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1442-1442"];
m1_858 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''thirdproperty_firstproperty'', reader.Value.ToString())", span="1443-1443"];
m1_861 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1447-1447"];
m1_862 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''aaa'', reader.Value.ToString())", span="1448-1448"];
m1_868 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1455-1455"];
m1_869 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''additional'', reader.Value.ToString())", span="1456-1456"];
m1_872 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1460-1460"];
m1_873 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''three'', reader.Value.ToString())", span="1461-1461"];
m1_877 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1466-1466"];
m1_879 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1469-1469"];
m1_847 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(1, errors.Count)", span="1429-1429"];
m1_848 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''secondproperty - String 'secasecasecasecaseca' exceeds maximum length of 10. Line 3, position 41.'', errors[0])", span="1430-1430"];
m1_852 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(1, errors.Count)", span="1435-1435"];
m1_855 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(1, errors.Count)", span="1439-1439"];
m1_859 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(1, errors.Count)", span="1444-1444"];
m1_863 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(4, errors.Count)", span="1449-1449"];
m1_864 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''thirdproperty.thirdproperty_firstproperty - String 'aaa' is less than minimum length of 7. Line 5, position 39.'', errors[1])", span="1450-1450"];
m1_865 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi'. Line 5, position 39.'', errors[2])", span="1451-1451"];
m1_866 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''thirdproperty.thirdproperty_firstproperty - String 'aaa' does not match regex pattern 'hi2u'. Line 5, position 39.'', errors[3])", span="1452-1452"];
m1_870 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(4, errors.Count)", span="1457-1457"];
m1_874 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(5, errors.Count)", span="1462-1462"];
m1_875 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(''thirdproperty.additional - String 'three' is less than minimum length of 6. Line 6, position 24.'', errors[4])", span="1463-1463"];
m1_837 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1416-1416"];
m1_825 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="JsonSchemaModelBuilder modelBuilder = new JsonSchemaModelBuilder()", span="1388-1388"];
m1_827 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1399-1399"];
m1_824 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="JsonSchema secondSchema = JsonSchema.Parse(second, resolver)", span="1386-1386"];
m1_821 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="string second = @''{\r\n  ''''id'''':''''second'''',\r\n  ''''type'''':''''object'''',\r\n  ''''extends'''':{''''$ref'''':''''first''''},\r\n  ''''properties'''':\r\n  {\r\n    ''''secondproperty'''':{''''type'''':''''any''''},\r\n    ''''thirdproperty'''':{\r\n      ''''extends'''':{\r\n        ''''properties'''':\r\n        {\r\n          ''''thirdproperty_firstproperty'''':{''''maxLength'''':9,''''minLength'''':6,''''pattern'''':''''hi2u''''}\r\n        },\r\n        ''''additionalProperties'''':{''''maxLength'''':9,''''minLength'''':6,''''enum'''':[''''one'''',''''two'''']}\r\n      },\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''thirdproperty_firstproperty'''':{''''pattern'''':''''hi''''}\r\n      },\r\n      ''''additionalProperties'''':{''''type'''':''''string'''',''''enum'''':[''''two'''',''''three'''']}\r\n    },\r\n    ''''fourthproperty'''':{''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="1357-1382"];
m1_823 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="JsonSchema firstSchema = JsonSchema.Parse(first, resolver)", span="1385-1385"];
m1_822 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="1384-1384"];
m1_820 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="string first = @''{\r\n  ''''id'''':''''first'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string''''},\r\n    ''''secondproperty'''':{''''type'''':''''string'''',''''maxLength'''':10},\r\n    ''''thirdproperty'''':{\r\n      ''''type'''':''''object'''',\r\n      ''''properties'''':\r\n      {\r\n        ''''thirdproperty_firstproperty'''':{''''type'''':''''string'''',''''maxLength'''':10,''''minLength'''':7}\r\n      }\r\n    }\r\n  },\r\n  ''''additionalProperties'''':{}\r\n}''", span="1339-1355"];
m1_881 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendedComplex()", span="1337-1337"];
m1_215 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="608-608"];
m1_220 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullable(System.Type)", span="237-237"];
m1_212 [cluster="System.Uri.Uri(string, System.UriKind)", file="ConvertUtils.cs", label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0"];
m1_218 [cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", file="ConvertUtils.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)", span="0-0"];
m1_219 [cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="ConvertUtils.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0"];
m1_226 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''minimum'''':5\r\n}''", span="383-386"];
m1_227 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="JValue v = new JValue(new BigInteger(1))", span="388-388"];
m1_228 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="390-390"];
m1_229 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="v.Validate(JsonSchema.Parse(schemaJson), (sender, args) => { validationEventArgs = args; })", span="392-392"];
m1_230 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="394-394"];
m1_232 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="396-396"];
m1_231 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="Assert.AreEqual(''Integer 1 is less than minimum value of 5.'', validationEventArgs.Message)", span="395-395"];
m1_233 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerLessThanMaximumValue_BigInteger()", span="381-381"];
m1_235 [cluster="BigInteger.cstr", file="ConvertUtils.cs", label="Entry BigInteger.cstr", span=""];
m1_70 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="value is string", span="303-303"];
m1_76 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="value is decimal", span="309-309"];
m1_74 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="value is double", span="307-307"];
m1_77 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="return new BigInteger((decimal)value);", span="310-310"];
m1_79 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="return new BigInteger((int)value);", span="312-312"];
m1_82 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="value is uint", span="315-315"];
m1_85 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="return new BigInteger((ulong)value);", span="318-318"];
m1_87 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="return new BigInteger((byte[])value);", span="320-320"];
m1_93 [cluster="string.FormatWith(System.IFormatProvider, object)", file="ConvertUtils.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m1_108 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="ConvertUtils.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m1_110 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="object value", span="358-358"];
m1_112 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="ConvertResult.Success", span="361-361"];
m1_114 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="ConvertResult.CannotConvertNull", span="363-363"];
m1_71 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="return BigInteger.Parse((string)value, CultureInfo.InvariantCulture);", span="304-304"];
m1_75 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="return new BigInteger((double)value);", span="308-308"];
m1_72 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="value is float", span="305-305"];
m1_73 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="return new BigInteger((float)value);", span="306-306"];
m1_78 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="value is int", span="311-311"];
m1_80 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="value is long", span="313-313"];
m1_81 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="return new BigInteger((long)value);", span="314-314"];
m1_83 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="return new BigInteger((uint)value);", span="316-316"];
m1_84 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="value is ulong", span="317-317"];
m1_86 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="value is byte[]", span="319-319"];
m1_88 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="throw new InvalidCastException(''Cannot convert {0} to BigInteger.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="322-322"];
m1_89 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ToBigInteger(object)", span="299-299"];
m1_91 [cluster="BigInteger.cstr", file="ConvertUtils.cs", label="Entry BigInteger.cstr", span=""];
m1_107 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="ConvertUtils.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m1_109 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", span="356-356"];
m1_111 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="TryConvertInternal(initialValue, culture, targetType, out value)", span="359-359"];
m1_113 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="return value;", span="362-362"];
m1_115 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="throw new Exception(''Can not convert null {0} into non-nullable {1}.''.FormatWith(CultureInfo.InvariantCulture, initialValue.GetType(), targetType));", span="364-364"];
m1_116 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="ConvertResult.NotInstantiableType", span="365-365"];
m1_117 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="throw new ArgumentException(''Target type {0} is not a value type or a non-abstract class.''.FormatWith(CultureInfo.InvariantCulture, targetType), ''targetType'');", span="366-366"];
m1_408 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", span="673-673"];
m1_414 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="689-689"];
m1_412 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="687-687"];
m1_415 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="691-691"];
m1_417 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="694-694"];
m1_422 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="700-700"];
m1_409 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':1.1\r\n  }\r\n}''", span="675-681"];
m1_413 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="688-688"];
m1_419 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="696-696"];
m1_410 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="string json = ''[999999999999999999999999999999999999999999999999999999999]''", span="683-683"];
m1_411 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="685-685"];
m1_416 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="692-692"];
m1_418 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="695-695"];
m1_423 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="701-701"];
m1_420 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Assert.AreEqual(@''Integer 999999999999999999999999999999999999999999999999999999999 is not evenly divisible by 1.1. Line 1, position 58.'', validationEventArgs.Message)", span="697-697"];
m1_421 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Assert.AreEqual(''[0]'', validationEventArgs.Path)", span="698-698"];
m1_424 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_Fraction()", span="673-673"];
m1_248 [cluster="lambda expression", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="413-413"];
m1_581 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", span="955-955"];
m1_587 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="974-974"];
m1_585 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="972-972"];
m1_588 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="976-976"];
m1_590 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="979-979"];
m1_593 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="983-983"];
m1_597 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="988-988"];
m1_582 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string''''},\r\n    ''''hobbies'''':{''''type'''':''''string'''',''''required'''':true},\r\n    ''''age'''':{''''type'''':''''integer'''',''''required'''':true}\r\n  }\r\n}''", span="957-966"];
m1_586 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="973-973"];
m1_601 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="993-993"];
m1_583 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="string json = ''{'name':'James'}''", span="968-968"];
m1_584 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="970-970"];
m1_589 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="977-977"];
m1_591 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="980-980"];
m1_592 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="981-981"];
m1_594 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="984-984"];
m1_595 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="985-985"];
m1_598 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="989-989"];
m1_596 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="986-986"];
m1_599 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''Required properties are missing from object: hobbies, age. Line 1, position 16.'', validationEventArgs.Message)", span="990-990"];
m1_600 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="991-991"];
m1_602 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.MissingRequiredProperties()", span="955-955"];
m1_957 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838"];
m1_686 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", span="1126-1126"];
m1_687 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="ConvertUtils.cs", label="string first = @''{\r\n  ''''id'''':''''first'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''firstproperty'''':{''''type'''':''''string'''',''''required'''':true}\r\n  },\r\n  ''''additionalProperties'''':{}\r\n}''", span="1128-1136"];
m1_692 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="ConvertUtils.cs", label="return secondSchema;", span="1153-1153"];
m1_688 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="ConvertUtils.cs", label="string second = @''{\r\n  ''''id'''':''''second'''',\r\n  ''''type'''':''''object'''',\r\n  ''''extends'''':{''''$ref'''':''''first''''},\r\n  ''''properties'''':\r\n  {\r\n    ''''secondproperty'''':{''''type'''':''''string'''',''''required'''':true}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="1138-1147"];
m1_690 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="ConvertUtils.cs", label="JsonSchema firstSchema = JsonSchema.Parse(first, resolver)", span="1150-1150"];
m1_691 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="ConvertUtils.cs", label="JsonSchema secondSchema = JsonSchema.Parse(second, resolver)", span="1151-1151"];
m1_689 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="ConvertUtils.cs", label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="1149-1149"];
m1_693 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.GetExtendedSchema()", span="1126-1126"];
m1_435 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91"];
m1_982 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", span="1716-1716"];
m1_988 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1732-1732"];
m1_986 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1730-1730"];
m1_989 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="reader.Read()", span="1734-1734"];
m1_983 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''integer''''\r\n  },\r\n  ''''maxItems'''':1\r\n}''", span="1718-1724"];
m1_987 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1731-1731"];
m1_984 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="string json = ''[1,2''", span="1726-1726"];
m1_985 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1728-1728"];
m1_990 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1735-1735"];
m1_991 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="reader.ReadAsInt32()", span="1737-1737"];
m1_992 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1738-1738"];
m1_994 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="reader.ReadAsInt32()", span="1741-1741"];
m1_995 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1742-1742"];
m1_997 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="reader.ReadAsInt32()", span="1745-1745"];
m1_998 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1746-1746"];
m1_993 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1739-1739"];
m1_996 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1743-1743"];
m1_999 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1747-1747"];
m1_1000 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArrayIncomplete()", span="1716-1716"];
m1_28 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(1, reader.Depth)", span="102-102"];
m1_29 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="104-104"];
m1_30 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ValidateTypes()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="105-105"];
m1_978 [cluster="Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.ReadAsInt32()", span="410-410"];
m1_14 [cluster="System.Type.IsEnum()", file="ConvertUtils.cs", label="Entry System.Type.IsEnum()", span="161-161"];
m1_43 [cluster="System.Type.GetHashCode()", file="ConvertUtils.cs", label="Entry System.Type.GetHashCode()", span="0-0"];
m1_17 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="ConvertUtils.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m1_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ConvertUtils.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m1_22 [cluster="object.GetType()", file="ConvertUtils.cs", label="Entry object.GetType()", span="0-0"];
m1_27 [cluster="System.IConvertible.GetTypeCode()", file="ConvertUtils.cs", label="Entry System.IConvertible.GetTypeCode()", span="0-0"];
m1_31 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ConvertUtils.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m1_32 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="232-232"];
m1_33 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="ConvertUtils.cs", label="return TimeSpan.Parse(input, CultureInfo.InvariantCulture);", span="235-235"];
m1_34 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.ParseTimeSpan(string)", span="232-232"];
m1_49 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="275-275"];
m1_50 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="ConvertUtils.cs", label="return (_initialType == other._initialType && _targetType == other._targetType);", span="277-277"];
m1_51 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey.Equals(Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey)", span="275-275"];
m1_67 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="87-87"];
m1_68 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="87-87"];
m1_69 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="87-87"];
m1_695 [cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", span="305-305"];
m1_525 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", span="864-864"];
m1_531 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="878-878"];
m1_529 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="876-876"];
m1_532 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="880-880"];
m1_534 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="883-883"];
m1_536 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="886-886"];
m1_526 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''minItems'''':2,\r\n  ''''maxItems'''':3\r\n}''", span="866-870"];
m1_530 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="877-877"];
m1_539 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="890-890"];
m1_527 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="string json = ''[null]''", span="872-872"];
m1_528 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="874-874"];
m1_533 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="881-881"];
m1_535 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="884-884"];
m1_537 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="887-887"];
m1_538 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(''Array item count 1 is less than minimum count of 2. Line 1, position 6.'', validationEventArgs.Message)", span="888-888"];
m1_540 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountLessThanMinimumItems()", span="864-864"];
m1_938 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", span="1651-1651"];
m1_939 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", file="ConvertUtils.cs", label="ExceptionAssert.Throws<JsonSchemaException>(() =>\r\n            {\r\n                JsonSchema s = new JsonSchemaGenerator().Generate(typeof(decimal));\r\n                s.DivisibleBy = 1;\r\n\r\n                JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5.5'')))\r\n                {\r\n                    Schema = s\r\n                };\r\n                reader.ReadAsDecimal();\r\n            }, ''Float 5.5 is not evenly divisible by 1. Line 1, position 3.'')", span="1653-1663"];
m1_940 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsDecimalFailure()", span="1651-1651"];
m1_629 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", span="1037-1037"];
m1_635 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1055-1055"];
m1_633 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1053-1053"];
m1_636 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1057-1057"];
m1_638 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1060-1060"];
m1_641 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1064-1064"];
m1_645 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1069-1069"];
m1_648 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1073-1073"];
m1_652 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1078-1078"];
m1_655 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1082-1082"];
m1_659 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1087-1087"];
m1_630 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''description'''':''''A person'''',\r\n  ''''type'''':''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''':{''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''':false\r\n}''", span="1039-1047"];
m1_634 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1054-1054"];
m1_661 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="1090-1090"];
m1_631 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="string json = ''{'name':'James','additionalProperty1':null,'additionalProperty2':null}''", span="1049-1049"];
m1_632 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1051-1051"];
m1_637 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1058-1058"];
m1_639 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1061-1061"];
m1_640 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''name'', reader.Value.ToString())", span="1062-1062"];
m1_642 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1065-1065"];
m1_643 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''James'', reader.Value.ToString())", span="1066-1066"];
m1_646 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1070-1070"];
m1_647 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''additionalProperty1'', reader.Value.ToString())", span="1071-1071"];
m1_649 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1074-1074"];
m1_650 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, reader.Value)", span="1075-1075"];
m1_653 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1079-1079"];
m1_654 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''additionalProperty2'', reader.Value.ToString())", span="1080-1080"];
m1_656 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1083-1083"];
m1_657 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, reader.Value)", span="1084-1084"];
m1_660 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1088-1088"];
m1_644 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1067-1067"];
m1_651 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''Property 'additionalProperty1' has not been defined and the schema does not allow additional properties. Line 1, position 38.'', validationEventArgs.Message)", span="1076-1076"];
m1_658 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''Property 'additionalProperty2' has not been defined and the schema does not allow additional properties. Line 1, position 65.'', validationEventArgs.Message)", span="1085-1085"];
m1_662 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.DisableAdditionalProperties()", span="1037-1037"];
m1_428 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", span="705-705"];
m1_432 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="ConvertUtils.cs", label="a.Validate(JsonSchema.Parse(schemaJson), (sender, args) => { validationEventArgs = args; })", span="719-719"];
m1_429 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number'''',\r\n    ''''divisibleBy'''':1.1\r\n  }\r\n}''", span="707-713"];
m1_430 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="ConvertUtils.cs", label="JArray a = new JArray(new JValue(new BigInteger(0)))", span="715-715"];
m1_431 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="ConvertUtils.cs", label="ValidationEventArgs validationEventArgs = null", span="717-717"];
m1_433 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="ConvertUtils.cs", label="Assert.IsNull(validationEventArgs)", span="721-721"];
m1_434 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.BigIntegerDivisibleBy_FractionWithZeroValue()", span="705-705"];
m1_956 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m1_223 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="369-369"];
m1_685 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ConvertUtils.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_206 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="344-344"];
m1_500 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", span="828-828"];
m1_506 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="842-842"];
m1_504 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="840-840"];
m1_507 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="844-844"];
m1_509 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="847-847"];
m1_511 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="849-849"];
m1_513 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="851-851"];
m1_515 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="853-853"];
m1_517 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="856-856"];
m1_501 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''minItems'''':2,\r\n  ''''maxItems'''':3\r\n}''", span="830-834"];
m1_505 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="841-841"];
m1_520 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="860-860"];
m1_502 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="string json = ''[null,null,null,null]''", span="836-836"];
m1_503 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="838-838"];
m1_508 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="845-845"];
m1_510 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="848-848"];
m1_512 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="850-850"];
m1_514 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="852-852"];
m1_516 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="854-854"];
m1_518 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="857-857"];
m1_519 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Assert.AreEqual(''Array item count 4 exceeds maximum count of 3. Line 1, position 21.'', validationEventArgs.Message)", span="858-858"];
m1_521 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ArrayCountGreaterThanMaximumItems()", span="828-828"];
m1_135 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="232-232"];
m1_137 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", span="243-243"];
m1_138 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''minLength'''':5,\r\n  ''''maxLength'''':10\r\n}''", span="245-249"];
m1_139 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="string json = '''The quick brown fox jumps over the lazy dog.'''", span="251-251"];
m1_140 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="253-253"];
m1_141 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="255-255"];
m1_143 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="257-257"];
m1_144 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="259-259"];
m1_145 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="260-260"];
m1_146 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Assert.AreEqual(''String 'The quick brown fox jumps over the lazy dog.' exceeds maximum length of 10. Line 1, position 46.'', validationEventArgs.Message)", span="261-261"];
m1_148 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", span="243-243"];
m1_149 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="256-256"];
m1_151 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="256-256"];
m1_175 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="283-283"];
m1_176 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="283-283"];
m1_190 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="320-320"];
m1_191 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="320-320"];
m1_195 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="string json = ''10''", span="339-339"];
m1_196 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="341-341"];
m1_198 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="344-344"];
m1_136 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="232-232"];
m1_142 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="256-256"];
m1_147 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="263-263"];
m1_150 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="256-256"];
m1_174 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="283-283"];
m1_193 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", span="332-332"];
m1_192 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="320-320"];
m1_194 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''integer'''',\r\n  ''''maximum'''':5\r\n}''", span="334-337"];
m1_197 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="343-343"];
m1_199 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="345-345"];
m1_201 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="348-348"];
m1_200 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="347-347"];
m1_202 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Assert.AreEqual(''Integer 10 exceeds maximum value of 5. Line 1, position 2.'', validationEventArgs.Message)", span="349-349"];
m1_203 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntegerGreaterThanMaximumValue()", file="ConvertUtils.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="350-350"];
m1_224 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="369-369"];
m1_439 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", span="726-726"];
m1_445 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="741-741"];
m1_443 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="739-739"];
m1_446 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="743-743"];
m1_448 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="746-746"];
m1_450 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="749-749"];
m1_440 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''number''''\r\n  }\r\n}''", span="728-733"];
m1_444 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="740-740"];
m1_441 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="string json = ''[1]''", span="735-735"];
m1_442 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="737-737"];
m1_447 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="744-744"];
m1_449 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="747-747"];
m1_451 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="750-750"];
m1_452 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Assert.IsNull(validationEventArgs)", span="752-752"];
m1_453 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.IntValidForNumber()", span="726-726"];
m1_225 [cluster="System.Type.IsAbstract()", file="ConvertUtils.cs", label="Entry System.Type.IsAbstract()", span="513-513"];
m1_913 [cluster="Unk.AreEquivalent", file="ConvertUtils.cs", label="Entry Unk.AreEquivalent", span=""];
m1_133 [cluster="Unk.IsNotNull", file="ConvertUtils.cs", label="Entry Unk.IsNotNull", span=""];
m1_134 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="232-232"];
m1_544 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", span="894-894"];
m1_550 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="909-909"];
m1_548 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="907-907"];
m1_551 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="911-911"];
m1_545 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''string'''',\r\n  ''''minItems'''':2,\r\n  ''''maxItems'''':3,\r\n  ''''items'''':{}\r\n}''", span="896-901"];
m1_549 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="908-908"];
m1_554 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="915-915"];
m1_546 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="string json = ''[null,null,null,null]''", span="903-903"];
m1_547 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="905-905"];
m1_552 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="912-912"];
m1_553 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="Assert.AreEqual(@''Invalid type. Expected String but got Array. Line 1, position 1.'', validationEventArgs.Message)", span="913-913"];
m1_555 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.InvalidDataType()", span="894-894"];
m1_908 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", span="50-50"];
m1_900 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ConvertUtils.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_887 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", span="1475-1475"];
m1_893 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schema)", span="1581-1581"];
m1_891 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1579-1579"];
m1_894 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="reader.Read()", span="1583-1583"];
m1_888 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="string schema = @''{\r\n  ''''id'''':''''ErrorDemo.Database'''',\r\n  ''''properties'''':{\r\n    ''''ErrorDemoDatabase'''':{\r\n      ''''type'''':''''object'''',\r\n      ''''required'''':true,\r\n      ''''properties'''':{\r\n        ''''URL'''':{\r\n          ''''type'''':''''string'''',\r\n          ''''required'''':true\r\n        },\r\n        ''''Version'''':{\r\n          ''''type'''':''''string'''',\r\n          ''''required'''':true\r\n        },\r\n        ''''Date'''':{\r\n          ''''type'''':''''string'''',\r\n          ''''format'''':''''date-time'''',\r\n          ''''required'''':true\r\n        },\r\n        ''''MACLevels'''':{\r\n          ''''type'''':''''object'''',\r\n          ''''required'''':true,\r\n          ''''properties'''':{\r\n            ''''MACLevel'''':{\r\n              ''''type'''':''''array'''',\r\n              ''''required'''':true,\r\n              ''''items'''':[\r\n                {\r\n                  ''''required'''':true,\r\n                  ''''properties'''':{\r\n                    ''''IDName'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    },\r\n                    ''''Order'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    },\r\n                    ''''IDDesc'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    },\r\n                    ''''IsActive'''':{\r\n                      ''''type'''':''''string'''',\r\n                      ''''required'''':true\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="1477-1533"];
m1_892 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs.Add(args); }", span="1580-1580"];
m1_889 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="string json = @''{\r\n  ''''ErrorDemoDatabase'''':{\r\n    ''''URL'''':''''localhost:3164'''',\r\n    ''''Version'''':''''1.0'''',\r\n    ''''Date'''':''''6.23.2010, 9:35:18.121'''',\r\n    ''''MACLevels'''':{\r\n      ''''MACLevel'''':[\r\n        {\r\n          ''''@IDName'''':''''Developer'''',\r\n          ''''Order'''':''''0'''',\r\n          ''''IDDesc'''':''''DeveloperDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''Technician'''',\r\n          ''''Order'''':''''1'''',\r\n          ''''IDDesc'''':''''TechnicianDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''Administrator'''',\r\n          ''''Order'''':''''2'''',\r\n          ''''IDDesc'''':''''AdministratorDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''PowerUser'''',\r\n          ''''Order'''':''''3'''',\r\n          ''''IDDesc'''':''''PowerUserDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        },\r\n        {\r\n          ''''IDName'''':''''Operator'''',\r\n          ''''Order'''':''''4'''',\r\n          ''''IDDesc'''':''''OperatorDesc'''',\r\n          ''''IsActive'''':''''True''''\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}''", span="1535-1575"];
m1_890 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="IList<ValidationEventArgs> validationEventArgs = new List<ValidationEventArgs>()", span="1577-1577"];
m1_895 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="Assert.AreEqual(1, validationEventArgs.Count)", span="1587-1587"];
m1_896 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.DuplicateErrorsTest()", span="1475-1475"];
m1_696 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", span="1157-1157"];
m1_699 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1163-1163"];
m1_702 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1167-1167"];
m1_704 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1170-1170"];
m1_708 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1175-1175"];
m1_712 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1180-1180"];
m1_716 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1185-1185"];
m1_720 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1190-1190"];
m1_724 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1195-1195"];
m1_727 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1199-1199"];
m1_731 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1204-1204"];
m1_734 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1208-1208"];
m1_736 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.IsFalse(reader.Read())", span="1211-1211"];
m1_697 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="string json = ''{'firstproperty':'blah','secondproperty':'blah2','additional':'blah3','additional2':'blah4'}''", span="1159-1159"];
m1_698 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1161-1161"];
m1_700 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1164-1164"];
m1_701 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="reader.Schema = GetExtendedSchema()", span="1165-1165"];
m1_703 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1168-1168"];
m1_705 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1171-1171"];
m1_706 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''firstproperty'', reader.Value.ToString())", span="1172-1172"];
m1_709 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1176-1176"];
m1_710 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''blah'', reader.Value.ToString())", span="1177-1177"];
m1_713 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1181-1181"];
m1_714 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''secondproperty'', reader.Value.ToString())", span="1182-1182"];
m1_717 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1186-1186"];
m1_718 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''blah2'', reader.Value.ToString())", span="1187-1187"];
m1_721 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1191-1191"];
m1_722 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''additional'', reader.Value.ToString())", span="1192-1192"];
m1_725 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1196-1196"];
m1_726 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''blah3'', reader.Value.ToString())", span="1197-1197"];
m1_728 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1200-1200"];
m1_729 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''additional2'', reader.Value.ToString())", span="1201-1201"];
m1_732 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1205-1205"];
m1_733 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''blah4'', reader.Value.ToString())", span="1206-1206"];
m1_735 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1209-1209"];
m1_707 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1173-1173"];
m1_711 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1178-1178"];
m1_715 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1183-1183"];
m1_719 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1188-1188"];
m1_723 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''Property 'additional' has not been defined and the schema does not allow additional properties. Line 1, position 62.'', validationEventArgs.Message)", span="1193-1193"];
m1_730 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''Property 'additional2' has not been defined and the schema does not allow additional properties. Line 1, position 84.'', validationEventArgs.Message)", span="1202-1202"];
m1_737 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsDisallowAdditionProperties()", span="1157-1157"];
m1_1004 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CloseAlsoClosesUnderlyingReader()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.CloseAlsoClosesUnderlyingReader()", span="1751-1751"];
m1_1006 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CloseAlsoClosesUnderlyingReader()", file="ConvertUtils.cs", label="var validatingReader = new JsonValidatingReader(underlyingReader) { CloseInput = true }", span="1754-1754"];
m1_1008 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CloseAlsoClosesUnderlyingReader()", file="ConvertUtils.cs", label="Assert.IsTrue(underlyingReader.IsClosed)", span="1758-1758"];
m1_1005 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CloseAlsoClosesUnderlyingReader()", file="ConvertUtils.cs", label="var underlyingReader = new TestObjects.JsonReaderStubWithIsClosed()", span="1753-1753"];
m1_1007 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CloseAlsoClosesUnderlyingReader()", file="ConvertUtils.cs", label="validatingReader.Close()", span="1756-1756"];
m1_1009 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.CloseAlsoClosesUnderlyingReader()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.CloseAlsoClosesUnderlyingReader()", span="1751-1751"];
m1_559 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", span="919-919"];
m1_565 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="935-935"];
m1_563 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="933-933"];
m1_566 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="937-937"];
m1_568 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="940-940"];
m1_571 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="944-944"];
m1_574 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="948-948"];
m1_560 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''disallow'''':[''''number'''']\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="921-927"];
m1_564 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="934-934"];
m1_576 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="951-951"];
m1_561 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="string json = ''['pie',1.1]''", span="929-929"];
m1_562 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="931-931"];
m1_567 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="938-938"];
m1_569 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="941-941"];
m1_572 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="945-945"];
m1_575 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="949-949"];
m1_570 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="942-942"];
m1_573 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Assert.AreEqual(@''Type Float is disallowed. Line 1, position 10.'', validationEventArgs.Message)", span="946-946"];
m1_577 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.StringDisallowed()", span="919-919"];
m1_883 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1403-1407"];
m1_928 [cluster="lambda expression", file="ConvertUtils.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5'')))\r\n                {\r\n                    Schema = s\r\n                }", span="1628-1631"];
m1_944 [cluster="lambda expression", file="ConvertUtils.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@''5.5'')))\r\n                {\r\n                    Schema = s\r\n                }", span="1658-1661"];
m1_436 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="719-719"];
m1_926 [cluster="lambda expression", file="ConvertUtils.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(int))", span="1625-1625"];
m1_927 [cluster="lambda expression", file="ConvertUtils.cs", label="s.Maximum = 2", span="1626-1626"];
m1_929 [cluster="lambda expression", file="ConvertUtils.cs", label="reader.ReadAsInt32()", span="1632-1632"];
m1_942 [cluster="lambda expression", file="ConvertUtils.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(decimal))", span="1655-1655"];
m1_943 [cluster="lambda expression", file="ConvertUtils.cs", label="s.DivisibleBy = 1", span="1656-1656"];
m1_945 [cluster="lambda expression", file="ConvertUtils.cs", label="reader.ReadAsDecimal()", span="1662-1662"];
m1_119 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="throw new InvalidOperationException(''Can not convert from {0} to {1}.''.FormatWith(CultureInfo.InvariantCulture, initialValue.GetType(), targetType));", span="368-368"];
m1_368 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="584-584"];
m1_386 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="625-625"];
m1_406 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="655-655"];
m1_426 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="688-688"];
m1_438 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="719-719"];
m1_437 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="719-719"];
m1_455 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="740-740"];
m1_475 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="772-772"];
m1_498 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="806-806"];
m1_523 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="841-841"];
m1_542 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="877-877"];
m1_557 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="908-908"];
m1_579 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="934-934"];
m1_604 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="973-973"];
m1_627 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="1015-1015"];
m1_664 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="1054-1054"];
m1_682 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="1113-1113"];
m1_780 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="1249-1249"];
m1_817 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="1295-1295"];
m1_898 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs.Add(args)", span="1580-1580"];
m1_980 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="1695-1695"];
m1_1002 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="1731-1731"];
m1_739 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="1164-1164"];
m1_755 [cluster="lambda expression", file="ConvertUtils.cs", label="errors.Add(args.Message)", span="1222-1222"];
m1_885 [cluster="lambda expression", file="ConvertUtils.cs", label="errors.Add(validationEventArgs.Path + '' - '' + validationEventArgs.Message)", span="1406-1406"];
m1_884 [cluster="lambda expression", file="ConvertUtils.cs", label="validationEventArgs = args", span="1405-1405"];
m1_925 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1623-1633"];
m1_930 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1623-1633"];
m1_941 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1653-1663"];
m1_946 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1653-1663"];
m1_118 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="ConvertResult.NoValidConversion", span="367-367"];
m1_120 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.Convert(object, System.Globalization.CultureInfo, System.Type)", file="ConvertUtils.cs", label="throw new InvalidOperationException(''Unexpected conversion result.'');", span="370-370"];
m1_367 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="584-584"];
m1_369 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="584-584"];
m1_385 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="625-625"];
m1_387 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="625-625"];
m1_405 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="655-655"];
m1_407 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="655-655"];
m1_425 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="688-688"];
m1_427 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="688-688"];
m1_454 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="740-740"];
m1_456 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="740-740"];
m1_474 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="772-772"];
m1_476 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="772-772"];
m1_497 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="806-806"];
m1_499 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="806-806"];
m1_522 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="841-841"];
m1_524 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="841-841"];
m1_541 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="877-877"];
m1_543 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="877-877"];
m1_556 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="908-908"];
m1_558 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="908-908"];
m1_578 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="934-934"];
m1_580 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="934-934"];
m1_603 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="973-973"];
m1_605 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="973-973"];
m1_626 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1015-1015"];
m1_628 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1015-1015"];
m1_663 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1054-1054"];
m1_665 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1054-1054"];
m1_683 [cluster="lambda expression", file="ConvertUtils.cs", label="errors.Add(validationEventArgs.Message)", span="1114-1114"];
m1_681 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1111-1115"];
m1_684 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1111-1115"];
m1_779 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1249-1249"];
m1_781 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1249-1249"];
m1_816 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1295-1295"];
m1_818 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1295-1295"];
m1_897 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1580-1580"];
m1_899 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1580-1580"];
m1_979 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1695-1695"];
m1_981 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1695-1695"];
m1_1001 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1731-1731"];
m1_1003 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1731-1731"];
m1_738 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1164-1164"];
m1_740 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1164-1164"];
m1_754 [cluster="lambda expression", file="ConvertUtils.cs", label="Entry lambda expression", span="1222-1222"];
m1_756 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1222-1222"];
m1_886 [cluster="lambda expression", file="ConvertUtils.cs", label="Exit lambda expression", span="1403-1407"];
m1_457 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", span="756-756"];
m1_463 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="773-773"];
m1_461 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="771-771"];
m1_464 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="775-775"];
m1_466 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="778-778"];
m1_470 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="783-783"];
m1_458 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''null'''',\r\n    ''''enum'''':[]\r\n  },\r\n  ''''maxItems'''':3\r\n}''", span="758-765"];
m1_462 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="772-772"];
m1_472 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="786-786"];
m1_459 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="string json = ''[null]''", span="767-767"];
m1_460 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="769-769"];
m1_465 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="776-776"];
m1_467 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="779-779"];
m1_471 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="784-784"];
m1_468 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(@''Value null is not defined in enum. Line 1, position 5.'', validationEventArgs.Message)", span="780-780"];
m1_469 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Assert.AreEqual(''[0]'', validationEventArgs.Path)", span="781-781"];
m1_473 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.NullNotInEnum()", span="756-756"];
m1_901 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", span="1591-1591"];
m1_904 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="ConvertUtils.cs", label="JsonReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(@'''''''' + Convert.ToBase64String(data) + @'''''''')))\r\n            {\r\n                Schema = s\r\n            }", span="1597-1600"];
m1_902 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="ConvertUtils.cs", label="JsonSchema s = new JsonSchemaGenerator().Generate(typeof(byte[]))", span="1593-1593"];
m1_903 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="ConvertUtils.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world'')", span="1595-1595"];
m1_905 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="ConvertUtils.cs", label="byte[] bytes = reader.ReadAsBytes()", span="1601-1601"];
m1_906 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="ConvertUtils.cs", label="CollectionAssert.AreEquivalent(data, bytes)", span="1603-1603"];
m1_907 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsBytes()", span="1591-1591"];
m1_666 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", span="1094-1094"];
m1_673 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1116-1116"];
m1_671 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1110-1110"];
m1_674 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1118-1118"];
m1_667 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''extends'''':{\r\n    ''''type'''':''''string'''',\r\n    ''''minLength'''':5,\r\n    ''''maxLength'''':10\r\n  },\r\n  ''''maxLength'''':9\r\n}''", span="1096-1103"];
m1_672 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) =>\r\n            {\r\n                validationEventArgs = args;\r\n                errors.Add(validationEventArgs.Message);\r\n            }", span="1111-1115"];
m1_678 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Assert.IsNotNull(validationEventArgs)", span="1123-1123"];
m1_669 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="string json = '''The quick brown fox jumps over the lazy dog.'''", span="1106-1106"];
m1_670 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1108-1108"];
m1_675 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1119-1119"];
m1_676 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Assert.AreEqual(1, errors.Count)", span="1120-1120"];
m1_677 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Assert.AreEqual(''String 'The quick brown fox jumps over the lazy dog.' exceeds maximum length of 9. Line 1, position 46.'', errors[0])", span="1121-1121"];
m1_668 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="List<string> errors = new List<string>()", span="1105-1105"];
m1_679 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ExtendsStringGreaterThanMaximumLength()", span="1094-1094"];
m1_680 [cluster="System.Collections.Generic.List<T>.List()", file="ConvertUtils.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_937 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="739-739"];
m1_782 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", span="1274-1274"];
m1_788 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1296-1296"];
m1_786 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1294-1294"];
m1_789 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1298-1298"];
m1_791 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1301-1301"];
m1_794 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1305-1305"];
m1_796 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1308-1308"];
m1_799 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1312-1312"];
m1_801 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1315-1315"];
m1_804 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1319-1319"];
m1_807 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1323-1323"];
m1_810 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1327-1327"];
m1_812 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1330-1330"];
m1_814 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.IsFalse(reader.Read())", span="1333-1333"];
m1_783 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''object'''',\r\n  ''''patternProperties'''': {\r\n     ''''hi'''': {''''type'''':''''string''''},\r\n     ''''ho'''': {''''type'''':''''string''''}\r\n  },\r\n  ''''additionalProperties'''': false\r\n}''", span="1276-1283"];
m1_787 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1295-1295"];
m1_784 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="string json = @''{\r\n  ''''hi'''': ''''A string!'''',\r\n  ''''hide'''': ''''A string!'''',\r\n  ''''ho'''': 1,\r\n  ''''hey'''': ''''A string!''''\r\n}''", span="1285-1290"];
m1_785 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1292-1292"];
m1_790 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1299-1299"];
m1_792 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1302-1302"];
m1_795 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1306-1306"];
m1_797 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1309-1309"];
m1_800 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1313-1313"];
m1_802 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1316-1316"];
m1_805 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1320-1320"];
m1_808 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1324-1324"];
m1_811 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1328-1328"];
m1_813 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1331-1331"];
m1_793 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1303-1303"];
m1_798 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1310-1310"];
m1_803 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1317-1317"];
m1_806 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''Invalid type. Expected String but got Integer. Line 4, position 9.'', validationEventArgs.Message)", span="1321-1321"];
m1_809 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Assert.AreEqual(''Property 'hey' has not been defined and the schema does not allow additional properties. Line 5, position 8.'', validationEventArgs.Message)", span="1325-1325"];
m1_815 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.PatternPropertiesNoAdditionalProperties()", span="1274-1274"];
m1_958 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", span="1680-1680"];
m1_964 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1696-1696"];
m1_962 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1694-1694"];
m1_965 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="reader.Read()", span="1698-1698"];
m1_959 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''':{\r\n    ''''type'''':''''integer''''\r\n  },\r\n  ''''maxItems'''':1\r\n}''", span="1682-1688"];
m1_963 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1695-1695"];
m1_960 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="string json = ''[1,2]''", span="1690-1690"];
m1_961 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1692-1692"];
m1_966 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1699-1699"];
m1_967 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="reader.ReadAsInt32()", span="1701-1701"];
m1_968 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1702-1702"];
m1_970 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="reader.ReadAsInt32()", span="1705-1705"];
m1_971 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1706-1706"];
m1_973 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="reader.ReadAsInt32()", span="1709-1709"];
m1_974 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1710-1710"];
m1_969 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1703-1703"];
m1_972 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Assert.AreEqual(null, validationEventArgs)", span="1707-1707"];
m1_975 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Assert.AreEqual(''Array item count 2 exceeds maximum count of 1. Line 1, position 5.'', validationEventArgs.Message)", span="1711-1711"];
m1_976 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Assert.AreEqual('''', validationEventArgs.Path)", span="1712-1712"];
m1_977 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.ReadAsInt32InArray()", span="1680-1680"];
m1_1011 [cluster="Newtonsoft.Json.JsonValidatingReader.Close()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonValidatingReader.Close()", span="357-357"];
m1_912 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="508-508"];
m1_757 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", span="1236-1236"];
m1_763 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="reader.Schema = JsonSchema.Parse(schemaJson)", span="1250-1250"];
m1_761 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="JsonValidatingReader reader = new JsonValidatingReader(new JsonTextReader(new StringReader(json)))", span="1248-1248"];
m1_764 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1252-1252"];
m1_766 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1255-1255"];
m1_769 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1259-1259"];
m1_772 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1263-1263"];
m1_775 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.IsTrue(reader.Read())", span="1267-1267"];
m1_777 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.IsFalse(reader.Read())", span="1270-1270"];
m1_758 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="string schemaJson = @''{\r\n  ''''type'''':''''array'''',\r\n  ''''items'''': [{''''type'''':''''string''''},{''''type'''':''''integer''''}],\r\n  ''''additionalItems'''': false\r\n}''", span="1238-1242"];
m1_762 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="reader.ValidationEventHandler += (sender, args) => { validationEventArgs = args; }", span="1249-1249"];
m1_759 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="string json = @''[1, 'a', null]''", span="1244-1244"];
m1_760 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Json.Schema.ValidationEventArgs validationEventArgs = null", span="1246-1246"];
m1_765 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1253-1253"];
m1_767 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1256-1256"];
m1_770 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1260-1260"];
m1_773 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="1264-1264"];
m1_776 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1268-1268"];
m1_768 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.AreEqual(''Invalid type. Expected String but got Integer. Line 1, position 2.'', validationEventArgs.Message)", span="1257-1257"];
m1_771 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.AreEqual(''Invalid type. Expected Integer but got String. Line 1, position 7.'', validationEventArgs.Message)", span="1261-1261"];
m1_774 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Assert.AreEqual(''Index 3 has not been defined and the schema does not allow additional items. Line 1, position 13.'', validationEventArgs.Message)", span="1265-1265"];
m1_778 [cluster="Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", file="ConvertUtils.cs", label="Exit Newtonsoft.Json.Tests.JsonValidatingReaderTests.NoAdditionalItems()", span="1236-1236"];
m1_909 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="130-130"];
m1_910 [cluster="System.Text.Encoding.GetBytes(string)", file="ConvertUtils.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m1_924 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="ConvertUtils.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m1_1013 [file="ConvertUtils.cs", label="Newtonsoft.Json.Tests.JsonValidatingReaderTests", span=""];
m1_1016 [file="ConvertUtils.cs", label=validationEventArgs, span=""];
m1_1014 [file="ConvertUtils.cs", label=errors, span=""];
m1_1015 [file="ConvertUtils.cs", label=errors, span=""];
m1_1012 [file="ConvertUtils.cs", label=errors, span=""];
m2_20 [cluster="System.AppDomain.GetAssemblies()", file="DefaultSerializationBinder.cs", label="Entry System.AppDomain.GetAssemblies()", span="0-0"];
m2_25 [cluster="System.Type.GetType(string)", file="DefaultSerializationBinder.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m2_45 [cluster="Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Utilities.ThreadSafeStore<TKey, TValue>.Get(TKey)", span="50-50"];
m2_46 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", span="144-144"];
m2_47 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="assemblyName = serializedType.Assembly.FullName", span="150-150"];
m2_48 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="typeName = serializedType.FullName", span="151-151"];
m2_49 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToName(System.Type, out string, out string)", span="144-144"];
m2_33 [cluster="string.GetHashCode()", file="DefaultSerializationBinder.cs", label="Entry string.GetHashCode()", span="0-0"];
m2_0 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="42-42"];
m2_1 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="string assemblyName = typeNameKey.AssemblyName", span="44-44"];
m2_2 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="string typeName = typeNameKey.TypeName", span="45-45"];
m2_3 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assemblyName != null", span="47-47"];
m2_5 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assembly = Assembly.LoadWithPartialName(assemblyName)", span="55-55"];
m2_9 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="a.FullName == assemblyName", span="70-70"];
m2_12 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Could not load assembly '{0}'.''.FormatWith(CultureInfo.InvariantCulture, assemblyName));", span="80-80"];
m2_13 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Type type = assembly.GetType(typeName)", span="82-82"];
m2_15 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="throw new JsonSerializationException(''Could not find type '{0}' in assembly '{1}'.''.FormatWith(CultureInfo.InvariantCulture, typeName, assembly.FullName));", span="84-84"];
m2_17 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="return Type.GetType(typeName);", span="90-90"];
m2_4 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Assembly assembly", span="49-49"];
m2_6 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assembly == null", span="64-64"];
m2_11 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assembly == null", span="79-79"];
m2_7 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Assembly[] loadedAssemblies = AppDomain.CurrentDomain.GetAssemblies()", span="67-67"];
m2_8 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label=loadedAssemblies, span="68-68"];
m2_10 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="assembly = a", span="72-72"];
m2_14 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="type == null", span="83-83"];
m2_16 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="return type;", span="86-86"];
m2_18 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.GetTypeFromTypeNameKey(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="42-42"];
m2_34 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", span="110-110"];
m2_35 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="!(obj is TypeNameKey)", span="112-112"];
m2_37 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="return Equals((TypeNameKey)obj);", span="115-115"];
m2_36 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="return false;", span="113-113"];
m2_38 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(object)", span="110-110"];
m2_30 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", span="105-105"];
m2_31 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", color=green, community=0, file="DefaultSerializationBinder.cs", label="0: return ((AssemblyName != null) ? AssemblyName.GetHashCode() : 0)\r\n                    ^ ((TypeName != null) ? TypeName.GetHashCode() : 0);", span="107-108"];
m2_32 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.GetHashCode()", span="105-105"];
m2_39 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="118-118"];
m2_40 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="return (AssemblyName == other.AssemblyName && TypeName == other.TypeName);", span="120-120"];
m2_41 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.Equals(Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey)", span="118-118"];
m2_42 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", span="132-132"];
m2_43 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="DefaultSerializationBinder.cs", label="return _typeCache.Get(new TypeNameKey(assemblyName, typeName));", span="134-134"];
m2_44 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.BindToType(string, string)", span="132-132"];
m2_23 [cluster="System.Reflection.Assembly.GetType(string)", file="DefaultSerializationBinder.cs", label="Entry System.Reflection.Assembly.GetType(string)", span="0-0"];
m2_24 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="DefaultSerializationBinder.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m2_26 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", span="99-99"];
m2_27 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="AssemblyName = assemblyName", span="101-101"];
m2_28 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="TypeName = typeName", span="102-102"];
m2_29 [cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", file="DefaultSerializationBinder.cs", label="Exit Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey.TypeNameKey(string, string)", span="99-99"];
m2_19 [cluster="System.Reflection.Assembly.LoadWithPartialName(string)", file="DefaultSerializationBinder.cs", label="Entry System.Reflection.Assembly.LoadWithPartialName(string)", span="0-0"];
m2_21 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultSerializationBinder.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m2_22 [cluster="string.FormatWith(System.IFormatProvider, object)", file="DefaultSerializationBinder.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m2_50 [file="DefaultSerializationBinder.cs", label="out Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m2_51 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m2_52 [file="DefaultSerializationBinder.cs", label="ref Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", span=""];
m2_53 [file="DefaultSerializationBinder.cs", label="Newtonsoft.Json.Serialization.DefaultSerializationBinder", span=""];
m3_79 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''Enhanced Leather Armor Boots\'' \''85644\'' )\r\n<img src=rdb://13264>\r\n\r\n#L \''Hacker Tool\'' \''87814\''\r\n<img src=rdb://99282>\r\n\r\n#L \''Clanalizer\'' \''208313\''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''Hacked Leather Armor Boots\'' \''245979\'' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''Apocalypse Leather Armor Boots\'' \''245966\'' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''Apocalypse Leather Armor Boots\'' \''245967\''\r\n#L \''Apocalypse Leather Armor Gloves\'' \''245969\''\r\n#L \''Apocalypse Leather Armor Helmet\'' \''245975\''\r\n#L \''Apocalypse Leather Armor Pants\'' \''245971\''\r\n#L \''Apocalypse Leather Armor Sleeves\'' \''245973\''\r\n#L \''Apocalypse Leather Body Armor\'' \''245965\''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="170-170"];
m3_80 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", span="142-142"];
m3_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SurrogatePairValid()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SurrogatePairValid()", span="174-174"];
m3_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SurrogatePairValid()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="178-178"];
m3_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SurrogatePairValid()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="181-181"];
m3_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SurrogatePairValid()", file="DefaultValueHandlingTests.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="176-176"];
m3_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SurrogatePairValid()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="180-180"];
m3_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SurrogatePairValid()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="183-183"];
m3_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SurrogatePairValid()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="184-184"];
m3_76 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="165-165"];
m3_323 [cluster="System.Text.StringBuilder.StringBuilder()", file="DefaultValueHandlingTests.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m3_58 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(MathUtils.ApproxEquals(0.0, 0.00001))", span="230-230"];
m3_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", span="975-975"];
m3_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="979-979"];
m3_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="r = new JsonTextReader(new StringReader(json2))", span="1001-1001"];
m3_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="981-981"];
m3_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="985-985"];
m3_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="989-989"];
m3_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="993-993"];
m3_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(r.Read())", span="997-997"];
m3_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="1003-1003"];
m3_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="1007-1007"];
m3_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="1011-1011"];
m3_604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="1015-1015"];
m3_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(r.Read())", span="1019-1019"];
m3_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, r.LineNumber)", span="982-982"];
m3_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, r.LinePosition)", span="983-983"];
m3_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, r.LineNumber)", span="986-986"];
m3_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(5, r.LinePosition)", span="987-987"];
m3_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, r.LineNumber)", span="990-990"];
m3_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(9, r.LinePosition)", span="991-991"];
m3_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, r.LineNumber)", span="994-994"];
m3_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(10, r.LinePosition)", span="995-995"];
m3_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, r.LineNumber)", span="1004-1004"];
m3_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, r.LinePosition)", span="1005-1005"];
m3_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, r.LineNumber)", span="1008-1008"];
m3_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(5, r.LinePosition)", span="1009-1009"];
m3_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, r.LineNumber)", span="1012-1012"];
m3_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(9, r.LinePosition)", span="1013-1013"];
m3_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, r.LineNumber)", span="1016-1016"];
m3_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(10, r.LinePosition)", span="1017-1017"];
m3_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="string json1 = ''{'a':'bc'}''", span="977-977"];
m3_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="string json2 = ''\n{'a':'bc'}''", span="999-999"];
m3_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LinePositionOnNewLine()", span="975-975"];
m3_615 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="33-33"];
m3_499 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="DefaultValueHandlingTests.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m3_552 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DefaultValueHandlingTests.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m3_59 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.ApproxEquals()", span="224-224"];
m3_61 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", span="142-142"];
m3_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="167-167"];
m3_332 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="1050-1050"];
m3_119 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="DefaultValueHandlingTests.cs", label="IntValue1 = int.MaxValue", span="380-380"];
m3_121 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", span="374-374"];
m3_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", file="DefaultValueHandlingTests.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="251-251"];
m3_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", span=""];
m3_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(ms.CanRead)", span="253-253"];
m3_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(ms.CanRead)", span="255-255"];
m3_120 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate.DefaultValueHandlingDeserializePopulate()", file="DefaultValueHandlingTests.cs", label="IntValue2 = int.MinValue", span="381-381"];
m3_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", span=""];
m3_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", file="DefaultValueHandlingTests.cs", label="ms = new MemoryStream()", span="250-250"];
m3_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", file="DefaultValueHandlingTests.cs", label="reader.Close()", span="254-254"];
m3_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", span=""];
m3_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.CloseInput()", span="241-241"];
m3_368 [cluster="System.Convert.ToInt32(char)", file="DefaultValueHandlingTests.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m3_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="103-103"];
m3_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(10, jsonTextReader.LinePosition)", span="104-104"];
m3_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", file="DefaultValueHandlingTests.cs", label="json = ''\n{\''a\'':\n\''bc\'',\''d\'':true\n}''", span="106-106"];
m3_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="110-110"];
m3_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", file="DefaultValueHandlingTests.cs", label="jsonTextReader = new JsonTextReader(new StringReader(json))", span="108-108"];
m3_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonTextReader.TokenType)", span="111-111"];
m3_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, jsonTextReader.LineNumber)", span="112-112"];
m3_93 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(int.MaxValue, o.IntValue1)", span="296-296"];
m3_273 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.FakeArrayPool.FakeArrayPool()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.FakeArrayPool.FakeArrayPool()", span="34-34"];
m3_498 [cluster="Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.JsonTextReaderTests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="44-44"];
m3_553 [cluster="double.ToString(System.IFormatProvider)", file="DefaultValueHandlingTests.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m3_275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", span="525-525"];
m3_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="536-536"];
m3_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="540-540"];
m3_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="551-551"];
m3_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, arrayPool.FreeArrays.Count)", span="552-552"];
m3_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="string json = @''{\r\n              ''''CPU'''': ''''Intel?\nYes'''',\r\n              ''''Description'''': ''''Amazin''", span="527-529"];
m3_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="FakeArrayPool arrayPool = new FakeArrayPool()", span="531-531"];
m3_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="reader.ArrayPool = arrayPool", span="538-538"];
m3_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="Assert.Fail()", span="545-545"];
m3_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest_WithError()", span="525-525"];
m3_576 [cluster="System.IO.StringWriter.ToString()", file="DefaultValueHandlingTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m3_132 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="2509-2509"];
m3_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", span="489-489"];
m3_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="505-505"];
m3_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="509-509"];
m3_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, arrayPool.UsedArrays.Count)", span="520-520"];
m3_270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(6, arrayPool.FreeArrays.Count)", span="521-521"];
m3_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="string json = @''{\r\n              ''''CPU'''': ''''Intel'''',\r\n              ''''Description'''': ''''Amazing!\nBuy now!'''',\r\n              ''''Drives'''': [\r\n                ''''DVD read/writer'''',\r\n                ''''500 gigabyte hard drive'''',\r\n                ''''Amazing Drive'' + new string('!', 9000) + @''''''\r\n              ]\r\n            }''", span="491-499"];
m3_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="i < 1000", span="503-503"];
m3_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="reader.ArrayPool = arrayPool", span="507-507"];
m3_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="(i + 1) % 100 == 0", span="514-514"];
m3_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="FakeArrayPool arrayPool = new FakeArrayPool()", span="501-501"];
m3_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="int i = 0", span="503-503"];
m3_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="i++", span="503-503"];
m3_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="Console.WriteLine(''Allocated buffers: '' + arrayPool.FreeArrays.Count)", span="516-516"];
m3_271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.BufferTest()", span="489-489"];
m3_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="0: Assert.AreEqual(1, jsonTextReader.LinePosition)", span="74-74"];
m3_324 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="DefaultValueHandlingTests.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m3_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, jsonTextReader.LinePosition)", span="138-138"];
m3_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LineInfoAndNewLines()", span="65-65"];
m3_56 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m3_57 [cluster="System.IO.StringReader.StringReader(string)", file="DefaultValueHandlingTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m3_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="160-160"];
m3_133 [cluster="Unk.IsFalse", file="DefaultValueHandlingTests.cs", label="Entry Unk.IsFalse", span=""];
m3_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="string json = @''{''''recipe_id'''':''''12'''',''''recipe_name'''':''''Apocalypse Leather Armors'''',''''recipe_text'''':''''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L \''''Enhanced Leather Armor Boots\'''' \''''85644\'''' )\r\n<img src=rdb:\/\/13264>\r\n\r\n#L \''''Hacker Tool\'''' \''''87814\''''\r\n<img src=rdb:\/\/99282>\r\n\r\n#L \''''Clanalizer\'''' \''''208313\''''\r\n<img src=rdb:\/\/156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L \''''Hacked Leather Armor Boots\'''' \''''245979\'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb:\/\/13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L \''''Apocalypse Leather Armor Boots\'''' \''''245966\'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L \''''Apocalypse Leather Armor Boots\'''' \''''245967\''''\r\n#L \''''Apocalypse Leather Armor Gloves\'''' \''''245969\''''\r\n#L \''''Apocalypse Leather Armor Helmet\'''' \''''245975\''''\r\n#L \''''Apocalypse Leather Armor Pants\'''' \''''245971\''''\r\n#L \''''Apocalypse Leather Armor Sleeves\'''' \''''245973\''''\r\n#L \''''Apocalypse Leather Body Armor\'''' \''''245965\''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'''',''''recipe_author'''':null}''", span="144-144"];
m3_95 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(int.MaxValue, o.IntValue3)", span="298-298"];
m3_96 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Derp!'', o.ClassValue.Derp)", span="299-299"];
m3_97 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", span="287-287"];
m3_98 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", span="303-303"];
m3_99 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="string json = @''{}''", span="305-305"];
m3_100 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="var o = JsonConvert.DeserializeObject<DefaultValueHandlingDeserializePopulate>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="307-310"];
m3_101 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, o.IntValue1)", span="312-312"];
m3_102 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, o.IntValue2)", span="313-313"];
m3_103 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(null, o.ClassValue)", span="314-314"];
m3_104 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithPopulate()", span="303-303"];
m3_105 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", span="319-319"];
m3_106 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="string str = ''{}''", span="321-321"];
m3_107 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="TestClass obj = JsonConvert.DeserializeObject<TestClass>(str, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="322-325"];
m3_108 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''fff'', obj.Field1)", span="327-327"];
m3_555 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="1016-1016"];
m3_0 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", span="49-49"];
m3_1 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="2: Invoice invoice = new Invoice\r\n            {\r\n                Company = ''Acme Ltd.'',\r\n                Amount = 50.0m,\r\n                Paid = false,\r\n                FollowUpDays = 30,\r\n                FollowUpEmailAddress = string.Empty,\r\n                PaidDate = null\r\n            }", span="51-59"];
m3_2 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="0: string included = JsonConvert.SerializeObject(invoice,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Include })", span="61-63"];
m3_3 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="1: Assert.AreEqual(@''{\r\n  ''''Company'''': ''''Acme Ltd.'''',\r\n  ''''Amount'''': 50.0,\r\n  ''''Paid'''': false,\r\n  ''''PaidDate'''': null,\r\n  ''''FollowUpDays'''': 30,\r\n  ''''FollowUpEmailAddress'''': ''''''''\r\n}'', included)", span="65-72"];
m3_4 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="1: Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.Include()", span="49-49"];
m3_5 [cluster="Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="0: Entry Newtonsoft.Json.Tests.TestObjects.Invoice.Invoice()", span="30-30"];
m3_7 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", color=green, community=0, file="DefaultValueHandlingTests.cs", label="1: Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="593-593"];
m3_8 [cluster="Unk.AreEqual", color=green, community=0, file="DefaultValueHandlingTests.cs", label="1: Entry Unk.AreEqual", span=""];
m3_9 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="0: Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", span="76-76"];
m3_10 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="2: Invoice invoice = new Invoice\r\n            {\r\n                Company = ''Acme Ltd.'',\r\n                Amount = 50.0m,\r\n                Paid = false,\r\n                FollowUpDays = 30,\r\n                FollowUpEmailAddress = string.Empty,\r\n                PaidDate = null\r\n            }", span="78-86"];
m3_11 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", color=green, community=0, file="DefaultValueHandlingTests.cs", label="2: string included = JsonConvert.SerializeObject(invoice,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings { })", span="88-90"];
m3_12 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Company'''': ''''Acme Ltd.'''',\r\n  ''''Amount'''': 50.0,\r\n  ''''Paid'''': false,\r\n  ''''PaidDate'''': null,\r\n  ''''FollowUpDays'''': 30,\r\n  ''''FollowUpEmailAddress'''': ''''''''\r\n}'', included)", span="92-99"];
m3_13 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="string ignored = JsonConvert.SerializeObject(invoice,\r\n                Formatting.Indented,\r\n                new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="101-103"];
m3_17 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="string json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass(),\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="114-115"];
m3_21 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''NotDefault'' },\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="122-123"];
m3_25 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", span="112-112"];
m3_35 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", span="159-159"];
m3_39 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="DefaultHandler c2 = JsonConvert.DeserializeObject<DefaultHandler>(''{'field1':-1,'field2':'default'}'', new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="168-171"];
m3_43 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", span="201-201"];
m3_47 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="Age = 0", span="206-206"];
m3_51 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="string json = JsonConvert.SerializeObject(user, Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore, NullValueHandling = NullValueHandling.Ignore })", span="218-218"];
m3_14 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Company'''': ''''Acme Ltd.'''',\r\n  ''''Amount'''': 50.0\r\n}'', ignored)", span="105-108"];
m3_15 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeInvoice()", span="76-76"];
m3_16 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", span="112-112"];
m3_18 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''TestField1'''':0,''''TestProperty1'''':null}'', json)", span="116-116"];
m3_19 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = int.MinValue, TestProperty1 = ''NotDefault'' },\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="118-119"];
m3_20 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''TestField1'''':-2147483648,''''TestProperty1'''':''''NotDefault''''}'', json)", span="120-120"];
m3_22 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''TestProperty1'''':''''NotDefault''''}'', json)", span="124-124"];
m3_23 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="json = JsonConvert.SerializeObject(new DefaultValueAttributeTestClass { TestField1 = 21, TestProperty1 = ''TestProperty1Value'' },\r\n                Formatting.None, new JsonSerializerSettings { DefaultValueHandling = DefaultValueHandling.Ignore })", span="126-127"];
m3_24 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.SerializeDefaultValueAttributeTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{}'', json)", span="128-128"];
m3_26 [cluster="Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.DefaultValueAttributeTestClass.DefaultValueAttributeTestClass()", span="32-32"];
m3_34 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="789-789"];
m3_36 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="DefaultHandler c1 = JsonConvert.DeserializeObject<DefaultHandler>(''{}'', new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="161-164"];
m3_37 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(-1, c1.field1)", span="165-165"];
m3_38 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''default'', c1.field2)", span="166-166"];
m3_40 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(-1, c2.field1)", span="172-172"];
m3_41 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''default'', c2.field2)", span="173-173"];
m3_42 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeIgnoreAndPopulate()", span="159-159"];
m3_44 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="GlobalId = -1", span="203-203"];
m3_45 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="FloatGlobalId = -1.0f", span="204-204"];
m3_46 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="Amount = 0.0m", span="205-205"];
m3_48 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser.NetworkUser()", span="201-201"];
m3_49 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", span="211-211"];
m3_50 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="NetworkUser user = new NetworkUser\r\n            {\r\n                Firstname = ''blub''\r\n            }", span="213-216"];
m3_52 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(@''{''''firstName'''':''''blub''''}'', json)", span="220-220"];
m3_53 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.IgnoreNumberTypeDifferencesWithDefaultValue()", span="211-211"];
m3_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", span="456-456"];
m3_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="473-473"];
m3_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="480-480"];
m3_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="483-483"];
m3_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="484-484"];
m3_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''type'', reader.Value)", span="485-485"];
m3_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="string json = @''\r\n{\r\n  ''''description'''': ''''A person'''',\r\n  ''''type'''': ''''object'''',\r\n  ''''properties'''':\r\n  {\r\n    ''''name'''': {''''type'''':''''string''''},\r\n    ''''hobbies'''': {\r\n      ''''type'''': ''''array'''',\r\n      ''''items'''': {''''type'''':''''string''''}\r\n    }\r\n  }\r\n}\r\n''", span="458-471"];
m3_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="int i = 0", span="478-478"];
m3_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="i < 14", span="478-478"];
m3_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="i++", span="478-478"];
m3_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNewLine()", span="456-456"];
m3_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", span="731-731"];
m3_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="753-753"];
m3_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="755-755"];
m3_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="760-760"];
m3_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="764-764"];
m3_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="768-768"];
m3_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="773-773"];
m3_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="777-777"];
m3_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="782-782"];
m3_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="787-787"];
m3_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="792-792"];
m3_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="797-797"];
m3_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="801-801"];
m3_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="806-806"];
m3_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="809-809"];
m3_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="813-813"];
m3_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="817-817"];
m3_466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="821-821"];
m3_469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="825-825"];
m3_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="828-828"];
m3_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="832-832"];
m3_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="835-835"];
m3_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="838-838"];
m3_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="841-841"];
m3_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="844-844"];
m3_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="847-847"];
m3_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="850-850"];
m3_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="853-853"];
m3_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="856-856"];
m3_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="860-860"];
m3_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(reader.Read())", span="864-864"];
m3_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="756-756"];
m3_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="757-757"];
m3_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, reader.LineNumber)", span="758-758"];
m3_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="761-761"];
m3_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="762-762"];
m3_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="765-765"];
m3_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="766-766"];
m3_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="769-769"];
m3_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="770-770"];
m3_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="771-771"];
m3_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="774-774"];
m3_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="775-775"];
m3_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="778-778"];
m3_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(true, reader.Value)", span="779-779"];
m3_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="780-780"];
m3_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="783-783"];
m3_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="784-784"];
m3_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="785-785"];
m3_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="788-788"];
m3_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="789-789"];
m3_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="790-790"];
m3_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="793-793"];
m3_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="794-794"];
m3_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="795-795"];
m3_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="798-798"];
m3_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(6, reader.LineNumber)", span="799-799"];
m3_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="802-802"];
m3_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="803-803"];
m3_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="804-804"];
m3_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="807-807"];
m3_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="810-810"];
m3_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="811-811"];
m3_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="814-814"];
m3_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(10, reader.LineNumber)", span="815-815"];
m3_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="818-818"];
m3_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(11, reader.LineNumber)", span="819-819"];
m3_467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="822-822"];
m3_468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="823-823"];
m3_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="826-826"];
m3_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="829-829"];
m3_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="830-830"];
m3_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="833-833"];
m3_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="836-836"];
m3_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="839-839"];
m3_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="842-842"];
m3_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="845-845"];
m3_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="848-848"];
m3_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="851-851"];
m3_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="854-854"];
m3_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="857-857"];
m3_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="858-858"];
m3_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="861-861"];
m3_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="862-862"];
m3_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn +\r\n                          @'',//comment after comma'' + StringUtils.CarriageReturnLineFeed +\r\n                          @''''''ExpiryDate''''://comment'' + StringUtils.LineFeed +\r\n                          @''new '' + StringUtils.LineFeed +\r\n                          @''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="733-751"];
m3_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SingleLineComments()", span="731-731"];
m3_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="163-163"];
m3_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", span="291-291"];
m3_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="JsonReader reader = new JsonTextReader(sr)", span="301-301"];
m3_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="StringReader sr = new StringReader(input)", span="299-299"];
m3_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="303-303"];
m3_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="306-306"];
m3_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="307-307"];
m3_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual('''', reader.Path)", span="308-308"];
m3_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="311-311"];
m3_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="312-312"];
m3_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''value'', reader.Path)", span="313-313"];
m3_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="316-316"];
m3_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="317-317"];
m3_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="318-318"];
m3_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="319-319"];
m3_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''value'', reader.Path)", span="320-320"];
m3_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="323-323"];
m3_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="324-324"];
m3_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="325-325"];
m3_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="328-328"];
m3_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="329-329"];
m3_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="330-330"];
m3_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="333-333"];
m3_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="334-334"];
m3_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="335-335"];
m3_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="336-336"];
m3_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="339-339"];
m3_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2L, reader.Value)", span="340-340"];
m3_175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="341-341"];
m3_176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="342-342"];
m3_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="345-345"];
m3_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="346-346"];
m3_180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="347-347"];
m3_181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="348-348"];
m3_183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="351-351"];
m3_184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1L, reader.Value)", span="352-352"];
m3_185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="353-353"];
m3_186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="354-354"];
m3_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="357-357"];
m3_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(null, reader.Value)", span="358-358"];
m3_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="359-359"];
m3_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="360-360"];
m3_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="363-363"];
m3_194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="364-364"];
m3_195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''array'', reader.Path)", span="365-365"];
m3_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="368-368"];
m3_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="369-369"];
m3_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="370-370"];
m3_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="373-373"];
m3_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="374-374"];
m3_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="375-375"];
m3_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="378-378"];
m3_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="379-379"];
m3_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="380-380"];
m3_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="383-383"];
m3_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="384-384"];
m3_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="385-385"];
m3_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="388-388"];
m3_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="389-389"];
m3_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="390-390"];
m3_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartArray)", span="393-393"];
m3_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="394-394"];
m3_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="395-395"];
m3_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="398-398"];
m3_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3, reader.Depth)", span="399-399"];
m3_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''subobject.proparray[0]'', reader.Path)", span="400-400"];
m3_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="403-403"];
m3_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(2, reader.Depth)", span="404-404"];
m3_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''subobject.proparray'', reader.Path)", span="405-405"];
m3_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="408-408"];
m3_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, reader.Depth)", span="409-409"];
m3_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="410-410"];
m3_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="413-413"];
m3_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0, reader.Depth)", span="414-414"];
m3_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual('''', reader.Path)", span="415-415"];
m3_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="305-305"];
m3_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="310-310"];
m3_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="315-315"];
m3_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="322-322"];
m3_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="327-327"];
m3_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="332-332"];
m3_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="338-338"];
m3_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="344-344"];
m3_182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="350-350"];
m3_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="356-356"];
m3_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="362-362"];
m3_196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="367-367"];
m3_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="372-372"];
m3_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="377-377"];
m3_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="382-382"];
m3_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="387-387"];
m3_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="392-392"];
m3_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="397-397"];
m3_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="402-402"];
m3_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="407-407"];
m3_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="412-412"];
m3_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="string input = @''{\r\n  value:'Purple',\r\n  array:[1,2,new Date(1)],\r\n  subobject:{prop:1,proparray:[1]}\r\n}''", span="293-297"];
m3_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.Depth()", span="291-291"];
m3_89 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512"];
m3_91 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="string json = @''{'Value':null,'IntValue1':1,'IntValue2':0,'IntValue3':null}''", span="289-289"];
m3_88 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingPropertyClass.DefaultValueHandlingPropertyClass()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingPropertyClass.DefaultValueHandlingPropertyClass()", span="396-396"];
m3_90 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", span="287-287"];
m3_92 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="var o = JsonConvert.DeserializeObject<DefaultValueHandlingDeserializeHolder>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Ignore\r\n            })", span="291-294"];
m3_335 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="891-891"];
m3_285 [cluster="Unk.Fail", file="DefaultValueHandlingTests.cs", label="Entry Unk.Fail", span=""];
m3_327 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="994-994"];
m3_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", span="665-665"];
m3_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{'prop1':[1]} 1 2 ''''name'''' [][]null {}{} 1.1''))", span="667-667"];
m3_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="670-670"];
m3_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="673-673"];
m3_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="676-676"];
m3_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="679-679"];
m3_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="682-682"];
m3_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="685-685"];
m3_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="688-688"];
m3_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="691-691"];
m3_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="694-694"];
m3_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="697-697"];
m3_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="700-700"];
m3_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="703-703"];
m3_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="706-706"];
m3_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="709-709"];
m3_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="712-712"];
m3_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="715-715"];
m3_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="718-718"];
m3_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="721-721"];
m3_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="724-724"];
m3_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(reader.Read())", span="727-727"];
m3_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="671-671"];
m3_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="674-674"];
m3_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="677-677"];
m3_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="680-680"];
m3_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="683-683"];
m3_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="686-686"];
m3_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="689-689"];
m3_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="692-692"];
m3_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="695-695"];
m3_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="698-698"];
m3_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="701-701"];
m3_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="704-704"];
m3_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="707-707"];
m3_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="710-710"];
m3_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="713-713"];
m3_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="716-716"];
m3_405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="719-719"];
m3_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="722-722"];
m3_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="725-725"];
m3_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="reader.SupportMultipleContent = true", span="668-668"];
m3_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.SupportMultipleContent()", span="665-665"];
m3_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", span="642-642"];
m3_357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="646-646"];
m3_358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="651-651"];
m3_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="654-654"];
m3_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="657-657"];
m3_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="660-660"];
m3_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="652-652"];
m3_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''<'', reader.Value)", span="655-655"];
m3_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="658-658"];
m3_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="661-661"];
m3_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="644-644"];
m3_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.EscapedUnicodeText()", span="642-642"];
m3_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ReadString(string)", file="DefaultValueHandlingTests.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="230-230"];
m3_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ReadString(string)", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="232-232"];
m3_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ReadString(string)", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="233-233"];
m3_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ReadString(string)", file="DefaultValueHandlingTests.cs", label="string s = (string)reader.Value", span="235-235"];
m3_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ReadString(string)", file="DefaultValueHandlingTests.cs", label="return s;", span="237-237"];
m3_115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ReadString(string)", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ReadString(string)", span="228-228"];
m3_139 [cluster="Newtonsoft.Json.JsonReader.Read()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="409-409"];
m3_339 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
m3_337 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m3_109 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.EmitDefaultValueIgnoreAndPopulate()", span="319-319"];
m3_551 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="DefaultValueHandlingTests.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m3_274 [cluster="System.Console.WriteLine(string)", file="DefaultValueHandlingTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m3_331 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929"];
m3_60 [cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103"];
m3_575 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="619-619"];
m3_329 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="468-468"];
m3_75 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="164-164"];
m3_117 [cluster="System.Text.Encoding.GetBytes(string)", file="DefaultValueHandlingTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m3_118 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="DefaultValueHandlingTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m3_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", span="868-868"];
m3_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="872-872"];
m3_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="874-874"];
m3_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(reader.Read())", span="878-878"];
m3_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="875-875"];
m3_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="876-876"];
m3_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", file="DefaultValueHandlingTests.cs", label="string json = @''//comment''", span="870-870"];
m3_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.JustSinglelineComment()", span="868-868"];
m3_334 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442"];
m3_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", span="420-420"];
m3_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="441-441"];
m3_242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="448-448"];
m3_244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="451-451"];
m3_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="452-452"];
m3_238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="422-439"];
m3_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="int i = 0", span="446-446"];
m3_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="i < 15", span="446-446"];
m3_243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="i++", span="446-446"];
m3_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.AppendCharsWhileReadingNull()", span="420-420"];
m3_618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.InvalidUnicodeSequence()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.InvalidUnicodeSequence()", span="1033-1033"];
m3_620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.InvalidUnicodeSequence()", file="DefaultValueHandlingTests.cs", label="JsonTextReader r = new JsonTextReader(new StringReader(json1))", span="1037-1037"];
m3_621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.InvalidUnicodeSequence()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="1039-1039"];
m3_622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.InvalidUnicodeSequence()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(r.Read())", span="1040-1040"];
m3_619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.InvalidUnicodeSequence()", file="DefaultValueHandlingTests.cs", label="string json1 = @''{'prop':'\u123!'}''", span="1035-1035"];
m3_623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.InvalidUnicodeSequence()", file="DefaultValueHandlingTests.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { r.Read(); }, @''Invalid Unicode escape sequence: \u123!. Path 'prop', line 1, position 11.'')", span="1042-1042"];
m3_624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.InvalidUnicodeSequence()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.InvalidUnicodeSequence()", span="1033-1033"];
m3_325 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m3_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="161-161"];
m3_626 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Entry lambda expression", span="1042-1042"];
m3_627 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="r.Read()", span="1042-1042"];
m3_628 [cluster="lambda expression", file="DefaultValueHandlingTests.cs", label="Exit lambda expression", span="1042-1042"];
m3_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", span="619-619"];
m3_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="624-624"];
m3_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="626-626"];
m3_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="629-629"];
m3_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="634-634"];
m3_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Assert.IsFalse(reader.Read())", span="637-637"];
m3_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="627-627"];
m3_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="630-630"];
m3_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="631-631"];
m3_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="632-632"];
m3_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="635-635"];
m3_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="638-638"];
m3_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="622-622"];
m3_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="int length = 20000", span="621-621"];
m3_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.LongStringTest()", span="619-619"];
m3_367 [cluster="System.Convert.ToChar(string)", file="DefaultValueHandlingTests.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m3_328 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="418-418"];
m3_94 [cluster="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.DeserializeWithIgnore()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(int.MinValue, o.IntValue2)", span="297-297"];
m3_617 [cluster="System.GC.WaitForPendingFinalizers()", file="DefaultValueHandlingTests.cs", label="Entry System.GC.WaitForPendingFinalizers()", span="0-0"];
m3_326 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="434-434"];
m3_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.YahooFinance()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.YahooFinance()", span="259-259"];
m3_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.YahooFinance()", file="DefaultValueHandlingTests.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="282-282"];
m3_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.YahooFinance()", file="DefaultValueHandlingTests.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="261-280"];
m3_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.YahooFinance()", file="DefaultValueHandlingTests.cs", label="jsonReader.Read()", span="284-284"];
m3_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.YahooFinance()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.YahooFinance()", span="259-259"];
m3_573 [cluster="System.IO.StringWriter.StringWriter()", file="DefaultValueHandlingTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m3_338 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="814-814"];
m3_116 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="DefaultValueHandlingTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m3_333 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="426-426"];
m3_272 [cluster="string.String(char, int)", file="DefaultValueHandlingTests.cs", label="Entry string.String(char, int)", span="0-0"];
m3_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="168-168"];
m3_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", span="556-556"];
m3_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="602-602"];
m3_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(json, sb.ToString())", span="615-615"];
m3_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="string json = sb.ToString()", span="598-598"];
m3_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="600-600"];
m3_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="sb = new StringBuilder()", span="604-604"];
m3_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="612-612"];
m3_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="StringBuilder sb = new StringBuilder()", span="558-558"];
m3_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteEndArray()", span="595-595"];
m3_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="sw = new StringWriter(sb)", span="605-605"];
m3_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="607-610"];
m3_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="StringWriter sw = new StringWriter(sb)", span="559-559"];
m3_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="561-564"];
m3_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteNull()", span="594-594"];
m3_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteStartArray()", span="566-566"];
m3_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteValue(true)", span="567-567"];
m3_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteStartObject()", span="569-569"];
m3_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WritePropertyName(''integer'')", span="570-570"];
m3_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteValue(99)", span="571-571"];
m3_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WritePropertyName(''string'')", span="572-572"];
m3_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="573-573"];
m3_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WritePropertyName(''array'')", span="574-574"];
m3_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteStartArray()", span="576-576"];
m3_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteValue(i)", span="579-579"];
m3_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteStartObject()", span="582-582"];
m3_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="583-583"];
m3_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteValue(990.00990099m)", span="584-584"];
m3_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteEndObject()", span="585-585"];
m3_307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteValue(5)", span="587-587"];
m3_308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteEndArray()", span="588-588"];
m3_309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteEndObject()", span="590-590"];
m3_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="592-592"];
m3_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="jsonWriter.WriteNull()", span="593-593"];
m3_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="int i = 0", span="577-577"];
m3_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="i < 5", span="577-577"];
m3_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="i++", span="577-577"];
m3_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadWrite()", span="556-556"];
m3_616 [cluster="System.GC.Collect()", file="DefaultValueHandlingTests.cs", label="Entry System.GC.Collect()", span="0-0"];
m3_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="146-146"];
m3_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="148-148"];
m3_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="149-149"];
m3_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="152-152"];
m3_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="155-155"];
m3_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="151-151"];
m3_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="154-154"];
m3_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="157-157"];
m3_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.UnescapeDoubleQuotes()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="158-158"];
m3_574 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="220-220"];
m3_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", span="947-947"];
m3_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="960-960"];
m3_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="StringReader sr = new StringReader(json)", span="959-959"];
m3_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="962-962"];
m3_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="Assert.IsTrue(reader.Read())", span="970-970"];
m3_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="965-965"];
m3_570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="968-968"];
m3_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="decimal? max = reader.ReadAsDecimal()", span="964-964"];
m3_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="decimal? min = reader.ReadAsDecimal()", span="967-967"];
m3_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="string json = sw.ToString()", span="957-957"];
m3_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="StringWriter sw = new StringWriter()", span="949-949"];
m3_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="writer.WriteEndArray()", span="955-955"];
m3_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="950-950"];
m3_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="writer.WriteValue(decimal.MinValue)", span="954-954"];
m3_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="writer.WriteStartArray()", span="952-952"];
m3_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="writer.WriteValue(decimal.MaxValue)", span="953-953"];
m3_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.WriteReadBoundaryDecimals()", span="947-947"];
m3_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.DisposeSupressesFinalization()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.DisposeSupressesFinalization()", span="1024-1024"];
m3_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.DisposeSupressesFinalization()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(1, UnmanagedResourceFakingJsonReader.DisposalCalls)", span="1029-1029"];
m3_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.DisposeSupressesFinalization()", file="DefaultValueHandlingTests.cs", label="GC.WaitForPendingFinalizers()", span="1028-1028"];
m3_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.DisposeSupressesFinalization()", file="DefaultValueHandlingTests.cs", label="GC.Collect()", span="1027-1027"];
m3_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.DisposeSupressesFinalization()", file="DefaultValueHandlingTests.cs", label="UnmanagedResourceFakingJsonReader.CreateAndDispose()", span="1026-1026"];
m3_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.DisposeSupressesFinalization()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.DisposeSupressesFinalization()", span="1024-1024"];
m3_336 [cluster="System.Text.StringBuilder.ToString()", file="DefaultValueHandlingTests.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m3_330 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="938-938"];
m3_625 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m3_554 [cluster="double.ToString(string)", file="DefaultValueHandlingTests.cs", label="Entry double.ToString(string)", span="0-0"];
m3_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", span="882-882"];
m3_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="893-893"];
m3_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader = new JsonTextReader(new StringReader(json))", span="919-919"];
m3_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="895-895"];
m3_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="897-897"];
m3_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="901-901"];
m3_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="905-905"];
m3_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="909-909"];
m3_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="913-913"];
m3_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="917-917"];
m3_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="921-921"];
m3_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.Read()", span="943-943"];
m3_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''6,0221418E+23'', d.ToString(new CultureInfo(''fr-FR'')))", span="888-888"];
m3_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(''602214180000000000000000'', d.ToString(''0.#############################################################################''))", span="889-889"];
m3_517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="898-898"];
m3_518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="899-899"];
m3_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="902-902"];
m3_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0d, reader.Value)", span="903-903"];
m3_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="906-906"];
m3_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="907-907"];
m3_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="910-910"];
m3_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="911-911"];
m3_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="914-914"];
m3_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="915-915"];
m3_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="924-924"];
m3_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0m, reader.Value)", span="925-925"];
m3_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="928-928"];
m3_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0m, reader.Value)", span="929-929"];
m3_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="932-932"];
m3_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="933-933"];
m3_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="936-936"];
m3_545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="937-937"];
m3_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="940-940"];
m3_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="941-941"];
m3_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="891-891"];
m3_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.ReadAsDecimal()", span="923-923"];
m3_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.ReadAsDecimal()", span="927-927"];
m3_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.ReadAsDecimal()", span="931-931"];
m3_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.ReadAsDecimal()", span="935-935"];
m3_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="reader.ReadAsDecimal()", span="939-939"];
m3_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="886-886"];
m3_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="double d", span="884-884"];
m3_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", file="DefaultValueHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests.ScientificNotation()", span="882-882"];
m3_630 [file="DefaultValueHandlingTests.cs", label=r, span=""];
m3_629 [file="DefaultValueHandlingTests.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", span=""];
m4_11 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="DemoTests.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m4_15 [cluster="Unk.AreEqual", file="DemoTests.cs", label="Entry Unk.AreEqual", span=""];
m4_23 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DemoTests.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="130-130"];
m4_24 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="DemoTests.cs", label="0: HtmlColor color = (HtmlColor)value", span="133-133"];
m4_25 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="DemoTests.cs", label="0: string hexString = color.Red.ToString(''X2'')\r\n                    + color.Green.ToString(''X2'')\r\n                    + color.Blue.ToString(''X2'')", span="134-136"];
m4_26 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="DemoTests.cs", label="0: writer.WriteValue(''#'' + hexString)", span="139-139"];
m4_27 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DemoTests.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="130-130"];
m4_35 [cluster="string.TrimStart(params char[])", file="DemoTests.cs", label="Entry string.TrimStart(params char[])", span="0-0"];
m4_17 [cluster="Newtonsoft.Json.Tests.DemoTests.GenerateSchema()", file="DemoTests.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.GenerateSchema()", span="104-104"];
m4_18 [cluster="Newtonsoft.Json.Tests.DemoTests.GenerateSchema()", color=green, community=0, file="DemoTests.cs", label="0: JsonSchemaGenerator generator = new JsonSchemaGenerator()", span="106-106"];
m4_19 [cluster="Newtonsoft.Json.Tests.DemoTests.GenerateSchema()", color=green, community=0, file="DemoTests.cs", label="1: JsonSchema schema = generator.Generate(typeof(Session))", span="108-108"];
m4_20 [cluster="Newtonsoft.Json.Tests.DemoTests.GenerateSchema()", file="DemoTests.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.GenerateSchema()", span="104-104"];
m4_37 [cluster="System.Convert.ToInt32(string, int)", file="DemoTests.cs", label="Entry System.Convert.ToInt32(string, int)", span="0-0"];
m4_14 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="DemoTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="789-789"];
m4_0 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DemoTests.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.JsonConverter()", span="52-52"];
m4_1 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="DemoTests.cs", label="0: HtmlColor red = new HtmlColor\r\n            {\r\n                Red = 255,\r\n                Green = 0,\r\n                Blue = 0\r\n            }", span="54-59"];
m4_2 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="DemoTests.cs", label="0: string json = JsonConvert.SerializeObject(red, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented\r\n            })", span="61-64"];
m4_3 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="DemoTests.cs", label="0: json = JsonConvert.SerializeObject(red, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new HtmlColorConverter() }\r\n            })", span="71-75"];
m4_4 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="DemoTests.cs", label="0: HtmlColor r2 = JsonConvert.DeserializeObject<HtmlColor>(json, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Converters = { new HtmlColorConverter() }\r\n            })", span="78-82"];
m4_8 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="DemoTests.cs", label="1: Console.WriteLine(json)", span="87-87"];
m4_5 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="DemoTests.cs", label="1: Assert.AreEqual(255, r2.Red)", span="83-83"];
m4_6 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="DemoTests.cs", label="0: Assert.AreEqual(0, r2.Green)", span="84-84"];
m4_7 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", color=green, community=0, file="DemoTests.cs", label="0: Assert.AreEqual(0, r2.Blue)", span="85-85"];
m4_9 [cluster="Newtonsoft.Json.Tests.DemoTests.JsonConverter()", file="DemoTests.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.JsonConverter()", span="52-52"];
m4_13 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.HtmlColorConverter()", file="DemoTests.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.HtmlColorConverter()", span="128-128"];
m4_30 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DemoTests.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="148-148"];
m4_31 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="DemoTests.cs", label="0: string hexString = (string)reader.Value", span="152-152"];
m4_32 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="DemoTests.cs", label="0: hexString = hexString.TrimStart('#')", span="153-153"];
m4_33 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="DemoTests.cs", label="0: return new HtmlColor\r\n                {\r\n                    Red = Convert.ToInt32(hexString.Substring(0, 2), 16),\r\n                    Green = Convert.ToInt32(hexString.Substring(2, 2), 16),\r\n                    Blue = Convert.ToInt32(hexString.Substring(4, 2), 16)\r\n                };", span="156-161"];
m4_34 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DemoTests.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="148-148"];
m4_38 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", file="DemoTests.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", span="164-164"];
m4_39 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", color=green, community=0, file="DemoTests.cs", label="3: return objectType == typeof(HtmlColor);", span="166-166"];
m4_40 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", file="DemoTests.cs", label="Exit Newtonsoft.Json.Tests.DemoTests.HtmlColorConverter.CanConvert(System.Type)", span="164-164"];
m4_21 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", file="DemoTests.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.JsonSchemaGenerator()", span="44-44"];
m4_10 [cluster="Newtonsoft.Json.Tests.DemoTests.HtmlColor.HtmlColor()", file="DemoTests.cs", label="Entry Newtonsoft.Json.Tests.DemoTests.HtmlColor.HtmlColor()", span="44-44"];
m4_22 [cluster="Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", file="DemoTests.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaGenerator.Generate(System.Type)", span="122-122"];
m4_16 [cluster="System.Console.WriteLine(string)", file="DemoTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_29 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="DemoTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
m4_12 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="DemoTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557"];
m4_36 [cluster="string.Substring(int, int)", file="DemoTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m4_28 [cluster="int.ToString(string)", file="DemoTests.cs", label="Entry int.ToString(string)", span="0-0"];
m5_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147"];
m5_0 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="Entry Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", span="44-44"];
m5_1 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="string typeName", span="46-46"];
m5_2 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="typeName = ReflectionUtils.GetTypeName(typeof(IList<Type>), TypeNameAssemblyFormatHandling.Simple, null)", span="48-48"];
m5_3 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="Assert.AreEqual(''System.Collections.Generic.IList`1[[System.Type, mscorlib]], mscorlib'', typeName)", span="49-49"];
m5_4 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="typeName = ReflectionUtils.GetTypeName(typeof(IDictionary<IList<Type>, IList<Type>>), TypeNameAssemblyFormatHandling.Simple, null)", span="51-51"];
m5_5 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="Assert.AreEqual(''System.Collections.Generic.IDictionary`2[[System.Collections.Generic.IList`1[[System.Type, mscorlib]], mscorlib],[System.Collections.Generic.IList`1[[System.Type, mscorlib]], mscorlib]], mscorlib'', typeName)", span="52-52"];
m5_6 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="typeName = ReflectionUtils.GetTypeName(typeof(IList<>), TypeNameAssemblyFormatHandling.Simple, null)", span="54-54"];
m5_7 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="Assert.AreEqual(''System.Collections.Generic.IList`1, mscorlib'', typeName)", span="55-55"];
m5_8 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="typeName = ReflectionUtils.GetTypeName(typeof(IDictionary<,>), TypeNameAssemblyFormatHandling.Simple, null)", span="57-57"];
m5_9 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="Assert.AreEqual(''System.Collections.Generic.IDictionary`2, mscorlib'', typeName)", span="58-58"];
m5_10 [cluster="Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", file="JsonConvert.cs", label="Exit Newtonsoft.Json.Tests.Utilities.ReflectionUtilsTests.GetTypeNameSimpleForGenericTypes()", span="44-44"];
m5_12 [cluster="Unk.AreEqual", file="JsonConvert.cs", label="Entry Unk.AreEqual", span=""];
m6_468 [cluster="System.IO.MemoryStream.ToArray()", file="JsonConvertTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m6_189 [cluster="System.Guid.Guid(string)", file="JsonConvertTest.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m6_431 [cluster="System.DateTime.ToLocalTime()", file="JsonConvertTest.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m6_521 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54"];
m6_283 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", span="554-554"];
m6_284 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(1.1m))", span="556-556"];
m6_285 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.11'', JsonConvert.ToString(1.11m))", span="557-557"];
m6_286 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.111'', JsonConvert.ToString(1.111m))", span="558-558"];
m6_287 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1111'', JsonConvert.ToString(1.1111m))", span="559-559"];
m6_288 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.11111'', JsonConvert.ToString(1.11111m))", span="560-560"];
m6_289 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.111111'', JsonConvert.ToString(1.111111m))", span="561-561"];
m6_290 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1.0m))", span="562-562"];
m6_291 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''-1.0'', JsonConvert.ToString(-1.0m))", span="563-563"];
m6_292 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''-1.0'', JsonConvert.ToString(-1m))", span="564-564"];
m6_293 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1m))", span="565-565"];
m6_294 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.01'', JsonConvert.ToString(1.01m))", span="566-566"];
m6_295 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.001'', JsonConvert.ToString(1.001m))", span="567-567"];
m6_296 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''79228162514264337593543950335.0'', JsonConvert.ToString(Decimal.MaxValue))", span="568-568"];
m6_297 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''-79228162514264337593543950335.0'', JsonConvert.ToString(Decimal.MinValue))", span="569-569"];
m6_298 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DecimalToString()", span="554-554"];
m6_593 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonConvertTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m6_32 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override_JsonConverterOrder()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override_JsonConverterOrder()", span="147-147"];
m6_33 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override_JsonConverterOrder()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented,\r\n                    Converters = { new IsoDateTimeConverter { DateTimeFormat = ''yyyy'' } }\r\n                }", span="151-155"];
m6_34 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override_JsonConverterOrder()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(new[] { new DateTime(2000, 12, 12, 4, 2, 4, DateTimeKind.Utc) }, new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.None,\r\n                    Converters =\r\n                    {\r\n                        // should take precedence\r\n                        new JavaScriptDateTimeConverter(),\r\n                        new IsoDateTimeConverter { DateTimeFormat = ''dd'' }\r\n                    }\r\n                })", span="157-166"];
m6_35 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override_JsonConverterOrder()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[new Date(976593724000)]'', json)", span="168-168"];
m6_36 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override_JsonConverterOrder()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override_JsonConverterOrder()", span="147-147"];
m6_38 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m6_112 [cluster="Unk.IsNull", file="JsonConvertTest.cs", label="Entry Unk.IsNull", span=""];
m6_253 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", span="514-514"];
m6_254 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="int i = JsonConvert.DeserializeObject<int>(''1'')", span="516-516"];
m6_255 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, i)", span="517-517"];
m6_256 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="DateTimeOffset d = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''\/Date(-59011455539000+0000)\/'''''')", span="520-520"];
m6_257 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)), d)", span="521-521"];
m6_258 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="bool b = JsonConvert.DeserializeObject<bool>(''true'')", span="524-524"];
m6_259 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Assert.AreEqual(true, b)", span="525-525"];
m6_260 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="object n = JsonConvert.DeserializeObject<object>(''null'')", span="527-527"];
m6_261 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Assert.AreEqual(null, n)", span="528-528"];
m6_262 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="object u = JsonConvert.DeserializeObject<object>(''undefined'')", span="530-530"];
m6_263 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Assert.AreEqual(null, u)", span="531-531"];
m6_264 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeValueObjects()", span="514-514"];
m6_91 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="475-475"];
m6_243 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", span="497-497"];
m6_244 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Additional text encountered after finished reading JSON content: t. Path '', line 1, position 19.'',\r\n                () =>\r\n                {\r\n                    string orig = @''this is a string ''''that has quotes'''' '';\r\n\r\n                    string serialized = JsonConvert.SerializeObject(orig);\r\n\r\n                    // *** Make string invalid by stripping \'' \''\r\n                    serialized = serialized.Replace(@''\'''''', ''\'''');\r\n\r\n                    JsonConvert.DeserializeObject<string>(serialized);\r\n                })", span="499-510"];
m6_245 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestInvalidStrings()", span="497-497"];
m6_567 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", span="965-965"];
m6_568 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new JsonSerializerSettings\r\n                {\r\n                    DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n                })", span="967-972"];
m6_569 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''2000-01-01T01:01:01Z'''''', json)", span="974-974"];
m6_570 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.SerializeObjectDateTimeZoneHandling()", span="965-965"];
m6_182 [cluster="System.Version.Version(int, int)", file="JsonConvertTest.cs", label="Entry System.Version.Version(int, int)", span="0-0"];
m6_95 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="275-275"];
m6_96 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="int i = (int)value", span="277-277"];
m6_97 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="writer.WriteValue(i * 2)", span="278-278"];
m6_98 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="275-275"];
m6_22 [cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38"];
m6_470 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonConvertTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m6_305 [cluster="Newtonsoft.Json.JsonConvert.ToString(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(string)", span="407-407"];
m6_555 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting)", span="660-660"];
m6_520 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="344-344"];
m6_239 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m6_175 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ToStringInvalid()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ToStringInvalid()", span="405-405"];
m6_176 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ToStringInvalid()", file="JsonConvertTest.cs", label="ExceptionAssert.Throws<ArgumentException>(''Unsupported type: System.Version. Use the JsonSerializer class to get the object's JSON representation.'',\r\n                () => { JsonConvert.ToString(new Version(1, 0)); })", span="407-408"];
m6_177 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ToStringInvalid()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ToStringInvalid()", span="405-405"];
m6_17 [cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="61-61"];
m6_577 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", span="998-998"];
m6_578 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: StringBuilder sb = new StringBuilder()", span="1000-1000"];
m6_579 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: int depth = 900", span="1002-1002"];
m6_582 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: sb.Append(''{'A':'')", span="1005-1005"];
m6_584 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="2: sb.Append(''{***}'')", span="1009-1009"];
m6_587 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: sb.Append(''}'')", span="1012-1012"];
m6_589 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: string json = sb.ToString()", span="1015-1015"];
m6_580 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: int i = 0", span="1003-1003"];
m6_581 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: i < depth", span="1003-1003"];
m6_586 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: i < depth", span="1010-1010"];
m6_583 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: i++", span="1003-1003"];
m6_585 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: int i = 0", span="1010-1010"];
m6_588 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: i++", span="1010-1010"];
m6_590 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", color=green, community=0, file="JsonConvertTest.cs", label="0: JsonSerializer serializer = new JsonSerializer() { }", span="1016-1016"];
m6_591 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="serializer.Deserialize<Nest>(new JsonTextReader(new StringReader(json)))", span="1017-1017"];
m6_592 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.StackOverflowTest()", span="998-998"];
m6_66 [cluster="System.IO.StringWriter.ToString()", file="JsonConvertTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m6_556 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="677-677"];
m6_299 [cluster="Newtonsoft.Json.JsonConvert.ToString(decimal)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(decimal)", span="341-341"];
m6_195 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Enum)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Enum)", span="183-183"];
m6_184 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", span="412-412"];
m6_185 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", file="JsonConvertTest.cs", label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="414-414"];
m6_186 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", file="JsonConvertTest.cs", label="string json = JsonConvert.ToString(guid)", span="415-415"];
m6_187 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d'''''', json)", span="416-416"];
m6_188 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.GuidToString()", span="412-412"];
m6_88 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.IntConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.IntConverter()", span="273-273"];
m6_89 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault(Newtonsoft.Json.JsonSerializerSettings)", span="511-511"];
m6_240 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTime, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="116-116"];
m6_10 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359"];
m6_111 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="690-690"];
m6_432 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
m6_427 [cluster="System.DateTime.ToUniversalTime()", file="JsonConvertTest.cs", label="Entry System.DateTime.ToUniversalTime()", span="0-0"];
m6_566 [cluster="Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.PopulateObjectAsync(string, object, Newtonsoft.Json.JsonSerializerSettings)", span="952-952"];
m6_126 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_DateTime_EmptyString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_DateTime_EmptyString()", span="321-321"];
m6_127 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_DateTime_EmptyString()", file="JsonConvertTest.cs", label="DateTime? value = JsonConvert.DeserializeObject<DateTime?>('''')", span="323-323"];
m6_128 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_DateTime_EmptyString()", file="JsonConvertTest.cs", label="Assert.IsNull(value)", span="324-324"];
m6_129 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_DateTime_EmptyString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_DateTime_EmptyString()", span="321-321"];
m6_190 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.Guid)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.Guid)", span="351-351"];
m6_489 [cluster="string.Trim(params char[])", file="JsonConvertTest.cs", label="Entry string.Trim(params char[])", span="0-0"];
m6_265 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonConvertTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m6_100 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="281-281"];
m6_101 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="throw new NotImplementedException();", span="283-283"];
m6_102 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="281-281"];
m6_72 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", span="223-223"];
m6_73 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="227-230"];
m6_74 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="IList<int> l = new List<int> { 1, 2, 3 }", span="232-232"];
m6_75 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="234-234"];
m6_77 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="239-239"];
m6_81 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="249-249"];
m6_85 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="259-259"];
m6_76 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="JsonSerializer serializer = JsonSerializer.CreateDefault(new JsonSerializerSettings\r\n                {\r\n                    Converters = { new IntConverter() }\r\n                })", span="235-238"];
m6_78 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[\r\n  2,\r\n  4,\r\n  6\r\n]'', sw.ToString())", span="241-245"];
m6_80 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="serializer.Converters.Clear()", span="248-248"];
m6_79 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="sw = new StringWriter()", span="247-247"];
m6_82 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', sw.ToString())", span="251-255"];
m6_83 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="sw = new StringWriter()", span="257-257"];
m6_84 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="serializer = JsonSerializer.Create(new JsonSerializerSettings { Formatting = Formatting.Indented })", span="258-258"];
m6_86 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', sw.ToString())", span="261-265"];
m6_87 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_CreateWithSettings()", span="223-223"];
m6_183 [cluster="Newtonsoft.Json.JsonConvert.ToString(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(object)", span="431-431"];
m6_462 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", span="828-828"];
m6_490 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="string date = Write(value, converter)", span="830-830"];
m6_491 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Console.WriteLine(converter.GetType().Name + '': '' + date)", span="832-832"];
m6_492 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="T parsed = Read<T>(date, converter)", span="834-834"];
m6_493 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Assert.AreEqual(value, parsed)", span="838-838"];
m6_495 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="long valueTicks = GetTicks(value)", span="843-843"];
m6_496 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="long parsedTicks = GetTicks(parsed)", span="844-844"];
m6_494 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label=Exception, span="840-840"];
m6_497 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="valueTicks = (valueTicks / 10000) * 10000", span="846-846"];
m6_498 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Assert.AreEqual(valueTicks, parsedTicks)", span="848-848"];
m6_499 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.JsonConverter)", span="828-828"];
m6_460 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult.DateTimeResult()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult.DateTimeResult()", span="729-729"];
m6_461 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="790-790"];
m6_472 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="string date = null", span="792-792"];
m6_473 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="value is DateTime", span="794-794"];
m6_474 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="date = JsonConvert.ToString((DateTime)(object)value, format, timeZoneHandling)", span="796-796"];
m6_475 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="date = JsonConvert.ToString((DateTimeOffset)(object)value, format)", span="801-801"];
m6_476 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Console.WriteLine(format.ToString(''g'') + ''-'' + timeZoneHandling.ToString(''g'') + '': '' + date)", span="805-805"];
m6_477 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="timeZoneHandling == DateTimeZoneHandling.RoundtripKind", span="807-807"];
m6_479 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Assert.AreEqual(value, parsed)", span="812-812"];
m6_481 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="long valueTicks = GetTicks(value)", span="816-816"];
m6_478 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="T parsed = JsonConvert.DeserializeObject<T>(date)", span="809-809"];
m6_485 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="return date.Trim('''');", span="825-825"];
m6_482 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="long parsedTicks = GetTicks(parsed)", span="817-817"];
m6_480 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label=Exception, span="814-814"];
m6_483 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="valueTicks = (valueTicks / 10000) * 10000", span="819-819"];
m6_484 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Assert.AreEqual(valueTicks, parsedTicks)", span="821-821"];
m6_486 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestDateTimeFormat<T>(T, Newtonsoft.Json.DateFormatHandling, Newtonsoft.Json.DateTimeZoneHandling)", span="790-790"];
m6_68 [cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create()", span="461-461"];
m6_465 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonConvertTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m6_596 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="658-658"];
m6_571 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", span="978-978"];
m6_572 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="string json = @''{\r\n        'Name': 'Bad Boys',\r\n        'ReleaseDate': '1995-4-7T00:00:00',\r\n        'Genres': [\r\n          'Action',\r\n          'Comedy'\r\n        ]\r\n      }''", span="980-987"];
m6_573 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="Movie m = JsonConvert.DeserializeObject<Movie>(json)", span="989-989"];
m6_574 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="string name = m.Name", span="991-991"];
m6_575 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Bad Boys'', m.Name)", span="994-994"];
m6_576 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject()", span="978-978"];
m6_500 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", span="857-857"];
m6_505 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="859-859"];
m6_507 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="converter.WriteJson(writer, value, null)", span="861-861"];
m6_506 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="860-860"];
m6_509 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="return sw.ToString();", span="864-864"];
m6_508 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="writer.Flush()", span="863-863"];
m6_510 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.Write(object, Newtonsoft.Json.JsonConverter)", span="857-857"];
m6_306 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", span="583-583"];
m6_307 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTimeResult result = null", span="585-585"];
m6_308 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Max'', DateTime.MaxValue)", span="587-587"];
m6_309 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999'', result.IsoDateRoundtrip)", span="588-588"];
m6_310 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999'' + GetOffset(DateTime.MaxValue, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="589-589"];
m6_311 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999'', result.IsoDateUnspecified)", span="590-590"];
m6_312 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999Z'', result.IsoDateUtc)", span="591-591"];
m6_313 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999)\/'', result.MsDateRoundtrip)", span="592-592"];
m6_314 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999'' + GetOffset(DateTime.MaxValue, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="593-593"];
m6_315 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999)\/'', result.MsDateUnspecified)", span="594-594"];
m6_316 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999)\/'', result.MsDateUtc)", span="595-595"];
m6_317 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime year2000local = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local)", span="597-597"];
m6_318 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="string localToUtcDate = year2000local.ToUniversalTime().ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'')", span="598-598"];
m6_319 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Local'', year2000local)", span="600-600"];
m6_320 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'' + GetOffset(year2000local, DateFormatHandling.IsoDateFormat), result.IsoDateRoundtrip)", span="601-601"];
m6_321 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'' + GetOffset(year2000local, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="602-602"];
m6_324 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="605-605"];
m6_325 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="606-606"];
m6_326 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + GetOffset(year2000local, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="607-607"];
m6_327 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000local) + @'')\/'', result.MsDateUtc)", span="608-608"];
m6_323 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(localToUtcDate, result.IsoDateUtc)", span="604-604"];
m6_322 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateUnspecified)", span="603-603"];
m6_328 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime millisecondsLocal = new DateTime(2000, 1, 1, 1, 1, 1, 999, DateTimeKind.Local)", span="610-610"];
m6_329 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="localToUtcDate = millisecondsLocal.ToUniversalTime().ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'')", span="611-611"];
m6_330 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Local with milliseconds'', millisecondsLocal)", span="613-613"];
m6_331 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01.999'' + GetOffset(millisecondsLocal, DateFormatHandling.IsoDateFormat), result.IsoDateRoundtrip)", span="614-614"];
m6_332 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01.999'' + GetOffset(millisecondsLocal, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="615-615"];
m6_335 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="618-618"];
m6_336 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="619-619"];
m6_337 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + GetOffset(millisecondsLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="620-620"];
m6_338 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(millisecondsLocal) + @'')\/'', result.MsDateUtc)", span="621-621"];
m6_334 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(localToUtcDate, result.IsoDateUtc)", span="617-617"];
m6_333 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01.999'', result.IsoDateUnspecified)", span="616-616"];
m6_339 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime ticksLocal = new DateTime(634663873826822481, DateTimeKind.Local)", span="623-623"];
m6_340 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="localToUtcDate = ticksLocal.ToUniversalTime().ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'')", span="624-624"];
m6_341 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Local with ticks'', ticksLocal)", span="626-626"];
m6_342 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2012-03-03T16:03:02.6822481'' + GetOffset(ticksLocal, DateFormatHandling.IsoDateFormat), result.IsoDateRoundtrip)", span="627-627"];
m6_343 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2012-03-03T16:03:02.6822481'' + GetOffset(ticksLocal, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="628-628"];
m6_346 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="631-631"];
m6_347 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="632-632"];
m6_348 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + GetOffset(ticksLocal, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="633-633"];
m6_349 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(ticksLocal) + @'')\/'', result.MsDateUtc)", span="634-634"];
m6_345 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(localToUtcDate, result.IsoDateUtc)", span="630-630"];
m6_344 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2012-03-03T16:03:02.6822481'', result.IsoDateUnspecified)", span="629-629"];
m6_350 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime year2000Unspecified = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified)", span="636-636"];
m6_351 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Unspecified'', year2000Unspecified)", span="638-638"];
m6_353 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'' + GetOffset(year2000Unspecified, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="640-640"];
m6_356 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateRoundtrip)", span="643-643"];
m6_357 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="644-644"];
m6_358 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified) + GetOffset(year2000Unspecified, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="645-645"];
m6_359 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(year2000Unspecified.ToLocalTime()) + @'')\/'', result.MsDateUtc)", span="646-646"];
m6_352 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateRoundtrip)", span="639-639"];
m6_354 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateUnspecified)", span="641-641"];
m6_355 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01Z'', result.IsoDateUtc)", span="642-642"];
m6_360 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime year2000Utc = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="648-648"];
m6_361 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="string utcTolocalDate = year2000Utc.ToLocalTime().ToString(''yyyy-MM-ddTHH:mm:ss'')", span="649-649"];
m6_362 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Utc'', year2000Utc)", span="651-651"];
m6_364 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(utcTolocalDate + GetOffset(year2000Utc, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="653-653"];
m6_368 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946688461000'' + GetOffset(year2000Utc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="657-657"];
m6_369 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(DateTime.SpecifyKind(year2000Utc, DateTimeKind.Unspecified)) + GetOffset(year2000Utc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="658-658"];
m6_363 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01Z'', result.IsoDateRoundtrip)", span="652-652"];
m6_365 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01'', result.IsoDateUnspecified)", span="654-654"];
m6_366 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01Z'', result.IsoDateUtc)", span="655-655"];
m6_367 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946688461000)\/'', result.MsDateRoundtrip)", span="656-656"];
m6_370 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946688461000)\/'', result.MsDateUtc)", span="659-659"];
m6_371 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="DateTime unixEpoc = new DateTime(621355968000000000, DateTimeKind.Utc)", span="661-661"];
m6_372 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="utcTolocalDate = unixEpoc.ToLocalTime().ToString(''yyyy-MM-ddTHH:mm:ss'')", span="662-662"];
m6_373 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Unix Epoc'', unixEpoc)", span="664-664"];
m6_375 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(utcTolocalDate + GetOffset(unixEpoc, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="666-666"];
m6_379 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(0'' + GetOffset(unixEpoc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="670-670"];
m6_380 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date('' + DateTimeUtils.ConvertDateTimeToJavaScriptTicks(DateTime.SpecifyKind(unixEpoc, DateTimeKind.Unspecified)) + GetOffset(unixEpoc, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateUnspecified)", span="671-671"];
m6_374 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1970-01-01T00:00:00Z'', result.IsoDateRoundtrip)", span="665-665"];
m6_376 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1970-01-01T00:00:00'', result.IsoDateUnspecified)", span="667-667"];
m6_377 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1970-01-01T00:00:00Z'', result.IsoDateUtc)", span="668-668"];
m6_378 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(0)\/'', result.MsDateRoundtrip)", span="669-669"];
m6_381 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(0)\/'', result.MsDateUtc)", span="672-672"];
m6_382 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Min'', DateTime.MinValue)", span="674-674"];
m6_383 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'', result.IsoDateRoundtrip)", span="675-675"];
m6_384 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'' + GetOffset(DateTime.MinValue, DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="676-676"];
m6_385 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'', result.IsoDateUnspecified)", span="677-677"];
m6_386 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00Z'', result.IsoDateUtc)", span="678-678"];
m6_387 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateRoundtrip)", span="679-679"];
m6_388 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000'' + GetOffset(DateTime.MinValue, DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="680-680"];
m6_389 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateUnspecified)", span="681-681"];
m6_390 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateUtc)", span="682-682"];
m6_391 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTime Default'', default(DateTime))", span="684-684"];
m6_392 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'', result.IsoDateRoundtrip)", span="685-685"];
m6_393 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'' + GetOffset(default(DateTime), DateFormatHandling.IsoDateFormat), result.IsoDateLocal)", span="686-686"];
m6_394 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00'', result.IsoDateUnspecified)", span="687-687"];
m6_395 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00Z'', result.IsoDateUtc)", span="688-688"];
m6_396 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateRoundtrip)", span="689-689"];
m6_397 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000'' + GetOffset(default(DateTime), DateFormatHandling.MicrosoftDateFormat) + @'')\/'', result.MsDateLocal)", span="690-690"];
m6_398 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateUnspecified)", span="691-691"];
m6_399 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000)\/'', result.MsDateUtc)", span="692-692"];
m6_400 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan Zero'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="695-695"];
m6_401 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01+00:00'', result.IsoDateRoundtrip)", span="696-696"];
m6_402 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946688461000+0000)\/'', result.MsDateRoundtrip)", span="697-697"];
m6_403 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan 1 hour'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(1)))", span="699-699"];
m6_404 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01+01:00'', result.IsoDateRoundtrip)", span="700-700"];
m6_405 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946684861000+0100)\/'', result.MsDateRoundtrip)", span="701-701"];
m6_406 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan 1.5 hour'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(1.5)))", span="703-703"];
m6_407 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01+01:30'', result.IsoDateRoundtrip)", span="704-704"];
m6_408 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946683061000+0130)\/'', result.MsDateRoundtrip)", span="705-705"];
m6_409 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan 13 hour'', new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)))", span="707-707"];
m6_410 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2000-01-01T01:01:01+13:00'', result.IsoDateRoundtrip)", span="708-708"];
m6_411 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(946641661000+1300)\/'', result.MsDateRoundtrip)", span="709-709"];
m6_412 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset TimeSpan with ticks'', new DateTimeOffset(634663873826822481, TimeSpan.Zero))", span="711-711"];
m6_413 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''2012-03-03T16:03:02.6822481+00:00'', result.IsoDateRoundtrip)", span="712-712"];
m6_414 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(1330790582682+0000)\/'', result.MsDateRoundtrip)", span="713-713"];
m6_415 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset Min'', DateTimeOffset.MinValue)", span="715-715"];
m6_416 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00+00:00'', result.IsoDateRoundtrip)", span="716-716"];
m6_417 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000+0000)\/'', result.MsDateRoundtrip)", span="717-717"];
m6_418 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset Max'', DateTimeOffset.MaxValue)", span="719-719"];
m6_419 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''9999-12-31T23:59:59.9999999+00:00'', result.IsoDateRoundtrip)", span="720-720"];
m6_420 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(253402300799999+0000)\/'', result.MsDateRoundtrip)", span="721-721"];
m6_421 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="result = TestDateTime(''DateTimeOffset Default'', default(DateTimeOffset))", span="723-723"];
m6_422 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(''0001-01-01T00:00:00+00:00'', result.IsoDateRoundtrip)", span="724-724"];
m6_423 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''\/Date(-62135596800000+0000)\/'', result.MsDateRoundtrip)", span="725-725"];
m6_424 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.WriteDateTime()", span="583-583"];
m6_561 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="899-899"];
m6_65 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="755-755"];
m6_518 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m6_196 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", span="427-427"];
m6_197 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="object value", span="429-429"];
m6_198 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = 1", span="431-431"];
m6_199 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="432-432"];
m6_200 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = 1.1", span="434-434"];
m6_201 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="435-435"];
m6_202 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = 1.1m", span="437-437"];
m6_203 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="438-438"];
m6_204 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (float)1.1", span="440-440"];
m6_205 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(value))", span="441-441"];
m6_206 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (short)1", span="443-443"];
m6_207 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="444-444"];
m6_208 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (long)1", span="446-446"];
m6_209 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="447-447"];
m6_210 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (byte)1", span="449-449"];
m6_211 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="450-450"];
m6_212 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (uint)1", span="452-452"];
m6_213 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="453-453"];
m6_214 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (ushort)1", span="455-455"];
m6_215 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="456-456"];
m6_216 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (sbyte)1", span="458-458"];
m6_217 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="459-459"];
m6_218 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = (ulong)1", span="461-461"];
m6_219 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', JsonConvert.ToString(value))", span="462-462"];
m6_220 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="464-464"];
m6_221 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''1970-01-01T00:00:00Z'''''', JsonConvert.ToString(value))", span="465-465"];
m6_222 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="467-467"];
m6_223 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\/Date(0)\/'''''', JsonConvert.ToString((DateTime)value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.RoundtripKind))", span="468-468"];
m6_224 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero)", span="471-471"];
m6_225 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''1970-01-01T00:00:00+00:00'''''', JsonConvert.ToString(value))", span="472-472"];
m6_226 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero)", span="474-474"];
m6_227 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\/Date(0+0000)\/'''''', JsonConvert.ToString((DateTimeOffset)value, DateFormatHandling.MicrosoftDateFormat))", span="475-475"];
m6_228 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = null", span="478-478"];
m6_229 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''null'', JsonConvert.ToString(value))", span="479-479"];
m6_230 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = DBNull.Value", span="482-482"];
m6_231 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''null'', JsonConvert.ToString(value))", span="483-483"];
m6_232 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = ''I am a string''", span="486-486"];
m6_233 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''I am a string'''''', JsonConvert.ToString(value))", span="487-487"];
m6_234 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = true", span="489-489"];
m6_235 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''true'', JsonConvert.ToString(value))", span="490-490"];
m6_236 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="value = 'c'", span="492-492"];
m6_237 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''c'''''', JsonConvert.ToString(value))", span="493-493"];
m6_238 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.ObjectToString()", span="427-427"];
m6_564 [cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30"];
m6_191 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", span="420-420"];
m6_192 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs", label="string json = JsonConvert.ToString(StringComparison.CurrentCultureIgnoreCase)", span="422-422"];
m6_193 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1'', json)", span="423-423"];
m6_194 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EnumToString()", span="420-420"];
m6_23 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", span="124-124"];
m6_24 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="128-131"];
m6_25 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(new { test = new[] { 1, 2, 3 } }, new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.None\r\n                })", span="133-136"];
m6_26 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''{''''test'''':[1,2,3]}'', json)", span="138-138"];
m6_27 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Override()", span="124-124"];
m6_28 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="557-557"];
m6_554 [cluster="System.Threading.Tasks.Task.Wait()", file="JsonConvertTest.cs", label="Entry System.Threading.Tasks.Task.Wait()", span="0-0"];
m6_428 [cluster="System.DateTime.ToString(string)", file="JsonConvertTest.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m6_104 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", span="286-286"];
m6_105 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="return objectType == typeof(int);", span="288-288"];
m6_106 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.IntConverter.CanConvert(System.Type)", span="286-286"];
m6_166 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", span="390-390"];
m6_167 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="string result", span="392-392"];
m6_168 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u0085' + ''after'', '''', true)", span="394-394"];
m6_169 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''before\u0085after'''''', result)", span="395-395"];
m6_170 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u2028' + ''after'', '''', true)", span="397-397"];
m6_171 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''before\u2028after'''''', result)", span="398-398"];
m6_172 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''before'' + '\u2029' + ''after'', '''', true)", span="400-400"];
m6_173 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''before\u2029after'''''', result)", span="401-401"];
m6_174 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString_UnicodeLinefeeds()", span="390-390"];
m6_512 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m6_553 [cluster="Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObjectAsync(object)", span="645-645"];
m6_466 [cluster="DataContractSerializer.cstr", file="JsonConvertTest.cs", label="Entry DataContractSerializer.cstr", span=""];
m6_64 [cluster="Newtonsoft.Json.JsonSerializer.CreateDefault()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.CreateDefault()", span="493-493"];
m6_67 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435"];
m6_562 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string)", span="847-847"];
m6_565 [cluster="Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.StringAppenderConverter.StringAppenderConverter()", span="1639-1639"];
m6_459 [cluster="System.Console.WriteLine(string)", file="JsonConvertTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_560 [cluster="Newtonsoft.Json.Converters.VersionConverter.VersionConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Converters.VersionConverter.VersionConverter()", span="34-34"];
m6_11 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", span="81-81"];
m6_12 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented,\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                }", span="85-89"];
m6_13 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="Employee e = new Employee\r\n                {\r\n                    FirstName = ''Eric'',\r\n                    LastName = ''Example'',\r\n                    BirthDate = new DateTime(1980, 4, 20, 0, 0, 0, DateTimeKind.Utc),\r\n                    Department = ''IT'',\r\n                    JobTitle = ''Web Dude''\r\n                }", span="91-98"];
m6_14 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(e)", span="100-100"];
m6_15 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''{\r\n  ''''firstName'''': ''''Eric'''',\r\n  ''''lastName'''': ''''Example'''',\r\n  ''''birthDate'''': ''''1980-04-20T00:00:00Z'''',\r\n  ''''department'''': ''''IT'''',\r\n  ''''jobTitle'''': ''''Web Dude''''\r\n}'', json)", span="109-115"];
m6_16 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Example()", span="81-81"];
m6_6 [cluster="Unk.AreEqual", file="JsonConvertTest.cs", label="Entry Unk.AreEqual", span=""];
m6_42 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", span="177-177"];
m6_43 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="181-184"];
m6_44 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="IList<int> l = new List<int> { 1, 2, 3 }", span="186-186"];
m6_45 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="StringWriter sw = new StringWriter()", span="188-188"];
m6_47 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="190-190"];
m6_51 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="200-200"];
m6_55 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="206-206"];
m6_59 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Serialize(sw, l)", span="212-212"];
m6_46 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="JsonSerializer serializer = JsonSerializer.CreateDefault()", span="189-189"];
m6_48 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', sw.ToString())", span="192-196"];
m6_50 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer.Formatting = Formatting.None", span="199-199"];
m6_49 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="sw = new StringWriter()", span="198-198"];
m6_52 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[1,2,3]'', sw.ToString())", span="202-202"];
m6_53 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="sw = new StringWriter()", span="204-204"];
m6_54 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer = new JsonSerializer()", span="205-205"];
m6_56 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[1,2,3]'', sw.ToString())", span="208-208"];
m6_57 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="sw = new StringWriter()", span="210-210"];
m6_58 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="serializer = JsonSerializer.Create()", span="211-211"];
m6_60 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[1,2,3]'', sw.ToString())", span="214-214"];
m6_61 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings_Create()", span="177-177"];
m6_559 [cluster="Unk.AreEquivalent", file="JsonConvertTest.cs", label="Entry Unk.AreEquivalent", span=""];
m6_463 [cluster="Unk.ToString", file="JsonConvertTest.cs", label="Entry Unk.ToString", span=""];
m6_467 [cluster="Unk.WriteObject", file="JsonConvertTest.cs", label="Entry Unk.WriteObject", span=""];
m6_242 [cluster="Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(System.DateTimeOffset, Newtonsoft.Json.DateFormatHandling)", span="146-146"];
m6_513 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="133-133"];
m6_130 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", span="328-328"];
m6_131 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="string result", span="330-330"];
m6_132 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now brown cow?'', '''', true)", span="332-332"];
m6_133 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''How now brown cow?'''''', result)", span="333-333"];
m6_134 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now 'brown' cow?'', '''', true)", span="335-335"];
m6_135 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''How now 'brown' cow?'''''', result)", span="336-336"];
m6_136 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''How now <brown> cow?'', '''', true)", span="338-338"];
m6_137 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''How now <brown> cow?'''''', result)", span="339-339"];
m6_138 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''How \r\nnow brown cow?'', '''', true)", span="341-342"];
m6_139 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''How \r\nnow brown cow?'''''', result)", span="343-343"];
m6_140 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'', '''', true)", span="345-345"];
m6_141 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007'''''', result)", span="346-346"];
m6_142 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result =\r\n                JavaScriptUtils.ToEscapedJavaScriptString(''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'', '''', true)", span="348-349"];
m6_143 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013'''''', result)", span="350-350"];
m6_144 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result =\r\n                JavaScriptUtils.ToEscapedJavaScriptString(\r\n                    ''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '', '''', true)", span="352-354"];
m6_145 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f '''''', result)", span="355-355"];
m6_146 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result =\r\n                JavaScriptUtils.ToEscapedJavaScriptString(\r\n                    ''!\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'', '''', true)", span="357-359"];
m6_147 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''!\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]'''''', result)", span="360-360"];
m6_148 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''^_`abcdefghijklmnopqrstuvwxyz{|}~'', '''', true)", span="362-362"];
m6_149 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''^_`abcdefghijklmnopqrstuvwxyz{|}~'''''', result)", span="363-363"];
m6_150 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="string data =\r\n                ''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''#$%&\u0027()*+,-./0123456789:;\u003c=\u003e?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''", span="365-366"];
m6_151 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="string expected =\r\n                @''''''\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\''''#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~''''''", span="367-368"];
m6_152 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(data, '''', true)", span="370-370"];
m6_153 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(expected, result)", span="371-371"];
m6_154 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''Fred's cat.'', '\'', true)", span="373-373"];
m6_155 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @'''Fred\'s cat.''')", span="374-374"];
m6_156 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are you gentlemen?'''' said Cats.'', '''', true)", span="376-376"];
m6_157 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @''''''\''''How are you gentlemen?\'''' said Cats.'''''')", span="377-377"];
m6_158 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''''''How are' you gentlemen?'''' said Cats.'', '''', true)", span="379-379"];
m6_159 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @''''''\''''How are' you gentlemen?\'''' said Cats.'''''')", span="380-380"];
m6_160 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(@''Fred's ''''cat''''.'', '\'', true)", span="382-382"];
m6_161 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @'''Fred\'s ''''cat''''.''')", span="383-383"];
m6_162 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="result = JavaScriptUtils.ToEscapedJavaScriptString(''\u001farray\u003caddress'', '''', true)", span="385-385"];
m6_163 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Assert.AreEqual(result, @''''''\u001farray<address'''''')", span="386-386"];
m6_164 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.EscapeJavaScriptString()", span="328-328"];
m6_103 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonConvertTest.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m6_464 [cluster="Unk.WriteLine", file="JsonConvertTest.cs", label="Entry Unk.WriteLine", span=""];
m6_117 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", span="307-307"];
m6_118 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs", label="int? value = JsonConvert.DeserializeObject<int?>('''')", span="309-309"];
m6_119 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs", label="Assert.IsNull(value)", span="310-310"];
m6_120 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer_EmptyString()", span="307-307"];
m6_433 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonConvertTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m6_282 [cluster="Newtonsoft.Json.JsonConvert.ToString(double)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.ToString(double)", span="289-289"];
m6_511 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="116-116"];
m6_246 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="500-510"];
m6_7 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="59-62"];
m6_8 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="59-62"];
m6_9 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="59-62"];
m6_19 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="85-89"];
m6_20 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented,\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                }", span="85-89"];
m6_21 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="85-89"];
m6_29 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="128-131"];
m6_30 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="128-131"];
m6_31 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="128-131"];
m6_39 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="151-155"];
m6_40 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented,\r\n                    Converters = { new IsoDateTimeConverter { DateTimeFormat = ''yyyy'' } }\r\n                }", span="151-155"];
m6_41 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="151-155"];
m6_69 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="181-184"];
m6_70 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="181-184"];
m6_71 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="181-184"];
m6_92 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="227-230"];
m6_93 [cluster="lambda expression", file="JsonConvertTest.cs", label="new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="227-230"];
m6_94 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="227-230"];
m6_179 [cluster="lambda expression", file="JsonConvertTest.cs", label="Entry lambda expression", span="408-408"];
m6_180 [cluster="lambda expression", file="JsonConvertTest.cs", label="JsonConvert.ToString(new Version(1, 0))", span="408-408"];
m6_181 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="408-408"];
m6_247 [cluster="lambda expression", file="JsonConvertTest.cs", label="string orig = @''this is a string ''''that has quotes'''' ''", span="502-502"];
m6_248 [cluster="lambda expression", file="JsonConvertTest.cs", label="string serialized = JsonConvert.SerializeObject(orig)", span="504-504"];
m6_249 [cluster="lambda expression", file="JsonConvertTest.cs", label="serialized = serialized.Replace(@''\'''''', ''\'''')", span="507-507"];
m6_250 [cluster="lambda expression", file="JsonConvertTest.cs", label="JsonConvert.DeserializeObject<string>(serialized)", span="509-509"];
m6_251 [cluster="lambda expression", file="JsonConvertTest.cs", label="Exit lambda expression", span="500-510"];
m6_241 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonConvertTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m6_426 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.GetOffset(System.DateTime, Newtonsoft.Json.DateFormatHandling)", span="70-70"];
m6_501 [cluster="object.GetType()", file="JsonConvertTest.cs", label="Entry object.GetType()", span="0-0"];
m6_502 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", span="867-867"];
m6_514 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(text))", span="869-869"];
m6_516 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="return (T)converter.ReadJson(reader, typeof(T), null, null);", span="872-872"];
m6_515 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="reader.ReadAsString()", span="870-870"];
m6_517 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.Read<T>(string, Newtonsoft.Json.JsonConverter)", span="867-867"];
m6_558 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="64-64"];
m6_300 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", span="573-573"];
m6_301 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="string v = @''It's a good day\r\n''''sunshine''''''", span="575-576"];
m6_302 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="string json = JsonConvert.ToString(v)", span="578-578"];
m6_303 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''It's a good day\r\n\''''sunshine\'''''''''', json)", span="579-579"];
m6_304 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.StringEscaping()", span="573-573"];
m6_469 [cluster="System.Convert.ToInt32(long)", file="JsonConvertTest.cs", label="Entry System.Convert.ToInt32(long)", span="0-0"];
m6_557 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync(string)", span="880-880"];
m6_471 [cluster="System.Console.WriteLine()", file="JsonConvertTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m6_519 [cluster="System.IO.StringReader.StringReader(string)", file="JsonConvertTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m6_113 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", span="300-300"];
m6_114 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs", label="object result = JsonConvert.DeserializeObject(''1'')", span="302-302"];
m6_115 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs", label="Assert.AreEqual(1L, result)", span="303-303"];
m6_116 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Integer()", span="300-300"];
m6_178 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m6_425 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", span="742-742"];
m6_435 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(name)", span="744-744"];
m6_437 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.IsoDateRoundtrip = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.RoundtripKind)", span="748-748"];
m6_438 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="value is DateTime", span="749-749"];
m6_439 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.IsoDateLocal = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Local)", span="751-751"];
m6_440 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.IsoDateUnspecified = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Unspecified)", span="752-752"];
m6_441 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.IsoDateUtc = TestDateTimeFormat(value, DateFormatHandling.IsoDateFormat, DateTimeZoneHandling.Utc)", span="753-753"];
m6_442 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateRoundtrip = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.RoundtripKind)", span="756-756"];
m6_443 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="value is DateTime", span="757-757"];
m6_444 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateLocal = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Local)", span="759-759"];
m6_445 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateUnspecified = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Unspecified)", span="760-760"];
m6_446 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="result.MsDateUtc = TestDateTimeFormat(value, DateFormatHandling.MicrosoftDateFormat, DateTimeZoneHandling.Utc)", span="761-761"];
m6_447 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="TestDateTimeFormat(value, new IsoDateTimeConverter())", span="764-764"];
m6_448 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="value is DateTime", span="767-767"];
m6_449 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(XmlConvert.ToString((DateTime)(object)value, XmlDateTimeSerializationMode.RoundtripKind))", span="769-769"];
m6_450 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(XmlConvert.ToString((DateTimeOffset)(object)value))", span="773-773"];
m6_453 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="s.WriteObject(ms, value)", span="780-780"];
m6_436 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="DateTimeResult result = new DateTimeResult()", span="746-746"];
m6_457 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="return result;", span="787-787"];
m6_451 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="MemoryStream ms = new MemoryStream()", span="778-778"];
m6_452 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="DataContractSerializer s = new DataContractSerializer(typeof(T))", span="779-779"];
m6_454 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="string json = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="781-781"];
m6_455 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine(json)", span="782-782"];
m6_456 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Console.WriteLine()", span="785-785"];
m6_458 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.TestDateTime<T>(string, T)", span="742-742"];
m6_62 [cluster="System.Collections.Generic.List<T>.List()", file="JsonConvertTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_434 [cluster="System.TimeSpan.FromHours(double)", file="JsonConvertTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m6_122 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", span="314-314"];
m6_123 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", file="JsonConvertTest.cs", label="decimal? value = JsonConvert.DeserializeObject<decimal?>('''')", span="316-316"];
m6_124 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", file="JsonConvertTest.cs", label="Assert.IsNull(value)", span="317-317"];
m6_125 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_Decimal_EmptyString()", span="314-314"];
m6_522 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.Async()", span="877-877"];
m6_523 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Task<string> task = null", span="879-879"];
m6_524 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task = JsonConvert.SerializeObjectAsync(42)", span="882-882"];
m6_525 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task.Wait()", span="884-884"];
m6_526 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(''42'', task.Result)", span="886-886"];
m6_527 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task = JsonConvert.SerializeObjectAsync(new[] { 1, 2, 3, 4, 5 }, Formatting.Indented)", span="889-889"];
m6_528 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task.Wait()", span="891-891"];
m6_529 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3,\r\n  4,\r\n  5\r\n]'', task.Result)", span="893-899"];
m6_530 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task = JsonConvert.SerializeObjectAsync(DateTime.MaxValue, Formatting.None, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="902-905"];
m6_531 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="task.Wait()", span="907-907"];
m6_532 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''''''\/Date(253402300799999)\/'''''', task.Result)", span="909-909"];
m6_533 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="var taskObject = JsonConvert.DeserializeObjectAsync(''[]'')", span="912-912"];
m6_534 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskObject.Wait()", span="914-914"];
m6_535 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="CollectionAssert.AreEquivalent(new JArray(), (JArray)taskObject.Result)", span="916-916"];
m6_536 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Task<object> taskVersionArray = JsonConvert.DeserializeObjectAsync(''['2.0']'', typeof(Version[]), new JsonSerializerSettings\r\n            {\r\n                Converters = { new VersionConverter() }\r\n            })", span="919-922"];
m6_537 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskVersionArray.Wait()", span="924-924"];
m6_538 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Version[] versionArray = (Version[])taskVersionArray.Result", span="926-926"];
m6_539 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(1, versionArray.Length)", span="928-928"];
m6_540 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, versionArray[0].Major)", span="929-929"];
m6_541 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Task<int> taskInt = JsonConvert.DeserializeObjectAsync<int>(''5'')", span="932-932"];
m6_542 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskInt.Wait()", span="934-934"];
m6_543 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(5, taskInt.Result)", span="936-936"];
m6_544 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="var taskVersion = JsonConvert.DeserializeObjectAsync<Version>('''2.0''', new JsonSerializerSettings\r\n            {\r\n                Converters = { new VersionConverter() }\r\n            })", span="939-942"];
m6_545 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskVersion.Wait()", span="944-944"];
m6_546 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(2, taskVersion.Result.Major)", span="946-946"];
m6_547 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Movie p = new Movie()", span="948-948"];
m6_548 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="p.Name = ''Existing,''", span="949-949"];
m6_549 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Task taskVoid = JsonConvert.PopulateObjectAsync(''{'Name':'Appended'}'', p, new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter> { new StringAppenderConverter() }\r\n            })", span="952-955"];
m6_551 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Assert.AreEqual(''Existing,Appended'', p.Name)", span="960-960"];
m6_550 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="taskVoid.Wait()", span="958-958"];
m6_552 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.Async()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.Async()", span="877-877"];
m6_63 [cluster="System.IO.StringWriter.StringWriter()", file="JsonConvertTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m6_90 [cluster="System.Collections.ObjectModel.Collection<T>.Clear()", file="JsonConvertTest.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Clear()", span="0-0"];
m6_429 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime)", span="162-162"];
m6_165 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.ToEscapedJavaScriptString(string, char, bool)", span="211-211"];
m6_266 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", span="535-535"];
m6_267 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1'', JsonConvert.ToString(1.1))", span="537-537"];
m6_268 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.11'', JsonConvert.ToString(1.11))", span="538-538"];
m6_269 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.111'', JsonConvert.ToString(1.111))", span="539-539"];
m6_270 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.1111'', JsonConvert.ToString(1.1111))", span="540-540"];
m6_271 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.11111'', JsonConvert.ToString(1.11111))", span="541-541"];
m6_272 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.111111'', JsonConvert.ToString(1.111111))", span="542-542"];
m6_273 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1.0))", span="543-543"];
m6_274 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.0'', JsonConvert.ToString(1d))", span="544-544"];
m6_275 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''-1.0'', JsonConvert.ToString(-1d))", span="545-545"];
m6_276 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.01'', JsonConvert.ToString(1.01))", span="546-546"];
m6_277 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(''1.001'', JsonConvert.ToString(1.001))", span="547-547"];
m6_278 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonConvert.PositiveInfinity, JsonConvert.ToString(Double.PositiveInfinity))", span="548-548"];
m6_279 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonConvert.NegativeInfinity, JsonConvert.ToString(Double.NegativeInfinity))", span="549-549"];
m6_280 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Assert.AreEqual(JsonConvert.NaN, JsonConvert.ToString(Double.NaN))", span="550-550"];
m6_281 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.FloatToString()", span="535-535"];
m6_563 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObjectAsync<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="866-866"];
m6_5 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499"];
m6_488 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", span="852-852"];
m6_503 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", file="JsonConvertTest.cs", label="return (value is DateTime) ? ((DateTime)value).Ticks : ((DateTimeOffset)value).Ticks;", span="854-854"];
m6_504 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.GetTicks(object)", span="852-852"];
m6_37 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m6_0 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", span="55-55"];
m6_1 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs", label="JsonConvert.DefaultSettings = () => new JsonSerializerSettings\r\n                {\r\n                    Formatting = Formatting.Indented\r\n                }", span="59-62"];
m6_2 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs", label="string json = JsonConvert.SerializeObject(new { test = new[] { 1, 2, 3 } })", span="64-64"];
m6_3 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs", label="Assert.AreEqual(@''{\r\n  ''''test'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ]\r\n}'', json)", span="66-72"];
m6_4 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DefaultSettings()", span="55-55"];
m6_121 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="726-726"];
m6_107 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", span="293-293"];
m6_108 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs", label="object result = JsonConvert.DeserializeObject(string.Empty)", span="295-295"];
m6_109 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs", label="Assert.IsNull(result)", span="296-296"];
m6_110 [cluster="Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", file="JsonConvertTest.cs", label="Exit Newtonsoft.Json.Tests.JsonConvertTest.DeserializeObject_EmptyString()", span="293-293"];
m6_252 [cluster="string.Replace(string, string)", file="JsonConvertTest.cs", label="Entry string.Replace(string, string)", span="0-0"];
m6_18 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_594 [cluster="System.Text.StringBuilder.Append(string)", file="JsonConvertTest.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m6_430 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonConvertTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m6_595 [cluster="System.Text.StringBuilder.ToString()", file="JsonConvertTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m6_99 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonConvertTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="819-819"];
m6_487 [cluster="System.Enum.ToString(string)", file="JsonConvertTest.cs", label="Entry System.Enum.ToString(string)", span="0-0"];
m6_597 [file="JsonConvertTest.cs", label="Newtonsoft.Json.Tests.JsonConvertTest", span=""];
m7_132 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t = TokenType", span="532-532"];
m7_445 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="1234-1234"];
m7_446 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1236-1250"];
m7_447 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1253-1253"];
m7_450 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1273-1273"];
m7_448 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="string xml = IndentXml(newDoc.InnerXml)", span="1255-1255"];
m7_449 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="1257-1269"];
m7_452 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented)", span="1291-1291"];
m7_451 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1275-1287"];
m7_453 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="Console.WriteLine(newJson)", span="1292-1292"];
m7_454 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NestedArrays()", span="1234-1234"];
m7_821 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", span="2857-2857"];
m7_822 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="JsonReader.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00.1234567Z''''}''", span="2859-2859"];
m7_823 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="JsonReader.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2860-2860"];
m7_824 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="JsonReader.cs", label="Assert.AreEqual(''2014-01-23T00:00:00.1234567Z'', dxml.Root.Element(''CreatedDate'').Value)", span="2861-2861"];
m7_825 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="JsonReader.cs", label="Console.WriteLine(''DateTimeToXml_Utc: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2863-2863"];
m7_826 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc_Precision()", span="2857-2857"];
m7_25 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="JsonReader.cs", label="return DeserializeXmlNode(json, null);", span="93-93"];
m7_748 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", span="2716-2716"];
m7_749 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="JsonReader.cs", label="var json = ''{\''%name\'':\''value\''}''", span="2718-2718"];
m7_750 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="JsonReader.cs", label="XmlDocument node = JsonConvert.DeserializeXmlNode(json)", span="2720-2720"];
m7_753 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="JsonReader.cs", label="Assert.AreEqual(json, json2)", span="2726-2726"];
m7_751 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="JsonReader.cs", label="Assert.AreEqual(''<_x0025_name>value</_x0025_name>'', node.OuterXml)", span="2722-2722"];
m7_752 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="JsonReader.cs", label="string json2 = JsonConvert.SerializeXmlNode(node)", span="2724-2724"];
m7_754 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlIncompatibleCharsInPropertyName()", span="2716-2716"];
m7_659 [cluster="System.IO.MemoryStream.ToArray()", file="JsonReader.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m7_344 [cluster="Newtonsoft.Json.JsonReader.ValidateEnd(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Peek() != JsonContainerType.None", span="904-904"];
m7_181 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", span="380-380"];
m7_658 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", span="2094-2094"];
m7_661 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="Newtonsoft.Json.JsonSerializerSettings settings = new Newtonsoft.Json.JsonSerializerSettings()", span="2096-2096"];
m7_664 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="Newtonsoft.Json.JsonTextReader reader = new Newtonsoft.Json.JsonTextReader(new System.IO.StreamReader(json))", span="2099-2099"];
m7_668 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="XmlWriter writer = XmlWriter.Create(xml)", span="2106-2106"];
m7_662 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="settings.Converters.Add(new Newtonsoft.Json.Converters.XmlNodeConverter())", span="2097-2097"];
m7_663 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="Newtonsoft.Json.JsonSerializer serializer = Newtonsoft.Json.JsonSerializer.Create(settings)", span="2098-2098"];
m7_665 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="XmlDocument doc = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="2101-2101"];
m7_666 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="2102-2102"];
m7_669 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="doc.Save(writer)", span="2108-2108"];
m7_667 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="2104-2104"];
m7_670 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", span="2094-2094"];
m7_319 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.Property", span="867-867"];
m7_0 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="61-61"];
m7_1 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonReader.cs", label="string json = JsonConvert.SerializeXmlNode(node, Formatting.Indented)", span="63-63"];
m7_2 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonReader.cs", label="XmlNodeReader reader = new XmlNodeReader(node)", span="64-64"];
m7_3 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonReader.cs", label="XObject xNode", span="67-67"];
m7_4 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonReader.cs", label="node is XmlDocument", span="68-68"];
m7_814 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m7_68 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="421-421"];
m7_69 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="422-422"];
m7_70 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t = TokenType", span="426-426"];
m7_73 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="Value is DateTime", span="432-432"];
m7_71 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.Comment", span="428-428"];
m7_72 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.Date", span="430-430"];
m7_74 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, new DateTimeOffset((DateTime)Value), false)", span="433-433"];
m7_85 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="DateTimeUtils.TryParseDateTime(s, DateParseHandling.DateTimeOffset, DateTimeZoneHandling, _dateFormatString, Culture, out temp)", span="452-452"];
m7_86 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="dt = (DateTimeOffset)temp", span="454-454"];
m7_87 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="455-455"];
m7_88 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return dt;", span="456-456"];
m7_92 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to DateTimeOffset: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="465-465"];
m7_89 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="DateTimeOffset.TryParse(s, Culture, DateTimeStyles.RoundtripKind, out dt)", span="459-459"];
m7_90 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Date, dt, false)", span="461-461"];
m7_91 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return dt;", span="462-462"];
m7_93 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="468-468"];
m7_94 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="469-469"];
m7_47 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m7_179 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading decimal. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="613-613"];
m7_111 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="IsWrappedInTypeObject()", span="494-494"];
m7_221 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="692-692"];
m7_600 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m7_134 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken.Integer", span="535-535"];
m7_135 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="data.Add(Convert.ToByte(Value, CultureInfo.InvariantCulture))", span="536-536"];
m7_136 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken.EndArray", span="538-538"];
m7_137 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="byte[] d = data.ToArray()", span="539-539"];
m7_138 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, d, false)", span="540-540"];
m7_139 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return d;", span="541-541"];
m7_140 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken.Comment", span="542-542"];
m7_141 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected token when reading bytes: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="546-546"];
m7_602 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1922-1922"];
m7_603 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonReader.cs", label="TestComplexArrayClass o = new TestComplexArrayClass\r\n            {\r\n                Name = ''Hi'',\r\n                Products = new List<Product>\r\n                {\r\n                    new Product { Name = ''First'' }\r\n                }\r\n            }", span="1924-1931"];
m7_604 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonReader.cs", label="string output = JsonConvert.SerializeObject(o, new IsoDateTimeConverter())", span="1933-1933"];
m7_605 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonReader.cs", label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''test'', true)", span="1935-1935"];
m7_606 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<test>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>'', IndentXml(xmlProduct.InnerXml))", span="1937-1945"];
m7_607 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonReader.cs", label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented, true)", span="1947-1947"];
m7_608 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Hi'''',\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output2)", span="1949-1959"];
m7_609 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1922-1922"];
m7_610 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.TestComplexArrayClass.TestComplexArrayClass()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.TestComplexArrayClass.TestComplexArrayClass()", span="1915-1915"];
m7_538 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", span="1669-1669"];
m7_539 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonReader.cs", label="string json = @''{\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}''", span="1671-1679"];
m7_540 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonReader.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1681-1681"];
m7_545 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonReader.cs", label="StringAssert.AreEqual(json, newJson)", span="1697-1697"];
m7_541 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonReader.cs", label="string xml = GetIndentedInnerXml(node)", span="1682-1682"];
m7_543 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonReader.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1693-1693"];
m7_542 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1684-1691"];
m7_544 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonReader.cs", label="Console.WriteLine(newJson)", span="1695-1695"];
m7_546 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNoId()", span="1669-1669"];
m7_133 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label=t, span="533-533"];
m7_645 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="574-574"];
m7_180 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", span="559-559"];
m7_99 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", span="838-838"];
m7_121 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="511-511"];
m7_214 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsString", span="675-675"];
m7_660 [cluster="System.Text.Encoding.GetString(byte[])", file="JsonReader.cs", label="Entry System.Text.Encoding.GetString(byte[])", span="0-0"];
m7_43 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonReader.cs", label="return node;", span="126-126"];
m7_44 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="96-96"];
m7_45 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75"];
m7_499 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="404-404"];
m7_402 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="string arrayJsonText = SerializeXmlNode(arrayDoc)", span="1098-1098"];
m7_403 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="string expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1099-1110"];
m7_404 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1111-1111"];
m7_405 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="1113-1120"];
m7_406 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayDoc = new XmlDocument()", span="1122-1122"];
m7_237 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="569-569"];
m7_367 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''root'''': {\r\n    ''''person'''': [\r\n      {\r\n        ''''@id'''': ''''1'''',\r\n        ''''name'''': ''''Alan'''',\r\n        ''''url'''': null\r\n      },\r\n      {\r\n        ''''@id'''': ''''2'''',\r\n        ''''name'''': ''''Louis'''',\r\n        ''''url'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', jsonText)", span="1006-1025"];
m7_377 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="1045-1045"];
m7_376 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="1033-1033"];
m7_368 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JsonReader.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1027-1027"];
m7_375 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JsonReader.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="1041-1041"];
m7_369 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JsonReader.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="1029-1029"];
m7_374 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JsonReader.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><Float>2.5</Float><Integer>99</Integer></person><person id=''''2''''><Boolean>true</Boolean><date>2000-03-30T00:00:00Z</date></person></root>''", span="1039-1039"];
m7_370 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", span="987-987"];
m7_373 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JsonReader.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1037-1037"];
m7_371 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="1033-1033"];
m7_372 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="JsonReader.cs", label="string jsonText = @''{''''?xml'''':{''''@version'''':''''1.0'''',''''@standalone'''':''''no''''},''''root'''':{''''person'''':[{''''@id'''':''''1'''',''''Float'''':2.5,''''Integer'''':99},{''''Boolean'''':true,''''@id'''':''''2'''',''''date'''':''''\/Date(954374400000)\/''''}]}}''", span="1035-1035"];
m7_378 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="JsonReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(() => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]''); }, ''XmlNodeConverter can only convert JSON that begins with an object.'')", span="1047-1047"];
m7_229 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="s = ((IFormattable)Value).ToString(null, Culture)", span="704-704"];
m7_230 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="s = Value.ToString()", span="706-706"];
m7_231 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="SetToken(JsonToken.String, s, false)", span="708-708"];
m7_232 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return s;", span="709-709"];
m7_233 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="713-713"];
m7_234 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="return null;", span="714-714"];
m7_235 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading string. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="716-716"];
m7_236 [cluster="Newtonsoft.Json.JsonReader.ReadAsStringInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsStringInternal()", span="673-673"];
m7_598 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m7_675 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="2116-2116"];
m7_676 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="string xaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2118-2149"];
m7_677 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXNode(XDocument.Parse(xaml), Formatting.Indented)", span="2151-2151"];
m7_678 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="2153-2308"];
m7_679 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="StringAssert.AreEqual(expectedJson, json)", span="2310-2310"];
m7_680 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="XNode node = JsonConvert.DeserializeXNode(json)", span="2312-2312"];
m7_681 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="string xaml2 = node.ToString()", span="2314-2314"];
m7_682 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2316-2347"];
m7_683 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="StringAssert.AreEqual(expectedXaml, xaml2)", span="2349-2349"];
m7_684 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", span="2116-2116"];
m7_239 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="string jsonText", span="572-572"];
m7_648 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", span="2082-2082"];
m7_649 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="JsonReader.cs", label="MemoryStream ms = new MemoryStream(System.Text.Encoding.UTF8.GetBytes(@''{root:{''''@booleanType'''':true}}''))", span="2084-2084"];
m7_650 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="JsonReader.cs", label="MemoryStream xml = new MemoryStream()", span="2085-2085"];
m7_651 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="JsonReader.cs", label="JsonBodyToSoapXml(ms, xml)", span="2087-2087"];
m7_652 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="JsonReader.cs", label="string xmlString = System.Text.Encoding.UTF8.GetString(xml.ToArray())", span="2089-2089"];
m7_653 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="JsonReader.cs", label="Assert.AreEqual(@''﻿<?xml version=''''1.0'''' encoding=''''utf-8''''?><root booleanType=''''true'''' />'', xmlString)", span="2091-2091"];
m7_654 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", span="2082-2082"];
m7_873 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", span="2948-2948"];
m7_874 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="Model model = new Model()", span="2950-2950"];
m7_875 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="model.Document = new XElement(''Value'', new XAttribute(''foo'', ''bar''))\r\n            {\r\n                Value = ''2001-01-01T11:11:11''\r\n            }", span="2951-2954"];
m7_881 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="serializer.Serialize(jsonWriter, model)", span="2967-2967"];
m7_876 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Converters = new List<JsonConverter>(new[] { new XmlNodeConverter() })\r\n            })", span="2956-2959"];
m7_877 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="var json = new StringBuilder(1024)", span="2961-2961"];
m7_885 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="var document = (XDocument)serializer.Deserialize(jsonReader, typeof(XDocument))", span="2975-2975"];
m7_878 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="var stringWriter = new StringWriter(json, CultureInfo.InvariantCulture)", span="2963-2963"];
m7_882 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''Document'''':{''''Value'''':{''''@foo'''':''''bar'''',''''#text'''':''''2001-01-01T11:11:11''''}}}'', json.ToString())", span="2969-2969"];
m7_883 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="var stringReader = new StringReader(json.ToString())", span="2972-2972"];
m7_879 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="var jsonWriter = new JsonTextWriter(stringWriter)", span="2964-2964"];
m7_880 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="jsonWriter.Formatting = Formatting.None", span="2966-2966"];
m7_884 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="var jsonReader = new JsonTextReader(stringReader)", span="2973-2973"];
m7_886 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<Document>\r\n  <Value foo=''''bar''''>2001-01-01T11:11:11</Value>\r\n</Document>'', document.ToString())", span="2977-2979"];
m7_887 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeDateInElementText()", span="2948-2948"];
m7_205 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return i;", span="659-659"];
m7_206 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to integer: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="663-663"];
m7_207 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="667-667"];
m7_208 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="return null;", span="668-668"];
m7_210 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", span="616-616"];
m7_209 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32Internal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading integer. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, TokenType));", span="670-670"];
m7_211 [cluster="System.Convert.ToInt32(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToInt32(object, System.IFormatProvider)", span="0-0"];
m7_212 [cluster="int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", file="JsonReader.cs", label="Entry int.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out int)", span="0-0"];
m7_725 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2663-2663"];
m7_726 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2665-2669"];
m7_727 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="var xml = XElement.Parse(xmlString)", span="2671-2671"];
m7_728 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="var json1 = JsonConvert.SerializeXNode(xml)", span="2673-2673"];
m7_730 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="var equals = XElement.DeepEquals(xmlBack, xml)", span="2676-2676"];
m7_729 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="2674-2674"];
m7_731 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="Assert.IsTrue(equals)", span="2677-2677"];
m7_732 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2663-2663"];
m7_398 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1085-1085"];
m7_399 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="1087-1093"];
m7_400 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="XmlDocument arrayDoc = new XmlDocument()", span="1095-1095"];
m7_401 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayDoc.LoadXml(arrayXml)", span="1096-1096"];
m7_276 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end when reading bytes.'');", span="780-780"];
m7_120 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return data;", span="508-508"];
m7_152 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="357-357"];
m7_123 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.Bytes", span="514-514"];
m7_124 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", color=green, community=0, file="JsonReader.cs", label="1: ValueType == typeof(Guid)", span="516-516"];
m7_125 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", color=green, community=0, file="JsonReader.cs", label="1: byte[] data = ((Guid)Value).ToByteArray()", span="518-518"];
m7_126 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", color=green, community=0, file="JsonReader.cs", label="0: SetToken(JsonToken.Bytes, data, false)", span="519-519"];
m7_130 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="List<byte> data = new List<byte>()", span="528-528"];
m7_127 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", color=green, community=0, file="JsonReader.cs", label="0: return data;", span="520-520"];
m7_128 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return (byte[])Value;", span="523-523"];
m7_129 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.StartArray", span="526-526"];
m7_131 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="ReadInternal()", span="530-530"];
m7_806 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", span="2835-2835"];
m7_807 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="JsonReader.cs", label="DateTime dt = DateTime.Parse(''2014-01-23T00:00:00+01:00'')", span="2837-2837"];
m7_808 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="JsonReader.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00+01:00''''}''", span="2839-2839"];
m7_810 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="JsonReader.cs", label="Assert.AreEqual(dt.ToString(''yyyy-MM-ddTHH:mm:sszzzzzzz'', CultureInfo.InvariantCulture), dxml.Root.Element(''CreatedDate'').Value)", span="2841-2841"];
m7_809 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="JsonReader.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2840-2840"];
m7_811 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="JsonReader.cs", label="Console.WriteLine(''DateTimeToXml_Local: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2843-2843"];
m7_812 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local()", span="2835-2835"];
m7_479 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1407-1407"];
m7_480 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="string xml = @''<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''><!-- Hi --><span>Text</span></a><!-- Hi! -->\r\n</span>''", span="1409-1411"];
m7_481 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="XmlDocument doc = new XmlDocument()", span="1412-1412"];
m7_482 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="doc.LoadXml(xml)", span="1413-1413"];
m7_483 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="string jsonText = SerializeXmlNode(doc)", span="1415-1415"];
m7_484 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="string expected = @''{\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''@href'''': ''''http://www.web2con.com/''''/* Hi */,\r\n      ''''span'''': ''''Text''''\r\n    }/* Hi! */\r\n  }\r\n}''", span="1417-1426"];
m7_485 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="StringAssert.AreEqual(expected, jsonText)", span="1428-1428"];
m7_486 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1430-1430"];
m7_487 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="Assert.AreEqual(@''<span class=''''vevent''''><a class=''''url'''' href=''''http://www.web2con.com/''''><!-- Hi --><span>Text</span></a><!-- Hi! --></span>'', newDoc.InnerXml)", span="1431-1431"];
m7_488 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeComment()", span="1407-1407"];
m7_769 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", span="2774-2774"];
m7_770 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="JsonReader.cs", label="XDocument d = new XDocument()", span="2776-2776"];
m7_771 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXNode(d)", span="2778-2778"];
m7_772 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="JsonReader.cs", label="Assert.AreEqual(@''{}'', json)", span="2780-2780"];
m7_773 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRoot()", span="2774-2774"];
m7_67 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="!ReadInternal()", span="419-419"];
m7_320 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentPosition.PropertyName = (string)value", span="869-869"];
m7_48 [cluster="XmlNodeConverter.cstr", file="JsonReader.cs", label="Entry XmlNodeConverter.cstr", span=""];
m7_353 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Object", span="919-919"];
m7_294 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="692-692"];
m7_379 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="1045-1045"];
m7_384 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="JsonReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}''); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifying a DeserializeRootElementName. Path 'Prop2', line 1, position 15.'')", span="1053-1055"];
m7_383 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="1051-1051"];
m7_380 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="1047-1047"];
m7_382 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="1047-1047"];
m7_381 [cluster="lambda expression", file="JsonReader.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]'')", span="1047-1047"];
m7_385 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="1051-1051"];
m7_277 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Value.ToString() == JsonTypeReflector.TypePropertyName", span="782-782"];
m7_24 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string)", span="91-91"];
m7_338 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JsonReader.cs", label="string jsonText = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''span'''': {\r\n        ''''@class'''': ''''summary'''',\r\n        ''''#text'''': ''''Web 2.0 Conference'''',\r\n        ''''#cdata-section'''': ''''my escaped text''''\r\n      },\r\n      ''''@href'''': ''''http://www.web2con.com/''''\r\n    }\r\n  }\r\n}''", span="913-930"];
m7_339 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JsonReader.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(jsonText)", span="932-932"];
m7_340 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JsonReader.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n  </a>\r\n</span>''", span="934-939"];
m7_619 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="1998-1998"];
m7_620 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonReader.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n<A>\r\n<B name=''''sample'''' json:Array=''''true''''/>\r\n<C></C>\r\n<C></C>\r\n</A>\r\n</root>''", span="2000-2007"];
m7_621 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonReader.cs", label="XmlDocument d = new XmlDocument()", span="2009-2009"];
m7_622 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonReader.cs", label="d.LoadXml(xml)", span="2010-2010"];
m7_623 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="2012-2012"];
m7_624 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''root'''': {\r\n    ''''A'''': {\r\n      ''''B'''': [\r\n        {\r\n          ''''@name'''': ''''sample''''\r\n        }\r\n      ],\r\n      ''''C'''': [\r\n        '''''''',\r\n        ''''''''\r\n      ]\r\n    }\r\n  }\r\n}'', json)", span="2014-2032"];
m7_625 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonReader.cs", label="XmlDocument d2 = JsonConvert.DeserializeXmlNode(json)", span="2034-2034"];
m7_626 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-8''''?>\r\n<root>\r\n  <A>\r\n    <B name=''''sample'''' />\r\n    <C></C>\r\n    <C></C>\r\n  </A>\r\n</root>'', ToStringWithDeclaration(d2, true))", span="2036-2043"];
m7_627 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteAttributes()", span="1998-1998"];
m7_647 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="850-850"];
m7_672 [cluster="Unk.Add", file="JsonReader.cs", label="Entry Unk.Add", span=""];
m7_182 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="410-410"];
m7_349 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JsonReader.cs", label="XmlWriter writer = XmlWriter.Create(sw, settings)", span="953-953"];
m7_840 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", span="2891-2891"];
m7_841 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="JsonReader.cs", label="var original = XElement.Parse(''<MyElement xmlns=\''http://example.com\'' />'')", span="2893-2893"];
m7_842 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2894-2894"];
m7_843 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="JsonReader.cs", label="var json = JsonConvert.SerializeObject(original)", span="2896-2896"];
m7_844 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2897-2897"];
m7_845 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="JsonReader.cs", label="var deserialized = JsonConvert.DeserializeObject<XElement>(json)", span="2899-2899"];
m7_846 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2900-2900"];
m7_847 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementExplicitAttributeNamespace()", span="2891-2891"];
m7_213 [cluster="Unk.DeepEquals", file="JsonReader.cs", label="Entry Unk.DeepEquals", span=""];
m7_216 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="JsonReader.cs", label="XmlDocument doc = JsonConvert.DeserializeXmlNode(''{ A: { '@xsi:nil': true } }'')", span="475-475"];
m7_217 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="JsonReader.cs", label="Assert.AreEqual(@''<A nil=''''true'''' />'', doc.OuterXml)", span="477-477"];
m7_219 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="JsonReader.cs", label="Assert.AreEqual(doc.OuterXml, xdoc.ToString())", span="481-481"];
m7_222 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", span="488-488"];
m7_226 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="506-506"];
m7_228 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="506-506"];
m7_227 [cluster="lambda expression", file="JsonReader.cs", label="JsonConvert.DeserializeXmlNode(json)", span="506-506"];
m7_215 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", span="473-473"];
m7_218 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="JsonReader.cs", label="XDocument xdoc = JsonConvert.DeserializeXNode(''{ A: { '@xsi:nil': true } }'')", span="479-479"];
m7_220 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeUndeclaredNamespacePrefix()", span="473-473"];
m7_223 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="JsonReader.cs", label="string json = @''{\r\n    ''''Id'''': 1,\r\n     ''''Email'''': ''''james@example.com'''',\r\n     ''''Active'''': true,\r\n     ''''CreatedDate'''': ''''2013-01-20T00:00:00Z'''',\r\n     ''''Roles'''': [\r\n       ''''User'''',\r\n       ''''Admin''''\r\n     ],\r\n    ''''Team'''': {\r\n        ''''Id'''': 2,\r\n        ''''Name'''': ''''Software Developers'''',\r\n        ''''Description'''': ''''Creators of fine software products and services.''''\r\n    }\r\n}''", span="490-504"];
m7_225 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", span="488-488"];
m7_224 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeMultipleRootElements()", file="JsonReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifying a DeserializeRootElementName. Path 'Email', line 3, position 13.'')", span="505-507"];
m7_98 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m7_279 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Value != null && Value.ToString().StartsWith(''System.Byte[]'')", span="785-785"];
m7_280 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="ReadInternal()", span="787-787"];
m7_281 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="Value.ToString() == JsonTypeReflector.ValuePropertyName", span="788-788"];
m7_282 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="return true;", span="790-790"];
m7_283 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, JsonToken.StartObject));", span="795-795"];
m7_284 [cluster="Newtonsoft.Json.JsonReader.IsWrappedInTypeObject()", file="JsonReader.cs", label="return false;", span="798-798"];
m7_238 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="XmlDocument doc = new XmlDocument()", span="571-571"];
m7_97 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="823-823"];
m7_95 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading date. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="471-471"];
m7_570 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", span="1773-1773"];
m7_571 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="JsonReader.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': null\r\n}''", span="1775-1778"];
m7_572 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="JsonReader.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1780-1780"];
m7_576 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="JsonReader.cs", label="StringAssert.AreEqual(json, newJson)", span="1790-1790"];
m7_573 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="JsonReader.cs", label="string xml = GetIndentedInnerXml(node)", span="1781-1781"];
m7_575 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="JsonReader.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1788-1788"];
m7_574 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json'''' />\r\n</root>'', xml)", span="1783-1786"];
m7_577 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayNull()", span="1773-1773"];
m7_15 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="UpdateScopeWithFinishedValue()", span="315-315"];
m7_148 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="JsonReader.cs", label="var json = JsonConvert.SerializeObject(result, Formatting.Indented)", span="330-330"];
m7_13 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="JsonReader.cs", label="return json;", span="88-88"];
m7_102 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="JsonReader.cs", label="Foo foo = new Foo { Bar = null }", span="209-209"];
m7_271 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.EnsureDateTime(System.DateTime, Newtonsoft.Json.DateTimeZoneHandling)", span="76-76"];
m7_64 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
m7_362 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="913-913"];
m7_363 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label=SupportMultipleContent, span="938-938"];
m7_364 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Start", span="939-939"];
m7_365 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="_currentState = State.Finished", span="941-941"];
m7_366 [cluster="Newtonsoft.Json.JsonReader.SetFinished()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetFinished()", span="936-936"];
m7_312 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndObject", span="857-857"];
m7_313 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndObject)", span="858-858"];
m7_42 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonReader.cs", label="Assert.AreEqual(xmlText, linqXmlText)", span="123-123"];
m7_272 [cluster="Unk.Attribute", file="JsonReader.cs", label="Entry Unk.Attribute", span=""];
m7_163 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Float, Convert.ToDecimal(Value, CultureInfo.InvariantCulture), false)", span="581-581"];
m7_41 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonReader.cs", label="linqXmlText = d.Declaration + linqXmlText", span="120-120"];
m7_295 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonReader.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8''''?><!DOCTYPE STOCKQUOTE PUBLIC ''''-//W3C//DTD StockQuote 1.5//EN'''' ''''http://www.idontexistnopenopewhatnope123.org/dtd/stockquote_1.5.dtd''''><STOCKQUOTE ROWCOUNT=''''2''''><RESULT><ROW><ASK>0</ASK><BID>0</BID><CHANGE>-16.310</CHANGE><COMPANYNAME>Dow Jones</COMPANYNAME><DATETIME>2014-04-17 15:50:37</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>16460.490</HIGH><LASTDATETIME>2014-04-17 15:50:37</LASTDATETIME><LASTPRICE>16408.540</LASTPRICE><LOW>16368.140</LOW><OPEN>16424.140</OPEN><PCHANGE>-0.099</PCHANGE><PE>0</PE><PREVIOUSCLOSE>16424.850</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>DJII</TICKER><TRADES>0</TRADES><VOLUME>136188700</VOLUME><YEARHIGH>11309.000</YEARHIGH><YEARLOW>9302.280</YEARLOW><YIELD>0</YIELD></ROW><ROW><ASK>0</ASK><BID>0</BID><CHANGE>9.290</CHANGE><COMPANYNAME>NASDAQ</COMPANYNAME><DATETIME>2014-04-17 15:40:01</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>4110.460</HIGH><LASTDATETIME>2014-04-17 15:40:01</LASTDATETIME><LASTPRICE>4095.520</LASTPRICE><LOW>4064.700</LOW><OPEN>4080.300</OPEN><PCHANGE>0.227</PCHANGE><PE>0</PE><PREVIOUSCLOSE>4086.230</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>COMP</TICKER><TRADES>0</TRADES><VOLUME>1784210100</VOLUME><YEARHIGH>4371.710</YEARHIGH><YEARLOW>3154.960</YEARLOW><YIELD>0</YIELD></ROW></RESULT><STATUS>Couldn't find ticker: SPIC?</STATUS><STATUSCODE>2</STATUSCODE></STOCKQUOTE>''", span="694-694"];
m7_296 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="JsonReader.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''!DOCTYPE'''': {\r\n    ''''@name'''': ''''STOCKQUOTE'''',\r\n    ''''@public'''': ''''-//W3C//DTD StockQuote 1.5//EN'''',\r\n    ''''@system'''': ''''http://www.idontexistnopenopewhatnope123.org/dtd/stockquote_1.5.dtd''''\r\n  },\r\n  ''''STOCKQUOTE'''': {\r\n    ''''@ROWCOUNT'''': ''''2'''',\r\n    ''''RESULT'''': {\r\n      ''''ROW'''': [\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''-16.310'''',\r\n          ''''COMPANYNAME'''': ''''Dow Jones'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''16460.490'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''LASTPRICE'''': ''''16408.540'''',\r\n          ''''LOW'''': ''''16368.140'''',\r\n          ''''OPEN'''': ''''16424.140'''',\r\n          ''''PCHANGE'''': ''''-0.099'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''16424.850'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''DJII'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''136188700'''',\r\n          ''''YEARHIGH'''': ''''11309.000'''',\r\n          ''''YEARLOW'''': ''''9302.280'''',\r\n          ''''YIELD'''': ''''0''''\r\n        },\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''9.290'''',\r\n          ''''COMPANYNAME'''': ''''NASDAQ'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''4110.460'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''LASTPRICE'''': ''''4095.520'''',\r\n          ''''LOW'''': ''''4064.700'''',\r\n          ''''OPEN'''': ''''4080.300'''',\r\n          ''''PCHANGE'''': ''''0.227'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''4086.230'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''COMP'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''1784210100'''',\r\n          ''''YEARHIGH'''': ''''4371.710'''',\r\n          ''''YEARLOW'''': ''''3154.960'''',\r\n          ''''YIELD'''': ''''0''''\r\n        }\r\n      ]\r\n    },\r\n    ''''STATUS'''': ''''Couldn't find ticker: SPIC?'''',\r\n    ''''STATUSCODE'''': ''''2''''\r\n  }\r\n}''", span="696-765"];
m7_240 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n	</xs:element>\r\n</xs:schema>''", span="574-581"];
m7_241 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="XmlDocument document = new XmlDocument()", span="583-583"];
m7_242 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="document.LoadXml(xml)", span="584-584"];
m7_243 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="XmlAttribute attribute = document.DocumentElement.ChildNodes[0].Attributes[''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata'']", span="587-587"];
m7_245 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="jsonText = JsonConvert.SerializeXmlNode(attribute)", span="590-590"];
m7_246 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="592-592"];
m7_247 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="XDocument d = XDocument.Parse(xml)", span="595-595"];
m7_248 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="XAttribute a = d.Root.Element(''{http://www.w3.org/2001/XMLSchema}element'').Attribute(''{urn:schemas-microsoft-com:xml-msdata}IsDataSet'')", span="596-596"];
m7_251 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="XmlProcessingInstruction instruction = doc.CreateProcessingInstruction(''xml-stylesheet'', @''href=''''classic.xsl'''' type=''''text/xml'''''')", span="604-604"];
m7_252 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="jsonText = JsonConvert.SerializeXmlNode(instruction)", span="606-606"];
m7_254 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="XmlCDataSection cDataSection = doc.CreateCDataSection(''<Kiwi>true</Kiwi>'')", span="611-611"];
m7_257 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="XmlElement element = doc.CreateElement(''xs'', ''Choice'', ''http://www.w3.org/2001/XMLSchema'')", span="618-618"];
m7_259 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="XmlAttribute aa = doc.CreateAttribute(@''xmlns'', ''xs'', ''http://www.w3.org/2000/xmlns/'')", span="621-621"];
m7_260 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="aa.Value = ''http://www.w3.org/2001/XMLSchema''", span="622-622"];
m7_262 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="aa = doc.CreateAttribute(@''xmlns'', ''msdata'', ''http://www.w3.org/2000/xmlns/'')", span="625-625"];
m7_263 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="aa.Value = ''urn:schemas-microsoft-com:xml-msdata''", span="626-626"];
m7_264 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="element.SetAttributeNode(aa)", span="627-627"];
m7_266 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="element.AppendChild(cDataSection)", span="630-630"];
m7_267 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="doc.AppendChild(element)", span="632-632"];
m7_269 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''xs:Choice'''': {\r\n    ''''@msdata:IsDataSet'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', jsonText)", span="636-644"];
m7_250 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="600-600"];
m7_244 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="attribute.Value = ''true''", span="588-588"];
m7_249 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="jsonText = JsonConvert.SerializeXNode(a)", span="598-598"];
m7_253 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\''''''''}'', jsonText)", span="608-608"];
m7_255 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="jsonText = JsonConvert.SerializeXmlNode(cDataSection)", span="613-613"];
m7_256 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}'', jsonText)", span="615-615"];
m7_258 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="element.SetAttributeNode(doc.CreateAttribute(''msdata'', ''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata''))", span="619-619"];
m7_261 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="element.SetAttributeNode(aa)", span="623-623"];
m7_265 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="element.AppendChild(instruction)", span="629-629"];
m7_268 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="jsonText = JsonConvert.SerializeXmlNode(element, Formatting.Indented)", span="634-634"];
m7_270 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="569-569"];
m7_143 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.EndArray", span="553-553"];
m7_528 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m7_26 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m7_336 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="827-827"];
m7_341 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JsonReader.cs", label="string formattedXml = GetIndentedInnerXml(doc)", span="941-941"];
m7_342 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JsonReader.cs", label="StringAssert.AreEqual(expected, formattedXml)", span="943-943"];
m7_343 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="911-911"];
m7_345 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="946-946"];
m7_346 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JsonReader.cs", label="XmlWriterSettings settings = new XmlWriterSettings()", span="948-948"];
m7_347 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="JsonReader.cs", label="settings.Indent = true", span="949-949"];
m7_50 [cluster="Unk.ReadJson", file="JsonReader.cs", label="Entry Unk.ReadJson", span=""];
m7_299 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="833-833"];
m7_303 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartObject", span="845-845"];
m7_304 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ObjectStart", span="846-846"];
m7_308 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Array)", span="851-851"];
m7_297 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="833-833"];
m7_301 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_value = value", span="841-841"];
m7_306 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartArray", span="849-849"];
m7_298 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonReader.cs", label="SetToken(newToken, value, true)", span="835-835"];
m7_300 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_tokenType = newToken", span="840-840"];
m7_302 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label=newToken, span="843-843"];
m7_305 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Object)", span="847-847"];
m7_307 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ArrayStart", span="850-850"];
m7_309 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.StartConstructor", span="853-853"];
m7_75 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return (DateTimeOffset)Value;", span="435-435"];
m7_787 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRootWithDeclaration()", span="2804-2804"];
m7_788 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="XDocument d = JsonConvert.DeserializeXNode(@''{''''?xml'''':{''''@version'''':''''Version!'''',''''@encoding'''':''''Encoding!'''',''''@standalone'''':''''Standalone!''''}}'')", span="2806-2806"];
m7_789 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="Assert.AreEqual(null, d.Root)", span="2808-2808"];
m7_790 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="Assert.AreEqual(''Version!'', d.Declaration.Version)", span="2809-2809"];
m7_791 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="Assert.AreEqual(''Encoding!'', d.Declaration.Encoding)", span="2810-2810"];
m7_792 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="Assert.AreEqual(''Standalone!'', d.Declaration.Standalone)", span="2811-2811"];
m7_793 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRootWithDeclaration()", span="2804-2804"];
m7_350 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="913-913"];
m7_348 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="975-975"];
m7_351 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType currentObject = Peek()", span="915-915"];
m7_352 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label=currentObject, span="917-917"];
m7_16 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition.Type == JsonContainerType.None", span="317-317"];
m7_674 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m7_562 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", span="1753-1753"];
m7_563 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonReader.cs", label="string json = @''{\r\n  ''''$id'''': null\r\n}''", span="1755-1757"];
m7_564 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonReader.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1759-1759"];
m7_565 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonReader.cs", label="string xml = GetIndentedInnerXml(node)", span="1760-1760"];
m7_567 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonReader.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1765-1765"];
m7_566 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id='''''''' />'', xml)", span="1762-1763"];
m7_568 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''''''\r\n}'', newJson)", span="1767-1769"];
m7_569 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataWithNullValue()", span="1753-1753"];
m7_147 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXElement()", file="JsonReader.cs", label="var result = xmlDocument.Root.Nodes().ToArray()", span="328-328"];
m7_273 [cluster="Unk.CreateProcessingInstruction", file="JsonReader.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m7_274 [cluster="Unk.CreateCDataSection", file="JsonReader.cs", label="Entry Unk.CreateCDataSection", span=""];
m7_275 [cluster="Unk.CreateElement", file="JsonReader.cs", label="Entry Unk.CreateElement", span=""];
m7_278 [cluster="Unk.AppendChild", file="JsonReader.cs", label="Entry Unk.AppendChild", span=""];
m7_285 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="676-676"];
m7_310 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="_currentState = State.ConstructorStart", span="854-854"];
m7_322 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Integer", span="872-872"];
m7_323 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Float", span="873-873"];
m7_324 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Boolean", span="874-874"];
m7_325 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Null", span="875-875"];
m7_326 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.Date", span="876-876"];
m7_473 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1392-1392"];
m7_474 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonReader.cs", label="XmlDocument doc = new XmlDocument()", span="1394-1394"];
m7_475 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonReader.cs", label="doc.LoadXml(@''<name>O''''Connor</name>'')", span="1396-1396"];
m7_476 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonReader.cs", label="string json = SerializeXmlNode(doc)", span="1398-1398"];
m7_477 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''name'''': ''''O\''''Connor''''\r\n}'', json)", span="1399-1401"];
m7_478 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Encoding()", span="1392-1392"];
m7_657 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonReader.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m7_60 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="130-130"];
m7_61 [cluster="Unk.Create", file="JsonReader.cs", label="Entry Unk.Create", span=""];
m7_62 [cluster="System.IO.StringWriter.StringWriter()", file="JsonReader.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m7_586 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", span="1881-1881"];
m7_587 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="Product product = new Product()", span="1883-1883"];
m7_588 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="product.Name = ''Apple''", span="1885-1885"];
m7_589 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="product.ExpiryDate = new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc)", span="1886-1886"];
m7_590 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="product.Price = 3.99M", span="1887-1887"];
m7_591 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="product.Sizes = new string[] { ''Small'' }", span="1888-1888"];
m7_592 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="string output = JsonConvert.SerializeObject(product, new IsoDateTimeConverter())", span="1890-1890"];
m7_593 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''product'', true)", span="1892-1892"];
m7_594 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<product>\r\n  <Name>Apple</Name>\r\n  <ExpiryDate>2008-12-28T00:00:00Z</ExpiryDate>\r\n  <Price>3.99</Price>\r\n  <Sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>Small</Sizes>\r\n</product>'', IndentXml(xmlProduct.InnerXml))", span="1894-1899"];
m7_595 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented)", span="1901-1901"];
m7_596 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''product'''': {\r\n    ''''Name'''': ''''Apple'''',\r\n    ''''ExpiryDate'''': ''''2008-12-28T00:00:00Z'''',\r\n    ''''Price'''': ''''3.99'''',\r\n    ''''Sizes'''': [\r\n      ''''Small''''\r\n    ]\r\n  }\r\n}'', output2)", span="1903-1912"];
m7_597 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", span="1881-1881"];
m7_395 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JsonReader.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''r'''': {\r\n      ''''Date'''': [\r\n        ''''34343'''',\r\n        ''''55''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1070-1079"];
m7_396 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JsonReader.cs", label="StringAssert.AreEqual(expected, json)", span="1081-1081"];
m7_397 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="1059-1059"];
m7_834 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2879-2879"];
m7_835 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonReader.cs", label="string xmlString = @''<myemptynode />''", span="2881-2881"];
m7_836 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonReader.cs", label="var xml = XElement.Parse(xmlString)", span="2883-2883"];
m7_837 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXNode(xml, Formatting.Indented, true)", span="2885-2885"];
m7_838 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonReader.cs", label="Assert.AreEqual(''null'', json)", span="2887-2887"];
m7_839 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot_XElement()", span="2879-2879"];
m7_20 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_maxDepth != null && Depth + 1 > _maxDepth && !_hasExceededMaxDepth", span="327-327"];
m7_183 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonReader.cs", label="string xml = ''<root><p>Text1<span>Span1</span> <span>Span2</span> Text2</p></root>''", span="412-412"];
m7_184 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXNode(XElement.Parse(xml))", span="414-414"];
m7_186 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonReader.cs", label="XDocument doc = JsonConvert.DeserializeXNode(json)", span="418-418"];
m7_187 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<root>\r\n  <p>Text1 Text2<span>Span1</span><span>Span2</span></p>\r\n</root>'', doc.ToString())", span="420-422"];
m7_189 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="427-427"];
m7_192 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="432-432"];
m7_193 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="Assert.AreEqual(''null'', json)", span="433-433"];
m7_194 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="doc = new XmlDocument()", span="435-435"];
m7_199 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="443-443"];
m7_201 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="doc1 = XDocument.Parse(''<root></root>'')", span="446-446"];
m7_203 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="Assert.AreEqual(@'''''''''''', json)", span="449-449"];
m7_204 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="427-427"];
m7_197 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="Assert.AreEqual(@'''''''''''', json)", span="439-439"];
m7_185 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''root'''':{''''p'''':{''''#text'''':[''''Text1'''','''' Text2''''],''''span'''':[''''Span1'''',''''Span2'''']}}}'', json)", span="416-416"];
m7_188 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="410-410"];
m7_190 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="XmlDocument doc = new XmlDocument()", span="429-429"];
m7_191 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="doc.LoadXml(''<root />'')", span="430-430"];
m7_195 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="doc.LoadXml(''<root></root>'')", span="436-436"];
m7_198 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="XDocument doc1 = XDocument.Parse(''<root />'')", span="441-441"];
m7_200 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="Assert.AreEqual(''null'', json)", span="444-444"];
m7_202 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="json = JsonConvert.SerializeXNode(doc1, Formatting.Indented, true)", span="448-448"];
m7_196 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="JsonReader.cs", label="json = JsonConvert.SerializeXmlNode(doc, Formatting.Indented, true)", span="438-438"];
m7_101 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElement()", span="207-207"];
m7_354 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Object", span="920-920"];
m7_355 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Array", span="922-922"];
m7_356 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Array", span="923-923"];
m7_357 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.Constructor", span="925-925"];
m7_358 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="_currentState = State.Constructor", span="926-926"];
m7_360 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="SetFinished()", span="929-929"];
m7_359 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="JsonContainerType.None", span="928-928"];
m7_361 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''While setting the reader state back to current object an unexpected JsonType was encountered: {0}''.FormatWith(CultureInfo.InvariantCulture, currentObject));", span="932-932"];
m7_407 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="Newtonsoft.Json.JsonReader", span=""];
m7_408 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1125-1125"];
m7_409 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin1'''',\r\n        ''''Admin2''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1126-1138"];
m7_410 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1139-1139"];
m7_411 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''false''''>Admin1</role>\r\n			  </person>\r\n			</root>''", span="1141-1147"];
m7_412 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayDoc = new XmlDocument()", span="1149-1149"];
m7_413 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayDoc.LoadXml(arrayXml)", span="1150-1150"];
m7_414 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1152-1152"];
m7_415 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': ''''Admin1''''\r\n    }\r\n  }\r\n}''", span="1153-1162"];
m7_416 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1163-1163"];
m7_417 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayXml = @''<root>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="1165-1171"];
m7_418 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayDoc = new XmlDocument()", span="1173-1173"];
m7_419 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayDoc.LoadXml(arrayXml)", span="1174-1174"];
m7_420 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="1176-1176"];
m7_421 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="1177-1188"];
m7_422 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="StringAssert.AreEqual(expected, arrayJsonText)", span="1189-1189"];
m7_423 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="1085-1085"];
m7_457 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="1297-1297"];
m7_458 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonReader.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg'''',\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1299-1313"];
m7_459 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonReader.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'', true)", span="1316-1316"];
m7_461 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonReader.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'', true)", span="1334-1334"];
m7_464 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonReader.cs", label="StringAssert.AreEqual(json, newJson)", span="1353-1353"];
m7_460 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newDoc.InnerXml))", span="1318-1330"];
m7_463 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonReader.cs", label="string newJson = JsonConvert.SerializeXmlNode(newDoc, Formatting.Indented, true)", span="1352-1352"];
m7_462 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<myRoot>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n    <available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n  <available_sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <available_sizes json:Array=''''true''''>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes>\r\n  </available_sizes>\r\n</myRoot>'', IndentXml(newXDoc.ToString(SaveOptions.DisableFormatting)))", span="1336-1348"];
m7_465 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RoundTripNestedArrays()", span="1297-1297"];
m7_287 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonReader.cs", label="XmlDocumentFragment fragement = doc.CreateDocumentFragment()", span="680-680"];
m7_288 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonReader.cs", label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="682-682"];
m7_289 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonReader.cs", label="string jsonText = JsonConvert.SerializeXmlNode(fragement)", span="684-684"];
m7_290 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonReader.cs", label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="686-686"];
m7_291 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonReader.cs", label="Assert.AreEqual(expected, jsonText)", span="688-688"];
m7_292 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="676-676"];
m7_293 [cluster="Unk.CreateDocumentFragment", file="JsonReader.cs", label="Entry Unk.CreateDocumentFragment", span=""];
m7_165 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="586-586"];
m7_578 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1794-1794"];
m7_579 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="JsonReader.cs", label="string json = @''{\r\n  ''''8452309520V2'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Exp. Date 1''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Identification Issue Date 1''''\r\n        }\r\n      }\r\n    },\r\n    ''''457463534534'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS0'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}{\r\n  ''''34534634535345'''': {\r\n    '''''''': {\r\n      ''''CLIENT'''': {\r\n        ''''ID_NUMBER_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''S'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_EXPIRATION_1'''': {\r\n          ''''VALUE'''': ''''12/12/2000'''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''WALK_IN'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Walk in''''\r\n        },\r\n        ''''PERSONAL_MEETING'''': {\r\n          ''''VALUE'''': ''''PM1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Met Client in Person''''\r\n        },\r\n        ''''ID_ISSUEDATE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''D'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''PHOTO_ID'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        },\r\n        ''''ID_TYPE_1'''': {\r\n          ''''VALUE'''': '''''''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Picture ID''''\r\n        }\r\n      }\r\n    },\r\n    ''''45635624523'''': {\r\n      ''''ACCOUNT'''': {\r\n        ''''FUNDING_SOURCE'''': {\r\n          ''''VALUE'''': ''''FS1'''',\r\n          ''''DATATYPE'''': ''''L'''',\r\n          ''''MSG'''': ''''Missing Source of Funds''''\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="1796-1873"];
m7_580 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="JsonReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { DeserializeXmlNode(json); },\r\n                ''XmlNodeConverter cannot convert JSON with an empty property name to XML. Path '8452309520V2.', line 3, position 9.'')", span="1875-1877"];
m7_581 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyPropertyName()", span="1794-1794"];
m7_489 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1435-1435"];
m7_490 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n				<name>Alan</name>\r\n				<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n				<name>Louis</name>\r\n				<url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="1437-1447"];
m7_491 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="XmlDocument doc = new XmlDocument()", span="1449-1449"];
m7_492 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="doc.LoadXml(xml)", span="1450-1450"];
m7_493 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="string jsonText = SerializeXmlNode(doc)", span="1452-1452"];
m7_497 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="Assert.AreEqual(doc.InnerXml, newDoc.InnerXml)", span="1500-1500"];
m7_494 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="jsonText = JObject.Parse(jsonText).ToString()", span="1475-1475"];
m7_495 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''root'''': {\r\n    ''''person'''': [\r\n      {\r\n        ''''@id'''': ''''1'''',\r\n        ''''name'''': ''''Alan'''',\r\n        ''''url'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id'''': ''''2'''',\r\n        ''''name'''': ''''Louis'''',\r\n        ''''url'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', jsonText)", span="1477-1496"];
m7_496 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="1498-1498"];
m7_498 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeExample()", span="1435-1435"];
m7_685 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="2355-2355"];
m7_686 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="string xaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2357-2388"];
m7_687 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="XmlDocument document = new XmlDocument()", span="2390-2390"];
m7_688 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="document.LoadXml(xaml)", span="2391-2391"];
m7_689 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXmlNode(document, Formatting.Indented)", span="2393-2393"];
m7_690 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="2395-2550"];
m7_691 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="StringAssert.AreEqual(expectedJson, json)", span="2552-2552"];
m7_692 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json)", span="2554-2554"];
m7_693 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="StringWriter sw = new StringWriter()", span="2556-2556"];
m7_695 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="node.WriteTo(writer)", span="2562-2562"];
m7_694 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings\r\n            {\r\n                Indent = true,\r\n                OmitXmlDeclaration = true\r\n            })", span="2557-2561"];
m7_697 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="string xaml2 = sw.ToString()", span="2565-2565"];
m7_696 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="writer.Flush()", span="2563-2563"];
m7_698 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2567-2598"];
m7_699 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="StringAssert.AreEqual(expectedXaml, xaml2)", span="2600-2600"];
m7_700 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="2355-2355"];
m7_286 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="JsonReader.cs", label="XmlDocument doc = new XmlDocument()", span="678-678"];
m7_889 [cluster="List<JsonConverter>.cstr", file="JsonReader.cs", label="Entry List<JsonConverter>.cstr", span=""];
m7_501 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="1504-1504"];
m7_502 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JsonReader.cs", label="string json = @''{\r\n        ''''?xml'''': {\r\n          ''''@version'''': ''''1.0'''',\r\n          ''''@standalone'''': ''''no''''\r\n        },\r\n        ''''root'''': {\r\n          ''''person'''': [\r\n            {\r\n              ''''@id'''': ''''1'''',\r\n              ''''name'''': ''''Alan'''',\r\n              ''''url'''': ''''http://www.google.com''''\r\n            },\r\n            {\r\n              ''''@id'''': ''''2'''',\r\n              ''''name'''': ''''Louis'''',\r\n              ''''url'''': ''''http://www.yahoo.com''''\r\n            }\r\n          ]\r\n        }\r\n      }''", span="1506-1525"];
m7_503 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JsonReader.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(json)", span="1527-1527"];
m7_504 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><name>Alan</name><url>http://www.google.com</url></person><person id=''''2''''><name>Louis</name><url>http://www.yahoo.com</url></person></root>'', doc.InnerXml)", span="1540-1540"];
m7_505 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", span="1504-1504"];
m7_724 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", span="2641-2641"];
m7_100 [cluster="string.IsNullOrEmpty(string)", file="JsonReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m7_112 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="byte[] data = ReadAsBytes()", span="496-496"];
m7_113 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="ReadInternal()", span="497-497"];
m7_114 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="498-498"];
m7_118 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="byte[] data = (s.Length == 0) ? new byte[0] : Convert.FromBase64String(s)", span="506-506"];
m7_115 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return data;", span="499-499"];
m7_116 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="503-503"];
m7_117 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="string s = (string)Value", span="505-505"];
m7_119 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Bytes, data, false)", span="507-507"];
m7_888 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Model.Model()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Model.Model()", span="2942-2942"];
m7_166 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="587-587"];
m7_167 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="decimal d", span="589-589"];
m7_168 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="590-590"];
m7_169 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="string s = (string)Value", span="592-592"];
m7_175 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return d;", span="602-602"];
m7_170 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="593-593"];
m7_171 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="595-595"];
m7_173 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="decimal.TryParse(s, NumberStyles.Number, Culture, out d)", span="599-599"];
m7_172 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="return null;", span="596-596"];
m7_174 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Float, d, false)", span="601-601"];
m7_176 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimalInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Could not convert string to decimal: {0}.''.FormatWith(CultureInfo.InvariantCulture, Value));", span="606-606"];
m7_27 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="96-96"];
m7_21 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_hasExceededMaxDepth = true", span="329-329"];
m7_142 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Unexpected end when reading bytes.'');", span="550-550"];
m7_775 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", span="2784-2784"];
m7_776 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="JsonReader.cs", label="XDocument d = JsonConvert.DeserializeXNode(@''{}'')", span="2786-2786"];
m7_777 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="JsonReader.cs", label="Assert.AreEqual(null, d.Root)", span="2788-2788"];
m7_778 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="JsonReader.cs", label="Assert.AreEqual(null, d.Declaration)", span="2789-2789"];
m7_779 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Deserialize_XDocument_NoRoot()", span="2784-2784"];
m7_431 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="1205-1205"];
m7_432 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="JsonReader.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="1207-1207"];
m7_433 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="JsonReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifying a DeserializeRootElementName. Path 'photos', line 1, position 26.'')", span="1209-1211"];
m7_434 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXDocument()", span="1205-1205"];
m7_529 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
m7_706 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2615-2615"];
m7_707 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="var xmlString = @''<root xmlns=''''http://www.example.com/ns''''>\r\n  <a/>\r\n  <bns:b xmlns:bns=''''http://www.example.com/ns''''/>\r\n  <c/>\r\n</root>''", span="2617-2621"];
m7_708 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="var xml = XElement.Parse(xmlString)", span="2624-2624"];
m7_712 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="xml1.LoadXml(xmlString)", span="2632-2632"];
m7_709 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="var json1 = JsonConvert.SerializeObject(xml)", span="2626-2626"];
m7_710 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json1)", span="2628-2628"];
m7_711 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="var xml1 = new XmlDocument()", span="2631-2631"];
m7_713 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="var json2 = JsonConvert.SerializeObject(xml1)", span="2634-2634"];
m7_714 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json2)", span="2636-2636"];
m7_715 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2615-2615"];
m7_800 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", span="2825-2825"];
m7_801 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="JsonReader.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00Z''''}''", span="2827-2827"];
m7_802 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="JsonReader.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2828-2828"];
m7_803 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="JsonReader.cs", label="Assert.AreEqual(''2014-01-23T00:00:00Z'', dxml.Root.Element(''CreatedDate'').Value)", span="2829-2829"];
m7_804 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="JsonReader.cs", label="Console.WriteLine(''DateTimeToXml_Utc: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2831-2831"];
m7_805 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Utc()", span="2825-2825"];
m7_17 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="319-319"];
m7_46 [cluster="System.IO.StringReader.StringReader(string)", file="JsonReader.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m7_500 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422"];
m7_893 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042"];
m7_49 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="530-530"];
m7_646 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1886-1886"];
m7_644 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="442-442"];
m7_108 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return null;", span="486-486"];
m7_438 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="1216-1216"];
m7_439 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JsonReader.cs", label="string json = @''{''''count'''': 773840,''''photos'''': 773840}''", span="1218-1218"];
m7_440 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JsonReader.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1221-1221"];
m7_442 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JsonReader.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1227-1227"];
m7_441 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JsonReader.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newDoc.InnerXml)", span="1223-1223"];
m7_443 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JsonReader.cs", label="Assert.AreEqual(@''<myRoot><count>773840</count><photos>773840</photos></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="1229-1229"];
m7_444 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesAddRootElement()", span="1216-1216"];
m7_76 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.Null", span="438-438"];
m7_77 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="439-439"];
m7_78 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="DateTimeOffset dt", span="441-441"];
m7_82 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="SetToken(JsonToken.Null)", span="447-447"];
m7_79 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="t == JsonToken.String", span="442-442"];
m7_80 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="string s = (string)Value", span="444-444"];
m7_81 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="string.IsNullOrEmpty(s)", span="445-445"];
m7_83 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="return null;", span="448-448"];
m7_815 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", span="2847-2847"];
m7_816 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="JsonReader.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00.1234567''''}''", span="2849-2849"];
m7_817 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="JsonReader.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2850-2850"];
m7_818 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="JsonReader.cs", label="Assert.AreEqual(''2014-01-23T00:00:00.1234567'', dxml.Root.Element(''CreatedDate'').Value)", span="2851-2851"];
m7_819 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="JsonReader.cs", label="Console.WriteLine(''DateTimeToXml_Unspecified: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2853-2853"];
m7_820 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified_Precision()", span="2847-2847"];
m7_151 [cluster="System.Convert.ToByte(object, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.Convert.ToByte(object, System.IFormatProvider)", span="0-0"];
m7_456 [cluster="System.Console.WriteLine(string)", file="JsonReader.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m7_63 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonReader.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m7_144 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return null;", span="554-554"];
m7_145 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Error reading bytes. Unexpected token: {0}.''.FormatWith(CultureInfo.InvariantCulture, t));", span="556-556"];
m7_146 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475"];
m7_149 [cluster="System.Guid.ToByteArray()", file="JsonReader.cs", label="Entry System.Guid.ToByteArray()", span="0-0"];
m7_150 [cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_643 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_153 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="decimal d = (decimal)Math.PI + 1000000000m", span="359-359"];
m7_154 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="var x = new DecimalContainer { Number = d }", span="360-360"];
m7_156 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="364-368"];
m7_157 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="var xml = doc1.ToString()", span="370-370"];
m7_159 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="373-373"];
m7_162 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="357-357"];
m7_164 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537"];
m7_155 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="362-362"];
m7_158 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="Assert.AreEqual(''<Number>1000000003.14159265358979</Number>'', xml)", span="371-371"];
m7_160 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="DecimalContainer x2 = JsonConvert.DeserializeObject<DecimalContainer>(json2)", span="375-375"];
m7_161 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="JsonReader.cs", label="Assert.AreEqual(x.Number, x2.Number)", span="377-377"];
m7_177 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m7_178 [cluster="System.TimeSpan.FromHours(double)", file="JsonReader.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m7_23 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="313-313"];
m7_103 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", span="475-475"];
m7_104 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsBytes", span="477-477"];
m7_105 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="JsonToken t", span="479-479"];
m7_106 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="!ReadInternal()", span="483-483"];
m7_107 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="SetToken(JsonToken.None)", span="485-485"];
m7_813 [cluster="System.DateTime.Parse(string)", file="JsonReader.cs", label="Entry System.DateTime.Parse(string)", span="0-0"];
m7_51 [cluster="Unk.ToString", file="JsonReader.cs", label="Entry Unk.ToString", span=""];
m7_18 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_stack.Add(_currentPosition)", span="323-323"];
m7_716 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2649-2649"];
m7_717 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonReader.cs", label="var xml = new NullableXml { Name = ''test'', notNull = XElement.Parse(''<root>test</root>'') }", span="2651-2651"];
m7_718 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonReader.cs", label="var json = JsonConvert.SerializeObject(xml)", span="2652-2652"];
m7_720 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonReader.cs", label="Assert.AreEqual(xml.Name, w2.Name)", span="2655-2655"];
m7_721 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonReader.cs", label="Assert.AreEqual(xml.isNull, w2.isNull)", span="2656-2656"];
m7_722 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonReader.cs", label="Assert.AreEqual(xml.notNull.ToString(), w2.notNull.ToString())", span="2657-2657"];
m7_719 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonReader.cs", label="var w2 = JsonConvert.DeserializeObject<NullableXml>(json)", span="2654-2654"];
m7_723 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2649-2649"];
m7_84 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="object temp", span="451-451"];
m7_6 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_currentState = State.Start", span="304-304"];
m7_7 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_stack = new List<JsonPosition>(4)", span="305-305"];
m7_12 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.JsonReader()", span="302-302"];
m7_5 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.JsonReader()", span="302-302"];
m7_9 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateParseHandling = DateParseHandling.DateTime", span="307-307"];
m7_10 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_floatParseHandling = FloatParseHandling.Double", span="308-308"];
m7_8 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="_dateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind", span="306-306"];
m7_11 [cluster="Newtonsoft.Json.JsonReader.JsonReader()", file="JsonReader.cs", label="CloseInput = true", span="310-310"];
m7_14 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", span="313-313"];
m7_455 [cluster="Unk.IndentXml", file="JsonReader.cs", label="Entry Unk.IndentXml", span=""];
m7_848 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", span="2904-2904"];
m7_849 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="JsonReader.cs", label="var original = new XElement(''{http://example.com}MyElement'')", span="2906-2906"];
m7_850 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2907-2907"];
m7_851 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="JsonReader.cs", label="var json = JsonConvert.SerializeObject(original)", span="2909-2909"];
m7_852 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2910-2910"];
m7_853 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="JsonReader.cs", label="var deserialized = JsonConvert.DeserializeObject<XElement>(json)", span="2912-2912"];
m7_854 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2913-2913"];
m7_855 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeElementImplicitAttributeNamespace()", span="2904-2904"];
m7_892 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149"];
m7_28 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="JsonReader.cs", label="JsonTextReader reader", span="98-98"];
m7_122 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytesInternal()", file="JsonReader.cs", label="return null;", span="512-512"];
m7_759 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="2754-2754"];
m7_386 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label=token, span="977-977"];
m7_387 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndObject", span="979-979"];
m7_388 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Object;", span="980-980"];
m7_429 [cluster="lambda expression", file="JsonReader.cs", label="JsonConvert.DeserializeXmlNode(json)", span="1198-1198"];
m7_428 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="1198-1198"];
m7_430 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="1198-1198"];
m7_436 [cluster="lambda expression", file="JsonReader.cs", label="JsonConvert.DeserializeXNode(json)", span="1210-1210"];
m7_435 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="1210-1210"];
m7_437 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="1210-1210"];
m7_560 [cluster="lambda expression", file="JsonReader.cs", label="JsonConvert.DeserializeXmlNode(json, ''root'')", span="1748-1748"];
m7_559 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="1748-1748"];
m7_561 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="1748-1748"];
m7_584 [cluster="lambda expression", file="JsonReader.cs", label="DeserializeXmlNode(json)", span="1876-1876"];
m7_583 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="1876-1876"];
m7_585 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="1876-1876"];
m7_760 [cluster="lambda expression", file="JsonReader.cs", label="JsonConvert.DeserializeXmlNode(json)", span="2754-2754"];
m7_761 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="2754-2754"];
m7_635 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="2068-2068"];
m7_636 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonReader.cs", label="var dict = new Dictionary<string, object> { { ''Int16'', (short)1 }, { ''Float'', 2f }, { ''Int32'', 3 } }", span="2070-2070"];
m7_637 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonReader.cs", label="var obj = JObject.FromObject(dict)", span="2071-2071"];
m7_638 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonReader.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings { Converters = { new XmlNodeConverter() { DeserializeRootElementName = ''root'' } } })", span="2072-2072"];
m7_639 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonReader.cs", label="var reader = obj.CreateReader()", span="2073-2073"];
m7_640 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonReader.cs", label="var value = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="2075-2075"];
m7_641 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonReader.cs", label="Assert.AreEqual(@''<root><Int16>1</Int16><Float>2</Float><Int32>3</Int32></root>'', value.InnerXml)", span="2077-2077"];
m7_642 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="2068-2068"];
m7_701 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2604-2604"];
m7_702 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonReader.cs", label="string json = @''{''''item'''': {''''@action'''': ''''update'''', ''''@itemid'''': ''''1'''', ''''elements'''': [{''''@action'''': ''''none'''', ''''@id'''': ''''2''''},{''''@action'''': ''''none'''', ''''@id'''': ''''3''''}],''''@description'''': ''''temp''''}}''", span="2606-2606"];
m7_703 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonReader.cs", label="XmlDocument xmldoc = JsonConvert.DeserializeXmlNode(json)", span="2608-2608"];
m7_704 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonReader.cs", label="Assert.AreEqual(@''<item action=''''update'''' itemid=''''1'''' description=''''temp''''><elements action=''''none'''' id=''''2'''' /><elements action=''''none'''' id=''''3'''' /></item>'', xmldoc.InnerXml)", span="2610-2610"];
m7_705 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2604-2604"];
m7_774 [cluster="XDocument.cstr", file="JsonReader.cs", label="Entry XDocument.cstr", span=""];
m7_671 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.cstr", file="JsonReader.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.cstr", span=""];
m7_513 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1588-1588"];
m7_514 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="1590-1590"];
m7_515 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="1591-1591"];
m7_516 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="1592-1592"];
m7_517 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1594-1595"];
m7_518 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1597-1606"];
m7_519 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="XmlNode node = DeserializeXmlNode(json, ''root'')", span="1608-1608"];
m7_520 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="string xml = GetIndentedInnerXml(node)", span="1609-1609"];
m7_523 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="string xmlJson = SerializeXmlNode(node)", span="1620-1620"];
m7_521 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="string expected = @''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <other json:id=''''2''''>\r\n    <blah />\r\n  </other>\r\n  <self json:ref=''''1'''' />\r\n</root>''", span="1610-1616"];
m7_522 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="StringAssert.AreEqual(expected, xml)", span="1618-1618"];
m7_524 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="string expectedXmlJson = @''{\r\n  ''''root'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''other'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''blah'''': null\r\n    },\r\n    ''''self'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n}''", span="1621-1632"];
m7_525 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="StringAssert.AreEqual(expectedXmlJson, xmlJson)", span="1634-1634"];
m7_526 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1588-1588"];
m7_827 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", span="2867-2867"];
m7_828 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="JsonReader.cs", label="DateTime dt = DateTime.Parse(''2014-01-23T00:00:00.1234567+01:00'')", span="2869-2869"];
m7_829 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="JsonReader.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00.1234567+01:00''''}''", span="2871-2871"];
m7_831 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="JsonReader.cs", label="Assert.AreEqual(dt.ToString(''yyyy-MM-ddTHH:mm:ss.FFFFFFFK'', CultureInfo.InvariantCulture), dxml.Root.Element(''CreatedDate'').Value)", span="2873-2873"];
m7_830 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="JsonReader.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2872-2872"];
m7_832 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="JsonReader.cs", label="Console.WriteLine(''DateTimeToXml_Local: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2875-2875"];
m7_833 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Local_Precision()", span="2867-2867"];
m7_29 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonReader.Pop()", span="335-335"];
m7_32 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="340-340"];
m7_33 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = _stack[_stack.Count - 1]", span="341-341"];
m7_36 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_currentPosition = new JsonPosition()", span="347-347"];
m7_30 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="JsonPosition oldPosition", span="337-337"];
m7_34 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack.RemoveAt(_stack.Count - 1)", span="342-342"];
m7_31 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_stack.Count > 0", span="338-338"];
m7_38 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_hasExceededMaxDepth = false", span="351-351"];
m7_35 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="oldPosition = _currentPosition", span="346-346"];
m7_37 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="_maxDepth != null && Depth <= _maxDepth", span="350-350"];
m7_39 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="return oldPosition.Type;", span="353-353"];
m7_40 [cluster="Newtonsoft.Json.JsonReader.Pop()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.Pop()", span="335-335"];
m7_65 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="_readType = ReadType.ReadAsDateTimeOffset", span="413-413"];
m7_527 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="433-433"];
m7_755 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", span="2730-2730"];
m7_756 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="JsonReader.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''AOSLocaleName'''': ''''en-US'''',\r\n  ''''AXLanguage'''': ''''EN-AU'''',\r\n  ''''Company'''': ''''AURE'''',\r\n  ''''CompanyTimeZone'''': 8,\r\n  ''''CurrencyInfo'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''CurrencyCode'''': ''''AUD'''',\r\n    ''''Description'''': ''''Australian Dollar'''',\r\n    ''''ExchangeRate'''': 100.0,\r\n    ''''ISOCurrencyCode'''': ''''AUD'''',\r\n    ''''Prefix'''': '''''''',\r\n    ''''Suffix'''': ''''''''\r\n  },\r\n  ''''IsSysAdmin'''': true,\r\n  ''''UserId'''': ''''lamar.miller'''',\r\n  ''''UserPreferredCalendar'''': 0,\r\n  ''''UserPreferredTimeZone'''': 8\r\n}''", span="2732-2751"];
m7_757 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="JsonReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeXmlNode(json),\r\n                ''JSON root object has property '$id' that will be converted to an attribute. A root object cannot have any attribute properties. Consider specifying a DeserializeRootElementName. Path '$id', line 2, position 12.'')", span="2753-2755"];
m7_758 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootPropertyError()", span="2730-2730"];
m7_466 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1358-1358"];
m7_467 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JsonReader.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      [113, 150],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      [189, 250],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      [341, 450],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-450x450.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1360-1375"];
m7_468 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JsonReader.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1378-1378"];
m7_470 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JsonReader.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1384-1384"];
m7_469 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JsonReader.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="1380-1380"];
m7_471 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JsonReader.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="1386-1386"];
m7_472 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1358-1358"];
m7_794 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", span="2815-2815"];
m7_795 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="JsonReader.cs", label="string json = @''{''''CreatedDate'''': ''''2014-01-23T00:00:00''''}''", span="2817-2817"];
m7_796 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="JsonReader.cs", label="var dxml = JsonConvert.DeserializeXNode(json, ''root'')", span="2818-2818"];
m7_797 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="JsonReader.cs", label="Assert.AreEqual(''2014-01-23T00:00:00'', dxml.Root.Element(''CreatedDate'').Value)", span="2819-2819"];
m7_798 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="JsonReader.cs", label="Console.WriteLine(''DateTimeToXml_Unspecified: '' + dxml.Root.Element(''CreatedDate'').Value)", span="2821-2821"];
m7_799 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeToXml_Unspecified()", span="2815-2815"];
m7_389 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndArray", span="981-981"];
m7_390 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Array;", span="982-982"];
m7_391 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="983-983"];
m7_392 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="return JsonContainerType.Constructor;", span="984-984"];
m7_393 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''Not a valid close JsonToken: {0}''.FormatWith(CultureInfo.InvariantCulture, token));", span="986-986"];
m7_394 [cluster="Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.GetTypeForCloseToken(Newtonsoft.Json.JsonToken)", span="975-975"];
m7_66 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="JsonToken t", span="415-415"];
m7_109 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524"];
m7_110 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703"];
m7_741 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", span="2702-2702"];
m7_742 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="JsonReader.cs", label="var json = ''{\''DocumentId\'':13779965364495889899 }''", span="2704-2704"];
m7_743 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="JsonReader.cs", label="XmlDocument node = JsonConvert.DeserializeXmlNode(json)", span="2706-2706"];
m7_744 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="JsonReader.cs", label="Assert.AreEqual(''<DocumentId>13779965364495889899</DocumentId>'', node.OuterXml)", span="2708-2708"];
m7_745 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="JsonReader.cs", label="string json2 = JsonConvert.SerializeXmlNode(node)", span="2710-2710"];
m7_746 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''DocumentId'''':''''13779965364495889899''''}'', json2)", span="2712-2712"];
m7_747 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeBigInteger()", span="2702-2702"];
m7_611 [cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_311 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="Push(JsonContainerType.Constructor)", span="855-855"];
m7_314 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndArray", span="860-860"];
m7_315 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndArray)", span="861-861"];
m7_316 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.EndConstructor", span="863-863"];
m7_317 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="ValidateEnd(JsonToken.EndConstructor)", span="864-864"];
m7_318 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object, bool)", file="JsonReader.cs", label="JsonToken.PropertyName", span="866-866"];
m7_733 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2683-2683"];
m7_734 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="var xmlString = @''<root>\r\n                              <b xmlns='http://www.example.com/ns'>Asd</b>\r\n                              <c>AAA</c>\r\n                              <test>adad</test>\r\n                              </root>''", span="2685-2689"];
m7_735 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="XmlDocument xml = new XmlDocument()", span="2691-2691"];
m7_736 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="xml.LoadXml(xmlString)", span="2692-2692"];
m7_737 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="var json1 = JsonConvert.SerializeXmlNode(xml)", span="2694-2694"];
m7_738 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="var xmlBack = JsonConvert.DeserializeObject<XmlDocument>(json1)", span="2695-2695"];
m7_739 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="Assert.AreEqual(@''<root><b xmlns=''''http://www.example.com/ns''''>Asd</b><c>AAA</c><test>adad</test></root>'', xmlBack.OuterXml)", span="2697-2697"];
m7_740 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2683-2683"];
m7_780 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRootWithDeclaration()", span="2793-2793"];
m7_781 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="XDocument d = new XDocument()", span="2795-2795"];
m7_782 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="d.Declaration = new XDeclaration(''Version!'', ''Encoding!'', ''Standalone!'')", span="2796-2796"];
m7_783 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXNode(d)", span="2798-2798"];
m7_784 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''?xml'''':{''''@version'''':''''Version!'''',''''@encoding'''':''''Encoding!'''',''''@standalone'''':''''Standalone!''''}}'', json)", span="2800-2800"];
m7_785 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRootWithDeclaration()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.Serialize_XDocument_NoRootWithDeclaration()", span="2793-2793"];
m7_673 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonReader.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m7_786 [cluster="XDeclaration.cstr", file="JsonReader.cs", label="Entry XDeclaration.cstr", span=""];
m7_891 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", file="JsonReader.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder, System.IFormatProvider)", span="0-0"];
m7_856 [cluster="XElement.cstr", file="JsonReader.cs", label="Entry XElement.cstr", span=""];
m7_337 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="911-911"];
m7_506 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", span="1544-1544"];
m7_507 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonReader.cs", label="string json = @''{\r\n              ''''root!'''': {\r\n                ''''person!'''': [\r\n                  {\r\n                    ''''@id!'''': ''''1'''',\r\n                    ''''name!'''': ''''Alan'''',\r\n                    ''''url!'''': ''''http://www.google.com''''\r\n                  },\r\n                  {\r\n                    ''''@id!'''': ''''2'''',\r\n                    ''''name!'''': ''''Louis'''',\r\n                    ''''url!'''': ''''http://www.yahoo.com''''\r\n                  }\r\n                ]\r\n              }\r\n            }''", span="1546-1561"];
m7_508 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonReader.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(json)", span="1563-1563"];
m7_509 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonReader.cs", label="Assert.AreEqual(@''<root_x0021_><person_x0021_ id_x0021_=''''1''''><name_x0021_>Alan</name_x0021_><url_x0021_>http://www.google.com</url_x0021_></person_x0021_><person_x0021_ id_x0021_=''''2''''><name_x0021_>Louis</name_x0021_><url_x0021_>http://www.yahoo.com</url_x0021_></person_x0021_></root_x0021_>'', doc.InnerXml)", span="1565-1565"];
m7_510 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonReader.cs", label="string json2 = SerializeXmlNode(doc)", span="1567-1567"];
m7_511 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''root!'''': {\r\n    ''''person!'''': [\r\n      {\r\n        ''''@id!'''': ''''1'''',\r\n        ''''name!'''': ''''Alan'''',\r\n        ''''url!'''': ''''http://www.google.com''''\r\n      },\r\n      {\r\n        ''''@id!'''': ''''2'''',\r\n        ''''name!'''': ''''Louis'''',\r\n        ''''url!'''': ''''http://www.yahoo.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json2)", span="1569-1584"];
m7_512 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EscapingNames()", span="1544-1544"];
m7_857 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", span="2917-2917"];
m7_858 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="JsonReader.cs", label="var original = XDocument.Parse(''<MyElement xmlns=\''http://example.com\'' />'')", span="2919-2919"];
m7_859 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2920-2920"];
m7_860 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="JsonReader.cs", label="var json = JsonConvert.SerializeObject(original)", span="2922-2922"];
m7_861 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2923-2923"];
m7_862 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="JsonReader.cs", label="var deserialized = JsonConvert.DeserializeObject<XDocument>(json)", span="2925-2925"];
m7_863 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2926-2926"];
m7_864 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentExplicitAttributeNamespace()", span="2917-2917"];
m7_22 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="throw JsonReaderException.Create(this, ''The reader's MaxDepth of {0} has been exceeded.''.FormatWith(CultureInfo.InvariantCulture, _maxDepth));", span="330-330"];
m7_555 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", span="1741-1741"];
m7_556 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="JsonReader.cs", label="string json = @''{\r\n  ''''$id'''': []\r\n}''", span="1743-1745"];
m7_557 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="JsonReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json, ''root''); },\r\n                ''Unexpected JsonToken: StartArray. Path '$id', line 2, position 10.'')", span="1747-1749"];
m7_558 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeMetadataPropertyWithBadValue()", span="1741-1741"];
m7_52 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="130-130"];
m7_53 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonReader.cs", label="XmlReader reader = XmlReader.Create(new StringReader(xml))", span="132-132"];
m7_54 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonReader.cs", label="StringWriter sw = new StringWriter()", span="134-134"];
m7_56 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonReader.cs", label="reader.Read()", span="137-137"];
m7_57 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonReader.cs", label="writer.WriteNode(reader, false)", span="139-139"];
m7_55 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonReader.cs", label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings { Indent = true, OmitXmlDeclaration = true })", span="135-135"];
m7_59 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonReader.cs", label="return sw.ToString();", span="144-144"];
m7_58 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="JsonReader.cs", label="writer.Flush()", span="142-142"];
m7_19 [cluster="Newtonsoft.Json.JsonReader.Push(Newtonsoft.Json.JsonContainerType)", file="JsonReader.cs", label="_currentPosition = new JsonPosition(value)", span="324-324"];
m7_628 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="2047-2047"];
m7_629 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonReader.cs", label="string xml = @''<root>\r\n<Reports d1p1:Array=''''true'''' xmlns:d1p1=''''http://james.newtonking.com/projects/json'''' />\r\n</root>''", span="2049-2051"];
m7_630 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonReader.cs", label="XmlDocument d = new XmlDocument()", span="2053-2053"];
m7_631 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonReader.cs", label="d.LoadXml(xml)", span="2054-2054"];
m7_632 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="2056-2056"];
m7_633 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''root'''': {\r\n    ''''Reports'''': [\r\n      {}\r\n    ]\r\n  }\r\n}'', json)", span="2058-2064"];
m7_634 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="2047-2047"];
m7_96 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", file="JsonReader.cs", label="Exit Newtonsoft.Json.JsonReader.ReadAsDateTimeOffsetInternal()", span="411-411"];
m7_601 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="548-548"];
m7_330 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="doc.LoadXml(xml)", span="854-854"];
m7_331 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="string jsonText = SerializeXmlNode(doc)", span="856-856"];
m7_332 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''xs:schema'''': {\r\n    ''''@xs:id'''': ''''SomeID'''',\r\n    ''''@xmlns'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''xs:element'''': {\r\n      ''''@name'''': ''''MyDataSet'''',\r\n      ''''@msdata:IsDataSet'''': ''''true'''',\r\n      ''''xs:complexType'''': {\r\n        ''''xs:choice'''': {\r\n          ''''@maxOccurs'''': ''''unbounded'''',\r\n          ''''xs:element'''': {\r\n            ''''@name'''': ''''customers'''',\r\n            ''''xs:complexType'''': {\r\n              ''''xs:sequence'''': {\r\n                ''''xs:element'''': [\r\n                  {\r\n                    ''''@name'''': ''''CustomerID'''',\r\n                    ''''@type'''': ''''xs:integer'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''CompanyName'''',\r\n                    ''''@type'''': ''''xs:string'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''Phone'''',\r\n                    ''''@type'''': ''''xs:string''''\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="858-901"];
m7_334 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="XmlDocument deserializedDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="905-905"];
m7_333 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="StringAssert.AreEqual(expected, jsonText)", span="903-903"];
m7_329 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="XmlDocument doc = new XmlDocument()", span="853-853"];
m7_321 [cluster="System.Text.StringBuilder.ToString()", file="JsonReader.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_328 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="829-851"];
m7_327 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="827-827"];
m7_335 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="JsonReader.cs", label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="907-907"];
m7_599 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonReader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m7_762 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", span="2759-2759"];
m7_763 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="JsonReader.cs", label="string xmlString = @''<myemptynode />''", span="2761-2761"];
m7_764 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="JsonReader.cs", label="XmlDocument xml = new XmlDocument()", span="2763-2763"];
m7_765 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="JsonReader.cs", label="xml.LoadXml(xmlString)", span="2764-2764"];
m7_766 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="JsonReader.cs", label="string json = JsonConvert.SerializeXmlNode(xml, Formatting.Indented, true)", span="2766-2766"];
m7_767 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="JsonReader.cs", label="Assert.AreEqual(''null'', json)", span="2768-2768"];
m7_768 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyNodeAndOmitRoot()", span="2759-2759"];
m7_890 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="JsonReader.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m7_612 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1963-1963"];
m7_613 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="JsonReader.cs", label="string xml = @''<test>\r\n  <Name>Hi</Name>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>''", span="1965-1974"];
m7_614 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="JsonReader.cs", label="XmlDocument d = new XmlDocument()", span="1976-1976"];
m7_615 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="JsonReader.cs", label="d.LoadXml(xml)", span="1977-1977"];
m7_616 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="JsonReader.cs", label="string output = JsonConvert.SerializeXmlNode(d, Formatting.Indented, true)", span="1979-1979"];
m7_617 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': [\r\n    ''''Hi'''',\r\n    ''''Hi''''\r\n  ],\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output)", span="1981-1994"];
m7_618 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1963-1963"];
m7_530 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", span="1638-1638"];
m7_531 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonReader.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}''", span="1640-1649"];
m7_532 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonReader.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1651-1651"];
m7_536 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonReader.cs", label="StringAssert.AreEqual(json, newJson)", span="1665-1665"];
m7_533 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonReader.cs", label="string xml = GetIndentedInnerXml(node)", span="1652-1652"];
m7_535 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonReader.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1663-1663"];
m7_534 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1654-1661"];
m7_537 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArray()", span="1638-1638"];
m7_424 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="1193-1193"];
m7_425 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="JsonReader.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="1195-1195"];
m7_426 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="JsonReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeXmlNode(json); },\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifying a DeserializeRootElementName. Path 'photos', line 1, position 26.'')", span="1197-1199"];
m7_427 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="1193-1193"];
m7_547 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", span="1701-1701"];
m7_548 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="JsonReader.cs", label="string json = @''{\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ],\r\n  ''''$id'''': ''''1''''\r\n}''", span="1703-1712"];
m7_549 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="JsonReader.cs", label="XmlNode node = JsonConvert.DeserializeXmlNode(json, ''root'')", span="1714-1714"];
m7_550 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="JsonReader.cs", label="string xml = GetIndentedInnerXml(node)", span="1715-1715"];
m7_552 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="JsonReader.cs", label="string newJson = JsonConvert.SerializeXmlNode(node, Formatting.Indented, true)", span="1726-1726"];
m7_551 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="JsonReader.cs", label="StringAssert.AreEqual(@''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>1</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>2</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>3</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>4</values>\r\n  <values xmlns=''''http://james.newtonking.com/projects/json''''>5</values>\r\n</root>'', xml)", span="1717-1724"];
m7_553 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="JsonReader.cs", label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$values'''': [\r\n    ''''1'''',\r\n    ''''2'''',\r\n    ''''3'''',\r\n    ''''4'''',\r\n    ''''5''''\r\n  ]\r\n}'', newJson)", span="1728-1737"];
m7_554 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataArrayWithIdLast()", span="1701-1701"];
m7_655 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonReader.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m7_865 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", span="2930-2930"];
m7_866 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="JsonReader.cs", label="var original = new XDocument(new XElement(''{http://example.com}MyElement''))", span="2932-2932"];
m7_867 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', original.ToString())", span="2933-2933"];
m7_868 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="JsonReader.cs", label="var json = JsonConvert.SerializeObject(original)", span="2935-2935"];
m7_869 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''{''''MyElement'''':{''''@xmlns'''':''''http://example.com''''}}'', json)", span="2936-2936"];
m7_870 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="JsonReader.cs", label="var deserialized = JsonConvert.DeserializeObject<XDocument>(json)", span="2938-2938"];
m7_871 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="JsonReader.cs", label="Assert.AreEqual(@''<MyElement xmlns=''''http://example.com'''' />'', deserialized.ToString())", span="2939-2939"];
m7_872 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDocumentImplicitAttributeNamespace()", span="2930-2930"];
m7_656 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonReader.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m7_582 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m7_894 [file="JsonReader.cs", label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", span=""];
m7_895 [file="JsonReader.cs", label=json, span=""];
m7_896 [file="JsonReader.cs", label=json, span=""];
m7_897 [file="JsonReader.cs", label=json, span=""];
m7_898 [file="JsonReader.cs", label=json, span=""];
m7_899 [file="JsonReader.cs", label=json, span=""];
m7_900 [file="JsonReader.cs", label=json, span=""];
m8_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", span="194-194"];
m8_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="_formatterConverter == null", span="196-196"];
m8_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="_formatterConverter = new JsonFormatterConverter(GetInternalSerializer())", span="197-197"];
m8_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="return _formatterConverter;", span="199-199"];
m8_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", span="194-194"];
m8_943 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54"];
m8_39 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="163-163"];
m8_543 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="39-39"];
m8_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="101-101"];
m8_727 [cluster="Newtonsoft.Json.JsonReader.GetPosition(int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.GetPosition(int)", span="291-291"];
m8_852 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.TrySetMember(System.Dynamic.IDynamicMetaObjectProvider, string, object)", span="105-105"];
m8_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="224-224"];
m8_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="CheckPropertyName(reader, propertyName)", span="241-241"];
m8_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="string propertyName = (string)reader.Value", span="237-237"];
m8_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="238-238"];
m8_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WritePropertyName(propertyName)", span="244-244"];
m8_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="252-252"];
m8_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="226-226"];
m8_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="235-235"];
m8_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteToken(reader, true, true)", span="245-245"];
m8_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="254-254"];
m8_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="229-229"];
m8_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteStartObject()", span="231-231"];
m8_116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="return writer.Token;", span="250-250"];
m8_115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteEndObject()", span="249-249"];
m8_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="224-224"];
m8_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="1783-1783"];
m8_982 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label=hasConverter, span="1787-1787"];
m8_983 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return reader.Read();", span="1788-1788"];
m8_984 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType t = (contract != null) ? contract.InternalReadType : ReadType.Read", span="1790-1790"];
m8_987 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1797-1797"];
m8_989 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.Comment", span="1799-1799"];
m8_992 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsInt32()", span="1803-1803"];
m8_994 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDecimal()", span="1806-1806"];
m8_996 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsBytes()", span="1809-1809"];
m8_998 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsString()", span="1812-1812"];
m8_1000 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDateTime()", span="1815-1815"];
m8_1002 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDateTimeOffset()", span="1819-1819"];
m8_1004 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return (reader.TokenType != JsonToken.None);", span="1826-1826"];
m8_1003 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentOutOfRangeException();", span="1823-1823"];
m8_988 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return false;", span="1798-1798"];
m8_990 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="1801-1801"];
m8_985 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label=t, span="1792-1792"];
m8_986 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.Read", span="1794-1794"];
m8_991 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsInt32", span="1802-1802"];
m8_993 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDecimal", span="1805-1805"];
m8_995 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsBytes", span="1808-1808"];
m8_997 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsString", span="1811-1811"];
m8_999 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDateTime", span="1814-1814"];
m8_1001 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="ReadType.ReadAsDateTimeOffset", span="1818-1818"];
m8_1005 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, bool)", span="1783-1783"];
m8_908 [cluster="Unk.ToDictionary", file="JsonSerializerInternalReader.cs", label="Entry Unk.ToDictionary", span=""];
m8_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="133-133"];
m8_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="JsonContract contract = GetContractSafe(objectType)", span="138-138"];
m8_51 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="JsonConverter converter = GetConverter(contract, null, null, null)", span="142-142"];
m8_52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.None && !ReadForType(reader, contract, converter != null)", span="144-144"];
m8_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="deserializedValue = DeserializeConvertable(converter, reader, objectType, null)", span="155-155"];
m8_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="deserializedValue = CreateValueInternal(reader, objectType, contract, null, null, null, null)", span="157-157"];
m8_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(null, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="169-169"];
m8_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, false, 0)", span="171-171"];
m8_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="ClearErrorContext()", span="179-179"];
m8_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="reader == null", span="135-135"];
m8_53 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="contract != null && !contract.IsNullable", span="146-146"];
m8_54 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''No JSON content found and type '{0}' is not nullable.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="147-147"];
m8_57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="converter != null && converter.CanRead", span="154-154"];
m8_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="object deserializedValue", span="152-152"];
m8_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label=checkAdditionalContent, span="159-159"];
m8_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="return deserializedValue;", span="165-165"];
m8_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label=Exception, span="167-167"];
m8_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="return null;", span="172-172"];
m8_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw;", span="180-180"];
m8_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="161-161"];
m8_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentNullException(''reader'');", span="136-136"];
m8_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="return null;", span="149-149"];
m8_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="162-162"];
m8_70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type, bool)", span="133-133"];
m8_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="1692-1692"];
m8_936 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1694-1694"];
m8_937 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="1695-1695"];
m8_938 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="object value = converter.ReadJson(reader, objectType, existingValue, GetInternalSerializer())", span="1697-1697"];
m8_939 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1699-1699"];
m8_940 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0} with converter {1}.''.FormatWith(CultureInfo.InvariantCulture, objectType, converter.GetType())), null)", span="1700-1700"];
m8_941 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="return value;", span="1702-1702"];
m8_942 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.DeserializeConvertable(Newtonsoft.Json.JsonConverter, Newtonsoft.Json.JsonReader, System.Type, object)", span="1692-1692"];
m8_38 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonSerializerInternalReader.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m8_331 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="92-92"];
m8_723 [cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0"];
m8_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="214-214"];
m8_477 [cluster="System.Enum.ToObject(System.Type, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Enum.ToObject(System.Type, object)", span="0-0"];
m8_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType == JsonContractType.Dictionary", span="105-105"];
m8_541 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="944-944"];
m8_1072 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2043-2043"];
m8_1118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property != null && requiredProperties != null", span="2045-2045"];
m8_1119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="requiredProperties[property] = (reader.TokenType == JsonToken.Null || reader.TokenType == JsonToken.Undefined)\r\n                    ? PropertyPresence.Null\r\n                    : PropertyPresence.Value", span="2047-2049"];
m8_1120 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="2043-2043"];
m8_542 [cluster="Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.GetResolvedDefaultValue()", span="164-164"];
m8_539 [cluster="System.Type.IsValueType()", file="JsonSerializerInternalReader.cs", label="Entry System.Type.IsValueType()", span="531-531"];
m8_538 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m8_551 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", span="64-64"];
m8_37 [cluster="object.ToString()", file="JsonSerializerInternalReader.cs", label="Entry object.ToString()", span="0-0"];
m8_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="969-969"];
m8_545 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="973-973"];
m8_546 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Read object reference Id '{0}' for {1}.''.FormatWith(CultureInfo.InvariantCulture, id, value.GetType())), null)", span="974-974"];
m8_547 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Serializer.GetReferenceResolver().AddReference(this, id, value)", span="976-976"];
m8_548 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label=Exception, span="978-978"];
m8_549 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error reading object reference '{0}'.''.FormatWith(CultureInfo.InvariantCulture, id), ex);", span="980-980"];
m8_550 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.AddReference(Newtonsoft.Json.JsonReader, string, object)", span="969-969"];
m8_725 [cluster="System.Collections.Generic.Stack<T>.Peek()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Peek()", span="0-0"];
m8_333 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38"];
m8_276 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31"];
m8_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="984-984"];
m8_552 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="return ((value & flag) == flag);", span="986-986"];
m8_553 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="984-984"];
m8_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName && string.Equals(reader.Value.ToString(), JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="98-98"];
m8_36 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="730-730"];
m8_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="732-732"];
m8_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="733-733"];
m8_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="730-730"];
m8_28 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="52-52"];
m8_478 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.FromBigInteger(BigInteger, System.Type)", span="325-325"];
m8_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="102-102"];
m8_165 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48"];
m8_1010 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="395-395"];
m8_279 [cluster="string.FormatWith(System.IFormatProvider, object, object)", file="JsonSerializerInternalReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52"];
m8_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="340-340"];
m8_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="(matchingConverter = Serializer.GetMatchingConverter(contract.UnderlyingType)) != null", span="362-362"];
m8_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="JsonConverter converter = null", span="342-342"];
m8_191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="contract.Converter != null", span="359-359"];
m8_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = matchingConverter", span="364-364"];
m8_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="contract.InternalConverter != null", span="365-365"];
m8_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="memberConverter != null", span="343-343"];
m8_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = memberConverter", span="346-346"];
m8_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="containerProperty != null && containerProperty.ItemConverter != null", span="348-348"];
m8_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = containerProperty.ItemConverter", span="350-350"];
m8_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="containerContract != null && containerContract.ItemConverter != null", span="352-352"];
m8_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = containerContract.ItemConverter", span="354-354"];
m8_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="contract != null", span="356-356"];
m8_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = contract.Converter", span="361-361"];
m8_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="converter = contract.InternalConverter", span="367-367"];
m8_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="return converter;", span="369-369"];
m8_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="JsonConverter matchingConverter", span="358-358"];
m8_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty)", span="340-340"];
m8_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="203-203"];
m8_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="205-205"];
m8_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract != null && contract.UnderlyingType == typeof(JRaw)", span="207-207"];
m8_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return JRaw.Create(reader);", span="209-209"];
m8_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="writer.WriteToken(reader)", span="216-216"];
m8_96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JToken token", span="213-213"];
m8_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return token;", span="220-220"];
m8_97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="214-214"];
m8_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="token = writer.Token", span="217-217"];
m8_101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="203-203"];
m8_474 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="136-136"];
m8_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1489-1489"];
m8_810 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null &&\r\n                (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1496-1497"];
m8_814 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, newObject)", span="1503-1503"];
m8_815 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, newObject)", span="1505-1505"];
m8_826 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1528-1528"];
m8_827 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, null, null)", span="1530-1530"];
m8_828 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!SetPropertyValue(property, propertyConverter, null, member, reader, newObject)", span="1532-1532"];
m8_831 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonContract dynamicMemberContract = GetContractSafe(t)", span="1539-1539"];
m8_832 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter dynamicMemberConverter = GetConverter(dynamicMemberContract, null, null, member)", span="1540-1540"];
m8_835 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(dynamicMemberConverter, reader, t, null)", span="1544-1544"];
m8_836 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, t, dynamicMemberContract, null, null, member, null)", span="1546-1546"];
m8_839 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1553-1553"];
m8_840 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1554-1554"];
m8_847 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1568-1568"];
m8_848 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, newObject)", span="1570-1570"];
m8_817 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1509-1509"];
m8_808 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!contract.IsInstantiable", span="1493-1493"];
m8_811 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="newObject = (IDynamicMetaObjectProvider)contract.DefaultCreator()", span="1498-1498"];
m8_812 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1500-1500"];
m8_807 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IDynamicMetaObjectProvider newObject", span="1491-1491"];
m8_813 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1502-1502"];
m8_816 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1507-1507"];
m8_823 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1523-1523"];
m8_825 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1527-1527"];
m8_829 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1533-1533"];
m8_838 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1551-1551"];
m8_845 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1565-1565"];
m8_830 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Type t = (JsonReader.IsPrimitiveToken(reader.TokenType)) ? reader.ValueType : typeof(IDynamicMetaObjectProvider)", span="1537-1537"];
m8_833 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object value", span="1542-1542"];
m8_834 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dynamicMemberConverter != null && dynamicMemberConverter.CanRead", span="1543-1543"];
m8_837 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.TrySetMember(newObject, memberName, value)", span="1548-1548"];
m8_820 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1515-1515"];
m8_841 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1556-1556"];
m8_846 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1567-1567"];
m8_849 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="1572-1572"];
m8_818 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1512-1512"];
m8_809 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1494-1494"];
m8_821 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1519-1519"];
m8_822 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1520-1520"];
m8_844 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1563-1563"];
m8_824 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property != null && property.Writable && !property.Ignored", span="1525-1525"];
m8_843 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1560-1560"];
m8_819 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1514-1514"];
m8_842 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1559-1559"];
m8_850 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1489-1489"];
m8_78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2053-2053"];
m8_1121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="ClearErrorContext()", span="2055-2055"];
m8_1122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label=readPastError, span="2057-2057"];
m8_1123 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="2059-2059"];
m8_1124 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="reader.Depth > (initialDepth + 1)", span="2061-2061"];
m8_1125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="2063-2063"];
m8_1126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, bool, int)", span="2053-2053"];
m8_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1331-1331"];
m8_738 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, underlyingList)", span="1337-1337"];
m8_742 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, underlyingList)", span="1346-1346"];
m8_745 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract = GetContractSafe(contract.CollectionItemType)", span="1351-1351"];
m8_746 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter collectionItemConverter = GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1353-1353"];
m8_749 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ReadForType(reader, contract.ItemContract, collectionItemConverter != null)", span="1362-1362"];
m8_756 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1375-1375"];
m8_757 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, contract.ItemContract, null, contract, containerProperty, null)", span="1377-1377"];
m8_761 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(underlyingList, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1392-1392"];
m8_762 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1394-1394"];
m8_769 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingList, ''Unexpected end when deserializing array.'')", span="1415-1415"];
m8_770 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, underlyingList)", span="1417-1417"];
m8_747 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int? previousErrorIndex = null", span="1355-1355"];
m8_748 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1357-1357"];
m8_736 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object underlyingList = wrappedCollection != null ? wrappedCollection.UnderlyingCollection : list", span="1334-1334"];
m8_737 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1336-1336"];
m8_739 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="list.IsFixedSize", span="1340-1340"];
m8_743 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1348-1348"];
m8_744 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract == null", span="1350-1350"];
m8_755 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1374-1374"];
m8_750 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1364-1364"];
m8_768 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1414-1414"];
m8_758 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="list.Add(value)", span="1379-1379"];
m8_760 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1390-1390"];
m8_766 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1409-1409"];
m8_763 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1396-1396"];
m8_771 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return underlyingList;", span="1418-1418"];
m8_735 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection wrappedCollection = list as IWrappedCollection", span="1333-1333"];
m8_740 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1342-1342"];
m8_764 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1400-1400"];
m8_754 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object value", span="1372-1372"];
m8_767 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1412-1412"];
m8_741 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return underlyingList;", span="1343-1343"];
m8_751 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="1366-1366"];
m8_753 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1369-1369"];
m8_752 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1367-1367"];
m8_759 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1388-1388"];
m8_765 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex = errorPosition.Position", span="1404-1404"];
m8_772 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1331-1331"];
m8_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="716-716"];
m8_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type '{0}' because the type requires a {1} to deserialize correctly.\r\nTo fix this error either change the JSON to a {1} or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\n''.FormatWith(CultureInfo.InvariantCulture, objectType, GetExpectedDescription(contract)));", span="723-725"];
m8_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="arrayContract == null", span="722-722"];
m8_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="719-719"];
m8_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract == null", span="718-718"];
m8_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = contract as JsonArrayContract", span="721-721"];
m8_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return arrayContract;", span="727-727"];
m8_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="716-716"];
m8_104 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434"];
m8_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="125-125"];
m8_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="return Serializer._contractResolver.ResolveContract(type);", span="130-130"];
m8_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="type == null", span="127-127"];
m8_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="return null;", span="128-128"];
m8_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="125-125"];
m8_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="506-506"];
m8_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="535-535"];
m8_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="537-537"];
m8_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="538-538"];
m8_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(typeTokenReader)", span="549-549"];
m8_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="ResolveTypeName(typeTokenReader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="550-550"];
m8_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="557-557"];
m8_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="564-564"];
m8_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(listReader)", span="578-578"];
m8_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = CreateList(listReader, objectType, contract, member, existingValue, id)", span="579-579"];
m8_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="586-586"];
m8_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken additionalContent = null", span="522-522"];
m8_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string reference = (string)refToken", span="528-528"];
m8_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="additionalContent != null", span="532-532"];
m8_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="540-540"];
m8_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JsonReader typeTokenReader = typeToken.CreateReader()", span="548-548"];
m8_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string qualifiedTypeName = (string)typeToken", span="547-547"];
m8_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken valueToken = current[JsonTypeReflector.ValuePropertyName]", span="552-552"];
m8_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label=true, span="555-555"];
m8_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="558-558"];
m8_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="(string)reader.Value == JsonTypeReflector.ValuePropertyName", span="560-560"];
m8_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="565-565"];
m8_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JsonReader listReader = valuesToken.CreateReader()", span="577-577"];
m8_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = null", span="508-508"];
m8_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = (string)idToken", span="572-572"];
m8_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="581-581"];
m8_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="511-511"];
m8_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="valuesToken != null", span="575-575"];
m8_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return false;", span="587-587"];
m8_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken property = refToken.Parent", span="521-521"];
m8_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="property.Next != null", span="523-523"];
m8_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(additionalContent, additionalContent.Path, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="533-533"];
m8_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JObject current = (JObject)reader._current", span="513-513"];
m8_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken refToken = current[JsonTypeReflector.RefPropertyName]", span="515-515"];
m8_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="additionalContent = property.Next", span="524-524"];
m8_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="property.Previous != null", span="525-525"];
m8_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="additionalContent = property.Previous", span="526-526"];
m8_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reference != null", span="530-530"];
m8_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = null", span="509-509"];
m8_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(refToken, refToken.Path, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName), null);", span="519-519"];
m8_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="541-541"];
m8_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return false;", span="561-561"];
m8_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="582-582"];
m8_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken typeToken = current[JsonTypeReflector.TypePropertyName]", span="544-544"];
m8_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="typeToken != null", span="545-545"];
m8_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="valueToken != null", span="553-553"];
m8_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken idToken = current[JsonTypeReflector.IdPropertyName]", span="569-569"];
m8_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="JToken valuesToken = current[JsonTypeReflector.ArrayValuesPropertyName]", span="574-574"];
m8_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="idToken != null", span="570-570"];
m8_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="refToken.Type != JTokenType.String && refToken.Type != JTokenType.Null", span="518-518"];
m8_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="refToken != null", span="516-516"];
m8_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataPropertiesToken(Newtonsoft.Json.Linq.JTokenReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="506-506"];
m8_613 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", span="382-382"];
m8_1006 [cluster="Newtonsoft.Json.JsonReader.ReadAsInt32()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsInt32()", span="371-371"];
m8_920 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1998-1998"];
m8_1108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", color=green, community=0, file="JsonSerializerInternalReader.cs", label="0: HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate) && property.Writable && !property.Ignored", span="2022-2022"];
m8_1098 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = propertyPresence.Key", span="2004-2004"];
m8_1106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="2019-2019"];
m8_1107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="2020-2020"];
m8_1109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(newObject, EnsureType(reader, property.GetResolvedDefaultValue(), CultureInfo.InvariantCulture, property.PropertyContract, property.PropertyType))", span="2023-2023"];
m8_1113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label=Exception, span="2031-2031"];
m8_1097 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label=propertiesPresence, span="2002-2002"];
m8_1114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, property.PropertyName, reader as IJsonLineInfo, reader.Path, ex)", span="2033-2033"];
m8_1115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="2034-2034"];
m8_1099 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="PropertyPresence presence = propertyPresence.Value", span="2005-2005"];
m8_1101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Required resolvedRequired = property._required ?? contract.ItemRequired ?? Required.Default", span="2011-2011"];
m8_1105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' not found in JSON.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2017-2017"];
m8_1112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Required property '{0}' expects a value but got null.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="2027-2027"];
m8_1104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="resolvedRequired == Required.AllowNull || resolvedRequired == Required.Always", span="2016-2016"];
m8_1111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="resolvedRequired == Required.Always", span="2026-2026"];
m8_1096 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="propertiesPresence != null", span="2000-2000"];
m8_1100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="presence == PropertyPresence.None || presence == PropertyPresence.Null", span="2007-2007"];
m8_1116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="throw;", span="2036-2036"];
m8_1102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label=presence, span="2013-2013"];
m8_1103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="PropertyPresence.None", span="2015-2015"];
m8_1110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="PropertyPresence.Null", span="2025-2025"];
m8_1117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EndObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, int, System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1998-1998"];
m8_505 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m8_164 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerInternalReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m8_608 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1084-1084"];
m8_609 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1086-1086"];
m8_610 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Finished deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1087-1087"];
m8_611 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserialized(value, Serializer._context)", span="1089-1089"];
m8_612 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserialized(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1084-1084"];
m8_583 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="232-232"];
m8_71 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerInternalReader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_805 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m8_476 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.IsInteger(object)", span="620-620"];
m8_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1005-1005"];
m8_570 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1021-1021"];
m8_564 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.IsReadOnlyOrFixedSize", span="1011-1011"];
m8_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="object list = contract.DefaultCreator()", span="1023-1023"];
m8_576 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ParametrizedCreator != null", span="1031-1031"];
m8_568 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="list = contract.CreateWrapper(list)", span="1017-1017"];
m8_573 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="list = contract.CreateWrapper(list)", span="1026-1026"];
m8_563 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot create and populate list type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.CreatedType));", span="1009-1009"];
m8_580 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1039-1039"];
m8_581 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1041-1041"];
m8_562 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="!contract.CanDeserialize", span="1008-1008"];
m8_566 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="IList list = contract.CreateTemporaryCollection()", span="1014-1014"];
m8_567 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="1016-1016"];
m8_572 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="1025-1025"];
m8_578 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryCollection();", span="1034-1034"];
m8_579 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="!contract.IsInstantiable", span="1038-1038"];
m8_565 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1013-1013"];
m8_575 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return (IList)list;", span="1029-1029"];
m8_577 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1033-1033"];
m8_569 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="return list;", span="1019-1019"];
m8_574 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = false", span="1028-1028"];
m8_582 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewList(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, out bool)", span="1005-1005"];
m8_910 [cluster="Unk.ToArray", file="JsonSerializerInternalReader.cs", label="Entry Unk.ToArray", span=""];
m8_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="812-812"];
m8_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="targetType == null", span="814-814"];
m8_454 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return value;", span="815-815"];
m8_455 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="Type valueType = ReflectionUtils.GetObjectType(value)", span="817-817"];
m8_456 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="valueType != targetType", span="821-821"];
m8_457 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="value == null && contract.IsNullable", span="823-823"];
m8_459 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="contract.IsConvertable", span="828-828"];
m8_460 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="830-830"];
m8_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="contract.IsEnum", span="832-832"];
m8_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="value is string", span="834-834"];
m8_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return Enum.Parse(contract.NonNullableUnderlyingType, value.ToString(), true);", span="835-835"];
m8_465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return Enum.ToObject(contract.NonNullableUnderlyingType, value);", span="837-837"];
m8_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="value is BigInteger", span="841-841"];
m8_467 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return ConvertUtils.FromBigInteger((BigInteger)value, targetType);", span="842-842"];
m8_468 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return Convert.ChangeType(value, contract.NonNullableUnderlyingType, culture);", span="846-846"];
m8_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return ConvertUtils.ConvertOrCast(value, culture, contract.NonNullableUnderlyingType);", span="849-849"];
m8_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, MiscellaneousUtils.FormatValueForPrint(value), targetType), ex);", span="853-853"];
m8_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return value;", span="857-857"];
m8_458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="return null;", span="824-824"];
m8_464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="ConvertUtils.IsInteger(primitiveContract.TypeCode)", span="836-836"];
m8_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label=Exception, span="851-851"];
m8_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(Newtonsoft.Json.JsonReader, object, System.Globalization.CultureInfo, Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="812-812"];
m8_400 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="87-87"];
m8_398 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="725-725"];
m8_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="100-100"];
m8_918 [cluster="System.Collections.IDictionary.Add(object, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0"];
m8_724 [cluster="System.Collections.Generic.Stack<T>.Pop()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Pop()", span="0-0"];
m8_806 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m8_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="185-185"];
m8_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="_internalSerializer == null", span="187-187"];
m8_82 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="_internalSerializer = new JsonSerializerProxy(this)", span="188-188"];
m8_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="return _internalSerializer;", span="190-190"];
m8_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="185-185"];
m8_480 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="554-554"];
m8_76 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m8_448 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ToMultidimensionalArray(System.Collections.IList, System.Type, int)", span="265-265"];
m8_508 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JsonSerializerInternalReader.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m8_123 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool, bool)", span="451-451"];
m8_91 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", span="38-38"];
m8_335 [cluster="Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ITraceWriter.Trace(System.Diagnostics.TraceLevel, string, System.Exception)", span="25-25"];
m8_667 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.TryParseDateTime(string, Newtonsoft.Json.DateParseHandling, Newtonsoft.Json.DateTimeZoneHandling, string, System.Globalization.CultureInfo, out object)", span="286-286"];
m8_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="372-372"];
m8_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="378-378"];
m8_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(tokenReader)", span="387-387"];
m8_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="ReadMetadataPropertiesToken(tokenReader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="392-392"];
m8_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="397-397"];
m8_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="ReadMetadataProperties(reader, ref resolvedObjectType, ref contract, member, containerContract, containerMember, existingValue, out newValue, out id)", span="398-398"];
m8_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="HasNoDefinedType(contract)", span="402-402"];
m8_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateJObject(reader);", span="403-403"];
m8_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetObject = CreateNewObject(reader, objectContract, member, containerMember, id, out createdFromNonDefaultCreator)", span="416-416"];
m8_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return PopulateObject(targetObject, reader, objectContract, member, id);", span="422-422"];
m8_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="430-430"];
m8_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object value = CreateValueInternal(reader, resolvedObjectType, primitiveContract, member, null, null, existingValue)", span="437-437"];
m8_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="439-439"];
m8_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="IDictionary dictionary = CreateNewDictionary(reader, dictionaryContract, out createdFromNonDefaultCreator)", span="452-452"];
m8_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="PopulateDictionary(dictionary, reader, dictionaryContract, member, id)", span="469-469"];
m8_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetDictionary = PopulateDictionary(dictionaryContract.ShouldCreateWrapper ? dictionaryContract.CreateWrapper(existingValue) : (IDictionary)existingValue, reader, dictionaryContract, member, id)", span="484-484"];
m8_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateDynamic(reader, dynamicContract, member, id);", span="492-492"];
m8_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateISerializable(reader, serializableContract, member, id);", span="497-497"];
m8_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, @''Cannot deserialize the current JSON object (e.g. {{''''name'''':''''value''''}}) into type '{0}' because the type requires a {1} to deserialize correctly.\r\nTo fix this error either change the JSON to a {1} or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\r\n''.FormatWith(CultureInfo.InvariantCulture, resolvedObjectType, GetExpectedDescription(contract)));", span="501-503"];
m8_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="bool createdFromNonDefaultCreator = false", span="409-409"];
m8_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Type resolvedObjectType = objectType", span="376-376"];
m8_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="var tokenReader = reader as JTokenReader", span="380-380"];
m8_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader = (JTokenReader)t.CreateReader()", span="384-384"];
m8_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader = tokenReader", span="389-389"];
m8_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="tokenReader == null", span="381-381"];
m8_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return newValue;", span="393-393"];
m8_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType", span="405-405"];
m8_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonObjectContract objectContract = (JsonObjectContract)contract", span="410-410"];
m8_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="existingValue != null && (resolvedObjectType == objectType || resolvedObjectType.IsAssignableFrom(existingValue.GetType()))", span="413-413"];
m8_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonPrimitiveContract primitiveContract = (JsonPrimitiveContract)contract", span="426-426"];
m8_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="446-446"];
m8_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="id != null", span="456-456"];
m8_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="457-457"];
m8_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract.OnSerializingCallbacks.Count > 0", span="459-459"];
m8_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on readonly dictionary, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="460-460"];
m8_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract.OnErrorCallbacks.Count > 0", span="462-462"];
m8_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on readonly list, or dictionary created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="463-463"];
m8_251 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size dictionary: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="466-466"];
m8_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonDynamicContract dynamicContract = (JsonDynamicContract)contract", span="491-491"];
m8_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonISerializableContract serializableContract = (JsonISerializableContract)contract", span="496-496"];
m8_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return newValue;", span="399-399"];
m8_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="419-419"];
m8_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return targetObject;", span="420-420"];
m8_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetObject = existingValue", span="414-414"];
m8_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName && string.Equals(reader.Value.ToString(), JsonTypeReflector.ValuePropertyName, StringComparison.Ordinal)", span="428-428"];
m8_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="434-434"];
m8_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return value;", span="440-440"];
m8_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object targetDictionary", span="447-447"];
m8_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="bool createdFromNonDefaultCreator", span="451-451"];
m8_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="454-454"];
m8_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="471-471"];
m8_254 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return dictionaryContract.ParametrizedCreator(dictionary);", span="473-473"];
m8_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="dictionary is IWrappedDictionary", span="475-475"];
m8_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return ((IWrappedDictionary)dictionary).UnderlyingDictionary;", span="477-477"];
m8_257 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="targetDictionary = dictionary", span="480-480"];
m8_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="dictionaryContract.ParametrizedCreator == null", span="465-465"];
m8_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="existingValue == null", span="449-449"];
m8_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return targetDictionary;", span="487-487"];
m8_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object targetObject", span="411-411"];
m8_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string id", span="374-374"];
m8_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JToken t = JToken.ReadFrom(reader)", span="383-383"];
m8_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing primitive value: '' + reader.TokenType);", span="435-435"];
m8_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object newValue", span="375-375"];
m8_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Object", span="407-407"];
m8_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Primitive", span="424-424"];
m8_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dictionary", span="444-444"];
m8_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dynamic", span="490-490"];
m8_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Serializable", span="495-495"];
m8_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="372-372"];
m8_336 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="804-804"];
m8_668 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1316-1316"];
m8_731 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(currentObject, contract, null, reader as IJsonLineInfo, reader.Path, ex)", span="1324-1324"];
m8_732 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, false, 0)", span="1325-1325"];
m8_730 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1322-1322"];
m8_733 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1327-1327"];
m8_729 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, message);", span="1320-1320"];
m8_734 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ThrowUnexpectedEndException(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object, string)", span="1316-1316"];
m8_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="860-860"];
m8_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CalculatePropertyDetails(property, ref propertyConverter, containerContract, containerProperty, reader, target, out useExistingValue, out currentValue, out propertyContract, out gottenCurrentValue)", span="867-867"];
m8_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(propertyConverter, reader, property.PropertyType, currentValue)", span="877-877"];
m8_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, property.PropertyType, propertyContract, property, containerContract, containerProperty, (useExistingValue) ? currentValue : null)", span="881-881"];
m8_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="(!useExistingValue || value != currentValue)\r\n                && ShouldSetPropertyValue(property, value)", span="887-888"];
m8_498 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="894-894"];
m8_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''IsSpecified for property '{0}' on {1} set to true.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName, property.DeclaringType)), null)", span="895-895"];
m8_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="bool gottenCurrentValue", span="865-865"];
m8_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="868-868"];
m8_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="object value", span="870-870"];
m8_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="872-872"];
m8_491 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="!gottenCurrentValue && target != null && property.Readable", span="874-874"];
m8_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="return useExistingValue;", span="904-904"];
m8_492 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="875-875"];
m8_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(target, value)", span="890-890"];
m8_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="property.SetIsSpecified != null", span="892-892"];
m8_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="property.SetIsSpecified(target, true)", span="897-897"];
m8_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonContract propertyContract", span="864-864"];
m8_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="object currentValue", span="862-862"];
m8_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="bool useExistingValue", span="863-863"];
m8_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="return true;", span="900-900"];
m8_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object)", span="860-860"];
m8_35 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m8_334 [cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="91-91"];
m8_34 [cluster="string.FormatWith(System.IFormatProvider, object)", file="JsonSerializerInternalReader.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m8_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="674-674"];
m8_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TypeNameHandling resolvedTypeNameHandling =\r\n                ((member != null) ? member.TypeNameHandling : null)\r\n                ?? ((containerContract != null) ? containerContract.ItemTypeNameHandling : null)\r\n                ?? ((containerMember != null) ? containerMember.ItemTypeNameHandling : null)\r\n                ?? Serializer._typeNameHandling", span="676-680"];
m8_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="specifiedType = Serializer._binder.BindToType(assemblyName, typeName)", span="691-691"];
m8_391 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="701-701"];
m8_392 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved type '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName, specifiedType)), null)", span="702-702"];
m8_396 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract = GetContractSafe(specifiedType)", span="712-712"];
m8_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="resolvedTypeNameHandling != TypeNameHandling.None", span="682-682"];
m8_384 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ReflectionUtils.SplitFullyQualifiedTypeName(qualifiedTypeName, out typeName, out assemblyName)", span="686-686"];
m8_385 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Type specifiedType", span="688-688"];
m8_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="693-693"];
m8_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="specifiedType == null", span="698-698"];
m8_393 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="objectType != null\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    && objectType != typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                    && !objectType.IsAssignableFrom(specifiedType)", span="704-708"];
m8_394 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' is not compatible with '{1}'.''.FormatWith(CultureInfo.InvariantCulture, specifiedType.AssemblyQualifiedName, objectType.AssemblyQualifiedName));", span="709-709"];
m8_395 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="objectType = specifiedType", span="711-711"];
m8_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Type specified in JSON '{0}' was not resolved.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName));", span="699-699"];
m8_388 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error resolving type specified in JSON '{0}'.''.FormatWith(CultureInfo.InvariantCulture, qualifiedTypeName), ex);", span="695-695"];
m8_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string typeName", span="684-684"];
m8_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string assemblyName", span="685-685"];
m8_397 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolveTypeName(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="674-674"];
m8_449 [cluster="System.Array.CreateInstance(System.Type, int)", file="JsonSerializerInternalReader.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m8_722 [cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0"];
m8_915 [cluster="System.Collections.ObjectModel.Collection<T>.IndexOf(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.ObjectModel.Collection<T>.IndexOf(T)", span="0-0"];
m8_909 [cluster="Unk.Select", file="JsonSerializerInternalReader.cs", label="Entry Unk.Select", span=""];
m8_32 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="211-211"];
m8_507 [cluster="Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", span="37-37"];
m8_602 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1076-1076"];
m8_603 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1078-1078"];
m8_604 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Started deserializing {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1079-1079"];
m8_605 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserializing(value, Serializer._context)", span="1081-1081"];
m8_606 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.OnDeserializing(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract, object)", span="1076-1076"];
m8_199 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="892-892"];
m8_31 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m8_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="736-736"];
m8_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="HasNoDefinedType(contract)", span="740-740"];
m8_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return CreateJToken(reader, contract);", span="741-741"];
m8_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = EnsureArrayContract(reader, objectType, contract)", span="743-743"];
m8_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="IList list = CreateNewList(reader, arrayContract, out createdFromNonDefaultCreator)", span="748-748"];
m8_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="PopulateList(list, reader, arrayContract, member, id)", span="766-766"];
m8_430 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="PopulateMultidimensionalArray(list, reader, arrayContract, member, id)", span="768-768"];
m8_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="value = PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(existingValue) : (IList)existingValue, reader, arrayContract, member, id)", span="797-797"];
m8_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="object value", span="738-738"];
m8_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="existingValue == null", span="745-745"];
m8_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="arrayContract.ParametrizedCreator == null && !arrayContract.IsArray", span="761-761"];
m8_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="!arrayContract.IsMultidimensionalArray", span="765-765"];
m8_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="arrayContract.IsMultidimensionalArray", span="772-772"];
m8_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list = CollectionUtils.ToMultidimensionalArray(list, arrayContract.CollectionItemType, contract.CreatedType.GetArrayRank())", span="774-774"];
m8_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="arrayContract.IsArray", span="776-776"];
m8_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Array a = Array.CreateInstance(arrayContract.CollectionItemType, list.Count)", span="778-778"];
m8_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return arrayContract.ParametrizedCreator(list);", span="785-785"];
m8_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="bool createdFromNonDefaultCreator", span="747-747"];
m8_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="750-750"];
m8_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label=createdFromNonDefaultCreator, span="770-770"];
m8_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list.CopyTo(a, 0)", span="779-779"];
m8_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list is IWrappedCollection", span="788-788"];
m8_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return ((IWrappedCollection)list).UnderlyingCollection;", span="790-790"];
m8_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="value = list", span="793-793"];
m8_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return value;", span="800-800"];
m8_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="752-752"];
m8_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot preserve reference to array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="753-753"];
m8_422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="contract.OnSerializingCallbacks.Count > 0", span="755-755"];
m8_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnSerializing on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="756-756"];
m8_424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="contract.OnErrorCallbacks.Count > 0", span="758-758"];
m8_425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot call OnError on an array or readonly list, or list created from a non-default constructor: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="759-759"];
m8_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot deserialize readonly or fixed size list: {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="762-762"];
m8_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="list = a", span="780-780"];
m8_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, object, string)", span="736-736"];
m8_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="803-803"];
m8_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return (contract == null || contract.UnderlyingType == typeof(object) || contract.ContractType == JsonContractType.Linq\r\n#if !(NET35 || NET20 || PORTABLE40)\r\n                    || contract.UnderlyingType == typeof(IDynamicMetaObjectProvider)\r\n#endif\r\n                );", span="805-809"];
m8_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasNoDefinedType(Newtonsoft.Json.Serialization.JsonContract)", span="803-803"];
m8_269 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1641-1641"];
m8_475 [cluster="System.Enum.Parse(System.Type, string, bool)", file="JsonSerializerInternalReader.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m8_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, Newtonsoft.Json.IJsonLineInfo, string, System.Exception)", span="109-109"];
m8_913 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m8_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="989-989"];
m8_554 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && value == null", span="991-991"];
m8_556 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && MiscellaneousUtils.ValueEquals(value, property.GetResolvedDefaultValue())", span="994-996"];
m8_555 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="992-992"];
m8_557 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="997-997"];
m8_558 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="!property.Writable", span="999-999"];
m8_559 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="1000-1000"];
m8_560 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return true;", span="1002-1002"];
m8_561 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", span="989-989"];
m8_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)contract", span="107-107"];
m8_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="101-101"];
m8_917 [cluster="Unk.FirstOrDefault", file="JsonSerializerInternalReader.cs", label="Entry Unk.FirstOrDefault", span=""];
m8_0 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", span="36-36"];
m8_1 [cluster="Newtonsoft.Json.Tests.Linq.ComponentModel.BindingTests.DataBinderEval()", file="JsonSerializerInternalReader.cs", label="JObject o = new JObject(\r\n                new JProperty(''First'', ''String!''),\r\n                new JProperty(''Second'', 12345.6789m),\r\n                new JProperty(''Third'', new JArray(\r\n                    1,\r\n                    2,\r\n                    3,\r\n                    4,\r\n                    5,\r\n                    new JObject(\r\n                        new JProperty(''Fourth'', ''String!''),\r\n                        new JProperty(''Fifth'', new JObject(\r\n                            new JProperty(''Sixth'', ''String!'')))))))", span="38-50"];
m8_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="69-69"];
m8_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="71-71"];
m8_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Type objectType = target.GetType()", span="73-73"];
m8_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonContract contract = Serializer._contractResolver.ResolveContract(objectType)", span="75-75"];
m8_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.None", span="77-77"];
m8_7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="78-78"];
m8_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartArray", span="80-80"];
m8_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType == JsonContractType.Array", span="82-82"];
m8_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = (JsonArrayContract)contract", span="84-84"];
m8_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateList((arrayContract.ShouldCreateWrapper) ? arrayContract.CreateWrapper(target) : (IList)target, reader, arrayContract, null, null)", span="86-86"];
m8_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON array onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="90-90"];
m8_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="93-93"];
m8_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="95-95"];
m8_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="string id = null", span="97-97"];
m8_916 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m8_912 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", span="1705-1705"];
m8_953 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1726-1726"];
m8_954 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, containerProperty)", span="1728-1728"];
m8_955 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="1730-1730"];
m8_959 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1736-1736"];
m8_962 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="propertyValue = DeserializeConvertable(propertyConverter, reader, property.PropertyType, null)", span="1740-1740"];
m8_963 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="propertyValue = CreateValueInternal(reader, property.PropertyType, property.PropertyContract, property, contract, containerProperty, null)", span="1742-1742"];
m8_967 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1753-1753"];
m8_968 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}.''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="1754-1754"];
m8_969 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="1756-1756"];
m8_972 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="object value = CreateValueInternal(reader, null, null, null, contract, containerProperty, null)", span="1762-1762"];
m8_946 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="bool exit = false", span="1710-1710"];
m8_950 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.CreatorParameters.GetClosestMatchProperty(memberName) ??\r\n                                                contract.Properties.GetClosestMatchProperty(memberName)", span="1720-1721"];
m8_952 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1725-1725"];
m8_961 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="propertyConverter != null && propertyConverter.CanRead", span="1739-1739"];
m8_956 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1731-1731"];
m8_957 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="!property.Ignored", span="1733-1733"];
m8_958 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1735-1735"];
m8_960 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="object propertyValue", span="1738-1738"];
m8_964 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="propertyValues[property] = propertyValue", span="1744-1744"];
m8_965 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1750-1750"];
m8_949 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1716-1716"];
m8_970 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, objectType.Name));", span="1757-1757"];
m8_971 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="extensionData != null", span="1760-1760"];
m8_973 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="extensionData[memberName] = value", span="1763-1763"];
m8_979 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="!exit && reader.Read()", span="1778-1778"];
m8_945 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="IDictionary<JsonProperty, object> propertyValues = new Dictionary<JsonProperty, object>()", span="1709-1709"];
m8_947 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1713-1713"];
m8_966 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1751-1751"];
m8_978 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1776-1776"];
m8_944 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="extensionData = (contract.ExtensionDataSetter != null) ? new Dictionary<string, object>() : null", span="1707-1707"];
m8_974 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1767-1767"];
m8_951 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="property != null", span="1723-1723"];
m8_948 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1715-1715"];
m8_975 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1770-1770"];
m8_977 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="exit = true", span="1773-1773"];
m8_980 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="return propertyValues;", span="1780-1780"];
m8_976 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1772-1772"];
m8_981 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndCreatorValues(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, System.Type, out System.Collections.Generic.IDictionary<string, object>)", span="1705-1705"];
m8_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1045-1045"];
m8_588 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null && (!contract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="1052-1052"];
m8_585 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.IsReadOnlyOrFixedSize", span="1047-1047"];
m8_589 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="object dictionary = contract.DefaultCreator()", span="1054-1054"];
m8_594 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ParametrizedCreator != null", span="1062-1062"];
m8_591 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="dictionary = contract.CreateWrapper(dictionary)", span="1057-1057"];
m8_587 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryDictionary();", span="1050-1050"];
m8_590 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="contract.ShouldCreateWrapper", span="1056-1056"];
m8_596 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return contract.CreateTemporaryDictionary();", span="1065-1065"];
m8_597 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="!contract.IsInstantiable", span="1069-1069"];
m8_598 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1070-1070"];
m8_599 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="1072-1072"];
m8_586 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1049-1049"];
m8_593 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="return (IDictionary)dictionary;", span="1060-1060"];
m8_595 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1064-1064"];
m8_592 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = false", span="1059-1059"];
m8_600 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, out bool)", span="1045-1045"];
m8_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="1829-1829"];
m8_1016 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.OverrideCreator, id);", span="1838-1838"];
m8_1018 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.DefaultCreator != null &&\r\n                     (!objectContract.DefaultCreatorNonPublic || Serializer._constructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor || objectContract.ParametrizedCreator == null)", span="1843-1844"];
m8_1022 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="return CreateObjectUsingCreatorWithParameters(reader, objectContract, containerMember, objectContract.ParametrizedCreator, id);", span="1855-1855"];
m8_1012 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="object newObject = null", span="1831-1831"];
m8_1015 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1837-1837"];
m8_1013 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.OverrideCreator != null", span="1833-1833"];
m8_1019 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="newObject = objectContract.DefaultCreator()", span="1850-1850"];
m8_1020 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.ParametrizedCreator != null", span="1852-1852"];
m8_1021 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = true", span="1854-1854"];
m8_1023 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="newObject == null", span="1858-1858"];
m8_1028 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="1867-1867"];
m8_1014 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="objectContract.CreatorParameters.Count > 0", span="1835-1835"];
m8_1017 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="newObject = objectContract.OverrideCreator(new object[0])", span="1841-1841"];
m8_1024 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="!objectContract.IsInstantiable", span="1860-1860"];
m8_1025 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not create an instance of type {0}. Type is an interface or abstract class and cannot be instantiated.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="1861-1861"];
m8_1026 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unable to find a constructor to use for type {0}. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute.''.FormatWith(CultureInfo.InvariantCulture, objectContract.UnderlyingType));", span="1863-1863"];
m8_1027 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="createdFromNonDefaultCreator = false", span="1866-1866"];
m8_1029 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateNewObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonProperty, string, out bool)", span="1829-1829"];
m8_273 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m8_930 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1601-1601"];
m8_921 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1582-1582"];
m8_924 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1582-1582"];
m8_1073 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1876-1876"];
m8_1076 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1876-1876"];
m8_923 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1582-1582"];
m8_922 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label=m, span="1582-1582"];
m8_926 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1582-1582"];
m8_925 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="PropertyPresence.None", span="1582-1582"];
m8_933 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1615-1615"];
m8_934 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="p.PropertyName == propertyValue.Key.PropertyName", span="1615-1615"];
m8_927 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1589-1589"];
m8_1075 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1876-1876"];
m8_1074 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label=m, span="1876-1876"];
m8_1078 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1876-1876"];
m8_1077 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="PropertyPresence.None", span="1876-1876"];
m8_935 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1615-1615"];
m8_929 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1589-1589"];
m8_928 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="p.PropertyName", span="1589-1589"];
m8_931 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="p.PropertyName", span="1601-1601"];
m8_932 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1601-1601"];
m8_29 [cluster="object.GetType()", file="JsonSerializerInternalReader.cs", label="Entry object.GetType()", span="0-0"];
m8_268 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1827-1827"];
m8_163 [cluster="string.IsNullOrEmpty(string)", file="JsonSerializerInternalReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m8_446 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1193-1193"];
m8_671 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, list)", span="1198-1198"];
m8_672 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, list)", span="1200-1200"];
m8_673 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonContract collectionItemContract = GetContractSafe(contract.CollectionItemType)", span="1202-1202"];
m8_674 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter collectionItemConverter = GetConverter(collectionItemContract, null, contract, containerProperty)", span="1203-1203"];
m8_682 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ReadForType(reader, collectionItemContract, collectionItemConverter != null)", span="1219-1219"];
m8_691 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = DeserializeConvertable(collectionItemConverter, reader, contract.CollectionItemType, null)", span="1234-1234"];
m8_692 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="value = CreateValueInternal(reader, contract.CollectionItemType, collectionItemContract, null, contract, containerProperty, null)", span="1236-1236"];
m8_696 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(list, contract, errorPosition.Position, reader as IJsonLineInfo, reader.Path, ex)", span="1251-1251"];
m8_697 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1253-1253"];
m8_718 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, list, ''Unexpected end when deserializing array.'')", span="1310-1310"];
m8_719 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, list)", span="1312-1312"];
m8_675 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int? previousErrorIndex = null", span="1205-1205"];
m8_679 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1210-1210"];
m8_670 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1197-1197"];
m8_690 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="collectionItemConverter != null && collectionItemConverter.CanRead", span="1233-1233"];
m8_681 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Count == rank", span="1215-1215"];
m8_683 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1221-1221"];
m8_717 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1309-1309"];
m8_693 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList.Add(value)", span="1238-1238"];
m8_695 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonPosition errorPosition = reader.GetPosition(initialDepth)", span="1249-1249"];
m8_701 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1268-1268"];
m8_680 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1213-1213"];
m8_698 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex != null && previousErrorIndex == errorPosition.Position", span="1255-1255"];
m8_720 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return list;", span="1313-1313"];
m8_689 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object value", span="1231-1231"];
m8_676 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Stack<IList> listStack = new Stack<IList>()", span="1206-1206"];
m8_678 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IList currentList = list", span="1208-1208"];
m8_716 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1307-1307"];
m8_715 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing multidimensional array: '' + reader.TokenType);", span="1299-1299"];
m8_669 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int rank = contract.UnderlyingType.GetArrayRank()", span="1195-1195"];
m8_677 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Push(list)", span="1207-1207"];
m8_699 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Infinite loop detected from error handling.'', ex);", span="1259-1259"];
m8_702 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="1274-1274"];
m8_703 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1276-1276"];
m8_684 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="1223-1223"];
m8_688 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1228-1228"];
m8_713 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1293-1293"];
m8_686 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList = listStack.Peek()", span="1225-1225"];
m8_694 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1247-1247"];
m8_700 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex = errorPosition.Position", span="1263-1263"];
m8_687 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="previousErrorIndex = null", span="1226-1226"];
m8_685 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Pop()", span="1224-1224"];
m8_707 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Push(newList)", span="1281-1281"];
m8_710 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Pop()", span="1285-1285"];
m8_711 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="listStack.Count > 0", span="1287-1287"];
m8_712 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList = listStack.Peek()", span="1289-1289"];
m8_706 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList.Add(newList)", span="1280-1280"];
m8_705 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IList newList = new List<object>()", span="1279-1279"];
m8_714 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1296-1296"];
m8_708 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="currentList = newList", span="1282-1282"];
m8_704 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartArray", span="1278-1278"];
m8_709 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="1284-1284"];
m8_721 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateMultidimensionalArray(System.Collections.IList, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1193-1193"];
m8_75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="258-258"];
m8_126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateJToken(reader, contract);", span="261-261"];
m8_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateObject(reader, objectType, contract, member, containerContract, containerMember, existingValue);", span="270-270"];
m8_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateList(reader, objectType, contract, member, existingValue, null);", span="272-272"];
m8_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="278-278"];
m8_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, s, CultureInfo.InvariantCulture, contract, objectType);", span="290-290"];
m8_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, constructorName, CultureInfo.InvariantCulture, contract, objectType);", span="294-294"];
m8_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader, reader.Value, CultureInfo.InvariantCulture, contract, objectType);", span="302-302"];
m8_125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract != null && contract.ContractType == JsonContractType.Linq", span="260-260"];
m8_157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="311-311"];
m8_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartObject", span="269-269"];
m8_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartArray", span="271-271"];
m8_136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Bytes", span="277-277"];
m8_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string s = (string)reader.Value", span="280-280"];
m8_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType == typeof(byte[])", span="287-287"];
m8_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string constructorName = reader.Value.ToString()", span="292-292"];
m8_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType == typeof(DBNull)", span="298-298"];
m8_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="265-265"];
m8_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string.IsNullOrEmpty(s) && objectType != typeof(string) && objectType != typeof(object) && contract != null && contract.IsNullable", span="283-283"];
m8_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return new JRaw((string)reader.Value);", span="304-304"];
m8_156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token while deserializing object: '' + reader.TokenType);", span="309-309"];
m8_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="313-313"];
m8_155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="305-305"];
m8_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return Convert.FromBase64String(s);", span="288-288"];
m8_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return null;", span="284-284"];
m8_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return DBNull.Value;", span="299-299"];
m8_135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Date", span="276-276"];
m8_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.String", span="279-279"];
m8_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartConstructor", span="291-291"];
m8_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Undefined", span="296-296"];
m8_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Integer", span="273-273"];
m8_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Null", span="295-295"];
m8_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Raw", span="303-303"];
m8_134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Boolean", span="275-275"];
m8_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Float", span="274-274"];
m8_159 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object)", span="258-258"];
m8_584 [cluster="System.Func<TResult>.Invoke()", file="JsonSerializerInternalReader.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m8_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateDictionary((dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(target) : (IDictionary)target, reader, dictionaryContract, null, id)", span="108-108"];
m8_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateObject(target, reader, (JsonObjectContract)contract, null, id)", span="112-112"];
m8_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract.ContractType == JsonContractType.Object", span="110-110"];
m8_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Cannot populate JSON object onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="116-116"];
m8_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected initial token '{0}' when populating object. Expected JSON object or array.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="121-121"];
m8_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="69-69"];
m8_450 [cluster="System.Collections.ICollection.CopyTo(System.Array, int)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.ICollection.CopyTo(System.Array, int)", span="0-0"];
m8_911 [cluster="Unk.Join", file="JsonSerializerInternalReader.cs", label="Entry Unk.Join", span=""];
m8_479 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="JsonSerializerInternalReader.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m8_728 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1870-1870"];
m8_1030 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, newObject)", span="1872-1872"];
m8_1031 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n                ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n                : null", span="1875-1877"];
m8_1033 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, newObject)", span="1880-1880"];
m8_1039 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="CheckPropertyName(reader, memberName)", span="1893-1893"];
m8_1042 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Verbose", span="1904-1904"];
m8_1043 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Verbose, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Could not find member '{0}' on {1}''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType)), null)", span="1905-1905"];
m8_1044 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Serializer._missingMemberHandling == MissingMemberHandling.Error", span="1907-1907"];
m8_1047 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="1913-1913"];
m8_1049 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="1918-1918"];
m8_1050 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter propertyConverter = GetConverter(property.PropertyContract, property.MemberConverter, contract, member)", span="1920-1920"];
m8_1051 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, property.PropertyContract, propertyConverter != null)", span="1922-1922"];
m8_1053 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SetPropertyPresence(reader, property, propertiesPresence)", span="1925-1925"];
m8_1054 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!SetPropertyValue(property, propertyConverter, contract, member, reader, newObject)", span="1928-1928"];
m8_1055 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SetExtensionData(contract, member, reader, memberName, newObject)", span="1929-1929"];
m8_1057 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, memberName, reader as IJsonLineInfo, reader.Path, ex)", span="1933-1933"];
m8_1058 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1934-1934"];
m8_1066 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, newObject, ''Unexpected end when deserializing object.'')", span="1952-1952"];
m8_1067 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="EndObject(newObject, reader, contract, initialDepth, propertiesPresence)", span="1954-1954"];
m8_1068 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, newObject)", span="1956-1956"];
m8_1035 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1884-1884"];
m8_1032 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1879-1879"];
m8_1034 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1882-1882"];
m8_1038 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1891-1891"];
m8_1040 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1900-1900"];
m8_1064 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1949-1949"];
m8_1041 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property == null", span="1902-1902"];
m8_1045 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, memberName, contract.UnderlyingType.Name));", span="1908-1908"];
m8_1046 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1910-1910"];
m8_1048 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="1917-1917"];
m8_1052 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1923-1923"];
m8_1056 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1931-1931"];
m8_1059 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1936-1936"];
m8_1065 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1951-1951"];
m8_1069 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="1957-1957"];
m8_1036 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1887-1887"];
m8_1063 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1947-1947"];
m8_1037 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1889-1889"];
m8_1062 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1943-1943"];
m8_1061 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1941-1941"];
m8_1060 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1940-1940"];
m8_1070 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1870-1870"];
m8_102 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="58-58"];
m8_1007 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="389-389"];
m8_120 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="96-96"];
m8_851 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="115-115"];
m8_122 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="155-155"];
m8_1071 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="1977-1977"];
m8_1090 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="object value = CreateValueInternal(reader, null, null, null, contract, member, null)", span="1983-1983"];
m8_1089 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter != null", span="1979-1979"];
m8_1091 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter(o, memberName, value)", span="1985-1985"];
m8_1093 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Error setting value in extension data for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType), ex);", span="1989-1989"];
m8_1094 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1994-1994"];
m8_1092 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label=Exception, span="1987-1987"];
m8_1095 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetExtensionData(Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, string, object)", span="1977-1977"];
m8_181 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="JsonSerializerInternalReader.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m8_121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="1960-1960"];
m8_1079 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="Serializer.MetadataPropertyHandling == MetadataPropertyHandling.ReadAhead", span="1962-1962"];
m8_1080 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label=memberName, span="1964-1964"];
m8_1087 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="return false;", span="1974-1974"];
m8_1085 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1970-1970"];
m8_1081 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="JsonTypeReflector.IdPropertyName", span="1966-1966"];
m8_1086 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="return true;", span="1971-1971"];
m8_1084 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="JsonTypeReflector.ArrayValuesPropertyName", span="1969-1969"];
m8_1082 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="JsonTypeReflector.RefPropertyName", span="1967-1967"];
m8_1083 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="JsonTypeReflector.TypePropertyName", span="1968-1968"];
m8_1088 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckPropertyName(Newtonsoft.Json.JsonReader, string)", span="1960-1960"];
m8_166 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="316-316"];
m8_167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract.ContractType", span="318-318"];
m8_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON object (e.g. {''''name'''':''''value''''})'';", span="328-328"];
m8_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON array (e.g. [1,2,3])'';", span="330-330"];
m8_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON primitive value (e.g. string, number, boolean, null)'';", span="332-332"];
m8_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return @''JSON string value'';", span="334-334"];
m8_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentOutOfRangeException();", span="336-336"];
m8_168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Object", span="320-320"];
m8_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Array", span="329-329"];
m8_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Primitive", span="331-331"];
m8_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.String", span="333-333"];
m8_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dynamic", span="326-326"];
m8_169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Dictionary", span="321-321"];
m8_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonContractType.Serializable", span="323-323"];
m8_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetExpectedDescription(Newtonsoft.Json.Serialization.JsonContract)", span="316-316"];
m8_124 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m8_1008 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m8_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1422-1422"];
m8_776 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1433-1433"];
m8_777 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using ISerializable constructor.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType)), null)", span="1434-1434"];
m8_778 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, GetFormatterConverter())", span="1436-1436"];
m8_786 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object o = CreateObject(reader, null, null, null, contract, member, null)", span="1451-1451"];
m8_795 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, serializationInfo, ''Unexpected end when deserializing object.'')", span="1470-1470"];
m8_798 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object createdObject = contract.ISerializableCreator(serializationInfo, Serializer._context)", span="1475-1475"];
m8_800 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, createdObject)", span="1478-1478"];
m8_801 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, createdObject)", span="1481-1481"];
m8_802 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, createdObject)", span="1482-1482"];
m8_779 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1438-1438"];
m8_774 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!JsonTypeReflector.FullyTrusted", span="1426-1426"];
m8_787 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="serializationInfo.AddValue(memberName, o)", span="1452-1452"];
m8_788 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="serializationInfo.AddValue(memberName, JToken.ReadFrom(reader))", span="1456-1456"];
m8_785 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="1448-1448"];
m8_794 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1469-1469"];
m8_796 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ISerializableCreator == null", span="1472-1472"];
m8_799 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1477-1477"];
m8_803 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return createdObject;", span="1484-1484"];
m8_793 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1467-1467"];
m8_780 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1441-1441"];
m8_773 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Type objectType = contract.UnderlyingType", span="1424-1424"];
m8_775 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, @''Type '{0}' implements ISerializable but cannot be deserialized using the ISerializable interface because the current application is not fully trusted and ISerializable can expose secure data.\r\nTo fix this error either change the environment to be fully trusted, change the application to not deserialize the type, add JsonObjectAttribute to the type or change the JsonSerializer setting ContractResolver to use a new DefaultContractResolver with IgnoreSerializableInterface set to true.\r\n''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1428-1430"];
m8_782 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1444-1444"];
m8_783 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1445-1445"];
m8_784 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1446-1446"];
m8_792 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1465-1465"];
m8_797 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''ISerializable type '{0}' does not have a valid constructor. To correctly implement ISerializable a constructor that takes SerializationInfo and StreamingContext parameters should be present.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="1473-1473"];
m8_791 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1462-1462"];
m8_789 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1459-1459"];
m8_781 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1443-1443"];
m8_790 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1461-1461"];
m8_804 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1422-1422"];
m8_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="907-907"];
m8_517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract = GetContractSafe(property.PropertyType)", span="920-920"];
m8_518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="ObjectCreationHandling objectCreationHandling =\r\n                property.ObjectCreationHandling.GetValueOrDefault(Serializer._objectCreationHandling)", span="922-923"];
m8_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="934-934"];
m8_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer._nullValueHandling) == NullValueHandling.Ignore && tokenType == JsonToken.Null", span="944-944"];
m8_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Ignore)\r\n                && !HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer._defaultValueHandling), DefaultValueHandling.Populate)\r\n                && JsonReader.IsPrimitiveToken(tokenType)\r\n                && MiscellaneousUtils.ValueEquals(reader.Value, property.GetResolvedDefaultValue())", span="948-951"];
m8_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = GetContractSafe(currentValue.GetType())", span="960-960"];
m8_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyConverter = GetConverter(propertyContract, property.MemberConverter, containerContract, containerProperty)", span="963-963"];
m8_516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.PropertyContract == null", span="919-919"];
m8_519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="(objectCreationHandling != ObjectCreationHandling.Replace)\r\n                && (tokenType == JsonToken.StartArray || tokenType == JsonToken.StartObject)\r\n                && property.Readable", span="925-927"];
m8_520 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="929-929"];
m8_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue != null", span="932-932"];
m8_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="useExistingValue = (!propertyContract.IsReadOnlyOrFixedSize && !propertyContract.UnderlyingType.IsValueType())", span="936-936"];
m8_515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="JsonToken tokenType = reader.TokenType", span="917-917"];
m8_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="!property.Writable && !useExistingValue", span="940-940"];
m8_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="945-945"];
m8_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="952-952"];
m8_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue == null", span="954-954"];
m8_509 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="currentValue = null", span="909-909"];
m8_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract != property.PropertyContract", span="962-962"];
m8_536 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return false;", span="966-966"];
m8_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="property.Ignored", span="914-914"];
m8_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = property.PropertyContract", span="956-956"];
m8_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="gottenCurrentValue = true", span="930-930"];
m8_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="useExistingValue = false", span="910-910"];
m8_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="941-941"];
m8_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="gottenCurrentValue = false", span="912-912"];
m8_514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="return true;", span="915-915"];
m8_511 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="propertyContract = null", span="911-911"];
m8_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CalculatePropertyDetails(Newtonsoft.Json.Serialization.JsonProperty, ref Newtonsoft.Json.JsonConverter, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, object, out bool, out object, out Newtonsoft.Json.Serialization.JsonContract, out bool)", span="907-907"];
m8_481 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.FormatValueForPrint(object)", span="128-128"];
m8_607 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", span="371-371"];
m8_1011 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="402-402"];
m8_919 [cluster="Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ExtensionDataSetter.Invoke(object, string, object)", span="73-73"];
m8_399 [cluster="System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", span="0-0"];
m8_332 [cluster="Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetReferenceResolver()", span="884-884"];
m8_1009 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="377-377"];
m8_853 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1576-1576"];
m8_855 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence = (contract.HasRequiredOrDefaultValueProperties || HasFlag(Serializer._defaultValueHandling, DefaultValueHandling.Populate))\r\n                ? contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)\r\n                : null", span="1581-1583"];
m8_857 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="1587-1587"];
m8_859 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Deserializing {0} using creator with parameters: {1}.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, parameters)), null)", span="1590-1590"];
m8_861 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IDictionary<JsonProperty, object> propertyValues = ResolvePropertyAndCreatorValues(contract, containerProperty, reader, objectType, out extensionData)", span="1594-1594"];
m8_876 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, createdObject)", span="1624-1624"];
m8_877 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, createdObject)", span="1626-1626"];
m8_881 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="ShouldSetPropertyValue(property, value)", span="1634-1634"];
m8_884 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonContract propertyContract = Serializer._contractResolver.ResolveContract(property.PropertyType)", span="1641-1641"];
m8_904 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="EndObject(createdObject, reader, contract, reader.Depth, propertiesPresence)", span="1686-1686"];
m8_905 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, createdObject)", span="1688-1688"];
m8_854 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(creator, ''creator'')", span="1578-1578"];
m8_856 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="Type objectType = contract.UnderlyingType", span="1585-1585"];
m8_870 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertiesPresence != null", span="1612-1612"];
m8_871 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="var property = propertiesPresence.Keys.FirstOrDefault(p => p.PropertyName == propertyValue.Key.PropertyName)", span="1615-1615"];
m8_873 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertiesPresence[property] = (propertyValue.Value == null) ? PropertyPresence.Null : PropertyPresence.Value", span="1617-1617"];
m8_858 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="string parameters = string.Join('', '', contract.CreatorParameters.Select(p => p.PropertyName).ToArray())", span="1589-1589"];
m8_860 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IDictionary<string, object> extensionData", span="1593-1593"];
m8_862 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object[] creatorParameterValues = new object[contract.CreatorParameters.Count]", span="1596-1596"];
m8_864 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=propertyValues, span="1599-1599"];
m8_901 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="extensionData != null", span="1678-1678"];
m8_902 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=extensionData, span="1680-1680"];
m8_874 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object createdObject = creator(creatorParameterValues)", span="1621-1621"];
m8_875 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1623-1623"];
m8_878 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=remainingPropertyValues, span="1629-1629"];
m8_879 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = remainingPropertyValue.Key", span="1631-1631"];
m8_880 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object value = remainingPropertyValue.Value", span="1632-1632"];
m8_882 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(createdObject, value)", span="1636-1636"];
m8_883 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="!property.Writable && value != null", span="1638-1638"];
m8_885 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertyContract.ContractType == JsonContractType.Array", span="1643-1643"];
m8_886 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract propertyArrayContract = (JsonArrayContract)propertyContract", span="1645-1645"];
m8_893 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="propertyContract.ContractType == JsonContractType.Dictionary", span="1659-1659"];
m8_894 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract)propertyContract", span="1661-1661"];
m8_906 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="return createdObject;", span="1689-1689"];
m8_890 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection newValues = propertyArrayContract.CreateWrapper(value)", span="1651-1651"];
m8_889 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection createdObjectCollectionWrapper = propertyArrayContract.CreateWrapper(createdObjectCollection)", span="1650-1650"];
m8_898 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IDictionary newValues = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(value) : (IDictionary)value", span="1667-1667"];
m8_897 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IDictionary targetDictionary = (dictionaryContract.ShouldCreateWrapper) ? dictionaryContract.CreateWrapper(createdObjectDictionary) : (IDictionary)createdObjectDictionary", span="1666-1666"];
m8_865 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty matchingCreatorParameter = contract.CreatorParameters.ForgivingCaseSensitiveFind(p => p.PropertyName, propertyValue.Key.PropertyName)", span="1601-1601"];
m8_867 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="int i = contract.CreatorParameters.IndexOf(matchingCreatorParameter)", span="1604-1604"];
m8_903 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="contract.ExtensionDataSetter(createdObject, e.Key, e.Value)", span="1682-1682"];
m8_868 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="creatorParameterValues[i] = propertyValue.Value", span="1605-1605"];
m8_869 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="remainingPropertyValues.Add(propertyValue)", span="1609-1609"];
m8_872 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="property != null", span="1616-1616"];
m8_863 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="IDictionary<JsonProperty, object> remainingPropertyValues = new Dictionary<JsonProperty, object>()", span="1597-1597"];
m8_887 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object createdObjectCollection = property.ValueProvider.GetValue(createdObject)", span="1647-1647"];
m8_895 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="object createdObjectDictionary = property.ValueProvider.GetValue(createdObject)", span="1663-1663"];
m8_888 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="createdObjectCollection != null", span="1648-1648"];
m8_891 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=newValues, span="1653-1653"];
m8_896 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="createdObjectDictionary != null", span="1664-1664"];
m8_899 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label=newValues, span="1669-1669"];
m8_892 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="createdObjectCollectionWrapper.Add(newValue)", span="1655-1655"];
m8_900 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="targetDictionary.Add(newValue.Key, newValue.Value)", span="1671-1671"];
m8_866 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="matchingCreatorParameter != null", span="1602-1602"];
m8_907 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectUsingCreatorWithParameters(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.ObjectConstructor<object>, string)", span="1576-1576"];
m8_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="590-590"];
m8_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="611-611"];
m8_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="617-617"];
m8_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = Serializer.GetReferenceResolver().ResolveReference(this, reference)", span="624-624"];
m8_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter != null && TraceWriter.LevelFilter >= TraceLevel.Info", span="626-626"];
m8_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="TraceWriter.Trace(TraceLevel.Info, JsonPosition.FormatMessage(reader as IJsonLineInfo, reader.Path, ''Resolved object reference '{0}' to {1}.''.FormatWith(CultureInfo.InvariantCulture, reference, newValue.GetType())), null)", span="627-627"];
m8_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="638-638"];
m8_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="ResolveTypeName(reader, ref objectType, ref contract, member, containerContract, containerMember, qualifiedTypeName)", span="641-641"];
m8_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="643-643"];
m8_366 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="649-649"];
m8_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="653-653"];
m8_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="658-658"];
m8_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="object list = CreateList(reader, objectType, contract, member, existingValue, id)", span="659-659"];
m8_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="660-660"];
m8_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.RefPropertyName, StringComparison.Ordinal)", span="609-609"];
m8_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType != JsonToken.String && reader.TokenType != JsonToken.Null", span="612-612"];
m8_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string reference = (reader.Value != null) ? reader.Value.ToString() : null", span="615-615"];
m8_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reference != null", span="619-619"];
m8_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="621-621"];
m8_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="629-629"];
m8_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.TypePropertyName, StringComparison.Ordinal)", span="636-636"];
m8_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string qualifiedTypeName = reader.Value.ToString()", span="639-639"];
m8_364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty = true", span="645-645"];
m8_365 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="647-647"];
m8_367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="651-651"];
m8_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty = true", span="654-654"];
m8_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.ArrayValuesPropertyName, StringComparison.Ordinal)", span="656-656"];
m8_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="id = null", span="592-592"];
m8_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = list", span="661-661"];
m8_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="595-595"];
m8_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="string propertyName = reader.Value.ToString()", span="597-597"];
m8_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="propertyName = reader.Value.ToString()", span="607-607"];
m8_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="613-613"];
m8_353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Additional content found in JSON reference object. A JSON reference object should only have a {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="622-622"];
m8_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty && reader.TokenType == JsonToken.PropertyName", span="668-668"];
m8_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty = true", span="633-633"];
m8_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="newValue = null", span="593-593"];
m8_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return false;", span="671-671"];
m8_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="return true;", span="662-662"];
m8_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="metadataProperty = false", span="666-666"];
m8_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="propertyName.Length > 0 && propertyName[0] == '$'", span="599-599"];
m8_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="bool metadataProperty", span="603-603"];
m8_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadMetadataProperties(Newtonsoft.Json.JsonReader, ref System.Type, ref Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContainerContract, Newtonsoft.Json.Serialization.JsonProperty, object, out object, out string)", span="590-590"];
m8_103 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="74-74"];
m8_447 [cluster="System.Type.GetArrayRank()", file="JsonSerializerInternalReader.cs", label="Entry System.Type.GetArrayRank()", span="0-0"];
m8_914 [cluster="System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", span="129-129"];
m8_30 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43"];
m8_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1092-1092"];
m8_617 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="AddReference(reader, id, underlyingDictionary)", span="1098-1098"];
m8_618 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserializing(reader, contract, underlyingDictionary)", span="1100-1100"];
m8_621 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.KeyContract = GetContractSafe(contract.DictionaryKeyType)", span="1105-1105"];
m8_623 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract = GetContractSafe(contract.DictionaryValueType)", span="1108-1108"];
m8_624 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonConverter dictionaryValueConverter = contract.ItemConverter ?? GetConverter(contract.ItemContract, null, contract, containerProperty)", span="1110-1110"];
m8_630 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="CheckPropertyName(reader, keyValue.ToString())", span="1120-1120"];
m8_643 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="keyValue = EnsureType(reader, keyValue, CultureInfo.InvariantCulture, contract.KeyContract, contract.DictionaryKeyType)", span="1150-1150"];
m8_646 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, contract.ItemContract, dictionaryValueConverter != null)", span="1157-1157"];
m8_650 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="itemValue = DeserializeConvertable(dictionaryValueConverter, reader, contract.DictionaryValueType, null)", span="1162-1162"];
m8_651 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="itemValue = CreateValueInternal(reader, contract.DictionaryValueType, contract.ItemContract, null, contract, containerProperty, null)", span="1164-1164"];
m8_654 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(underlyingDictionary, contract, keyValue, reader as IJsonLineInfo, reader.Path, ex)", span="1170-1170"];
m8_655 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, true, initialDepth)", span="1171-1171"];
m8_663 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="ThrowUnexpectedEndException(reader, contract, underlyingDictionary, ''Unexpected end when deserializing object.'')", span="1187-1187"];
m8_664 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="OnDeserialized(reader, contract, underlyingDictionary)", span="1189-1189"];
m8_626 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="bool finished = false", span="1113-1113"];
m8_615 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object underlyingDictionary = wrappedDictionary != null ? wrappedDictionary.UnderlyingDictionary : dictionary", span="1095-1095"];
m8_616 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="1097-1097"];
m8_619 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1102-1102"];
m8_620 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.KeyContract == null", span="1104-1104"];
m8_622 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="contract.ItemContract == null", span="1107-1107"];
m8_625 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode keyTypeCode = (contract.KeyContract is JsonPrimitiveContract) ? ((JsonPrimitiveContract)contract.KeyContract).TypeCode : PrimitiveTypeCode.Empty", span="1111-1111"];
m8_649 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dictionaryValueConverter != null && dictionaryValueConverter.CanRead", span="1161-1161"];
m8_629 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object keyValue = reader.Value", span="1119-1119"];
m8_631 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="DateParseHandling dateParseHandling", span="1127-1127"];
m8_661 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished && reader.Read()", span="1184-1184"];
m8_641 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dateParseHandling != DateParseHandling.None && DateTimeUtils.TryParseDateTime(keyValue.ToString(), dateParseHandling, reader.DateTimeZoneHandling, reader.DateFormatString, reader.Culture, out dt)", span="1147-1147"];
m8_644 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1152-1152"];
m8_652 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dictionary[keyValue] = itemValue", span="1166-1166"];
m8_642 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="keyValue = dt", span="1148-1148"];
m8_647 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected end when deserializing object.'');", span="1158-1158"];
m8_648 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object itemValue", span="1160-1160"];
m8_653 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="1168-1168"];
m8_656 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="1173-1173"];
m8_662 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="!finished", span="1186-1186"];
m8_665 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="return underlyingDictionary;", span="1190-1190"];
m8_614 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="IWrappedDictionary wrappedDictionary = dictionary as IWrappedDictionary", span="1094-1094"];
m8_627 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1116-1116"];
m8_645 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Could not convert string '{0}' to dictionary key type '{1}'. Create a TypeConverter to convert from the string to the key type object.''.FormatWith(CultureInfo.InvariantCulture, reader.Value, contract.DictionaryKeyType), ex);", span="1154-1154"];
m8_660 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="throw JsonSerializationException.Create(reader, ''Unexpected token when deserializing object: '' + reader.TokenType);", span="1182-1182"];
m8_632 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label=keyTypeCode, span="1128-1128"];
m8_628 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1118-1118"];
m8_640 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="object dt", span="1146-1146"];
m8_657 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1176-1176"];
m8_659 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="finished = true", span="1179-1179"];
m8_639 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dateParseHandling = DateParseHandling.None", span="1141-1141"];
m8_658 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1178-1178"];
m8_633 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode.DateTime", span="1130-1130"];
m8_636 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode.DateTimeOffset", span="1135-1135"];
m8_635 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dateParseHandling = DateParseHandling.DateTime", span="1132-1132"];
m8_638 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="dateParseHandling = DateParseHandling.DateTimeOffset", span="1137-1137"];
m8_634 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode.DateTimeNullable", span="1131-1131"];
m8_637 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="PrimitiveTypeCode.DateTimeOffsetNullable", span="1136-1136"];
m8_666 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(System.Collections.IDictionary, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, string)", span="1092-1092"];
m8_726 [cluster="System.Collections.IList.Add(object)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m8_601 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="176-176"];
m8_1127 [file="JsonSerializerInternalReader.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", span=""];
m8_1128 [file="JsonSerializerInternalReader.cs", label=propertyValue, span=""];
m9_6 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", span="104-104"];
m9_7 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonTextReader.cs", label="Path = path", span="107-107"];
m9_8 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonTextReader.cs", label="LineNumber = lineNumber", span="108-108"];
m9_9 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonTextReader.cs", label="LinePosition = linePosition", span="109-109"];
m9_10 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", span="104-104"];
m9_2 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", span="74-74"];
m9_3 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", span="74-74"];
m9_0 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", span="65-65"];
m9_1 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", span="65-65"];
m9_4 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", span="85-85"];
m9_5 [cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", span="85-85"];
m9_11 [file="JsonTextReader.cs", label="Newtonsoft.Json.Schema.JsonSchemaException", span=""];
m10_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="796-796"];
m10_15 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonTextReaderTest.cs", label="return contract;", span="193-193"];
m10_1499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2413-2413"];
m10_1501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2416-2416"];
m10_1500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="string json = ''new Date,()''", span="2415-2415"];
m10_1502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: ,. Path '', line 1, position 8.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2418-2420"];
m10_1503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithBadCharacter()", span="2413-2413"];
m10_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(newLinesText + ''blah comment'' + newLinesText, reader.Value)", span="1048-1048"];
m10_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="952-952"];
m10_1211 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m10_1758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2819-2819"];
m10_1760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2823-2826"];
m10_1761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2828-2828"];
m10_1759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="string json = ''[[]]''", span="2821-2821"];
m10_1762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2830-2832"];
m10_1763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepth()", span="2819-2819"];
m10_837 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="931-931"];
m10_977 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextReaderTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m10_1920 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3103-3103"];
m10_1957 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="_inner = inner", span="3105-3105"];
m10_1958 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.ToggleReaderError(System.IO.TextReader)", span="3103-3103"];
m10_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="reader.Read()", span="270-270"];
m10_276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="562-562"];
m10_277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="564-564"];
m10_279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="566-566"];
m10_278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="565-565"];
m10_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.Integer)", span="571-571"];
m10_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2L, reader.Value)", span="572-572"];
m10_280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="567-567"];
m10_281 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[0]'', reader.Path)", span="568-568"];
m10_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="570-570"];
m10_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="573-573"];
m10_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", span="50-50"];
m10_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", color=green, community=0, file="JsonTextReaderTest.cs", label="1: string json = @''{ ''''ItemName'''': ''''value'''', ''''u'''':netanelsalinger,''''r'''':9 }''", span="52-52"];
m10_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ThrowErrorWhenParsingUnquoteStringThatStartsWithNE()", color=green, community=0, file="JsonTextReaderTest.cs", label="1: JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="54-54"];
m10_158 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonTextReaderTest.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m10_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''MemberConverter'', reader.Value)", span="351-351"];
m10_404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="722-722"];
m10_681 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1586-1586"];
m10_683 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1586-1586"];
m10_685 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonTextReaderTest.cs", label="return NamingStrategy.GetPropertyName(propertyName, false);", span="1603-1603"];
m10_687 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1599-1599"];
m10_689 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonTextReaderTest.cs", label="NamingStrategy != null", span="1616-1616"];
m10_691 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonTextReaderTest.cs", label="return extensionDataName;", span="1621-1621"];
m10_693 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetExtensionDataName(string)", span="47-47"];
m10_695 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonTextReaderTest.cs", label="NamingStrategy != null", span="1631-1631"];
m10_697 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonTextReaderTest.cs", label="return ResolvePropertyName(dictionaryKey);", span="1636-1636"];
m10_699 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1644-1644"];
m10_701 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", span="1644-1644"];
m10_703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label=namingStrategy, span=""];
m10_705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label=setExtensionDataDictionary, span=""];
m10_684 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonTextReaderTest.cs", label="NamingStrategy != null", span="1601-1601"];
m10_686 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonTextReaderTest.cs", label="return propertyName;", span="1606-1606"];
m10_688 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1614-1614"];
m10_690 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonTextReaderTest.cs", label="return NamingStrategy.GetExtensionDataName(extensionDataName);", span="1618-1618"];
m10_692 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveExtensionDataName(string)", span="1614-1614"];
m10_694 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1629-1629"];
m10_704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label=getExtensionDataDictionary, span=""];
m10_696 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonTextReaderTest.cs", label="return NamingStrategy.GetDictionaryKey(dictionaryKey);", span="1633-1633"];
m10_698 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveDictionaryKey(string)", span="1629-1629"];
m10_700 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetResolvedPropertyName(string)", file="JsonTextReaderTest.cs", label="return ResolvePropertyName(propertyName);", span="1648-1648"];
m10_702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver", span=""];
m10_706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label="System.Reflection.MemberInfo", span=""];
m10_682 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="(bool)specifiedPropertyGet(o)", span="1586-1586"];
m10_707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIntegers()", file="JsonTextReaderTest.cs", label=createExtensionDataDictionary, span=""];
m10_1702 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2739-2739"];
m10_1703 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{}}''))", span="2741-2741"];
m10_1704 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2742-2742"];
m10_1705 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2743-2743"];
m10_1706 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: }. Path '', line 1, position 2.'',\r\n                () => { reader.Read(); })", span="2745-2747"];
m10_1707 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndTokenWhenParsingOddEndToken()", span="2739-2739"];
m10_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="string json = ''[NaN]''", span="110-110"];
m10_1244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="1994-1994"];
m10_1246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1998-1998"];
m10_1248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2001-2001"];
m10_1250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2004-2004"];
m10_1257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2014-2014"];
m10_1249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2002-2002"];
m10_1251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2005-2005"];
m10_1253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="2008-2008"];
m10_1254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2009-2009"];
m10_1258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2015-2015"];
m10_1256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="2012-2012"];
m10_1245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", span="1996-1996"];
m10_1247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", span="1999-1999"];
m10_1252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2007-2007"];
m10_1255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="2011-2011"];
m10_1259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", span="1994-1994"];
m10_497 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1115-1115"];
m10_499 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="274-274"];
m10_502 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1205-1205"];
m10_504 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonTextReaderTest.cs", label="return (typeCode != PrimitiveTypeCode.Empty && typeCode != PrimitiveTypeCode.Object);", span="1189-1189"];
m10_505 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1185-1185"];
m10_506 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetTypeCode(System.Type)", span="185-185"];
m10_498 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", span="1185-1185"];
m10_500 [cluster="System.Type.IsSubclassOf(System.Type)", file="JsonTextReaderTest.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
m10_501 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="96-96"];
m10_503 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsJsonPrimitiveType(System.Type)", file="JsonTextReaderTest.cs", label="PrimitiveTypeCode typeCode = ConvertUtils.GetTypeCode(t)", span="1187-1187"];
m10_507 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonTextReaderTest.cs", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="1215-1215"];
m10_891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1467-1467"];
m10_893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="1472-1472"];
m10_895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1475-1475"];
m10_897 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1478-1478"];
m10_898 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1479-1479"];
m10_900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1482-1482"];
m10_901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="1483-1483"];
m10_903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1486-1486"];
m10_904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="1487-1487"];
m10_906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1490-1490"];
m10_907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="1491-1491"];
m10_909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1494-1494"];
m10_910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="1495-1495"];
m10_912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1498-1498"];
m10_913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="1499-1499"];
m10_915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1502-1502"];
m10_916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="1503-1503"];
m10_918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1506-1506"];
m10_919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1507-1507"];
m10_921 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1510-1510"];
m10_922 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1511-1511"];
m10_924 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1514-1514"];
m10_925 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1515-1515"];
m10_927 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1518-1518"];
m10_928 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="1519-1519"];
m10_930 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1522-1522"];
m10_931 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="1523-1523"];
m10_933 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1526-1526"];
m10_934 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="1527-1527"];
m10_936 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1530-1530"];
m10_937 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="1531-1531"];
m10_939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1534-1534"];
m10_940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="1535-1535"];
m10_942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1538-1538"];
m10_943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, jsonReader.Value)", span="1539-1539"];
m10_945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1542-1542"];
m10_946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025d, jsonReader.Value)", span="1543-1543"];
m10_948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="1546-1546"];
m10_949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000d, jsonReader.Value)", span="1547-1547"];
m10_951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1550-1550"];
m10_892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="string json =\r\n                @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN,0e-10,0.25e-5,0.3e10]''", span="1469-1470"];
m10_894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1474-1474"];
m10_896 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1477-1477"];
m10_899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1481-1481"];
m10_902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1485-1485"];
m10_905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1489-1489"];
m10_908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1493-1493"];
m10_911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1497-1497"];
m10_914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1501-1501"];
m10_917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1505-1505"];
m10_920 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1509-1509"];
m10_923 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1513-1513"];
m10_926 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1517-1517"];
m10_929 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1521-1521"];
m10_932 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1525-1525"];
m10_935 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1529-1529"];
m10_938 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1533-1533"];
m10_941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1537-1537"];
m10_944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1541-1541"];
m10_947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1545-1545"];
m10_950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1549-1549"];
m10_952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="1467-1467"];
m10_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="133-133"];
m10_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="134-134"];
m10_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="136-136"];
m10_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="140-140"];
m10_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="142-142"];
m10_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="145-145"];
m10_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''recipe_text'', reader.Value)", span="147-147"];
m10_80 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="string json = @''{ ''''MATHEMATICAL ITALIC CAPITAL ALPHA'''': ''''\uD835\uDEE2'''' }''", span="213-213"];
m10_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="215-215"];
m10_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="217-217"];
m10_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="220-220"];
m10_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="221-221"];
m10_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="string s = reader.Value.ToString()", span="223-223"];
m10_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, s.Length)", span="224-224"];
m10_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="StringInfo stringInfo = new StringInfo(s)", span="226-226"];
m10_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="211-211"];
m10_91 [cluster="object.ToString()", file="JsonTextReaderTest.cs", label="Entry object.ToString()", span="0-0"];
m10_92 [cluster="System.Globalization.StringInfo.StringInfo(string)", file="JsonTextReaderTest.cs", label="Entry System.Globalization.StringInfo.StringInfo(string)", span="0-0"];
m10_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", span="231-231"];
m10_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800 DEF''))", span="237-237"];
m10_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\u1234 DEF'', ReadString(''ABC \\ud800\\ud800\\u1234 DEF''))", span="240-240"];
m10_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd\ufffd DEF'', ReadString(''ABC \\ud800\\ud800\\ud800 DEF''))", span="243-243"];
m10_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd'', ReadString(''ABC \\ud800''))", span="249-249"];
m10_100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd DEF'', ReadString(''ABC \\ud800 DEF''))", span="252-252"];
m10_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="137-137"];
m10_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="139-139"];
m10_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="143-143"];
m10_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="124-124"];
m10_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="146-146"];
m10_75 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="149-149"];
m10_76 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="150-150"];
m10_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''#C16------------------------------\r\n#C12Ingredients #C20\r\n#C16------------------------------\r\n\r\na piece of Leather Armor\r\n( ie #L ''''Enhanced Leather Armor Boots'''' ''''85644'''' )\r\n<img src=rdb://13264>\r\n\r\n#L ''''Hacker Tool'''' ''''87814''''\r\n<img src=rdb://99282>\r\n\r\n#L ''''Clanalizer'''' ''''208313''''\r\n<img src=rdb://156479>\r\n\r\n#C16------------------------------\r\n#C12Recipe #C16\r\n#C16------------------------------#C20\r\n\r\nHacker Tool\r\n#C15+#C20\r\na piece of Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Hacked Leather Armor\r\n( ie : #L ''''Hacked Leather Armor Boots'''' ''''245979'''' )\r\n#C16Skills: |  BE  |#C20\r\n\r\n#C14------------------------------#C20\r\n\r\nClanalizer\r\n#C15+#C20\r\na piece of Hacked Leather Armor\r\n#C15=#C20\r\n<img src=rdb://13264>\r\na piece of Apocalypse Leather Armor\r\n( ie : #L ''''Apocalypse Leather Armor Boots'''' ''''245966'''' )\r\n#C16Skills: |  ??  |#C20\r\n\r\n#C16------------------------------\r\n#C12Details#C16\r\n#C16------------------------------#C20\r\n\r\n#L ''''Apocalypse Leather Armor Boots'''' ''''245967''''\r\n#L ''''Apocalypse Leather Armor Gloves'''' ''''245969''''\r\n#L ''''Apocalypse Leather Armor Helmet'''' ''''245975''''\r\n#L ''''Apocalypse Leather Armor Pants'''' ''''245971''''\r\n#L ''''Apocalypse Leather Armor Sleeves'''' ''''245973''''\r\n#L ''''Apocalypse Leather Body Armor'''' ''''245965''''\r\n\r\n#C16------------------------------\r\n#C12Comments#C16\r\n#C16------------------------------#C20\r\n\r\nNice froob armor.. but ugleh!\r\n\r\n'', reader.Value)", span="152-207"];
m10_79 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", span="211-211"];
m10_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="218-218"];
m10_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairValid()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, stringInfo.LengthInTextElements)", span="227-227"];
m10_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ud800\udc00 DEF'', ReadString(''ABC \\ud800\\udc00 DEF''))", span="234-234"];
m10_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ud800\udc00 DEF'', ReadString(''ABC \\ud800\\ud800\\udc00 DEF''))", span="246-246"];
m10_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \ufffd\ufffd DEF'', ReadString(''ABC \\udc00\\ud800 DEF''))", span="255-255"];
m10_1437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2319-2319"];
m10_1439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2322-2322"];
m10_1440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2324-2324"];
m10_1441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2325-2325"];
m10_1442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2326-2326"];
m10_1438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="string json = ''[true ''", span="2321-2321"];
m10_1443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseBooleanWithNoExtraContent()", span="2319-2319"];
m10_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="480-480"];
m10_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartConstructor)", span="577-577"];
m10_3 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="1: Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="167-167"];
m10_4 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="1: type == null", span="169-169"];
m10_5 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="0: throw new ArgumentNullException(nameof(type));", span="171-171"];
m10_6 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="1: JsonContract contract", span="174-174"];
m10_7 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="1: Dictionary<Type, JsonContract> cache = _contractCache", span="175-175"];
m10_8 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="1: cache == null || !cache.TryGetValue(type, out contract)", span="176-176"];
m10_9 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="1: contract = CreateContract(type)", span="178-178"];
m10_10 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="0: _typeContractCacheLock", span="181-181"];
m10_11 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="1: cache = _contractCache", span="183-183"];
m10_12 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonTextReaderTest.cs", label="Dictionary<Type, JsonContract> updatedCache = (cache != null)\r\n                        ? new Dictionary<Type, JsonContract>(cache)\r\n                        : new Dictionary<Type, JsonContract>()", span="184-186"];
m10_347 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="List<SerializationErrorCallback> onError", span="784-784"];
m10_348 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="GetCallbackMethodsForType(t, out onSerializing, out onSerialized, out onDeserializing, out onDeserialized, out onError)", span="786-786"];
m10_349 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="onSerializing != null", span="788-788"];
m10_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="reader.Read()", span="849-849"];
m10_185 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="ConstructorInfo constructors = enumerableWrapper.GetConstructors().First()", span="509-509"];
m10_187 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="ExtensionDataGetter extensionDataGetter = o =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        return null;\r\n                    }\r\n\r\n                    return (IEnumerable<KeyValuePair<object, object>>)createEnumerableWrapper(dictionary);\r\n                }", span="512-521"];
m10_188 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="contract.ExtensionDataGetter = extensionDataGetter", span="523-523"];
m10_186 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="ObjectConstructor<object> createEnumerableWrapper = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(constructors)", span="510-510"];
m10_189 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="contract.ExtensionDataValueType = valueType", span="526-526"];
m10_131 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="return m;", span="405-405"];
m10_747 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="326-326"];
m10_13 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="73-73"];
m10_14 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m10_16 [cluster="Unk.IsTrue", file="JsonTextReaderTest.cs", label="Entry Unk.IsTrue", span=""];
m10_18 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m10_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="744-744"];
m10_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="746-746"];
m10_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''\0sd\0f\0'', reader.Value)", span="748-748"];
m10_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="747-747"];
m10_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="754-754"];
m10_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''e1'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''e2'''',\r\n    ''''Manager'''': null\r\n  },\r\n  {\r\n    ''''$ref'''': ''''1''''\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]''", span="756-773"];
m10_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="775-775"];
m10_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="reader.Read()", span="782-782"];
m10_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="reader.Read()", span="785-785"];
m10_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", span="754-754"];
m10_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", span="790-790"];
m10_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="long i = int.MaxValue", span="792-792"];
m10_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(i.ToString(CultureInfo.InvariantCulture)))", span="794-794"];
m10_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="750-750"];
m10_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", span="707-707"];
m10_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="int i = 0", span="780-780"];
m10_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="i < 15", span="780-780"];
m10_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="i++", span="780-780"];
m10_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.AppendCharsWhileReadingNull()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="786-786"];
m10_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="reader.Read()", span="795-795"];
m10_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, jsonReader.LinePosition)", span="475-475"];
m10_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="715-715"];
m10_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="727-727"];
m10_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="728-728"];
m10_792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1325-1325"];
m10_822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="1371-1371"];
m10_827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(json, sb.ToString())", span="1384-1384"];
m10_820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="string json = sb.ToString()", span="1367-1367"];
m10_821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="1369-1369"];
m10_823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="sb = new StringBuilder()", span="1373-1373"];
m10_826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="serializer.Serialize(jsonWriter, jsonObject)", span="1381-1381"];
m10_793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="StringBuilder sb = new StringBuilder()", span="1327-1327"];
m10_819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndArray()", span="1364-1364"];
m10_824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="sw = new StringWriter(sb)", span="1374-1374"];
m10_825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1376-1379"];
m10_805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="int i = 0", span="1346-1346"];
m10_794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter(sb)", span="1328-1328"];
m10_795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)\r\n            {\r\n                Formatting = Formatting.Indented\r\n            }", span="1330-1333"];
m10_818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteNull()", span="1363-1363"];
m10_814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndArray()", span="1357-1357"];
m10_804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartArray()", span="1345-1345"];
m10_806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="i < 5", span="1346-1346"];
m10_807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(i)", span="1348-1348"];
m10_808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="i++", span="1346-1346"];
m10_796 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartArray()", span="1335-1335"];
m10_797 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(true)", span="1336-1336"];
m10_798 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartObject()", span="1338-1338"];
m10_799 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''integer'')", span="1339-1339"];
m10_800 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(99)", span="1340-1340"];
m10_801 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''string'')", span="1341-1341"];
m10_802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="1342-1342"];
m10_803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''array'')", span="1343-1343"];
m10_809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartObject()", span="1351-1351"];
m10_810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="1352-1352"];
m10_811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(990.00990099m)", span="1353-1353"];
m10_812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndObject()", span="1354-1354"];
m10_813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(5)", span="1356-1356"];
m10_815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndObject()", span="1359-1359"];
m10_816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="1361-1361"];
m10_817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteNull()", span="1362-1362"];
m10_828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="1325-1325"];
m10_1802 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2889-2889"];
m10_1804 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2893-2893"];
m10_1805 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2895-2895"];
m10_1806 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2897-2897"];
m10_1808 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2900-2900"];
m10_1811 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2904-2904"];
m10_1814 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2908-2908"];
m10_1817 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2912-2912"];
m10_1820 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2916-2916"];
m10_1823 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2920-2920"];
m10_1826 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2924-2924"];
m10_1829 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2928-2928"];
m10_1832 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2932-2932"];
m10_1835 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2936-2936"];
m10_1838 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2940-2940"];
m10_1841 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2944-2944"];
m10_1807 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.Value)", span="2898-2898"];
m10_1809 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2901-2901"];
m10_1810 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2902-2902"];
m10_1812 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2905-2905"];
m10_1813 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2906-2906"];
m10_1815 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2909-2909"];
m10_1816 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(false, reader.Value)", span="2910-2910"];
m10_1818 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2913-2913"];
m10_1819 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''test!'', reader.Value)", span="2914-2914"];
m10_1821 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2917-2917"];
m10_1822 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.11d, reader.Value)", span="2918-2918"];
m10_1824 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2921-2921"];
m10_1825 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2922-2922"];
m10_1827 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2925-2925"];
m10_1828 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2926-2926"];
m10_1830 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2929-2929"];
m10_1831 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2930-2930"];
m10_1833 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2933-2933"];
m10_1834 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2934-2934"];
m10_1836 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2937-2937"];
m10_1837 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2938-2938"];
m10_1839 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2941-2941"];
m10_1840 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="2942-2942"];
m10_1803 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="string json = ''[false, true, true, false, 'test!', 1.11, 0e-10, 0E-10, 0.25e-5, 0.3e10, 6.0221418e23, 'Purple\\r \\n monkey\\'s:\\tdishwasher']''", span="2891-2891"];
m10_1842 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingFromSlowStream()", span="2889-2889"];
m10_1370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2212-2212"];
m10_1372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2215-2215"];
m10_1373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2220-2220"];
m10_1376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2224-2224"];
m10_1374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2221-2221"];
m10_1375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2222-2222"];
m10_1377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2225-2225"];
m10_1371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="string json = ''new Date\0()''", span="2214-2214"];
m10_1378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNullStringConstructor()", span="2212-2212"];
m10_757 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1285-1285"];
m10_759 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1289-1289"];
m10_763 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1294-1294"];
m10_767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1299-1299"];
m10_771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1304-1304"];
m10_775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1309-1309"];
m10_777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1312-1312"];
m10_781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1317-1317"];
m10_783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1320-1320"];
m10_760 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1290-1290"];
m10_764 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1295-1295"];
m10_768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1300-1300"];
m10_772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1305-1305"];
m10_778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1313-1313"];
m10_782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1318-1318"];
m10_761 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1291-1291"];
m10_762 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.1d, reader.Value)", span="1292-1292"];
m10_765 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1296-1296"];
m10_766 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-1.1d, reader.Value)", span="1297-1297"];
m10_769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1301-1301"];
m10_770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0d, reader.Value)", span="1302-1302"];
m10_773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1306-1306"];
m10_774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-0.0d, reader.Value)", span="1307-1307"];
m10_779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(double), reader.ValueType)", span="1314-1314"];
m10_780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.000001d, reader.Value)", span="1315-1315"];
m10_776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid number. Path '', line 1, position 77.'', () => reader.Read())", span="1310-1310"];
m10_784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid number. Path '', line 1, position 1.'', () => reader.Read())", span="1321-1321"];
m10_758 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = null", span="1287-1287"];
m10_785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDoubles()", span="1285-1285"];
m10_197 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="435-440"];
m10_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="321-321"];
m10_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="743-743"];
m10_651 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label=hasMemberAttribute, span="1546-1546"];
m10_654 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="allowNonPublicAccess = true", span="1552-1552"];
m10_653 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="memberSerialization == MemberSerialization.Fields", span="1550-1550"];
m10_655 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", span="1386-1386"];
m10_657 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetPropertyName(string, bool)", span="32-32"];
m10_658 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", span="1599-1599"];
m10_660 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, ReflectionUtils.EmptyTypes)", span="1558-1558"];
m10_661 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="1560-1560"];
m10_663 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="MethodCall<object, object> shouldSerializeCall =\r\n                JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(shouldSerializeMethod)", span="1565-1566"];
m10_664 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="return o => (bool)shouldSerializeCall(o);", span="1568-1568"];
m10_665 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1556-1556"];
m10_666 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1568-1568"];
m10_668 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1568-1568"];
m10_669 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonTextReaderTest.cs", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1573-1573"];
m10_656 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateNamingStrategyInstance(System.Type, object[])", span="205-205"];
m10_659 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.CreateJsonConverterInstance(System.Type, object[])", span="199-199"];
m10_662 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="return null;", span="1562-1562"];
m10_667 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="(bool)shouldSerializeCall(o)", span="1568-1568"];
m10_652 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="allowNonPublicAccess = true", span="1548-1548"];
m10_670 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonTextReaderTest.cs", label="specifiedMember == null", span="1574-1574"];
m10_832 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="875-875"];
m10_1452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2341-2341"];
m10_1454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2344-2344"];
m10_1455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character while parsing constructor: !. Path '', line 1, position 9.'',\r\n                () => { reader.Read(); })", span="2346-2348"];
m10_1453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="string json = ''new Date !''", span="2343-2343"];
m10_1456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedCharacter()", span="2341-2341"];
m10_196 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="437-437"];
m10_1672 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2689-2689"];
m10_1674 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2693-2693"];
m10_1676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2696-2696"];
m10_1677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(8m, reader.Value)", span="2697-2697"];
m10_1673 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="string json = @''010''", span="2691-2691"];
m10_1675 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2695-2695"];
m10_1678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseOctalNumber()", span="2689-2689"];
m10_269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="554-554"];
m10_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="616-616"];
m10_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="454-454"];
m10_618 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ObjectCreationHandling = propertyAttribute._objectCreationHandling", span="1463-1463"];
m10_621 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ItemIsReference = propertyAttribute._itemIsReference", span="1467-1467"];
m10_622 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ItemConverter = propertyAttribute.ItemConverterType != null ? JsonTypeReflector.CreateJsonConverterInstance(propertyAttribute.ItemConverterType, propertyAttribute.ItemConverterParameters) : null", span="1468-1468"];
m10_624 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ItemTypeNameHandling = propertyAttribute._itemTypeNameHandling", span="1470-1470"];
m10_629 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.IsReference = null", span="1478-1478"];
m10_623 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ItemReferenceLoopHandling = propertyAttribute._itemReferenceLoopHandling", span="1469-1469"];
m10_625 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.NullValueHandling = null", span="1474-1474"];
m10_628 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.TypeNameHandling = null", span="1477-1477"];
m10_630 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ItemIsReference = null", span="1479-1479"];
m10_620 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.IsReference = propertyAttribute._isReference", span="1465-1465"];
m10_626 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ReferenceLoopHandling = null", span="1475-1475"];
m10_631 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ItemConverter = null", span="1480-1480"];
m10_627 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ObjectCreationHandling = null", span="1476-1476"];
m10_619 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.TypeNameHandling = propertyAttribute._typeNameHandling", span="1464-1464"];
m10_632 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, object, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool)", file="JsonTextReaderTest.cs", label="property.ItemReferenceLoopHandling = null", span="1481-1481"];
m10_1897 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m10_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="617-617"];
m10_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1053-1053"];
m10_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(109, reader.LineNumber)", span="1054-1054"];
m10_597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1063-1063"];
m10_599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1066-1066"];
m10_607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1077-1077"];
m10_608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1078-1078"];
m10_609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1079-1079"];
m10_612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1083-1083"];
m10_613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1084-1084"];
m10_614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1085-1085"];
m10_616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1087-1087"];
m10_617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1074-1074"];
m10_633 [cluster="Unk.AreEquivalent", file="JsonTextReaderTest.cs", label="Entry Unk.AreEquivalent", span=""];
m10_635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="1113-1113"];
m10_637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="1116-1116"];
m10_638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1117-1117"];
m10_639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1118-1118"];
m10_641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1120-1120"];
m10_642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1121-1121"];
m10_643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1122-1122"];
m10_644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1123-1123"];
m10_645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="CollectionAssert.AreEquivalent(helloWorldData, data)", span="1124-1124"];
m10_647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1126-1126"];
m10_594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1059-1059"];
m10_595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(133, reader.LineNumber)", span="1060-1060"];
m10_601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1069-1069"];
m10_602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(151, reader.LineNumber)", span="1070-1070"];
m10_611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1082-1082"];
m10_592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1056-1056"];
m10_634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1111-1111"];
m10_593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(115, reader.LineNumber)", span="1057-1057"];
m10_596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''name2'', reader.Value)", span="1061-1061"];
m10_598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(139, reader.LineNumber)", span="1064-1064"];
m10_600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(145, reader.LineNumber)", span="1067-1067"];
m10_603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="983-983"];
m10_604 [cluster="System.IO.StringReader.ReadLine()", file="JsonTextReaderTest.cs", label="Entry System.IO.StringReader.ReadLine()", span="0-0"];
m10_605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="1074-1074"];
m10_606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="1076-1076"];
m10_610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''hi\r\nbye'', reader.Value)", span="1080-1081"];
m10_615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1086-1086"];
m10_636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="1114-1114"];
m10_640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1119-1119"];
m10_646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="1125-1125"];
m10_648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1127-1127"];
m10_649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1129-1129"];
m10_650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="1111-1111"];
m10_19 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="69-69"];
m10_680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1178-1178"];
m10_1170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1885-1885"];
m10_1172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1889-1889"];
m10_1173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1891-1891"];
m10_1175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1894-1894"];
m10_1174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1892-1892"];
m10_1176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1895-1895"];
m10_1177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Could not convert string to DateTimeOffset: blablahbla. Path 'Offset', line 1, position 22.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="1897-1899"];
m10_1171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''blablahbla''''}''", span="1887-1887"];
m10_1178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadString()", span="1885-1885"];
m10_1069 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1729-1729"];
m10_1070 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1731-1731"];
m10_1071 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading decimal. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDecimal(); })", span="1733-1735"];
m10_1072 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalBadContent()", span="1729-1729"];
m10_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="329-329"];
m10_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="112-112"];
m10_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="long total = -j + i", span="823-823"];
m10_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 11.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="824-830"];
m10_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="j++", span="821-821"];
m10_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow_Negative()", span="812-812"];
m10_464 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="826-830"];
m10_353 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="onDeserializing != null", span="798-798"];
m10_354 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="contract.OnDeserializingCallbacks.AddRange(onDeserializing)", span="800-800"];
m10_355 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="onDeserialized != null", span="803-803"];
m10_356 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="contract.OnDeserializedCallbacks.AddRange(onDeserialized)", span="805-805"];
m10_831 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m10_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="444-444"];
m10_22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonTextReaderTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="bool ignoreSerializableAttribute", span="203-203"];
m10_26 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="MemberSerialization memberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType, ignoreSerializableAttribute)", span="210-210"];
m10_28 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="215-215"];
m10_32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="231-231"];
m10_36 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="serializableMembers.Add(member)", span="244-244"];
m10_40 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="serializableMembers.Add(member)", span="258-258"];
m10_44 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="serializableMembers.Add(member)", span="281-281"];
m10_27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="IEnumerable<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.Static)\r\n                .Where(m => !ReflectionUtils.IsIndexedProperty(m))", span="212-213"];
m10_29 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="memberSerialization != MemberSerialization.Fields", span="217-217"];
m10_30 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n                    .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="224-225"];
m10_31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label=allMembers, span="228-228"];
m10_33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="defaultMembers.Contains(member)", span="233-233"];
m10_34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="serializableMembers.Add(member)", span="236-236"];
m10_35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="242-242"];
m10_37 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="JsonTypeReflector.GetAttribute<JsonRequiredAttribute>(member) != null", span="246-246"];
m10_38 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="serializableMembers.Add(member)", span="248-248"];
m10_39 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="memberSerialization == MemberSerialization.Fields && member.MemberType() == MemberTypes.Field", span="256-256"];
m10_41 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label=allMembers, span="276-276"];
m10_42 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="FieldInfo field = member as FieldInfo", span="278-278"];
m10_43 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="field != null && !field.IsStatic", span="279-279"];
m10_45 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="return serializableMembers;", span="286-286"];
m10_23 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="201-201"];
m10_25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="ignoreSerializableAttribute = true", span="207-207"];
m10_46 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="201-201"];
m10_116 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="334-334"];
m10_484 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="containerAttribute is JsonArrayAttribute", span="1130-1130"];
m10_486 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="containerAttribute is JsonDictionaryAttribute", span="1135-1135"];
m10_492 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="typeof(IEnumerable).IsAssignableFrom(t)", span="1150-1150"];
m10_487 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="return CreateDictionaryContract(objectType);", span="1137-1137"];
m10_493 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="return CreateArrayContract(objectType);", span="1152-1152"];
m10_488 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="1140-1140"];
m10_494 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="CanConvertToString(t)", span="1155-1155"];
m10_485 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="return CreateArrayContract(objectType);", span="1132-1132"];
m10_491 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="return CreateDictionaryContract(objectType);", span="1147-1147"];
m10_489 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="return CreateLinqContract(objectType);", span="1142-1142"];
m10_495 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="return CreateStringContract(objectType);", span="1157-1157"];
m10_490 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="CollectionUtils.IsDictionaryType(t)", span="1145-1145"];
m10_496 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="return CreateObjectContract(objectType);", span="1182-1182"];
m10_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[2][0]'', reader.Path)", span="586-586"];
m10_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="719-719"];
m10_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="915-915"];
m10_513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="919-919"];
m10_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u123''))", span="921-921"];
m10_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unicode character. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="923-925"];
m10_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="919-919"];
m10_517 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="925-925"];
m10_518 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="925-925"];
m10_519 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="925-925"];
m10_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="929-929"];
m10_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="931-931"];
m10_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unterminated string. Expected delimiter: '. Path '', line 1, position 3.'',\r\n                () => { reader.Read(); })", span="933-935"];
m10_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="929-929"];
m10_524 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="935-935"];
m10_525 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="935-935"];
m10_526 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="935-935"];
m10_512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="910-910"];
m10_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="939-939"];
m10_528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="941-941"];
m10_481 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(t)", span="1123-1123"];
m10_1051 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1699-1699"];
m10_1052 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1701-1701"];
m10_1054 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1704-1704"];
m10_1053 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsBytes())", span="1703-1703"];
m10_1055 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContent()", span="1699-1699"];
m10_838 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m10_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", span="355-355"];
m10_1388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2243-2243"];
m10_1390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2246-2246"];
m10_1391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2248-2248"];
m10_1393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2251-2251"];
m10_1395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2254-2254"];
m10_1397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2257-2257"];
m10_1399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2260-2260"];
m10_1401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2263-2263"];
m10_1403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2266-2266"];
m10_1392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2249-2249"];
m10_1394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2252-2252"];
m10_1396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2255-2255"];
m10_1398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2258-2258"];
m10_1400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2261-2261"];
m10_1402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Undefined, reader.TokenType)", span="2264-2264"];
m10_1404 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2267-2267"];
m10_1389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="string json = ''[,,, \n\r\n \0   \r  , ,    ]''", span="2245-2245"];
m10_1405 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseArrayWithMissingValues()", span="2243-2243"];
m10_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing unquoted property name. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="977-979"];
m10_1226 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m10_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="975-975"];
m10_679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1203-1203"];
m10_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="490-490"];
m10_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="491-491"];
m10_227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(12, jsonReader.LinePosition)", span="492-492"];
m10_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="494-494"];
m10_21 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="69-69"];
m10_1111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1792-1792"];
m10_1113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1796-1796"];
m10_1114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1801-1801"];
m10_1116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1804-1804"];
m10_1119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1808-1808"];
m10_1122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1812-1812"];
m10_1124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1815-1815"];
m10_1115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1802-1802"];
m10_1117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1805-1805"];
m10_1118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="1806-1806"];
m10_1120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1809-1809"];
m10_1121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="1810-1810"];
m10_1123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1813-1813"];
m10_1112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="1794-1794"];
m10_1125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="1792-1792"];
m10_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="348-348"];
m10_829 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTextReaderTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m10_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="363-363"];
m10_1260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2020-2020"];
m10_1262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2024-2024"];
m10_1263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2026-2026"];
m10_1265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2029-2029"];
m10_1264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2027-2027"];
m10_1266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2030-2030"];
m10_1268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2033-2033"];
m10_1269 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2034-2034"];
m10_1270 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1m, reader.Value)", span="2035-2035"];
m10_1261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="string json = @''{''''Name'''':1}''", span="2022-2022"];
m10_1267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2032-2032"];
m10_1271 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalInt()", span="2020-2020"];
m10_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, jsonReader.TokenType)", span="478-478"];
m10_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndObject)", span="640-640"];
m10_890 [cluster="System.Convert.ToInt32(char)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m10_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SurrogatePairReplacement()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ABC \b\ufffd'', ReadString(''ABC \\b\\ud800''))", span="262-262"];
m10_708 [cluster="int.ToString()", file="JsonTextReaderTest.cs", label=setExtensionDataDictionaryValue, span=""];
m10_1508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2424-2424"];
m10_1510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2427-2427"];
m10_1511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2429-2429"];
m10_1513 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2432-2432"];
m10_1515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2435-2435"];
m10_1517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2438-2438"];
m10_1519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2441-2441"];
m10_1521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2444-2444"];
m10_1523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2447-2447"];
m10_1525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2450-2450"];
m10_1527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2453-2453"];
m10_1529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2456-2456"];
m10_1512 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2430-2430"];
m10_1514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2433-2433"];
m10_1516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2436-2436"];
m10_1518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2439-2439"];
m10_1520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2442-2442"];
m10_1522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2445-2445"];
m10_1524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2448-2448"];
m10_1526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2451-2451"];
m10_1528 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2454-2454"];
m10_1509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="string json = ''\x00a0{\x00a0'h\x00a0i\x00a0'\x00a0:\x00a0[\x00a0true\x00a0,\x00a0new\x00a0Date\x00a0(\x00a0)\x00a0]\x00a0/*\x00a0comment\x00a0*/\x00a0}\x00a0''", span="2426-2426"];
m10_1530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseContentDelimitedByNonStandardWhitespace()", span="2424-2424"];
m10_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="269-269"];
m10_552 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetNameTable()", span="1318-1318"];
m10_553 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="1357-1357"];
m10_556 [cluster="Unk.ToList", file="JsonTextReaderTest.cs", label="Entry Unk.ToList", span=""];
m10_862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1421-1421"];
m10_865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1426-1426"];
m10_866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1428-1428"];
m10_868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1431-1431"];
m10_872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1436-1436"];
m10_874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="1439-1439"];
m10_867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1429-1429"];
m10_869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="1432-1432"];
m10_870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="1433-1433"];
m10_871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="1434-1434"];
m10_873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1437-1437"];
m10_875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1440-1440"];
m10_864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="1424-1424"];
m10_863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="int length = 20000", span="1423-1423"];
m10_876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="1421-1421"];
m10_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="576-576"];
m10_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="588-588"];
m10_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndConstructor)", span="589-589"];
m10_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.Value)", span="590-590"];
m10_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[2]'', reader.Path)", span="592-592"];
m10_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="596-596"];
m10_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array'', reader.Path)", span="597-597"];
m10_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="599-599"];
m10_307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="600-600"];
m10_308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="601-601"];
m10_309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="602-602"];
m10_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="604-604"];
m10_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="605-605"];
m10_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="606-606"];
m10_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject'', reader.Path)", span="607-607"];
m10_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="609-609"];
m10_315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="610-610"];
m10_316 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="611-611"];
m10_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="594-594"];
m10_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.EndArray)", span="595-595"];
m10_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''subobject.prop'', reader.Path)", span="612-612"];
m10_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="591-591"];
m10_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="614-614"];
m10_975 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="317-317"];
m10_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="int j = 1", span="798-798"];
m10_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", span="265-265"];
m10_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="537-537"];
m10_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="547-547"];
m10_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.StartObject)", span="538-538"];
m10_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="539-539"];
m10_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual('''', reader.Path)", span="540-540"];
m10_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="reader.Read()", span="542-542"];
m10_267 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="551-551"];
m10_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.PropertyName)", span="543-543"];
m10_266 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.QuoteChar, '\'')", span="550-550"];
m10_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="544-544"];
m10_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="545-545"];
m10_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.TokenType, JsonToken.String)", span="548-548"];
m10_265 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(reader.Value, @''Purple'')", span="549-549"];
m10_268 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''value'', reader.Path)", span="552-552"];
m10_1964 [cluster="System.Exception.Exception(string)", file="JsonTextReaderTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m10_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="reader.Read()", span="841-841"];
m10_1460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2352-2352"];
m10_1462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2355-2355"];
m10_1463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2357-2357"];
m10_1464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2358-2358"];
m10_1465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2359-2359"];
m10_1466 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2360-2360"];
m10_1461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="string json = ''{hi:1, ''", span="2354-2354"];
m10_1467 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseObjectWithNoEnd()", span="2352-2352"];
m10_1298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2077-2077"];
m10_1299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nullz''))", span="2079-2079"];
m10_1300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2081-2083"];
m10_1301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithNoTrailingSeparator()", span="2077-2077"];
m10_545 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="property != null", span="1302-1302"];
m10_546 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label=nameTable, span="1305-1305"];
m10_547 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="property.PropertyName = nameTable.Add(property.PropertyName)", span="1307-1307"];
m10_549 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="IList<JsonProperty> orderedProperties = properties.OrderBy(p => p.Order ?? -1).ToList()", span="1314-1314"];
m10_548 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="properties.AddProperty(property)", span="1310-1310"];
m10_550 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="return orderedProperties;", span="1315-1315"];
m10_114 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonTextReaderTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m10_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="283-283"];
m10_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader.Close()", span="284-284"];
m10_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(ms.CanRead)", span="285-285"];
m10_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="ms = new MemoryStream()", span="287-287"];
m10_1068 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="363-363"];
m10_1305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2087-2087"];
m10_1306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/* sdf''))", span="2089-2089"];
m10_1307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 6.'',\r\n                () => { reader.Read(); })", span="2091-2093"];
m10_1308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnclosedComment()", span="2087-2087"];
m10_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''t'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''TM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''JPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''n'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China Life Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''Nokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola Company'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''e'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="298-317"];
m10_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="456-456"];
m10_129 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="m.AddRange(baseType.GetProperties(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance | BindingFlags.DeclaredOnly))", span="402-402"];
m10_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), reader.ValueType)", span="842-842"];
m10_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="int j = 1", span="844-844"];
m10_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="j < 1000", span="844-844"];
m10_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="BigInteger total = i + j", span="846-846"];
m10_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt64Overflow()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)))", span="848-848"];
m10_1965 [cluster="System.IO.TextReader.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="Entry System.IO.TextReader.Read(char[], int, int)", span="0-0"];
m10_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''array[1]'', reader.Path)", span="574-574"];
m10_1291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2067-2067"];
m10_1292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nulz''))", span="2069-2069"];
m10_1293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2071-2073"];
m10_1294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithWrongCharacters()", span="2067-2067"];
m10_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_WhitespaceThenText()", file="JsonTextReaderTest.cs", label="string json = @'''hi' a''", span="429-429"];
m10_508 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonTextReaderTest.cs", label="return true;", span="1217-1217"];
m10_509 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonTextReaderTest.cs", label="return false;", span="1220-1220"];
m10_510 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="1205-1205"];
m10_167 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Type dictionaryType", span="457-457"];
m10_169 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Type keyType = dictionaryType.GetGenericArguments()[0]", span="460-460"];
m10_170 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Type valueType = dictionaryType.GetGenericArguments()[1]", span="461-461"];
m10_172 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="ReflectionUtils.IsGenericDefinition(t, typeof(IDictionary<,>))", span="466-466"];
m10_174 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="createdType = t", span="472-472"];
m10_176 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="extensionDataAttribute.ReadData", span="477-477"];
m10_178 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Func<object> createExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType)", span="482-482"];
m10_171 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Type createdType", span="463-463"];
m10_173 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="createdType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="468-468"];
m10_175 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Func<object, object> getExtensionDataDictionary = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(member)", span="475-475"];
m10_177 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Action<object, object> setExtensionDataDictionary = (ReflectionUtils.CanSetMemberValue(member, true, false))\r\n                 ? JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(member)\r\n                 : null", span="479-481"];
m10_179 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="MethodInfo addMethod = t.GetMethod(''Add'', new[] { keyType, valueType })", span="483-483"];
m10_180 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="MethodCall<object, object> setExtensionDataDictionaryValue = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(addMethod)", span="484-484"];
m10_168 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="ReflectionUtils.ImplementsGenericDefinition(t, typeof(IDictionary<,>), out dictionaryType)", span="458-458"];
m10_181 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="ExtensionDataSetter extensionDataSetter = (o, key, value) =>\r\n                {\r\n                    object dictionary = getExtensionDataDictionary(o);\r\n                    if (dictionary == null)\r\n                    {\r\n                        if (setExtensionDataDictionary == null)\r\n                        {\r\n                            throw new JsonSerializationException(''Cannot set value onto extension data member '{0}'. The extension data collection is null and it cannot be set.''.FormatWith(CultureInfo.InvariantCulture, member.Name));\r\n                        }\r\n\r\n                        dictionary = createExtensionDataDictionary();\r\n                        setExtensionDataDictionary(o, dictionary);\r\n                    }\r\n\r\n                    setExtensionDataDictionaryValue(dictionary, key, value);\r\n                }", span="486-501"];
m10_250 [cluster="System.Collections.IEnumerator.MoveNext()", file="JsonTextReaderTest.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m10_253 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="557-557"];
m10_252 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="557-557"];
m10_254 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="557-557"];
m10_270 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", span="663-663"];
m10_271 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="JsonTextReaderTest.cs", label="ConstructorInfo[] constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="622-622"];
m10_272 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="JsonTextReaderTest.cs", label="constructors.Length == 1", span="623-623"];
m10_274 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="JsonTextReaderTest.cs", label="return null;", span="628-628"];
m10_275 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", span="608-608"];
m10_289 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonTextReaderTest.cs", label="name == null", span="667-667"];
m10_290 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonTextReaderTest.cs", label="return null;", span="669-669"];
m10_291 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonTextReaderTest.cs", label="JsonProperty property = properties.GetClosestMatchProperty(name)", span="672-672"];
m10_293 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonTextReaderTest.cs", label="return null;", span="676-676"];
m10_294 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonTextReaderTest.cs", label="return property;", span="679-679"];
m10_295 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", span="663-663"];
m10_319 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="38-38"];
m10_323 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="JsonTextReaderTest.cs", label="return JsonTypeReflector.GetJsonConverter(objectType);", span="731-731"];
m10_324 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="729-729"];
m10_325 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(object)", span="177-177"];
m10_327 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="JsonTextReaderTest.cs", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="736-736"];
m10_328 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="734-734"];
m10_329 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetCachedAttribute<JsonContainerAttribute>(contract.NonNullableUnderlyingType)", span="744-744"];
m10_331 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="contract.IsReference = containerAttribute._isReference", span="747-747"];
m10_332 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="contract.Converter = ResolveContractConverter(contract.NonNullableUnderlyingType)", span="761-761"];
m10_333 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.NonNullableUnderlyingType)", span="764-764"];
m10_335 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="769-769"];
m10_336 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType() &&\r\n                                                    ReflectionUtils.GetDefaultConstructor(contract.CreatedType) == null)", span="771-772"];
m10_337 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="ResolveCallbackMethods(contract, contract.NonNullableUnderlyingType)", span="775-775"];
m10_340 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227"];
m10_341 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="239-239"];
m10_343 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="List<SerializationCallback> onSerializing", span="780-780"];
m10_344 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="List<SerializationCallback> onSerialized", span="781-781"];
m10_345 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="List<SerializationCallback> onDeserializing", span="782-782"];
m10_273 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParameterizedConstructor(System.Type)", file="JsonTextReaderTest.cs", label="return constructors[0];", span="625-625"];
m10_292 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.MatchProperty(Newtonsoft.Json.Serialization.JsonPropertyCollection, string, System.Type)", file="JsonTextReaderTest.cs", label="property == null || property.PropertyType != type", span="674-674"];
m10_322 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="729-729"];
m10_326 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="734-734"];
m10_330 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="containerAttribute != null", span="745-745"];
m10_334 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="contract.IsInstantiable\r\n                && (ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true) || contract.CreatedType.IsValueType())", span="766-767"];
m10_338 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="742-742"];
m10_342 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="778-778"];
m10_251 [cluster="System.Type.GetConstructor(System.Type[])", file="JsonTextReaderTest.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m10_346 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="List<SerializationCallback> onDeserialized", span="783-783"];
m10_535 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="1270-1270"];
m10_538 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="List<MemberInfo> members = GetSerializableMembers(type)", span="1288-1288"];
m10_539 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="members == null", span="1289-1289"];
m10_536 [cluster="System.Type.IsGenericTypeDefinition()", file="JsonTextReaderTest.cs", label="Entry System.Type.IsGenericTypeDefinition()", span="162-162"];
m10_540 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="throw new JsonSerializationException(''Null collection of serializable members returned.'');", span="1291-1291"];
m10_195 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="435-440"];
m10_468 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonTextReaderTest.cs", label="InitializeContract(contract)", span="1041-1041"];
m10_470 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1038-1038"];
m10_478 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="IsJsonPrimitiveType(objectType)", span="1117-1117"];
m10_469 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonTextReaderTest.cs", label="return contract;", span="1043-1043"];
m10_479 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="return CreatePrimitiveContract(objectType);", span="1119-1119"];
m10_480 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="1122-1122"];
m10_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: Boolean. Path '', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="943-945"];
m10_532 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="945-945"];
m10_533 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="945-945"];
m10_534 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="383-383"];
m10_1272 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2039-2039"];
m10_1274 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2043-2043"];
m10_1275 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2045-2045"];
m10_1277 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2048-2048"];
m10_1276 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2046-2046"];
m10_1278 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2049-2049"];
m10_1279 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Input string '1.1' is not a valid integer. Path 'Name', line 1, position 12.'',\r\n                () => { reader.ReadAsInt32(); })", span="2051-2053"];
m10_1273 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="string json = @''{''''Name'''': 1.1}''", span="2041-2041"];
m10_1280 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsIntDecimal()", span="2039-2039"];
m10_482 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="containerAttribute is JsonObjectAttribute", span="1125-1125"];
m10_843 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="798-798"];
m10_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Cannot read NaN as a decimal.'',\r\n                () => reader.Read())", span="118-120"];
m10_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(@'''''''' + input + @''''''''))", span="267-267"];
m10_238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="505-505"];
m10_244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="513-513"];
m10_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="514-514"];
m10_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(30, jsonReader.LinePosition)", span="506-506"];
m10_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="508-508"];
m10_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="509-509"];
m10_243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, jsonReader.LinePosition)", span="511-511"];
m10_242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="510-510"];
m10_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="515-515"];
m10_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.LinePosition)", span="516-516"];
m10_1756 [cluster="System.Console.WriteLine(string)", file="JsonTextReaderTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m10_953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1555-1555"];
m10_955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1561-1561"];
m10_956 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1563-1563"];
m10_958 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1566-1566"];
m10_960 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1569-1569"];
m10_957 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1564-1564"];
m10_959 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1567-1567"];
m10_961 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="1570-1570"];
m10_962 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                @''Invalid character after parsing property name. Expected ':' but got: ''''. Path 'A', line 3, position 9.'',\r\n                () => { reader.Read(); })", span="1572-1574"];
m10_954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''''", span="1557-1559"];
m10_963 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="1555-1555"];
m10_1476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2377-2377"];
m10_1478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2380-2380"];
m10_1479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2382-2382"];
m10_1481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2385-2385"];
m10_1480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2383-2383"];
m10_1482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2386-2386"];
m10_1477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="string json = ''{}''", span="2379-2379"];
m10_1483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyObject()", span="2377-2377"];
m10_967 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1578-1578"];
m10_969 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="1581-1581"];
m10_968 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="1580-1580"];
m10_973 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Hello world.'', text)", span="1587-1587"];
m10_970 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1583-1583"];
m10_972 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="1586-1586"];
m10_971 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Assert.IsNotNull(data)", span="1584-1584"];
m10_974 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="1578-1578"];
m10_834 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m10_483 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="JsonTextReaderTest.cs", label="return CreateObjectContract(objectType);", span="1127-1127"];
m10_389 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="currentOnDeserializing = method", span="862-862"];
m10_889 [cluster="System.Convert.ToChar(string)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m10_1708 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2747-2747"];
m10_57 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="120-120"];
m10_61 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="128-128"];
m10_58 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="120-120"];
m10_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", span="124-124"];
m10_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="130-130"];
m10_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnescapeDoubleQuotes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="131-131"];
m10_117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="278-278"];
m10_118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="MemoryStream ms = new MemoryStream()", span="280-280"];
m10_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="292-292"];
m10_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Console.WriteLine(jsonReader.Value)", span="323-323"];
m10_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="278-278"];
m10_130 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1560-1560"];
m10_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="296-296"];
m10_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="296-296"];
m10_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", span="329-329"];
m10_142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="333-333"];
m10_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="335-335"];
m10_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="336-336"];
m10_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''hi'', reader.Value)", span="345-345"];
m10_138 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m10_139 [cluster="System.Console.WriteLine(object)", file="JsonTextReaderTest.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m10_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="string json = @''{''''DefaultConverter'''':new Date(0, ''''hi''''),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}''", span="331-331"];
m10_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="337-337"];
m10_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="338-338"];
m10_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="339-339"];
m10_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="341-341"];
m10_149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0L, reader.Value)", span="342-342"];
m10_150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="344-344"];
m10_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="347-347"];
m10_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="468-468"];
m10_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="464-464"];
m10_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="483-483"];
m10_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="467-467"];
m10_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="471-471"];
m10_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="469-469"];
m10_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="472-472"];
m10_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="486-486"];
m10_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="463-463"];
m10_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="466-466"];
m10_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="473-473"];
m10_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(15, jsonReader.LinePosition)", span="481-481"];
m10_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="484-484"];
m10_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="485-485"];
m10_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(10, jsonReader.LinePosition)", span="487-487"];
m10_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="long total = j + i", span="800-800"];
m10_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="j < 1000", span="798-798"];
m10_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadInt32Overflow()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                    ''JSON integer '' + total + '' is too large or small for an Int32. Path '', line 1, position 10.'',\r\n                    () =>\r\n                    {\r\n                        reader = new JsonTextReader(new StringReader(total.ToString(CultureInfo.InvariantCulture)));\r\n                        reader.ReadAsInt32();\r\n                    })", span="801-807"];
m10_557 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="979-979"];
m10_558 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="979-979"];
m10_559 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="979-979"];
m10_20 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", color=green, community=0, file="JsonTextReaderTest.cs", label="1: Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="1115-1115"];
m10_351 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="onSerialized != null", span="793-793"];
m10_448 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="overrideConstructor != null", span="994-994"];
m10_465 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="42-42"];
m10_165 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="return;", span="452-452"];
m10_183 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="extensionDataAttribute.WriteData", span="506-506"];
m10_752 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1272-1272"];
m10_787 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1310-1310"];
m10_790 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1321-1321"];
m10_965 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1574-1574"];
m10_1044 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="1686-1686"];
m10_1289 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2063-2063"];
m10_1296 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2073-2073"];
m10_1303 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2083-2083"];
m10_1310 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2093-2093"];
m10_1317 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2103-2103"];
m10_1450 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2337-2337"];
m10_1458 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2348-2348"];
m10_1489 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2396-2396"];
m10_1506 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2420-2420"];
m10_1670 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2685-2685"];
m10_1765 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2832-2832"];
m10_1797 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2850-2850"];
m10_1800 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2870-2870"];
m10_1922 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="3030-3030"];
m10_1925 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="3033-3033"];
m10_1928 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="3044-3044"];
m10_1931 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="3055-3055"];
m10_1934 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="3058-3058"];
m10_1937 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="jsonTextReader.Read()", span="3061-3061"];
m10_350 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="contract.OnSerializingCallbacks.AddRange(onSerializing)", span="790-790"];
m10_352 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="contract.OnSerializedCallbacks.AddRange(onSerialized)", span="795-795"];
m10_358 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="contract.OnErrorCallbacks.AddRange(onError)", span="810-810"];
m10_447 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="ConstructorInfo overrideConstructor = GetAttributeConstructor(contract.NonNullableUnderlyingType)", span="992-992"];
m10_449 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="ParameterInfo[] parameters = overrideConstructor.GetParameters()", span="996-996"];
m10_466 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="1038-1038"];
m10_543 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label=members, span="1298-1298"];
m10_711 [cluster="lambda expression", file="JsonTextReaderTest.cs", label=namingStrategy, span=""];
m10_714 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1235-1235"];
m10_717 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1238-1238"];
m10_720 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1241-1241"];
m10_723 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="1247-1247"];
m10_749 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="1268-1268"];
m10_755 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="1281-1281"];
m10_1061 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1714-1714"];
m10_1074 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="1735-1735"];
m10_1081 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1745-1745"];
m10_1088 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1756-1756"];
m10_1102 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1778-1778"];
m10_1109 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="1788-1788"];
m10_1180 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1899-1899"];
m10_1282 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.ReadAsInt32()", span="2053-2053"];
m10_1709 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="reader.Read()", span="2747-2747"];
m10_56 [cluster="System.Reflection.MemberInfo.MemberType()", file="JsonTextReaderTest.cs", label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107"];
m10_164 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="extensionDataAttribute == null", span="450-450"];
m10_166 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Type t = ReflectionUtils.GetMemberUnderlyingType(member)", span="455-455"];
m10_182 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="contract.ExtensionDataSetter = extensionDataSetter", span="503-503"];
m10_184 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Type enumerableWrapper = typeof(EnumerableDictionaryWrapper<,>).MakeGenericType(keyType, valueType)", span="508-508"];
m10_751 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1272-1272"];
m10_753 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1272-1272"];
m10_786 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1310-1310"];
m10_788 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1310-1310"];
m10_789 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1321-1321"];
m10_791 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1321-1321"];
m10_964 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1574-1574"];
m10_966 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1574-1574"];
m10_1043 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1686-1686"];
m10_1045 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1686-1686"];
m10_1288 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2063-2063"];
m10_1290 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2063-2063"];
m10_1295 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2073-2073"];
m10_1297 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2073-2073"];
m10_1302 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2083-2083"];
m10_1304 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2083-2083"];
m10_1309 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2093-2093"];
m10_1311 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2093-2093"];
m10_1316 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2103-2103"];
m10_1318 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2103-2103"];
m10_1449 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2337-2337"];
m10_1451 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2337-2337"];
m10_1457 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2348-2348"];
m10_1459 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2348-2348"];
m10_1488 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2396-2396"];
m10_1490 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2396-2396"];
m10_1505 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2420-2420"];
m10_1507 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2420-2420"];
m10_1669 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2685-2685"];
m10_1671 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2685-2685"];
m10_1764 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2832-2832"];
m10_1766 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2832-2832"];
m10_1796 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2850-2850"];
m10_1798 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2850-2850"];
m10_1799 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2870-2870"];
m10_1801 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2870-2870"];
m10_1921 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3030-3030"];
m10_1923 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3030-3030"];
m10_1924 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3033-3033"];
m10_1926 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3033-3033"];
m10_1927 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3044-3044"];
m10_1929 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3044-3044"];
m10_1930 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3055-3055"];
m10_1932 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3055-3055"];
m10_1933 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3058-3058"];
m10_1935 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3058-3058"];
m10_1936 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="3061-3061"];
m10_1938 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="3061-3061"];
m10_357 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="onError != null", span="808-808"];
m10_531 [cluster="string.FormatWith(System.IFormatProvider, object, object, object)", file="JsonTextReaderTest.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object)", span="57-57"];
m10_542 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="1296-1296"];
m10_710 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", span=""];
m10_713 [cluster="lambda expression", file="JsonTextReaderTest.cs", label=specifiedPropertyGet, span=""];
m10_716 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1238-1238"];
m10_719 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1241-1241"];
m10_722 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1247-1247"];
m10_748 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1268-1268"];
m10_754 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1281-1281"];
m10_1060 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1714-1714"];
m10_1073 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1735-1735"];
m10_1080 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1745-1745"];
m10_1087 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1756-1756"];
m10_1101 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1778-1778"];
m10_1108 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1788-1788"];
m10_1179 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="1899-1899"];
m10_1281 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Entry lambda expression", span="2053-2053"];
m10_359 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="778-778"];
m10_450 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="Type expectedParameterType = (contract.CollectionItemType != null)\r\n                    ? typeof(IEnumerable<>).MakeGenericType(contract.CollectionItemType)\r\n                    : typeof(IEnumerable)", span="997-999"];
m10_467 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="JsonTextReaderTest.cs", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="1040-1040"];
m10_544 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="1300-1300"];
m10_712 [cluster="lambda expression", file="JsonTextReaderTest.cs", label=shouldSerializeCall, span=""];
m10_715 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1235-1235"];
m10_718 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1238-1238"];
m10_721 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1241-1241"];
m10_724 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1247-1247"];
m10_750 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1268-1268"];
m10_756 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1281-1281"];
m10_1062 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1714-1714"];
m10_1075 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1735-1735"];
m10_1082 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1745-1745"];
m10_1089 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1756-1756"];
m10_1103 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1778-1778"];
m10_1110 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1788-1788"];
m10_1181 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="1899-1899"];
m10_1283 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2053-2053"];
m10_1710 [cluster="lambda expression", file="JsonTextReaderTest.cs", label="Exit lambda expression", span="2747-2747"];
m10_1531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2460-2460"];
m10_1533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2471-2471"];
m10_1534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2473-2473"];
m10_1536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2476-2476"];
m10_1538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2479-2479"];
m10_1540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2482-2482"];
m10_1543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2486-2486"];
m10_1545 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2489-2489"];
m10_1548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2493-2493"];
m10_1550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2496-2496"];
m10_1552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2499-2499"];
m10_1555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2503-2503"];
m10_1557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2506-2506"];
m10_1561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2511-2511"];
m10_1563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2514-2514"];
m10_1565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2517-2517"];
m10_1567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2520-2520"];
m10_1535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2474-2474"];
m10_1537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2477-2477"];
m10_1539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2480-2480"];
m10_1541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2483-2483"];
m10_1542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2484-2484"];
m10_1544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2487-2487"];
m10_1546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2490-2490"];
m10_1547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2491-2491"];
m10_1549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2494-2494"];
m10_1551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2497-2497"];
m10_1553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2500-2500"];
m10_1554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2501-2501"];
m10_1556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2504-2504"];
m10_1558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2507-2507"];
m10_1559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2508-2508"];
m10_1560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2509-2509"];
m10_1562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2512-2512"];
m10_1564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2515-2515"];
m10_1566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2518-2518"];
m10_1568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2521-2521"];
m10_1532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="string json = @''/*comment*/{/*comment*/Name:/*comment*/true/*comment*/,/*comment*/\r\n        ''''ExpiryDate'''':/*comment*/new\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(/*comment*/null/*comment*/),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''':/*comment*/[/*comment*/\r\n          ''''Small''''/*comment*/]/*comment*/}/*comment*/''", span="2462-2469"];
m10_1569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadContentDelimitedByComments()", span="2460-2460"];
m10_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="113-113"];
m10_403 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullCharReading()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="721-721"];
m10_1126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1819-1819"];
m10_1128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1823-1823"];
m10_1129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1825-1825"];
m10_1131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1828-1828"];
m10_1133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1831-1831"];
m10_1136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1835-1835"];
m10_1130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1826-1826"];
m10_1132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1829-1829"];
m10_1134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="1832-1832"];
m10_1135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="1833-1833"];
m10_1137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1836-1836"];
m10_1127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="1821-1821"];
m10_1138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="1819-1819"];
m10_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="319-319"];
m10_1063 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1719-1719"];
m10_1064 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1721-1721"];
m10_1066 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1724-1724"];
m10_1065 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsDateTimeOffset())", span="1723-1723"];
m10_1067 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNoContent()", span="1719-1719"];
m10_102 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162"];
m10_103 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="742-742"];
m10_104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="1286-1286"];
m10_106 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetCachedAttribute<T>(object)", span="66-66"];
m10_1686 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2713-2713"];
m10_1688 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2717-2717"];
m10_1689 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2719-2719"];
m10_1691 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2722-2722"];
m10_1693 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2725-2725"];
m10_1695 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2728-2728"];
m10_1697 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2731-2731"];
m10_1699 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2734-2734"];
m10_1690 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2720-2720"];
m10_1692 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2723-2723"];
m10_1694 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2726-2726"];
m10_1696 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2729-2729"];
m10_1698 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2732-2732"];
m10_1700 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2735-2735"];
m10_1687 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="string json = @''[0,1,2 , 3]''", span="2715-2715"];
m10_1701 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseNumbers()", span="2713-2713"];
m10_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="939-939"];
m10_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", span="983-983"];
m10_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="string newLinesText = StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed + StringUtils.LineFeed + StringUtils.CarriageReturnLineFeed + '' '' + StringUtils.CarriageReturn + StringUtils.CarriageReturnLineFeed", span="985-985"];
m10_1570 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2525-2525"];
m10_1572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2548-2548"];
m10_1573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2550-2550"];
m10_1577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2555-2555"];
m10_1580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2559-2559"];
m10_1583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2563-2563"];
m10_1587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2568-2568"];
m10_1590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2572-2572"];
m10_1594 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2577-2577"];
m10_1598 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2582-2582"];
m10_1602 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2587-2587"];
m10_1606 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2592-2592"];
m10_1609 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2596-2596"];
m10_1613 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2601-2601"];
m10_1615 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2604-2604"];
m10_1618 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2608-2608"];
m10_1621 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2612-2612"];
m10_1624 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2616-2616"];
m10_1627 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2620-2620"];
m10_1629 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2623-2623"];
m10_1632 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2627-2627"];
m10_1634 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2630-2630"];
m10_1636 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2633-2633"];
m10_1638 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2636-2636"];
m10_1640 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2639-2639"];
m10_1642 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2642-2642"];
m10_1644 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2645-2645"];
m10_1646 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2648-2648"];
m10_1648 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2651-2651"];
m10_1651 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2655-2655"];
m10_1654 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2659-2659"];
m10_1574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2551-2551"];
m10_1575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment*//*hi*/'', reader.Value)", span="2552-2552"];
m10_1576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2553-2553"];
m10_1578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.LineNumber)", span="2556-2556"];
m10_1579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2557-2557"];
m10_1581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2560-2560"];
m10_1582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2561-2561"];
m10_1584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2564-2564"];
m10_1585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Name'', reader.Value)", span="2565-2565"];
m10_1586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.LineNumber)", span="2566-2566"];
m10_1588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2569-2569"];
m10_1589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2570-2570"];
m10_1591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="2573-2573"];
m10_1592 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(true, reader.Value)", span="2574-2574"];
m10_1593 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, reader.LineNumber)", span="2575-2575"];
m10_1595 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2578-2578"];
m10_1596 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment after true'', reader.Value)", span="2579-2579"];
m10_1597 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, reader.LineNumber)", span="2580-2580"];
m10_1599 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2583-2583"];
m10_1600 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment after comma'', reader.Value)", span="2584-2584"];
m10_1601 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="2585-2585"];
m10_1603 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2588-2588"];
m10_1604 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''ExpiryDate'', reader.Value)", span="2589-2589"];
m10_1605 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(8, reader.LineNumber)", span="2590-2590"];
m10_1607 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2593-2593"];
m10_1608 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9, reader.LineNumber)", span="2594-2594"];
m10_1610 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2597-2597"];
m10_1611 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(13, reader.LineNumber)", span="2598-2598"];
m10_1612 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2599-2599"];
m10_1614 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2602-2602"];
m10_1616 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2605-2605"];
m10_1617 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(14, reader.LineNumber)", span="2606-2606"];
m10_1619 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2609-2609"];
m10_1620 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(15, reader.LineNumber)", span="2610-2610"];
m10_1622 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2613-2613"];
m10_1623 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(15, reader.LineNumber)", span="2614-2614"];
m10_1625 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2617-2617"];
m10_1626 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Price'', reader.Value)", span="2618-2618"];
m10_1628 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2621-2621"];
m10_1630 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2624-2624"];
m10_1631 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Sizes'', reader.Value)", span="2625-2625"];
m10_1633 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2628-2628"];
m10_1635 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2631-2631"];
m10_1637 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2634-2634"];
m10_1639 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2637-2637"];
m10_1641 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2640-2640"];
m10_1643 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2643-2643"];
m10_1645 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2646-2646"];
m10_1647 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2649-2649"];
m10_1649 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2652-2652"];
m10_1650 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment '', reader.Value)", span="2653-2653"];
m10_1652 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2656-2656"];
m10_1653 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment 1 '', reader.Value)", span="2657-2657"];
m10_1571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment''  + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                          @''Date\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="2527-2546"];
m10_1655 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SingleLineComments()", span="2525-2525"];
m10_1076 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1739-1739"];
m10_1077 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1741-1741"];
m10_1078 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading bytes. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsBytes(); })", span="1743-1745"];
m10_1079 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesBadContent()", span="1739-1739"];
m10_541 [cluster="System.Convert.ToBase64String(byte[])", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m10_551 [cluster="Unk.IsNull", file="JsonTextReaderTest.cs", label="Entry Unk.IsNull", span=""];
m10_835 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="819-819"];
m10_844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1388-1388"];
m10_847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="1398-1398"];
m10_846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="1396-1396"];
m10_849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="1401-1401"];
m10_851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1404-1404"];
m10_852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="1405-1405"];
m10_854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1408-1408"];
m10_855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="1409-1409"];
m10_857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="1412-1412"];
m10_858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="1413-1413"];
m10_860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="1416-1416"];
m10_848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1400-1400"];
m10_850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1403-1403"];
m10_853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1407-1407"];
m10_856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1411-1411"];
m10_859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1415-1415"];
m10_845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="1390-1394"];
m10_861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="1388-1388"];
m10_1210 [cluster="System.TimeSpan.FromMinutes(double)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m10_1243 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextReaderTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m10_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="115-115"];
m10_1104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1782-1782"];
m10_1105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1.0]''))", span="1784-1784"];
m10_1106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected token when reading bytes: Float. Path '[0]', line 1, position 4.'',\r\n                () => { reader.ReadAsBytes(); })", span="1786-1788"];
m10_1107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesArrayWithBadContent()", span="1782-1782"];
m10_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatParseHandling_NaN()", span="108-108"];
m10_1358 [cluster="System.DateTime.DateTime(long)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m10_444 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="987-987"];
m10_445 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="989-989"];
m10_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="489-489"];
m10_154 [cluster="Unk.IsDefined", file="JsonTextReaderTest.cs", label="Entry Unk.IsDefined", span=""];
m10_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(97, reader.LineNumber)", span="1051-1051"];
m10_671 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonTextReaderTest.cs", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="1576-1576"];
m10_675 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonTextReaderTest.cs", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="1586-1586"];
m10_676 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", span="1178-1178"];
m10_677 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  true,\r\n  {\r\n    ''''integer'''': 99,\r\n    ''''string'''': ''''how now brown cow?'''',\r\n    ''''array'''': [\r\n      0,\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      {\r\n        ''''decimal'''': 990.00990099\r\n      },\r\n      5\r\n    ]\r\n  },\r\n  ''''This is a string.'''',\r\n  null,\r\n  null\r\n]''", span="1180-1200"];
m10_672 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonTextReaderTest.cs", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="1579-1579"];
m10_674 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonTextReaderTest.cs", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="1584-1584"];
m10_673 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo, bool)", file="JsonTextReaderTest.cs", label="return;", span="1581-1581"];
m10_678 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadRandomJson()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1202-1202"];
m10_393 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="currentOnDeserialized = method", span="868-868"];
m10_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader.Close()", span="291-291"];
m10_996 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1618-1618"];
m10_998 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1621-1621"];
m10_997 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1620-1620"];
m10_999 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1623-1623"];
m10_1001 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1626-1626"];
m10_1005 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1631-1631"];
m10_1009 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="1636-1636"];
m10_1013 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1641-1641"];
m10_1015 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1644-1644"];
m10_1000 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1624-1624"];
m10_1002 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1627-1627"];
m10_1003 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1628-1628"];
m10_1004 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1629-1629"];
m10_1006 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1632-1632"];
m10_1007 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1633-1633"];
m10_1008 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1634-1634"];
m10_1010 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1637-1637"];
m10_1011 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(long), jsonReader.ValueType)", span="1638-1638"];
m10_1012 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)250, (long)jsonReader.Value)", span="1639-1639"];
m10_1014 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1642-1642"];
m10_1016 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt64()", span="1618-1618"];
m10_1046 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1690-1690"];
m10_1047 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''''))", span="1692-1692"];
m10_1049 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.None, reader.TokenType)", span="1695-1695"];
m10_1048 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Assert.IsNull(reader.ReadAsDecimal())", span="1694-1694"];
m10_1050 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalNoContent()", span="1690-1690"];
m10_47 [cluster="System.Convert.ToDecimal(double)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToDecimal(double)", span="0-0"];
m10_48 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="645-645"];
m10_53 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="JsonTextReaderTest.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m10_394 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), currentOnError, ref prevAttributeType)", span="870-870"];
m10_396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="onError.Add(JsonContract.CreateSerializationErrorCallback(method))", span="873-873"];
m10_397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="currentOnError = method", span="874-874"];
m10_401 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="JsonTextReaderTest.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m10_405 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="JsonTextReaderTest.cs", label="return false;", span="896-896"];
m10_409 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonTextReaderTest.cs", label="List<Type> ret = new List<Type>()", span="919-919"];
m10_411 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonTextReaderTest.cs", label="current != null && current != typeof(object)", span="922-922"];
m10_413 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonTextReaderTest.cs", label="current = current.BaseType()", span="925-925"];
m10_415 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonTextReaderTest.cs", label="return ret;", span="930-930"];
m10_417 [cluster="System.Type.BaseType()", file="JsonTextReaderTest.cs", label="Entry System.Type.BaseType()", span="171-171"];
m10_398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="814-814"];
m10_400 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="880-880"];
m10_406 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSkipDeserialized(System.Type)", span="880-880"];
m10_410 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonTextReaderTest.cs", label="Type current = type", span="921-921"];
m10_412 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonTextReaderTest.cs", label="ret.Add(current)", span="924-924"];
m10_414 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonTextReaderTest.cs", label="ret.Reverse()", span="929-929"];
m10_416 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="917-917"];
m10_395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="onError = onError ?? new List<SerializationErrorCallback>()", span="872-872"];
m10_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadString(string)", file="JsonTextReaderTest.cs", label="string s = (string)reader.Value", span="272-272"];
m10_1312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2097-2097"];
m10_1313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''/sdf''))", span="2099-2099"];
m10_1314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing comment. Expected: *, got s. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2101-2103"];
m10_1315 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.BadCommentStart()", span="2097-2097"];
m10_1333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2129-2129"];
m10_1335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2133-2133"];
m10_1337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2136-2136"];
m10_1339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2139-2139"];
m10_1345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2147-2147"];
m10_1338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2137-2137"];
m10_1340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2140-2140"];
m10_1342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2143-2143"];
m10_1343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2144-2144"];
m10_1346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2148-2148"];
m10_1344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9.99m, d)", span="2145-2145"];
m10_1334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", span="2131-2131"];
m10_1336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", span="2134-2134"];
m10_1341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2142-2142"];
m10_1347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", span="2129-2129"];
m10_1083 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1750-1750"];
m10_1084 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''new Date()''))", span="1752-1752"];
m10_1085 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error reading date. Unexpected token: StartConstructor. Path '', line 1, position 9.'',\r\n                () => { reader.ReadAsDateTimeOffset(); })", span="1754-1756"];
m10_1086 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetBadContent()", span="1750-1750"];
m10_107 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetContainerNamingStrategy(Newtonsoft.Json.JsonContainerAttribute)", span="211-211"];
m10_112 [cluster="System.Type.IsValueType()", file="JsonTextReaderTest.cs", label="Entry System.Type.IsValueType()", span="535-535"];
m10_569 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, reader.LineNumber)", span="1024-1024"];
m10_571 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(31, reader.LineNumber)", span="1027-1027"];
m10_572 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(newLinesText + ''name1'' + newLinesText, reader.Value)", span="1028-1028"];
m10_573 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1030-1030"];
m10_574 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(37, reader.LineNumber)", span="1031-1031"];
m10_575 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1033-1033"];
m10_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="1035-1035"];
m10_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="1036-1036"];
m10_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1038-1038"];
m10_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(61, reader.LineNumber)", span="1039-1039"];
m10_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(73, reader.LineNumber)", span="1043-1043"];
m10_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.Value)", span="1044-1044"];
m10_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, reader.Value)", span="1040-1040"];
m10_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1042-1042"];
m10_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1046-1046"];
m10_576 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(55, reader.LineNumber)", span="1034-1034"];
m10_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(91, reader.LineNumber)", span="1047-1047"];
m10_877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1444-1444"];
m10_879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1448-1448"];
m10_880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1453-1453"];
m10_882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1456-1456"];
m10_884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1459-1459"];
m10_886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1462-1462"];
m10_881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="1454-1454"];
m10_883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''<'', reader.Value)", span="1457-1457"];
m10_885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="1460-1460"];
m10_887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="1463-1463"];
m10_878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="1446-1446"];
m10_888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="1444-1444"];
m10_839 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772"];
m10_1139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1841-1841"];
m10_1141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1845-1845"];
m10_1142 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1847-1847"];
m10_1144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1850-1850"];
m10_1150 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1858-1858"];
m10_1143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1848-1848"];
m10_1145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1851-1851"];
m10_1147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1854-1854"];
m10_1148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1855-1855"];
m10_1149 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1856-1856"];
m10_1151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1859-1859"];
m10_1140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="1843-1843"];
m10_1146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1853-1853"];
m10_1152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="1841-1841"];
m10_1679 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2701-2701"];
m10_1681 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2705-2705"];
m10_1683 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2708-2708"];
m10_1684 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(32m, reader.Value)", span="2709-2709"];
m10_1680 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="string json = @''0x20''", span="2703-2703"];
m10_1682 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2707-2707"];
m10_1685 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseHexNumber()", span="2701-2701"];
m10_452 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="contract.HasParameterizedCreator = false", span="1003-1003"];
m10_454 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="contract.HasParameterizedCreator = true", span="1007-1007"];
m10_455 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="throw new JsonException(''Constructor for '{0}' must have no parameters or a single parameter that implements '{1}'.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType, expectedParameterType));", span="1011-1011"];
m10_457 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="return contract;", span="1017-1017"];
m10_456 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="contract.OverrideCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(overrideConstructor)", span="1014-1014"];
m10_453 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="parameters.Length == 1 && expectedParameterType.IsAssignableFrom(parameters[0].ParameterType)", span="1005-1005"];
m10_458 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="987-987"];
m10_459 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="117-117"];
m10_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="477-477"];
m10_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="290-290"];
m10_1504 [cluster="Unk.>", file="JsonTextReaderTest.cs", label="Entry Unk.>", span=""];
m10_1468 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2364-2364"];
m10_1470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2367-2367"];
m10_1471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2369-2369"];
m10_1473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2372-2372"];
m10_1472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2370-2370"];
m10_1474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2373-2373"];
m10_1469 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="string json = ''[]''", span="2366-2366"];
m10_1475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyArray()", span="2364-2364"];
m10_1406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2271-2271"];
m10_1407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''1 2 ''''name'''' [][]null {}{} 1.1''))", span="2273-2273"];
m10_1409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2276-2276"];
m10_1411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2279-2279"];
m10_1413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2282-2282"];
m10_1415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2285-2285"];
m10_1417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2288-2288"];
m10_1419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2291-2291"];
m10_1421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2294-2294"];
m10_1423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2297-2297"];
m10_1425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2300-2300"];
m10_1427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2303-2303"];
m10_1429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2306-2306"];
m10_1431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2309-2309"];
m10_1433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2312-2312"];
m10_1435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2315-2315"];
m10_1410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2277-2277"];
m10_1412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="2280-2280"];
m10_1414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="2283-2283"];
m10_1416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2286-2286"];
m10_1418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2289-2289"];
m10_1420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="2292-2292"];
m10_1422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="2295-2295"];
m10_1424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="2298-2298"];
m10_1426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2301-2301"];
m10_1428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2304-2304"];
m10_1430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2307-2307"];
m10_1432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2310-2310"];
m10_1434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2313-2313"];
m10_1408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="reader.SupportMultipleContent = true", span="2274-2274"];
m10_1436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.SupportMultipleContent()", span="2271-2271"];
m10_836 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
m10_17 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextReaderTest.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_1956 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="537-537"];
m10_360 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", span="814-814"];
m10_362 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="onSerialized = null", span="817-817"];
m10_364 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="onDeserialized = null", span="819-819"];
m10_361 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="onSerializing = null", span="816-816"];
m10_363 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="onDeserializing = null", span="818-818"];
m10_365 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="onError = null", span="820-820"];
m10_1056 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1708-1708"];
m10_1057 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{''))", span="1710-1710"];
m10_1058 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '', line 1, position 1.'',\r\n                () => { reader.ReadAsBytes(); })", span="1712-1714"];
m10_1059 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesNoContentWrappedObject()", span="1708-1708"];
m10_976 [cluster="Unk.IsNotNull", file="JsonTextReaderTest.cs", label="Entry Unk.IsNotNull", span=""];
m10_392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="onDeserialized.Add(JsonContract.CreateSerializationCallback(method))", span="867-867"];
m10_60 [cluster="Unk.IsIndexedProperty", file="JsonTextReaderTest.cs", label="Entry Unk.IsIndexedProperty", span=""];
m10_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Additional text encountered after finished reading JSON content: ,. Path '', line 5, position 2.'',\r\n                () =>\r\n                {\r\n                    while (reader.Read())\r\n                    {\r\n                    }\r\n                })", span="365-372"];
m10_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseAdditionalContent_Comma()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n''''Small'''',\r\n''''Medium'''',\r\n''''Large''''\r\n],''", span="357-361"];
m10_1359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2182-2182"];
m10_1361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2195-2195"];
m10_1364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2202-2202"];
m10_1366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2205-2205"];
m10_1368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2208-2208"];
m10_1367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2206-2206"];
m10_1360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="string json = @''/*comment*/ { /*comment*/\r\n        ''''Name'''': /*comment*/ ''''Apple'''' /*comment*/, /*comment*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment*/ [ /*comment*/\r\n          ''''Small'''', /*comment*/\r\n          ''''Medium'''' /*comment*/,\r\n          /*comment*/ ''''Large''''\r\n        /*comment*/ ] /*comment*/\r\n      } /*comment*/''", span="2184-2193"];
m10_1362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="int i = 0", span="2200-2200"];
m10_1363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="i < 26", span="2200-2200"];
m10_1365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="i++", span="2200-2200"];
m10_1369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnEndComment()", span="2182-2182"];
m10_1711 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2751-2751"];
m10_1717 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2764-2764"];
m10_1735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2791-2791"];
m10_1718 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2766-2766"];
m10_1719 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2768-2768"];
m10_1722 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2772-2772"];
m10_1725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2776-2776"];
m10_1728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2780-2780"];
m10_1731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2784-2784"];
m10_1734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2788-2788"];
m10_1736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2793-2793"];
m10_1752 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2815-2815"];
m10_1720 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2769-2769"];
m10_1721 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2770-2770"];
m10_1723 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2773-2773"];
m10_1724 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0d, reader.Value)", span="2774-2774"];
m10_1726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2777-2777"];
m10_1727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025d, reader.Value)", span="2778-2778"];
m10_1729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2781-2781"];
m10_1730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000d, reader.Value)", span="2782-2782"];
m10_1732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2785-2785"];
m10_1733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(602214180000000000000000d, reader.Value)", span="2786-2786"];
m10_1738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2796-2796"];
m10_1739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="2797-2797"];
m10_1741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2800-2800"];
m10_1742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0m, reader.Value)", span="2801-2801"];
m10_1744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2804-2804"];
m10_1745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0000025m, reader.Value)", span="2805-2805"];
m10_1747 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2808-2808"];
m10_1748 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3000000000m, reader.Value)", span="2809-2809"];
m10_1750 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2812-2812"];
m10_1751 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(602214180000000000000000m, reader.Value)", span="2813-2813"];
m10_1716 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="string json = @''[0e-10,0E-10,0.25e-5,0.3e10,6.0221418e23]''", span="2762-2762"];
m10_1737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2795-2795"];
m10_1740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2799-2799"];
m10_1743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2803-2803"];
m10_1746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2807-2807"];
m10_1749 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="reader.ReadAsDecimal()", span="2811-2811"];
m10_1715 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Console.WriteLine(d.ToString(''0.#############################################################################''))", span="2757-2757"];
m10_1714 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Console.WriteLine(d.ToString(new CultureInfo(''fr-FR'')))", span="2756-2756"];
m10_1713 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="d = Convert.ToDouble(''6.0221418e23'', CultureInfo.InvariantCulture)", span="2755-2755"];
m10_1712 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="double d", span="2753-2753"];
m10_1753 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ScientificNotation()", span="2751-2751"];
m10_1038 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1678-1678"];
m10_1039 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[}''))", span="1680-1680"];
m10_1040 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="reader.Read()", span="1682-1682"];
m10_1041 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected character encountered while parsing value: }. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="1684-1686"];
m10_1042 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBadCharInArray()", span="1678-1678"];
m10_1196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="1925-1925"];
m10_1198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1929-1929"];
m10_1199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1931-1931"];
m10_1201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1934-1934"];
m10_1207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1942-1942"];
m10_1200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1932-1932"];
m10_1202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1935-1935"];
m10_1204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1938-1938"];
m10_1205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1939-1939"];
m10_1206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="1940-1940"];
m10_1208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1943-1943"];
m10_1197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="1927-1927"];
m10_1203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1937-1937"];
m10_1209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="1925-1925"];
m10_190 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="447-447"];
m10_192 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445"];
m10_193 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281"];
m10_194 [cluster="System.Type.MakeGenericType(params System.Type[])", file="JsonTextReaderTest.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m10_1153 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m10_1182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="1903-1903"];
m10_1184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1907-1907"];
m10_1185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1909-1909"];
m10_1187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1912-1912"];
m10_1193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1920-1920"];
m10_1186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1910-1910"];
m10_1188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1913-1913"];
m10_1190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1916-1916"];
m10_1191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1917-1917"];
m10_1192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="1918-1918"];
m10_1194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1921-1921"];
m10_1183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="1905-1905"];
m10_1189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1915-1915"];
m10_1195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="1903-1903"];
m10_119 [cluster="Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.NamingStrategy.GetDictionaryKey(string)", span="62-62"];
m10_124 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClassHierarchyForType(System.Type)", span="917-917"];
m10_1444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2330-2330"];
m10_1446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2333-2333"];
m10_1447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing constructor. Path '', line 1, position 7.'',\r\n                () => { reader.Read(); })", span="2335-2337"];
m10_1445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="string json = ''new Dat''", span="2332-2332"];
m10_1448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseConstructorWithUnexpectedEnd()", span="2330-2330"];
m10_1843 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="2948-2948"];
m10_1845 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2952-2952"];
m10_1855 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2965-2965"];
m10_1865 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2978-2978"];
m10_1875 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="2991-2991"];
m10_1885 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="3004-3004"];
m10_1847 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2955-2955"];
m10_1848 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2956-2956"];
m10_1851 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2959-2959"];
m10_1854 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2962-2962"];
m10_1857 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2968-2968"];
m10_1858 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2969-2969"];
m10_1861 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2972-2972"];
m10_1864 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2975-2975"];
m10_1867 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2981-2981"];
m10_1868 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2982-2982"];
m10_1871 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2985-2985"];
m10_1874 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2988-2988"];
m10_1877 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2994-2994"];
m10_1884 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3001-3001"];
m10_1887 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3007-3007"];
m10_1894 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3014-3014"];
m10_1849 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2957-2957"];
m10_1850 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2958-2958"];
m10_1852 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="2960-2960"];
m10_1853 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="2961-2961"];
m10_1859 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2970-2970"];
m10_1860 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2971-2971"];
m10_1862 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2973-2973"];
m10_1863 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2974-2974"];
m10_1869 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''1970-01-01T00:00:00Z'', reader.Value)", span="2983-2983"];
m10_1870 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="2984-2984"];
m10_1872 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''/Date(0)/'', reader.Value)", span="2986-2986"];
m10_1873 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="2987-2987"];
m10_1879 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2996-2996"];
m10_1880 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="2997-2997"];
m10_1882 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero), reader.Value)", span="2999-2999"];
m10_1883 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="3000-3000"];
m10_1889 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3009-3009"];
m10_1890 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3010-3010"];
m10_1892 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc), reader.Value)", span="3012-3012"];
m10_1893 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTime), reader.ValueType)", span="3013-3013"];
m10_1844 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="string json = @''[''''1970-01-01T00:00:00Z'''',''''\/Date(0)\/'''']''", span="2950-2950"];
m10_1846 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="2953-2953"];
m10_1856 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="2966-2966"];
m10_1866 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.None", span="2979-2979"];
m10_1876 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTime", span="2992-2992"];
m10_1878 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2995-2995"];
m10_1881 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="2998-2998"];
m10_1886 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.DateParseHandling = Json.DateParseHandling.DateTimeOffset", span="3005-3005"];
m10_1888 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="3008-3008"];
m10_1891 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTime()", span="3011-3011"];
m10_1895 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.DateParseHandling()", span="2948-2948"];
m10_1379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2229-2229"];
m10_1381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2232-2232"];
m10_1382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2234-2234"];
m10_1385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2238-2238"];
m10_1383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Date'', reader.Value)", span="2235-2235"];
m10_1384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2236-2236"];
m10_1386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2239-2239"];
m10_1380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="string json = ''new Date\n()''", span="2231-2231"];
m10_1387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseLineFeedDelimitedConstructor()", span="2229-2229"];
m10_978 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1591-1591"];
m10_980 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1594-1594"];
m10_979 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1593-1593"];
m10_981 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1596-1596"];
m10_983 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1599-1599"];
m10_986 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1603-1603"];
m10_989 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1607-1607"];
m10_992 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1611-1611"];
m10_994 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1614-1614"];
m10_982 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1597-1597"];
m10_984 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1600-1600"];
m10_985 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1601-1601"];
m10_987 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1604-1604"];
m10_988 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1605-1605"];
m10_990 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1608-1608"];
m10_991 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250L, jsonReader.Value)", span="1609-1609"];
m10_993 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1612-1612"];
m10_995 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="1591-1591"];
m10_388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="onDeserializing.Add(JsonContract.CreateSerializationCallback(method))", span="861-861"];
m10_562 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="string json =\r\n                newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + ''name1'' + newLinesText\r\n                + ''''' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''['' + newLinesText\r\n                + ''new'' + newLinesText\r\n                + ''Date'' + newLinesText\r\n                + ''('' + newLinesText\r\n                + ''1'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''null'' + newLinesText\r\n                + ''/*'' + newLinesText\r\n                + ''blah comment'' + newLinesText\r\n                + ''*/'' + newLinesText\r\n                + '')'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''1.1111'' + newLinesText\r\n                + '']'' + newLinesText\r\n                + '','' + newLinesText\r\n                + ''name2'' + newLinesText\r\n                + '':'' + newLinesText\r\n                + ''{'' + newLinesText\r\n                + ''}'' + newLinesText\r\n                + ''}'' + newLinesText", span="987-1013"];
m10_563 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="int count = 0", span="1015-1015"];
m10_565 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="sr.ReadLine() != null", span="1017-1017"];
m10_566 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="count++", span="1019-1019"];
m10_564 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(newLinesText)", span="1016-1016"];
m10_567 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="1022-1022"];
m10_568 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewLines()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1023-1023"];
m10_1898 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="353-353"];
m10_366 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>, out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>)", file="JsonTextReaderTest.cs", label="GetClassHierarchyForType(type)", span="822-822"];
m10_1664 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2677-2677"];
m10_1666 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2681-2681"];
m10_1667 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end while parsing comment. Path '', line 1, position 1.'',\r\n                () => { reader.Read(); })", span="2683-2685"];
m10_1665 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="string json = @''/''", span="2679-2679"];
m10_1668 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ErrorReadingComment()", span="2677-2677"];
m10_1227 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="1969-1969"];
m10_1229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1973-1973"];
m10_1231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1976-1976"];
m10_1233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1979-1979"];
m10_1240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1989-1989"];
m10_1232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1977-1977"];
m10_1234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1980-1980"];
m10_1236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1983-1983"];
m10_1237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1984-1984"];
m10_1241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1990-1990"];
m10_1239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", span="1987-1987"];
m10_1228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", span="1971-1971"];
m10_1230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''en-US'')", span="1974-1974"];
m10_1235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1982-1982"];
m10_1238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", span="1986-1986"];
m10_1242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", span="1969-1969"];
m10_115 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", span="447-447"];
m10_1156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1863-1863"];
m10_1158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1867-1867"];
m10_1159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1869-1869"];
m10_1161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1872-1872"];
m10_1167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1880-1880"];
m10_1160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1870-1870"];
m10_1162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1873-1873"];
m10_1164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1876-1876"];
m10_1165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1877-1877"];
m10_1166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="1878-1878"];
m10_1168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1881-1881"];
m10_1157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="1865-1865"];
m10_1163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1875-1875"];
m10_1169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="1863-1863"];
m10_1284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2057-2057"];
m10_1285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''nul''))", span="2059-2059"];
m10_1286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing null value. Path '', line 0, position 0.'',\r\n                () => { reader.Read(); })", span="2061-2063"];
m10_1287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MatchWithInsufficentCharacters()", span="2057-2057"];
m10_1757 [cluster="double.ToString(string)", file="JsonTextReaderTest.cs", label="Entry double.ToString(string)", span="0-0"];
m10_157 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3130-3130"];
m10_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="462-462"];
m10_1212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="1947-1947"];
m10_1214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1951-1951"];
m10_1215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1953-1953"];
m10_1217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1956-1956"];
m10_1223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="1964-1964"];
m10_1216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="1954-1954"];
m10_1218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="1957-1957"];
m10_1220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="1960-1960"];
m10_1221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="1961-1961"];
m10_1222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", span="1962-1962"];
m10_1224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="1965-1965"];
m10_1213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", span="1949-1949"];
m10_1219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="1959-1959"];
m10_1225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", span="1947-1947"];
m10_570 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43"];
m10_588 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="1556-1556"];
m10_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="446-452"];
m10_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="518-518"];
m10_1899 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3019-3019"];
m10_1901 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(toggleReaderError)", span="3022-3022"];
m10_1900 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ToggleReaderError toggleReaderError = new ToggleReaderError(new StringReader(''{'first':1,'second':2,'third':3}''))", span="3021-3021"];
m10_1902 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3024-3024"];
m10_1907 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3037-3037"];
m10_1912 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonTextReader.Read())", span="3048-3048"];
m10_1908 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''first'', jsonTextReader.Value)", span="3038-3038"];
m10_1913 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1L, jsonTextReader.Value)", span="3049-3049"];
m10_1904 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3028-3030"];
m10_1905 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3031-3033"];
m10_1910 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3042-3044"];
m10_1915 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3053-3055"];
m10_1916 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3056-3058"];
m10_1917 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<Exception>(\r\n                ''Read error'',\r\n                () => jsonTextReader.Read())", span="3059-3061"];
m10_1903 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = true", span="3026-3026"];
m10_1906 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = false", span="3035-3035"];
m10_1909 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = true", span="3040-3040"];
m10_1911 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = false", span="3046-3046"];
m10_1914 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = true", span="3051-3051"];
m10_1918 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="toggleReaderError.Error = false", span="3063-3063"];
m10_1919 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ResetJsonTextReaderErrorCount()", span="3019-3019"];
m10_1755 [cluster="double.ToString(System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m10_1017 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1648-1648"];
m10_1019 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="1651-1651"];
m10_1018 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="1650-1650"];
m10_1020 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1653-1653"];
m10_1034 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="1671-1671"];
m10_1036 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="1674-1674"];
m10_1021 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="1654-1654"];
m10_1023 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1657-1657"];
m10_1024 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1658-1658"];
m10_1025 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1659-1659"];
m10_1027 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1662-1662"];
m10_1028 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1663-1663"];
m10_1029 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1664-1664"];
m10_1031 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="1667-1667"];
m10_1032 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(int), jsonReader.ValueType)", span="1668-1668"];
m10_1033 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="1669-1669"];
m10_1035 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="1672-1672"];
m10_1022 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="jsonReader.ReadAsInt32()", span="1656-1656"];
m10_1026 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="jsonReader.ReadAsInt32()", span="1661-1661"];
m10_1030 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="jsonReader.ReadAsInt32()", span="1666-1666"];
m10_1037 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumberAsInt32()", span="1648-1648"];
m10_1896 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m10_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="495-495"];
m10_830 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m10_725 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1251-1251"];
m10_727 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1.1''))", span="1255-1255"];
m10_729 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-1.1''))", span="1258-1258"];
m10_731 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''0.0''))", span="1261-1261"];
m10_733 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-0.0''))", span="1264-1264"];
m10_735 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1267-1267"];
m10_737 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''9999999999999999999999999999999999999999999999999999999999999999999999999999asdasdasd''))", span="1270-1270"];
m10_740 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''1E-06''))", span="1274-1274"];
m10_742 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''''))", span="1277-1277"];
m10_744 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StringReader(''-''))", span="1280-1280"];
m10_728 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.1m, reader.ReadAsDecimal())", span="1256-1256"];
m10_730 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-1.1m, reader.ReadAsDecimal())", span="1259-1259"];
m10_732 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0m, reader.ReadAsDecimal())", span="1262-1262"];
m10_734 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.ReadAsDecimal())", span="1265-1265"];
m10_741 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.000001m, reader.ReadAsDecimal())", span="1275-1275"];
m10_743 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(null, reader.ReadAsDecimal())", span="1278-1278"];
m10_736 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.ReadAsDecimal())", span="1268-1268"];
m10_739 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '9999999999999999999999999999999999999999999999999999999999999999999999999999a' is not a valid decimal. Path '', line 1, position 77.'', () => reader.Read())", span="1272-1272"];
m10_745 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(''Input string '-' is not a valid decimal. Path '', line 1, position 1.'', () => reader.ReadAsDecimal())", span="1281-1281"];
m10_726 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = null", span="1253-1253"];
m10_738 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="reader.FloatParseHandling = Json.FloatParseHandling.Decimal", span="1271-1271"];
m10_746 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseDecimals()", span="1251-1251"];
m10_234 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonTextReaderTest.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m10_212 [cluster="Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.Func<T, TResult>.Invoke(T)", span="3040-3040"];
m10_216 [cluster="Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.Action<T1, T2>.Invoke(T1, T2)", span="3050-3050"];
m10_230 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="541-541"];
m10_231 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="JsonTextReaderTest.cs", label=_e, span="543-543"];
m10_232 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="JsonTextReaderTest.cs", label="yield return new KeyValuePair<object, object>(item.Key, item.Value);", span="545-545"];
m10_233 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.GetEnumerator()", span="541-541"];
m10_235 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="549-549"];
m10_236 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextReaderTest.cs", label="return GetEnumerator();", span="551-551"];
m10_237 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>.System.Collections.IEnumerable.GetEnumerator()", span="549-549"];
m10_249 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="JsonTextReaderTest.cs", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
m10_163 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetExtensionDataDelegates(Newtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.MemberInfo)", file="JsonTextReaderTest.cs", label="JsonExtensionDataAttribute extensionDataAttribute = ReflectionUtils.GetAttribute<JsonExtensionDataAttribute>(member)", span="449-449"];
m10_1348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2152-2152"];
m10_1350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2167-2167"];
m10_1353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="reader.Read()", span="2174-2174"];
m10_1355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2177-2177"];
m10_1356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(631136448000000000), reader.Value)", span="2178-2178"];
m10_1349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="2154-2165"];
m10_1351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="int i = 0", span="2172-2172"];
m10_1352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="i < 13", span="2172-2172"];
m10_1354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="i++", span="2172-2172"];
m10_1357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBufferOnControlChar()", span="2152-2152"];
m10_1767 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2836-2836"];
m10_1769 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                MaxDepth = 1\r\n            }", span="2840-2843"];
m10_1770 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2845-2845"];
m10_1774 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2853-2853"];
m10_1776 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2856-2856"];
m10_1778 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2859-2859"];
m10_1780 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2862-2862"];
m10_1782 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2865-2865"];
m10_1786 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2873-2873"];
m10_1788 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2876-2876"];
m10_1790 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2879-2879"];
m10_1792 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2882-2882"];
m10_1794 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2885-2885"];
m10_1771 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="2846-2846"];
m10_1773 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2851-2851"];
m10_1775 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2854-2854"];
m10_1777 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="2857-2857"];
m10_1779 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, reader.Depth)", span="2860-2860"];
m10_1781 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2863-2863"];
m10_1783 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2866-2866"];
m10_1785 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2871-2871"];
m10_1787 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2874-2874"];
m10_1789 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, reader.Depth)", span="2877-2877"];
m10_1791 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, reader.Depth)", span="2880-2880"];
m10_1793 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, reader.Depth)", span="2883-2883"];
m10_1768 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="string json = ''[[[[]]],[[]]]''", span="2838-2838"];
m10_1772 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[0]', line 1, position 2.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2848-2850"];
m10_1784 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''The reader's MaxDepth of 1 has been exceeded. Path '[1]', line 1, position 9.'',\r\n                () => { Assert.IsTrue(reader.Read()); })", span="2868-2870"];
m10_1795 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MaxDepthDoesNotRecursivelyError()", span="2836-2836"];
m10_1319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2107-2107"];
m10_1321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2111-2111"];
m10_1322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2113-2113"];
m10_1324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2116-2116"];
m10_1330 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2124-2124"];
m10_1323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="2114-2114"];
m10_1325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="2117-2117"];
m10_1327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="2120-2120"];
m10_1328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="2121-2121"];
m10_1331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="2125-2125"];
m10_1329 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(-79228162514264300000000000000m, d)", span="2122-2122"];
m10_1320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="string json = @''{''''decimal'''':-7.92281625142643E+28}''", span="2109-2109"];
m10_1326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="decimal? d = reader.ReadAsDecimal()", span="2119-2119"];
m10_1332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimal()", span="2107-2107"];
m10_1491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2400-2400"];
m10_1493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="2403-2403"];
m10_1494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2405-2405"];
m10_1496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2408-2408"];
m10_1495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartConstructor, reader.TokenType)", span="2406-2406"];
m10_1497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndConstructor, reader.TokenType)", span="2409-2409"];
m10_1492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="string json = ''new Date()''", span="2402-2402"];
m10_1498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseEmptyConstructor()", span="2400-2400"];
m10_1959 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3108-3108"];
m10_1960 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label=Error, span="3110-3110"];
m10_1962 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="return _inner.Read(buffer, index, 1);", span="3113-3113"];
m10_1961 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="throw new Exception(''Read error'');", span="3111-3111"];
m10_1963 [cluster="Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.ToggleReaderError.Read(char[], int, int)", span="3108-3108"];
m10_1971 [cluster="Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.SlowStream.SlowStream(string, System.Text.Encoding, int)", span="3130-3130"];
m10_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="696-696"];
m10_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual((long)i, reader.Value)", span="700-700"];
m10_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="681-681"];
m10_391 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="379-379"];
m10_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", span="681-681"];
m10_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="int i = 0", span="687-687"];
m10_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i < valueCount", span="687-687"];
m10_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="writer.WriteValue(i)", span="689-689"];
m10_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="int valueCount = 10000", span="683-683"];
m10_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="695-695"];
m10_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter()", span="684-684"];
m10_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="699-699"];
m10_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="685-685"];
m10_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="703-703"];
m10_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="writer.WriteStartArray()", span="686-686"];
m10_390 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="166-166"];
m10_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i++", span="687-687"];
m10_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="string json = sw.ToString()", span="693-693"];
m10_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="int i = 0", span="697-697"];
m10_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i < valueCount", span="697-697"];
m10_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="i++", span="697-697"];
m10_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="702-702"];
m10_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadLongJsonArray()", file="JsonTextReaderTest.cs", label="writer.WriteEndArray()", span="691-691"];
m10_709 [cluster="long.ToString()", file="JsonTextReaderTest.cs", label=createEnumerableWrapper, span=""];
m10_1656 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2663-2663"];
m10_1658 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(new SlowStream(json, new UTF8Encoding(false), 1)))", span="2667-2667"];
m10_1659 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="2669-2669"];
m10_1662 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="2673-2673"];
m10_1660 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Comment, reader.TokenType)", span="2670-2670"];
m10_1661 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''comment'', reader.Value)", span="2671-2671"];
m10_1657 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="string json = @''//comment''", span="2665-2665"];
m10_1663 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.JustSinglelineComment()", span="2663-2663"];
m10_446 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="JsonTextReaderTest.cs", label="InitializeContract(contract)", span="990-990"];
m10_841 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435"];
m10_1754 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m10_451 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="335-335"];
m10_1154 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m10_1484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2390-2390"];
m10_1485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''true/''))", span="2392-2392"];
m10_1486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Error parsing boolean value. Path '', line 1, position 4.'',\r\n                () => { reader.Read(); })", span="2394-2396"];
m10_1487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParseIncompleteCommentSeparator()", span="2390-2390"];
m10_1939 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3070-3070"];
m10_1948 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(sr)", span="3083-3083"];
m10_1947 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(json)", span="3082-3082"];
m10_1949 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3085-3085"];
m10_1954 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="3093-3093"];
m10_1951 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(decimal.MaxValue, max)", span="3088-3088"];
m10_1953 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(decimal.MinValue, min)", span="3091-3091"];
m10_1950 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="decimal? max = reader.ReadAsDecimal()", span="3087-3087"];
m10_1952 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="decimal? min = reader.ReadAsDecimal()", span="3090-3090"];
m10_1946 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="string json = sw.ToString()", span="3080-3080"];
m10_1940 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter()", span="3072-3072"];
m10_1945 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteEndArray()", span="3078-3078"];
m10_1941 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="3073-3073"];
m10_1944 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteValue(decimal.MinValue)", span="3077-3077"];
m10_1942 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteStartArray()", span="3075-3075"];
m10_1943 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="writer.WriteValue(decimal.MaxValue)", span="3076-3076"];
m10_1955 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadBoundaryDecimals()", span="3070-3070"];
m10_1097 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1772-1772"];
m10_1098 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[1''))", span="1774-1774"];
m10_1099 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                ''Unexpected end when reading bytes. Path '[0]', line 1, position 2.'',\r\n                () => { reader.ReadAsBytes(); })", span="1776-1778"];
m10_1100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithNoEnd()", span="1772-1772"];
m10_833 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m10_1155 [cluster="System.TimeSpan.FromHours(double)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m10_1090 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1761-1761"];
m10_1091 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[/*hi*/1/*hi*/,2/*hi*/]''))", span="1763-1763"];
m10_1093 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, data.Length)", span="1766-1766"];
m10_1094 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, data[0])", span="1767-1767"];
m10_1095 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, data[1])", span="1768-1768"];
m10_1092 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="1765-1765"];
m10_1096 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsBytesIntegerArrayWithComments()", span="1761-1761"];
m10_842 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="634-634"];
m10_840 [cluster="System.Text.StringBuilder.ToString()", file="JsonTextReaderTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m10_1994 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2001 [file="JsonTextReaderTest.cs", label=total, span=""];
m10_2002 [file="JsonTextReaderTest.cs", label=total, span=""];
m10_1995 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_1997 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_1998 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_1999 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2009 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2010 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2011 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2012 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2021 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2022 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2023 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2024 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2025 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2026 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2027 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2028 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2029 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2030 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2032 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2033 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2034 [file="JsonTextReaderTest.cs", label=jsonTextReader, span=""];
m10_1996 [file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Tests.JsonTextReaderTest", span=""];
m10_2000 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2003 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2004 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2005 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2006 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2007 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2008 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2013 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2014 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2015 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2016 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2017 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2018 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2019 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2020 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2031 [file="JsonTextReaderTest.cs", label=reader, span=""];
m10_2035 [file="JsonTextReaderTest.cs", label="Newtonsoft.Json.Tests.ToggleReaderError", span=""];
m11_7 [cluster="Unk.CreateComment", file="XmlNodeConverter.cs", label="Entry Unk.CreateComment", span=""];
m11_494 [cluster="XmlDocument.cstr", file="XmlNodeConverter.cs", label="Entry XmlDocument.cstr", span=""];
m11_174 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="103-103"];
m11_554 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1409-1409"];
m11_556 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.String", span="1411-1411"];
m11_557 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return reader.Value.ToString();", span="1413-1413"];
m11_558 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Integer", span="1415-1415"];
m11_559 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1417-1417"];
m11_560 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Float", span="1419-1419"];
m11_561 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.Value is decimal", span="1421-1421"];
m11_562 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString((decimal)reader.Value);", span="1422-1422"];
m11_563 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.Value is float", span="1423-1423"];
m11_564 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString((float)reader.Value);", span="1424-1424"];
m11_565 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1426-1426"];
m11_566 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Boolean", span="1428-1428"];
m11_567 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1430-1430"];
m11_568 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Date", span="1432-1432"];
m11_569 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.Value is DateTimeOffset", span="1435-1435"];
m11_570 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString((DateTimeOffset)reader.Value);", span="1436-1436"];
m11_571 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1439-1439"];
m11_573 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="1446-1446"];
m11_575 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="throw JsonSerializationException.Create(reader, ''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1452-1452"];
m11_572 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1441-1441"];
m11_574 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="return null;", span="1448-1448"];
m11_576 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1409-1409"];
m11_34 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="90-90"];
m11_35 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateProcessingInstruction(target, data));", span="92-92"];
m11_36 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="90-90"];
m11_520 [cluster="string.Equals(string, string, System.StringComparison)", file="XmlNodeConverter.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m11_448 [cluster="Unk.All", file="XmlNodeConverter.cs", label="Entry Unk.All", span=""];
m11_240 [cluster="XAttributeWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XAttributeWrapper.cstr", span=""];
m11_133 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="478-478"];
m11_134 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XComment(text));", span="480-480"];
m11_135 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="478-478"];
m11_95 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="330-330"];
m11_96 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="330-330"];
m11_109 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="337-337"];
m11_110 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="337-337"];
m11_518 [cluster="object.ToString()", file="XmlNodeConverter.cs", label="Entry object.ToString()", span="0-0"];
m11_156 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="508-508"];
m11_157 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="return new XDocumentTypeWrapper(new XDocumentType(name, publicId, systemId, internalSubset));", span="510-510"];
m11_158 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="508-508"];
m11_550 [cluster="string.StartsWith(string, System.StringComparison)", file="XmlNodeConverter.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m11_200 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="688-688"];
m11_201 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XDocument", span="690-690"];
m11_202 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XDocumentWrapper((XDocument)node);", span="691-691"];
m11_203 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XElement", span="692-692"];
m11_204 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XElementWrapper((XElement)node);", span="693-693"];
m11_205 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XContainer", span="694-694"];
m11_206 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XContainerWrapper((XContainer)node);", span="695-695"];
m11_207 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XProcessingInstruction", span="696-696"];
m11_208 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XProcessingInstructionWrapper((XProcessingInstruction)node);", span="697-697"];
m11_209 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XText", span="698-698"];
m11_210 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XTextWrapper((XText)node);", span="699-699"];
m11_211 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XComment", span="700-700"];
m11_212 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XCommentWrapper((XComment)node);", span="701-701"];
m11_213 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XAttribute", span="702-702"];
m11_214 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XAttributeWrapper((XAttribute)node);", span="703-703"];
m11_215 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="node is XDocumentType", span="704-704"];
m11_216 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XDocumentTypeWrapper((XDocumentType)node);", span="705-705"];
m11_217 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(node);", span="707-707"];
m11_218 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="688-688"];
m11_170 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="523-523"];
m11_171 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="525-525"];
m11_172 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceUri)));", span="526-526"];
m11_173 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="523-523"];
m11_495 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1342-1342"];
m11_523 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string.IsNullOrEmpty(propertyName)", span="1344-1344"];
m11_525 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1347-1347"];
m11_526 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1349-1349"];
m11_527 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="propertyName.StartsWith(''@'', StringComparison.Ordinal)", span="1351-1351"];
m11_528 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeName = propertyName.Substring(1)", span="1353-1353"];
m11_529 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeValue = reader.Value.ToString()", span="1354-1354"];
m11_531 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                    ? document.CreateAttribute(attributeName, manager.LookupNamespace(attributePrefix), attributeValue)\r\n                    : document.CreateAttribute(attributeName, attributeValue)", span="1358-1360"];
m11_532 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="((IXmlElement)currentNode).SetAttributeNode(attribute)", span="1362-1362"];
m11_533 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="1366-1366"];
m11_534 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(element)", span="1368-1368"];
m11_537 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                        ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix), nameValue.Value)\r\n                        : document.CreateAttribute(nameValue.Key, nameValue.Value)", span="1375-1377"];
m11_539 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.String\r\n                    || reader.TokenType == JsonToken.Integer\r\n                    || reader.TokenType == JsonToken.Float\r\n                    || reader.TokenType == JsonToken.Boolean\r\n                    || reader.TokenType == JsonToken.Date", span="1382-1386"];
m11_540 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.AppendChild(document.CreateTextNode(ConvertTokenToXmlValue(reader)))", span="1388-1388"];
m11_541 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="1390-1390"];
m11_542 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.EndObject", span="1397-1397"];
m11_543 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="1399-1399"];
m11_544 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, element)", span="1400-1400"];
m11_545 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.PopScope()", span="1401-1401"];
m11_546 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.RemoveNamespace(string.Empty, manager.DefaultNamespace)", span="1404-1404"];
m11_524 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1345-1345"];
m11_535 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=attributeNameValues, span="1371-1371"];
m11_530 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributePrefix = MiscellaneousUtils.GetPrefix(attributeName)", span="1356-1356"];
m11_538 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(attribute)", span="1379-1379"];
m11_536 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1373-1373"];
m11_547 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1342-1342"];
m11_51 [cluster="Unk.CreateAttribute", file="XmlNodeConverter.cs", label="Entry Unk.CreateAttribute", span=""];
m11_117 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="341-341"];
m11_118 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="341-341"];
m11_159 [cluster="XDocumentType.cstr", file="XmlNodeConverter.cs", label="Entry XDocumentType.cstr", span=""];
m11_179 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="782-782"];
m11_231 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="782-782"];
m11_322 [cluster="JsonSerializationException.cstr", file="XmlNodeConverter.cs", label="Entry JsonSerializationException.cstr", span=""];
m11_149 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="498-498"];
m11_150 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XText(text));", span="500-500"];
m11_151 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="498-498"];
m11_75 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="230-230"];
m11_76 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="XmlNodeConverter.cs", label="_node = node", span="232-232"];
m11_77 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="230-230"];
m11_57 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137"];
m11_58 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="XmlNodeConverter.cs", label="_element = element", span="140-140"];
m11_59 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137"];
m11_332 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1021-1021"];
m11_333 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="1024-1024"];
m11_335 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < node.ChildNodes.Count", span="1026-1026"];
m11_336 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlNode childNode = node.ChildNodes[i]", span="1028-1028"];
m11_337 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string nodeName = GetPropertyName(childNode, manager)", span="1029-1029"];
m11_351 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="1059-1059"];
m11_353 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1065-1065"];
m11_354 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(elementNames)", span="1066-1066"];
m11_355 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartArray()", span="1068-1068"];
m11_358 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, groupedNodes[i], manager, false)", span="1072-1072"];
m11_360 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndArray()", span="1075-1075"];
m11_334 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="1026-1026"];
m11_339 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="1032-1032"];
m11_341 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodesGroupedByName.Add(nodeName, nodes)", span="1035-1035"];
m11_344 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=nodesGroupedByName, span="1043-1043"];
m11_343 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="1026-1026"];
m11_342 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodes.Add(childNode)", span="1038-1038"];
m11_338 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="List<IXmlNode> nodes", span="1031-1031"];
m11_340 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="nodes = new List<IXmlNode>()", span="1034-1034"];
m11_345 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="1045-1045"];
m11_346 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="bool writeArray", span="1046-1046"];
m11_347 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="groupedNodes.Count == 1", span="1048-1048"];
m11_348 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writeArray = IsArray(groupedNodes[0])", span="1050-1050"];
m11_352 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string elementNames = nodeNameGroup.Key", span="1063-1063"];
m11_357 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < groupedNodes.Count", span="1070-1070"];
m11_349 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writeArray = true", span="1054-1054"];
m11_350 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!writeArray", span="1057-1057"];
m11_356 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="1070-1070"];
m11_359 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="1070-1070"];
m11_361 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1021-1021"];
m11_11 [cluster="Unk.CreateTextNode", file="XmlNodeConverter.cs", label="Entry Unk.CreateTextNode", span=""];
m11_78 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="263-263"];
m11_79 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="node.NodeType", span="265-265"];
m11_81 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="return new XmlElementWrapper((XmlElement) node);", span="268-268"];
m11_83 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="return new XmlDeclarationWrapper((XmlDeclaration) node);", span="270-270"];
m11_85 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="return new XmlDocumentTypeWrapper((XmlDocumentType) node);", span="272-272"];
m11_86 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(node);", span="274-274"];
m11_80 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="267-267"];
m11_82 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="269-269"];
m11_84 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentType", span="271-271"];
m11_87 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="263-263"];
m11_551 [cluster="string.Substring(int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int)", span="0-0"];
m11_69 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="165-165"];
m11_70 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="XmlNodeConverter.cs", label="_declaration = declaration", span="168-168"];
m11_71 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="165-165"];
m11_64 [cluster="Unk.SetAttributeNode", file="XmlNodeConverter.cs", label="Entry Unk.SetAttributeNode", span=""];
m11_97 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="331-331"];
m11_98 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="331-331"];
m11_185 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="551-551"];
m11_186 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="553-553"];
m11_190 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return base.AppendChild(newChild);", span="561-561"];
m11_187 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="declarationWrapper != null", span="554-554"];
m11_188 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Document.Declaration = declarationWrapper.Declaration", span="556-556"];
m11_189 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return declarationWrapper;", span="557-557"];
m11_191 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="551-551"];
m11_581 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m11_741 [cluster="Unk.Where", file="XmlNodeConverter.cs", label="Entry Unk.Where", span=""];
m11_24 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="80-80"];
m11_25 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="return new XmlDeclarationWrapper(_document.CreateXmlDeclaration(version, encoding, standalone));", span="82-82"];
m11_26 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="80-80"];
m11_181 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="534-534"];
m11_182 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="536-536"];
m11_183 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceUri), value));", span="537-537"];
m11_184 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="534-534"];
m11_224 [cluster="Unk.Add", file="XmlNodeConverter.cs", label="Entry Unk.Add", span=""];
m11_452 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50"];
m11_141 [cluster="XText.cstr", file="XmlNodeConverter.cs", label="Entry XText.cstr", span=""];
m11_521 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1627-1627"];
m11_672 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string name = null", span="1629-1629"];
m11_676 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1633-1633"];
m11_677 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Value.ToString()", span="1635-1635"];
m11_679 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1638-1638"];
m11_680 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="name = reader.Value.ToString()", span="1639-1639"];
m11_682 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1642-1642"];
m11_683 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="publicId = reader.Value.ToString()", span="1643-1643"];
m11_685 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1646-1646"];
m11_686 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="systemId = reader.Value.ToString()", span="1647-1647"];
m11_688 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1650-1650"];
m11_689 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="internalSubset = reader.Value.ToString()", span="1651-1651"];
m11_690 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1654-1654"];
m11_691 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="IXmlNode documentType = document.CreateXmlDocumentType(name, publicId, systemId, internalSubset)", span="1658-1658"];
m11_692 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(documentType)", span="1659-1659"];
m11_673 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string publicId = null", span="1630-1630"];
m11_674 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string systemId = null", span="1631-1631"];
m11_675 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string internalSubset = null", span="1632-1632"];
m11_678 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@name''", span="1637-1637"];
m11_681 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@public''", span="1641-1641"];
m11_684 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@system''", span="1645-1645"];
m11_687 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="''@internalSubset''", span="1649-1649"];
m11_693 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1627-1627"];
m11_577 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m11_60 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143"];
m11_61 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="145-145"];
m11_62 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_element.SetAttributeNode((XmlAttribute)xmlAttributeWrapper.WrappedNode)", span="147-147"];
m11_63 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143"];
m11_107 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="336-336"];
m11_108 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="336-336"];
m11_599 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="XmlNodeConverter.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m11_287 [cluster="Unk.AddNamespace", file="XmlNodeConverter.cs", label="Entry Unk.AddNamespace", span=""];
m11_519 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1589-1589"];
m11_651 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="propertyName == DeclarationName", span="1591-1591"];
m11_655 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1596-1596"];
m11_656 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Value.ToString()", span="1598-1598"];
m11_658 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1601-1601"];
m11_659 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="version = reader.Value.ToString()", span="1602-1602"];
m11_661 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1605-1605"];
m11_662 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="encoding = reader.Value.ToString()", span="1606-1606"];
m11_664 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="reader.Read()", span="1609-1609"];
m11_665 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="standalone = reader.Value.ToString()", span="1610-1610"];
m11_666 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1613-1613"];
m11_667 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1617-1617"];
m11_668 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(declaration)", span="1618-1618"];
m11_669 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1622-1622"];
m11_670 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(instruction)", span="1623-1623"];
m11_652 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string version = null", span="1593-1593"];
m11_653 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string encoding = null", span="1594-1594"];
m11_654 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="string standalone = null", span="1595-1595"];
m11_657 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@version''", span="1600-1600"];
m11_660 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@encoding''", span="1604-1604"];
m11_663 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="''@standalone''", span="1608-1608"];
m11_671 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1589-1589"];
m11_227 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="764-764"];
m11_228 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new InvalidOperationException();", span="766-766"];
m11_229 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="764-764"];
m11_8 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="60-60"];
m11_9 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateTextNode(text));", span="62-62"];
m11_10 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="60-60"];
m11_19 [cluster="Unk.CreateWhitespace", file="XmlNodeConverter.cs", label="Entry Unk.CreateWhitespace", span=""];
m11_0 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="49-49"];
m11_1 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="XmlNodeConverter.cs", label="_document = document", span="52-52"];
m11_2 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="49-49"];
m11_549 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="94-94"];
m11_28 [cluster="Unk.CreateXmlDeclaration", file="XmlNodeConverter.cs", label="Entry Unk.CreateXmlDeclaration", span=""];
m11_579 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m11_113 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="339-339"];
m11_114 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="339-339"];
m11_145 [cluster="XCData.cstr", file="XmlNodeConverter.cs", label="Entry XCData.cstr", span=""];
m11_364 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m11_152 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="503-503"];
m11_153 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="return new XDeclarationWrapper(new XDeclaration(version, encoding, standalone));", span="505-505"];
m11_154 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="503-503"];
m11_738 [cluster="string.Substring(int, int)", file="XmlNodeConverter.cs", label="Entry string.Substring(int, int)", span="0-0"];
m11_3 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="55-55"];
m11_4 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateComment(data));", span="57-57"];
m11_5 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="55-55"];
m11_492 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m11_20 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="75-75"];
m11_21 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateSignificantWhitespace(text));", span="77-77"];
m11_22 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="75-75"];
m11_6 [cluster="XmlNodeWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlNodeWrapper.cstr", span=""];
m11_499 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1299-1299"];
m11_500 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=propertyName, span="1301-1301"];
m11_502 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1304-1304"];
m11_504 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1307-1307"];
m11_506 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1310-1310"];
m11_508 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1313-1313"];
m11_509 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1317-1317"];
m11_510 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="CreateInstruction(reader, document, currentNode, propertyName)", span="1319-1319"];
m11_511 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string.Equals(propertyName, ''!DOCTYPE'', StringComparison.OrdinalIgnoreCase)", span="1321-1321"];
m11_512 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="CreateDocumentType(reader, document, currentNode)", span="1323-1323"];
m11_513 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.StartArray", span="1327-1327"];
m11_514 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1330-1330"];
m11_516 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1336-1336"];
m11_501 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=TextName, span="1303-1303"];
m11_503 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=CDataName, span="1306-1306"];
m11_505 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=WhitespaceName, span="1309-1309"];
m11_507 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label=SignificantWhitespaceName, span="1312-1312"];
m11_515 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return;", span="1331-1331"];
m11_517 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1299-1299"];
m11_580 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="XmlNodeConverter.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m11_195 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="603-603"];
m11_196 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="603-603"];
m11_328 [cluster="Unk.ToBoolean", file="XmlNodeConverter.cs", label="Entry Unk.ToBoolean", span=""];
m11_94 [cluster="Unk.AppendChild", file="XmlNodeConverter.cs", label="Entry Unk.AppendChild", span=""];
m11_582 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="60-60"];
m11_168 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="822-822"];
m11_232 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="822-822"];
m11_288 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="968-968"];
m11_289 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string prefix = (node.NamespaceUri == null || (node.LocalName == ''xmlns'' && node.NamespaceUri == ''http://www.w3.org/2000/xmlns/''))\r\n                ? null\r\n                : manager.LookupPrefix(node.NamespaceUri)", span="970-972"];
m11_291 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return prefix + '':'' + node.LocalName;", span="975-975"];
m11_292 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return node.LocalName;", span="977-977"];
m11_290 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(prefix)", span="974-974"];
m11_293 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="968-968"];
m11_267 [cluster="System.ArgumentException.ArgumentException(string, string)", file="XmlNodeConverter.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m11_128 [cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="421-421"];
m11_129 [cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="XmlNodeConverter.cs", label="_documentType = documentType", span="424-424"];
m11_130 [cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="421-421"];
m11_453 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772"];
m11_241 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="854-854"];
m11_242 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="return Element.GetPrefixOfNamespace(namespaceUri);", span="856-856"];
m11_243 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="854-854"];
m11_449 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1750-1750"];
m11_739 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="return c.Where(a => a.NamespaceUri != JsonNamespaceUri);", span="1752-1752"];
m11_740 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1750-1750"];
m11_285 [cluster="System.Collections.Generic.List<T>.Reverse()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m11_103 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="334-334"];
m11_104 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="334-334"];
m11_584 [cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82"];
m11_192 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="710-710"];
m11_220 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Container.Add(newChild.WrappedNode)", span="712-712"];
m11_222 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return newChild;", span="715-715"];
m11_221 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_childNodes = null", span="713-713"];
m11_223 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="710-710"];
m11_583 [cluster="string.FormatWith(System.IFormatProvider, object)", file="XmlNodeConverter.cs", label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47"];
m11_323 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1012-1012"];
m11_324 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="IXmlNode jsonArrayAttribute = (node.Attributes != null)\r\n                ? node.Attributes.SingleOrDefault(a => a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri)\r\n                : null", span="1014-1016"];
m11_325 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return (jsonArrayAttribute != null && XmlConvert.ToBoolean(jsonArrayAttribute.Value));", span="1018-1018"];
m11_326 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1012-1012"];
m11_72 [cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193"];
m11_73 [cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="XmlNodeConverter.cs", label="_documentType = documentType", span="196-196"];
m11_74 [cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193"];
m11_160 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="513-513"];
m11_161 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="515-515"];
m11_162 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="513-513"];
m11_23 [cluster="Unk.CreateSignificantWhitespace", file="XmlNodeConverter.cs", label="Entry Unk.CreateSignificantWhitespace", span=""];
m11_41 [cluster="XmlElementWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlElementWrapper.cstr", span=""];
m11_296 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="980-980"];
m11_297 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="node.NodeType", span="982-982"];
m11_299 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="node.NamespaceUri == JsonNamespaceUri", span="985-985"];
m11_300 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''$'' + node.LocalName;", span="986-986"];
m11_301 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''@'' + ResolveFullName(node, manager);", span="988-988"];
m11_307 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ResolveFullName(node, manager);", span="994-994"];
m11_309 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''?'' + ResolveFullName(node, manager);", span="996-996"];
m11_311 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return ''!'' + ResolveFullName(node, manager);", span="998-998"];
m11_320 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="1008-1008"];
m11_298 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Attribute", span="984-984"];
m11_302 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.CDATA", span="989-989"];
m11_304 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Comment", span="991-991"];
m11_306 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="993-993"];
m11_308 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.ProcessingInstruction", span="995-995"];
m11_310 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentType", span="997-997"];
m11_312 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="999-999"];
m11_314 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.SignificantWhitespace", span="1001-1001"];
m11_316 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Text", span="1003-1003"];
m11_318 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="XmlNodeType.Whitespace", span="1005-1005"];
m11_303 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return CDataName;", span="990-990"];
m11_305 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return CommentName;", span="992-992"];
m11_313 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return DeclarationName;", span="1000-1000"];
m11_315 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return SignificantWhitespaceName;", span="1002-1002"];
m11_317 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return TextName;", span="1004-1004"];
m11_319 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return WhitespaceName;", span="1006-1006"];
m11_321 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="980-980"];
m11_496 [cluster="Newtonsoft.Json.JsonReader.Read()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365"];
m11_165 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="518-518"];
m11_166 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="return new XElementWrapper(new XElement(elementName));", span="520-520"];
m11_167 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="518-518"];
m11_164 [cluster="XProcessingInstruction.cstr", file="XmlNodeConverter.cs", label="Entry XProcessingInstruction.cstr", span=""];
m11_459 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236"];
m11_460 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.Null", span="1238-1238"];
m11_465 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="typeof(XObject).IsAssignableFrom(objectType)", span="1246-1246"];
m11_466 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType != typeof(XDocument) && objectType != typeof(XElement)", span="1248-1248"];
m11_471 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1257-1257"];
m11_472 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType != typeof(XmlDocument)", span="1259-1259"];
m11_478 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1269-1269"];
m11_479 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.StartObject", span="1271-1271"];
m11_482 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1278-1278"];
m11_483 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="reader.Read()", span="1282-1282"];
m11_484 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="DeserializeNode(reader, document, manager, rootNode)", span="1283-1283"];
m11_485 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="objectType == typeof(XElement)", span="1287-1287"];
m11_461 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return null;", span="1239-1239"];
m11_462 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1241-1241"];
m11_463 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlDocument document = null", span="1242-1242"];
m11_464 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlNode rootNode = null", span="1243-1243"];
m11_477 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document == null || rootNode == null", span="1268-1268"];
m11_486 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1289-1289"];
m11_489 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return document.WrappedNode;", span="1296-1296"];
m11_467 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1249-1249"];
m11_468 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XDocument d = new XDocument()", span="1251-1251"];
m11_469 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="document = new XDocumentWrapper(d)", span="1252-1252"];
m11_470 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="rootNode = document", span="1253-1253"];
m11_473 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1260-1260"];
m11_474 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlDocument d = new XmlDocument()", span="1262-1262"];
m11_475 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="XmlNodeConverter.cs", label="1: document = new XmlDocumentWrapper(d)", span="1263-1263"];
m11_476 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", color=green, community=0, file="XmlNodeConverter.cs", label="0: rootNode = document", span="1264-1264"];
m11_480 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1272-1272"];
m11_481 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1274-1274"];
m11_487 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="element.Remove()", span="1290-1290"];
m11_488 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="return element;", span="1292-1292"];
m11_490 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236"];
m11_555 [cluster="Unk.RemoveNamespace", file="XmlNodeConverter.cs", label="Entry Unk.RemoveNamespace", span=""];
m11_142 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="488-488"];
m11_143 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XCData(data));", span="490-490"];
m11_144 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="488-488"];
m11_454 [cluster="Unk.PopScope", file="XmlNodeConverter.cs", label="Entry Unk.PopScope", span=""];
m11_255 [cluster="XmlNamespaceManager.cstr", file="XmlNodeConverter.cs", label="Entry XmlNamespaceManager.cstr", span=""];
m11_284 [cluster="System.Collections.Generic.List<T>.Add(T)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_455 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1237-1237"];
m11_176 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="529-529"];
m11_177 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="return new XAttributeWrapper(new XAttribute(name, value));", span="531-531"];
m11_178 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="529-529"];
m11_451 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810"];
m11_362 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_522 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1456-1456"];
m11_585 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1458-1458"];
m11_586 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1460-1460"];
m11_587 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(nestedArrayElement)", span="1462-1462"];
m11_589 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1465-1465"];
m11_590 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1467-1467"];
m11_593 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1473-1473"];
m11_595 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement arrayElement = nestedArrayElement.ChildNodes.OfType<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1478-1478"];
m11_596 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1479-1479"];
m11_588 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="int count = 0", span="1464-1464"];
m11_591 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="count++", span="1468-1468"];
m11_594 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="count == 1 && WriteArrayAttribute", span="1476-1476"];
m11_592 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=WriteArrayAttribute, span="1471-1471"];
m11_597 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1456-1456"];
m11_125 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="388-388"];
m11_126 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Declaration = declaration", span="391-391"];
m11_127 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="388-388"];
m11_365 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m11_119 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="363-363"];
m11_120 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="363-363"];
m11_136 [cluster="XObjectWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XObjectWrapper.cstr", span=""];
m11_163 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="633-633"];
m11_197 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="633-633"];
m11_146 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="493-493"];
m11_147 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XText(text));", span="495-495"];
m11_148 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="493-493"];
m11_578 [cluster="Unk.ToString", file="XmlNodeConverter.cs", label="Entry Unk.ToString", span=""];
m11_649 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1731-1731"];
m11_728 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="1733-1733"];
m11_729 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName.Length == 5", span="1735-1735"];
m11_732 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="attributeName[5] == ':'", span="1740-1740"];
m11_733 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="1742-1742"];
m11_735 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = null", span="1746-1746"];
m11_730 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="prefix = string.Empty", span="1737-1737"];
m11_731 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="1738-1738"];
m11_734 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return true;", span="1743-1743"];
m11_736 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="return false;", span="1747-1747"];
m11_737 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1731-1731"];
m11_12 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="65-65"];
m11_13 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="67-67"];
m11_14 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="65-65"];
m11_180 [cluster="XAttribute.cstr", file="XmlNodeConverter.cs", label="Entry XAttribute.cstr", span=""];
m11_367 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m11_193 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="573-573"];
m11_194 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="573-573"];
m11_105 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="335-335"];
m11_106 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="335-335"];
m11_111 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="338-338"];
m11_112 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="338-338"];
m11_219 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="723-723"];
m11_225 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="_xmlObject = xmlObject", span="725-725"];
m11_226 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="723-723"];
m11_745 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1763-1763"];
m11_746 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="typeof(XObject).IsAssignableFrom(valueType)", span="1766-1766"];
m11_748 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="typeof(XmlNode).IsAssignableFrom(valueType)", span="1770-1770"];
m11_747 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return true;", span="1767-1767"];
m11_749 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return true;", span="1771-1771"];
m11_750 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="return false;", span="1774-1774"];
m11_751 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1763-1763"];
m11_52 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="113-113"];
m11_53 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceUri))", span="115-115"];
m11_54 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="attribute.Value = value", span="116-116"];
m11_55 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="return attribute;", span="118-118"];
m11_56 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="113-113"];
m11_491 [cluster="System.Type.IsAssignableFrom(System.Type)", file="XmlNodeConverter.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m11_138 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="483-483"];
m11_139 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="return new XObjectWrapper(new XText(text));", span="485-485"];
m11_140 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="483-483"];
m11_598 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1483-1483"];
m11_604 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1485-1485"];
m11_605 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element is XElementWrapper", span="1489-1489"];
m11_606 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1491-1491"];
m11_607 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1493-1493"];
m11_608 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1483-1483"];
m11_742 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1752-1752"];
m11_237 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="835-835"];
m11_238 [cluster="lambda expression", file="XmlNodeConverter.cs", label="new XAttributeWrapper(a)", span="835-835"];
m11_239 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="835-835"];
m11_329 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1015-1015"];
m11_330 [cluster="lambda expression", file="XmlNodeConverter.cs", label="a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri", span="1015-1015"];
m11_331 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1015-1015"];
m11_457 [cluster="lambda expression", file="XmlNodeConverter.cs", label="n.LocalName == node.LocalName", span="1089-1089"];
m11_456 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1089-1089"];
m11_458 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1089-1089"];
m11_602 [cluster="lambda expression", file="XmlNodeConverter.cs", label="n.LocalName == propertyName", span="1478-1478"];
m11_601 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1478-1478"];
m11_603 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1478-1478"];
m11_726 [cluster="lambda expression", file="XmlNodeConverter.cs", label="n.LocalName == propertyName", span="1695-1695"];
m11_725 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Entry lambda expression", span="1695-1695"];
m11_727 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1695-1695"];
m11_743 [cluster="lambda expression", file="XmlNodeConverter.cs", label="a.NamespaceUri != JsonNamespaceUri", span="1752-1752"];
m11_744 [cluster="lambda expression", file="XmlNodeConverter.cs", label="Exit lambda expression", span="1752-1752"];
m11_493 [cluster="XDocument.cstr", file="XmlNodeConverter.cs", label="Entry XDocument.cstr", span=""];
m11_295 [cluster="string.IsNullOrEmpty(string)", file="XmlNodeConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_131 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="460-460"];
m11_132 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="460-460"];
m11_450 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m11_123 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="376-376"];
m11_124 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="376-376"];
m11_43 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="100-100"];
m11_44 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceUri));", span="102-102"];
m11_45 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="100-100"];
m11_29 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="85-85"];
m11_30 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="return new XmlDocumentTypeWrapper(_document.CreateDocumentType(name, publicId, systemId, null));", span="87-87"];
m11_31 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="85-85"];
m11_42 [cluster="Unk.CreateElement", file="XmlNodeConverter.cs", label="Entry Unk.CreateElement", span=""];
m11_121 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="364-364"];
m11_122 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="364-364"];
m11_258 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m11_363 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m11_230 [cluster="System.InvalidOperationException.InvalidOperationException()", file="XmlNodeConverter.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m11_600 [cluster="Unk.Single", file="XmlNodeConverter.cs", label="Entry Unk.Single", span=""];
m11_283 [cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverter.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_33 [cluster="Unk.CreateDocumentType", file="XmlNodeConverter.cs", label="Entry Unk.CreateDocumentType", span=""];
m11_27 [cluster="XmlDeclarationWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlDeclarationWrapper.cstr", span=""];
m11_650 [cluster="System.Nullable<T>.GetValueOrDefault()", file="XmlNodeConverter.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m11_32 [cluster="XmlDocumentTypeWrapper.cstr", file="XmlNodeConverter.cs", label="Entry XmlDocumentTypeWrapper.cstr", span=""];
m11_99 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="332-332"];
m11_100 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="332-332"];
m11_198 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="659-659"];
m11_199 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="659-659"];
m11_366 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m11_65 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150"];
m11_66 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="return _element.GetPrefixOfNamespace(namespaceUri);", span="152-152"];
m11_67 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150"];
m11_244 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="906-906"];
m11_245 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="IXmlNode node = WrapXml(value)", span="908-908"];
m11_249 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="914-914"];
m11_250 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node, manager, !OmitRootObject)", span="916-916"];
m11_252 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="919-919"];
m11_246 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="910-910"];
m11_247 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="PushParentNamespaces(node, manager)", span="911-911"];
m11_248 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!OmitRootObject", span="913-913"];
m11_251 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="!OmitRootObject", span="918-918"];
m11_253 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="906-906"];
m11_155 [cluster="XDeclaration.cstr", file="XmlNodeConverter.cs", label="Entry XDeclaration.cstr", span=""];
m11_169 [cluster="XElement.cstr", file="XmlNodeConverter.cs", label="Entry XElement.cstr", span=""];
m11_38 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="95-95"];
m11_39 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="97-97"];
m11_40 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="95-95"];
m11_233 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="827-827"];
m11_234 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="829-829"];
m11_235 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Element.Add(wrapper.WrappedNode)", span="830-830"];
m11_236 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="827-827"];
m11_256 [cluster="NameTable.cstr", file="XmlNodeConverter.cs", label="Entry NameTable.cstr", span=""];
m11_137 [cluster="XComment.cstr", file="XmlNodeConverter.cs", label="Entry XComment.cstr", span=""];
m11_15 [cluster="Unk.CreateCDataSection", file="XmlNodeConverter.cs", label="Entry Unk.CreateCDataSection", span=""];
m11_254 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="922-922"];
m11_261 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="value is XObject", span="925-925"];
m11_262 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="return XContainerWrapper.WrapNode((XObject)value);", span="926-926"];
m11_263 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="value is XmlNode", span="929-929"];
m11_264 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper((XmlNode)value);", span="930-930"];
m11_265 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="throw new ArgumentException(''Value must be an XML object.'', ''value'');", span="933-933"];
m11_266 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="922-922"];
m11_16 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="70-70"];
m11_17 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="72-72"];
m11_18 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="70-70"];
m11_37 [cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverter.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m11_260 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m11_46 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="105-105"];
m11_47 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="107-107"];
m11_48 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="attribute.Value = value", span="108-108"];
m11_49 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="return attribute;", span="110-110"];
m11_50 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="105-105"];
m11_101 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="333-333"];
m11_102 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="333-333"];
m11_115 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="340-340"];
m11_116 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="340-340"];
m11_175 [cluster="Unk.Get", file="XmlNodeConverter.cs", label="Entry Unk.Get", span=""];
m11_553 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1662-1662"];
m11_694 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string ns = string.IsNullOrEmpty(elementPrefix) ? manager.DefaultNamespace : manager.LookupNamespace(elementPrefix)", span="1664-1664"];
m11_695 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlElement element = (!string.IsNullOrEmpty(ns)) ? document.CreateElement(elementName, ns) : document.CreateElement(elementName)", span="1666-1666"];
m11_696 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return element;", span="1668-1668"];
m11_697 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1662-1662"];
m11_68 [cluster="Unk.GetPrefixOfNamespace", file="XmlNodeConverter.cs", label="Entry Unk.GetPrefixOfNamespace", span=""];
m11_498 [cluster="Unk.Remove", file="XmlNodeConverter.cs", label="Entry Unk.Remove", span=""];
m11_88 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="310-310"];
m11_89 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper) newChild", span="312-312"];
m11_92 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return newChild;", span="316-316"];
m11_90 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_node.AppendChild(xmlNodeWrapper._node)", span="313-313"];
m11_91 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="_childNodes = null", span="314-314"];
m11_93 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="310-310"];
m11_259 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1080-1080"];
m11_368 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NodeType", span="1082-1082"];
m11_371 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="1086-1086"];
m11_373 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IsArray(node) && node.ChildNodes.All(n => n.LocalName == node.LocalName) && node.ChildNodes.Count > 0", span="1089-1089"];
m11_374 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, false)", span="1091-1091"];
m11_375 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="1095-1095"];
m11_376 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.Attributes", span="1097-1097"];
m11_380 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.AddNamespace(namespacePrefix, namespaceUri)", span="1106-1106"];
m11_381 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1110-1110"];
m11_382 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1111-1111"];
m11_383 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!ValueAttributes(node.Attributes).Any() && node.ChildNodes.Count == 1\r\n                            && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="1113-1114"];
m11_384 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.ChildNodes[0].Value)", span="1117-1117"];
m11_385 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="1119-1119"];
m11_386 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlElement element = (IXmlElement)node", span="1121-1121"];
m11_388 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteNull()", span="1125-1125"];
m11_389 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(string.Empty)", span="1127-1127"];
m11_390 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1131-1131"];
m11_392 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i < node.Attributes.Count", span="1133-1133"];
m11_393 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1135-1135"];
m11_395 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="SerializeGroupedNodes(writer, node, manager, true)", span="1138-1138"];
m11_396 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1140-1140"];
m11_397 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="manager.PopScope()", span="1143-1143"];
m11_399 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1148-1148"];
m11_400 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteComment(node.Value)", span="1149-1149"];
m11_407 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1157-1157"];
m11_409 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.NamespaceUri == JsonNamespaceUri", span="1160-1160"];
m11_410 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="node.LocalName == ''Array''", span="1162-1162"];
m11_412 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label=writePropertyName, span="1166-1166"];
m11_413 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1167-1167"];
m11_414 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(node.Value)", span="1168-1168"];
m11_416 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1171-1171"];
m11_417 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1172-1172"];
m11_418 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1173-1173"];
m11_420 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@version'')", span="1177-1177"];
m11_421 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Version)", span="1178-1178"];
m11_423 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@encoding'')", span="1182-1182"];
m11_424 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Encoding)", span="1183-1183"];
m11_426 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@standalone'')", span="1187-1187"];
m11_427 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(declaration.Standalone)", span="1188-1188"];
m11_428 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1191-1191"];
m11_430 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="IXmlDocumentType documentType = (IXmlDocumentType)node", span="1194-1194"];
m11_431 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1195-1195"];
m11_432 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteStartObject()", span="1196-1196"];
m11_434 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@name'')", span="1200-1200"];
m11_435 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.Name)", span="1201-1201"];
m11_437 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@public'')", span="1205-1205"];
m11_438 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.Public)", span="1206-1206"];
m11_440 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@system'')", span="1210-1210"];
m11_441 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.System)", span="1211-1211"];
m11_443 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WritePropertyName(''@internalSubset'')", span="1215-1215"];
m11_444 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteValue(documentType.InternalSubset)", span="1216-1216"];
m11_445 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="writer.WriteEndObject()", span="1219-1219"];
m11_446 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1222-1222"];
m11_369 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Document", span="1084-1084"];
m11_372 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Element", span="1088-1088"];
m11_398 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Comment", span="1147-1147"];
m11_401 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Attribute", span="1151-1151"];
m11_415 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.XmlDeclaration", span="1170-1170"];
m11_429 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentType", span="1193-1193"];
m11_370 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.DocumentFragment", span="1085-1085"];
m11_377 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/''", span="1099-1099"];
m11_378 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string namespacePrefix = (attribute.LocalName != ''xmlns'')\r\n                                    ? attribute.LocalName\r\n                                    : string.Empty", span="1101-1103"];
m11_379 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="string namespaceUri = attribute.Value", span="1104-1104"];
m11_387 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="element.IsEmpty", span="1124-1124"];
m11_391 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="int i = 0", span="1133-1133"];
m11_394 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="i++", span="1133-1133"];
m11_402 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Text", span="1152-1152"];
m11_403 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.CDATA", span="1153-1153"];
m11_404 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.ProcessingInstruction", span="1154-1154"];
m11_405 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.Whitespace", span="1155-1155"];
m11_406 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="XmlNodeType.SignificantWhitespace", span="1156-1156"];
m11_408 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="return;", span="1158-1158"];
m11_411 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="return;", span="1163-1163"];
m11_419 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Version)", span="1175-1175"];
m11_422 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Encoding)", span="1180-1180"];
m11_425 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(declaration.Standalone)", span="1185-1185"];
m11_433 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.Name)", span="1198-1198"];
m11_436 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.Public)", span="1203-1203"];
m11_439 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.System)", span="1208-1208"];
m11_442 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(documentType.InternalSubset)", span="1213-1213"];
m11_447 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1080-1080"];
m11_257 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="936-936"];
m11_268 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="List<IXmlNode> parentElements = null", span="938-938"];
m11_269 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IXmlNode parent = node", span="940-940"];
m11_278 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.PushScope()", span="958-958"];
m11_281 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="962-962"];
m11_272 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements == null", span="945-945"];
m11_274 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements.Add(parent)", span="948-948"];
m11_275 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements != null", span="952-952"];
m11_276 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements.Reverse()", span="954-954"];
m11_277 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=parentElements, span="956-956"];
m11_270 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="(parent = parent.ParentNode) != null", span="941-941"];
m11_271 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parent.NodeType == XmlNodeType.Element", span="943-943"];
m11_273 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElements = new List<IXmlNode>()", span="946-946"];
m11_279 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="parentElement.Attributes", span="959-959"];
m11_280 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="961-961"];
m11_282 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="936-936"];
m11_552 [cluster="Unk.LookupNamespace", file="XmlNodeConverter.cs", label="Entry Unk.LookupNamespace", span=""];
m11_548 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1499-1499"];
m11_609 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1501-1501"];
m11_612 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType != JsonToken.String\r\n                && reader.TokenType != JsonToken.Null\r\n                && reader.TokenType != JsonToken.Boolean\r\n                && reader.TokenType != JsonToken.Integer\r\n                && reader.TokenType != JsonToken.Float\r\n                && reader.TokenType != JsonToken.Date\r\n                && reader.TokenType != JsonToken.StartConstructor", span="1506-1512"];
m11_613 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!finishedAttributes && !finishedElement && reader.Read()", span="1515-1515"];
m11_614 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.TokenType", span="1517-1517"];
m11_616 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeName = reader.Value.ToString()", span="1520-1520"];
m11_623 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read()", span="1531-1531"];
m11_624 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeValue = ConvertTokenToXmlValue(reader)", span="1532-1532"];
m11_628 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1538-1538"];
m11_631 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="reader.Read()", span="1543-1543"];
m11_632 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeValue = reader.Value.ToString()", span="1544-1544"];
m11_633 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1548-1548"];
m11_636 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.LookupNamespace(''json'' + i) != null", span="1553-1553"];
m11_640 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1560-1560"];
m11_646 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="1581-1581"];
m11_610 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="bool finishedAttributes = false", span="1502-1502"];
m11_625 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(attributeName, attributeValue)", span="1533-1533"];
m11_639 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1559-1559"];
m11_641 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1563-1563"];
m11_647 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="return attributeNameValues;", span="1586-1586"];
m11_611 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="bool finishedElement = false", span="1503-1503"];
m11_615 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonToken.PropertyName", span="1519-1519"];
m11_644 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="1577-1577"];
m11_617 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="!string.IsNullOrEmpty(attributeName)", span="1522-1522"];
m11_618 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="char firstChar = attributeName[0]", span="1524-1524"];
m11_622 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeName = attributeName.Substring(1)", span="1530-1530"];
m11_643 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1573-1573"];
m11_619 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string attributeValue", span="1525-1525"];
m11_620 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label=firstChar, span="1527-1527"];
m11_621 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="'@'", span="1529-1529"];
m11_629 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="'$'", span="1541-1541"];
m11_642 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedAttributes = true", span="1566-1566"];
m11_627 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1536-1536"];
m11_630 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="attributeName = attributeName.Substring(1)", span="1542-1542"];
m11_626 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="string namespacePrefix", span="1535-1535"];
m11_634 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="jsonPrefix == null", span="1549-1549"];
m11_635 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="int? i = null", span="1552-1552"];
m11_637 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="i = i.GetValueOrDefault() + 1", span="1555-1555"];
m11_638 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="jsonPrefix = ''json'' + i", span="1557-1557"];
m11_645 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="finishedElement = true", span="1578-1578"];
m11_648 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1499-1499"];
m11_327 [cluster="Unk.SingleOrDefault", file="XmlNodeConverter.cs", label="Entry Unk.SingleOrDefault", span=""];
m11_294 [cluster="Unk.LookupPrefix", file="XmlNodeConverter.cs", label="Entry Unk.LookupPrefix", span=""];
m11_497 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1671-1671"];
m11_698 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType", span="1675-1675"];
m11_700 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1678-1678"];
m11_702 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string propertyName = reader.Value.ToString()", span="1681-1681"];
m11_703 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read()", span="1682-1682"];
m11_704 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.StartArray", span="1684-1684"];
m11_706 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1687-1687"];
m11_707 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1689-1689"];
m11_710 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="IXmlElement arrayElement = currentNode.ChildNodes.OfType<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1695-1695"];
m11_711 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1696-1696"];
m11_712 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1701-1701"];
m11_714 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="string constructorName = reader.Value.ToString()", span="1705-1705"];
m11_715 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="1707-1707"];
m11_716 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="1709-1709"];
m11_718 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="1713-1713"];
m11_722 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="1719-1719"];
m11_723 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="1721-1721"];
m11_699 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.PropertyName", span="1677-1677"];
m11_713 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.StartConstructor", span="1704-1704"];
m11_717 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.Comment", span="1712-1712"];
m11_719 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndObject", span="1715-1715"];
m11_701 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", span="1679-1679"];
m11_705 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="int count = 0", span="1686-1686"];
m11_708 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="count++", span="1690-1690"];
m11_709 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="count == 1 && WriteArrayAttribute", span="1693-1693"];
m11_720 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="JsonToken.EndArray", span="1716-1716"];
m11_721 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="return;", span="1717-1717"];
m11_724 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="XmlNodeConverter.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1671-1671"];
m11_286 [cluster="Unk.PushScope", file="XmlNodeConverter.cs", label="Entry Unk.PushScope", span=""];
m11_752 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span=""];
m11_753 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlElementWrapper", span=""];
m11_754 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span=""];
m11_755 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", span=""];
m11_756 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlNodeWrapper", span=""];
m11_757 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDeclarationWrapper", span=""];
m11_758 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDocumentTypeWrapper", span=""];
m11_759 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XDocumentWrapper", span=""];
m11_760 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XContainerWrapper", span=""];
m11_761 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XObjectWrapper", span=""];
m11_762 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XElementWrapper", span=""];
m11_763 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
m11_764 [file="XmlNodeConverter.cs", label="Newtonsoft.Json.Converters.IXmlNode", span=""];
m11_765 [file="XmlNodeConverter.cs", label=string, span=""];
m11_766 [file="XmlNodeConverter.cs", label=propertyName, span=""];
m12_111 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="187-187"];
m12_356 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="564-564"];
m12_357 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="565-565"];
m12_358 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="567-567"];
m12_361 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1.1m, reader.Value)", span="570-570"];
m12_359 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", span="568-568"];
m12_360 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", span="569-569"];
m12_363 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", span="574-574"];
m12_362 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", span="553-553"];
m12_364 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Name'''':''''blah''''}''", span="576-576"];
m12_365 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="578-578"];
m12_534 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="Newtonsoft.Json.JsonTextReader reader = new Newtonsoft.Json.JsonTextReader(new System.IO.StreamReader(json))", span="1588-1588"];
m12_536 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="reader.Read() && reader.TokenType != JsonToken.Comment", span="1591-1591"];
m12_535 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="XmlDocument doc = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="1590-1590"];
m12_537 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="throw new JsonSerializationException(''Additional text found in JSON string after finishing deserializing object.'');", span="1592-1592"];
m12_538 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JsonBodyToSoapXml(System.IO.Stream, System.IO.Stream)", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(xml)", span="1593-1593"];
m12_529 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_Null_Success()", file="XmlNodeConverterTest.cs", label="JValue n = JValue.CreateNull()", span="857-857"];
m12_255 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFromEmptyString()", file="XmlNodeConverterTest.cs", label="JsonReader jsonReader = new JsonTextReader(textReader)", span="398-398"];
m12_450 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="string output = JsonConvert.SerializeObject(product, new IsoDateTimeConverter())", span="1362-1362"];
m12_460 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", span="1394-1394"];
m12_453 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="string output2 = JsonConvert.SerializeXmlNode(xmlProduct.DocumentElement, Formatting.Indented)", span="1373-1373"];
m12_455 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", span="1353-1353"];
m12_457 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m12_459 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="523-523"];
m12_461 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="TestComplexArrayClass o = new TestComplexArrayClass\r\n            {\r\n                Name = ''Hi'',\r\n                Products = new List<Product>\r\n                {\r\n                    new Product { Name = ''First'' }\r\n                }\r\n            }", span="1396-1403"];
m12_463 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''test'', true)", span="1407-1407"];
m12_452 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<product>\r\n  <Name>Apple</Name>\r\n  <ExpiryDate>2008-12-28T00:00:00Z</ExpiryDate>\r\n  <Price>3.99</Price>\r\n  <Sizes json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>Small</Sizes>\r\n</product>'', IndentXml(xmlProduct.InnerXml))", span="1366-1371"];
m12_454 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''product'''': {\r\n    ''''Name'''': ''''Apple'''',\r\n    ''''ExpiryDate'''': ''''2008-12-28T00:00:00Z'''',\r\n    ''''Price'''': ''''3.99'''',\r\n    ''''Sizes'''': [\r\n      ''''Small''''\r\n    ]\r\n  }\r\n}'', output2)", span="1375-1384"];
m12_456 [cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29"];
m12_458 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m12_462 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="string output = JsonConvert.SerializeObject(o, new IsoDateTimeConverter())", span="1405-1405"];
m12_451 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="XmlDocument xmlProduct = JsonConvert.DeserializeXmlNode(output, ''product'', true)", span="1364-1364"];
m12_464 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ComplexSingleItemArrayPropertySerialization()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<test>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>'', IndentXml(xmlProduct.InnerXml))", span="1409-1417"];
m12_528 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_Null_Success()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_Null_Success()", span="855-855"];
m12_531 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_Null_Success()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, reader.ReadAsDouble())", span="861-861"];
m12_532 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_Null_Success()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_Null_Success()", span="855-855"];
m12_533 [cluster="Newtonsoft.Json.Linq.JValue.CreateNull()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.CreateNull()", span="588-588"];
m12_539 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m12_540 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_BigInteger_Success()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_BigInteger_Success()", span="876-876"];
m12_220 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="508-508"];
m12_598 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var json1 = JsonConvert.SerializeXNode(xml)", span="2157-2157"];
m12_600 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var equals = XElement.DeepEquals(xmlBack, xml)", span="2160-2160"];
m12_599 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="var xmlBack = JsonConvert.DeserializeObject<XElement>(json1)", span="2158-2158"];
m12_601 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(equals)", span="2161-2161"];
m12_602 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXElementWithNamespaceInChildrenRootDontHaveNameSpace()", span="2147-2147"];
m12_355 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="562-562"];
m12_47 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0)), jsonReader.Value)", span="114-114"];
m12_82 [cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38"];
m12_465 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_InvalidToken()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_InvalidToken()", span="743-743"];
m12_466 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_InvalidToken()", file="XmlNodeConverterTest.cs", label="JArray a = new JArray\r\n            {\r\n                1, 2\r\n            }", span="745-748"];
m12_467 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_InvalidToken()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(a)", span="750-750"];
m12_468 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_InvalidToken()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.ReadAsDouble(); },\r\n                ''Error reading double. Unexpected token: StartArray. Path ''.'')", span="752-754"];
m12_268 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SingleTextNode()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n			<root>\r\n			  <person id=''''1''''>\r\n	  			<name>Alan</name>\r\n		  		<url>http://www.google.com</url>\r\n			  </person>\r\n			  <person id=''''2''''>\r\n			  	<name>Louis</name>\r\n				  <url>http://www.yahoo.com</url>\r\n			  </person>\r\n			</root>''", span="683-693"];
m12_517 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="670-670"];
m12_519 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="MemoryStream ms = new MemoryStream(System.Text.Encoding.UTF8.GetBytes(@''{root:{''''@booleanType'''':true}}''))", span="1573-1573"];
m12_518 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", span="1571-1571"];
m12_520 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="MemoryStream xml = new MemoryStream()", span="1574-1574"];
m12_521 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializingBooleanValues()", file="XmlNodeConverterTest.cs", label="JsonBodyToSoapXml(ms, xml)", span="1576-1576"];
m12_578 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var json1 = JsonConvert.SerializeObject(xml)", span="2110-2110"];
m12_580 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var xml1 = new XmlDocument()", span="2115-2115"];
m12_579 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''@xmlns'''':''''http://www.example.com/ns'''',''''a'''':null,''''bns:b'''':{''''@xmlns:bns'''':''''http://www.example.com/ns''''},''''c'''':null}}'', json1)", span="2112-2112"];
m12_581 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="xml1.LoadXml(xmlString)", span="2116-2116"];
m12_582 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var json2 = JsonConvert.SerializeObject(xml1)", span="2118-2118"];
m12_527 [cluster="System.IO.MemoryStream.MemoryStream()", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m12_112 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="187-187"];
m12_469 [cluster="System.Collections.Generic.List<T>.List()", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m12_547 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string expectedJson = @''{\r\n  ''''Grid'''': {\r\n    ''''@xmlns'''': ''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''',\r\n    ''''@xmlns:x'''': ''''http://schemas.microsoft.com/winfx/2006/xaml'''',\r\n    ''''@xmlns:toolkit'''': ''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''',\r\n    ''''@Style'''': ''''{StaticResource trimFormGrid}'''',\r\n    ''''@x:Name'''': ''''TrimObjectForm'''',\r\n    ''''Grid.ColumnDefinitions'''': {\r\n      ''''ColumnDefinition'''': [\r\n        {\r\n          ''''@Width'''': ''''63*''''\r\n        },\r\n        {\r\n          ''''@Width'''': ''''320*''''\r\n        }\r\n      ]\r\n    },\r\n    ''''Grid.RowDefinitions'''': {\r\n      ''''@xmlns'''': '''''''',\r\n      ''''RowDefinition'''': [\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null,\r\n        null\r\n      ]\r\n    },\r\n    ''''TextBox'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordTypedTitle'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordExternalReference'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAuthor'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordContainer'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordIsEnclosed'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_TB}'''',\r\n        ''''@Text'''': ''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordAssignee'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ],\r\n    ''''toolkit:DatePicker'''': [\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateCreated'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''2''''\r\n      },\r\n      {\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_DP}'''',\r\n        ''''@Value'''': ''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''',\r\n        ''''@Name'''': ''''RecordDateDue'''',\r\n        ''''@Grid.Column'''': ''''1'''',\r\n        ''''@Grid.Row'''': ''''3''''\r\n      }\r\n    ],\r\n    ''''TextBlock'''': [\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Title (Free Text Part)'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''0'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''External ID'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''1'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Created'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''2'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Date Due'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''3'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Author'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''4'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Container'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''5'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Enclosed?'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''6'''',\r\n        ''''@xmlns'''': ''''''''\r\n      },\r\n      {\r\n        ''''@Grid.Column'''': ''''0'''',\r\n        ''''@Text'''': ''''Assignee'''',\r\n        ''''@Style'''': ''''{StaticResource trimFormGrid_LBL}'''',\r\n        ''''@Grid.Row'''': ''''7'''',\r\n        ''''@xmlns'''': ''''''''\r\n      }\r\n    ]\r\n  }\r\n}''", span="1639-1794"];
m12_549 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="XNode node = JsonConvert.DeserializeXNode(json)", span="1798-1798"];
m12_548 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expectedJson, json)", span="1796-1796"];
m12_550 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string xaml2 = node.ToString()", span="1800-1800"];
m12_551 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="1802-1833"];
m12_249 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string formattedXml = GetIndentedInnerXml(doc)", span="656-656"];
m12_515 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTime_DateTimeOffset()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTime_DateTimeOffset()", span="824-824"];
m12_511 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<root><Int16>1</Int16><Float>2</Float><Int32>3</Int32></root>'', value.InnerXml)", span="1566-1566"];
m12_513 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="XmlNodeConverterTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_512 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1557-1557"];
m12_514 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="343-343"];
m12_83 [cluster="Unk.IsFalse", file="XmlNodeConverterTest.cs", label="Entry Unk.IsFalse", span=""];
m12_11 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="string linqJson = JsonConvert.SerializeXNode(xNode, Formatting.Indented)", span="75-75"];
m12_123 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="207-207"];
m12_67 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Test2'', jsonReader.Value)", span="143-143"];
m12_530 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_Null_Success()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(n)", span="859-859"];
m12_8 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = new XAttribute(XName.Get(attribute.LocalName, attribute.NamespaceURI), attribute.Value)", span="67-67"];
m12_412 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="651-651"];
m12_482 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1452-1452"];
m12_484 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="XmlDocument d = new XmlDocument()", span="1465-1465"];
m12_483 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="string xml = @''<test>\r\n  <Name>Hi</Name>\r\n  <Name>Hi</Name>\r\n  <Products json:Array=''''true'''' xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n    <Name>First</Name>\r\n    <ExpiryDate>2000-01-01T00:00:00Z</ExpiryDate>\r\n    <Price>0</Price>\r\n    <Sizes />\r\n  </Products>\r\n</test>''", span="1454-1463"];
m12_485 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="d.LoadXml(xml)", span="1466-1466"];
m12_486 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="string output = JsonConvert.SerializeXmlNode(d, Formatting.Indented, true)", span="1468-1468"];
m12_567 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string expectedXaml = @''<Grid xmlns=''''http://schemas.microsoft.com/winfx/2006/xaml/presentation'''' xmlns:x=''''http://schemas.microsoft.com/winfx/2006/xaml'''' xmlns:toolkit=''''clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit'''' Style=''''{StaticResource trimFormGrid}'''' x:Name=''''TrimObjectForm''''>\r\n  <Grid.ColumnDefinitions>\r\n    <ColumnDefinition Width=''''63*'''' />\r\n    <ColumnDefinition Width=''''320*'''' />\r\n  </Grid.ColumnDefinitions>\r\n  <Grid.RowDefinitions xmlns=''''''''>\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n    <RowDefinition />\r\n  </Grid.RowDefinitions>\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding TypedTitle, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordTypedTitle'''' Grid.Column=''''1'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding ExternalReference, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordExternalReference'''' Grid.Column=''''1'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Author, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAuthor'''' Grid.Column=''''1'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Container, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordContainer'''' Grid.Column=''''1'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding IsEnclosed, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordIsEnclosed'''' Grid.Column=''''1'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBox Style=''''{StaticResource trimFormGrid_TB}'''' Text=''''{Binding Assignee, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordAssignee'''' Grid.Column=''''1'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateCreated, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateCreated'''' Grid.Column=''''1'''' Grid.Row=''''2'''' />\r\n  <toolkit:DatePicker Style=''''{StaticResource trimFormGrid_DP}'''' Value=''''{Binding DateDue, Converter={StaticResource trimPropertyConverter}}'''' Name=''''RecordDateDue'''' Grid.Column=''''1'''' Grid.Row=''''3'''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Title (Free Text Part)'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''0'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''External ID'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''1'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Created'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''2'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Date Due'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''3'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Author'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''4'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Container'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''5'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Enclosed?'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''6'''' xmlns='''''''' />\r\n  <TextBlock Grid.Column=''''0'''' Text=''''Assignee'''' Style=''''{StaticResource trimFormGrid_LBL}'''' Grid.Row=''''7'''' xmlns='''''''' />\r\n</Grid>''", span="2052-2083"];
m12_569 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", span="1840-1840"];
m12_568 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expectedXaml, xaml2)", span="2085-2085"];
m12_570 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2089-2089"];
m12_571 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="string json = @''{''''item'''': {''''@action'''': ''''update'''', ''''@itemid'''': ''''1'''', ''''elements'''': [{''''@action'''': ''''none'''', ''''@id'''': ''''2''''},{''''@action'''': ''''none'''', ''''@id'''': ''''3''''}],''''@description'''': ''''temp''''}}''", span="2091-2091"];
m12_124 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(2012, 1, 24, 3, 50, 0, TimeSpan.Zero), reader.Value)", span="208-208"];
m12_125 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", span="191-191"];
m12_126 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", span="213-213"];
m12_127 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="215-221"];
m12_128 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(input)", span="223-223"];
m12_129 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="JTokenReader jsonReader = new JTokenReader(o)", span="225-225"];
m12_130 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="IJsonLineInfo lineInfo = jsonReader", span="227-227"];
m12_132 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, lineInfo.LineNumber)", span="230-230"];
m12_131 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="229-229"];
m12_133 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(0, lineInfo.LinePosition)", span="231-231"];
m12_134 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(false, lineInfo.HasLineInfo())", span="232-232"];
m12_572 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="XmlDocument xmldoc = JsonConvert.DeserializeXmlNode(json)", span="2093-2093"];
m12_574 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", span="2089-2089"];
m12_573 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeAttributePropertyNotAtStart()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<item action=''''update'''' itemid=''''1'''' description=''''temp''''><elements action=''''none'''' id=''''2'''' /><elements action=''''none'''' id=''''3'''' /></item>'', xmldoc.InnerXml)", span="2095-2095"];
m12_575 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2099-2099"];
m12_576 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="var xmlString = @''<root xmlns=''''http://www.example.com/ns''''>\r\n  <a/>\r\n  <bns:b xmlns:bns=''''http://www.example.com/ns''''/>\r\n  <c/>\r\n</root>''", span="2101-2105"];
m12_544 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_BigInteger_Success()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_BigInteger_Success()", span="876-876"];
m12_545 [cluster="JValue.cstr", file="XmlNodeConverterTest.cs", label="Entry JValue.cstr", span=""];
m12_546 [cluster="Unk.Parse", file="XmlNodeConverterTest.cs", label="Entry Unk.Parse", span=""];
m12_552 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Null_Success()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Null_Success()", span="897-897"];
m12_553 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Null_Success()", file="XmlNodeConverterTest.cs", label="JValue n = JValue.CreateNull()", span="899-899"];
m12_499 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="string xml = @''<root>\r\n<Reports d1p1:Array=''''true'''' xmlns:d1p1=''''http://james.newtonking.com/projects/json'''' />\r\n</root>''", span="1538-1540"];
m12_501 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="d.LoadXml(xml)", span="1543-1543"];
m12_500 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="XmlDocument d = new XmlDocument()", span="1542-1542"];
m12_502 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(d, Formatting.Indented)", span="1545-1545"];
m12_503 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''root'''': {\r\n    ''''Reports'''': [\r\n      {}\r\n    ]\r\n  }\r\n}'', json)", span="1547-1553"];
m12_522 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_String_Success()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_String_Success()", span="845-845"];
m12_523 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_String_Success()", file="XmlNodeConverterTest.cs", label="JValue s = JValue.CreateString(''123.4'')", span="847-847"];
m12_524 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDouble_String_Success()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(s)", span="849-849"];
m12_210 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Test1'', jsonReader.Value)", span="330-330"];
m12_0 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", span="53-53"];
m12_2 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlNodeReader reader = new XmlNodeReader(node)", span="56-56"];
m12_1 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXmlNode(node, Formatting.Indented)", span="55-55"];
m12_3 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XObject xNode", span="59-59"];
m12_4 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="node is XmlDocument", span="60-60"];
m12_5 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = XDocument.Load(reader)", span="62-62"];
m12_6 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="node is XmlAttribute", span="64-64"];
m12_7 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlAttribute attribute = (XmlAttribute)node", span="66-66"];
m12_114 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Offset'''':''''2012-01-24T03:50Z''''}''", span="193-193"];
m12_115 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="195-195"];
m12_116 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="JsonReader reader = o.CreateReader()", span="197-197"];
m12_117 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="199-199"];
m12_119 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="202-202"];
m12_118 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="200-200"];
m12_120 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="203-203"];
m12_121 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="205-205"];
m12_595 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Array()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(1, bytes[0])", span="981-981"];
m12_596 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Array()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(2, bytes[1])", span="982-982"];
m12_597 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Array()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Array()", span="969-969"];
m12_180 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadLineInfo()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(29, lineInfo.LinePosition)", span="285-285"];
m12_92 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="167-167"];
m12_251 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(formattedXml)", span="659-659"];
m12_254 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="626-626"];
m12_256 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", span="665-665"];
m12_257 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlWriterSettings settings = new XmlWriterSettings()", span="667-667"];
m12_253 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, formattedXml)", span="662-662"];
m12_258 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="settings.Indent = true", span="668-668"];
m12_252 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="660-660"];
m12_259 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="670-670"];
m12_260 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GetIndentedInnerXml(XmlNode)", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(sw, settings)", span="672-672"];
m12_135 [cluster="System.Console.WriteLine(string)", file="XmlNodeConverterTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m12_136 [cluster="System.Console.WriteLine()", file="XmlNodeConverterTest.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m12_137 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="300-300"];
m12_141 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n	</xs:element>\r\n</xs:schema>''", span="307-314"];
m12_142 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlDocument document = new XmlDocument()", span="316-316"];
m12_143 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="document.LoadXml(xml)", span="317-317"];
m12_144 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlAttribute attribute = document.DocumentElement.ChildNodes[0].Attributes[''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata'']", span="320-320"];
m12_148 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="326-326"];
m12_149 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XDocument d = XDocument.Parse(xml)", span="329-329"];
m12_150 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XAttribute a = d.Root.Element(''{http://www.w3.org/2001/XMLSchema}element'').Attribute(''{urn:schemas-microsoft-com:xml-msdata}IsDataSet'')", span="330-330"];
m12_151 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXNode(a)", span="332-332"];
m12_155 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="342-342"];
m12_156 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''?xml-stylesheet'''':''''href=\''''classic.xsl\'''' type=\''''text/xml\''''''''}'', jsonText)", span="343-343"];
m12_157 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlCDataSection cDataSection = doc.CreateCDataSection(''<Kiwi>true</Kiwi>'')", span="347-347"];
m12_158 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(cDataSection)", span="349-349"];
m12_162 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.SetAttributeNode(doc.CreateAttribute(''msdata'', ''IsDataSet'', ''urn:schemas-microsoft-com:xml-msdata''))", span="357-357"];
m12_163 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlAttribute aa = doc.CreateAttribute(@''xmlns'', ''xs'', ''http://www.w3.org/2000/xmlns/'')", span="359-359"];
m12_164 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="aa.Value = ''http://www.w3.org/2001/XMLSchema''", span="360-360"];
m12_168 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.SetAttributeNode(aa)", span="365-365"];
m12_169 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.AppendChild(instruction)", span="367-367"];
m12_170 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.AppendChild(cDataSection)", span="368-368"];
m12_171 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="doc.AppendChild(element)", span="370-370"];
m12_175 [cluster="Unk.Element", file="XmlNodeConverterTest.cs", label="Entry Unk.Element", span=""];
m12_176 [cluster="Unk.Attribute", file="XmlNodeConverterTest.cs", label="Entry Unk.Attribute", span=""];
m12_177 [cluster="Unk.CreateProcessingInstruction", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m12_178 [cluster="Unk.CreateCDataSection", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateCDataSection", span=""];
m12_182 [cluster="Unk.AppendChild", file="XmlNodeConverterTest.cs", label="Entry Unk.AppendChild", span=""];
m12_183 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="386-386"];
m12_184 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="388-388"];
m12_188 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="string expected = @''{''''Item'''':[''''widget'''',''''widget'''']}''", span="396-396"];
m12_189 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, jsonText)", span="398-398"];
m12_190 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DocumentFragmentSerialize'')", span="400-400"];
m12_194 [cluster="Unk.CreateDocumentFragment", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateDocumentFragment", span=""];
m12_195 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", span="406-406"];
m12_196 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", color=red, community=0, file="XmlNodeConverterTest.cs", label="1: string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8''''?><!DOCTYPE STOCKQUOTE PUBLIC ''''-//W3C//DTD StockQuote 1.5//EN'''' ''''http://www.irxml.org/dtd/stockquote_1.5.dtd''''><STOCKQUOTE ROWCOUNT=''''2''''><RESULT><ROW><ASK>0</ASK><BID>0</BID><CHANGE>-16.310</CHANGE><COMPANYNAME>Dow Jones</COMPANYNAME><DATETIME>2014-04-17 15:50:37</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>16460.490</HIGH><LASTDATETIME>2014-04-17 15:50:37</LASTDATETIME><LASTPRICE>16408.540</LASTPRICE><LOW>16368.140</LOW><OPEN>16424.140</OPEN><PCHANGE>-0.099</PCHANGE><PE>0</PE><PREVIOUSCLOSE>16424.850</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>DJII</TICKER><TRADES>0</TRADES><VOLUME>136188700</VOLUME><YEARHIGH>11309.000</YEARHIGH><YEARLOW>9302.280</YEARLOW><YIELD>0</YIELD></ROW><ROW><ASK>0</ASK><BID>0</BID><CHANGE>9.290</CHANGE><COMPANYNAME>NASDAQ</COMPANYNAME><DATETIME>2014-04-17 15:40:01</DATETIME><DIVIDEND>0</DIVIDEND><EPS>0</EPS><EXCHANGE></EXCHANGE><HIGH>4110.460</HIGH><LASTDATETIME>2014-04-17 15:40:01</LASTDATETIME><LASTPRICE>4095.520</LASTPRICE><LOW>4064.700</LOW><OPEN>4080.300</OPEN><PCHANGE>0.227</PCHANGE><PE>0</PE><PREVIOUSCLOSE>4086.230</PREVIOUSCLOSE><SHARES>0</SHARES><TICKER>COMP</TICKER><TRADES>0</TRADES><VOLUME>1784210100</VOLUME><YEARHIGH>4371.710</YEARHIGH><YEARLOW>3154.960</YEARLOW><YIELD>0</YIELD></ROW></RESULT><STATUS>Couldn't find ticker: SPIC?</STATUS><STATUSCODE>2</STATUSCODE></STOCKQUOTE>''", span="408-408"];
m12_197 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", color=red, community=0, file="XmlNodeConverterTest.cs", label="0: string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''!DOCTYPE'''': {\r\n    ''''@name'''': ''''STOCKQUOTE'''',\r\n    ''''@public'''': ''''-//W3C//DTD StockQuote 1.5//EN'''',\r\n    ''''@system'''': ''''http://www.irxml.org/dtd/stockquote_1.5.dtd''''\r\n  },\r\n  ''''STOCKQUOTE'''': {\r\n    ''''@ROWCOUNT'''': ''''2'''',\r\n    ''''RESULT'''': {\r\n      ''''ROW'''': [\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''-16.310'''',\r\n          ''''COMPANYNAME'''': ''''Dow Jones'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''16460.490'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:50:37'''',\r\n          ''''LASTPRICE'''': ''''16408.540'''',\r\n          ''''LOW'''': ''''16368.140'''',\r\n          ''''OPEN'''': ''''16424.140'''',\r\n          ''''PCHANGE'''': ''''-0.099'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''16424.850'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''DJII'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''136188700'''',\r\n          ''''YEARHIGH'''': ''''11309.000'''',\r\n          ''''YEARLOW'''': ''''9302.280'''',\r\n          ''''YIELD'''': ''''0''''\r\n        },\r\n        {\r\n          ''''ASK'''': ''''0'''',\r\n          ''''BID'''': ''''0'''',\r\n          ''''CHANGE'''': ''''9.290'''',\r\n          ''''COMPANYNAME'''': ''''NASDAQ'''',\r\n          ''''DATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''DIVIDEND'''': ''''0'''',\r\n          ''''EPS'''': ''''0'''',\r\n          ''''EXCHANGE'''': '''''''',\r\n          ''''HIGH'''': ''''4110.460'''',\r\n          ''''LASTDATETIME'''': ''''2014-04-17 15:40:01'''',\r\n          ''''LASTPRICE'''': ''''4095.520'''',\r\n          ''''LOW'''': ''''4064.700'''',\r\n          ''''OPEN'''': ''''4080.300'''',\r\n          ''''PCHANGE'''': ''''0.227'''',\r\n          ''''PE'''': ''''0'''',\r\n          ''''PREVIOUSCLOSE'''': ''''4086.230'''',\r\n          ''''SHARES'''': ''''0'''',\r\n          ''''TICKER'''': ''''COMP'''',\r\n          ''''TRADES'''': ''''0'''',\r\n          ''''VOLUME'''': ''''1784210100'''',\r\n          ''''YEARHIGH'''': ''''4371.710'''',\r\n          ''''YEARLOW'''': ''''3154.960'''',\r\n          ''''YIELD'''': ''''0''''\r\n        }\r\n      ]\r\n    },\r\n    ''''STATUS'''': ''''Couldn't find ticker: SPIC?'''',\r\n    ''''STATUSCODE'''': ''''2''''\r\n  }\r\n}''", span="410-479"];
m12_198 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc1 = new XmlDocument()", span="481-481"];
m12_199 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="doc1.LoadXml(xml)", span="482-482"];
m12_200 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="string json1 = JsonConvert.SerializeXmlNode(doc1, Formatting.Indented)", span="484-484"];
m12_138 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="302-302"];
m12_139 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="string jsonText", span="303-303"];
m12_140 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''SerializeNodeTypes'')", span="305-305"];
m12_145 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="attribute.Value = ''true''", span="321-321"];
m12_146 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(attribute)", span="323-323"];
m12_147 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="325-325"];
m12_152 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''@msdata:IsDataSet'''':''''true''''}'', jsonText)", span="334-334"];
m12_153 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlProcessingInstruction instruction = doc.CreateProcessingInstruction(''xml-stylesheet'', @''href=''''classic.xsl'''' type=''''text/xml'''''')", span="338-338"];
m12_154 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(instruction)", span="340-340"];
m12_159 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="351-351"];
m12_160 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''#cdata-section'''':''''<Kiwi>true</Kiwi>''''}'', jsonText)", span="352-352"];
m12_161 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="XmlElement element = doc.CreateElement(''xs'', ''Choice'', ''http://www.w3.org/2001/XMLSchema'')", span="356-356"];
m12_165 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="element.SetAttributeNode(aa)", span="361-361"];
m12_166 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="aa = doc.CreateAttribute(@''xmlns'', ''msdata'', ''http://www.w3.org/2000/xmlns/'')", span="363-363"];
m12_167 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="aa.Value = ''urn:schemas-microsoft-com:xml-msdata''", span="364-364"];
m12_172 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="jsonText = JsonConvert.SerializeXmlNode(element, Formatting.Indented)", span="372-372"];
m12_173 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''xs:Choice'''': {\r\n    ''''@msdata:IsDataSet'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''?xml-stylesheet'''': ''''href=\''''classic.xsl\'''' type=\''''text/xml\'''''''',\r\n    ''''#cdata-section'''': ''''<Kiwi>true</Kiwi>''''\r\n  }\r\n}'', jsonText)", span="374-382"];
m12_174 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeNodeTypes()", span="300-300"];
m12_179 [cluster="Unk.CreateElement", file="XmlNodeConverterTest.cs", label="Entry Unk.CreateElement", span=""];
m12_181 [cluster="Unk.SetAttributeNode", file="XmlNodeConverterTest.cs", label="Entry Unk.SetAttributeNode", span=""];
m12_185 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="XmlDocumentFragment fragement = doc.CreateDocumentFragment()", span="390-390"];
m12_186 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="fragement.InnerXml = ''<Item>widget</Item><Item>widget</Item>''", span="392-392"];
m12_187 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="string jsonText = JsonConvert.SerializeXmlNode(fragement)", span="394-394"];
m12_191 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="401-401"];
m12_192 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="402-402"];
m12_193 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentFragmentSerialize()", span="386-386"];
m12_201 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.XmlDocumentTypeSerialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, json1)", span="486-486"];
m12_504 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1536-1536"];
m12_392 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="JsonReader reader = o.CreateReader()", span="616-616"];
m12_393 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="618-618"];
m12_394 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="619-619"];
m12_395 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="621-621"];
m12_396 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="622-622"];
m12_397 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="624-624"];
m12_398 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Null, reader.TokenType)", span="625-625"];
m12_399 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, reader.ValueType)", span="626-626"];
m12_400 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, reader.Value)", span="627-627"];
m12_401 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", span="610-610"];
m12_74 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="var xml = doc1.ToString()", span="166-166"];
m12_223 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFailure()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytesFailure()", span="344-344"];
m12_266 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="XmlNodeConverterTest.cs", label="Assert.IsNull(x.Data)", span="422-422"];
m12_265 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="XmlNodeConverterTest.cs", label="ReadAsBytesTestObject x = s.Deserialize<ReadAsBytesTestObject>(new JTokenReader(nullToken))", span="421-421"];
m12_419 [cluster="string.Replace(string, string)", file="XmlNodeConverterTest.cs", label="Entry string.Replace(string, string)", span="0-0"];
m12_422 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="circularDictionary.Add(''other'', new PreserveReferencesHandlingTests.CircularDictionary { { ''blah'', null } })", span="1219-1219"];
m12_424 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeObject(circularDictionary, Formatting.Indented,\r\n                new JsonSerializerSettings { PreserveReferencesHandling = PreserveReferencesHandling.All })", span="1222-1223"];
m12_426 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="XmlNode node = DeserializeXmlNode(json, ''root'')", span="1236-1236"];
m12_428 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' encoding=''''utf-16''''?>\r\n<root xmlns:json=''''http://james.newtonking.com/projects/json'''' json:id=''''1''''>\r\n  <other json:id=''''2''''>\r\n    <blah />\r\n  </other>\r\n  <self json:ref=''''1'''' />\r\n</root>''", span="1238-1244"];
m12_430 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string xmlJson = SerializeXmlNode(node)", span="1248-1248"];
m12_432 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expectedXmlJson, xmlJson)", span="1262-1262"];
m12_423 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="circularDictionary.Add(''self'', circularDictionary)", span="1220-1220"];
m12_425 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''other'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''blah'''': null\r\n  },\r\n  ''''self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="1225-1234"];
m12_427 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string xml = GetIndentedInnerXml(node)", span="1237-1237"];
m12_429 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, xml)", span="1246-1246"];
m12_431 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="string expectedXmlJson = @''{\r\n  ''''root'''': {\r\n    ''''$id'''': ''''1'''',\r\n    ''''other'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''blah'''': null\r\n    },\r\n    ''''self'''': {\r\n      ''''$ref'''': ''''1''''\r\n    }\r\n  }\r\n}''", span="1249-1260"];
m12_421 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="PreserveReferencesHandlingTests.CircularDictionary circularDictionary = new PreserveReferencesHandlingTests.CircularDictionary()", span="1218-1218"];
m12_420 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1216-1216"];
m12_433 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeDeserializeMetadataProperties()", span="1216-1216"];
m12_293 [cluster="Unk.>", file="XmlNodeConverterTest.cs", label="Entry Unk.>", span=""];
m12_296 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="749-749"];
m12_295 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]'')", span="749-749"];
m12_297 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="753-753"];
m12_298 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'',\r\n                () => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}''); })", span="755-757"];
m12_299 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.RootObjectMultipleProperties()", span="753-753"];
m12_300 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="757-757"];
m12_301 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''{Prop1:1,Prop2:2}'')", span="757-757"];
m12_302 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="757-757"];
m12_303 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="761-761"];
m12_304 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{root:{r:new Date(34343, 55)}}''", span="763-763"];
m12_294 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="749-749"];
m12_305 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="765-765"];
m12_219 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="515-515"];
m12_584 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializingXmlNamespaceScope()", span="2099-2099"];
m12_590 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.isNull, w2.isNull)", span="2140-2140"];
m12_592 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", span="2133-2133"];
m12_591 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeNullableXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xml.notNull.ToString(), w2.notNull.ToString())", span="2141-2141"];
m12_593 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NullableXml.NullableXml()", span="2125-2125"];
m12_594 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="499-499"];
m12_221 [cluster="XmlWriterSettings.cstr", file="XmlNodeConverterTest.cs", label="Entry XmlWriterSettings.cstr", span=""];
m12_222 [cluster="Unk.Create", file="XmlNodeConverterTest.cs", label="Entry Unk.Create", span=""];
m12_489 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="783-783"];
m12_490 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTime()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTime()", span="789-789"];
m12_491 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffset_InvalidToken()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffset_InvalidToken()", span="789-789"];
m12_492 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffset_InvalidToken()", file="XmlNodeConverterTest.cs", label="JArray a = new JArray\r\n            {\r\n                1, 2\r\n            }", span="791-794"];
m12_493 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffset_InvalidToken()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(a)", span="796-796"];
m12_494 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffset_InvalidToken()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { reader.ReadAsDateTimeOffset(); },\r\n                ''Error reading date. Unexpected token: StartArray. Path ''.'')", span="798-800"];
m12_495 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffset_InvalidToken()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffset_InvalidToken()", span="789-789"];
m12_496 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="799-799"];
m12_497 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="799-799"];
m12_250 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''DocumentDeserialize'')", span="658-658"];
m12_122 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="206-206"];
m12_281 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmptyNode()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="727-727"];
m12_65 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="141-141"];
m12_417 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeExample()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<root>\r\n<person id=''''1''''>\r\n<name>Alan</name>\r\n<url>http://www.google.com</url>\r\n</person>\r\n<person id=''''2''''>\r\n<name>Louis</name>\r\n<url>http://www.yahoo.com</url>\r\n</person>\r\n</root>''.Replace(Environment.NewLine, string.Empty), doc.InnerXml)", span="1202-1212"];
m12_323 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin1'''',\r\n        ''''Admin2''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="828-840"];
m12_113 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetString()", span="191-191"];
m12_505 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", span="1557-1557"];
m12_507 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var obj = JObject.FromObject(dict)", span="1560-1560"];
m12_506 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var dict = new Dictionary<string, object> { { ''Int16'', (short)1 }, { ''Float'', 2f }, { ''Int32'', 3 } }", span="1559-1559"];
m12_508 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var serializer = JsonSerializer.Create(new JsonSerializerSettings { Converters = { new XmlNodeConverter() { DeserializeRootElementName = ''root'' } } })", span="1561-1561"];
m12_509 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var reader = obj.CreateReader()", span="1562-1562"];
m12_94 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBadString()", span="155-155"];
m12_479 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsBoolean()", span="768-768"];
m12_275 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="JsonReader nodeReader = o.CreateReader()", span="440-440"];
m12_276 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="TestObject newObject = (TestObject)serializer.Deserialize(nodeReader)", span="443-443"];
m12_277 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''Test'', newObject.Name)", span="445-445"];
m12_278 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="446-446"];
m12_279 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", span="426-426"];
m12_282 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618"];
m12_280 [cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33"];
m12_283 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="814-814"];
m12_213 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="335-335"];
m12_214 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.EndObject, jsonReader.TokenType)", span="336-336"];
m12_63 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.None, jsonReader.TokenType)", span="136-136"];
m12_22 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="68-73"];
m12_307 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="769-769"];
m12_310 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, json)", span="783-783"];
m12_309 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="expected = @''{\r\n  ''''root'''': {\r\n    ''''r'''': {\r\n      ''''Date'''': [\r\n        ''''34343'''',\r\n        ''''55''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="772-781"];
m12_316 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string arrayJsonText = SerializeXmlNode(arrayDoc)", span="800-800"];
m12_311 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", span="761-761"];
m12_312 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", span="787-787"];
m12_313 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin</role>\r\n			  </person>\r\n			</root>''", span="789-795"];
m12_314 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="XmlDocument arrayDoc = new XmlDocument()", span="797-797"];
m12_315 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="798-798"];
m12_317 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''root'''': {\r\n    ''''person'''': {\r\n      ''''@id'''': ''''1'''',\r\n      ''''name'''': ''''Alan'''',\r\n      ''''url'''': ''''http://www.google.com'''',\r\n      ''''role'''': [\r\n        ''''Admin''''\r\n      ]\r\n    }\r\n  }\r\n}''", span="801-812"];
m12_318 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, arrayJsonText)", span="813-813"];
m12_319 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayXml = @''<root xmlns:json=''''http://james.newtonking.com/projects/json''''>\r\n			  <person id=''''1''''>\r\n				  <name>Alan</name>\r\n				  <url>http://www.google.com</url>\r\n				  <role json:Array=''''true''''>Admin1</role>\r\n				  <role json:Array=''''true''''>Admin2</role>\r\n			  </person>\r\n			</root>''", span="815-822"];
m12_320 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc = new XmlDocument()", span="824-824"];
m12_321 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayDoc.LoadXml(arrayXml)", span="825-825"];
m12_308 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.JavaScriptConstructor()", file="XmlNodeConverterTest.cs", label="string json = SerializeXmlNode(newDoc)", span="771-771"];
m12_322 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ForceJsonArray()", file="XmlNodeConverterTest.cs", label="arrayJsonText = SerializeXmlNode(arrayDoc)", span="827-827"];
m12_435 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="JArray a = new JArray\r\n            {\r\n                1, 2\r\n            }", span="689-692"];
m12_24 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838"];
m12_25 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", span="78-78"];
m12_26 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n                    new JProperty(''Test2'', new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0))),\r\n                    new JProperty(''Test3'', ''Test3Value''),\r\n                    new JProperty(''Test4'', null)\r\n                    )", span="80-86"];
m12_203 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(''Hello world!'')", span="316-316"];
m12_204 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="JObject o =\r\n                new JObject(\r\n                    new JProperty(''Test1'', data)\r\n                    )", span="318-321"];
m12_208 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="328-328"];
m12_206 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="325-325"];
m12_202 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", span="314-314"];
m12_205 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="JTokenReader jsonReader = new JTokenReader(o)", span="323-323"];
m12_207 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="326-326"];
m12_209 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="329-329"];
m12_562 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="2041-2041"];
m12_564 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="node.WriteTo(writer)", span="2047-2047"];
m12_563 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings\r\n            {\r\n                Indent = true,\r\n                OmitXmlDeclaration = true\r\n            })", span="2042-2046"];
m12_565 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="writer.Flush()", span="2048-2048"];
m12_566 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNodeDefaultNamespace()", file="XmlNodeConverterTest.cs", label="string xaml2 = sw.ToString()", span="2050-2050"];
m12_75 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeParseHandlingOffset()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''<Date>2012-12-12T12:44:01+12:34</Date>'', xml)", span="167-167"];
m12_261 [cluster="Unk.AreEquivalent", file="XmlNodeConverterTest.cs", label="Entry Unk.AreEquivalent", span=""];
m12_262 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", span="416-416"];
m12_263 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", color=green, community=0, file="XmlNodeConverterTest.cs", label="1: JsonSerializer s = new JsonSerializer()", span="418-418"];
m12_16 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<Exception>(() =>\r\n            {\r\n                JsonSerializer serializer = new JsonSerializer();\r\n\r\n                serializer.Deserialize<TraceTestObject>(json.CreateReader());\r\n            }, ''Could not convert string to integer: two. Path 'IntList[1]', line 1, position 20.'')", span="68-73"];
m12_543 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_BigInteger_Success()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="882-882"];
m12_211 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadBytes()", file="XmlNodeConverterTest.cs", label="byte[] readBytes = jsonReader.ReadAsBytes()", span="332-332"];
m12_225 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JObject o =\r\n                    new JObject(\r\n                        new JProperty(''Test1'', 1)\r\n                        )", span="348-351"];
m12_226 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JTokenReader jsonReader = new JTokenReader(o)", span="353-353"];
m12_227 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="355-355"];
m12_228 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, jsonReader.TokenType)", span="356-356"];
m12_229 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="358-358"];
m12_386 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="606-606"];
m12_387 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="606-606"];
m12_388 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="606-606"];
m12_389 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", span="610-610"];
m12_390 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Name'''':null}''", span="612-612"];
m12_391 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalNull()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="614-614"];
m12_444 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="707-707"];
m12_445 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="708-708"];
m12_446 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="710-710"];
m12_447 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="711-711"];
m12_448 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", span="687-687"];
m12_449 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m12_48 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="116-116"];
m12_20 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="70-70"];
m12_267 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytesNull()", span="416-416"];
m12_269 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", span="426-426"];
m12_270 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="428-428"];
m12_271 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeObject(test, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.All\r\n            })", span="430-433"];
m12_273 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="437-437"];
m12_272 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="435-435"];
m12_274 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.DeserializeByteArrayWithTypeNameHandling()", file="XmlNodeConverterTest.cs", label="serializer.TypeNameHandling = TypeNameHandling.All", span="438-438"];
m12_324 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", span="517-517"];
m12_325 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Name'''':''''hi''''}''", span="519-519"];
m12_326 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="521-521"];
m12_327 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="XmlNodeConverterTest.cs", label="JsonReader reader = o.CreateReader()", span="523-523"];
m12_328 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="525-525"];
m12_329 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="526-526"];
m12_330 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="528-528"];
m12_331 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32BadString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="529-529"];
m12_247 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = (XmlDocument)DeserializeXmlNode(jsonText)", span="647-647"];
m12_45 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="jsonReader.Read()", span="112-112"];
m12_367 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="582-582"];
m12_368 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="583-583"];
m12_369 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="585-585"];
m12_371 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDecimal(); }, ''Could not convert string to decimal: blah. Path 'Name', line 1, position 14.'')", span="588-588"];
m12_375 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="588-588"];
m12_370 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="586-586"];
m12_374 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDecimal()", span="588-588"];
m12_372 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBadString()", span="574-574"];
m12_373 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="588-588"];
m12_376 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", span="592-592"];
m12_66 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, jsonReader.TokenType)", span="142-142"];
m12_437 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="696-696"];
m12_438 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="698-698"];
m12_439 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="699-699"];
m12_440 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="701-701"];
m12_402 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", span="631-631"];
m12_403 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="JObject o = new JObject\r\n            {\r\n                { ''prop1'', true }\r\n            }", span="633-636"];
m12_404 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(o, ''baseprop'')", span="638-638"];
m12_405 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="640-640"];
m12_406 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="642-642"];
m12_410 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="648-648"];
m12_407 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="643-643"];
m12_408 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="645-645"];
m12_409 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop.prop1'', reader.Path)", span="646-646"];
m12_411 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop.prop1'', reader.Path)", span="649-649"];
m12_554 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Null_Success()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(n)", span="901-901"];
m12_555 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Null_Success()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, reader.ReadAsBoolean())", span="903-903"];
m12_556 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Null_Success()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Null_Success()", span="897-897"];
m12_557 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Integer_Success()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Integer_Success()", span="907-907"];
m12_558 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Integer_Success()", file="XmlNodeConverterTest.cs", label="JValue n = new JValue(1)", span="909-909"];
m12_559 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Integer_Success()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(n)", span="911-911"];
m12_560 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Integer_Success()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(true, reader.ReadAsBoolean())", span="913-913"];
m12_561 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Integer_Success()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_Integer_Success()", span="907-907"];
m12_414 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(reader.Read())", span="654-654"];
m12_415 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="655-655"];
m12_416 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", span="631-631"];
m12_418 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken, string)", span="60-60"];
m12_378 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalBoolean()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="596-596"];
m12_284 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="733-733"];
m12_287 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?><root><person id=''''1''''><Float>2.5</Float><Integer>99</Integer></person><person id=''''2''''><Boolean>true</Boolean><date>2000-03-30T00:00:00Z</date></person></root>''", span="739-739"];
m12_286 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="737-737"];
m12_288 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, newDoc.InnerXml)", span="741-741"];
m12_289 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", span="733-733"];
m12_285 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OtherElementDataTypes()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{''''?xml'''':{''''@version'''':''''1.0'''',''''@standalone'''':''''no''''},''''root'''':{''''person'''':[{''''@id'''':''''1'''',''''Float'''':2.5,''''Integer'''':99},{''''Boolean'''':true,''''@id'''':''''2'''',''''date'''':''''\/Date(954374400000)\/''''}]}}''", span="735-735"];
m12_290 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="745-745"];
m12_291 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''XmlNodeConverter can only convert JSON that begins with an object.'',\r\n                () => { XmlDocument newDoc = (XmlDocument)JsonConvert.DeserializeXmlNode(@''[1]''); })", span="747-749"];
m12_292 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NoRootObject()", span="745-745"];
m12_69 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.Date, jsonReader.TokenType)", span="146-146"];
m12_70 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0)), jsonReader.Value)", span="147-147"];
m12_71 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="149-149"];
m12_72 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.None, jsonReader.TokenType)", span="150-150"];
m12_78 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="XmlNodeConverterTest.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m12_73 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.YahooFinance()", span="78-78"];
m12_76 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="XmlNodeConverterTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m12_77 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="XmlNodeConverterTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m12_79 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="306-306"];
m12_15 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="XmlNodeConverterTest.cs", label="JObject json = JObject.Parse(@''{''''IntList'''':[1, ''''two'''']}'')", span="66-66"];
m12_21 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="serializer.Deserialize<TraceTestObject>(json.CreateReader())", span="72-72"];
m12_95 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeEmptyDocument()", span="193-193"];
m12_340 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="JsonReader reader = o.CreateReader()", span="541-541"];
m12_341 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="543-543"];
m12_342 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="544-544"];
m12_343 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="546-546"];
m12_332 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="869-869"];
m12_333 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="string json = @''{''''count'''': 773840,''''photos'''': null}''", span="871-871"];
m12_516 [cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1641-1641"];
m12_366 [cluster="Unk.IndentXml", file="XmlNodeConverterTest.cs", label="Entry Unk.IndentXml", span=""];
m12_436 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_ArrayToken()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(a, ''baseprop'')", span="694-694"];
m12_577 [cluster="Newtonsoft.Json.JsonReader.ReadAsString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsString()", span="466-466"];
m12_583 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.Uri)", span="172-172"];
m12_27 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="88-88"];
m12_64 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="512-512"];
m12_28 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="JsonTextReader reader", span="90-90"];
m12_29 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="92-92"];
m12_30 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="reader.Read()", span="93-93"];
m12_32 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="deserializeRootElementName != null", span="95-95"];
m12_33 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="converter.DeserializeRootElementName = deserializeRootElementName", span="96-96"];
m12_34 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="XmlNode node = (XmlNode)converter.ReadJson(reader, typeof(XmlDocument), null, new JsonSerializer())", span="98-98"];
m12_36 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="reader = new JsonTextReader(new StringReader(json))", span="103-103"];
m12_37 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="reader.Read()", span="104-104"];
m12_38 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="XDocument d = (XDocument)converter.ReadJson(reader, typeof(XDocument), null, new JsonSerializer())", span="105-105"];
m12_42 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(xmlText, linqXmlText)", span="111-111"];
m12_43 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="return node;", span="114-114"];
m12_44 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", span="88-88"];
m12_46 [cluster="System.IO.StringReader.StringReader(string)", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m12_49 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="435-435"];
m12_50 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236"];
m12_51 [cluster="Unk.ToString", file="XmlNodeConverterTest.cs", label="Entry Unk.ToString", span=""];
m12_52 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="124-124"];
m12_53 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="decimal d = (decimal)Math.PI + 1000000000m", span="126-126"];
m12_54 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="var x = new DecimalContainer { Number = d }", span="127-127"];
m12_55 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="var json = JsonConvert.SerializeObject(x, Formatting.Indented)", span="129-129"];
m12_56 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="XDocument doc1 = JsonConvert.DeserializeObject<XDocument>(json, new JsonSerializerSettings\r\n            {\r\n                Converters = { new XmlNodeConverter() },\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="131-135"];
m12_57 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="var xml = doc1.ToString()", span="137-137"];
m12_58 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''<Number>1000000003.14159265358979</Number>'', xml)", span="138-138"];
m12_59 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="string json2 = JsonConvert.SerializeObject(doc1, Formatting.Indented)", span="140-140"];
m12_60 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="DecimalContainer x2 = JsonConvert.DeserializeObject<DecimalContainer>(json2)", span="142-142"];
m12_61 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(x.Number, x2.Number)", span="144-144"];
m12_62 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.FloatParseHandlingDecimal()", span="124-124"];
m12_68 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="726-726"];
m12_31 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="XmlNodeConverter converter = new XmlNodeConverter()", span="94-94"];
m12_35 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="string xmlText = node.OuterXml", span="101-101"];
m12_39 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="string linqXmlText = d.ToString(SaveOptions.DisableFormatting)", span="107-107"];
m12_40 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="d.Declaration != null", span="108-108"];
m12_41 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeXmlNode(string, string)", file="XmlNodeConverterTest.cs", label="linqXmlText = d.Declaration + linqXmlText", span="109-109"];
m12_17 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", span="64-64"];
m12_413 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.InitialPath_PropertyBase_PropertyToken()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(''baseprop'', reader.Path)", span="652-652"];
m12_379 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1025-1025"];
m12_384 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newXDoc.ToString(SaveOptions.DisableFormatting))", span="1051-1051"];
m12_380 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="string json = @''{\r\n  ''''available_sizes'''': [\r\n    [\r\n      [113, 150],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-150x150.jpg''''\r\n    ],\r\n    [\r\n      [189, 250],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-250x250.jpg''''\r\n    ],\r\n    [\r\n      [341, 450],\r\n      ''''assets/images/resized/0001/1070/11070v1-max-450x450.jpg''''\r\n    ]\r\n  ]\r\n}''", span="1027-1042"];
m12_381 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="XmlDocument newDoc = JsonConvert.DeserializeXmlNode(json, ''myRoot'')", span="1044-1044"];
m12_382 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<myRoot><available_sizes><available_sizes><available_sizes>113</available_sizes><available_sizes>150</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-150x150.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>189</available_sizes><available_sizes>250</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-250x250.jpg</available_sizes></available_sizes><available_sizes><available_sizes><available_sizes>341</available_sizes><available_sizes>450</available_sizes></available_sizes><available_sizes>assets/images/resized/0001/1070/11070v1-max-450x450.jpg</available_sizes></available_sizes></myRoot>'', newDoc.InnerXml)", span="1046-1046"];
m12_383 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="XDocument newXDoc = JsonConvert.DeserializeXNode(json, ''myRoot'')", span="1049-1049"];
m12_377 [cluster="Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeXmlNode(string, string, bool)", span="1028-1028"];
m12_385 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleNestedArraysToXml()", span="1025-1025"];
m12_10 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="xNode = XNode.ReadFrom(reader)", span="72-72"];
m12_234 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string jsonText = SerializeXmlNode(doc)", span="566-566"];
m12_238 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(doc.InnerXml, deserializedDoc.InnerXml)", span="617-617"];
m12_237 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument deserializedDoc = (XmlDocument)DeserializeXmlNode(jsonText)", span="615-615"];
m12_239 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(''NamespaceSerializeDeserialize'')", span="619-619"];
m12_240 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(jsonText)", span="620-620"];
m12_236 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(expected, jsonText)", span="613-613"];
m12_241 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine(deserializedDoc.InnerXml)", span="621-621"];
m12_235 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string expected = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@encoding'''': ''''utf-8''''\r\n  },\r\n  ''''xs:schema'''': {\r\n    ''''@xs:id'''': ''''SomeID'''',\r\n    ''''@xmlns'''': '''''''',\r\n    ''''@xmlns:xs'''': ''''http://www.w3.org/2001/XMLSchema'''',\r\n    ''''@xmlns:msdata'''': ''''urn:schemas-microsoft-com:xml-msdata'''',\r\n    ''''xs:element'''': {\r\n      ''''@name'''': ''''MyDataSet'''',\r\n      ''''@msdata:IsDataSet'''': ''''true'''',\r\n      ''''xs:complexType'''': {\r\n        ''''xs:choice'''': {\r\n          ''''@maxOccurs'''': ''''unbounded'''',\r\n          ''''xs:element'''': {\r\n            ''''@name'''': ''''customers'''',\r\n            ''''xs:complexType'''': {\r\n              ''''xs:sequence'''': {\r\n                ''''xs:element'''': [\r\n                  {\r\n                    ''''@name'''': ''''CustomerID'''',\r\n                    ''''@type'''': ''''xs:integer'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''CompanyName'''',\r\n                    ''''@type'''': ''''xs:string'''',\r\n                    ''''@minOccurs'''': ''''0''''\r\n                  },\r\n                  {\r\n                    ''''@name'''': ''''Phone'''',\r\n                    ''''@type'''': ''''xs:string''''\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}''", span="568-611"];
m12_242 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Console.WriteLine()", span="622-622"];
m12_243 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="537-537"];
m12_23 [cluster="Unk.AreEqual", file="XmlNodeConverterTest.cs", label="Entry Unk.AreEqual", span=""];
m12_9 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="reader.MoveToContent()", span="71-71"];
m12_510 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DeserializeNonInt64IntegerValues()", file="XmlNodeConverterTest.cs", label="var value = (XmlDocument)serializer.Deserialize(reader, typeof(XmlDocument))", span="1564-1564"];
m12_347 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="549-549"];
m12_348 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsInt32()", span="549-549"];
m12_349 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="549-549"];
m12_351 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Name'''':''''1.1''''}''", span="555-555"];
m12_350 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", span="553-553"];
m12_352 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="557-557"];
m12_353 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="JsonReader reader = o.CreateReader()", span="559-559"];
m12_434 [cluster="Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PreserveReferencesHandlingTests.CircularDictionary.CircularDictionary()", span="251-251"];
m12_441 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="1349-1349"];
m12_443 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="1349-1349"];
m12_442 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="DeserializeXmlNode(json)", span="1349-1349"];
m12_13 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeXmlNode(XmlNode)", file="XmlNodeConverterTest.cs", label="return json;", span="80-80"];
m12_96 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="169-169"];
m12_97 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="reader.ReadAsDateTimeOffset()", span="169-169"];
m12_98 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Exit lambda expression", span="169-169"];
m12_99 [cluster="Unk.ReadAsDateTimeOffset", file="XmlNodeConverterTest.cs", label="Entry Unk.ReadAsDateTimeOffset", span=""];
m12_100 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", span="173-173"];
m12_101 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Offset'''':true}''", span="175-175"];
m12_102 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="177-177"];
m12_103 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="JsonReader reader = o.CreateReader()", span="179-179"];
m12_104 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="181-181"];
m12_105 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="182-182"];
m12_106 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="184-184"];
m12_107 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="185-185"];
m12_108 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsDateTimeOffset(); }, ''Error reading date. Unexpected token: Boolean. Path 'Offset', line 1, position 14.'')", span="187-187"];
m12_109 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDateTimeOffsetBoolean()", span="173-173"];
m12_110 [cluster="lambda expression", file="XmlNodeConverterTest.cs", label="Entry lambda expression", span="187-187"];
m12_18 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m12_541 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_BigInteger_Success()", file="XmlNodeConverterTest.cs", label="JValue s = new JValue(BigInteger.Parse(''99999999999999999999999999999999999999999999999999999999999999999999999999''))", span="878-878"];
m12_585 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Integer_Success()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Integer_Success()", span="959-959"];
m12_586 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Integer_Success()", file="XmlNodeConverterTest.cs", label="JValue n = JValue.CreateNull()", span="961-961"];
m12_587 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Integer_Success()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(n)", span="963-963"];
m12_589 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Integer_Success()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Integer_Success()", span="959-959"];
m12_588 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBytes_Integer_Success()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(null, reader.ReadAsBytes())", span="965-965"];
m12_244 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.HasBytes.HasBytes()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.HasBytes.HasBytes()", span="367-367"];
m12_12 [cluster="Newtonsoft.Json.JsonReader.ReadAsDouble()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDouble()", span="616-616"];
m12_14 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ErrorTokenIndex()", span="64-64"];
m12_215 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="StringBuilder builder = new StringBuilder()", span="517-517"];
m12_216 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="var writer = XmlWriter.Create(new Utf8StringWriter(builder), new XmlWriterSettings { Indent = indent })", span="518-518"];
m12_212 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", span="515-515"];
m12_217 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.ToStringWithDeclaration(XDocument, bool)", file="XmlNodeConverterTest.cs", label="doc.Save(writer)", span="520-520"];
m12_80 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52"];
m12_354 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsDecimalString()", file="XmlNodeConverterTest.cs", label="Assert.IsTrue(reader.Read())", span="561-561"];
m12_338 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="string json = @''{''''Name'''':true}''", span="537-537"];
m12_337 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", span="535-535"];
m12_339 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="JObject o = JObject.Parse(json)", span="539-539"];
m12_345 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonReaderException>(() => { reader.ReadAsInt32(); }, ''Error reading integer. Unexpected token: Boolean. Path 'Name', line 1, position 12.'')", span="549-549"];
m12_344 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="547-547"];
m12_346 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsInt32Boolean()", span="535-535"];
m12_19 [cluster="Unk.Get", file="XmlNodeConverterTest.cs", label="Entry Unk.Get", span=""];
m12_230 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", span="537-537"];
m12_231 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="string xml = @''<?xml version=''''1.0'''' encoding=''''utf-8'''' ?>\r\n<xs:schema xs:id=''''SomeID'''' \r\n	xmlns='''''''' \r\n	xmlns:xs=''''http://www.w3.org/2001/XMLSchema'''' \r\n	xmlns:msdata=''''urn:schemas-microsoft-com:xml-msdata''''>\r\n	<xs:element name=''''MyDataSet'''' msdata:IsDataSet=''''true''''>\r\n		<xs:complexType>\r\n			<xs:choice maxOccurs=''''unbounded''''>\r\n				<xs:element name=''''customers'''' >\r\n					<xs:complexType >\r\n						<xs:sequence>\r\n							<xs:element name=''''CustomerID'''' type=''''xs:integer'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''CompanyName'''' type=''''xs:string'''' \r\n										 minOccurs=''''0'''' />\r\n							<xs:element name=''''Phone'''' type=''''xs:string'''' />\r\n						</xs:sequence>\r\n					</xs:complexType>\r\n				</xs:element>\r\n			</xs:choice>\r\n		</xs:complexType>\r\n	</xs:element>\r\n</xs:schema>''", span="539-561"];
m12_232 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="XmlDocument doc = new XmlDocument()", span="563-563"];
m12_471 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="XmlReader reader = XmlReader.Create(new StringReader(xml))", span="1436-1436"];
m12_488 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", span="1452-1452"];
m12_224 [cluster="System.Text.StringBuilder.ToString()", file="XmlNodeConverterTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m12_233 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.NamespaceSerializeDeserialize()", file="XmlNodeConverterTest.cs", label="doc.LoadXml(xml)", span="564-564"];
m12_470 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1434-1434"];
m12_472 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="StringWriter sw = new StringWriter()", span="1438-1438"];
m12_478 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", span="1434-1434"];
m12_480 [cluster="Unk.WriteNode", file="XmlNodeConverterTest.cs", label="Entry Unk.WriteNode", span=""];
m12_487 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.OmitRootObject()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': [\r\n    ''''Hi'''',\r\n    ''''Hi''''\r\n  ],\r\n  ''''Products'''': [\r\n    {\r\n      ''''Name'''': ''''First'''',\r\n      ''''ExpiryDate'''': ''''2000-01-01T00:00:00Z'''',\r\n      ''''Price'''': ''''0'''',\r\n      ''''Sizes'''': null\r\n    }\r\n  ]\r\n}'', output)", span="1470-1483"];
m12_498 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.EmtpyElementWithArrayAttributeShouldWriteElement()", span="1536-1536"];
m12_335 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", span="869-869"];
m12_334 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.MultipleRootPropertiesXmlDocument()", file="XmlNodeConverterTest.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                ''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'',\r\n                () => { JsonConvert.DeserializeXmlNode(json); })", span="873-875"];
m12_336 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="175-175"];
m12_248 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string expected = @''<?xml version=''''1.0'''' standalone=''''no''''?>\r\n<span class=''''vevent''''>\r\n  <a class=''''url'''' href=''''http://www.web2con.com/''''>\r\n    <span class=''''summary''''>Web 2.0 Conference<![CDATA[my escaped text]]></span>\r\n  </a>\r\n</span>''", span="649-654"];
m12_246 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="string jsonText = @''{\r\n  ''''?xml'''': {\r\n    ''''@version'''': ''''1.0'''',\r\n    ''''@standalone'''': ''''no''''\r\n  },\r\n  ''''span'''': {\r\n    ''''@class'''': ''''vevent'''',\r\n    ''''a'''': {\r\n      ''''@class'''': ''''url'''',\r\n      ''''span'''': {\r\n        ''''@class'''': ''''summary'''',\r\n        ''''#text'''': ''''Web 2.0 Conference'''',\r\n        ''''#cdata-section'''': ''''my escaped text''''\r\n      },\r\n      ''''@href'''': ''''http://www.web2con.com/''''\r\n    }\r\n  }\r\n}''", span="628-645"];
m12_306 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="739-739"];
m12_481 [cluster="Newtonsoft.Json.JsonReader.ReadAsBoolean()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBoolean()", span="678-678"];
m12_85 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="177-177"];
m12_88 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''{''''root'''':{''''p'''':{''''#text'''':[''''Text1'''','''' Text2''''],''''span'''':[''''Span1'''',''''Span2'''']}}}'', json)", span="183-183"];
m12_87 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="string json = JsonConvert.SerializeXNode(XElement.Parse(xml))", span="181-181"];
m12_89 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="XDocument doc = JsonConvert.DeserializeXNode(json)", span="185-185"];
m12_90 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Assert.AreEqual(@''<root>\r\n  <p>Text1 Text2<span>Span1</span><span>Span2</span></p>\r\n</root>'', doc.ToString())", span="187-189"];
m12_91 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="Exit Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", span="177-177"];
m12_93 [cluster="Unk.SerializeXNode", file="XmlNodeConverterTest.cs", label="Entry Unk.SerializeXNode", span=""];
m12_86 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.GroupElementsOfTheSameName()", file="XmlNodeConverterTest.cs", label="string xml = ''<root><p>Text1<span>Span1</span> <span>Span2</span> Text2</p></root>''", span="179-179"];
m12_81 [cluster="Newtonsoft.Json.Linq.JTokenReader.Read()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.Read()", span="72-72"];
m12_84 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DateTimeOffsetContainer.DateTimeOffsetContainer()", span="147-147"];
m12_264 [cluster="System.IO.StringWriter.StringWriter()", file="XmlNodeConverterTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m12_473 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="XmlWriter writer = XmlWriter.Create(sw, new XmlWriterSettings { Indent = true, OmitXmlDeclaration = true })", span="1439-1439"];
m12_475 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="writer.WriteNode(reader, false)", span="1443-1443"];
m12_474 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="reader.Read()", span="1441-1441"];
m12_476 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="writer.Flush()", span="1446-1446"];
m12_477 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.IndentXml(string)", file="XmlNodeConverterTest.cs", label="return sw.ToString();", span="1448-1448"];
m12_218 [cluster="System.Text.Encoding.GetBytes(string)", file="XmlNodeConverterTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m12_603 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label=json, span=""];
m12_604 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_605 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_606 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_607 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_608 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_609 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_610 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.SerializeAndDeserializeXmlElementWithNamespaceInChildrenRootDontHaveNameSpace()", file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_542 [cluster="Newtonsoft.Json.Tests.Linq.JTokenReaderTest.ReadAsBoolean_BigInteger_Success()", file="XmlNodeConverterTest.cs", label="JTokenReader reader = new JTokenReader(s)", span="880-880"];
m12_245 [cluster="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", file="XmlNodeConverterTest.cs", label="Entry Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest.DocumentDeserialize()", span="626-626"];
m12_525 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="XmlNodeConverterTest.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m12_526 [cluster="System.Text.Encoding.GetBytes(string)", file="XmlNodeConverterTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m12_611 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_612 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_613 [file="XmlNodeConverterTest.cs", label=reader, span=""];
m12_614 [file="XmlNodeConverterTest.cs", label=json, span=""];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_10  [key=2, style=dotted];
m0_7 -> m0_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_2  [key=2, style=dotted];
m0_9 -> m0_6  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [color=blue, key=0, style=bold];
m1_370 -> m1_371  [key=0, style=solid];
m1_376 -> m1_61  [key=2, style=dotted];
m1_376 -> m1_377  [key=0, style=solid];
m1_374 -> m1_8  [key=2, style=dotted];
m1_374 -> m1_6  [key=2, style=dotted];
m1_374 -> m1_7  [key=2, style=dotted];
m1_374 -> m1_376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_374 -> m1_378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_374 -> m1_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_374 -> m1_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_374 -> m1_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_374 -> m1_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_377 -> m1_62  [key=2, style=dotted];
m1_377 -> m1_63  [key=2, style=dotted];
m1_377 -> m1_378  [key=0, style=solid];
m1_379 -> m1_62  [key=2, style=dotted];
m1_379 -> m1_63  [key=2, style=dotted];
m1_379 -> m1_380  [key=0, style=solid];
m1_382 -> m1_62  [key=2, style=dotted];
m1_382 -> m1_63  [key=2, style=dotted];
m1_382 -> m1_383  [key=0, style=solid];
m1_371 -> m1_376  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_371 -> m1_372  [key=0, style=solid];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_372 -> m1_374  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_372 -> m1_373  [key=0, style=solid];
m1_373 -> m1_374  [key=0, style=solid];
m1_378 -> m1_9  [key=2, style=dotted];
m1_378 -> m1_379  [key=0, style=solid];
m1_380 -> m1_9  [key=2, style=dotted];
m1_380 -> m1_381  [key=0, style=solid];
m1_383 -> m1_9  [key=2, style=dotted];
m1_383 -> m1_384  [key=0, style=solid];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_66  [key=2, style=dotted];
m1_384 -> m1_370  [color=blue, key=0, style=bold];
m1_211 -> m1_213  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_211 -> m1_212  [key=0, style=solid];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_347  [key=0, style=solid];
m1_351 -> m1_61  [key=2, style=dotted];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_41  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_351 -> m1_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_351 -> m1_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_349 -> m1_8  [key=2, style=dotted];
m1_349 -> m1_6  [key=2, style=dotted];
m1_349 -> m1_7  [key=2, style=dotted];
m1_349 -> m1_351  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_352  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_354  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_349 -> m1_317  [color=blue, key=0, style=bold];
m1_352 -> m1_62  [key=2, style=dotted];
m1_352 -> m1_63  [key=2, style=dotted];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_48  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_354 -> m1_62  [key=2, style=dotted];
m1_354 -> m1_63  [key=2, style=dotted];
m1_354 -> m1_355  [key=0, style=solid];
m1_356 -> m1_62  [key=2, style=dotted];
m1_356 -> m1_63  [key=2, style=dotted];
m1_356 -> m1_357  [key=0, style=solid];
m1_359 -> m1_62  [key=2, style=dotted];
m1_359 -> m1_63  [key=2, style=dotted];
m1_359 -> m1_360  [key=0, style=solid];
m1_363 -> m1_62  [key=2, style=dotted];
m1_363 -> m1_63  [key=2, style=dotted];
m1_363 -> m1_364  [key=0, style=solid];
m1_346 -> m1_351  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_349  [key=0, style=solid];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_365 -> m1_133  [key=2, style=dotted];
m1_365 -> m1_366  [key=0, style=solid];
m1_347 -> m1_349  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_347  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_348 -> m1_349  [key=0, style=solid];
m1_353 -> m1_9  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_353 -> m1_64  [color=darkseagreen4, key=1, label=call, style=dashed];
m1_355 -> m1_9  [key=2, style=dotted];
m1_355 -> m1_356  [key=0, style=solid];
m1_357 -> m1_9  [key=2, style=dotted];
m1_357 -> m1_358  [key=0, style=solid];
m1_360 -> m1_9  [key=2, style=dotted];
m1_360 -> m1_361  [key=0, style=solid];
m1_364 -> m1_9  [key=2, style=dotted];
m1_364 -> m1_365  [key=0, style=solid];
m1_358 -> m1_9  [key=2, style=dotted];
m1_358 -> m1_359  [key=0, style=solid];
m1_361 -> m1_9  [key=2, style=dotted];
m1_361 -> m1_362  [key=0, style=solid];
m1_362 -> m1_9  [key=2, style=dotted];
m1_362 -> m1_363  [key=0, style=solid];
m1_366 -> m1_345  [color=blue, key=0, style=bold];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_203  [key=0, style=solid];
m1_158 -> m1_61  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_203  [key=0, style=solid];
m1_156 -> m1_8  [key=2, style=dotted];
m1_156 -> m1_6  [key=2, style=dotted];
m1_156 -> m1_7  [key=2, style=dotted];
m1_156 -> m1_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_156 -> m1_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_159 -> m1_62  [key=2, style=dotted];
m1_159 -> m1_63  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_175  [key=0, style=solid];
m1_161 -> m1_62  [key=2, style=dotted];
m1_161 -> m1_63  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_211  [key=2, style=dotted];
m1_163 -> m1_62  [key=2, style=dotted];
m1_163 -> m1_63  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_166  [key=0, style=solid];
m1_166 -> m1_62  [key=2, style=dotted];
m1_166 -> m1_63  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_169  [key=0, style=solid];
m1_170 -> m1_62  [key=2, style=dotted];
m1_170 -> m1_63  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_213  [key=2, style=dotted];
m1_153 -> m1_158  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_156  [key=0, style=solid];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_157 -> m1_210  [key=2, style=dotted];
m1_172 -> m1_133  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_175  [key=0, style=solid];
m1_172 -> m1_31  [key=2, style=dotted];
m1_154 -> m1_156  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_209  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_203  [key=0, style=solid];
m1_160 -> m1_9  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_163  [key=0, style=solid];
m1_162 -> m1_9  [key=2, style=dotted];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_203  [key=0, style=solid];
m1_164 -> m1_9  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_212  [key=2, style=dotted];
m1_167 -> m1_9  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_32  [key=2, style=dotted];
m1_171 -> m1_9  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_203  [key=0, style=solid];
m1_165 -> m1_9  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_203  [key=0, style=solid];
m1_168 -> m1_9  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_203  [key=0, style=solid];
m1_169 -> m1_9  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_172  [key=0, style=solid];
m1_173 -> m1_152  [color=blue, key=0, style=bold];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_214  [key=2, style=dotted];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_319  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_317 -> m1_321  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m1_317 -> m1_323  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_317 -> m1_325  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_317 -> m1_326  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_317 -> m1_327  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_317 -> m1_328  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_317 -> m1_330  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m1_317 -> m1_337  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m1_317 -> m1_202  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse", style=bold];
m1_317 -> m1_200  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse", style=bold];
m1_317 -> m1_11  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int64TryParse", style=bold];
m1_317 -> m1_333  [color=darkorchid, key=3, label="Parameter variable long value", style=bold];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_333  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_318 -> m1_334  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_318 -> m1_345  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_318 -> m1_347  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_318 -> m1_349  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_318 -> m1_315  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_318 -> m1_314  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_321  [key=0, style=solid];
m1_319 -> m1_317  [color=blue, key=0, style=bold];
m1_321 -> m1_322  [key=0, style=solid];
m1_321 -> m1_344  [color=darkseagreen4, key=1, label=isNegative, style=dashed];
m1_321 -> m1_326  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_325  [key=0, style=solid];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_325  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_325 -> m1_327  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_325 -> m1_328  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_325 -> m1_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_326 -> m1_327  [key=0, style=solid];
m1_326 -> m1_326  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_326 -> m1_61  [key=2, style=dotted];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_329  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_327 -> m1_336  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_327 -> m1_62  [key=2, style=dotted];
m1_327 -> m1_63  [key=2, style=dotted];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_330  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_328 -> m1_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_328 -> m1_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_328 -> m1_317  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_328 -> m1_9  [key=2, style=dotted];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_333  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_330 -> m1_9  [key=2, style=dotted];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_9  [key=2, style=dotted];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_342  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m1_333 -> m1_9  [key=2, style=dotted];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_342  [key=0, style=solid];
m1_334 -> m1_62  [key=2, style=dotted];
m1_334 -> m1_63  [key=2, style=dotted];
m1_320 -> m1_349  [key=0, style=solid];
m1_320 -> m1_321  [key=0, style=solid];
m1_322 -> m1_323  [key=0, style=solid];
m1_322 -> m1_327  [key=0, style=solid];
m1_322 -> m1_324  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_348  [key=0, style=solid];
m1_344 -> m1_342  [color=blue, key=0, style=bold];
m1_324 -> m1_349  [key=0, style=solid];
m1_324 -> m1_8  [key=2, style=dotted];
m1_324 -> m1_6  [key=2, style=dotted];
m1_324 -> m1_7  [key=2, style=dotted];
m1_324 -> m1_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_324 -> m1_339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_344  [key=0, style=solid];
m1_329 -> m1_62  [key=2, style=dotted];
m1_329 -> m1_63  [key=2, style=dotted];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_341  [key=0, style=solid];
m1_336 -> m1_9  [key=2, style=dotted];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_335  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_335 -> m1_337  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_335 -> m1_340  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_335 -> m1_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_335 -> m1_9  [key=2, style=dotted];
m1_343 -> m1_329  [key=0, style=solid];
m1_343 -> m1_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_343 -> m1_340  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_343 -> m1_333  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_343 -> m1_336  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_343 -> m1_337  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_343 -> m1_344  [key=0, style=solid];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_333  [key=0, style=solid];
m1_331 -> m1_62  [key=2, style=dotted];
m1_331 -> m1_63  [key=2, style=dotted];
m1_332 -> m1_349  [key=0, style=solid];
m1_332 -> m1_9  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_345  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_342 -> m1_347  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_342 -> m1_349  [color=darkseagreen4, key=1, label="out long", style=dashed];
m1_340 -> m1_336  [key=0, style=solid];
m1_340 -> m1_340  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_340 -> m1_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_340 -> m1_133  [key=2, style=dotted];
m1_340 -> m1_341  [key=0, style=solid];
m1_341 -> m1_349  [key=0, style=solid];
m1_341 -> m1_320  [color=blue, key=0, style=bold];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_340  [key=0, style=solid];
m1_338 -> m1_62  [key=2, style=dotted];
m1_338 -> m1_63  [key=2, style=dotted];
m1_339 -> m1_349  [key=0, style=solid];
m1_339 -> m1_9  [key=2, style=dotted];
m1_339 -> m1_340  [key=0, style=solid];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_109  [color=blue, key=0, style=bold];
m1_127 -> m1_61  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_129  [color=darkorchid, key=3, label="method methodReturn bool TryConvert", style=bold];
m1_127 -> m1_46  [color=darkorchid, key=3, label="method methodReturn bool TryConvert", style=bold];
m1_127 -> m1_226  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
m1_127 -> m1_227  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_125 -> m1_8  [key=2, style=dotted];
m1_125 -> m1_6  [key=2, style=dotted];
m1_125 -> m1_7  [key=2, style=dotted];
m1_125 -> m1_127  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_125 -> m1_129  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_128 -> m1_62  [key=2, style=dotted];
m1_128 -> m1_63  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=0, style=solid];
m1_128 -> m1_122  [key=2, style=dotted];
m1_122 -> m1_127  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_135  [key=0, style=solid];
m1_122 -> m1_137  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_138  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_139  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_140  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_141  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_143  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_144  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_145  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_146  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_148  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_149  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_151  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_153  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_154  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_156  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_157  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_159  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_160  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_161  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_163  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_164  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_166  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_167  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_169  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_170  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_172  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_173  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_175  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_176  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_178  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_179  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_182  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_183  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_185  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_187  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_189  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_190  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_191  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_195  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_196  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_122 -> m1_198  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_122 -> m1_109  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
m1_122 -> m1_110  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_122 -> m1_122  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_122 -> m1_32  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_122 -> m1_67  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_122 -> m1_94  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_122 -> m1_221  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_122 -> m1_142  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal", style=bold];
m1_122 -> m1_11  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal", style=bold];
m1_122 -> m1_200  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal", style=bold];
m1_122 -> m1_202  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ConvertUtils.ConvertResult TryConvertInternal", style=bold];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_131 -> m1_133  [key=2, style=dotted];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_134  [key=0, style=solid];
m1_123 -> m1_125  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_123 -> m1_124  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_129 -> m1_9  [key=2, style=dotted];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_134  [key=0, style=solid];
m1_130 -> m1_9  [key=2, style=dotted];
m1_130 -> m1_131  [key=0, style=solid];
m1_132 -> m1_121  [color=blue, key=0, style=bold];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_134  [color=darkseagreen4, key=1, label="out object", style=dashed];
m1_35 -> m1_62  [key=2, style=dotted];
m1_35 -> m1_63  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_947 -> m1_948  [key=0, style=solid];
m1_948 -> m1_8  [key=2, style=dotted];
m1_948 -> m1_6  [key=2, style=dotted];
m1_948 -> m1_7  [key=2, style=dotted];
m1_948 -> m1_949  [key=0, style=solid];
m1_948 -> m1_950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_949 -> m1_950  [key=0, style=solid];
m1_949 -> m1_908  [key=2, style=dotted];
m1_949 -> m1_909  [key=2, style=dotted];
m1_950 -> m1_951  [key=0, style=solid];
m1_950 -> m1_956  [key=2, style=dotted];
m1_950 -> m1_957  [key=2, style=dotted];
m1_950 -> m1_952  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_950 -> m1_953  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_950 -> m1_954  [color=darkseagreen4, key=1, label=values, style=dashed];
m1_951 -> m1_9  [key=2, style=dotted];
m1_951 -> m1_952  [key=0, style=solid];
m1_952 -> m1_9  [key=2, style=dotted];
m1_952 -> m1_953  [key=0, style=solid];
m1_953 -> m1_9  [key=2, style=dotted];
m1_953 -> m1_954  [key=0, style=solid];
m1_954 -> m1_9  [key=2, style=dotted];
m1_954 -> m1_955  [key=0, style=solid];
m1_955 -> m1_947  [color=blue, key=0, style=bold];
m1_741 -> m1_742  [key=0, style=solid];
m1_744 -> m1_8  [key=2, style=dotted];
m1_744 -> m1_6  [key=2, style=dotted];
m1_744 -> m1_7  [key=2, style=dotted];
m1_744 -> m1_745  [key=0, style=solid];
m1_744 -> m1_746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_744 -> m1_747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_744 -> m1_748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_744 -> m1_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_744 -> m1_750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_747 -> m1_62  [key=2, style=dotted];
m1_747 -> m1_63  [key=2, style=dotted];
m1_747 -> m1_748  [key=0, style=solid];
m1_749 -> m1_62  [key=2, style=dotted];
m1_749 -> m1_63  [key=2, style=dotted];
m1_749 -> m1_750  [key=0, style=solid];
m1_742 -> m1_744  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_742 -> m1_743  [key=0, style=solid];
m1_743 -> m1_744  [key=0, style=solid];
m1_743 -> m1_680  [key=2, style=dotted];
m1_743 -> m1_745  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_743 -> m1_755  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_743 -> m1_751  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_743 -> m1_752  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_745 -> m1_746  [key=0, style=solid];
m1_745 -> m1_755  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_746 -> m1_747  [key=0, style=solid];
m1_746 -> m1_686  [key=2, style=dotted];
m1_748 -> m1_9  [key=2, style=dotted];
m1_748 -> m1_749  [key=0, style=solid];
m1_750 -> m1_9  [key=2, style=dotted];
m1_750 -> m1_751  [key=0, style=solid];
m1_751 -> m1_9  [key=2, style=dotted];
m1_751 -> m1_752  [key=0, style=solid];
m1_752 -> m1_9  [key=2, style=dotted];
m1_752 -> m1_753  [key=0, style=solid];
m1_753 -> m1_741  [color=blue, key=0, style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_9  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_27  [key=2, style=dotted];
m1_24 -> m1_62  [key=2, style=dotted];
m1_24 -> m1_63  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_9  [key=2, style=dotted];
m1_26 -> m1_23  [color=blue, key=0, style=bold];
m1_26 -> m1_9  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_64  [key=2, style=dotted];
m1_208 -> m1_206  [color=blue, key=0, style=bold];
m1_63 -> m1_64  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [key=2, style=dotted];
m1_205 -> m1_193  [color=blue, key=0, style=bold];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_286  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_284 -> m1_288  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m1_284 -> m1_290  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_284 -> m1_292  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_284 -> m1_293  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_284 -> m1_294  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_284 -> m1_295  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_284 -> m1_297  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m1_284 -> m1_304  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m1_284 -> m1_202  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse", style=bold];
m1_284 -> m1_200  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse", style=bold];
m1_284 -> m1_11  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.ParseResult Int32TryParse", style=bold];
m1_284 -> m1_300  [color=darkorchid, key=3, label="Parameter variable int value", style=bold];
m1_284 -> m1_9  [key=2, style=dotted];
m1_285 -> m1_286  [key=0, style=solid];
m1_285 -> m1_300  [color=darkseagreen4, key=1, label="out int", style=dashed];
m1_285 -> m1_301  [color=darkseagreen4, key=1, label="out int", style=dashed];
m1_285 -> m1_312  [color=darkseagreen4, key=1, label="out int", style=dashed];
m1_285 -> m1_314  [color=darkseagreen4, key=1, label="out int", style=dashed];
m1_285 -> m1_316  [color=darkseagreen4, key=1, label="out int", style=dashed];
m1_285 -> m1_133  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_288  [key=0, style=solid];
m1_286 -> m1_265  [color=blue, key=0, style=bold];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_311  [color=darkseagreen4, key=1, label=isNegative, style=dashed];
m1_288 -> m1_285  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_288 -> m1_278  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_288 -> m1_281  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_288 -> m1_282  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_292  [key=0, style=solid];
m1_292 -> m1_293  [key=0, style=solid];
m1_292 -> m1_292  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_292 -> m1_294  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_292 -> m1_295  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_293  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_294 -> m1_303  [color=darkseagreen4, key=1, label=end, style=dashed];
m1_294 -> m1_8  [key=2, style=dotted];
m1_294 -> m1_6  [key=2, style=dotted];
m1_294 -> m1_7  [key=2, style=dotted];
m1_294 -> m1_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_294 -> m1_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_297  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_295 -> m1_302  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_295 -> m1_310  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_295 -> m1_284  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_295 -> m1_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_300  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_297 -> m1_62  [key=2, style=dotted];
m1_297 -> m1_63  [key=2, style=dotted];
m1_304 -> m1_305  [key=0, style=solid];
m1_304 -> m1_302  [color=blue, key=0, style=bold];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_309  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m1_300 -> m1_133  [key=2, style=dotted];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_309  [key=0, style=solid];
m1_301 -> m1_290  [color=blue, key=0, style=bold];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_314  [key=0, style=solid];
m1_312 -> m1_62  [key=2, style=dotted];
m1_312 -> m1_63  [key=2, style=dotted];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_314  [color=darkseagreen4, key=1, label="out int", style=dashed];
m1_314 -> m1_316  [color=darkseagreen4, key=1, label="out int", style=dashed];
m1_314 -> m1_9  [key=2, style=dotted];
m1_287 -> m1_316  [key=0, style=solid];
m1_287 -> m1_288  [key=0, style=solid];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_294  [key=0, style=solid];
m1_289 -> m1_287  [color=blue, key=0, style=bold];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_315  [key=0, style=solid];
m1_311 -> m1_61  [key=2, style=dotted];
m1_291 -> m1_316  [key=0, style=solid];
m1_291 -> m1_296  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_291 -> m1_292  [key=0, style=solid];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_311  [key=0, style=solid];
m1_296 -> m1_61  [key=2, style=dotted];
m1_303 -> m1_304  [key=0, style=solid];
m1_303 -> m1_308  [key=0, style=solid];
m1_303 -> m1_300  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_303 -> m1_299  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_302 -> m1_303  [key=0, style=solid];
m1_302 -> m1_302  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_302 -> m1_304  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_302 -> m1_307  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_302 -> m1_310  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_310 -> m1_296  [key=0, style=solid];
m1_310 -> m1_310  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_300  [key=0, style=solid];
m1_298 -> m1_9  [key=2, style=dotted];
m1_299 -> m1_316  [key=0, style=solid];
m1_299 -> m1_9  [key=2, style=dotted];
m1_299 -> m1_300  [key=0, style=solid];
m1_309 -> m1_310  [key=0, style=solid];
m1_309 -> m1_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_309 -> m1_314  [color=darkseagreen4, key=1, label="out int", style=dashed];
m1_309 -> m1_316  [color=darkseagreen4, key=1, label="out int", style=dashed];
m1_309 -> m1_8  [key=2, style=dotted];
m1_309 -> m1_6  [key=2, style=dotted];
m1_309 -> m1_7  [key=2, style=dotted];
m1_309 -> m1_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_309 -> m1_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_307 -> m1_303  [key=0, style=solid];
m1_307 -> m1_307  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_307 -> m1_310  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_307 -> m1_309  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_307 -> m1_308  [key=0, style=solid];
m1_308 -> m1_316  [key=0, style=solid];
m1_308 -> m1_309  [key=0, style=solid];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_307  [key=0, style=solid];
m1_306 -> m1_316  [key=0, style=solid];
m1_306 -> m1_311  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_306 -> m1_307  [key=0, style=solid];
m1_315 -> m1_316  [key=0, style=solid];
m1_315 -> m1_133  [key=2, style=dotted];
m1_313 -> m1_316  [key=0, style=solid];
m1_313 -> m1_9  [key=2, style=dotted];
m1_313 -> m1_314  [key=0, style=solid];
m1_316 -> m1_284  [color=blue, key=0, style=bold];
m1_316 -> m1_305  [color=blue, key=0, style=bold];
m1_606 -> m1_607  [key=0, style=solid];
m1_612 -> m1_61  [key=2, style=dotted];
m1_612 -> m1_613  [key=0, style=solid];
m1_610 -> m1_8  [key=2, style=dotted];
m1_610 -> m1_6  [key=2, style=dotted];
m1_610 -> m1_7  [key=2, style=dotted];
m1_610 -> m1_612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_611  [key=0, style=solid];
m1_610 -> m1_613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_619  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_610 -> m1_623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_613 -> m1_62  [key=2, style=dotted];
m1_613 -> m1_63  [key=2, style=dotted];
m1_613 -> m1_614  [key=0, style=solid];
m1_615 -> m1_62  [key=2, style=dotted];
m1_615 -> m1_63  [key=2, style=dotted];
m1_615 -> m1_616  [key=0, style=solid];
m1_618 -> m1_62  [key=2, style=dotted];
m1_618 -> m1_63  [key=2, style=dotted];
m1_618 -> m1_619  [key=0, style=solid];
m1_622 -> m1_62  [key=2, style=dotted];
m1_622 -> m1_63  [key=2, style=dotted];
m1_622 -> m1_623  [key=0, style=solid];
m1_607 -> m1_612  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_607 -> m1_608  [key=0, style=solid];
m1_611 -> m1_612  [key=0, style=solid];
m1_611 -> m1_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_608 -> m1_610  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_608 -> m1_609  [key=0, style=solid];
m1_609 -> m1_610  [key=0, style=solid];
m1_614 -> m1_9  [key=2, style=dotted];
m1_614 -> m1_615  [key=0, style=solid];
m1_616 -> m1_9  [key=2, style=dotted];
m1_616 -> m1_617  [key=0, style=solid];
m1_617 -> m1_9  [key=2, style=dotted];
m1_617 -> m1_618  [key=0, style=solid];
m1_617 -> m1_64  [key=2, style=dotted];
m1_619 -> m1_9  [key=2, style=dotted];
m1_619 -> m1_620  [key=0, style=solid];
m1_620 -> m1_9  [key=2, style=dotted];
m1_620 -> m1_621  [key=0, style=solid];
m1_620 -> m1_64  [key=2, style=dotted];
m1_623 -> m1_9  [key=2, style=dotted];
m1_623 -> m1_624  [key=0, style=solid];
m1_621 -> m1_622  [key=0, style=solid];
m1_621 -> m1_66  [key=2, style=dotted];
m1_624 -> m1_66  [key=2, style=dotted];
m1_624 -> m1_625  [key=0, style=solid];
m1_625 -> m1_606  [color=blue, key=0, style=bold];
m1_90 -> m1_62  [key=2, style=dotted];
m1_90 -> m1_63  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_236  [key=2, style=dotted];
m1_234 -> m1_221  [key=2, style=dotted];
m1_921 -> m1_922  [key=0, style=solid];
m1_922 -> m1_925  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_922 -> m1_923  [key=0, style=solid];
m1_922 -> m1_924  [key=2, style=dotted];
m1_923 -> m1_921  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_0 -> m1_4  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_0 -> m1_6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_0 -> m1_0  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode", style=bold];
m1_0 -> m1_11  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode", style=bold];
m1_0 -> m1_9  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> m1_13  [key=2, style=dotted];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_7  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_6  [key=0, style=solid];
m1_4 -> m1_14  [key=2, style=dotted];
m1_4 -> m1_9  [key=2, style=dotted];
m1_5 -> m1_12  [key=0, style=solid];
m1_5 -> m1_15  [key=2, style=dotted];
m1_5 -> m1_0  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_11  [key=0, style=solid];
m1_6 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_17  [key=2, style=dotted];
m1_7 -> m1_9  [color=darkseagreen4, key=1, label=nonNullable, style=dashed];
m1_3 -> m1_12  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_16  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=0, style=solid];
m1_8 -> m1_14  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_15  [key=2, style=dotted];
m1_9 -> m1_18  [key=2, style=dotted];
m1_10 -> m1_12  [key=0, style=solid];
m1_10 -> m1_0  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_12 -> m1_0  [color=blue, key=0, style=bold];
m1_12 -> m1_14  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_247  [key=0, style=solid];
m1_241 -> m1_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_243  [key=2, style=dotted];
m1_241 -> m1_36  [key=2, style=dotted];
m1_241 -> m1_248  [key=2, style=dotted];
m1_242 -> m1_240  [color=blue, key=0, style=bold];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_246  [key=0, style=solid];
m1_268 -> m1_269  [key=0, style=solid];
m1_388 -> m1_389  [key=0, style=solid];
m1_394 -> m1_61  [key=2, style=dotted];
m1_394 -> m1_395  [key=0, style=solid];
m1_392 -> m1_8  [key=2, style=dotted];
m1_392 -> m1_6  [key=2, style=dotted];
m1_392 -> m1_7  [key=2, style=dotted];
m1_392 -> m1_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_392 -> m1_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_392 -> m1_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_392 -> m1_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_392 -> m1_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_392 -> m1_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_395 -> m1_62  [key=2, style=dotted];
m1_395 -> m1_63  [key=2, style=dotted];
m1_395 -> m1_396  [key=0, style=solid];
m1_397 -> m1_62  [key=2, style=dotted];
m1_397 -> m1_63  [key=2, style=dotted];
m1_397 -> m1_398  [key=0, style=solid];
m1_401 -> m1_62  [key=2, style=dotted];
m1_401 -> m1_63  [key=2, style=dotted];
m1_401 -> m1_402  [key=0, style=solid];
m1_389 -> m1_394  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_389 -> m1_390  [key=0, style=solid];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_403 -> m1_133  [key=2, style=dotted];
m1_403 -> m1_404  [key=0, style=solid];
m1_390 -> m1_392  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_390 -> m1_391  [key=0, style=solid];
m1_391 -> m1_392  [key=0, style=solid];
m1_396 -> m1_9  [key=2, style=dotted];
m1_396 -> m1_397  [key=0, style=solid];
m1_398 -> m1_9  [key=2, style=dotted];
m1_398 -> m1_399  [key=0, style=solid];
m1_402 -> m1_9  [key=2, style=dotted];
m1_402 -> m1_403  [key=0, style=solid];
m1_399 -> m1_9  [key=2, style=dotted];
m1_399 -> m1_400  [key=0, style=solid];
m1_400 -> m1_9  [key=2, style=dotted];
m1_400 -> m1_401  [key=0, style=solid];
m1_404 -> m1_388  [color=blue, key=0, style=bold];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_96  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
m1_94 -> m1_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_94 -> m1_98  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
m1_94 -> m1_99  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_94 -> m1_100  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
m1_94 -> m1_101  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_94 -> m1_102  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
m1_94 -> m1_103  [color=darkseagreen4, key=1, label=BigInteger, style=dashed];
m1_94 -> m1_105  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_94 -> m1_94  [color=darkorchid, key=3, label="method methodReturn object FromBigInteger", style=bold];
m1_94 -> m1_122  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
m1_94 -> m1_9  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_97  [key=0, style=solid];
m1_95 -> m1_62  [key=2, style=dotted];
m1_95 -> m1_63  [key=2, style=dotted];
m1_96 -> m1_106  [key=0, style=solid];
m1_96 -> m1_9  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=0, style=solid];
m1_97 -> m1_62  [key=2, style=dotted];
m1_97 -> m1_63  [key=2, style=dotted];
m1_98 -> m1_106  [key=0, style=solid];
m1_98 -> m1_9  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_101  [key=0, style=solid];
m1_99 -> m1_9  [key=2, style=dotted];
m1_99 -> m1_64  [key=2, style=dotted];
m1_100 -> m1_106  [key=0, style=solid];
m1_100 -> m1_62  [key=2, style=dotted];
m1_100 -> m1_63  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_103  [key=0, style=solid];
m1_101 -> m1_9  [key=2, style=dotted];
m1_102 -> m1_106  [key=0, style=solid];
m1_102 -> m1_9  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_106  [key=0, style=solid];
m1_103 -> m1_107  [key=2, style=dotted];
m1_103 -> m1_62  [key=2, style=dotted];
m1_103 -> m1_63  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_108  [key=2, style=dotted];
m1_105 -> m1_93  [key=2, style=dotted];
m1_105 -> m1_9  [key=2, style=dotted];
m1_105 -> m1_64  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_9  [key=2, style=dotted];
m1_106 -> m1_94  [color=blue, key=0, style=bold];
m1_106 -> m1_62  [key=2, style=dotted];
m1_106 -> m1_63  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_477 -> m1_478  [key=0, style=solid];
m1_483 -> m1_61  [key=2, style=dotted];
m1_483 -> m1_484  [key=0, style=solid];
m1_481 -> m1_8  [key=2, style=dotted];
m1_481 -> m1_6  [key=2, style=dotted];
m1_481 -> m1_7  [key=2, style=dotted];
m1_481 -> m1_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_481 -> m1_482  [key=0, style=solid];
m1_481 -> m1_484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_481 -> m1_485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_481 -> m1_486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_481 -> m1_487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_481 -> m1_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_481 -> m1_490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_481 -> m1_493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_481 -> m1_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_484 -> m1_62  [key=2, style=dotted];
m1_484 -> m1_63  [key=2, style=dotted];
m1_484 -> m1_485  [key=0, style=solid];
m1_486 -> m1_62  [key=2, style=dotted];
m1_486 -> m1_63  [key=2, style=dotted];
m1_486 -> m1_487  [key=0, style=solid];
m1_489 -> m1_62  [key=2, style=dotted];
m1_489 -> m1_63  [key=2, style=dotted];
m1_489 -> m1_490  [key=0, style=solid];
m1_493 -> m1_62  [key=2, style=dotted];
m1_493 -> m1_63  [key=2, style=dotted];
m1_493 -> m1_494  [key=0, style=solid];
m1_478 -> m1_483  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_478 -> m1_479  [key=0, style=solid];
m1_482 -> m1_483  [key=0, style=solid];
m1_482 -> m1_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_495 -> m1_133  [key=2, style=dotted];
m1_495 -> m1_496  [key=0, style=solid];
m1_479 -> m1_481  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_479 -> m1_480  [key=0, style=solid];
m1_480 -> m1_481  [key=0, style=solid];
m1_485 -> m1_9  [key=2, style=dotted];
m1_485 -> m1_486  [key=0, style=solid];
m1_487 -> m1_9  [key=2, style=dotted];
m1_487 -> m1_488  [key=0, style=solid];
m1_490 -> m1_9  [key=2, style=dotted];
m1_490 -> m1_491  [key=0, style=solid];
m1_494 -> m1_9  [key=2, style=dotted];
m1_494 -> m1_495  [key=0, style=solid];
m1_488 -> m1_9  [key=2, style=dotted];
m1_488 -> m1_489  [key=0, style=solid];
m1_491 -> m1_9  [key=2, style=dotted];
m1_491 -> m1_492  [key=0, style=solid];
m1_492 -> m1_9  [key=2, style=dotted];
m1_492 -> m1_493  [key=0, style=solid];
m1_496 -> m1_477  [color=blue, key=0, style=bold];
m1_222 -> m1_252  [key=0, style=solid];
m1_222 -> m1_254  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_255  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_256  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_257  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_258  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_259  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_260  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_261  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_262  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_263  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_264  [color=darkseagreen4, key=1, label=INullable, style=dashed];
m1_222 -> m1_122  [color=darkorchid, key=3, label="Parameter variable INullable nullableValue", style=bold];
m1_222 -> m1_57  [color=darkorchid, key=3, label="method methodReturn object ToValue", style=bold];
m1_222 -> m1_223  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_254  [key=0, style=solid];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_256  [key=0, style=solid];
m1_254 -> m1_8  [key=2, style=dotted];
m1_254 -> m1_6  [key=2, style=dotted];
m1_254 -> m1_7  [key=2, style=dotted];
m1_254 -> m1_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_254 -> m1_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_255 -> m1_265  [key=0, style=solid];
m1_255 -> m1_266  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_258  [key=0, style=solid];
m1_256 -> m1_61  [key=2, style=dotted];
m1_257 -> m1_265  [key=0, style=solid];
m1_257 -> m1_266  [key=2, style=dotted];
m1_257 -> m1_62  [key=2, style=dotted];
m1_257 -> m1_63  [key=2, style=dotted];
m1_257 -> m1_258  [key=0, style=solid];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_260  [key=0, style=solid];
m1_258 -> m1_9  [key=2, style=dotted];
m1_259 -> m1_265  [key=0, style=solid];
m1_259 -> m1_266  [key=2, style=dotted];
m1_259 -> m1_9  [key=2, style=dotted];
m1_259 -> m1_260  [key=0, style=solid];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_262  [key=0, style=solid];
m1_260 -> m1_133  [key=2, style=dotted];
m1_261 -> m1_265  [key=0, style=solid];
m1_261 -> m1_266  [key=2, style=dotted];
m1_261 -> m1_250  [color=blue, key=0, style=bold];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_264  [key=0, style=solid];
m1_263 -> m1_265  [key=0, style=solid];
m1_263 -> m1_266  [key=2, style=dotted];
m1_263 -> m1_260  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_263 -> m1_259  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_263 -> m1_264  [key=0, style=solid];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_250  [key=2, style=dotted];
m1_264 -> m1_267  [key=2, style=dotted];
m1_264 -> m1_268  [key=2, style=dotted];
m1_264 -> m1_262  [color=blue, key=0, style=bold];
m1_253 -> m1_265  [key=0, style=solid];
m1_253 -> m1_254  [key=0, style=solid];
m1_265 -> m1_222  [color=blue, key=0, style=bold];
m1_265 -> m1_266  [color=green, key=0, style=solid];
m1_217 -> m1_9  [key=2, style=dotted];
m1_217 -> m1_218  [key=0, style=solid];
m1_266 -> m1_267  [color=green, key=0, style=solid];
m1_266 -> m1_271  [color=green, key=1, label=schemaJson, style=dashed];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_269  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_61  [key=2, style=dotted];
m1_269 -> m1_271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_8  [key=2, style=dotted];
m1_269 -> m1_6  [key=2, style=dotted];
m1_269 -> m1_7  [key=2, style=dotted];
m1_269 -> m1_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_269 -> m1_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_270 -> m1_215  [color=blue, key=0, style=bold];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_62  [key=2, style=dotted];
m1_272 -> m1_63  [key=2, style=dotted];
m1_272 -> m1_282  [key=0, style=solid];
m1_272 -> m1_19  [key=2, style=dotted];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_9  [key=2, style=dotted];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_62  [key=2, style=dotted];
m1_274 -> m1_63  [key=2, style=dotted];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_9  [key=2, style=dotted];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_62  [key=2, style=dotted];
m1_276 -> m1_63  [key=2, style=dotted];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_9  [key=2, style=dotted];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_62  [key=2, style=dotted];
m1_279 -> m1_63  [key=2, style=dotted];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_9  [key=2, style=dotted];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_62  [key=2, style=dotted];
m1_283 -> m1_63  [key=2, style=dotted];
m1_283 -> m1_207  [color=blue, key=0, style=bold];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_9  [key=2, style=dotted];
m1_281 -> m1_9  [key=2, style=dotted];
m1_281 -> m1_282  [key=0, style=solid];
m1_281 -> m1_283  [key=0, style=solid];
m1_282 -> m1_283  [key=0, style=solid];
m1_282 -> m1_9  [key=2, style=dotted];
m1_931 -> m1_932  [key=0, style=solid];
m1_933 -> m1_8  [key=2, style=dotted];
m1_933 -> m1_6  [key=2, style=dotted];
m1_933 -> m1_7  [key=2, style=dotted];
m1_933 -> m1_934  [key=0, style=solid];
m1_932 -> m1_933  [key=0, style=solid];
m1_932 -> m1_908  [key=2, style=dotted];
m1_932 -> m1_909  [key=2, style=dotted];
m1_934 -> m1_935  [key=0, style=solid];
m1_934 -> m1_937  [key=2, style=dotted];
m1_935 -> m1_9  [key=2, style=dotted];
m1_935 -> m1_936  [key=0, style=solid];
m1_936 -> m1_931  [color=blue, key=0, style=bold];
m1_92 -> m1_9  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_64  [key=2, style=dotted];
m1_210 -> m1_215  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_210 -> m1_211  [key=0, style=solid];
m1_16 -> m1_61  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [color=darkseagreen4, key=1, label=schema, style=dashed];
m1_250 -> m1_251  [key=0, style=solid];
m1_251 -> m1_256  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_251 -> m1_252  [key=0, style=solid];
m1_914 -> m1_915  [key=0, style=solid];
m1_916 -> m1_8  [key=2, style=dotted];
m1_916 -> m1_6  [key=2, style=dotted];
m1_916 -> m1_7  [key=2, style=dotted];
m1_916 -> m1_917  [key=0, style=solid];
m1_915 -> m1_916  [key=0, style=solid];
m1_915 -> m1_908  [key=2, style=dotted];
m1_915 -> m1_909  [key=2, style=dotted];
m1_917 -> m1_918  [key=0, style=solid];
m1_917 -> m1_920  [key=2, style=dotted];
m1_918 -> m1_9  [key=2, style=dotted];
m1_918 -> m1_919  [key=0, style=solid];
m1_919 -> m1_914  [color=blue, key=0, style=bold];
m1_18 -> m1_9  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_36 -> m1_9  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_37 -> m1_9  [key=2, style=dotted];
m1_37 -> m1_64  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_38 -> m1_9  [key=2, style=dotted];
m1_39 -> m1_36  [color=blue, key=0, style=bold];
m1_39 -> m1_9  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_57  [color=darkorchid, key=3, label="method methodReturn System.Func<object, object> CreateCastConverter", style=bold];
m1_52 -> m1_59  [color=darkorchid, key=3, label="method methodReturn System.Func<object, object> CreateCastConverter", style=bold];
m1_52 -> m1_62  [key=2, style=dotted];
m1_52 -> m1_63  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_61  [key=2, style=dotted];
m1_53 -> m1_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_53 -> m1_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_53 -> m1_56  [color=darkseagreen4, key=1, label=castMethodInfo, style=dashed];
m1_53 -> m1_58  [color=darkseagreen4, key=1, label=castMethodInfo, style=dashed];
m1_53 -> m1_9  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_56  [key=0, style=solid];
m1_54 -> m1_9  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_61  [key=2, style=dotted];
m1_55 -> m1_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_55 -> m1_58  [color=darkseagreen4, key=1, label=castMethodInfo, style=dashed];
m1_55 -> m1_62  [key=2, style=dotted];
m1_55 -> m1_63  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=0, style=solid];
m1_56 -> m1_9  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_62  [key=2, style=dotted];
m1_58 -> m1_64  [color=darkseagreen4, key=1, label=call, style=dashed];
m1_58 -> m1_65  [key=2, style=dotted];
m1_57 -> m1_60  [key=0, style=solid];
m1_57 -> m1_9  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_64  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_59 -> m1_66  [key=2, style=dotted];
m1_60 -> m1_52  [color=blue, key=0, style=bold];
m1_60 -> m1_10  [color=blue, key=0, style=bold];
m1_213 -> m1_8  [key=2, style=dotted];
m1_213 -> m1_6  [key=2, style=dotted];
m1_213 -> m1_7  [key=2, style=dotted];
m1_213 -> m1_215  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_213 -> m1_217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_249 -> m1_244  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_47  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_44 -> m1_46  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m1_44 -> m1_49  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m1_44 -> m1_9  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_47  [key=0, style=solid];
m1_45 -> m1_9  [key=2, style=dotted];
m1_45 -> m1_64  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_49  [key=2, style=dotted];
m1_47 -> m1_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey", style=dashed];
m1_47 -> m1_9  [key=2, style=dotted];
m1_46 -> m1_48  [key=0, style=solid];
m1_46 -> m1_9  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_48 -> m1_44  [color=blue, key=0, style=bold];
m1_48 -> m1_62  [key=2, style=dotted];
m1_48 -> m1_63  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_204 -> m1_133  [key=2, style=dotted];
m1_204 -> m1_205  [key=0, style=solid];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_62  [key=2, style=dotted];
m1_40 -> m1_63  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_43  [key=2, style=dotted];
m1_41 -> m1_9  [key=2, style=dotted];
m1_42 -> m1_40  [color=blue, key=0, style=bold];
m1_42 -> m1_9  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_207 -> m1_272  [key=0, style=solid];
m1_207 -> m1_122  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_207 -> m1_129  [color=darkorchid, key=3, label="method methodReturn bool IsInteger", style=bold];
m1_207 -> m1_46  [color=darkorchid, key=3, label="method methodReturn bool IsInteger", style=bold];
m1_207 -> m1_204  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_207 -> m1_202  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_207 -> m1_203  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_207 -> m1_208  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_0  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Utilities.PrimitiveTypeCode GetTypeCode", style=bold];
m1_19 -> m1_207  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m1_19 -> m1_9  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=2, style=dotted];
m1_20 -> m1_0  [key=2, style=dotted];
m1_20 -> m1_9  [key=2, style=dotted];
m1_21 -> m1_19  [color=blue, key=0, style=bold];
m1_21 -> m1_62  [key=2, style=dotted];
m1_21 -> m1_63  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_209 -> m1_210  [key=0, style=solid];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_203  [key=0, style=solid];
m1_183 -> m1_61  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_217  [key=2, style=dotted];
m1_181 -> m1_8  [key=2, style=dotted];
m1_181 -> m1_6  [key=2, style=dotted];
m1_181 -> m1_7  [key=2, style=dotted];
m1_181 -> m1_183  [color=darkseagreen4, key=1, label=toConverter, style=dashed];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_181 -> m1_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_181 -> m1_215  [key=2, style=dotted];
m1_184 -> m1_62  [key=2, style=dotted];
m1_184 -> m1_63  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_203  [key=0, style=solid];
m1_178 -> m1_183  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_181  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_182 -> m1_185  [key=0, style=solid];
m1_182 -> m1_216  [key=2, style=dotted];
m1_188 -> m1_133  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_203  [key=0, style=solid];
m1_179 -> m1_181  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_94  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_203  [key=0, style=solid];
m1_185 -> m1_9  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_215  [key=2, style=dotted];
m1_185 -> m1_187  [color=darkseagreen4, key=1, label=fromConverter, style=dashed];
m1_186 -> m1_9  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_189  [key=0, style=solid];
m1_186 -> m1_218  [key=2, style=dotted];
m1_187 -> m1_9  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_219  [key=2, style=dotted];
m1_189 -> m1_177  [color=blue, key=0, style=bold];
m1_189 -> m1_190  [key=0, style=solid];
m1_189 -> m1_195  [key=0, style=solid];
m1_216 -> m1_62  [key=2, style=dotted];
m1_216 -> m1_63  [key=2, style=dotted];
m1_216 -> m1_217  [key=0, style=solid];
m1_65 -> m1_63  [color=blue, key=0, style=bold];
m1_221 -> m1_237  [key=0, style=solid];
m1_221 -> m1_238  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_221 -> m1_239  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_221 -> m1_240  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_221 -> m1_241  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_221 -> m1_243  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_221 -> m1_244  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_221 -> m1_246  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_221 -> m1_57  [color=darkorchid, key=3, label="method methodReturn object EnsureTypeAssignable", style=bold];
m1_221 -> m1_222  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_221 -> m1_226  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
m1_221 -> m1_139  [color=darkorchid, key=3, label="Parameter variable System.Type initialType", style=bold];
m1_221 -> m1_122  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
m1_221 -> m1_221  [color=darkorchid, key=3, label="method methodReturn object EnsureTypeAssignable", style=bold];
m1_221 -> m1_209  [color=blue, key=0, style=bold];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_22  [key=2, style=dotted];
m1_237 -> m1_239  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m1_237 -> m1_241  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_244  [key=0, style=solid];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_241  [key=0, style=solid];
m1_239 -> m1_31  [key=2, style=dotted];
m1_239 -> m1_237  [color=blue, key=0, style=bold];
m1_243 -> m1_247  [key=0, style=solid];
m1_243 -> m1_249  [key=2, style=dotted];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_246  [key=0, style=solid];
m1_244 -> m1_220  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_250  [key=2, style=dotted];
m1_246 -> m1_251  [key=2, style=dotted];
m1_246 -> m1_124  [key=2, style=dotted];
m1_246 -> m1_8  [key=2, style=dotted];
m1_246 -> m1_6  [key=2, style=dotted];
m1_246 -> m1_7  [key=2, style=dotted];
m1_246 -> m1_248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_245 -> m1_247  [key=0, style=solid];
m1_245 -> m1_246  [key=0, style=solid];
m1_247 -> m1_221  [color=blue, key=0, style=bold];
m1_247 -> m1_61  [key=2, style=dotted];
m1_247 -> m1_248  [key=0, style=solid];
m1_819 -> m1_820  [key=0, style=solid];
m1_829 -> m1_8  [key=2, style=dotted];
m1_829 -> m1_6  [key=2, style=dotted];
m1_829 -> m1_7  [key=2, style=dotted];
m1_829 -> m1_830  [key=0, style=solid];
m1_829 -> m1_831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_842  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_843  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_844  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_845  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_846  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_849  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_851  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_856  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_876  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_829 -> m1_880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_832 -> m1_62  [key=2, style=dotted];
m1_832 -> m1_63  [key=2, style=dotted];
m1_832 -> m1_833  [key=0, style=solid];
m1_834 -> m1_62  [key=2, style=dotted];
m1_834 -> m1_63  [key=2, style=dotted];
m1_834 -> m1_835  [key=0, style=solid];
m1_838 -> m1_62  [key=2, style=dotted];
m1_838 -> m1_63  [key=2, style=dotted];
m1_838 -> m1_839  [key=0, style=solid];
m1_841 -> m1_62  [key=2, style=dotted];
m1_841 -> m1_63  [key=2, style=dotted];
m1_841 -> m1_842  [key=0, style=solid];
m1_844 -> m1_62  [key=2, style=dotted];
m1_844 -> m1_63  [key=2, style=dotted];
m1_844 -> m1_845  [key=0, style=solid];
m1_849 -> m1_62  [key=2, style=dotted];
m1_849 -> m1_63  [key=2, style=dotted];
m1_849 -> m1_850  [key=0, style=solid];
m1_853 -> m1_62  [key=2, style=dotted];
m1_853 -> m1_63  [key=2, style=dotted];
m1_853 -> m1_854  [key=0, style=solid];
m1_856 -> m1_62  [key=2, style=dotted];
m1_856 -> m1_63  [key=2, style=dotted];
m1_856 -> m1_857  [key=0, style=solid];
m1_860 -> m1_62  [key=2, style=dotted];
m1_860 -> m1_63  [key=2, style=dotted];
m1_860 -> m1_861  [key=0, style=solid];
m1_867 -> m1_62  [key=2, style=dotted];
m1_867 -> m1_63  [key=2, style=dotted];
m1_867 -> m1_868  [key=0, style=solid];
m1_871 -> m1_62  [key=2, style=dotted];
m1_871 -> m1_63  [key=2, style=dotted];
m1_871 -> m1_872  [key=0, style=solid];
m1_876 -> m1_62  [key=2, style=dotted];
m1_876 -> m1_63  [key=2, style=dotted];
m1_876 -> m1_877  [key=0, style=solid];
m1_878 -> m1_62  [key=2, style=dotted];
m1_878 -> m1_63  [key=2, style=dotted];
m1_878 -> m1_879  [key=0, style=solid];
m1_880 -> m1_62  [key=2, style=dotted];
m1_880 -> m1_881  [key=0, style=solid];
m1_880 -> m1_65  [key=2, style=dotted];
m1_826 -> m1_829  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_826 -> m1_827  [key=0, style=solid];
m1_828 -> m1_829  [key=0, style=solid];
m1_828 -> m1_680  [key=2, style=dotted];
m1_828 -> m1_830  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_885  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_847  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_848  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_852  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_855  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_859  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_863  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_864  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_865  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_866  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_870  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_874  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_828 -> m1_875  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_830 -> m1_830  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_830 -> m1_831  [key=0, style=solid];
m1_830 -> m1_884  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_831 -> m1_832  [key=0, style=solid];
m1_833 -> m1_9  [key=2, style=dotted];
m1_833 -> m1_834  [key=0, style=solid];
m1_835 -> m1_9  [key=2, style=dotted];
m1_835 -> m1_836  [key=0, style=solid];
m1_836 -> m1_9  [key=2, style=dotted];
m1_836 -> m1_837  [key=0, style=solid];
m1_836 -> m1_64  [key=2, style=dotted];
m1_839 -> m1_9  [key=2, style=dotted];
m1_839 -> m1_840  [key=0, style=solid];
m1_840 -> m1_9  [key=2, style=dotted];
m1_840 -> m1_841  [key=0, style=solid];
m1_840 -> m1_64  [key=2, style=dotted];
m1_842 -> m1_9  [key=2, style=dotted];
m1_842 -> m1_843  [key=0, style=solid];
m1_843 -> m1_9  [key=2, style=dotted];
m1_843 -> m1_844  [key=0, style=solid];
m1_843 -> m1_64  [key=2, style=dotted];
m1_845 -> m1_9  [key=2, style=dotted];
m1_845 -> m1_846  [key=0, style=solid];
m1_846 -> m1_9  [key=2, style=dotted];
m1_846 -> m1_847  [key=0, style=solid];
m1_846 -> m1_64  [key=2, style=dotted];
m1_850 -> m1_9  [key=2, style=dotted];
m1_850 -> m1_851  [key=0, style=solid];
m1_851 -> m1_9  [key=2, style=dotted];
m1_851 -> m1_852  [key=0, style=solid];
m1_851 -> m1_64  [key=2, style=dotted];
m1_854 -> m1_9  [key=2, style=dotted];
m1_854 -> m1_855  [key=0, style=solid];
m1_857 -> m1_9  [key=2, style=dotted];
m1_857 -> m1_858  [key=0, style=solid];
m1_858 -> m1_9  [key=2, style=dotted];
m1_858 -> m1_859  [key=0, style=solid];
m1_858 -> m1_64  [key=2, style=dotted];
m1_861 -> m1_9  [key=2, style=dotted];
m1_861 -> m1_862  [key=0, style=solid];
m1_862 -> m1_9  [key=2, style=dotted];
m1_862 -> m1_863  [key=0, style=solid];
m1_862 -> m1_64  [key=2, style=dotted];
m1_868 -> m1_9  [key=2, style=dotted];
m1_868 -> m1_869  [key=0, style=solid];
m1_869 -> m1_9  [key=2, style=dotted];
m1_869 -> m1_870  [key=0, style=solid];
m1_869 -> m1_64  [key=2, style=dotted];
m1_872 -> m1_9  [key=2, style=dotted];
m1_872 -> m1_873  [key=0, style=solid];
m1_873 -> m1_9  [key=2, style=dotted];
m1_873 -> m1_874  [key=0, style=solid];
m1_873 -> m1_64  [key=2, style=dotted];
m1_877 -> m1_9  [key=2, style=dotted];
m1_877 -> m1_878  [key=0, style=solid];
m1_879 -> m1_9  [key=2, style=dotted];
m1_879 -> m1_880  [key=0, style=solid];
m1_847 -> m1_9  [key=2, style=dotted];
m1_847 -> m1_848  [key=0, style=solid];
m1_848 -> m1_9  [key=2, style=dotted];
m1_848 -> m1_849  [key=0, style=solid];
m1_852 -> m1_9  [key=2, style=dotted];
m1_852 -> m1_853  [key=0, style=solid];
m1_855 -> m1_9  [key=2, style=dotted];
m1_855 -> m1_856  [key=0, style=solid];
m1_859 -> m1_9  [key=2, style=dotted];
m1_859 -> m1_860  [key=0, style=solid];
m1_863 -> m1_9  [key=2, style=dotted];
m1_863 -> m1_864  [key=0, style=solid];
m1_864 -> m1_9  [key=2, style=dotted];
m1_864 -> m1_865  [key=0, style=solid];
m1_865 -> m1_9  [key=2, style=dotted];
m1_865 -> m1_866  [key=0, style=solid];
m1_866 -> m1_9  [key=2, style=dotted];
m1_866 -> m1_867  [key=0, style=solid];
m1_870 -> m1_9  [key=2, style=dotted];
m1_870 -> m1_871  [key=0, style=solid];
m1_874 -> m1_9  [key=2, style=dotted];
m1_874 -> m1_875  [key=0, style=solid];
m1_875 -> m1_9  [key=2, style=dotted];
m1_875 -> m1_876  [key=0, style=solid];
m1_837 -> m1_9  [key=2, style=dotted];
m1_837 -> m1_838  [key=0, style=solid];
m1_825 -> m1_826  [key=0, style=solid];
m1_825 -> m1_882  [key=2, style=dotted];
m1_827 -> m1_828  [key=0, style=solid];
m1_827 -> m1_830  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_824 -> m1_831  [color=darkseagreen4, key=1, label=secondSchema, style=dashed];
m1_824 -> m1_825  [key=0, style=solid];
m1_824 -> m1_695  [key=2, style=dotted];
m1_821 -> m1_824  [color=darkseagreen4, key=1, label=second, style=dashed];
m1_821 -> m1_822  [key=0, style=solid];
m1_823 -> m1_824  [key=0, style=solid];
m1_823 -> m1_695  [key=2, style=dotted];
m1_822 -> m1_824  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m1_822 -> m1_823  [key=0, style=solid];
m1_822 -> m1_694  [key=2, style=dotted];
m1_820 -> m1_821  [key=0, style=solid];
m1_820 -> m1_823  [color=darkseagreen4, key=1, label=first, style=dashed];
m1_881 -> m1_819  [color=blue, key=0, style=bold];
m1_215 -> m1_61  [key=2, style=dotted];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_269  [key=0, style=solid];
m1_215 -> m1_139  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m1_215 -> m1_122  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m1_220 -> m1_133  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_212 -> m1_213  [key=0, style=solid];
m1_218 -> m1_9  [key=2, style=dotted];
m1_218 -> m1_219  [key=0, style=solid];
m1_219 -> m1_9  [key=2, style=dotted];
m1_219 -> m1_220  [key=0, style=solid];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_228  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_226 -> m1_229  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_226 -> m1_230  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_226 -> m1_232  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_226 -> m1_234  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_226 -> m1_226  [color=darkorchid, key=3, label="method methodReturn object ConvertOrCast", style=bold];
m1_226 -> m1_57  [color=darkorchid, key=3, label="method methodReturn object ConvertOrCast", style=bold];
m1_226 -> m1_221  [color=darkorchid, key=3, label="method methodReturn object ConvertOrCast", style=bold];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_229  [color=darkseagreen4, key=1, label=v, style=dashed];
m1_227 -> m1_234  [key=2, style=dotted];
m1_227 -> m1_235  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_230  [key=0, style=solid];
m1_229 -> m1_235  [key=0, style=solid];
m1_229 -> m1_61  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_236  [key=2, style=dotted];
m1_229 -> m1_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_229 -> m1_231  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_229 -> m1_232  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_232  [key=0, style=solid];
m1_230 -> m1_220  [key=2, style=dotted];
m1_230 -> m1_133  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_234  [key=0, style=solid];
m1_232 -> m1_127  [key=2, style=dotted];
m1_232 -> m1_9  [key=2, style=dotted];
m1_231 -> m1_235  [key=0, style=solid];
m1_231 -> m1_9  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_233 -> m1_235  [key=0, style=solid];
m1_233 -> m1_225  [color=blue, key=0, style=bold];
m1_235 -> m1_226  [color=blue, key=0, style=bold];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=0, style=solid];
m1_76 -> m1_61  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_78  [key=0, style=solid];
m1_74 -> m1_8  [key=2, style=dotted];
m1_74 -> m1_6  [key=2, style=dotted];
m1_74 -> m1_7  [key=2, style=dotted];
m1_74 -> m1_76  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_77  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_78  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_79  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_80  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_81  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_82  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_84  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_85  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_86  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_88  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_89  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_90  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_91  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_92  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_93  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_94  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_95  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_96  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_97  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_98  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_99  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_100  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_101  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_103  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_104  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_105  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_107  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_108  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_110  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_112  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_114  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_74 -> m1_115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_77 -> m1_62  [key=2, style=dotted];
m1_77 -> m1_63  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_89  [key=0, style=solid];
m1_77 -> m1_91  [key=2, style=dotted];
m1_79 -> m1_62  [key=2, style=dotted];
m1_79 -> m1_63  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_89  [key=0, style=solid];
m1_79 -> m1_91  [key=2, style=dotted];
m1_82 -> m1_62  [key=2, style=dotted];
m1_82 -> m1_63  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [key=0, style=solid];
m1_85 -> m1_62  [key=2, style=dotted];
m1_85 -> m1_63  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_89  [key=0, style=solid];
m1_85 -> m1_91  [key=2, style=dotted];
m1_87 -> m1_62  [key=2, style=dotted];
m1_87 -> m1_63  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_89  [key=0, style=solid];
m1_87 -> m1_91  [key=2, style=dotted];
m1_93 -> m1_62  [key=2, style=dotted];
m1_93 -> m1_63  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_108 -> m1_62  [key=2, style=dotted];
m1_108 -> m1_63  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_110 -> m1_62  [key=2, style=dotted];
m1_110 -> m1_63  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_112 -> m1_62  [key=2, style=dotted];
m1_112 -> m1_63  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_114 -> m1_62  [key=2, style=dotted];
m1_114 -> m1_63  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_71 -> m1_76  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_89  [key=0, style=solid];
m1_71 -> m1_90  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_75 -> m1_89  [key=0, style=solid];
m1_75 -> m1_91  [key=2, style=dotted];
m1_72 -> m1_74  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_89  [key=0, style=solid];
m1_73 -> m1_91  [key=2, style=dotted];
m1_78 -> m1_9  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_80  [key=0, style=solid];
m1_80 -> m1_9  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_82  [key=0, style=solid];
m1_81 -> m1_9  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_64  [key=2, style=dotted];
m1_81 -> m1_89  [key=0, style=solid];
m1_81 -> m1_91  [key=2, style=dotted];
m1_83 -> m1_9  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_89  [key=0, style=solid];
m1_83 -> m1_91  [key=2, style=dotted];
m1_84 -> m1_9  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_64  [key=2, style=dotted];
m1_84 -> m1_86  [key=0, style=solid];
m1_86 -> m1_9  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_88  [key=0, style=solid];
m1_88 -> m1_9  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_92  [key=2, style=dotted];
m1_88 -> m1_22  [key=2, style=dotted];
m1_88 -> m1_93  [key=2, style=dotted];
m1_89 -> m1_9  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_64  [key=2, style=dotted];
m1_89 -> m1_67  [color=blue, key=0, style=bold];
m1_91 -> m1_9  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_107 -> m1_9  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_109 -> m1_9  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_111  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_109 -> m1_115  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_109 -> m1_117  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_109 -> m1_119  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_111 -> m1_9  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_114  [key=0, style=solid];
m1_111 -> m1_116  [key=0, style=solid];
m1_111 -> m1_118  [key=0, style=solid];
m1_111 -> m1_120  [key=0, style=solid];
m1_111 -> m1_122  [key=2, style=dotted];
m1_111 -> m1_113  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_113 -> m1_9  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_121  [key=0, style=solid];
m1_115 -> m1_9  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_121  [key=0, style=solid];
m1_115 -> m1_123  [key=2, style=dotted];
m1_115 -> m1_22  [key=2, style=dotted];
m1_115 -> m1_124  [key=2, style=dotted];
m1_116 -> m1_66  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_117 -> m1_70  [color=blue, key=0, style=bold];
m1_117 -> m1_121  [key=0, style=solid];
m1_117 -> m1_125  [key=2, style=dotted];
m1_117 -> m1_93  [key=2, style=dotted];
m1_408 -> m1_409  [key=0, style=solid];
m1_414 -> m1_61  [key=2, style=dotted];
m1_414 -> m1_415  [key=0, style=solid];
m1_412 -> m1_8  [key=2, style=dotted];
m1_412 -> m1_6  [key=2, style=dotted];
m1_412 -> m1_7  [key=2, style=dotted];
m1_412 -> m1_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_412 -> m1_413  [key=0, style=solid];
m1_412 -> m1_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_412 -> m1_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_412 -> m1_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_412 -> m1_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_412 -> m1_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_412 -> m1_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_415 -> m1_62  [key=2, style=dotted];
m1_415 -> m1_63  [key=2, style=dotted];
m1_415 -> m1_416  [key=0, style=solid];
m1_417 -> m1_62  [key=2, style=dotted];
m1_417 -> m1_63  [key=2, style=dotted];
m1_417 -> m1_418  [key=0, style=solid];
m1_422 -> m1_62  [key=2, style=dotted];
m1_422 -> m1_63  [key=2, style=dotted];
m1_422 -> m1_423  [key=0, style=solid];
m1_409 -> m1_414  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_409 -> m1_410  [key=0, style=solid];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_419 -> m1_133  [key=2, style=dotted];
m1_419 -> m1_420  [key=0, style=solid];
m1_410 -> m1_412  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_410 -> m1_411  [key=0, style=solid];
m1_411 -> m1_412  [key=0, style=solid];
m1_416 -> m1_9  [key=2, style=dotted];
m1_416 -> m1_417  [key=0, style=solid];
m1_418 -> m1_9  [key=2, style=dotted];
m1_418 -> m1_419  [key=0, style=solid];
m1_423 -> m1_9  [key=2, style=dotted];
m1_423 -> m1_424  [key=0, style=solid];
m1_420 -> m1_9  [key=2, style=dotted];
m1_420 -> m1_421  [key=0, style=solid];
m1_421 -> m1_9  [key=2, style=dotted];
m1_421 -> m1_422  [key=0, style=solid];
m1_424 -> m1_408  [color=blue, key=0, style=bold];
m1_248 -> m1_62  [key=2, style=dotted];
m1_248 -> m1_63  [key=2, style=dotted];
m1_248 -> m1_249  [key=0, style=solid];
m1_581 -> m1_582  [key=0, style=solid];
m1_587 -> m1_61  [key=2, style=dotted];
m1_587 -> m1_588  [key=0, style=solid];
m1_585 -> m1_8  [key=2, style=dotted];
m1_585 -> m1_6  [key=2, style=dotted];
m1_585 -> m1_7  [key=2, style=dotted];
m1_585 -> m1_587  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_586  [key=0, style=solid];
m1_585 -> m1_588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_585 -> m1_598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_588 -> m1_62  [key=2, style=dotted];
m1_588 -> m1_63  [key=2, style=dotted];
m1_588 -> m1_589  [key=0, style=solid];
m1_590 -> m1_62  [key=2, style=dotted];
m1_590 -> m1_63  [key=2, style=dotted];
m1_590 -> m1_591  [key=0, style=solid];
m1_593 -> m1_62  [key=2, style=dotted];
m1_593 -> m1_63  [key=2, style=dotted];
m1_593 -> m1_594  [key=0, style=solid];
m1_597 -> m1_62  [key=2, style=dotted];
m1_597 -> m1_63  [key=2, style=dotted];
m1_597 -> m1_598  [key=0, style=solid];
m1_582 -> m1_587  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_582 -> m1_583  [key=0, style=solid];
m1_586 -> m1_587  [key=0, style=solid];
m1_586 -> m1_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_601 -> m1_133  [key=2, style=dotted];
m1_601 -> m1_602  [key=0, style=solid];
m1_583 -> m1_585  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_583 -> m1_584  [key=0, style=solid];
m1_584 -> m1_585  [key=0, style=solid];
m1_589 -> m1_9  [key=2, style=dotted];
m1_589 -> m1_590  [key=0, style=solid];
m1_591 -> m1_9  [key=2, style=dotted];
m1_591 -> m1_592  [key=0, style=solid];
m1_592 -> m1_9  [key=2, style=dotted];
m1_592 -> m1_593  [key=0, style=solid];
m1_592 -> m1_64  [key=2, style=dotted];
m1_594 -> m1_9  [key=2, style=dotted];
m1_594 -> m1_595  [key=0, style=solid];
m1_595 -> m1_9  [key=2, style=dotted];
m1_595 -> m1_596  [key=0, style=solid];
m1_595 -> m1_64  [key=2, style=dotted];
m1_598 -> m1_9  [key=2, style=dotted];
m1_598 -> m1_599  [key=0, style=solid];
m1_596 -> m1_9  [key=2, style=dotted];
m1_596 -> m1_597  [key=0, style=solid];
m1_599 -> m1_9  [key=2, style=dotted];
m1_599 -> m1_600  [key=0, style=solid];
m1_600 -> m1_9  [key=2, style=dotted];
m1_600 -> m1_601  [key=0, style=solid];
m1_602 -> m1_581  [color=blue, key=0, style=bold];
m1_686 -> m1_687  [key=0, style=solid];
m1_687 -> m1_688  [key=0, style=solid];
m1_687 -> m1_690  [color=darkseagreen4, key=1, label=first, style=dashed];
m1_692 -> m1_693  [key=0, style=solid];
m1_688 -> m1_689  [key=0, style=solid];
m1_688 -> m1_691  [color=darkseagreen4, key=1, label=second, style=dashed];
m1_690 -> m1_695  [key=2, style=dotted];
m1_690 -> m1_691  [key=0, style=solid];
m1_691 -> m1_695  [key=2, style=dotted];
m1_691 -> m1_692  [key=0, style=solid];
m1_689 -> m1_690  [key=0, style=solid];
m1_689 -> m1_694  [key=2, style=dotted];
m1_689 -> m1_691  [color=darkseagreen4, key=1, label=resolver, style=dashed];
m1_693 -> m1_686  [color=blue, key=0, style=bold];
m1_982 -> m1_983  [key=0, style=solid];
m1_988 -> m1_61  [key=2, style=dotted];
m1_988 -> m1_989  [key=0, style=solid];
m1_986 -> m1_8  [key=2, style=dotted];
m1_986 -> m1_6  [key=2, style=dotted];
m1_986 -> m1_7  [key=2, style=dotted];
m1_986 -> m1_988  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_986 -> m1_987  [key=0, style=solid];
m1_986 -> m1_989  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_986 -> m1_990  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_986 -> m1_991  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_986 -> m1_992  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_986 -> m1_994  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_986 -> m1_995  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_986 -> m1_997  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_986 -> m1_998  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_989 -> m1_62  [key=2, style=dotted];
m1_989 -> m1_990  [key=0, style=solid];
m1_983 -> m1_988  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_983 -> m1_984  [key=0, style=solid];
m1_987 -> m1_988  [key=0, style=solid];
m1_987 -> m1_1002  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_984 -> m1_986  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_984 -> m1_985  [key=0, style=solid];
m1_985 -> m1_986  [key=0, style=solid];
m1_990 -> m1_9  [key=2, style=dotted];
m1_990 -> m1_991  [key=0, style=solid];
m1_991 -> m1_992  [key=0, style=solid];
m1_991 -> m1_978  [key=2, style=dotted];
m1_992 -> m1_9  [key=2, style=dotted];
m1_992 -> m1_993  [key=0, style=solid];
m1_994 -> m1_995  [key=0, style=solid];
m1_994 -> m1_978  [key=2, style=dotted];
m1_995 -> m1_9  [key=2, style=dotted];
m1_995 -> m1_996  [key=0, style=solid];
m1_997 -> m1_998  [key=0, style=solid];
m1_997 -> m1_978  [key=2, style=dotted];
m1_998 -> m1_9  [key=2, style=dotted];
m1_998 -> m1_999  [key=0, style=solid];
m1_993 -> m1_9  [key=2, style=dotted];
m1_993 -> m1_994  [key=0, style=solid];
m1_996 -> m1_9  [key=2, style=dotted];
m1_996 -> m1_997  [key=0, style=solid];
m1_999 -> m1_9  [key=2, style=dotted];
m1_999 -> m1_1000  [key=0, style=solid];
m1_1000 -> m1_982  [color=blue, key=0, style=bold];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_122  [color=darkorchid, key=3, label="Parameter variable System.Type t", style=bold];
m1_28 -> m1_9  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=2, style=dotted];
m1_29 -> m1_62  [key=2, style=dotted];
m1_29 -> m1_63  [key=2, style=dotted];
m1_30 -> m1_28  [color=blue, key=0, style=bold];
m1_30 -> m1_9  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_14 -> m1_8  [key=2, style=dotted];
m1_14 -> m1_6  [key=2, style=dotted];
m1_14 -> m1_7  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_18  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_19  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_20  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_21  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_22  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_23  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_24  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_25  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_26  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_27  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_28  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_29  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_30  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_32  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_33  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_35  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_36  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_37  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_39  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_40  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_41  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_42  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_43  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_44  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_45  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_46  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_47  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_48  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_49  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_50  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_51  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_52  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_53  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_54  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_55  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_56  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_14 -> m1_58  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_43 -> m1_62  [key=2, style=dotted];
m1_43 -> m1_63  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_22 -> m1_9  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_27 -> m1_9  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_31 -> m1_9  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_64  [key=2, style=dotted];
m1_32 -> m1_9  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_122  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m1_33 -> m1_9  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [key=2, style=dotted];
m1_34 -> m1_9  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_32  [color=blue, key=0, style=bold];
m1_49 -> m1_9  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_44  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Utilities.ConvertUtils.TypeConvertKey other", style=bold];
m1_50 -> m1_9  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_64  [key=2, style=dotted];
m1_51 -> m1_9  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_49  [color=blue, key=0, style=bold];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_70  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_71  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_72  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_74  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_75  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_76  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_77  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_78  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_79  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_80  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_82  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_83  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_84  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_86  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_88  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_67 -> m1_67  [color=darkorchid, key=3, label="method methodReturn BigInteger ToBigInteger", style=bold];
m1_67 -> m1_122  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_70  [key=0, style=solid];
m1_68 -> m1_59  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_69 -> m1_89  [key=0, style=solid];
m1_69 -> m1_67  [color=blue, key=0, style=bold];
m1_525 -> m1_526  [key=0, style=solid];
m1_531 -> m1_61  [key=2, style=dotted];
m1_531 -> m1_532  [key=0, style=solid];
m1_529 -> m1_8  [key=2, style=dotted];
m1_529 -> m1_6  [key=2, style=dotted];
m1_529 -> m1_7  [key=2, style=dotted];
m1_529 -> m1_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_529 -> m1_530  [key=0, style=solid];
m1_529 -> m1_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_529 -> m1_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_529 -> m1_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_529 -> m1_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_529 -> m1_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_529 -> m1_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_532 -> m1_62  [key=2, style=dotted];
m1_532 -> m1_63  [key=2, style=dotted];
m1_532 -> m1_533  [key=0, style=solid];
m1_534 -> m1_62  [key=2, style=dotted];
m1_534 -> m1_63  [key=2, style=dotted];
m1_534 -> m1_535  [key=0, style=solid];
m1_536 -> m1_62  [key=2, style=dotted];
m1_536 -> m1_63  [key=2, style=dotted];
m1_536 -> m1_537  [key=0, style=solid];
m1_526 -> m1_531  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_526 -> m1_527  [key=0, style=solid];
m1_530 -> m1_531  [key=0, style=solid];
m1_530 -> m1_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_539 -> m1_133  [key=2, style=dotted];
m1_539 -> m1_540  [key=0, style=solid];
m1_527 -> m1_529  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_527 -> m1_528  [key=0, style=solid];
m1_528 -> m1_529  [key=0, style=solid];
m1_533 -> m1_9  [key=2, style=dotted];
m1_533 -> m1_534  [key=0, style=solid];
m1_535 -> m1_9  [key=2, style=dotted];
m1_535 -> m1_536  [key=0, style=solid];
m1_537 -> m1_9  [key=2, style=dotted];
m1_537 -> m1_538  [key=0, style=solid];
m1_538 -> m1_9  [key=2, style=dotted];
m1_538 -> m1_539  [key=0, style=solid];
m1_540 -> m1_525  [color=blue, key=0, style=bold];
m1_938 -> m1_939  [key=0, style=solid];
m1_939 -> m1_941  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_939 -> m1_940  [key=0, style=solid];
m1_939 -> m1_924  [key=2, style=dotted];
m1_940 -> m1_938  [color=blue, key=0, style=bold];
m1_629 -> m1_630  [key=0, style=solid];
m1_635 -> m1_61  [key=2, style=dotted];
m1_635 -> m1_636  [key=0, style=solid];
m1_633 -> m1_8  [key=2, style=dotted];
m1_633 -> m1_6  [key=2, style=dotted];
m1_633 -> m1_7  [key=2, style=dotted];
m1_633 -> m1_635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_634  [key=0, style=solid];
m1_633 -> m1_636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_655  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_656  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_657  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_659  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_633 -> m1_660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_636 -> m1_62  [key=2, style=dotted];
m1_636 -> m1_63  [key=2, style=dotted];
m1_636 -> m1_637  [key=0, style=solid];
m1_638 -> m1_62  [key=2, style=dotted];
m1_638 -> m1_63  [key=2, style=dotted];
m1_638 -> m1_639  [key=0, style=solid];
m1_641 -> m1_62  [key=2, style=dotted];
m1_641 -> m1_63  [key=2, style=dotted];
m1_641 -> m1_642  [key=0, style=solid];
m1_645 -> m1_62  [key=2, style=dotted];
m1_645 -> m1_63  [key=2, style=dotted];
m1_645 -> m1_646  [key=0, style=solid];
m1_648 -> m1_62  [key=2, style=dotted];
m1_648 -> m1_63  [key=2, style=dotted];
m1_648 -> m1_649  [key=0, style=solid];
m1_652 -> m1_62  [key=2, style=dotted];
m1_652 -> m1_63  [key=2, style=dotted];
m1_652 -> m1_653  [key=0, style=solid];
m1_655 -> m1_62  [key=2, style=dotted];
m1_655 -> m1_63  [key=2, style=dotted];
m1_655 -> m1_656  [key=0, style=solid];
m1_659 -> m1_62  [key=2, style=dotted];
m1_659 -> m1_63  [key=2, style=dotted];
m1_659 -> m1_660  [key=0, style=solid];
m1_630 -> m1_635  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_630 -> m1_631  [key=0, style=solid];
m1_634 -> m1_635  [key=0, style=solid];
m1_634 -> m1_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_661 -> m1_133  [key=2, style=dotted];
m1_661 -> m1_662  [key=0, style=solid];
m1_631 -> m1_633  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_631 -> m1_632  [key=0, style=solid];
m1_632 -> m1_633  [key=0, style=solid];
m1_637 -> m1_9  [key=2, style=dotted];
m1_637 -> m1_638  [key=0, style=solid];
m1_639 -> m1_9  [key=2, style=dotted];
m1_639 -> m1_640  [key=0, style=solid];
m1_640 -> m1_9  [key=2, style=dotted];
m1_640 -> m1_641  [key=0, style=solid];
m1_640 -> m1_64  [key=2, style=dotted];
m1_642 -> m1_9  [key=2, style=dotted];
m1_642 -> m1_643  [key=0, style=solid];
m1_643 -> m1_9  [key=2, style=dotted];
m1_643 -> m1_644  [key=0, style=solid];
m1_643 -> m1_64  [key=2, style=dotted];
m1_646 -> m1_9  [key=2, style=dotted];
m1_646 -> m1_647  [key=0, style=solid];
m1_647 -> m1_9  [key=2, style=dotted];
m1_647 -> m1_648  [key=0, style=solid];
m1_647 -> m1_64  [key=2, style=dotted];
m1_649 -> m1_9  [key=2, style=dotted];
m1_649 -> m1_650  [key=0, style=solid];
m1_650 -> m1_9  [key=2, style=dotted];
m1_650 -> m1_651  [key=0, style=solid];
m1_653 -> m1_9  [key=2, style=dotted];
m1_653 -> m1_654  [key=0, style=solid];
m1_654 -> m1_9  [key=2, style=dotted];
m1_654 -> m1_655  [key=0, style=solid];
m1_654 -> m1_64  [key=2, style=dotted];
m1_656 -> m1_9  [key=2, style=dotted];
m1_656 -> m1_657  [key=0, style=solid];
m1_657 -> m1_9  [key=2, style=dotted];
m1_657 -> m1_658  [key=0, style=solid];
m1_660 -> m1_9  [key=2, style=dotted];
m1_660 -> m1_661  [key=0, style=solid];
m1_644 -> m1_9  [key=2, style=dotted];
m1_644 -> m1_645  [key=0, style=solid];
m1_651 -> m1_9  [key=2, style=dotted];
m1_651 -> m1_652  [key=0, style=solid];
m1_658 -> m1_9  [key=2, style=dotted];
m1_658 -> m1_659  [key=0, style=solid];
m1_662 -> m1_629  [color=blue, key=0, style=bold];
m1_428 -> m1_429  [key=0, style=solid];
m1_432 -> m1_61  [key=2, style=dotted];
m1_432 -> m1_433  [key=0, style=solid];
m1_432 -> m1_236  [key=2, style=dotted];
m1_432 -> m1_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_429 -> m1_432  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_429 -> m1_430  [key=0, style=solid];
m1_430 -> m1_432  [color=darkseagreen4, key=1, label=a, style=dashed];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_435  [key=2, style=dotted];
m1_430 -> m1_234  [key=2, style=dotted];
m1_430 -> m1_235  [key=2, style=dotted];
m1_431 -> m1_432  [key=0, style=solid];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_66  [key=2, style=dotted];
m1_434 -> m1_428  [color=blue, key=0, style=bold];
m1_223 -> m1_220  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_223 -> m1_218  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_223 -> m1_219  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_223 -> m1_224  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_500 -> m1_501  [key=0, style=solid];
m1_506 -> m1_61  [key=2, style=dotted];
m1_506 -> m1_507  [key=0, style=solid];
m1_504 -> m1_8  [key=2, style=dotted];
m1_504 -> m1_6  [key=2, style=dotted];
m1_504 -> m1_7  [key=2, style=dotted];
m1_504 -> m1_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_505  [key=0, style=solid];
m1_504 -> m1_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_504 -> m1_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_507 -> m1_62  [key=2, style=dotted];
m1_507 -> m1_63  [key=2, style=dotted];
m1_507 -> m1_508  [key=0, style=solid];
m1_509 -> m1_62  [key=2, style=dotted];
m1_509 -> m1_63  [key=2, style=dotted];
m1_509 -> m1_510  [key=0, style=solid];
m1_511 -> m1_62  [key=2, style=dotted];
m1_511 -> m1_63  [key=2, style=dotted];
m1_511 -> m1_512  [key=0, style=solid];
m1_513 -> m1_62  [key=2, style=dotted];
m1_513 -> m1_63  [key=2, style=dotted];
m1_513 -> m1_514  [key=0, style=solid];
m1_515 -> m1_62  [key=2, style=dotted];
m1_515 -> m1_63  [key=2, style=dotted];
m1_515 -> m1_516  [key=0, style=solid];
m1_517 -> m1_62  [key=2, style=dotted];
m1_517 -> m1_63  [key=2, style=dotted];
m1_517 -> m1_518  [key=0, style=solid];
m1_501 -> m1_506  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_501 -> m1_502  [key=0, style=solid];
m1_505 -> m1_506  [key=0, style=solid];
m1_505 -> m1_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_520 -> m1_133  [key=2, style=dotted];
m1_520 -> m1_521  [key=0, style=solid];
m1_502 -> m1_504  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_502 -> m1_503  [key=0, style=solid];
m1_503 -> m1_504  [key=0, style=solid];
m1_508 -> m1_9  [key=2, style=dotted];
m1_508 -> m1_509  [key=0, style=solid];
m1_510 -> m1_9  [key=2, style=dotted];
m1_510 -> m1_511  [key=0, style=solid];
m1_512 -> m1_9  [key=2, style=dotted];
m1_512 -> m1_513  [key=0, style=solid];
m1_514 -> m1_9  [key=2, style=dotted];
m1_514 -> m1_515  [key=0, style=solid];
m1_516 -> m1_9  [key=2, style=dotted];
m1_516 -> m1_517  [key=0, style=solid];
m1_518 -> m1_9  [key=2, style=dotted];
m1_518 -> m1_519  [key=0, style=solid];
m1_519 -> m1_9  [key=2, style=dotted];
m1_519 -> m1_520  [key=0, style=solid];
m1_521 -> m1_500  [color=blue, key=0, style=bold];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_137  [key=0, style=solid];
m1_135 -> m1_131  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_135 -> m1_130  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_139  [key=0, style=solid];
m1_137 -> m1_16  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_17  [key=2, style=dotted];
m1_138 -> m1_138  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_140  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_143  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_138 -> m1_144  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_146  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_149  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_151  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_153  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_156  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_160  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_163  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_166  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_169  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_172  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_175  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_179  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_182  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_183  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_185  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_190  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_191  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_196  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_138 -> m1_198  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_22  [key=2, style=dotted];
m1_139 -> m1_181  [color=darkseagreen4, key=1, label=initialType, style=dashed];
m1_139 -> m1_186  [color=darkseagreen4, key=1, label=initialType, style=dashed];
m1_139 -> m1_191  [color=darkseagreen4, key=1, label=initialType, style=dashed];
m1_139 -> m1_196  [color=darkseagreen4, key=1, label=initialType, style=dashed];
m1_139 -> m1_141  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_143  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_8  [key=2, style=dotted];
m1_141 -> m1_6  [key=2, style=dotted];
m1_141 -> m1_7  [key=2, style=dotted];
m1_141 -> m1_143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_141 -> m1_144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_141 -> m1_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_153  [key=0, style=solid];
m1_143 -> m1_22  [key=2, style=dotted];
m1_143 -> m1_28  [key=2, style=dotted];
m1_143 -> m1_61  [key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_151  [key=0, style=solid];
m1_144 -> m1_14  [key=2, style=dotted];
m1_144 -> m1_62  [key=2, style=dotted];
m1_144 -> m1_63  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_148  [key=0, style=solid];
m1_145 -> m1_9  [key=2, style=dotted];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_205  [key=2, style=dotted];
m1_146 -> m1_206  [key=2, style=dotted];
m1_146 -> m1_9  [key=2, style=dotted];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_151  [key=0, style=solid];
m1_148 -> m1_207  [key=2, style=dotted];
m1_148 -> m1_137  [color=blue, key=0, style=bold];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_208  [key=2, style=dotted];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_107  [key=2, style=dotted];
m1_151 -> m1_149  [color=blue, key=0, style=bold];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_178  [key=0, style=solid];
m1_175 -> m1_172  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_175 -> m1_165  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_175 -> m1_168  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_175 -> m1_169  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_67  [key=2, style=dotted];
m1_176 -> m1_174  [color=blue, key=0, style=bold];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_193  [key=0, style=solid];
m1_190 -> m1_220  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_221  [key=2, style=dotted];
m1_191 -> m1_188  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_191 -> m1_186  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_191 -> m1_187  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_198  [key=0, style=solid];
m1_195 -> m1_197  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_222  [key=2, style=dotted];
m1_196 -> m1_221  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_198 -> m1_201  [key=0, style=solid];
m1_198 -> m1_223  [key=2, style=dotted];
m1_198 -> m1_224  [key=2, style=dotted];
m1_198 -> m1_225  [key=2, style=dotted];
m1_198 -> m1_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_136 -> m1_203  [key=0, style=solid];
m1_136 -> m1_204  [key=2, style=dotted];
m1_136 -> m1_134  [color=blue, key=0, style=bold];
m1_142 -> m1_203  [key=0, style=solid];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_147 -> m1_203  [key=0, style=solid];
m1_147 -> m1_133  [key=2, style=dotted];
m1_147 -> m1_148  [key=0, style=solid];
m1_150 -> m1_203  [key=0, style=solid];
m1_150 -> m1_147  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_150 -> m1_146  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_150 -> m1_151  [key=0, style=solid];
m1_174 -> m1_203  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_192 -> m1_203  [key=0, style=solid];
m1_192 -> m1_190  [color=blue, key=0, style=bold];
m1_194 -> m1_203  [key=0, style=solid];
m1_194 -> m1_199  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_194 -> m1_195  [key=0, style=solid];
m1_197 -> m1_203  [key=0, style=solid];
m1_197 -> m1_8  [key=2, style=dotted];
m1_197 -> m1_6  [key=2, style=dotted];
m1_197 -> m1_7  [key=2, style=dotted];
m1_197 -> m1_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_197 -> m1_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_61  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_203  [color=darkseagreen4, key=1, label="out object", style=dashed];
m1_201 -> m1_9  [key=2, style=dotted];
m1_200 -> m1_203  [key=0, style=solid];
m1_200 -> m1_62  [key=2, style=dotted];
m1_200 -> m1_63  [key=2, style=dotted];
m1_200 -> m1_201  [key=0, style=solid];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_9  [key=2, style=dotted];
m1_203 -> m1_122  [color=blue, key=0, style=bold];
m1_203 -> m1_9  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_224 -> m1_222  [color=blue, key=0, style=bold];
m1_439 -> m1_440  [key=0, style=solid];
m1_445 -> m1_61  [key=2, style=dotted];
m1_445 -> m1_446  [key=0, style=solid];
m1_443 -> m1_8  [key=2, style=dotted];
m1_443 -> m1_6  [key=2, style=dotted];
m1_443 -> m1_7  [key=2, style=dotted];
m1_443 -> m1_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_443 -> m1_444  [key=0, style=solid];
m1_443 -> m1_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_443 -> m1_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_443 -> m1_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_443 -> m1_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_443 -> m1_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_443 -> m1_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_446 -> m1_62  [key=2, style=dotted];
m1_446 -> m1_63  [key=2, style=dotted];
m1_446 -> m1_447  [key=0, style=solid];
m1_448 -> m1_62  [key=2, style=dotted];
m1_448 -> m1_63  [key=2, style=dotted];
m1_448 -> m1_449  [key=0, style=solid];
m1_450 -> m1_62  [key=2, style=dotted];
m1_450 -> m1_63  [key=2, style=dotted];
m1_450 -> m1_451  [key=0, style=solid];
m1_440 -> m1_445  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_440 -> m1_441  [key=0, style=solid];
m1_444 -> m1_445  [key=0, style=solid];
m1_444 -> m1_455  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_441 -> m1_443  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_441 -> m1_442  [key=0, style=solid];
m1_442 -> m1_443  [key=0, style=solid];
m1_447 -> m1_9  [key=2, style=dotted];
m1_447 -> m1_448  [key=0, style=solid];
m1_449 -> m1_9  [key=2, style=dotted];
m1_449 -> m1_450  [key=0, style=solid];
m1_451 -> m1_9  [key=2, style=dotted];
m1_451 -> m1_452  [key=0, style=solid];
m1_452 -> m1_66  [key=2, style=dotted];
m1_452 -> m1_453  [key=0, style=solid];
m1_453 -> m1_439  [color=blue, key=0, style=bold];
m1_225 -> m1_226  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_134 -> m1_127  [color=blue, key=0, style=bold];
m1_134 -> m1_135  [key=0, style=solid];
m1_544 -> m1_545  [key=0, style=solid];
m1_550 -> m1_61  [key=2, style=dotted];
m1_550 -> m1_551  [key=0, style=solid];
m1_548 -> m1_8  [key=2, style=dotted];
m1_548 -> m1_6  [key=2, style=dotted];
m1_548 -> m1_7  [key=2, style=dotted];
m1_548 -> m1_550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_548 -> m1_549  [key=0, style=solid];
m1_548 -> m1_551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_548 -> m1_552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_551 -> m1_62  [key=2, style=dotted];
m1_551 -> m1_63  [key=2, style=dotted];
m1_551 -> m1_552  [key=0, style=solid];
m1_545 -> m1_550  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_545 -> m1_546  [key=0, style=solid];
m1_549 -> m1_550  [key=0, style=solid];
m1_549 -> m1_557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_554 -> m1_133  [key=2, style=dotted];
m1_554 -> m1_555  [key=0, style=solid];
m1_546 -> m1_548  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_546 -> m1_547  [key=0, style=solid];
m1_547 -> m1_548  [key=0, style=solid];
m1_552 -> m1_9  [key=2, style=dotted];
m1_552 -> m1_553  [key=0, style=solid];
m1_553 -> m1_9  [key=2, style=dotted];
m1_553 -> m1_554  [key=0, style=solid];
m1_555 -> m1_544  [color=blue, key=0, style=bold];
m1_887 -> m1_888  [key=0, style=solid];
m1_893 -> m1_61  [key=2, style=dotted];
m1_893 -> m1_894  [key=0, style=solid];
m1_891 -> m1_8  [key=2, style=dotted];
m1_891 -> m1_6  [key=2, style=dotted];
m1_891 -> m1_7  [key=2, style=dotted];
m1_891 -> m1_893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_891 -> m1_892  [key=0, style=solid];
m1_891 -> m1_894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_894 -> m1_62  [key=2, style=dotted];
m1_894 -> m1_894  [key=0, style=solid];
m1_894 -> m1_895  [key=0, style=solid];
m1_888 -> m1_893  [color=darkseagreen4, key=1, label=schema, style=dashed];
m1_888 -> m1_889  [key=0, style=solid];
m1_892 -> m1_893  [key=0, style=solid];
m1_892 -> m1_898  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_889 -> m1_891  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_889 -> m1_890  [key=0, style=solid];
m1_890 -> m1_891  [key=0, style=solid];
m1_890 -> m1_892  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_890 -> m1_680  [key=2, style=dotted];
m1_890 -> m1_898  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_890 -> m1_895  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_895 -> m1_9  [key=2, style=dotted];
m1_895 -> m1_896  [key=0, style=solid];
m1_896 -> m1_887  [color=blue, key=0, style=bold];
m1_696 -> m1_697  [key=0, style=solid];
m1_699 -> m1_8  [key=2, style=dotted];
m1_699 -> m1_6  [key=2, style=dotted];
m1_699 -> m1_7  [key=2, style=dotted];
m1_699 -> m1_700  [key=0, style=solid];
m1_699 -> m1_701  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_702  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_703  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_704  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_708  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_710  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_712  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_713  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_716  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_718  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_735  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_699 -> m1_736  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_702 -> m1_62  [key=2, style=dotted];
m1_702 -> m1_63  [key=2, style=dotted];
m1_702 -> m1_703  [key=0, style=solid];
m1_704 -> m1_62  [key=2, style=dotted];
m1_704 -> m1_63  [key=2, style=dotted];
m1_704 -> m1_705  [key=0, style=solid];
m1_708 -> m1_62  [key=2, style=dotted];
m1_708 -> m1_63  [key=2, style=dotted];
m1_708 -> m1_709  [key=0, style=solid];
m1_712 -> m1_62  [key=2, style=dotted];
m1_712 -> m1_63  [key=2, style=dotted];
m1_712 -> m1_713  [key=0, style=solid];
m1_716 -> m1_62  [key=2, style=dotted];
m1_716 -> m1_63  [key=2, style=dotted];
m1_716 -> m1_717  [key=0, style=solid];
m1_720 -> m1_62  [key=2, style=dotted];
m1_720 -> m1_63  [key=2, style=dotted];
m1_720 -> m1_721  [key=0, style=solid];
m1_724 -> m1_62  [key=2, style=dotted];
m1_724 -> m1_63  [key=2, style=dotted];
m1_724 -> m1_725  [key=0, style=solid];
m1_727 -> m1_62  [key=2, style=dotted];
m1_727 -> m1_63  [key=2, style=dotted];
m1_727 -> m1_728  [key=0, style=solid];
m1_731 -> m1_62  [key=2, style=dotted];
m1_731 -> m1_63  [key=2, style=dotted];
m1_731 -> m1_732  [key=0, style=solid];
m1_734 -> m1_62  [key=2, style=dotted];
m1_734 -> m1_63  [key=2, style=dotted];
m1_734 -> m1_735  [key=0, style=solid];
m1_736 -> m1_62  [key=2, style=dotted];
m1_736 -> m1_737  [key=0, style=solid];
m1_736 -> m1_65  [key=2, style=dotted];
m1_697 -> m1_699  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_697 -> m1_698  [key=0, style=solid];
m1_698 -> m1_699  [key=0, style=solid];
m1_700 -> m1_701  [key=0, style=solid];
m1_700 -> m1_739  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_701 -> m1_702  [key=0, style=solid];
m1_701 -> m1_686  [key=2, style=dotted];
m1_703 -> m1_9  [key=2, style=dotted];
m1_703 -> m1_704  [key=0, style=solid];
m1_705 -> m1_9  [key=2, style=dotted];
m1_705 -> m1_706  [key=0, style=solid];
m1_706 -> m1_9  [key=2, style=dotted];
m1_706 -> m1_707  [key=0, style=solid];
m1_706 -> m1_64  [key=2, style=dotted];
m1_709 -> m1_9  [key=2, style=dotted];
m1_709 -> m1_710  [key=0, style=solid];
m1_710 -> m1_9  [key=2, style=dotted];
m1_710 -> m1_711  [key=0, style=solid];
m1_710 -> m1_64  [key=2, style=dotted];
m1_713 -> m1_9  [key=2, style=dotted];
m1_713 -> m1_714  [key=0, style=solid];
m1_714 -> m1_9  [key=2, style=dotted];
m1_714 -> m1_715  [key=0, style=solid];
m1_714 -> m1_64  [key=2, style=dotted];
m1_717 -> m1_9  [key=2, style=dotted];
m1_717 -> m1_718  [key=0, style=solid];
m1_718 -> m1_9  [key=2, style=dotted];
m1_718 -> m1_719  [key=0, style=solid];
m1_718 -> m1_64  [key=2, style=dotted];
m1_721 -> m1_9  [key=2, style=dotted];
m1_721 -> m1_722  [key=0, style=solid];
m1_722 -> m1_9  [key=2, style=dotted];
m1_722 -> m1_723  [key=0, style=solid];
m1_722 -> m1_64  [key=2, style=dotted];
m1_725 -> m1_9  [key=2, style=dotted];
m1_725 -> m1_726  [key=0, style=solid];
m1_726 -> m1_9  [key=2, style=dotted];
m1_726 -> m1_727  [key=0, style=solid];
m1_726 -> m1_64  [key=2, style=dotted];
m1_728 -> m1_9  [key=2, style=dotted];
m1_728 -> m1_729  [key=0, style=solid];
m1_729 -> m1_9  [key=2, style=dotted];
m1_729 -> m1_730  [key=0, style=solid];
m1_729 -> m1_64  [key=2, style=dotted];
m1_732 -> m1_9  [key=2, style=dotted];
m1_732 -> m1_733  [key=0, style=solid];
m1_733 -> m1_9  [key=2, style=dotted];
m1_733 -> m1_734  [key=0, style=solid];
m1_733 -> m1_64  [key=2, style=dotted];
m1_735 -> m1_9  [key=2, style=dotted];
m1_735 -> m1_736  [key=0, style=solid];
m1_707 -> m1_9  [key=2, style=dotted];
m1_707 -> m1_708  [key=0, style=solid];
m1_711 -> m1_9  [key=2, style=dotted];
m1_711 -> m1_712  [key=0, style=solid];
m1_715 -> m1_9  [key=2, style=dotted];
m1_715 -> m1_716  [key=0, style=solid];
m1_719 -> m1_9  [key=2, style=dotted];
m1_719 -> m1_720  [key=0, style=solid];
m1_723 -> m1_9  [key=2, style=dotted];
m1_723 -> m1_724  [key=0, style=solid];
m1_730 -> m1_9  [key=2, style=dotted];
m1_730 -> m1_731  [key=0, style=solid];
m1_737 -> m1_696  [color=blue, key=0, style=bold];
m1_1004 -> m1_1005  [key=0, style=solid];
m1_1006 -> m1_8  [key=2, style=dotted];
m1_1006 -> m1_1007  [key=0, style=solid];
m1_1008 -> m1_63  [key=2, style=dotted];
m1_1008 -> m1_1009  [key=0, style=solid];
m1_1005 -> m1_1006  [key=0, style=solid];
m1_1005 -> m1_1008  [color=darkseagreen4, key=1, label=underlyingReader, style=dashed];
m1_1005 -> m1_1010  [key=2, style=dotted];
m1_1007 -> m1_1008  [key=0, style=solid];
m1_1007 -> m1_1011  [key=2, style=dotted];
m1_1009 -> m1_1004  [color=blue, key=0, style=bold];
m1_559 -> m1_560  [key=0, style=solid];
m1_565 -> m1_61  [key=2, style=dotted];
m1_565 -> m1_566  [key=0, style=solid];
m1_563 -> m1_8  [key=2, style=dotted];
m1_563 -> m1_6  [key=2, style=dotted];
m1_563 -> m1_7  [key=2, style=dotted];
m1_563 -> m1_565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_563 -> m1_564  [key=0, style=solid];
m1_563 -> m1_566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_563 -> m1_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_563 -> m1_568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_563 -> m1_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_563 -> m1_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_563 -> m1_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_563 -> m1_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_563 -> m1_575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_566 -> m1_62  [key=2, style=dotted];
m1_566 -> m1_63  [key=2, style=dotted];
m1_566 -> m1_567  [key=0, style=solid];
m1_568 -> m1_62  [key=2, style=dotted];
m1_568 -> m1_63  [key=2, style=dotted];
m1_568 -> m1_569  [key=0, style=solid];
m1_571 -> m1_62  [key=2, style=dotted];
m1_571 -> m1_63  [key=2, style=dotted];
m1_571 -> m1_572  [key=0, style=solid];
m1_574 -> m1_62  [key=2, style=dotted];
m1_574 -> m1_63  [key=2, style=dotted];
m1_574 -> m1_575  [key=0, style=solid];
m1_560 -> m1_565  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_560 -> m1_561  [key=0, style=solid];
m1_564 -> m1_565  [key=0, style=solid];
m1_564 -> m1_579  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_576 -> m1_133  [key=2, style=dotted];
m1_576 -> m1_577  [key=0, style=solid];
m1_561 -> m1_563  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_561 -> m1_562  [key=0, style=solid];
m1_562 -> m1_563  [key=0, style=solid];
m1_567 -> m1_9  [key=2, style=dotted];
m1_567 -> m1_568  [key=0, style=solid];
m1_569 -> m1_9  [key=2, style=dotted];
m1_569 -> m1_570  [key=0, style=solid];
m1_572 -> m1_9  [key=2, style=dotted];
m1_572 -> m1_573  [key=0, style=solid];
m1_575 -> m1_9  [key=2, style=dotted];
m1_575 -> m1_576  [key=0, style=solid];
m1_570 -> m1_9  [key=2, style=dotted];
m1_570 -> m1_571  [key=0, style=solid];
m1_573 -> m1_9  [key=2, style=dotted];
m1_573 -> m1_574  [key=0, style=solid];
m1_577 -> m1_559  [color=blue, key=0, style=bold];
m1_883 -> m1_884  [key=0, style=solid];
m1_928 -> m1_8  [key=2, style=dotted];
m1_928 -> m1_6  [key=2, style=dotted];
m1_928 -> m1_7  [key=2, style=dotted];
m1_928 -> m1_929  [key=0, style=solid];
m1_944 -> m1_8  [key=2, style=dotted];
m1_944 -> m1_6  [key=2, style=dotted];
m1_944 -> m1_7  [key=2, style=dotted];
m1_944 -> m1_945  [key=0, style=solid];
m1_436 -> m1_437  [key=0, style=solid];
m1_926 -> m1_928  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_926 -> m1_927  [key=0, style=solid];
m1_926 -> m1_908  [key=2, style=dotted];
m1_926 -> m1_909  [key=2, style=dotted];
m1_927 -> m1_928  [key=0, style=solid];
m1_929 -> m1_930  [key=0, style=solid];
m1_929 -> m1_920  [key=2, style=dotted];
m1_942 -> m1_944  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_942 -> m1_943  [key=0, style=solid];
m1_942 -> m1_908  [key=2, style=dotted];
m1_942 -> m1_909  [key=2, style=dotted];
m1_943 -> m1_944  [key=0, style=solid];
m1_945 -> m1_946  [key=0, style=solid];
m1_945 -> m1_937  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_116  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_119 -> m1_121  [key=0, style=solid];
m1_119 -> m1_126  [key=2, style=dotted];
m1_119 -> m1_22  [key=2, style=dotted];
m1_119 -> m1_124  [key=2, style=dotted];
m1_368 -> m1_365  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_368 -> m1_358  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_368 -> m1_361  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_368 -> m1_362  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_368 -> m1_369  [key=0, style=solid];
m1_386 -> m1_381  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_386 -> m1_387  [key=0, style=solid];
m1_406 -> m1_403  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_406 -> m1_399  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_406 -> m1_400  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_406 -> m1_407  [key=0, style=solid];
m1_426 -> m1_419  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_426 -> m1_420  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_426 -> m1_421  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_426 -> m1_427  [key=0, style=solid];
m1_438 -> m1_436  [color=blue, key=0, style=bold];
m1_437 -> m1_438  [key=0, style=solid];
m1_455 -> m1_456  [key=0, style=solid];
m1_455 -> m1_452  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_475 -> m1_472  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_475 -> m1_468  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_475 -> m1_469  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_475 -> m1_476  [key=0, style=solid];
m1_498 -> m1_495  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_498 -> m1_488  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_498 -> m1_491  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_498 -> m1_492  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_498 -> m1_499  [key=0, style=solid];
m1_523 -> m1_520  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_523 -> m1_519  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_523 -> m1_524  [key=0, style=solid];
m1_542 -> m1_539  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_542 -> m1_538  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_542 -> m1_543  [key=0, style=solid];
m1_557 -> m1_554  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_557 -> m1_553  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_557 -> m1_558  [key=0, style=solid];
m1_579 -> m1_576  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_579 -> m1_570  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_579 -> m1_573  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_579 -> m1_580  [key=0, style=solid];
m1_604 -> m1_601  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_604 -> m1_596  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_604 -> m1_599  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_604 -> m1_600  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_604 -> m1_605  [key=0, style=solid];
m1_627 -> m1_621  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_627 -> m1_628  [key=0, style=solid];
m1_627 -> m1_624  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_664 -> m1_661  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_664 -> m1_644  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_664 -> m1_651  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_664 -> m1_658  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_664 -> m1_665  [key=0, style=solid];
m1_682 -> m1_678  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_682 -> m1_683  [key=0, style=solid];
m1_682 -> m1_684  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_780 -> m1_768  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_780 -> m1_771  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_780 -> m1_774  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_780 -> m1_781  [key=0, style=solid];
m1_817 -> m1_793  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_817 -> m1_798  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_817 -> m1_803  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_817 -> m1_806  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_817 -> m1_809  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_817 -> m1_818  [key=0, style=solid];
m1_898 -> m1_899  [key=0, style=solid];
m1_898 -> m1_900  [key=2, style=dotted];
m1_980 -> m1_969  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_980 -> m1_972  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_980 -> m1_975  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_980 -> m1_976  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_980 -> m1_981  [key=0, style=solid];
m1_1002 -> m1_993  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_1002 -> m1_996  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_1002 -> m1_999  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_1002 -> m1_1003  [key=0, style=solid];
m1_739 -> m1_707  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_739 -> m1_711  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_739 -> m1_715  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_739 -> m1_719  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_739 -> m1_723  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_739 -> m1_730  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_739 -> m1_740  [key=0, style=solid];
m1_755 -> m1_756  [key=0, style=solid];
m1_755 -> m1_685  [key=2, style=dotted];
m1_885 -> m1_886  [key=0, style=solid];
m1_885 -> m1_685  [key=2, style=dotted];
m1_884 -> m1_837  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_884 -> m1_885  [key=0, style=solid];
m1_884 -> m1_886  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_925 -> m1_926  [key=0, style=solid];
m1_930 -> m1_925  [color=blue, key=0, style=bold];
m1_941 -> m1_942  [key=0, style=solid];
m1_946 -> m1_941  [color=blue, key=0, style=bold];
m1_118 -> m1_119  [key=0, style=solid];
m1_120 -> m1_118  [color=blue, key=0, style=bold];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_126  [key=2, style=dotted];
m1_367 -> m1_368  [key=0, style=solid];
m1_369 -> m1_367  [color=blue, key=0, style=bold];
m1_385 -> m1_386  [key=0, style=solid];
m1_387 -> m1_385  [color=blue, key=0, style=bold];
m1_405 -> m1_406  [key=0, style=solid];
m1_407 -> m1_405  [color=blue, key=0, style=bold];
m1_425 -> m1_426  [key=0, style=solid];
m1_427 -> m1_425  [color=blue, key=0, style=bold];
m1_454 -> m1_455  [key=0, style=solid];
m1_456 -> m1_454  [color=blue, key=0, style=bold];
m1_474 -> m1_475  [key=0, style=solid];
m1_476 -> m1_474  [color=blue, key=0, style=bold];
m1_497 -> m1_498  [key=0, style=solid];
m1_499 -> m1_497  [color=blue, key=0, style=bold];
m1_522 -> m1_523  [key=0, style=solid];
m1_524 -> m1_522  [color=blue, key=0, style=bold];
m1_541 -> m1_542  [key=0, style=solid];
m1_543 -> m1_541  [color=blue, key=0, style=bold];
m1_556 -> m1_557  [key=0, style=solid];
m1_558 -> m1_556  [color=blue, key=0, style=bold];
m1_578 -> m1_579  [key=0, style=solid];
m1_580 -> m1_578  [color=blue, key=0, style=bold];
m1_603 -> m1_604  [key=0, style=solid];
m1_605 -> m1_603  [color=blue, key=0, style=bold];
m1_626 -> m1_627  [key=0, style=solid];
m1_628 -> m1_626  [color=blue, key=0, style=bold];
m1_663 -> m1_664  [key=0, style=solid];
m1_665 -> m1_663  [color=blue, key=0, style=bold];
m1_683 -> m1_684  [key=0, style=solid];
m1_683 -> m1_685  [key=2, style=dotted];
m1_681 -> m1_682  [key=0, style=solid];
m1_684 -> m1_681  [color=blue, key=0, style=bold];
m1_779 -> m1_780  [key=0, style=solid];
m1_781 -> m1_779  [color=blue, key=0, style=bold];
m1_816 -> m1_817  [key=0, style=solid];
m1_818 -> m1_816  [color=blue, key=0, style=bold];
m1_897 -> m1_898  [key=0, style=solid];
m1_899 -> m1_897  [color=blue, key=0, style=bold];
m1_979 -> m1_980  [key=0, style=solid];
m1_981 -> m1_979  [color=blue, key=0, style=bold];
m1_1001 -> m1_1002  [key=0, style=solid];
m1_1003 -> m1_1001  [color=blue, key=0, style=bold];
m1_738 -> m1_739  [key=0, style=solid];
m1_740 -> m1_738  [color=blue, key=0, style=bold];
m1_754 -> m1_755  [key=0, style=solid];
m1_756 -> m1_754  [color=blue, key=0, style=bold];
m1_886 -> m1_883  [color=blue, key=0, style=bold];
m1_457 -> m1_458  [key=0, style=solid];
m1_463 -> m1_61  [key=2, style=dotted];
m1_463 -> m1_464  [key=0, style=solid];
m1_461 -> m1_8  [key=2, style=dotted];
m1_461 -> m1_6  [key=2, style=dotted];
m1_461 -> m1_7  [key=2, style=dotted];
m1_461 -> m1_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_461 -> m1_462  [key=0, style=solid];
m1_461 -> m1_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_461 -> m1_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_461 -> m1_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_461 -> m1_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_461 -> m1_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_461 -> m1_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_464 -> m1_62  [key=2, style=dotted];
m1_464 -> m1_63  [key=2, style=dotted];
m1_464 -> m1_465  [key=0, style=solid];
m1_466 -> m1_62  [key=2, style=dotted];
m1_466 -> m1_63  [key=2, style=dotted];
m1_466 -> m1_467  [key=0, style=solid];
m1_470 -> m1_62  [key=2, style=dotted];
m1_470 -> m1_63  [key=2, style=dotted];
m1_470 -> m1_471  [key=0, style=solid];
m1_458 -> m1_463  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_458 -> m1_459  [key=0, style=solid];
m1_462 -> m1_463  [key=0, style=solid];
m1_462 -> m1_475  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_472 -> m1_133  [key=2, style=dotted];
m1_472 -> m1_473  [key=0, style=solid];
m1_459 -> m1_461  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_459 -> m1_460  [key=0, style=solid];
m1_460 -> m1_461  [key=0, style=solid];
m1_465 -> m1_9  [key=2, style=dotted];
m1_465 -> m1_466  [key=0, style=solid];
m1_467 -> m1_9  [key=2, style=dotted];
m1_467 -> m1_468  [key=0, style=solid];
m1_471 -> m1_9  [key=2, style=dotted];
m1_471 -> m1_472  [key=0, style=solid];
m1_468 -> m1_9  [key=2, style=dotted];
m1_468 -> m1_469  [key=0, style=solid];
m1_469 -> m1_9  [key=2, style=dotted];
m1_469 -> m1_470  [key=0, style=solid];
m1_473 -> m1_457  [color=blue, key=0, style=bold];
m1_901 -> m1_902  [key=0, style=solid];
m1_904 -> m1_8  [key=2, style=dotted];
m1_904 -> m1_6  [key=2, style=dotted];
m1_904 -> m1_7  [key=2, style=dotted];
m1_904 -> m1_905  [key=0, style=solid];
m1_904 -> m1_911  [key=2, style=dotted];
m1_902 -> m1_904  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_902 -> m1_903  [key=0, style=solid];
m1_902 -> m1_908  [key=2, style=dotted];
m1_902 -> m1_909  [key=2, style=dotted];
m1_903 -> m1_904  [key=0, style=solid];
m1_903 -> m1_910  [key=2, style=dotted];
m1_903 -> m1_906  [color=darkseagreen4, key=1, label=data, style=dashed];
m1_905 -> m1_906  [key=0, style=solid];
m1_905 -> m1_912  [key=2, style=dotted];
m1_906 -> m1_907  [key=0, style=solid];
m1_906 -> m1_913  [key=2, style=dotted];
m1_907 -> m1_901  [color=blue, key=0, style=bold];
m1_666 -> m1_667  [key=0, style=solid];
m1_673 -> m1_61  [key=2, style=dotted];
m1_673 -> m1_674  [key=0, style=solid];
m1_671 -> m1_8  [key=2, style=dotted];
m1_671 -> m1_6  [key=2, style=dotted];
m1_671 -> m1_7  [key=2, style=dotted];
m1_671 -> m1_673  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_671 -> m1_672  [key=0, style=solid];
m1_671 -> m1_674  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_671 -> m1_675  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_674 -> m1_62  [key=2, style=dotted];
m1_674 -> m1_63  [key=2, style=dotted];
m1_674 -> m1_675  [key=0, style=solid];
m1_667 -> m1_673  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_667 -> m1_668  [key=0, style=solid];
m1_672 -> m1_673  [key=0, style=solid];
m1_672 -> m1_672  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_672 -> m1_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_678 -> m1_133  [key=2, style=dotted];
m1_678 -> m1_679  [key=0, style=solid];
m1_669 -> m1_671  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_669 -> m1_670  [key=0, style=solid];
m1_670 -> m1_671  [key=0, style=solid];
m1_670 -> m1_672  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_675 -> m1_9  [key=2, style=dotted];
m1_675 -> m1_676  [key=0, style=solid];
m1_676 -> m1_9  [key=2, style=dotted];
m1_676 -> m1_677  [key=0, style=solid];
m1_677 -> m1_9  [key=2, style=dotted];
m1_677 -> m1_678  [key=0, style=solid];
m1_668 -> m1_672  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_668 -> m1_669  [key=0, style=solid];
m1_668 -> m1_676  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_668 -> m1_677  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_668 -> m1_680  [key=2, style=dotted];
m1_668 -> m1_683  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_679 -> m1_666  [color=blue, key=0, style=bold];
m1_782 -> m1_783  [key=0, style=solid];
m1_788 -> m1_61  [key=2, style=dotted];
m1_788 -> m1_789  [key=0, style=solid];
m1_786 -> m1_8  [key=2, style=dotted];
m1_786 -> m1_6  [key=2, style=dotted];
m1_786 -> m1_7  [key=2, style=dotted];
m1_786 -> m1_788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_787  [key=0, style=solid];
m1_786 -> m1_789  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_791  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_792  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_795  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_796  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_797  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_799  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_801  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_802  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_804  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_805  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_810  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_811  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_812  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_813  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_786 -> m1_814  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_789 -> m1_62  [key=2, style=dotted];
m1_789 -> m1_63  [key=2, style=dotted];
m1_789 -> m1_790  [key=0, style=solid];
m1_791 -> m1_62  [key=2, style=dotted];
m1_791 -> m1_63  [key=2, style=dotted];
m1_791 -> m1_792  [key=0, style=solid];
m1_794 -> m1_62  [key=2, style=dotted];
m1_794 -> m1_63  [key=2, style=dotted];
m1_794 -> m1_795  [key=0, style=solid];
m1_796 -> m1_62  [key=2, style=dotted];
m1_796 -> m1_63  [key=2, style=dotted];
m1_796 -> m1_797  [key=0, style=solid];
m1_799 -> m1_62  [key=2, style=dotted];
m1_799 -> m1_63  [key=2, style=dotted];
m1_799 -> m1_800  [key=0, style=solid];
m1_801 -> m1_62  [key=2, style=dotted];
m1_801 -> m1_63  [key=2, style=dotted];
m1_801 -> m1_802  [key=0, style=solid];
m1_804 -> m1_62  [key=2, style=dotted];
m1_804 -> m1_63  [key=2, style=dotted];
m1_804 -> m1_805  [key=0, style=solid];
m1_807 -> m1_62  [key=2, style=dotted];
m1_807 -> m1_63  [key=2, style=dotted];
m1_807 -> m1_808  [key=0, style=solid];
m1_810 -> m1_62  [key=2, style=dotted];
m1_810 -> m1_63  [key=2, style=dotted];
m1_810 -> m1_811  [key=0, style=solid];
m1_812 -> m1_62  [key=2, style=dotted];
m1_812 -> m1_63  [key=2, style=dotted];
m1_812 -> m1_813  [key=0, style=solid];
m1_814 -> m1_62  [key=2, style=dotted];
m1_814 -> m1_815  [key=0, style=solid];
m1_814 -> m1_65  [key=2, style=dotted];
m1_783 -> m1_788  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_783 -> m1_784  [key=0, style=solid];
m1_787 -> m1_788  [key=0, style=solid];
m1_787 -> m1_817  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_784 -> m1_786  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_784 -> m1_785  [key=0, style=solid];
m1_785 -> m1_786  [key=0, style=solid];
m1_790 -> m1_9  [key=2, style=dotted];
m1_790 -> m1_791  [key=0, style=solid];
m1_792 -> m1_9  [key=2, style=dotted];
m1_792 -> m1_793  [key=0, style=solid];
m1_795 -> m1_9  [key=2, style=dotted];
m1_795 -> m1_796  [key=0, style=solid];
m1_797 -> m1_9  [key=2, style=dotted];
m1_797 -> m1_798  [key=0, style=solid];
m1_800 -> m1_9  [key=2, style=dotted];
m1_800 -> m1_801  [key=0, style=solid];
m1_802 -> m1_9  [key=2, style=dotted];
m1_802 -> m1_803  [key=0, style=solid];
m1_805 -> m1_9  [key=2, style=dotted];
m1_805 -> m1_806  [key=0, style=solid];
m1_808 -> m1_9  [key=2, style=dotted];
m1_808 -> m1_809  [key=0, style=solid];
m1_811 -> m1_9  [key=2, style=dotted];
m1_811 -> m1_812  [key=0, style=solid];
m1_813 -> m1_9  [key=2, style=dotted];
m1_813 -> m1_814  [key=0, style=solid];
m1_793 -> m1_9  [key=2, style=dotted];
m1_793 -> m1_794  [key=0, style=solid];
m1_798 -> m1_9  [key=2, style=dotted];
m1_798 -> m1_799  [key=0, style=solid];
m1_803 -> m1_9  [key=2, style=dotted];
m1_803 -> m1_804  [key=0, style=solid];
m1_806 -> m1_9  [key=2, style=dotted];
m1_806 -> m1_807  [key=0, style=solid];
m1_809 -> m1_9  [key=2, style=dotted];
m1_809 -> m1_810  [key=0, style=solid];
m1_815 -> m1_782  [color=blue, key=0, style=bold];
m1_958 -> m1_959  [key=0, style=solid];
m1_964 -> m1_61  [key=2, style=dotted];
m1_964 -> m1_965  [key=0, style=solid];
m1_962 -> m1_8  [key=2, style=dotted];
m1_962 -> m1_6  [key=2, style=dotted];
m1_962 -> m1_7  [key=2, style=dotted];
m1_962 -> m1_964  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_962 -> m1_963  [key=0, style=solid];
m1_962 -> m1_965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_962 -> m1_966  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_962 -> m1_967  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_962 -> m1_968  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_962 -> m1_970  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_962 -> m1_971  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_962 -> m1_973  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_962 -> m1_974  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_965 -> m1_62  [key=2, style=dotted];
m1_965 -> m1_966  [key=0, style=solid];
m1_959 -> m1_964  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_959 -> m1_960  [key=0, style=solid];
m1_963 -> m1_964  [key=0, style=solid];
m1_963 -> m1_980  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_960 -> m1_962  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_960 -> m1_961  [key=0, style=solid];
m1_961 -> m1_962  [key=0, style=solid];
m1_966 -> m1_9  [key=2, style=dotted];
m1_966 -> m1_967  [key=0, style=solid];
m1_967 -> m1_968  [key=0, style=solid];
m1_967 -> m1_978  [key=2, style=dotted];
m1_968 -> m1_9  [key=2, style=dotted];
m1_968 -> m1_969  [key=0, style=solid];
m1_970 -> m1_971  [key=0, style=solid];
m1_970 -> m1_978  [key=2, style=dotted];
m1_971 -> m1_9  [key=2, style=dotted];
m1_971 -> m1_972  [key=0, style=solid];
m1_973 -> m1_974  [key=0, style=solid];
m1_973 -> m1_978  [key=2, style=dotted];
m1_974 -> m1_9  [key=2, style=dotted];
m1_974 -> m1_975  [key=0, style=solid];
m1_969 -> m1_9  [key=2, style=dotted];
m1_969 -> m1_970  [key=0, style=solid];
m1_972 -> m1_9  [key=2, style=dotted];
m1_972 -> m1_973  [key=0, style=solid];
m1_975 -> m1_9  [key=2, style=dotted];
m1_975 -> m1_976  [key=0, style=solid];
m1_976 -> m1_9  [key=2, style=dotted];
m1_976 -> m1_977  [key=0, style=solid];
m1_977 -> m1_958  [color=blue, key=0, style=bold];
m1_757 -> m1_758  [key=0, style=solid];
m1_763 -> m1_61  [key=2, style=dotted];
m1_763 -> m1_764  [key=0, style=solid];
m1_761 -> m1_8  [key=2, style=dotted];
m1_761 -> m1_6  [key=2, style=dotted];
m1_761 -> m1_7  [key=2, style=dotted];
m1_761 -> m1_763  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_762  [key=0, style=solid];
m1_761 -> m1_764  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_767  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_761 -> m1_777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m1_764 -> m1_62  [key=2, style=dotted];
m1_764 -> m1_63  [key=2, style=dotted];
m1_764 -> m1_765  [key=0, style=solid];
m1_766 -> m1_62  [key=2, style=dotted];
m1_766 -> m1_63  [key=2, style=dotted];
m1_766 -> m1_767  [key=0, style=solid];
m1_769 -> m1_62  [key=2, style=dotted];
m1_769 -> m1_63  [key=2, style=dotted];
m1_769 -> m1_770  [key=0, style=solid];
m1_772 -> m1_62  [key=2, style=dotted];
m1_772 -> m1_63  [key=2, style=dotted];
m1_772 -> m1_773  [key=0, style=solid];
m1_775 -> m1_62  [key=2, style=dotted];
m1_775 -> m1_63  [key=2, style=dotted];
m1_775 -> m1_776  [key=0, style=solid];
m1_777 -> m1_62  [key=2, style=dotted];
m1_777 -> m1_778  [key=0, style=solid];
m1_777 -> m1_65  [key=2, style=dotted];
m1_758 -> m1_763  [color=darkseagreen4, key=1, label=schemaJson, style=dashed];
m1_758 -> m1_759  [key=0, style=solid];
m1_762 -> m1_763  [key=0, style=solid];
m1_762 -> m1_780  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.ValidationEventArgs", style=dashed];
m1_759 -> m1_761  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_759 -> m1_760  [key=0, style=solid];
m1_760 -> m1_761  [key=0, style=solid];
m1_765 -> m1_9  [key=2, style=dotted];
m1_765 -> m1_766  [key=0, style=solid];
m1_767 -> m1_9  [key=2, style=dotted];
m1_767 -> m1_768  [key=0, style=solid];
m1_770 -> m1_9  [key=2, style=dotted];
m1_770 -> m1_771  [key=0, style=solid];
m1_773 -> m1_9  [key=2, style=dotted];
m1_773 -> m1_774  [key=0, style=solid];
m1_776 -> m1_9  [key=2, style=dotted];
m1_776 -> m1_777  [key=0, style=solid];
m1_768 -> m1_9  [key=2, style=dotted];
m1_768 -> m1_769  [key=0, style=solid];
m1_771 -> m1_9  [key=2, style=dotted];
m1_771 -> m1_772  [key=0, style=solid];
m1_774 -> m1_9  [key=2, style=dotted];
m1_774 -> m1_775  [key=0, style=solid];
m1_778 -> m1_757  [color=blue, key=0, style=bold];
m1_1013 -> m1_701  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonValidatingReaderTests", style=dashed];
m1_1013 -> m1_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonValidatingReaderTests", style=dashed];
m1_1016 -> m1_898  [color=darkseagreen4, key=1, label=validationEventArgs, style=dashed];
m1_1014 -> m1_755  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_1015 -> m1_885  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_1012 -> m1_683  [color=darkseagreen4, key=1, label=errors, style=dashed];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_48  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_49  [color=darkseagreen4, key=1, label="out string", style=dashed];
m2_48 -> m2_49  [key=0, style=solid];
m2_49 -> m2_46  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_0 -> m2_13  [color=darkorchid, key=3, label="method methodReturn System.Type GetTypeFromTypeNameKey", style=bold];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m2_1 -> m2_9  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m2_1 -> m2_12  [color=darkseagreen4, key=1, label=assemblyName, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_13  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m2_2 -> m2_15  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m2_2 -> m2_17  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_17  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_19  [key=2, style=dotted];
m2_5 -> m2_11  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_5 -> m2_13  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_5 -> m2_15  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_8  [key=0, style=solid];
m2_12 -> m2_18  [key=0, style=solid];
m2_12 -> m2_21  [key=2, style=dotted];
m2_12 -> m2_22  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_23  [key=2, style=dotted];
m2_13 -> m2_16  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_15 -> m2_18  [key=0, style=solid];
m2_15 -> m2_21  [key=2, style=dotted];
m2_15 -> m2_24  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_25  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_8  [color=darkorchid, key=3, label="Local variable System.Reflection.Assembly assembly", style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_11  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_20  [key=2, style=dotted];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=0, style=solid];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label=a, style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_13  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_10 -> m2_15  [color=darkseagreen4, key=1, label=assembly, style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=0, style=solid];
m2_16 -> m2_18  [key=0, style=solid];
m2_18 -> m2_0  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_37  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_34 -> m2_36  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_34 -> m2_39  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=2, style=dotted];
m2_37 -> m2_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_36 -> m2_38  [key=0, style=solid];
m2_38 -> m2_34  [color=blue, key=0, style=bold];
m2_30 -> m2_31  [color=green, key=0, style=solid];
m2_31 -> m2_32  [color=green, key=0, style=solid];
m2_31 -> m2_33  [color=green, key=2, style=dotted];
m2_32 -> m2_30  [color=blue, key=0, style=bold];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_34  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey other", style=bold];
m2_40 -> m2_41  [key=0, style=solid];
m2_41 -> m2_39  [color=blue, key=0, style=bold];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_26  [key=2, style=dotted];
m2_43 -> m2_45  [key=2, style=dotted];
m2_44 -> m2_42  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_29 -> m2_26  [color=blue, key=0, style=bold];
m2_51 -> m2_31  [color=green, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_51 -> m2_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_51 -> m2_40  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_52 -> m2_38  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.DefaultSerializationBinder.TypeNameKey", style=dashed];
m2_53 -> m2_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultSerializationBinder", style=dashed];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_60  [key=2, style=dotted];
m3_79 -> m3_96  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_88  [key=2, style=dotted];
m3_80 -> m3_83  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_80 -> m3_85  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_80 -> m3_61  [color=blue, key=0, style=bold];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_89  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_6  [key=2, style=dotted];
m3_83 -> m3_7  [key=2, style=dotted];
m3_83 -> m3_56  [key=2, style=dotted];
m3_83 -> m3_57  [key=2, style=dotted];
m3_83 -> m3_85  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_83 -> m3_86  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_83 -> m3_87  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_83 -> m3_88  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_6  [key=2, style=dotted];
m3_85 -> m3_7  [key=2, style=dotted];
m3_85 -> m3_58  [key=2, style=dotted];
m3_85 -> m3_59  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_8  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_8  [key=2, style=dotted];
m3_84 -> m3_58  [key=2, style=dotted];
m3_84 -> m3_59  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_8  [key=2, style=dotted];
m3_86 -> m3_58  [key=2, style=dotted];
m3_86 -> m3_59  [key=2, style=dotted];
m3_87 -> m3_79  [color=blue, key=0, style=bold];
m3_87 -> m3_60  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_76 -> m3_60  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [key=2, style=dotted];
m3_58 -> m3_62  [key=2, style=dotted];
m3_577 -> m3_578  [key=0, style=solid];
m3_579 -> m3_56  [key=2, style=dotted];
m3_579 -> m3_57  [key=2, style=dotted];
m3_579 -> m3_580  [key=0, style=solid];
m3_579 -> m3_581  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_582  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_583  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_584  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_585  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_586  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_587  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_588  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_589  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_590  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_591  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_579 -> m3_592  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_56  [key=2, style=dotted];
m3_594 -> m3_57  [key=2, style=dotted];
m3_594 -> m3_595  [key=0, style=solid];
m3_594 -> m3_596  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_597  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_598  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_599  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_600  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_601  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_602  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_603  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_604  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_605  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_606  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_594 -> m3_607  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_580 -> m3_58  [key=2, style=dotted];
m3_580 -> m3_59  [key=2, style=dotted];
m3_580 -> m3_581  [key=0, style=solid];
m3_583 -> m3_58  [key=2, style=dotted];
m3_583 -> m3_59  [key=2, style=dotted];
m3_583 -> m3_584  [key=0, style=solid];
m3_586 -> m3_58  [key=2, style=dotted];
m3_586 -> m3_59  [key=2, style=dotted];
m3_586 -> m3_587  [key=0, style=solid];
m3_589 -> m3_58  [key=2, style=dotted];
m3_589 -> m3_59  [key=2, style=dotted];
m3_589 -> m3_590  [key=0, style=solid];
m3_592 -> m3_58  [key=2, style=dotted];
m3_592 -> m3_593  [key=0, style=solid];
m3_592 -> m3_133  [key=2, style=dotted];
m3_595 -> m3_58  [key=2, style=dotted];
m3_595 -> m3_59  [key=2, style=dotted];
m3_595 -> m3_596  [key=0, style=solid];
m3_598 -> m3_58  [key=2, style=dotted];
m3_598 -> m3_59  [key=2, style=dotted];
m3_598 -> m3_599  [key=0, style=solid];
m3_601 -> m3_58  [key=2, style=dotted];
m3_601 -> m3_59  [key=2, style=dotted];
m3_601 -> m3_602  [key=0, style=solid];
m3_604 -> m3_58  [key=2, style=dotted];
m3_604 -> m3_59  [key=2, style=dotted];
m3_604 -> m3_605  [key=0, style=solid];
m3_607 -> m3_58  [key=2, style=dotted];
m3_607 -> m3_608  [key=0, style=solid];
m3_607 -> m3_133  [key=2, style=dotted];
m3_581 -> m3_60  [key=2, style=dotted];
m3_581 -> m3_582  [key=0, style=solid];
m3_582 -> m3_60  [key=2, style=dotted];
m3_582 -> m3_583  [key=0, style=solid];
m3_584 -> m3_60  [key=2, style=dotted];
m3_584 -> m3_585  [key=0, style=solid];
m3_585 -> m3_60  [key=2, style=dotted];
m3_585 -> m3_586  [key=0, style=solid];
m3_587 -> m3_60  [key=2, style=dotted];
m3_587 -> m3_588  [key=0, style=solid];
m3_588 -> m3_60  [key=2, style=dotted];
m3_588 -> m3_589  [key=0, style=solid];
m3_590 -> m3_60  [key=2, style=dotted];
m3_590 -> m3_591  [key=0, style=solid];
m3_591 -> m3_60  [key=2, style=dotted];
m3_591 -> m3_592  [key=0, style=solid];
m3_596 -> m3_60  [key=2, style=dotted];
m3_596 -> m3_597  [key=0, style=solid];
m3_597 -> m3_60  [key=2, style=dotted];
m3_597 -> m3_598  [key=0, style=solid];
m3_599 -> m3_60  [key=2, style=dotted];
m3_599 -> m3_600  [key=0, style=solid];
m3_600 -> m3_60  [key=2, style=dotted];
m3_600 -> m3_601  [key=0, style=solid];
m3_602 -> m3_60  [key=2, style=dotted];
m3_602 -> m3_603  [key=0, style=solid];
m3_603 -> m3_60  [key=2, style=dotted];
m3_603 -> m3_604  [key=0, style=solid];
m3_605 -> m3_60  [key=2, style=dotted];
m3_605 -> m3_606  [key=0, style=solid];
m3_606 -> m3_60  [key=2, style=dotted];
m3_606 -> m3_607  [key=0, style=solid];
m3_578 -> m3_579  [key=0, style=solid];
m3_593 -> m3_594  [key=0, style=solid];
m3_608 -> m3_577  [color=blue, key=0, style=bold];
m3_59 -> m3_54  [color=blue, key=0, style=bold];
m3_61 -> m3_62  [key=0, style=solid];
m3_77 -> m3_58  [key=2, style=dotted];
m3_77 -> m3_59  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_121 -> m3_56  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_118  [key=2, style=dotted];
m3_121 -> m3_123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_121 -> m3_117  [color=blue, key=0, style=bold];
m3_126 -> m3_56  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_118  [key=2, style=dotted];
m3_126 -> m3_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_122 -> m3_59  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", style=dashed];
m3_122 -> m3_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", style=dashed];
m3_122 -> m3_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", style=dashed];
m3_122 -> m3_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingTests.NetworkUser", style=dashed];
m3_127 -> m3_59  [key=2, style=dotted];
m3_127 -> m3_128  [key=0, style=solid];
m3_129 -> m3_59  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_122  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_120 -> m3_74  [key=2, style=dotted];
m3_120 -> m3_124  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_132  [key=2, style=dotted];
m3_123 -> m3_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", style=dashed];
m3_123 -> m3_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", style=dashed];
m3_123 -> m3_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", style=dashed];
m3_123 -> m3_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializeHolder", style=dashed];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_127  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_125 -> m3_129  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_125 -> m3_74  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_132  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_133  [key=2, style=dotted];
m3_124 -> m3_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", style=dashed];
m3_124 -> m3_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", style=dashed];
m3_124 -> m3_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.DefaultValueHandlingDeserializePopulate", style=dashed];
m3_130 -> m3_119  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_60  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_31  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_28 -> m3_28  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m3_28 -> m3_60  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_6  [key=2, style=dotted];
m3_29 -> m3_34  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_6  [key=2, style=dotted];
m3_31 -> m3_34  [key=2, style=dotted];
m3_31 -> m3_58  [key=2, style=dotted];
m3_31 -> m3_59  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_8  [key=2, style=dotted];
m3_30 -> m3_56  [key=2, style=dotted];
m3_30 -> m3_57  [key=2, style=dotted];
m3_30 -> m3_32  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_33  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_34  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_35  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_36  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_37  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_38  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_39  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_40  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_41  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_42  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_43  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_44  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_45  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_46  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_47  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_48  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_49  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_50  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_51  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_52  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_53  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_30 -> m3_54  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_8  [key=2, style=dotted];
m3_32 -> m3_60  [key=2, style=dotted];
m3_33 -> m3_27  [color=blue, key=0, style=bold];
m3_33 -> m3_60  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_8  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_278 -> m3_56  [key=2, style=dotted];
m3_278 -> m3_57  [key=2, style=dotted];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_280 -> m3_58  [key=2, style=dotted];
m3_280 -> m3_280  [key=0, style=solid];
m3_280 -> m3_281  [key=0, style=solid];
m3_282 -> m3_60  [key=2, style=dotted];
m3_282 -> m3_283  [key=0, style=solid];
m3_283 -> m3_60  [key=2, style=dotted];
m3_283 -> m3_284  [key=0, style=solid];
m3_276 -> m3_278  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_276 -> m3_277  [key=0, style=solid];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> m3_282  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m3_277 -> m3_283  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m3_277 -> m3_273  [key=2, style=dotted];
m3_277 -> m3_279  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m3_279 -> m3_280  [key=0, style=solid];
m3_281 -> m3_282  [key=0, style=solid];
m3_281 -> m3_285  [key=2, style=dotted];
m3_284 -> m3_275  [color=blue, key=0, style=bold];
m3_258 -> m3_259  [key=0, style=solid];
m3_263 -> m3_56  [key=2, style=dotted];
m3_263 -> m3_57  [key=2, style=dotted];
m3_263 -> m3_264  [key=0, style=solid];
m3_263 -> m3_265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_265 -> m3_58  [key=2, style=dotted];
m3_265 -> m3_265  [key=0, style=solid];
m3_265 -> m3_266  [key=0, style=solid];
m3_269 -> m3_60  [key=2, style=dotted];
m3_269 -> m3_270  [key=0, style=solid];
m3_270 -> m3_60  [key=2, style=dotted];
m3_270 -> m3_271  [key=0, style=solid];
m3_259 -> m3_263  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_272  [key=2, style=dotted];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_269  [key=0, style=solid];
m3_264 -> m3_265  [key=0, style=solid];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_268  [key=0, style=solid];
m3_260 -> m3_269  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m3_260 -> m3_270  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m3_260 -> m3_264  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_273  [key=2, style=dotted];
m3_260 -> m3_267  [color=darkseagreen4, key=1, label=arrayPool, style=dashed];
m3_261 -> m3_262  [key=0, style=solid];
m3_261 -> m3_266  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_261 -> m3_268  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_268 -> m3_262  [key=0, style=solid];
m3_268 -> m3_268  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_274  [key=2, style=dotted];
m3_271 -> m3_258  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_6 -> m3_60  [color=green, key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_60  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_60  [key=2, style=dotted];
m3_55 -> m3_61  [key=2, style=dotted];
m3_55 -> m3_0  [color=blue, key=0, style=bold];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_60  [key=2, style=dotted];
m3_56 -> m3_61  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_60  [key=2, style=dotted];
m3_57 -> m3_62  [key=2, style=dotted];
m3_72 -> m3_58  [key=2, style=dotted];
m3_72 -> m3_59  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_8  [key=2, style=dotted];
m3_96 -> m3_60  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_109  [key=2, style=dotted];
m3_96 -> m3_8  [key=2, style=dotted];
m3_97 -> m3_60  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_109  [key=2, style=dotted];
m3_97 -> m3_90  [color=blue, key=0, style=bold];
m3_98 -> m3_60  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_109  [key=2, style=dotted];
m3_99 -> m3_60  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_109  [key=2, style=dotted];
m3_99 -> m3_28  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m3_100 -> m3_60  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_109  [key=2, style=dotted];
m3_100 -> m3_6  [key=2, style=dotted];
m3_100 -> m3_34  [key=2, style=dotted];
m3_100 -> m3_102  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_100 -> m3_103  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_101 -> m3_60  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_109  [key=2, style=dotted];
m3_101 -> m3_8  [key=2, style=dotted];
m3_102 -> m3_60  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_109  [key=2, style=dotted];
m3_102 -> m3_8  [key=2, style=dotted];
m3_103 -> m3_60  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_109  [key=2, style=dotted];
m3_103 -> m3_8  [key=2, style=dotted];
m3_104 -> m3_60  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_109  [key=2, style=dotted];
m3_104 -> m3_98  [color=blue, key=0, style=bold];
m3_105 -> m3_60  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_109  [key=2, style=dotted];
m3_106 -> m3_60  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_109  [key=2, style=dotted];
m3_106 -> m3_28  [color=darkorchid, key=3, label="Local variable string str", style=bold];
m3_107 -> m3_60  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_109  [key=2, style=dotted];
m3_107 -> m3_6  [key=2, style=dotted];
m3_107 -> m3_34  [key=2, style=dotted];
m3_108 -> m3_95  [color=blue, key=0, style=bold];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_8  [key=2, style=dotted];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_56  [color=green, key=2, style=dotted];
m3_2 -> m3_57  [color=green, key=2, style=dotted];
m3_2 -> m3_4  [color=green, key=1, label=jsonTextReader, style=dashed];
m3_2 -> m3_5  [color=green, key=1, label=jsonTextReader, style=dashed];
m3_2 -> m3_6  [color=green, key=1, label=jsonTextReader, style=dashed];
m3_2 -> m3_7  [color=green, key=1, label=jsonTextReader, style=dashed];
m3_2 -> m3_8  [color=green, key=1, label=jsonTextReader, style=dashed];
m3_2 -> m3_9  [color=green, key=1, label=jsonTextReader, style=dashed];
m3_2 -> m3_10  [color=green, key=1, label=jsonTextReader, style=dashed];
m3_3 -> m3_4  [color=green, key=0, style=solid];
m3_3 -> m3_58  [color=green, key=2, style=dotted];
m3_3 -> m3_59  [color=green, key=2, style=dotted];
m3_3 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_5  [color=green, key=0, style=solid];
m3_4 -> m3_60  [color=green, key=2, style=dotted];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [color=green, key=0, style=solid];
m3_5 -> m3_60  [color=green, key=2, style=dotted];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_7 -> m3_58  [color=green, key=2, style=dotted];
m3_7 -> m3_59  [color=green, key=2, style=dotted];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_8 -> m3_60  [color=green, key=2, style=dotted];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> m3_60  [color=green, key=2, style=dotted];
m3_10 -> m3_11  [color=green, key=0, style=solid];
m3_10 -> m3_60  [color=green, key=2, style=dotted];
m3_10 -> m3_5  [key=2, style=dotted];
m3_10 -> m3_13  [color=darkseagreen4, key=1, label=invoice, style=dashed];
m3_11 -> m3_12  [color=green, key=0, style=solid];
m3_11 -> m3_6  [key=2, style=dotted];
m3_11 -> m3_7  [key=2, style=dotted];
m3_12 -> m3_56  [key=2, style=dotted];
m3_12 -> m3_57  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_15  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_16  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_17  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_18  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_19  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_20  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_21  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_22  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_23  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_24  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_25  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_26  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_27  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_28  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m3_12 -> m3_8  [key=2, style=dotted];
m3_13 -> m3_58  [key=2, style=dotted];
m3_13 -> m3_59  [key=2, style=dotted];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_6  [key=2, style=dotted];
m3_13 -> m3_7  [key=2, style=dotted];
m3_17 -> m3_58  [key=2, style=dotted];
m3_17 -> m3_59  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_26  [key=2, style=dotted];
m3_17 -> m3_6  [key=2, style=dotted];
m3_17 -> m3_7  [key=2, style=dotted];
m3_21 -> m3_58  [key=2, style=dotted];
m3_21 -> m3_59  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_26  [key=2, style=dotted];
m3_21 -> m3_6  [key=2, style=dotted];
m3_21 -> m3_7  [key=2, style=dotted];
m3_25 -> m3_58  [key=2, style=dotted];
m3_25 -> m3_59  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_16  [color=blue, key=0, style=bold];
m3_35 -> m3_58  [key=2, style=dotted];
m3_35 -> m3_59  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_39 -> m3_58  [key=2, style=dotted];
m3_39 -> m3_59  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_6  [key=2, style=dotted];
m3_39 -> m3_34  [key=2, style=dotted];
m3_39 -> m3_41  [color=darkseagreen4, key=1, label=c2, style=dashed];
m3_43 -> m3_58  [key=2, style=dotted];
m3_43 -> m3_59  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_47 -> m3_58  [key=2, style=dotted];
m3_47 -> m3_59  [key=2, style=dotted];
m3_47 -> m3_48  [key=0, style=solid];
m3_51 -> m3_58  [key=2, style=dotted];
m3_51 -> m3_59  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_6  [key=2, style=dotted];
m3_51 -> m3_7  [key=2, style=dotted];
m3_14 -> m3_60  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_8  [key=2, style=dotted];
m3_15 -> m3_60  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_9  [color=blue, key=0, style=bold];
m3_16 -> m3_60  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_18 -> m3_60  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_8  [key=2, style=dotted];
m3_19 -> m3_60  [key=2, style=dotted];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_26  [key=2, style=dotted];
m3_19 -> m3_6  [key=2, style=dotted];
m3_19 -> m3_7  [key=2, style=dotted];
m3_20 -> m3_60  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_8  [key=2, style=dotted];
m3_22 -> m3_60  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_8  [key=2, style=dotted];
m3_23 -> m3_60  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_26  [key=2, style=dotted];
m3_23 -> m3_6  [key=2, style=dotted];
m3_23 -> m3_7  [key=2, style=dotted];
m3_24 -> m3_60  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_8  [key=2, style=dotted];
m3_26 -> m3_60  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_34 -> m3_60  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_36 -> m3_60  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_6  [key=2, style=dotted];
m3_36 -> m3_34  [key=2, style=dotted];
m3_36 -> m3_38  [color=darkseagreen4, key=1, label=c1, style=dashed];
m3_37 -> m3_60  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_8  [key=2, style=dotted];
m3_38 -> m3_60  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_8  [key=2, style=dotted];
m3_40 -> m3_60  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_8  [key=2, style=dotted];
m3_41 -> m3_60  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_8  [key=2, style=dotted];
m3_42 -> m3_60  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_35  [color=blue, key=0, style=bold];
m3_44 -> m3_60  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_45 -> m3_60  [key=2, style=dotted];
m3_45 -> m3_46  [key=0, style=solid];
m3_46 -> m3_60  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_48 -> m3_60  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_43  [color=blue, key=0, style=bold];
m3_49 -> m3_60  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_60  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_43  [key=2, style=dotted];
m3_52 -> m3_60  [key=2, style=dotted];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_8  [key=2, style=dotted];
m3_53 -> m3_60  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_49  [color=blue, key=0, style=bold];
m3_247 -> m3_248  [key=0, style=solid];
m3_249 -> m3_56  [key=2, style=dotted];
m3_249 -> m3_57  [key=2, style=dotted];
m3_249 -> m3_250  [key=0, style=solid];
m3_249 -> m3_252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_249 -> m3_254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_249 -> m3_255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_249 -> m3_256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_252 -> m3_58  [key=2, style=dotted];
m3_252 -> m3_59  [key=2, style=dotted];
m3_252 -> m3_253  [key=0, style=solid];
m3_254 -> m3_58  [key=2, style=dotted];
m3_254 -> m3_59  [key=2, style=dotted];
m3_254 -> m3_255  [key=0, style=solid];
m3_255 -> m3_60  [key=2, style=dotted];
m3_255 -> m3_256  [key=0, style=solid];
m3_256 -> m3_60  [key=2, style=dotted];
m3_256 -> m3_257  [key=0, style=solid];
m3_248 -> m3_249  [key=0, style=solid];
m3_250 -> m3_251  [key=0, style=solid];
m3_250 -> m3_253  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_254  [key=0, style=solid];
m3_253 -> m3_251  [key=0, style=solid];
m3_253 -> m3_253  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_257 -> m3_247  [color=blue, key=0, style=bold];
m3_412 -> m3_413  [key=0, style=solid];
m3_414 -> m3_56  [key=2, style=dotted];
m3_414 -> m3_415  [key=0, style=solid];
m3_414 -> m3_118  [key=2, style=dotted];
m3_414 -> m3_498  [key=2, style=dotted];
m3_414 -> m3_499  [key=2, style=dotted];
m3_414 -> m3_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_451  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_452  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_453  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_467  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_468  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_469  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_470  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_483  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_484  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_485  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_486  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_487  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_414 -> m3_496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_415 -> m3_58  [key=2, style=dotted];
m3_415 -> m3_59  [key=2, style=dotted];
m3_415 -> m3_416  [key=0, style=solid];
m3_419 -> m3_58  [key=2, style=dotted];
m3_419 -> m3_59  [key=2, style=dotted];
m3_419 -> m3_420  [key=0, style=solid];
m3_422 -> m3_58  [key=2, style=dotted];
m3_422 -> m3_59  [key=2, style=dotted];
m3_422 -> m3_423  [key=0, style=solid];
m3_425 -> m3_58  [key=2, style=dotted];
m3_425 -> m3_59  [key=2, style=dotted];
m3_425 -> m3_426  [key=0, style=solid];
m3_429 -> m3_58  [key=2, style=dotted];
m3_429 -> m3_59  [key=2, style=dotted];
m3_429 -> m3_430  [key=0, style=solid];
m3_432 -> m3_58  [key=2, style=dotted];
m3_432 -> m3_59  [key=2, style=dotted];
m3_432 -> m3_433  [key=0, style=solid];
m3_436 -> m3_58  [key=2, style=dotted];
m3_436 -> m3_59  [key=2, style=dotted];
m3_436 -> m3_437  [key=0, style=solid];
m3_440 -> m3_58  [key=2, style=dotted];
m3_440 -> m3_59  [key=2, style=dotted];
m3_440 -> m3_441  [key=0, style=solid];
m3_444 -> m3_58  [key=2, style=dotted];
m3_444 -> m3_59  [key=2, style=dotted];
m3_444 -> m3_445  [key=0, style=solid];
m3_448 -> m3_58  [key=2, style=dotted];
m3_448 -> m3_59  [key=2, style=dotted];
m3_448 -> m3_449  [key=0, style=solid];
m3_451 -> m3_58  [key=2, style=dotted];
m3_451 -> m3_59  [key=2, style=dotted];
m3_451 -> m3_452  [key=0, style=solid];
m3_455 -> m3_58  [key=2, style=dotted];
m3_455 -> m3_59  [key=2, style=dotted];
m3_455 -> m3_456  [key=0, style=solid];
m3_457 -> m3_58  [key=2, style=dotted];
m3_457 -> m3_59  [key=2, style=dotted];
m3_457 -> m3_458  [key=0, style=solid];
m3_460 -> m3_58  [key=2, style=dotted];
m3_460 -> m3_59  [key=2, style=dotted];
m3_460 -> m3_461  [key=0, style=solid];
m3_463 -> m3_58  [key=2, style=dotted];
m3_463 -> m3_59  [key=2, style=dotted];
m3_463 -> m3_464  [key=0, style=solid];
m3_466 -> m3_58  [key=2, style=dotted];
m3_466 -> m3_59  [key=2, style=dotted];
m3_466 -> m3_467  [key=0, style=solid];
m3_469 -> m3_58  [key=2, style=dotted];
m3_469 -> m3_59  [key=2, style=dotted];
m3_469 -> m3_470  [key=0, style=solid];
m3_471 -> m3_58  [key=2, style=dotted];
m3_471 -> m3_59  [key=2, style=dotted];
m3_471 -> m3_472  [key=0, style=solid];
m3_474 -> m3_58  [key=2, style=dotted];
m3_474 -> m3_59  [key=2, style=dotted];
m3_474 -> m3_475  [key=0, style=solid];
m3_476 -> m3_58  [key=2, style=dotted];
m3_476 -> m3_59  [key=2, style=dotted];
m3_476 -> m3_477  [key=0, style=solid];
m3_478 -> m3_58  [key=2, style=dotted];
m3_478 -> m3_59  [key=2, style=dotted];
m3_478 -> m3_479  [key=0, style=solid];
m3_480 -> m3_58  [key=2, style=dotted];
m3_480 -> m3_59  [key=2, style=dotted];
m3_480 -> m3_481  [key=0, style=solid];
m3_482 -> m3_58  [key=2, style=dotted];
m3_482 -> m3_59  [key=2, style=dotted];
m3_482 -> m3_483  [key=0, style=solid];
m3_484 -> m3_58  [key=2, style=dotted];
m3_484 -> m3_59  [key=2, style=dotted];
m3_484 -> m3_485  [key=0, style=solid];
m3_486 -> m3_58  [key=2, style=dotted];
m3_486 -> m3_59  [key=2, style=dotted];
m3_486 -> m3_487  [key=0, style=solid];
m3_488 -> m3_58  [key=2, style=dotted];
m3_488 -> m3_59  [key=2, style=dotted];
m3_488 -> m3_489  [key=0, style=solid];
m3_490 -> m3_58  [key=2, style=dotted];
m3_490 -> m3_59  [key=2, style=dotted];
m3_490 -> m3_491  [key=0, style=solid];
m3_493 -> m3_58  [key=2, style=dotted];
m3_493 -> m3_59  [key=2, style=dotted];
m3_493 -> m3_494  [key=0, style=solid];
m3_496 -> m3_58  [key=2, style=dotted];
m3_496 -> m3_497  [key=0, style=solid];
m3_496 -> m3_133  [key=2, style=dotted];
m3_416 -> m3_60  [key=2, style=dotted];
m3_416 -> m3_417  [key=0, style=solid];
m3_417 -> m3_60  [key=2, style=dotted];
m3_417 -> m3_418  [key=0, style=solid];
m3_418 -> m3_60  [key=2, style=dotted];
m3_418 -> m3_419  [key=0, style=solid];
m3_420 -> m3_60  [key=2, style=dotted];
m3_420 -> m3_421  [key=0, style=solid];
m3_421 -> m3_60  [key=2, style=dotted];
m3_421 -> m3_422  [key=0, style=solid];
m3_423 -> m3_60  [key=2, style=dotted];
m3_423 -> m3_424  [key=0, style=solid];
m3_424 -> m3_60  [key=2, style=dotted];
m3_424 -> m3_425  [key=0, style=solid];
m3_426 -> m3_60  [key=2, style=dotted];
m3_426 -> m3_427  [key=0, style=solid];
m3_427 -> m3_60  [key=2, style=dotted];
m3_427 -> m3_428  [key=0, style=solid];
m3_428 -> m3_60  [key=2, style=dotted];
m3_428 -> m3_429  [key=0, style=solid];
m3_430 -> m3_60  [key=2, style=dotted];
m3_430 -> m3_431  [key=0, style=solid];
m3_431 -> m3_60  [key=2, style=dotted];
m3_431 -> m3_432  [key=0, style=solid];
m3_433 -> m3_60  [key=2, style=dotted];
m3_433 -> m3_434  [key=0, style=solid];
m3_434 -> m3_60  [key=2, style=dotted];
m3_434 -> m3_435  [key=0, style=solid];
m3_435 -> m3_60  [key=2, style=dotted];
m3_435 -> m3_436  [key=0, style=solid];
m3_437 -> m3_60  [key=2, style=dotted];
m3_437 -> m3_438  [key=0, style=solid];
m3_438 -> m3_60  [key=2, style=dotted];
m3_438 -> m3_439  [key=0, style=solid];
m3_439 -> m3_60  [key=2, style=dotted];
m3_439 -> m3_440  [key=0, style=solid];
m3_441 -> m3_60  [key=2, style=dotted];
m3_441 -> m3_442  [key=0, style=solid];
m3_442 -> m3_60  [key=2, style=dotted];
m3_442 -> m3_443  [key=0, style=solid];
m3_443 -> m3_60  [key=2, style=dotted];
m3_443 -> m3_444  [key=0, style=solid];
m3_445 -> m3_60  [key=2, style=dotted];
m3_445 -> m3_446  [key=0, style=solid];
m3_446 -> m3_60  [key=2, style=dotted];
m3_446 -> m3_447  [key=0, style=solid];
m3_447 -> m3_60  [key=2, style=dotted];
m3_447 -> m3_448  [key=0, style=solid];
m3_449 -> m3_60  [key=2, style=dotted];
m3_449 -> m3_450  [key=0, style=solid];
m3_450 -> m3_60  [key=2, style=dotted];
m3_450 -> m3_451  [key=0, style=solid];
m3_452 -> m3_60  [key=2, style=dotted];
m3_452 -> m3_453  [key=0, style=solid];
m3_453 -> m3_60  [key=2, style=dotted];
m3_453 -> m3_454  [key=0, style=solid];
m3_454 -> m3_60  [key=2, style=dotted];
m3_454 -> m3_455  [key=0, style=solid];
m3_456 -> m3_60  [key=2, style=dotted];
m3_456 -> m3_457  [key=0, style=solid];
m3_458 -> m3_60  [key=2, style=dotted];
m3_458 -> m3_459  [key=0, style=solid];
m3_459 -> m3_60  [key=2, style=dotted];
m3_459 -> m3_460  [key=0, style=solid];
m3_461 -> m3_60  [key=2, style=dotted];
m3_461 -> m3_462  [key=0, style=solid];
m3_462 -> m3_60  [key=2, style=dotted];
m3_462 -> m3_463  [key=0, style=solid];
m3_464 -> m3_60  [key=2, style=dotted];
m3_464 -> m3_465  [key=0, style=solid];
m3_465 -> m3_60  [key=2, style=dotted];
m3_465 -> m3_466  [key=0, style=solid];
m3_467 -> m3_60  [key=2, style=dotted];
m3_467 -> m3_468  [key=0, style=solid];
m3_468 -> m3_60  [key=2, style=dotted];
m3_468 -> m3_469  [key=0, style=solid];
m3_470 -> m3_60  [key=2, style=dotted];
m3_470 -> m3_471  [key=0, style=solid];
m3_472 -> m3_60  [key=2, style=dotted];
m3_472 -> m3_473  [key=0, style=solid];
m3_473 -> m3_60  [key=2, style=dotted];
m3_473 -> m3_474  [key=0, style=solid];
m3_475 -> m3_60  [key=2, style=dotted];
m3_475 -> m3_476  [key=0, style=solid];
m3_477 -> m3_60  [key=2, style=dotted];
m3_477 -> m3_478  [key=0, style=solid];
m3_479 -> m3_60  [key=2, style=dotted];
m3_479 -> m3_480  [key=0, style=solid];
m3_481 -> m3_60  [key=2, style=dotted];
m3_481 -> m3_482  [key=0, style=solid];
m3_483 -> m3_60  [key=2, style=dotted];
m3_483 -> m3_484  [key=0, style=solid];
m3_485 -> m3_60  [key=2, style=dotted];
m3_485 -> m3_486  [key=0, style=solid];
m3_487 -> m3_60  [key=2, style=dotted];
m3_487 -> m3_488  [key=0, style=solid];
m3_489 -> m3_60  [key=2, style=dotted];
m3_489 -> m3_490  [key=0, style=solid];
m3_491 -> m3_60  [key=2, style=dotted];
m3_491 -> m3_492  [key=0, style=solid];
m3_492 -> m3_60  [key=2, style=dotted];
m3_492 -> m3_493  [key=0, style=solid];
m3_494 -> m3_60  [key=2, style=dotted];
m3_494 -> m3_495  [key=0, style=solid];
m3_495 -> m3_60  [key=2, style=dotted];
m3_495 -> m3_496  [key=0, style=solid];
m3_413 -> m3_414  [key=0, style=solid];
m3_497 -> m3_412  [color=blue, key=0, style=bold];
m3_74 -> m3_58  [key=2, style=dotted];
m3_74 -> m3_59  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_140 -> m3_141  [key=0, style=solid];
m3_143 -> m3_56  [key=2, style=dotted];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_152  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_155  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_156  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_157  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_158  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_170  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_173  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_179  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_185  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_197  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_208  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_209  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_210  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_211  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_212  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_213  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_214  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_215  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_219  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_220  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_221  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_222  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_223  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_225  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_226  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_227  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_228  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_229  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_230  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_143 -> m3_235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_142 -> m3_57  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_144 -> m3_60  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_146 -> m3_60  [key=2, style=dotted];
m3_146 -> m3_147  [key=0, style=solid];
m3_147 -> m3_60  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_148 -> m3_60  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_150 -> m3_60  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_151 -> m3_60  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_152 -> m3_60  [key=2, style=dotted];
m3_152 -> m3_153  [key=0, style=solid];
m3_154 -> m3_60  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_155 -> m3_60  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_156 -> m3_60  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_157 -> m3_60  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_158 -> m3_60  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_160 -> m3_60  [key=2, style=dotted];
m3_160 -> m3_161  [key=0, style=solid];
m3_161 -> m3_60  [key=2, style=dotted];
m3_161 -> m3_162  [key=0, style=solid];
m3_162 -> m3_60  [key=2, style=dotted];
m3_162 -> m3_162  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m3_162 -> m3_163  [key=0, style=solid];
m3_164 -> m3_60  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_165 -> m3_60  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_166 -> m3_60  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_168 -> m3_60  [key=2, style=dotted];
m3_168 -> m3_169  [key=0, style=solid];
m3_169 -> m3_60  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_170 -> m3_60  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_171 -> m3_60  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_173 -> m3_60  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_174 -> m3_60  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_175 -> m3_60  [key=2, style=dotted];
m3_175 -> m3_96  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m3_175 -> m3_176  [key=0, style=solid];
m3_176 -> m3_60  [key=2, style=dotted];
m3_176 -> m3_177  [key=0, style=solid];
m3_178 -> m3_60  [key=2, style=dotted];
m3_178 -> m3_179  [key=0, style=solid];
m3_179 -> m3_60  [key=2, style=dotted];
m3_179 -> m3_180  [key=0, style=solid];
m3_180 -> m3_60  [key=2, style=dotted];
m3_180 -> m3_181  [key=0, style=solid];
m3_181 -> m3_60  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_183 -> m3_60  [key=2, style=dotted];
m3_183 -> m3_184  [key=0, style=solid];
m3_184 -> m3_60  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_185 -> m3_60  [key=2, style=dotted];
m3_185 -> m3_186  [key=0, style=solid];
m3_186 -> m3_60  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_188 -> m3_60  [key=2, style=dotted];
m3_188 -> m3_96  [color=darkorchid, key=3, label="Local variable string str", style=bold];
m3_188 -> m3_189  [key=0, style=solid];
m3_189 -> m3_60  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_190 -> m3_60  [key=2, style=dotted];
m3_190 -> m3_191  [key=0, style=solid];
m3_191 -> m3_60  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_193 -> m3_60  [key=2, style=dotted];
m3_193 -> m3_194  [key=0, style=solid];
m3_194 -> m3_60  [key=2, style=dotted];
m3_194 -> m3_195  [key=0, style=solid];
m3_195 -> m3_60  [key=2, style=dotted];
m3_195 -> m3_196  [key=0, style=solid];
m3_197 -> m3_60  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_198 -> m3_60  [key=2, style=dotted];
m3_198 -> m3_199  [key=0, style=solid];
m3_199 -> m3_60  [key=2, style=dotted];
m3_199 -> m3_200  [key=0, style=solid];
m3_201 -> m3_60  [key=2, style=dotted];
m3_201 -> m3_202  [key=0, style=solid];
m3_202 -> m3_60  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid];
m3_203 -> m3_60  [key=2, style=dotted];
m3_203 -> m3_204  [key=0, style=solid];
m3_205 -> m3_60  [key=2, style=dotted];
m3_205 -> m3_206  [key=0, style=solid];
m3_206 -> m3_60  [key=2, style=dotted];
m3_206 -> m3_207  [key=0, style=solid];
m3_207 -> m3_60  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_209 -> m3_60  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_210 -> m3_60  [key=2, style=dotted];
m3_210 -> m3_211  [key=0, style=solid];
m3_211 -> m3_60  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_213 -> m3_60  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_214 -> m3_60  [key=2, style=dotted];
m3_214 -> m3_215  [key=0, style=solid];
m3_215 -> m3_60  [key=2, style=dotted];
m3_215 -> m3_216  [key=0, style=solid];
m3_217 -> m3_60  [key=2, style=dotted];
m3_217 -> m3_218  [key=0, style=solid];
m3_218 -> m3_60  [key=2, style=dotted];
m3_218 -> m3_219  [key=0, style=solid];
m3_219 -> m3_60  [key=2, style=dotted];
m3_219 -> m3_220  [key=0, style=solid];
m3_221 -> m3_60  [key=2, style=dotted];
m3_221 -> m3_222  [key=0, style=solid];
m3_222 -> m3_60  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid];
m3_223 -> m3_60  [key=2, style=dotted];
m3_223 -> m3_224  [key=0, style=solid];
m3_225 -> m3_60  [key=2, style=dotted];
m3_225 -> m3_226  [key=0, style=solid];
m3_226 -> m3_60  [key=2, style=dotted];
m3_226 -> m3_227  [key=0, style=solid];
m3_227 -> m3_60  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_229 -> m3_60  [key=2, style=dotted];
m3_229 -> m3_230  [key=0, style=solid];
m3_230 -> m3_60  [key=2, style=dotted];
m3_230 -> m3_231  [key=0, style=solid];
m3_231 -> m3_60  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_233 -> m3_60  [key=2, style=dotted];
m3_233 -> m3_234  [key=0, style=solid];
m3_234 -> m3_60  [key=2, style=dotted];
m3_234 -> m3_235  [key=0, style=solid];
m3_235 -> m3_60  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_139  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_139  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_139  [key=2, style=dotted];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_139  [key=2, style=dotted];
m3_163 -> m3_164  [key=0, style=solid];
m3_163 -> m3_139  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_139  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_139  [key=2, style=dotted];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_139  [key=2, style=dotted];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_139  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_139  [key=2, style=dotted];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_139  [key=2, style=dotted];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> m3_139  [key=2, style=dotted];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_139  [key=2, style=dotted];
m3_204 -> m3_205  [key=0, style=solid];
m3_204 -> m3_139  [key=2, style=dotted];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_139  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_139  [key=2, style=dotted];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_139  [key=2, style=dotted];
m3_220 -> m3_221  [key=0, style=solid];
m3_220 -> m3_139  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_139  [key=2, style=dotted];
m3_228 -> m3_229  [key=0, style=solid];
m3_228 -> m3_139  [key=2, style=dotted];
m3_232 -> m3_233  [key=0, style=solid];
m3_232 -> m3_139  [key=2, style=dotted];
m3_141 -> m3_142  [key=0, style=solid];
m3_236 -> m3_140  [color=blue, key=0, style=bold];
m3_89 -> m3_60  [key=2, style=dotted];
m3_89 -> m3_90  [key=0, style=solid];
m3_91 -> m3_60  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_91  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_93  [key=2, style=dotted];
m3_88 -> m3_90  [color=darkseagreen4, key=1, label=s, style=dashed];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_94  [key=2, style=dotted];
m3_92 -> m3_81  [color=blue, key=0, style=bold];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_6  [key=2, style=dotted];
m3_92 -> m3_34  [key=2, style=dotted];
m3_92 -> m3_94  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_92 -> m3_95  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_92 -> m3_96  [color=darkseagreen4, key=1, label=o, style=dashed];
m3_369 -> m3_370  [key=0, style=solid];
m3_370 -> m3_56  [key=2, style=dotted];
m3_370 -> m3_57  [key=2, style=dotted];
m3_370 -> m3_371  [key=0, style=solid];
m3_370 -> m3_372  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_373  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_378  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_379  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_380  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_370 -> m3_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_372 -> m3_58  [key=2, style=dotted];
m3_372 -> m3_59  [key=2, style=dotted];
m3_372 -> m3_373  [key=0, style=solid];
m3_374 -> m3_58  [key=2, style=dotted];
m3_374 -> m3_59  [key=2, style=dotted];
m3_374 -> m3_375  [key=0, style=solid];
m3_376 -> m3_58  [key=2, style=dotted];
m3_376 -> m3_59  [key=2, style=dotted];
m3_376 -> m3_377  [key=0, style=solid];
m3_378 -> m3_58  [key=2, style=dotted];
m3_378 -> m3_59  [key=2, style=dotted];
m3_378 -> m3_379  [key=0, style=solid];
m3_380 -> m3_58  [key=2, style=dotted];
m3_380 -> m3_59  [key=2, style=dotted];
m3_380 -> m3_381  [key=0, style=solid];
m3_382 -> m3_58  [key=2, style=dotted];
m3_382 -> m3_59  [key=2, style=dotted];
m3_382 -> m3_383  [key=0, style=solid];
m3_384 -> m3_58  [key=2, style=dotted];
m3_384 -> m3_59  [key=2, style=dotted];
m3_384 -> m3_385  [key=0, style=solid];
m3_386 -> m3_58  [key=2, style=dotted];
m3_386 -> m3_59  [key=2, style=dotted];
m3_386 -> m3_387  [key=0, style=solid];
m3_388 -> m3_58  [key=2, style=dotted];
m3_388 -> m3_59  [key=2, style=dotted];
m3_388 -> m3_389  [key=0, style=solid];
m3_390 -> m3_58  [key=2, style=dotted];
m3_390 -> m3_59  [key=2, style=dotted];
m3_390 -> m3_391  [key=0, style=solid];
m3_392 -> m3_58  [key=2, style=dotted];
m3_392 -> m3_59  [key=2, style=dotted];
m3_392 -> m3_393  [key=0, style=solid];
m3_394 -> m3_58  [key=2, style=dotted];
m3_394 -> m3_59  [key=2, style=dotted];
m3_394 -> m3_395  [key=0, style=solid];
m3_396 -> m3_58  [key=2, style=dotted];
m3_396 -> m3_59  [key=2, style=dotted];
m3_396 -> m3_397  [key=0, style=solid];
m3_398 -> m3_58  [key=2, style=dotted];
m3_398 -> m3_59  [key=2, style=dotted];
m3_398 -> m3_399  [key=0, style=solid];
m3_400 -> m3_58  [key=2, style=dotted];
m3_400 -> m3_59  [key=2, style=dotted];
m3_400 -> m3_401  [key=0, style=solid];
m3_402 -> m3_58  [key=2, style=dotted];
m3_402 -> m3_59  [key=2, style=dotted];
m3_402 -> m3_403  [key=0, style=solid];
m3_404 -> m3_58  [key=2, style=dotted];
m3_404 -> m3_59  [key=2, style=dotted];
m3_404 -> m3_405  [key=0, style=solid];
m3_406 -> m3_58  [key=2, style=dotted];
m3_406 -> m3_59  [key=2, style=dotted];
m3_406 -> m3_407  [key=0, style=solid];
m3_408 -> m3_58  [key=2, style=dotted];
m3_408 -> m3_59  [key=2, style=dotted];
m3_408 -> m3_409  [key=0, style=solid];
m3_410 -> m3_58  [key=2, style=dotted];
m3_410 -> m3_411  [key=0, style=solid];
m3_410 -> m3_133  [key=2, style=dotted];
m3_373 -> m3_60  [key=2, style=dotted];
m3_373 -> m3_374  [key=0, style=solid];
m3_375 -> m3_60  [key=2, style=dotted];
m3_375 -> m3_376  [key=0, style=solid];
m3_377 -> m3_60  [key=2, style=dotted];
m3_377 -> m3_378  [key=0, style=solid];
m3_379 -> m3_60  [key=2, style=dotted];
m3_379 -> m3_380  [key=0, style=solid];
m3_381 -> m3_60  [key=2, style=dotted];
m3_381 -> m3_382  [key=0, style=solid];
m3_383 -> m3_60  [key=2, style=dotted];
m3_383 -> m3_384  [key=0, style=solid];
m3_385 -> m3_60  [key=2, style=dotted];
m3_385 -> m3_386  [key=0, style=solid];
m3_387 -> m3_60  [key=2, style=dotted];
m3_387 -> m3_388  [key=0, style=solid];
m3_389 -> m3_60  [key=2, style=dotted];
m3_389 -> m3_390  [key=0, style=solid];
m3_391 -> m3_60  [key=2, style=dotted];
m3_391 -> m3_392  [key=0, style=solid];
m3_393 -> m3_60  [key=2, style=dotted];
m3_393 -> m3_394  [key=0, style=solid];
m3_395 -> m3_60  [key=2, style=dotted];
m3_395 -> m3_396  [key=0, style=solid];
m3_397 -> m3_60  [key=2, style=dotted];
m3_397 -> m3_398  [key=0, style=solid];
m3_399 -> m3_60  [key=2, style=dotted];
m3_399 -> m3_400  [key=0, style=solid];
m3_401 -> m3_60  [key=2, style=dotted];
m3_401 -> m3_402  [key=0, style=solid];
m3_403 -> m3_60  [key=2, style=dotted];
m3_403 -> m3_404  [key=0, style=solid];
m3_405 -> m3_60  [key=2, style=dotted];
m3_405 -> m3_406  [key=0, style=solid];
m3_407 -> m3_60  [key=2, style=dotted];
m3_407 -> m3_408  [key=0, style=solid];
m3_409 -> m3_60  [key=2, style=dotted];
m3_409 -> m3_410  [key=0, style=solid];
m3_371 -> m3_372  [key=0, style=solid];
m3_411 -> m3_369  [color=blue, key=0, style=bold];
m3_355 -> m3_356  [key=0, style=solid];
m3_357 -> m3_56  [key=2, style=dotted];
m3_357 -> m3_57  [key=2, style=dotted];
m3_357 -> m3_358  [key=0, style=solid];
m3_357 -> m3_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_357 -> m3_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_357 -> m3_361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_357 -> m3_362  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_357 -> m3_363  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_357 -> m3_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_357 -> m3_365  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_358 -> m3_58  [key=2, style=dotted];
m3_358 -> m3_359  [key=0, style=solid];
m3_360 -> m3_58  [key=2, style=dotted];
m3_360 -> m3_361  [key=0, style=solid];
m3_362 -> m3_58  [key=2, style=dotted];
m3_362 -> m3_363  [key=0, style=solid];
m3_364 -> m3_58  [key=2, style=dotted];
m3_364 -> m3_365  [key=0, style=solid];
m3_359 -> m3_60  [key=2, style=dotted];
m3_359 -> m3_360  [key=0, style=solid];
m3_361 -> m3_60  [key=2, style=dotted];
m3_361 -> m3_362  [key=0, style=solid];
m3_363 -> m3_60  [key=2, style=dotted];
m3_363 -> m3_364  [key=0, style=solid];
m3_363 -> m3_367  [key=2, style=dotted];
m3_363 -> m3_368  [key=2, style=dotted];
m3_365 -> m3_60  [key=2, style=dotted];
m3_365 -> m3_366  [key=0, style=solid];
m3_356 -> m3_357  [key=0, style=solid];
m3_366 -> m3_355  [color=blue, key=0, style=bold];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_116  [key=2, style=dotted];
m3_110 -> m3_117  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_116  [key=2, style=dotted];
m3_111 -> m3_56  [key=2, style=dotted];
m3_111 -> m3_118  [key=2, style=dotted];
m3_111 -> m3_113  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_58  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_115 -> m3_110  [color=blue, key=0, style=bold];
m3_115 -> m3_109  [color=blue, key=0, style=bold];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_105  [color=blue, key=0, style=bold];
m3_75 -> m3_60  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_117 -> m3_118  [key=0, style=solid];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_116  [key=2, style=dotted];
m3_500 -> m3_501  [key=0, style=solid];
m3_502 -> m3_56  [key=2, style=dotted];
m3_502 -> m3_503  [key=0, style=solid];
m3_502 -> m3_118  [key=2, style=dotted];
m3_502 -> m3_498  [key=2, style=dotted];
m3_502 -> m3_499  [key=2, style=dotted];
m3_502 -> m3_504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_502 -> m3_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_502 -> m3_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_503 -> m3_58  [key=2, style=dotted];
m3_503 -> m3_59  [key=2, style=dotted];
m3_503 -> m3_504  [key=0, style=solid];
m3_506 -> m3_58  [key=2, style=dotted];
m3_506 -> m3_507  [key=0, style=solid];
m3_506 -> m3_133  [key=2, style=dotted];
m3_504 -> m3_60  [key=2, style=dotted];
m3_504 -> m3_505  [key=0, style=solid];
m3_505 -> m3_60  [key=2, style=dotted];
m3_505 -> m3_506  [key=0, style=solid];
m3_501 -> m3_502  [key=0, style=solid];
m3_507 -> m3_500  [color=blue, key=0, style=bold];
m3_237 -> m3_238  [key=0, style=solid];
m3_239 -> m3_56  [key=2, style=dotted];
m3_239 -> m3_57  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_242  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_239 -> m3_244  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_239 -> m3_245  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_242 -> m3_58  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_244 -> m3_58  [key=2, style=dotted];
m3_244 -> m3_245  [key=0, style=solid];
m3_245 -> m3_60  [key=2, style=dotted];
m3_245 -> m3_246  [key=0, style=solid];
m3_238 -> m3_239  [key=0, style=solid];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_243  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_241 -> m3_242  [key=0, style=solid];
m3_241 -> m3_244  [key=0, style=solid];
m3_243 -> m3_241  [key=0, style=solid];
m3_243 -> m3_243  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_246 -> m3_237  [color=blue, key=0, style=bold];
m3_618 -> m3_619  [key=0, style=solid];
m3_620 -> m3_56  [key=2, style=dotted];
m3_620 -> m3_57  [key=2, style=dotted];
m3_620 -> m3_621  [key=0, style=solid];
m3_620 -> m3_622  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_620 -> m3_623  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_620 -> m3_627  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_621 -> m3_58  [key=2, style=dotted];
m3_621 -> m3_59  [key=2, style=dotted];
m3_621 -> m3_622  [key=0, style=solid];
m3_622 -> m3_58  [key=2, style=dotted];
m3_622 -> m3_59  [key=2, style=dotted];
m3_622 -> m3_623  [key=0, style=solid];
m3_619 -> m3_620  [key=0, style=solid];
m3_623 -> m3_624  [key=0, style=solid];
m3_623 -> m3_625  [key=2, style=dotted];
m3_623 -> m3_626  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_624 -> m3_618  [color=blue, key=0, style=bold];
m3_73 -> m3_60  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_626 -> m3_627  [key=0, style=solid];
m3_627 -> m3_58  [key=2, style=dotted];
m3_627 -> m3_628  [key=0, style=solid];
m3_628 -> m3_626  [color=blue, key=0, style=bold];
m3_340 -> m3_341  [key=0, style=solid];
m3_343 -> m3_56  [key=2, style=dotted];
m3_343 -> m3_57  [key=2, style=dotted];
m3_343 -> m3_344  [key=0, style=solid];
m3_343 -> m3_345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_343 -> m3_346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_343 -> m3_347  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_343 -> m3_348  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_343 -> m3_349  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_343 -> m3_350  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_343 -> m3_351  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_343 -> m3_352  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_343 -> m3_353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_344 -> m3_58  [key=2, style=dotted];
m3_344 -> m3_345  [key=0, style=solid];
m3_346 -> m3_58  [key=2, style=dotted];
m3_346 -> m3_347  [key=0, style=solid];
m3_350 -> m3_58  [key=2, style=dotted];
m3_350 -> m3_59  [key=2, style=dotted];
m3_350 -> m3_351  [key=0, style=solid];
m3_352 -> m3_58  [key=2, style=dotted];
m3_352 -> m3_353  [key=0, style=solid];
m3_352 -> m3_133  [key=2, style=dotted];
m3_345 -> m3_60  [key=2, style=dotted];
m3_345 -> m3_346  [key=0, style=solid];
m3_347 -> m3_60  [key=2, style=dotted];
m3_347 -> m3_348  [key=0, style=solid];
m3_348 -> m3_60  [key=2, style=dotted];
m3_348 -> m3_349  [key=0, style=solid];
m3_349 -> m3_60  [key=2, style=dotted];
m3_349 -> m3_350  [key=0, style=solid];
m3_349 -> m3_93  [key=2, style=dotted];
m3_351 -> m3_60  [key=2, style=dotted];
m3_351 -> m3_352  [key=0, style=solid];
m3_353 -> m3_60  [key=2, style=dotted];
m3_353 -> m3_354  [key=0, style=solid];
m3_342 -> m3_343  [key=0, style=solid];
m3_342 -> m3_272  [key=2, style=dotted];
m3_341 -> m3_342  [key=0, style=solid];
m3_354 -> m3_340  [color=blue, key=0, style=bold];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_8  [key=2, style=dotted];
m3_134 -> m3_135  [key=0, style=solid];
m3_136 -> m3_56  [key=2, style=dotted];
m3_136 -> m3_57  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_135 -> m3_136  [key=0, style=solid];
m3_137 -> m3_137  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_139  [key=2, style=dotted];
m3_138 -> m3_134  [color=blue, key=0, style=bold];
m3_78 -> m3_60  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_286 -> m3_287  [key=0, style=solid];
m3_316 -> m3_56  [key=2, style=dotted];
m3_316 -> m3_57  [key=2, style=dotted];
m3_316 -> m3_317  [key=0, style=solid];
m3_316 -> m3_338  [key=2, style=dotted];
m3_316 -> m3_320  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m3_321 -> m3_60  [key=2, style=dotted];
m3_321 -> m3_322  [key=0, style=solid];
m3_321 -> m3_336  [key=2, style=dotted];
m3_314 -> m3_316  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_314 -> m3_321  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_314 -> m3_315  [key=0, style=solid];
m3_314 -> m3_336  [key=2, style=dotted];
m3_315 -> m3_316  [key=0, style=solid];
m3_315 -> m3_337  [key=2, style=dotted];
m3_315 -> m3_320  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m3_317 -> m3_321  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_317 -> m3_318  [key=0, style=solid];
m3_317 -> m3_323  [key=2, style=dotted];
m3_320 -> m3_321  [key=0, style=solid];
m3_320 -> m3_339  [key=2, style=dotted];
m3_287 -> m3_314  [color=darkseagreen4, key=1, label=sb, style=dashed];
m3_287 -> m3_288  [key=0, style=solid];
m3_287 -> m3_323  [key=2, style=dotted];
m3_313 -> m3_314  [key=0, style=solid];
m3_313 -> m3_334  [key=2, style=dotted];
m3_318 -> m3_319  [key=0, style=solid];
m3_318 -> m3_324  [key=2, style=dotted];
m3_319 -> m3_320  [key=0, style=solid];
m3_319 -> m3_325  [key=2, style=dotted];
m3_288 -> m3_289  [key=0, style=solid];
m3_288 -> m3_324  [key=2, style=dotted];
m3_289 -> m3_313  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_290  [key=0, style=solid];
m3_289 -> m3_325  [key=2, style=dotted];
m3_289 -> m3_291  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_292  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_293  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_294  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_295  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_296  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_297  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_298  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_301  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_303  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_304  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_305  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_306  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_307  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_308  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_309  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_310  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_311  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_289 -> m3_312  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m3_312 -> m3_313  [key=0, style=solid];
m3_312 -> m3_335  [key=2, style=dotted];
m3_290 -> m3_291  [key=0, style=solid];
m3_290 -> m3_326  [key=2, style=dotted];
m3_291 -> m3_292  [key=0, style=solid];
m3_291 -> m3_327  [key=2, style=dotted];
m3_292 -> m3_293  [key=0, style=solid];
m3_292 -> m3_328  [key=2, style=dotted];
m3_293 -> m3_294  [key=0, style=solid];
m3_293 -> m3_329  [key=2, style=dotted];
m3_294 -> m3_295  [key=0, style=solid];
m3_294 -> m3_330  [key=2, style=dotted];
m3_295 -> m3_296  [key=0, style=solid];
m3_295 -> m3_329  [key=2, style=dotted];
m3_296 -> m3_297  [key=0, style=solid];
m3_296 -> m3_331  [key=2, style=dotted];
m3_297 -> m3_298  [key=0, style=solid];
m3_297 -> m3_329  [key=2, style=dotted];
m3_298 -> m3_299  [key=0, style=solid];
m3_298 -> m3_326  [key=2, style=dotted];
m3_301 -> m3_302  [key=0, style=solid];
m3_301 -> m3_330  [key=2, style=dotted];
m3_303 -> m3_304  [key=0, style=solid];
m3_303 -> m3_328  [key=2, style=dotted];
m3_304 -> m3_305  [key=0, style=solid];
m3_304 -> m3_329  [key=2, style=dotted];
m3_305 -> m3_306  [key=0, style=solid];
m3_305 -> m3_332  [key=2, style=dotted];
m3_306 -> m3_307  [key=0, style=solid];
m3_306 -> m3_333  [key=2, style=dotted];
m3_307 -> m3_308  [key=0, style=solid];
m3_307 -> m3_330  [key=2, style=dotted];
m3_308 -> m3_334  [key=2, style=dotted];
m3_308 -> m3_309  [key=0, style=solid];
m3_309 -> m3_310  [key=0, style=solid];
m3_309 -> m3_333  [key=2, style=dotted];
m3_310 -> m3_311  [key=0, style=solid];
m3_310 -> m3_331  [key=2, style=dotted];
m3_311 -> m3_312  [key=0, style=solid];
m3_311 -> m3_335  [key=2, style=dotted];
m3_299 -> m3_301  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_299 -> m3_300  [key=0, style=solid];
m3_299 -> m3_302  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_303  [key=0, style=solid];
m3_302 -> m3_300  [key=0, style=solid];
m3_302 -> m3_302  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_322 -> m3_286  [color=blue, key=0, style=bold];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_56  [key=2, style=dotted];
m3_63 -> m3_57  [key=2, style=dotted];
m3_63 -> m3_65  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_66  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_67  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_68  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_69  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_70  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_71  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_72  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_73  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_74  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_75  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_76  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_77  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_78  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_63 -> m3_79  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_72  [key=2, style=dotted];
m3_64 -> m3_67  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_64 -> m3_69  [color=darkseagreen4, key=1, label=c, style=dashed];
m3_64 -> m3_58  [key=2, style=dotted];
m3_64 -> m3_59  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_73  [key=2, style=dotted];
m3_65 -> m3_67  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m3_65 -> m3_60  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_75  [key=2, style=dotted];
m3_67 -> m3_60  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_78  [key=2, style=dotted];
m3_69 -> m3_60  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_74  [key=2, style=dotted];
m3_66 -> m3_68  [color=darkseagreen4, key=1, label=ms, style=dashed];
m3_66 -> m3_58  [key=2, style=dotted];
m3_66 -> m3_59  [key=2, style=dotted];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_76  [key=2, style=dotted];
m3_68 -> m3_77  [key=2, style=dotted];
m3_68 -> m3_8  [key=2, style=dotted];
m3_68 -> m3_58  [key=2, style=dotted];
m3_68 -> m3_59  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_8  [key=2, style=dotted];
m3_70 -> m3_58  [key=2, style=dotted];
m3_70 -> m3_59  [key=2, style=dotted];
m3_71 -> m3_63  [color=blue, key=0, style=bold];
m3_71 -> m3_60  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_556 -> m3_557  [key=0, style=solid];
m3_565 -> m3_56  [key=2, style=dotted];
m3_565 -> m3_566  [key=0, style=solid];
m3_565 -> m3_567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_565 -> m3_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_565 -> m3_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_564 -> m3_57  [key=2, style=dotted];
m3_564 -> m3_565  [key=0, style=solid];
m3_566 -> m3_58  [key=2, style=dotted];
m3_566 -> m3_59  [key=2, style=dotted];
m3_566 -> m3_567  [key=0, style=solid];
m3_571 -> m3_58  [key=2, style=dotted];
m3_571 -> m3_59  [key=2, style=dotted];
m3_571 -> m3_572  [key=0, style=solid];
m3_568 -> m3_60  [key=2, style=dotted];
m3_568 -> m3_569  [key=0, style=solid];
m3_570 -> m3_60  [key=2, style=dotted];
m3_570 -> m3_571  [key=0, style=solid];
m3_567 -> m3_568  [key=0, style=solid];
m3_567 -> m3_555  [key=2, style=dotted];
m3_569 -> m3_570  [key=0, style=solid];
m3_569 -> m3_555  [key=2, style=dotted];
m3_563 -> m3_564  [key=0, style=solid];
m3_563 -> m3_576  [key=2, style=dotted];
m3_557 -> m3_563  [color=darkseagreen4, key=1, label=sw, style=dashed];
m3_557 -> m3_558  [key=0, style=solid];
m3_557 -> m3_573  [key=2, style=dotted];
m3_562 -> m3_563  [key=0, style=solid];
m3_562 -> m3_334  [key=2, style=dotted];
m3_558 -> m3_562  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_558 -> m3_325  [key=2, style=dotted];
m3_558 -> m3_559  [key=0, style=solid];
m3_558 -> m3_560  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_558 -> m3_561  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_561 -> m3_562  [key=0, style=solid];
m3_561 -> m3_575  [key=2, style=dotted];
m3_559 -> m3_560  [key=0, style=solid];
m3_559 -> m3_574  [key=2, style=dotted];
m3_560 -> m3_561  [key=0, style=solid];
m3_560 -> m3_575  [key=2, style=dotted];
m3_572 -> m3_556  [color=blue, key=0, style=bold];
m3_609 -> m3_610  [key=0, style=solid];
m3_613 -> m3_60  [key=2, style=dotted];
m3_613 -> m3_614  [key=0, style=solid];
m3_612 -> m3_613  [key=0, style=solid];
m3_612 -> m3_617  [key=2, style=dotted];
m3_611 -> m3_612  [key=0, style=solid];
m3_611 -> m3_616  [key=2, style=dotted];
m3_610 -> m3_611  [key=0, style=solid];
m3_610 -> m3_615  [key=2, style=dotted];
m3_614 -> m3_609  [color=blue, key=0, style=bold];
m3_508 -> m3_509  [key=0, style=solid];
m3_514 -> m3_56  [key=2, style=dotted];
m3_514 -> m3_57  [key=2, style=dotted];
m3_514 -> m3_515  [key=0, style=solid];
m3_514 -> m3_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_530  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_514 -> m3_531  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_56  [key=2, style=dotted];
m3_532 -> m3_57  [key=2, style=dotted];
m3_532 -> m3_533  [key=0, style=solid];
m3_532 -> m3_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_532 -> m3_549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m3_515 -> m3_58  [key=2, style=dotted];
m3_515 -> m3_516  [key=0, style=solid];
m3_516 -> m3_58  [key=2, style=dotted];
m3_516 -> m3_517  [key=0, style=solid];
m3_519 -> m3_58  [key=2, style=dotted];
m3_519 -> m3_520  [key=0, style=solid];
m3_522 -> m3_58  [key=2, style=dotted];
m3_522 -> m3_523  [key=0, style=solid];
m3_525 -> m3_58  [key=2, style=dotted];
m3_525 -> m3_526  [key=0, style=solid];
m3_528 -> m3_58  [key=2, style=dotted];
m3_528 -> m3_529  [key=0, style=solid];
m3_531 -> m3_58  [key=2, style=dotted];
m3_531 -> m3_532  [key=0, style=solid];
m3_533 -> m3_58  [key=2, style=dotted];
m3_533 -> m3_534  [key=0, style=solid];
m3_549 -> m3_58  [key=2, style=dotted];
m3_549 -> m3_550  [key=0, style=solid];
m3_511 -> m3_60  [key=2, style=dotted];
m3_511 -> m3_512  [key=0, style=solid];
m3_511 -> m3_552  [key=2, style=dotted];
m3_511 -> m3_553  [key=2, style=dotted];
m3_512 -> m3_60  [key=2, style=dotted];
m3_512 -> m3_513  [key=0, style=solid];
m3_512 -> m3_554  [key=2, style=dotted];
m3_517 -> m3_60  [key=2, style=dotted];
m3_517 -> m3_518  [key=0, style=solid];
m3_518 -> m3_60  [key=2, style=dotted];
m3_518 -> m3_519  [key=0, style=solid];
m3_520 -> m3_60  [key=2, style=dotted];
m3_520 -> m3_521  [key=0, style=solid];
m3_521 -> m3_60  [key=2, style=dotted];
m3_521 -> m3_522  [key=0, style=solid];
m3_523 -> m3_60  [key=2, style=dotted];
m3_523 -> m3_524  [key=0, style=solid];
m3_524 -> m3_60  [key=2, style=dotted];
m3_524 -> m3_525  [key=0, style=solid];
m3_526 -> m3_60  [key=2, style=dotted];
m3_526 -> m3_527  [key=0, style=solid];
m3_527 -> m3_60  [key=2, style=dotted];
m3_527 -> m3_528  [key=0, style=solid];
m3_529 -> m3_60  [key=2, style=dotted];
m3_529 -> m3_530  [key=0, style=solid];
m3_530 -> m3_60  [key=2, style=dotted];
m3_530 -> m3_531  [key=0, style=solid];
m3_535 -> m3_60  [key=2, style=dotted];
m3_535 -> m3_536  [key=0, style=solid];
m3_536 -> m3_60  [key=2, style=dotted];
m3_536 -> m3_537  [key=0, style=solid];
m3_538 -> m3_60  [key=2, style=dotted];
m3_538 -> m3_539  [key=0, style=solid];
m3_539 -> m3_60  [key=2, style=dotted];
m3_539 -> m3_540  [key=0, style=solid];
m3_541 -> m3_60  [key=2, style=dotted];
m3_541 -> m3_542  [key=0, style=solid];
m3_542 -> m3_60  [key=2, style=dotted];
m3_542 -> m3_543  [key=0, style=solid];
m3_544 -> m3_60  [key=2, style=dotted];
m3_544 -> m3_545  [key=0, style=solid];
m3_545 -> m3_60  [key=2, style=dotted];
m3_545 -> m3_546  [key=0, style=solid];
m3_547 -> m3_60  [key=2, style=dotted];
m3_547 -> m3_548  [key=0, style=solid];
m3_548 -> m3_60  [key=2, style=dotted];
m3_548 -> m3_549  [key=0, style=solid];
m3_513 -> m3_514  [key=0, style=solid];
m3_513 -> m3_532  [color=darkseagreen4, key=1, label=json, style=dashed];
m3_534 -> m3_535  [key=0, style=solid];
m3_534 -> m3_555  [key=2, style=dotted];
m3_537 -> m3_538  [key=0, style=solid];
m3_537 -> m3_555  [key=2, style=dotted];
m3_540 -> m3_541  [key=0, style=solid];
m3_540 -> m3_555  [key=2, style=dotted];
m3_543 -> m3_544  [key=0, style=solid];
m3_543 -> m3_555  [key=2, style=dotted];
m3_546 -> m3_547  [key=0, style=solid];
m3_546 -> m3_555  [key=2, style=dotted];
m3_510 -> m3_511  [key=0, style=solid];
m3_510 -> m3_512  [color=darkseagreen4, key=1, label=d, style=dashed];
m3_510 -> m3_551  [key=2, style=dotted];
m3_509 -> m3_510  [key=0, style=solid];
m3_550 -> m3_508  [color=blue, key=0, style=bold];
m3_630 -> m3_627  [color=darkseagreen4, key=1, label=r, style=dashed];
m3_629 -> m3_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m3_629 -> m3_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTests.MiscTests", style=dashed];
m4_23 -> m4_24  [color=green, key=0, style=solid];
m4_23 -> m4_26  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_25 -> m4_26  [color=green, key=0, style=solid];
m4_25 -> m4_28  [color=green, key=2, style=dotted];
m4_26 -> m4_27  [color=green, key=0, style=solid];
m4_26 -> m4_29  [color=green, key=2, style=dotted];
m4_27 -> m4_23  [color=blue, key=0, style=bold];
m4_17 -> m4_18  [color=green, key=0, style=solid];
m4_18 -> m4_19  [color=green, key=0, style=solid];
m4_18 -> m4_21  [color=green, key=2, style=dotted];
m4_19 -> m4_20  [color=green, key=0, style=solid];
m4_19 -> m4_22  [color=green, key=2, style=dotted];
m4_20 -> m4_17  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [color=green, key=0, style=solid];
m4_1 -> m4_2  [color=green, key=0, style=solid];
m4_1 -> m4_10  [color=green, key=2, style=dotted];
m4_1 -> m4_3  [color=green, key=1, label=red, style=dashed];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_11  [color=green, key=2, style=dotted];
m4_2 -> m4_12  [color=green, key=2, style=dotted];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_11  [color=green, key=2, style=dotted];
m4_3 -> m4_13  [color=green, key=2, style=dotted];
m4_3 -> m4_12  [color=green, key=2, style=dotted];
m4_3 -> m4_8  [color=green, key=1, label=json, style=dashed];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_11  [color=green, key=2, style=dotted];
m4_4 -> m4_13  [color=green, key=2, style=dotted];
m4_4 -> m4_14  [color=green, key=2, style=dotted];
m4_4 -> m4_6  [color=green, key=1, label=r2, style=dashed];
m4_4 -> m4_7  [color=green, key=1, label=r2, style=dashed];
m4_8 -> m4_9  [color=green, key=0, style=solid];
m4_8 -> m4_16  [color=green, key=2, style=dotted];
m4_5 -> m4_6  [color=green, key=0, style=solid];
m4_5 -> m4_15  [color=green, key=2, style=dotted];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_6 -> m4_15  [color=green, key=2, style=dotted];
m4_7 -> m4_8  [color=green, key=0, style=solid];
m4_7 -> m4_15  [color=green, key=2, style=dotted];
m4_9 -> m4_0  [color=blue, key=0, style=bold];
m4_30 -> m4_31  [color=green, key=0, style=solid];
m4_31 -> m4_32  [color=green, key=0, style=solid];
m4_32 -> m4_32  [color=green, key=1, label=hexString, style=dashed];
m4_32 -> m4_33  [color=green, key=0, style=solid];
m4_32 -> m4_35  [color=green, key=2, style=dotted];
m4_33 -> m4_34  [color=green, key=0, style=solid];
m4_33 -> m4_10  [color=green, key=2, style=dotted];
m4_33 -> m4_36  [color=green, key=2, style=dotted];
m4_33 -> m4_37  [color=green, key=2, style=dotted];
m4_34 -> m4_30  [color=blue, key=0, style=bold];
m4_38 -> m4_39  [color=green, key=0, style=solid];
m4_39 -> m4_40  [color=green, key=0, style=solid];
m4_40 -> m4_38  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_11  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_12  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_11  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_12  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_11  [key=2, style=dotted];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_12  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_11  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_12  [key=2, style=dotted];
m5_10 -> m5_0  [color=blue, key=0, style=bold];
m6_283 -> m6_284  [key=0, style=solid];
m6_283 -> m6_13  [color=darkorchid, key=3, label="Local variable System.DateTime temp", style=bold];
m6_284 -> m6_285  [key=0, style=solid];
m6_284 -> m6_299  [key=2, style=dotted];
m6_284 -> m6_6  [key=2, style=dotted];
m6_285 -> m6_286  [key=0, style=solid];
m6_285 -> m6_299  [key=2, style=dotted];
m6_285 -> m6_6  [key=2, style=dotted];
m6_286 -> m6_287  [key=0, style=solid];
m6_286 -> m6_299  [key=2, style=dotted];
m6_286 -> m6_6  [key=2, style=dotted];
m6_287 -> m6_288  [key=0, style=solid];
m6_287 -> m6_299  [key=2, style=dotted];
m6_287 -> m6_6  [key=2, style=dotted];
m6_288 -> m6_289  [key=0, style=solid];
m6_288 -> m6_299  [key=2, style=dotted];
m6_288 -> m6_6  [key=2, style=dotted];
m6_289 -> m6_290  [key=0, style=solid];
m6_289 -> m6_299  [key=2, style=dotted];
m6_289 -> m6_6  [key=2, style=dotted];
m6_290 -> m6_291  [key=0, style=solid];
m6_290 -> m6_299  [key=2, style=dotted];
m6_290 -> m6_6  [key=2, style=dotted];
m6_291 -> m6_292  [key=0, style=solid];
m6_291 -> m6_299  [key=2, style=dotted];
m6_291 -> m6_6  [key=2, style=dotted];
m6_292 -> m6_293  [key=0, style=solid];
m6_292 -> m6_299  [key=2, style=dotted];
m6_292 -> m6_6  [key=2, style=dotted];
m6_293 -> m6_294  [key=0, style=solid];
m6_293 -> m6_299  [key=2, style=dotted];
m6_293 -> m6_6  [key=2, style=dotted];
m6_294 -> m6_295  [key=0, style=solid];
m6_294 -> m6_299  [key=2, style=dotted];
m6_294 -> m6_6  [key=2, style=dotted];
m6_295 -> m6_296  [key=0, style=solid];
m6_295 -> m6_299  [key=2, style=dotted];
m6_295 -> m6_6  [key=2, style=dotted];
m6_296 -> m6_297  [key=0, style=solid];
m6_296 -> m6_299  [key=2, style=dotted];
m6_296 -> m6_6  [key=2, style=dotted];
m6_297 -> m6_298  [key=0, style=solid];
m6_297 -> m6_299  [key=2, style=dotted];
m6_297 -> m6_6  [key=2, style=dotted];
m6_298 -> m6_283  [color=blue, key=0, style=bold];
m6_32 -> m6_33  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_18  [key=2, style=dotted];
m6_34 -> m6_10  [key=2, style=dotted];
m6_34 -> m6_37  [key=2, style=dotted];
m6_34 -> m6_38  [key=2, style=dotted];
m6_34 -> m6_28  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_6  [key=2, style=dotted];
m6_36 -> m6_32  [color=blue, key=0, style=bold];
m6_253 -> m6_254  [key=0, style=solid];
m6_254 -> m6_255  [key=0, style=solid];
m6_254 -> m6_121  [key=2, style=dotted];
m6_255 -> m6_256  [key=0, style=solid];
m6_255 -> m6_6  [key=2, style=dotted];
m6_256 -> m6_257  [key=0, style=solid];
m6_256 -> m6_121  [key=2, style=dotted];
m6_257 -> m6_258  [key=0, style=solid];
m6_257 -> m6_265  [key=2, style=dotted];
m6_257 -> m6_18  [key=2, style=dotted];
m6_257 -> m6_6  [key=2, style=dotted];
m6_257 -> m6_139  [color=darkorchid, key=3, label="Parameter variable System.DateTime dt", style=bold];
m6_257 -> m6_158  [color=darkorchid, key=3, label="Parameter variable System.DateTime dt", style=bold];
m6_257 -> m6_13  [color=darkorchid, key=3, label="Parameter variable System.DateTime dt", style=bold];
m6_257 -> m6_45  [color=darkorchid, key=3, label="method methodReturn bool TryParseDateTimeMicrosoft", style=bold];
m6_258 -> m6_259  [key=0, style=solid];
m6_258 -> m6_121  [key=2, style=dotted];
m6_259 -> m6_260  [key=0, style=solid];
m6_259 -> m6_6  [key=2, style=dotted];
m6_260 -> m6_261  [key=0, style=solid];
m6_260 -> m6_121  [key=2, style=dotted];
m6_261 -> m6_262  [key=0, style=solid];
m6_261 -> m6_6  [key=2, style=dotted];
m6_262 -> m6_263  [key=0, style=solid];
m6_262 -> m6_121  [key=2, style=dotted];
m6_263 -> m6_264  [key=0, style=solid];
m6_263 -> m6_6  [key=2, style=dotted];
m6_264 -> m6_253  [color=blue, key=0, style=bold];
m6_243 -> m6_244  [key=0, style=solid];
m6_244 -> m6_245  [key=0, style=solid];
m6_244 -> m6_178  [key=2, style=dotted];
m6_244 -> m6_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_244 -> m6_244  [color=green, key=3, label="Local variable string orig", style=bold];
m6_245 -> m6_243  [color=blue, key=0, style=bold];
m6_567 -> m6_568  [key=0, style=solid];
m6_568 -> m6_569  [key=0, style=solid];
m6_568 -> m6_18  [key=2, style=dotted];
m6_568 -> m6_10  [key=2, style=dotted];
m6_568 -> m6_28  [key=2, style=dotted];
m6_569 -> m6_570  [key=0, style=solid];
m6_569 -> m6_6  [key=2, style=dotted];
m6_570 -> m6_567  [color=blue, key=0, style=bold];
m6_95 -> m6_96  [key=0, style=solid];
m6_95 -> m6_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m6_96 -> m6_97  [key=0, style=solid];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_99  [key=2, style=dotted];
m6_98 -> m6_95  [color=blue, key=0, style=bold];
m6_22 -> m6_22  [color=darkorchid, key=3, label="Field variable int DaysPer400Years", style=bold];
m6_175 -> m6_176  [key=0, style=solid];
m6_176 -> m6_177  [key=0, style=solid];
m6_176 -> m6_178  [key=2, style=dotted];
m6_176 -> m6_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_177 -> m6_175  [color=blue, key=0, style=bold];
m6_577 -> m6_578  [color=green, key=0, style=solid];
m6_578 -> m6_579  [color=green, key=0, style=solid];
m6_578 -> m6_593  [color=green, key=2, style=dotted];
m6_578 -> m6_582  [color=green, key=1, label=sb, style=dashed];
m6_578 -> m6_584  [color=green, key=1, label=sb, style=dashed];
m6_578 -> m6_587  [color=green, key=1, label=sb, style=dashed];
m6_578 -> m6_589  [color=green, key=1, label=sb, style=dashed];
m6_579 -> m6_580  [color=green, key=0, style=solid];
m6_579 -> m6_581  [color=green, key=1, label=depth, style=dashed];
m6_579 -> m6_586  [color=green, key=1, label=depth, style=dashed];
m6_579 -> m6_579  [color=green, key=3, label="Local variable int depth", style=bold];
m6_582 -> m6_583  [color=green, key=0, style=solid];
m6_582 -> m6_594  [color=green, key=2, style=dotted];
m6_584 -> m6_585  [color=green, key=0, style=solid];
m6_584 -> m6_594  [color=green, key=2, style=dotted];
m6_587 -> m6_588  [color=green, key=0, style=solid];
m6_587 -> m6_594  [color=green, key=2, style=dotted];
m6_589 -> m6_590  [color=green, key=0, style=solid];
m6_589 -> m6_595  [color=green, key=2, style=dotted];
m6_589 -> m6_591  [color=green, key=1, label=json, style=dashed];
m6_580 -> m6_581  [color=green, key=0, style=solid];
m6_580 -> m6_583  [color=green, key=1, label=i, style=dashed];
m6_580 -> m6_310  [color=green, key=3, label="Local variable int i", style=bold];
m6_581 -> m6_582  [color=green, key=0, style=solid];
m6_581 -> m6_584  [color=green, key=0, style=solid];
m6_586 -> m6_587  [color=green, key=0, style=solid];
m6_586 -> m6_589  [color=green, key=0, style=solid];
m6_586 -> m6_310  [color=green, key=3, label="Local variable int i", style=bold];
m6_583 -> m6_581  [color=green, key=0, style=solid];
m6_583 -> m6_583  [color=green, key=1, label=i, style=dashed];
m6_585 -> m6_586  [color=green, key=0, style=solid];
m6_585 -> m6_588  [color=green, key=1, label=i, style=dashed];
m6_588 -> m6_586  [color=green, key=0, style=solid];
m6_588 -> m6_588  [color=green, key=1, label=i, style=dashed];
m6_590 -> m6_591  [color=green, key=0, style=solid];
m6_590 -> m6_67  [color=green, key=2, style=dotted];
m6_591 -> m6_592  [key=0, style=solid];
m6_591 -> m6_518  [key=2, style=dotted];
m6_591 -> m6_519  [key=2, style=dotted];
m6_591 -> m6_596  [key=2, style=dotted];
m6_592 -> m6_577  [color=blue, key=0, style=bold];
m6_184 -> m6_185  [key=0, style=solid];
m6_185 -> m6_186  [key=0, style=solid];
m6_185 -> m6_189  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_186 -> m6_190  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_187 -> m6_6  [key=2, style=dotted];
m6_188 -> m6_184  [color=blue, key=0, style=bold];
m6_126 -> m6_127  [key=0, style=solid];
m6_127 -> m6_128  [key=0, style=solid];
m6_127 -> m6_121  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_112  [key=2, style=dotted];
m6_129 -> m6_126  [color=blue, key=0, style=bold];
m6_100 -> m6_101  [key=0, style=solid];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_103  [key=2, style=dotted];
m6_102 -> m6_100  [color=blue, key=0, style=bold];
m6_72 -> m6_73  [key=0, style=solid];
m6_73 -> m6_74  [key=0, style=solid];
m6_74 -> m6_75  [key=0, style=solid];
m6_74 -> m6_62  [key=2, style=dotted];
m6_74 -> m6_77  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_74 -> m6_81  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_74 -> m6_85  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_75 -> m6_76  [key=0, style=solid];
m6_75 -> m6_63  [key=2, style=dotted];
m6_75 -> m6_77  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_75 -> m6_78  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_65  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_65  [key=2, style=dotted];
m6_85 -> m6_86  [key=0, style=solid];
m6_85 -> m6_65  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_10  [key=2, style=dotted];
m6_76 -> m6_88  [key=2, style=dotted];
m6_76 -> m6_89  [key=2, style=dotted];
m6_76 -> m6_80  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_76 -> m6_81  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_66  [key=2, style=dotted];
m6_78 -> m6_6  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_80 -> m6_90  [key=2, style=dotted];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_63  [key=2, style=dotted];
m6_79 -> m6_81  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_79 -> m6_82  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_82 -> m6_83  [key=0, style=solid];
m6_82 -> m6_66  [key=2, style=dotted];
m6_82 -> m6_6  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_63  [key=2, style=dotted];
m6_83 -> m6_85  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_83 -> m6_86  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_84 -> m6_85  [key=0, style=solid];
m6_84 -> m6_10  [key=2, style=dotted];
m6_84 -> m6_91  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_66  [key=2, style=dotted];
m6_86 -> m6_6  [key=2, style=dotted];
m6_87 -> m6_72  [color=blue, key=0, style=bold];
m6_462 -> m6_490  [key=0, style=solid];
m6_462 -> m6_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m6_462 -> m6_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m6_462 -> m6_493  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_462 -> m6_495  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_462 -> m6_425  [color=green, key=3, label="Parameter variable T value", style=bold];
m6_490 -> m6_491  [key=0, style=solid];
m6_490 -> m6_500  [key=2, style=dotted];
m6_490 -> m6_492  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_491 -> m6_492  [key=0, style=solid];
m6_491 -> m6_501  [key=2, style=dotted];
m6_491 -> m6_459  [key=2, style=dotted];
m6_492 -> m6_493  [key=0, style=solid];
m6_492 -> m6_502  [key=2, style=dotted];
m6_492 -> m6_496  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m6_493 -> m6_494  [key=0, style=solid];
m6_493 -> m6_499  [key=0, style=solid];
m6_493 -> m6_6  [key=2, style=dotted];
m6_495 -> m6_496  [key=0, style=solid];
m6_495 -> m6_488  [key=2, style=dotted];
m6_495 -> m6_497  [color=darkseagreen4, key=1, label=valueTicks, style=dashed];
m6_496 -> m6_497  [key=0, style=solid];
m6_496 -> m6_488  [key=2, style=dotted];
m6_496 -> m6_498  [color=darkseagreen4, key=1, label=parsedTicks, style=dashed];
m6_494 -> m6_495  [key=0, style=solid];
m6_497 -> m6_498  [key=0, style=solid];
m6_497 -> m6_497  [color=darkseagreen4, key=1, label=valueTicks, style=dashed];
m6_498 -> m6_499  [key=0, style=solid];
m6_498 -> m6_6  [key=2, style=dotted];
m6_499 -> m6_462  [color=blue, key=0, style=bold];
m6_461 -> m6_472  [key=0, style=solid];
m6_461 -> m6_473  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_461 -> m6_474  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_461 -> m6_475  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_461 -> m6_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateFormatHandling", style=dashed];
m6_461 -> m6_477  [color=darkseagreen4, key=1, label="Newtonsoft.Json.DateTimeZoneHandling", style=dashed];
m6_461 -> m6_479  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_461 -> m6_481  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_461 -> m6_192  [color=green, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m6_461 -> m6_223  [color=green, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m6_461 -> m6_425  [color=green, key=3, label="Parameter variable T value", style=bold];
m6_461 -> m6_310  [color=green, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m6_461 -> m6_440  [color=green, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZoneHandling", style=bold];
m6_472 -> m6_473  [key=0, style=solid];
m6_472 -> m6_307  [color=green, key=3, label="Local variable string date", style=bold];
m6_473 -> m6_474  [key=0, style=solid];
m6_473 -> m6_475  [key=0, style=solid];
m6_474 -> m6_476  [key=0, style=solid];
m6_474 -> m6_240  [key=2, style=dotted];
m6_474 -> m6_478  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_474 -> m6_485  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_475 -> m6_476  [key=0, style=solid];
m6_475 -> m6_242  [key=2, style=dotted];
m6_475 -> m6_478  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_475 -> m6_485  [color=darkseagreen4, key=1, label=date, style=dashed];
m6_476 -> m6_477  [key=0, style=solid];
m6_476 -> m6_487  [key=2, style=dotted];
m6_476 -> m6_459  [key=2, style=dotted];
m6_477 -> m6_478  [key=0, style=solid];
m6_477 -> m6_485  [key=0, style=solid];
m6_479 -> m6_480  [key=0, style=solid];
m6_479 -> m6_485  [key=0, style=solid];
m6_479 -> m6_6  [key=2, style=dotted];
m6_481 -> m6_482  [key=0, style=solid];
m6_481 -> m6_488  [key=2, style=dotted];
m6_481 -> m6_483  [color=darkseagreen4, key=1, label=valueTicks, style=dashed];
m6_478 -> m6_479  [key=0, style=solid];
m6_478 -> m6_121  [key=2, style=dotted];
m6_478 -> m6_482  [color=darkseagreen4, key=1, label=parsed, style=dashed];
m6_485 -> m6_486  [key=0, style=solid];
m6_485 -> m6_489  [key=2, style=dotted];
m6_482 -> m6_483  [key=0, style=solid];
m6_482 -> m6_488  [key=2, style=dotted];
m6_482 -> m6_484  [color=darkseagreen4, key=1, label=parsedTicks, style=dashed];
m6_480 -> m6_481  [key=0, style=solid];
m6_483 -> m6_484  [key=0, style=solid];
m6_483 -> m6_483  [color=darkseagreen4, key=1, label=valueTicks, style=dashed];
m6_484 -> m6_485  [key=0, style=solid];
m6_484 -> m6_6  [key=2, style=dotted];
m6_486 -> m6_461  [color=blue, key=0, style=bold];
m6_571 -> m6_572  [key=0, style=solid];
m6_572 -> m6_573  [key=0, style=solid];
m6_572 -> m6_572  [color=green, key=3, label="Local variable string json", style=bold];
m6_573 -> m6_574  [key=0, style=solid];
m6_573 -> m6_121  [key=2, style=dotted];
m6_573 -> m6_575  [color=darkseagreen4, key=1, label=m, style=dashed];
m6_574 -> m6_575  [key=0, style=solid];
m6_575 -> m6_576  [key=0, style=solid];
m6_575 -> m6_6  [key=2, style=dotted];
m6_576 -> m6_571  [color=blue, key=0, style=bold];
m6_500 -> m6_505  [key=0, style=solid];
m6_500 -> m6_507  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_500 -> m6_462  [color=green, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m6_505 -> m6_506  [key=0, style=solid];
m6_505 -> m6_63  [key=2, style=dotted];
m6_505 -> m6_509  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_507 -> m6_508  [key=0, style=solid];
m6_507 -> m6_512  [key=2, style=dotted];
m6_506 -> m6_507  [key=0, style=solid];
m6_506 -> m6_511  [key=2, style=dotted];
m6_506 -> m6_508  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_509 -> m6_510  [key=0, style=solid];
m6_509 -> m6_66  [key=2, style=dotted];
m6_508 -> m6_509  [key=0, style=solid];
m6_508 -> m6_513  [key=2, style=dotted];
m6_510 -> m6_500  [color=blue, key=0, style=bold];
m6_306 -> m6_307  [key=0, style=solid];
m6_307 -> m6_308  [key=0, style=solid];
m6_307 -> m6_307  [color=green, key=3, label="Local variable Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult result", style=bold];
m6_307 -> m6_425  [color=green, key=3, label="Local variable Newtonsoft.Json.Tests.JsonConvertTest.DateTimeResult result", style=bold];
m6_308 -> m6_309  [key=0, style=solid];
m6_308 -> m6_425  [key=2, style=dotted];
m6_308 -> m6_310  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_308 -> m6_311  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_308 -> m6_312  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_308 -> m6_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_308 -> m6_314  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_308 -> m6_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_308 -> m6_316  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_309 -> m6_310  [key=0, style=solid];
m6_309 -> m6_6  [key=2, style=dotted];
m6_310 -> m6_311  [key=0, style=solid];
m6_310 -> m6_426  [key=2, style=dotted];
m6_310 -> m6_6  [key=2, style=dotted];
m6_311 -> m6_312  [key=0, style=solid];
m6_311 -> m6_6  [key=2, style=dotted];
m6_312 -> m6_313  [key=0, style=solid];
m6_312 -> m6_6  [key=2, style=dotted];
m6_313 -> m6_314  [key=0, style=solid];
m6_313 -> m6_6  [key=2, style=dotted];
m6_314 -> m6_315  [key=0, style=solid];
m6_314 -> m6_426  [key=2, style=dotted];
m6_314 -> m6_6  [key=2, style=dotted];
m6_315 -> m6_316  [key=0, style=solid];
m6_315 -> m6_6  [key=2, style=dotted];
m6_316 -> m6_317  [key=0, style=solid];
m6_316 -> m6_6  [key=2, style=dotted];
m6_317 -> m6_318  [key=0, style=solid];
m6_317 -> m6_18  [key=2, style=dotted];
m6_317 -> m6_319  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m6_317 -> m6_320  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m6_317 -> m6_321  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m6_317 -> m6_324  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m6_317 -> m6_325  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m6_317 -> m6_326  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m6_317 -> m6_327  [color=darkseagreen4, key=1, label=year2000local, style=dashed];
m6_318 -> m6_319  [key=0, style=solid];
m6_318 -> m6_427  [key=2, style=dotted];
m6_318 -> m6_428  [key=2, style=dotted];
m6_318 -> m6_323  [color=darkseagreen4, key=1, label=localToUtcDate, style=dashed];
m6_319 -> m6_320  [key=0, style=solid];
m6_319 -> m6_425  [key=2, style=dotted];
m6_319 -> m6_321  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_319 -> m6_322  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_319 -> m6_323  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_319 -> m6_324  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_319 -> m6_325  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_319 -> m6_326  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_319 -> m6_327  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_320 -> m6_321  [key=0, style=solid];
m6_320 -> m6_426  [key=2, style=dotted];
m6_320 -> m6_6  [key=2, style=dotted];
m6_321 -> m6_322  [key=0, style=solid];
m6_321 -> m6_426  [key=2, style=dotted];
m6_321 -> m6_6  [key=2, style=dotted];
m6_324 -> m6_325  [key=0, style=solid];
m6_324 -> m6_429  [key=2, style=dotted];
m6_324 -> m6_426  [key=2, style=dotted];
m6_324 -> m6_6  [key=2, style=dotted];
m6_325 -> m6_326  [key=0, style=solid];
m6_325 -> m6_429  [key=2, style=dotted];
m6_325 -> m6_426  [key=2, style=dotted];
m6_325 -> m6_6  [key=2, style=dotted];
m6_326 -> m6_327  [key=0, style=solid];
m6_326 -> m6_429  [key=2, style=dotted];
m6_326 -> m6_426  [key=2, style=dotted];
m6_326 -> m6_6  [key=2, style=dotted];
m6_327 -> m6_328  [key=0, style=solid];
m6_327 -> m6_429  [key=2, style=dotted];
m6_327 -> m6_6  [key=2, style=dotted];
m6_323 -> m6_324  [key=0, style=solid];
m6_323 -> m6_6  [key=2, style=dotted];
m6_322 -> m6_323  [key=0, style=solid];
m6_322 -> m6_6  [key=2, style=dotted];
m6_328 -> m6_329  [key=0, style=solid];
m6_328 -> m6_430  [key=2, style=dotted];
m6_328 -> m6_330  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m6_328 -> m6_331  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m6_328 -> m6_332  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m6_328 -> m6_335  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m6_328 -> m6_336  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m6_328 -> m6_337  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m6_328 -> m6_338  [color=darkseagreen4, key=1, label=millisecondsLocal, style=dashed];
m6_328 -> m6_328  [color=darkorchid, key=3, label="Local variable int minutes", style=bold];
m6_329 -> m6_330  [key=0, style=solid];
m6_329 -> m6_427  [key=2, style=dotted];
m6_329 -> m6_428  [key=2, style=dotted];
m6_329 -> m6_334  [color=darkseagreen4, key=1, label=localToUtcDate, style=dashed];
m6_330 -> m6_331  [key=0, style=solid];
m6_330 -> m6_425  [key=2, style=dotted];
m6_330 -> m6_332  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_330 -> m6_333  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_330 -> m6_334  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_330 -> m6_335  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_330 -> m6_336  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_330 -> m6_337  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_330 -> m6_338  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_331 -> m6_332  [key=0, style=solid];
m6_331 -> m6_426  [key=2, style=dotted];
m6_331 -> m6_6  [key=2, style=dotted];
m6_332 -> m6_333  [key=0, style=solid];
m6_332 -> m6_426  [key=2, style=dotted];
m6_332 -> m6_6  [key=2, style=dotted];
m6_335 -> m6_336  [key=0, style=solid];
m6_335 -> m6_429  [key=2, style=dotted];
m6_335 -> m6_426  [key=2, style=dotted];
m6_335 -> m6_6  [key=2, style=dotted];
m6_336 -> m6_337  [key=0, style=solid];
m6_336 -> m6_429  [key=2, style=dotted];
m6_336 -> m6_426  [key=2, style=dotted];
m6_336 -> m6_6  [key=2, style=dotted];
m6_337 -> m6_338  [key=0, style=solid];
m6_337 -> m6_429  [key=2, style=dotted];
m6_337 -> m6_426  [key=2, style=dotted];
m6_337 -> m6_6  [key=2, style=dotted];
m6_338 -> m6_339  [key=0, style=solid];
m6_338 -> m6_429  [key=2, style=dotted];
m6_338 -> m6_6  [key=2, style=dotted];
m6_334 -> m6_335  [key=0, style=solid];
m6_334 -> m6_6  [key=2, style=dotted];
m6_333 -> m6_334  [key=0, style=solid];
m6_333 -> m6_6  [key=2, style=dotted];
m6_339 -> m6_340  [key=0, style=solid];
m6_339 -> m6_239  [key=2, style=dotted];
m6_339 -> m6_341  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m6_339 -> m6_342  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m6_339 -> m6_343  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m6_339 -> m6_346  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m6_339 -> m6_347  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m6_339 -> m6_348  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m6_339 -> m6_349  [color=darkseagreen4, key=1, label=ticksLocal, style=dashed];
m6_340 -> m6_341  [key=0, style=solid];
m6_340 -> m6_427  [key=2, style=dotted];
m6_340 -> m6_428  [key=2, style=dotted];
m6_340 -> m6_345  [color=darkseagreen4, key=1, label=localToUtcDate, style=dashed];
m6_341 -> m6_342  [key=0, style=solid];
m6_341 -> m6_425  [key=2, style=dotted];
m6_341 -> m6_343  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_341 -> m6_344  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_341 -> m6_345  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_341 -> m6_346  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_341 -> m6_347  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_341 -> m6_348  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_341 -> m6_349  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_342 -> m6_343  [key=0, style=solid];
m6_342 -> m6_426  [key=2, style=dotted];
m6_342 -> m6_6  [key=2, style=dotted];
m6_343 -> m6_344  [key=0, style=solid];
m6_343 -> m6_426  [key=2, style=dotted];
m6_343 -> m6_6  [key=2, style=dotted];
m6_346 -> m6_347  [key=0, style=solid];
m6_346 -> m6_429  [key=2, style=dotted];
m6_346 -> m6_426  [key=2, style=dotted];
m6_346 -> m6_6  [key=2, style=dotted];
m6_347 -> m6_348  [key=0, style=solid];
m6_347 -> m6_429  [key=2, style=dotted];
m6_347 -> m6_426  [key=2, style=dotted];
m6_347 -> m6_6  [key=2, style=dotted];
m6_348 -> m6_349  [key=0, style=solid];
m6_348 -> m6_429  [key=2, style=dotted];
m6_348 -> m6_426  [key=2, style=dotted];
m6_348 -> m6_6  [key=2, style=dotted];
m6_349 -> m6_350  [key=0, style=solid];
m6_349 -> m6_429  [key=2, style=dotted];
m6_349 -> m6_6  [key=2, style=dotted];
m6_345 -> m6_346  [key=0, style=solid];
m6_345 -> m6_6  [key=2, style=dotted];
m6_344 -> m6_345  [key=0, style=solid];
m6_344 -> m6_6  [key=2, style=dotted];
m6_350 -> m6_351  [key=0, style=solid];
m6_350 -> m6_18  [key=2, style=dotted];
m6_350 -> m6_353  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m6_350 -> m6_356  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m6_350 -> m6_357  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m6_350 -> m6_358  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m6_350 -> m6_359  [color=darkseagreen4, key=1, label=year2000Unspecified, style=dashed];
m6_351 -> m6_352  [key=0, style=solid];
m6_351 -> m6_425  [key=2, style=dotted];
m6_351 -> m6_353  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_351 -> m6_354  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_351 -> m6_355  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_351 -> m6_356  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_351 -> m6_357  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_351 -> m6_358  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_351 -> m6_359  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_353 -> m6_354  [key=0, style=solid];
m6_353 -> m6_426  [key=2, style=dotted];
m6_353 -> m6_6  [key=2, style=dotted];
m6_356 -> m6_357  [key=0, style=solid];
m6_356 -> m6_429  [key=2, style=dotted];
m6_356 -> m6_426  [key=2, style=dotted];
m6_356 -> m6_6  [key=2, style=dotted];
m6_357 -> m6_358  [key=0, style=solid];
m6_357 -> m6_429  [key=2, style=dotted];
m6_357 -> m6_426  [key=2, style=dotted];
m6_357 -> m6_6  [key=2, style=dotted];
m6_358 -> m6_359  [key=0, style=solid];
m6_358 -> m6_429  [key=2, style=dotted];
m6_358 -> m6_426  [key=2, style=dotted];
m6_358 -> m6_6  [key=2, style=dotted];
m6_358 -> m6_328  [color=darkorchid, key=3, label="Parameter variable int start", style=bold];
m6_358 -> m6_346  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateFormatHandling format", style=bold];
m6_358 -> m6_350  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan? offset", style=bold];
m6_359 -> m6_360  [key=0, style=solid];
m6_359 -> m6_431  [key=2, style=dotted];
m6_359 -> m6_429  [key=2, style=dotted];
m6_359 -> m6_6  [key=2, style=dotted];
m6_352 -> m6_353  [key=0, style=solid];
m6_352 -> m6_6  [key=2, style=dotted];
m6_354 -> m6_355  [key=0, style=solid];
m6_354 -> m6_6  [key=2, style=dotted];
m6_355 -> m6_356  [key=0, style=solid];
m6_355 -> m6_6  [key=2, style=dotted];
m6_360 -> m6_361  [key=0, style=solid];
m6_360 -> m6_18  [key=2, style=dotted];
m6_360 -> m6_362  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m6_360 -> m6_364  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m6_360 -> m6_368  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m6_360 -> m6_369  [color=darkseagreen4, key=1, label=year2000Utc, style=dashed];
m6_361 -> m6_362  [key=0, style=solid];
m6_361 -> m6_431  [key=2, style=dotted];
m6_361 -> m6_428  [key=2, style=dotted];
m6_361 -> m6_364  [color=darkseagreen4, key=1, label=utcTolocalDate, style=dashed];
m6_362 -> m6_363  [key=0, style=solid];
m6_362 -> m6_425  [key=2, style=dotted];
m6_362 -> m6_364  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_362 -> m6_365  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_362 -> m6_366  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_362 -> m6_367  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_362 -> m6_368  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_362 -> m6_369  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_362 -> m6_370  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_364 -> m6_365  [key=0, style=solid];
m6_364 -> m6_426  [key=2, style=dotted];
m6_364 -> m6_6  [key=2, style=dotted];
m6_368 -> m6_369  [key=0, style=solid];
m6_368 -> m6_426  [key=2, style=dotted];
m6_368 -> m6_6  [key=2, style=dotted];
m6_369 -> m6_370  [key=0, style=solid];
m6_369 -> m6_432  [key=2, style=dotted];
m6_369 -> m6_429  [key=2, style=dotted];
m6_369 -> m6_426  [key=2, style=dotted];
m6_369 -> m6_6  [key=2, style=dotted];
m6_363 -> m6_364  [key=0, style=solid];
m6_363 -> m6_6  [key=2, style=dotted];
m6_365 -> m6_366  [key=0, style=solid];
m6_365 -> m6_6  [key=2, style=dotted];
m6_366 -> m6_367  [key=0, style=solid];
m6_366 -> m6_6  [key=2, style=dotted];
m6_367 -> m6_368  [key=0, style=solid];
m6_367 -> m6_6  [key=2, style=dotted];
m6_370 -> m6_371  [key=0, style=solid];
m6_370 -> m6_6  [key=2, style=dotted];
m6_371 -> m6_372  [key=0, style=solid];
m6_371 -> m6_239  [key=2, style=dotted];
m6_371 -> m6_373  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m6_371 -> m6_375  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m6_371 -> m6_379  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m6_371 -> m6_380  [color=darkseagreen4, key=1, label=unixEpoc, style=dashed];
m6_372 -> m6_373  [key=0, style=solid];
m6_372 -> m6_431  [key=2, style=dotted];
m6_372 -> m6_428  [key=2, style=dotted];
m6_372 -> m6_375  [color=darkseagreen4, key=1, label=utcTolocalDate, style=dashed];
m6_373 -> m6_374  [key=0, style=solid];
m6_373 -> m6_425  [key=2, style=dotted];
m6_373 -> m6_375  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_373 -> m6_376  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_373 -> m6_377  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_373 -> m6_378  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_373 -> m6_379  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_373 -> m6_380  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_373 -> m6_381  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_375 -> m6_376  [key=0, style=solid];
m6_375 -> m6_426  [key=2, style=dotted];
m6_375 -> m6_6  [key=2, style=dotted];
m6_379 -> m6_380  [key=0, style=solid];
m6_379 -> m6_426  [key=2, style=dotted];
m6_379 -> m6_6  [key=2, style=dotted];
m6_380 -> m6_381  [key=0, style=solid];
m6_380 -> m6_432  [key=2, style=dotted];
m6_380 -> m6_429  [key=2, style=dotted];
m6_380 -> m6_426  [key=2, style=dotted];
m6_380 -> m6_6  [key=2, style=dotted];
m6_374 -> m6_375  [key=0, style=solid];
m6_374 -> m6_6  [key=2, style=dotted];
m6_376 -> m6_377  [key=0, style=solid];
m6_376 -> m6_6  [key=2, style=dotted];
m6_377 -> m6_378  [key=0, style=solid];
m6_377 -> m6_6  [key=2, style=dotted];
m6_378 -> m6_379  [key=0, style=solid];
m6_378 -> m6_6  [key=2, style=dotted];
m6_381 -> m6_382  [key=0, style=solid];
m6_381 -> m6_6  [key=2, style=dotted];
m6_382 -> m6_383  [key=0, style=solid];
m6_382 -> m6_425  [key=2, style=dotted];
m6_382 -> m6_384  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_382 -> m6_385  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_382 -> m6_386  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_382 -> m6_387  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_382 -> m6_388  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_382 -> m6_389  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_382 -> m6_390  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_383 -> m6_384  [key=0, style=solid];
m6_383 -> m6_6  [key=2, style=dotted];
m6_384 -> m6_385  [key=0, style=solid];
m6_384 -> m6_426  [key=2, style=dotted];
m6_384 -> m6_6  [key=2, style=dotted];
m6_385 -> m6_386  [key=0, style=solid];
m6_385 -> m6_6  [key=2, style=dotted];
m6_386 -> m6_387  [key=0, style=solid];
m6_386 -> m6_6  [key=2, style=dotted];
m6_387 -> m6_388  [key=0, style=solid];
m6_387 -> m6_6  [key=2, style=dotted];
m6_388 -> m6_389  [key=0, style=solid];
m6_388 -> m6_426  [key=2, style=dotted];
m6_388 -> m6_6  [key=2, style=dotted];
m6_389 -> m6_390  [key=0, style=solid];
m6_389 -> m6_6  [key=2, style=dotted];
m6_390 -> m6_391  [key=0, style=solid];
m6_390 -> m6_6  [key=2, style=dotted];
m6_391 -> m6_392  [key=0, style=solid];
m6_391 -> m6_425  [key=2, style=dotted];
m6_391 -> m6_393  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_391 -> m6_394  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_391 -> m6_395  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_391 -> m6_396  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_391 -> m6_397  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_391 -> m6_398  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_391 -> m6_399  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_392 -> m6_393  [key=0, style=solid];
m6_392 -> m6_6  [key=2, style=dotted];
m6_393 -> m6_394  [key=0, style=solid];
m6_393 -> m6_426  [key=2, style=dotted];
m6_393 -> m6_6  [key=2, style=dotted];
m6_394 -> m6_395  [key=0, style=solid];
m6_394 -> m6_6  [key=2, style=dotted];
m6_395 -> m6_396  [key=0, style=solid];
m6_395 -> m6_6  [key=2, style=dotted];
m6_396 -> m6_397  [key=0, style=solid];
m6_396 -> m6_6  [key=2, style=dotted];
m6_397 -> m6_398  [key=0, style=solid];
m6_397 -> m6_426  [key=2, style=dotted];
m6_397 -> m6_6  [key=2, style=dotted];
m6_398 -> m6_399  [key=0, style=solid];
m6_398 -> m6_6  [key=2, style=dotted];
m6_399 -> m6_400  [key=0, style=solid];
m6_399 -> m6_6  [key=2, style=dotted];
m6_400 -> m6_401  [key=0, style=solid];
m6_400 -> m6_433  [key=2, style=dotted];
m6_400 -> m6_425  [key=2, style=dotted];
m6_400 -> m6_402  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_401 -> m6_402  [key=0, style=solid];
m6_401 -> m6_6  [key=2, style=dotted];
m6_401 -> m6_358  [color=darkorchid, key=3, label="Parameter variable System.DateTime dt", style=bold];
m6_402 -> m6_403  [key=0, style=solid];
m6_402 -> m6_6  [key=2, style=dotted];
m6_403 -> m6_404  [key=0, style=solid];
m6_403 -> m6_433  [key=2, style=dotted];
m6_403 -> m6_434  [key=2, style=dotted];
m6_403 -> m6_425  [key=2, style=dotted];
m6_403 -> m6_405  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_404 -> m6_405  [key=0, style=solid];
m6_404 -> m6_6  [key=2, style=dotted];
m6_405 -> m6_406  [key=0, style=solid];
m6_405 -> m6_6  [key=2, style=dotted];
m6_406 -> m6_407  [key=0, style=solid];
m6_406 -> m6_433  [key=2, style=dotted];
m6_406 -> m6_434  [key=2, style=dotted];
m6_406 -> m6_425  [key=2, style=dotted];
m6_406 -> m6_408  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_407 -> m6_408  [key=0, style=solid];
m6_407 -> m6_6  [key=2, style=dotted];
m6_408 -> m6_409  [key=0, style=solid];
m6_408 -> m6_6  [key=2, style=dotted];
m6_409 -> m6_410  [key=0, style=solid];
m6_409 -> m6_433  [key=2, style=dotted];
m6_409 -> m6_434  [key=2, style=dotted];
m6_409 -> m6_425  [key=2, style=dotted];
m6_409 -> m6_411  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_410 -> m6_411  [key=0, style=solid];
m6_410 -> m6_6  [key=2, style=dotted];
m6_411 -> m6_412  [key=0, style=solid];
m6_411 -> m6_6  [key=2, style=dotted];
m6_412 -> m6_413  [key=0, style=solid];
m6_412 -> m6_241  [key=2, style=dotted];
m6_412 -> m6_425  [key=2, style=dotted];
m6_412 -> m6_414  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_413 -> m6_414  [key=0, style=solid];
m6_413 -> m6_6  [key=2, style=dotted];
m6_414 -> m6_415  [key=0, style=solid];
m6_414 -> m6_6  [key=2, style=dotted];
m6_415 -> m6_416  [key=0, style=solid];
m6_415 -> m6_425  [key=2, style=dotted];
m6_415 -> m6_417  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_416 -> m6_417  [key=0, style=solid];
m6_416 -> m6_6  [key=2, style=dotted];
m6_417 -> m6_418  [key=0, style=solid];
m6_417 -> m6_6  [key=2, style=dotted];
m6_418 -> m6_419  [key=0, style=solid];
m6_418 -> m6_425  [key=2, style=dotted];
m6_418 -> m6_420  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_419 -> m6_420  [key=0, style=solid];
m6_419 -> m6_6  [key=2, style=dotted];
m6_420 -> m6_421  [key=0, style=solid];
m6_420 -> m6_6  [key=2, style=dotted];
m6_421 -> m6_422  [key=0, style=solid];
m6_421 -> m6_425  [key=2, style=dotted];
m6_421 -> m6_423  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_422 -> m6_423  [key=0, style=solid];
m6_422 -> m6_6  [key=2, style=dotted];
m6_423 -> m6_424  [key=0, style=solid];
m6_423 -> m6_6  [key=2, style=dotted];
m6_424 -> m6_306  [color=blue, key=0, style=bold];
m6_196 -> m6_197  [key=0, style=solid];
m6_197 -> m6_198  [key=0, style=solid];
m6_198 -> m6_199  [key=0, style=solid];
m6_199 -> m6_200  [key=0, style=solid];
m6_199 -> m6_183  [key=2, style=dotted];
m6_199 -> m6_6  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_201 -> m6_202  [key=0, style=solid];
m6_201 -> m6_183  [key=2, style=dotted];
m6_201 -> m6_6  [key=2, style=dotted];
m6_202 -> m6_203  [key=0, style=solid];
m6_203 -> m6_204  [key=0, style=solid];
m6_203 -> m6_183  [key=2, style=dotted];
m6_203 -> m6_6  [key=2, style=dotted];
m6_204 -> m6_205  [key=0, style=solid];
m6_205 -> m6_206  [key=0, style=solid];
m6_205 -> m6_183  [key=2, style=dotted];
m6_205 -> m6_6  [key=2, style=dotted];
m6_206 -> m6_207  [key=0, style=solid];
m6_207 -> m6_208  [key=0, style=solid];
m6_207 -> m6_183  [key=2, style=dotted];
m6_207 -> m6_6  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_209 -> m6_210  [key=0, style=solid];
m6_209 -> m6_183  [key=2, style=dotted];
m6_209 -> m6_6  [key=2, style=dotted];
m6_210 -> m6_211  [key=0, style=solid];
m6_211 -> m6_212  [key=0, style=solid];
m6_211 -> m6_183  [key=2, style=dotted];
m6_211 -> m6_6  [key=2, style=dotted];
m6_212 -> m6_213  [key=0, style=solid];
m6_213 -> m6_214  [key=0, style=solid];
m6_213 -> m6_183  [key=2, style=dotted];
m6_213 -> m6_6  [key=2, style=dotted];
m6_214 -> m6_215  [key=0, style=solid];
m6_215 -> m6_216  [key=0, style=solid];
m6_215 -> m6_183  [key=2, style=dotted];
m6_215 -> m6_6  [key=2, style=dotted];
m6_216 -> m6_217  [key=0, style=solid];
m6_217 -> m6_218  [key=0, style=solid];
m6_217 -> m6_183  [key=2, style=dotted];
m6_217 -> m6_6  [key=2, style=dotted];
m6_218 -> m6_219  [key=0, style=solid];
m6_219 -> m6_220  [key=0, style=solid];
m6_219 -> m6_183  [key=2, style=dotted];
m6_219 -> m6_6  [key=2, style=dotted];
m6_220 -> m6_221  [key=0, style=solid];
m6_220 -> m6_239  [key=2, style=dotted];
m6_221 -> m6_222  [key=0, style=solid];
m6_221 -> m6_183  [key=2, style=dotted];
m6_221 -> m6_6  [key=2, style=dotted];
m6_222 -> m6_223  [key=0, style=solid];
m6_222 -> m6_239  [key=2, style=dotted];
m6_223 -> m6_224  [key=0, style=solid];
m6_223 -> m6_240  [key=2, style=dotted];
m6_223 -> m6_6  [key=2, style=dotted];
m6_224 -> m6_225  [key=0, style=solid];
m6_224 -> m6_241  [key=2, style=dotted];
m6_225 -> m6_226  [key=0, style=solid];
m6_225 -> m6_183  [key=2, style=dotted];
m6_225 -> m6_6  [key=2, style=dotted];
m6_226 -> m6_227  [key=0, style=solid];
m6_226 -> m6_241  [key=2, style=dotted];
m6_227 -> m6_228  [key=0, style=solid];
m6_227 -> m6_242  [key=2, style=dotted];
m6_227 -> m6_6  [key=2, style=dotted];
m6_228 -> m6_229  [key=0, style=solid];
m6_229 -> m6_230  [key=0, style=solid];
m6_229 -> m6_183  [key=2, style=dotted];
m6_229 -> m6_6  [key=2, style=dotted];
m6_230 -> m6_231  [key=0, style=solid];
m6_231 -> m6_232  [key=0, style=solid];
m6_231 -> m6_183  [key=2, style=dotted];
m6_231 -> m6_6  [key=2, style=dotted];
m6_232 -> m6_233  [key=0, style=solid];
m6_233 -> m6_234  [key=0, style=solid];
m6_233 -> m6_183  [key=2, style=dotted];
m6_233 -> m6_6  [key=2, style=dotted];
m6_234 -> m6_235  [key=0, style=solid];
m6_235 -> m6_236  [key=0, style=solid];
m6_235 -> m6_183  [key=2, style=dotted];
m6_235 -> m6_6  [key=2, style=dotted];
m6_236 -> m6_237  [key=0, style=solid];
m6_237 -> m6_238  [key=0, style=solid];
m6_237 -> m6_183  [key=2, style=dotted];
m6_237 -> m6_6  [key=2, style=dotted];
m6_238 -> m6_196  [color=blue, key=0, style=bold];
m6_191 -> m6_192  [key=0, style=solid];
m6_192 -> m6_193  [key=0, style=solid];
m6_192 -> m6_195  [key=2, style=dotted];
m6_193 -> m6_194  [key=0, style=solid];
m6_193 -> m6_6  [key=2, style=dotted];
m6_194 -> m6_191  [color=blue, key=0, style=bold];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_13  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m6_24 -> m6_24  [color=darkorchid, key=3, label="method methodReturn System.DateTime SwitchToUtcTime", style=bold];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_10  [key=2, style=dotted];
m6_25 -> m6_28  [key=2, style=dotted];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_6  [key=2, style=dotted];
m6_27 -> m6_23  [color=blue, key=0, style=bold];
m6_104 -> m6_105  [key=0, style=solid];
m6_105 -> m6_106  [key=0, style=solid];
m6_106 -> m6_104  [color=blue, key=0, style=bold];
m6_166 -> m6_167  [key=0, style=solid];
m6_167 -> m6_168  [key=0, style=solid];
m6_168 -> m6_169  [key=0, style=solid];
m6_168 -> m6_165  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_169 -> m6_6  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_170 -> m6_165  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_171 -> m6_6  [key=2, style=dotted];
m6_172 -> m6_173  [key=0, style=solid];
m6_172 -> m6_165  [key=2, style=dotted];
m6_173 -> m6_174  [key=0, style=solid];
m6_173 -> m6_6  [key=2, style=dotted];
m6_174 -> m6_166  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_17  [key=2, style=dotted];
m6_13 -> m6_18  [key=2, style=dotted];
m6_13 -> m6_15  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m6_13 -> m6_24  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m6_13 -> m6_158  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZone", style=bold];
m6_13 -> m6_257  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateTimeZoneHandling timeZone", style=bold];
m6_13 -> m6_283  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m6_13 -> m6_13  [color=darkorchid, key=3, label="method methodReturn System.DateTime EnsureDateTime", style=bold];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_5  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_6  [key=2, style=dotted];
m6_15 -> m6_13  [color=darkorchid, key=3, label="Parameter variable System.DateTime value", style=bold];
m6_15 -> m6_15  [color=darkorchid, key=3, label="method methodReturn System.DateTime SwitchToLocalTime", style=bold];
m6_16 -> m6_11  [color=blue, key=0, style=bold];
m6_42 -> m6_43  [key=0, style=solid];
m6_43 -> m6_44  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_62  [key=2, style=dotted];
m6_44 -> m6_47  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_44 -> m6_51  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_44 -> m6_55  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_44 -> m6_59  [color=darkseagreen4, key=1, label=l, style=dashed];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_63  [key=2, style=dotted];
m6_45 -> m6_47  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_45 -> m6_48  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_65  [key=2, style=dotted];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_65  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_65  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_65  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_46 -> m6_64  [key=2, style=dotted];
m6_46 -> m6_50  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_46 -> m6_51  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_66  [key=2, style=dotted];
m6_48 -> m6_6  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_63  [key=2, style=dotted];
m6_49 -> m6_51  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_49 -> m6_52  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_49 -> m6_43  [color=darkorchid, key=3, label="Parameter variable long universialTicks", style=bold];
m6_49 -> m6_48  [color=darkorchid, key=3, label="Parameter variable long universialTicks", style=bold];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_66  [key=2, style=dotted];
m6_52 -> m6_6  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_63  [key=2, style=dotted];
m6_53 -> m6_55  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_53 -> m6_56  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_67  [key=2, style=dotted];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_66  [key=2, style=dotted];
m6_56 -> m6_6  [key=2, style=dotted];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_63  [key=2, style=dotted];
m6_57 -> m6_59  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_57 -> m6_60  [color=darkseagreen4, key=1, label=sw, style=dashed];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_68  [key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_66  [key=2, style=dotted];
m6_60 -> m6_6  [key=2, style=dotted];
m6_61 -> m6_42  [color=blue, key=0, style=bold];
m6_130 -> m6_131  [key=0, style=solid];
m6_131 -> m6_132  [key=0, style=solid];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_165  [key=2, style=dotted];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_6  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_165  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_6  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_136 -> m6_165  [key=2, style=dotted];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_6  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_138 -> m6_165  [key=2, style=dotted];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_6  [key=2, style=dotted];
m6_139 -> m6_45  [color=darkorchid, key=3, label="method methodReturn bool TryParseDateTime", style=bold];
m6_140 -> m6_141  [key=0, style=solid];
m6_140 -> m6_165  [key=2, style=dotted];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_6  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_142 -> m6_165  [key=2, style=dotted];
m6_143 -> m6_144  [key=0, style=solid];
m6_143 -> m6_6  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid];
m6_144 -> m6_165  [key=2, style=dotted];
m6_145 -> m6_146  [key=0, style=solid];
m6_145 -> m6_6  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_165  [key=2, style=dotted];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_6  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_165  [key=2, style=dotted];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_6  [key=2, style=dotted];
m6_150 -> m6_151  [key=0, style=solid];
m6_150 -> m6_152  [color=darkseagreen4, key=1, label=data, style=dashed];
m6_150 -> m6_150  [color=green, key=3, label="Local variable string data", style=bold];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_153  [color=darkseagreen4, key=1, label=expected, style=dashed];
m6_151 -> m6_151  [color=green, key=3, label="Local variable string expected", style=bold];
m6_152 -> m6_153  [key=0, style=solid];
m6_152 -> m6_165  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_153 -> m6_6  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_154 -> m6_165  [key=2, style=dotted];
m6_155 -> m6_156  [key=0, style=solid];
m6_155 -> m6_6  [key=2, style=dotted];
m6_156 -> m6_157  [key=0, style=solid];
m6_156 -> m6_165  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_157 -> m6_6  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_158 -> m6_165  [key=2, style=dotted];
m6_158 -> m6_45  [color=darkorchid, key=3, label="method methodReturn bool TryParseDateTime", style=bold];
m6_158 -> m6_13  [color=darkorchid, key=3, label="Parameter variable System.DateTime dt", style=bold];
m6_159 -> m6_160  [key=0, style=solid];
m6_159 -> m6_6  [key=2, style=dotted];
m6_160 -> m6_161  [key=0, style=solid];
m6_160 -> m6_165  [key=2, style=dotted];
m6_161 -> m6_162  [key=0, style=solid];
m6_161 -> m6_6  [key=2, style=dotted];
m6_162 -> m6_163  [key=0, style=solid];
m6_162 -> m6_165  [key=2, style=dotted];
m6_163 -> m6_164  [key=0, style=solid];
m6_163 -> m6_6  [key=2, style=dotted];
m6_164 -> m6_130  [color=blue, key=0, style=bold];
m6_117 -> m6_118  [key=0, style=solid];
m6_118 -> m6_119  [key=0, style=solid];
m6_118 -> m6_121  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_112  [key=2, style=dotted];
m6_120 -> m6_117  [color=blue, key=0, style=bold];
m6_246 -> m6_247  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_10  [key=2, style=dotted];
m6_9 -> m6_7  [color=blue, key=0, style=bold];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_10  [key=2, style=dotted];
m6_20 -> m6_22  [key=2, style=dotted];
m6_21 -> m6_19  [color=blue, key=0, style=bold];
m6_29 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_10  [key=2, style=dotted];
m6_31 -> m6_29  [color=blue, key=0, style=bold];
m6_39 -> m6_40  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_10  [key=2, style=dotted];
m6_40 -> m6_38  [key=2, style=dotted];
m6_41 -> m6_39  [color=blue, key=0, style=bold];
m6_69 -> m6_70  [key=0, style=solid];
m6_70 -> m6_71  [key=0, style=solid];
m6_70 -> m6_10  [key=2, style=dotted];
m6_71 -> m6_69  [color=blue, key=0, style=bold];
m6_92 -> m6_93  [key=0, style=solid];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_10  [key=2, style=dotted];
m6_94 -> m6_92  [color=blue, key=0, style=bold];
m6_179 -> m6_180  [key=0, style=solid];
m6_180 -> m6_181  [key=0, style=solid];
m6_180 -> m6_182  [key=2, style=dotted];
m6_180 -> m6_183  [key=2, style=dotted];
m6_181 -> m6_179  [color=blue, key=0, style=bold];
m6_247 -> m6_248  [key=0, style=solid];
m6_248 -> m6_249  [key=0, style=solid];
m6_248 -> m6_5  [key=2, style=dotted];
m6_249 -> m6_250  [key=0, style=solid];
m6_249 -> m6_252  [key=2, style=dotted];
m6_249 -> m6_249  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m6_250 -> m6_251  [key=0, style=solid];
m6_250 -> m6_121  [key=2, style=dotted];
m6_251 -> m6_246  [color=blue, key=0, style=bold];
m6_502 -> m6_514  [key=0, style=solid];
m6_502 -> m6_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m6_502 -> m6_462  [color=green, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m6_502 -> m6_490  [color=green, key=3, label="Parameter variable string text", style=bold];
m6_514 -> m6_515  [key=0, style=solid];
m6_514 -> m6_518  [key=2, style=dotted];
m6_514 -> m6_519  [key=2, style=dotted];
m6_514 -> m6_516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m6_516 -> m6_517  [key=0, style=solid];
m6_516 -> m6_521  [key=2, style=dotted];
m6_515 -> m6_516  [key=0, style=solid];
m6_515 -> m6_520  [key=2, style=dotted];
m6_517 -> m6_502  [color=blue, key=0, style=bold];
m6_300 -> m6_301  [key=0, style=solid];
m6_301 -> m6_302  [key=0, style=solid];
m6_301 -> m6_301  [color=green, key=3, label="Local variable string v", style=bold];
m6_302 -> m6_303  [key=0, style=solid];
m6_302 -> m6_305  [key=2, style=dotted];
m6_303 -> m6_304  [key=0, style=solid];
m6_303 -> m6_6  [key=2, style=dotted];
m6_304 -> m6_300  [color=blue, key=0, style=bold];
m6_113 -> m6_114  [key=0, style=solid];
m6_114 -> m6_115  [key=0, style=solid];
m6_114 -> m6_111  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_6  [key=2, style=dotted];
m6_116 -> m6_113  [color=blue, key=0, style=bold];
m6_425 -> m6_435  [key=0, style=solid];
m6_425 -> m6_437  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_438  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_439  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_440  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_441  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_442  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_443  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_444  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_445  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_446  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_447  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_448  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_449  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_450  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_453  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_425 -> m6_308  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_319  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_330  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_341  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_351  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_373  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_382  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_391  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_400  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_403  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_406  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_409  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_412  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_415  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_418  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_421  [color=green, key=3, label="Parameter variable string name", style=bold];
m6_425 -> m6_317  [color=green, key=3, label="Parameter variable T value", style=bold];
m6_425 -> m6_339  [color=green, key=3, label="Parameter variable T value", style=bold];
m6_425 -> m6_350  [color=green, key=3, label="Parameter variable T value", style=bold];
m6_425 -> m6_360  [color=green, key=3, label="Parameter variable T value", style=bold];
m6_425 -> m6_371  [color=green, key=3, label="Parameter variable T value", style=bold];
m6_435 -> m6_436  [key=0, style=solid];
m6_435 -> m6_459  [key=2, style=dotted];
m6_437 -> m6_438  [key=0, style=solid];
m6_437 -> m6_461  [key=2, style=dotted];
m6_438 -> m6_439  [key=0, style=solid];
m6_438 -> m6_442  [key=0, style=solid];
m6_439 -> m6_440  [key=0, style=solid];
m6_439 -> m6_461  [key=2, style=dotted];
m6_440 -> m6_441  [key=0, style=solid];
m6_440 -> m6_461  [key=2, style=dotted];
m6_441 -> m6_442  [key=0, style=solid];
m6_441 -> m6_461  [key=2, style=dotted];
m6_442 -> m6_443  [key=0, style=solid];
m6_442 -> m6_461  [key=2, style=dotted];
m6_443 -> m6_444  [key=0, style=solid];
m6_443 -> m6_447  [key=0, style=solid];
m6_444 -> m6_445  [key=0, style=solid];
m6_444 -> m6_461  [key=2, style=dotted];
m6_445 -> m6_446  [key=0, style=solid];
m6_445 -> m6_461  [key=2, style=dotted];
m6_446 -> m6_447  [key=0, style=solid];
m6_446 -> m6_461  [key=2, style=dotted];
m6_447 -> m6_448  [key=0, style=solid];
m6_447 -> m6_38  [key=2, style=dotted];
m6_447 -> m6_462  [key=2, style=dotted];
m6_448 -> m6_449  [key=0, style=solid];
m6_448 -> m6_450  [key=0, style=solid];
m6_449 -> m6_451  [key=0, style=solid];
m6_449 -> m6_463  [key=2, style=dotted];
m6_449 -> m6_464  [key=2, style=dotted];
m6_450 -> m6_451  [key=0, style=solid];
m6_450 -> m6_463  [key=2, style=dotted];
m6_450 -> m6_464  [key=2, style=dotted];
m6_453 -> m6_454  [key=0, style=solid];
m6_453 -> m6_467  [key=2, style=dotted];
m6_436 -> m6_437  [key=0, style=solid];
m6_436 -> m6_460  [key=2, style=dotted];
m6_436 -> m6_439  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_436 -> m6_440  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_436 -> m6_441  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_436 -> m6_442  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_436 -> m6_444  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_436 -> m6_445  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_436 -> m6_446  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_436 -> m6_457  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_436 -> m6_358  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DateFormatHandling format", style=bold];
m6_436 -> m6_362  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan offset", style=bold];
m6_436 -> m6_436  [color=darkorchid, key=3, label="method methodReturn int WriteDateTimeOffset", style=bold];
m6_457 -> m6_458  [key=0, style=solid];
m6_451 -> m6_452  [key=0, style=solid];
m6_451 -> m6_465  [key=2, style=dotted];
m6_451 -> m6_453  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_451 -> m6_454  [color=darkseagreen4, key=1, label=ms, style=dashed];
m6_452 -> m6_453  [key=0, style=solid];
m6_452 -> m6_466  [key=2, style=dotted];
m6_454 -> m6_455  [key=0, style=solid];
m6_454 -> m6_468  [key=2, style=dotted];
m6_454 -> m6_469  [key=2, style=dotted];
m6_454 -> m6_470  [key=2, style=dotted];
m6_455 -> m6_456  [key=0, style=solid];
m6_455 -> m6_459  [key=2, style=dotted];
m6_456 -> m6_457  [key=0, style=solid];
m6_456 -> m6_471  [key=2, style=dotted];
m6_458 -> m6_425  [color=blue, key=0, style=bold];
m6_122 -> m6_123  [key=0, style=solid];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_121  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_112  [key=2, style=dotted];
m6_125 -> m6_122  [color=blue, key=0, style=bold];
m6_522 -> m6_523  [key=0, style=solid];
m6_523 -> m6_524  [key=0, style=solid];
m6_523 -> m6_307  [color=green, key=3, label="Local variable System.Threading.Tasks.Task<string> task", style=bold];
m6_524 -> m6_525  [key=0, style=solid];
m6_524 -> m6_553  [key=2, style=dotted];
m6_524 -> m6_526  [color=darkseagreen4, key=1, label=task, style=dashed];
m6_525 -> m6_526  [key=0, style=solid];
m6_525 -> m6_554  [key=2, style=dotted];
m6_526 -> m6_527  [key=0, style=solid];
m6_526 -> m6_6  [key=2, style=dotted];
m6_527 -> m6_528  [key=0, style=solid];
m6_527 -> m6_555  [key=2, style=dotted];
m6_527 -> m6_529  [color=darkseagreen4, key=1, label=task, style=dashed];
m6_528 -> m6_529  [key=0, style=solid];
m6_528 -> m6_554  [key=2, style=dotted];
m6_529 -> m6_530  [key=0, style=solid];
m6_529 -> m6_6  [key=2, style=dotted];
m6_530 -> m6_531  [key=0, style=solid];
m6_530 -> m6_10  [key=2, style=dotted];
m6_530 -> m6_556  [key=2, style=dotted];
m6_530 -> m6_532  [color=darkseagreen4, key=1, label=task, style=dashed];
m6_531 -> m6_532  [key=0, style=solid];
m6_531 -> m6_554  [key=2, style=dotted];
m6_532 -> m6_533  [key=0, style=solid];
m6_532 -> m6_6  [key=2, style=dotted];
m6_533 -> m6_534  [key=0, style=solid];
m6_533 -> m6_557  [key=2, style=dotted];
m6_533 -> m6_535  [color=darkseagreen4, key=1, label=taskObject, style=dashed];
m6_534 -> m6_535  [key=0, style=solid];
m6_534 -> m6_554  [key=2, style=dotted];
m6_535 -> m6_536  [key=0, style=solid];
m6_535 -> m6_558  [key=2, style=dotted];
m6_535 -> m6_559  [key=2, style=dotted];
m6_536 -> m6_537  [key=0, style=solid];
m6_536 -> m6_10  [key=2, style=dotted];
m6_536 -> m6_560  [key=2, style=dotted];
m6_536 -> m6_561  [key=2, style=dotted];
m6_536 -> m6_538  [color=darkseagreen4, key=1, label=taskVersionArray, style=dashed];
m6_537 -> m6_538  [key=0, style=solid];
m6_537 -> m6_554  [key=2, style=dotted];
m6_538 -> m6_539  [key=0, style=solid];
m6_538 -> m6_540  [color=darkseagreen4, key=1, label=versionArray, style=dashed];
m6_539 -> m6_540  [key=0, style=solid];
m6_539 -> m6_6  [key=2, style=dotted];
m6_540 -> m6_541  [key=0, style=solid];
m6_540 -> m6_6  [key=2, style=dotted];
m6_541 -> m6_542  [key=0, style=solid];
m6_541 -> m6_562  [key=2, style=dotted];
m6_541 -> m6_543  [color=darkseagreen4, key=1, label=taskInt, style=dashed];
m6_542 -> m6_543  [key=0, style=solid];
m6_542 -> m6_554  [key=2, style=dotted];
m6_543 -> m6_544  [key=0, style=solid];
m6_543 -> m6_6  [key=2, style=dotted];
m6_544 -> m6_545  [key=0, style=solid];
m6_544 -> m6_10  [key=2, style=dotted];
m6_544 -> m6_560  [key=2, style=dotted];
m6_544 -> m6_563  [key=2, style=dotted];
m6_544 -> m6_546  [color=darkseagreen4, key=1, label=taskVersion, style=dashed];
m6_545 -> m6_546  [key=0, style=solid];
m6_545 -> m6_554  [key=2, style=dotted];
m6_546 -> m6_547  [key=0, style=solid];
m6_546 -> m6_6  [key=2, style=dotted];
m6_547 -> m6_548  [key=0, style=solid];
m6_547 -> m6_564  [key=2, style=dotted];
m6_547 -> m6_549  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_547 -> m6_551  [color=darkseagreen4, key=1, label=p, style=dashed];
m6_548 -> m6_549  [key=0, style=solid];
m6_549 -> m6_550  [key=0, style=solid];
m6_549 -> m6_10  [key=2, style=dotted];
m6_549 -> m6_62  [key=2, style=dotted];
m6_549 -> m6_565  [key=2, style=dotted];
m6_549 -> m6_566  [key=2, style=dotted];
m6_551 -> m6_552  [key=0, style=solid];
m6_551 -> m6_6  [key=2, style=dotted];
m6_550 -> m6_551  [key=0, style=solid];
m6_550 -> m6_554  [key=2, style=dotted];
m6_552 -> m6_522  [color=blue, key=0, style=bold];
m6_266 -> m6_267  [key=0, style=solid];
m6_267 -> m6_268  [key=0, style=solid];
m6_267 -> m6_282  [key=2, style=dotted];
m6_267 -> m6_6  [key=2, style=dotted];
m6_268 -> m6_269  [key=0, style=solid];
m6_268 -> m6_282  [key=2, style=dotted];
m6_268 -> m6_6  [key=2, style=dotted];
m6_269 -> m6_270  [key=0, style=solid];
m6_269 -> m6_282  [key=2, style=dotted];
m6_269 -> m6_6  [key=2, style=dotted];
m6_270 -> m6_271  [key=0, style=solid];
m6_270 -> m6_282  [key=2, style=dotted];
m6_270 -> m6_6  [key=2, style=dotted];
m6_271 -> m6_272  [key=0, style=solid];
m6_271 -> m6_282  [key=2, style=dotted];
m6_271 -> m6_6  [key=2, style=dotted];
m6_272 -> m6_273  [key=0, style=solid];
m6_272 -> m6_282  [key=2, style=dotted];
m6_272 -> m6_6  [key=2, style=dotted];
m6_273 -> m6_274  [key=0, style=solid];
m6_273 -> m6_282  [key=2, style=dotted];
m6_273 -> m6_6  [key=2, style=dotted];
m6_274 -> m6_275  [key=0, style=solid];
m6_274 -> m6_282  [key=2, style=dotted];
m6_274 -> m6_6  [key=2, style=dotted];
m6_275 -> m6_276  [key=0, style=solid];
m6_275 -> m6_282  [key=2, style=dotted];
m6_275 -> m6_6  [key=2, style=dotted];
m6_276 -> m6_277  [key=0, style=solid];
m6_276 -> m6_282  [key=2, style=dotted];
m6_276 -> m6_6  [key=2, style=dotted];
m6_277 -> m6_278  [key=0, style=solid];
m6_277 -> m6_282  [key=2, style=dotted];
m6_277 -> m6_6  [key=2, style=dotted];
m6_278 -> m6_279  [key=0, style=solid];
m6_278 -> m6_282  [key=2, style=dotted];
m6_278 -> m6_6  [key=2, style=dotted];
m6_279 -> m6_280  [key=0, style=solid];
m6_279 -> m6_282  [key=2, style=dotted];
m6_279 -> m6_6  [key=2, style=dotted];
m6_280 -> m6_281  [key=0, style=solid];
m6_280 -> m6_282  [key=2, style=dotted];
m6_280 -> m6_6  [key=2, style=dotted];
m6_281 -> m6_266  [color=blue, key=0, style=bold];
m6_488 -> m6_503  [key=0, style=solid];
m6_488 -> m6_461  [color=green, key=3, label="Parameter variable object value", style=bold];
m6_488 -> m6_462  [color=green, key=3, label="Parameter variable object value", style=bold];
m6_488 -> m6_478  [color=green, key=3, label="Parameter variable object value", style=bold];
m6_488 -> m6_492  [color=green, key=3, label="Parameter variable object value", style=bold];
m6_503 -> m6_504  [key=0, style=solid];
m6_504 -> m6_488  [color=blue, key=0, style=bold];
m6_37 -> m6_37  [color=darkorchid, key=3, label="Field variable long InitialJavaScriptDateTicks", style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_6  [key=2, style=dotted];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_107 -> m6_108  [key=0, style=solid];
m6_108 -> m6_109  [key=0, style=solid];
m6_108 -> m6_111  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_109 -> m6_112  [key=2, style=dotted];
m6_110 -> m6_107  [color=blue, key=0, style=bold];
m6_597 -> m6_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_412  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m6_597 -> m6_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonConvertTest", style=dashed];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_141  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_132 -> m7_143  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_132 -> m7_145  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_445 -> m7_446  [key=0, style=solid];
m7_446 -> m7_447  [key=0, style=solid];
m7_446 -> m7_450  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_447 -> m7_448  [key=0, style=solid];
m7_447 -> m7_221  [key=2, style=dotted];
m7_447 -> m7_449  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_447 -> m7_452  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_450 -> m7_451  [key=0, style=solid];
m7_450 -> m7_75  [key=2, style=dotted];
m7_448 -> m7_449  [key=0, style=solid];
m7_448 -> m7_455  [key=2, style=dotted];
m7_449 -> m7_450  [key=0, style=solid];
m7_449 -> m7_455  [key=2, style=dotted];
m7_449 -> m7_122  [key=2, style=dotted];
m7_452 -> m7_453  [key=0, style=solid];
m7_452 -> m7_15  [key=2, style=dotted];
m7_451 -> m7_452  [key=0, style=solid];
m7_451 -> m7_51  [key=2, style=dotted];
m7_451 -> m7_455  [key=2, style=dotted];
m7_451 -> m7_122  [key=2, style=dotted];
m7_453 -> m7_454  [key=0, style=solid];
m7_453 -> m7_456  [key=2, style=dotted];
m7_454 -> m7_445  [color=blue, key=0, style=bold];
m7_821 -> m7_822  [key=0, style=solid];
m7_822 -> m7_823  [key=0, style=solid];
m7_823 -> m7_824  [key=0, style=solid];
m7_823 -> m7_75  [key=2, style=dotted];
m7_823 -> m7_825  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m7_824 -> m7_825  [key=0, style=solid];
m7_824 -> m7_271  [key=2, style=dotted];
m7_824 -> m7_23  [key=2, style=dotted];
m7_825 -> m7_826  [key=0, style=solid];
m7_825 -> m7_271  [key=2, style=dotted];
m7_825 -> m7_84  [key=2, style=dotted];
m7_826 -> m7_821  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [key=0, style=solid];
m7_25 -> m7_27  [key=2, style=dotted];
m7_748 -> m7_749  [key=0, style=solid];
m7_749 -> m7_750  [key=0, style=solid];
m7_749 -> m7_753  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_750 -> m7_751  [key=0, style=solid];
m7_750 -> m7_221  [key=2, style=dotted];
m7_750 -> m7_752  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_753 -> m7_754  [key=0, style=solid];
m7_753 -> m7_23  [key=2, style=dotted];
m7_751 -> m7_752  [key=0, style=solid];
m7_751 -> m7_23  [key=2, style=dotted];
m7_752 -> m7_753  [key=0, style=solid];
m7_752 -> m7_15  [key=2, style=dotted];
m7_754 -> m7_748  [color=blue, key=0, style=bold];
m7_344 -> m7_345  [key=0, style=solid];
m7_344 -> m7_346  [key=0, style=solid];
m7_344 -> m7_43  [key=2, style=dotted];
m7_658 -> m7_661  [key=0, style=solid];
m7_658 -> m7_664  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m7_658 -> m7_668  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m7_661 -> m7_662  [key=0, style=solid];
m7_661 -> m7_97  [key=2, style=dotted];
m7_661 -> m7_663  [color=darkseagreen4, key=1, label=settings, style=dashed];
m7_664 -> m7_665  [key=0, style=solid];
m7_664 -> m7_45  [key=2, style=dotted];
m7_664 -> m7_673  [key=2, style=dotted];
m7_664 -> m7_666  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_668 -> m7_669  [key=0, style=solid];
m7_668 -> m7_61  [key=2, style=dotted];
m7_662 -> m7_663  [key=0, style=solid];
m7_662 -> m7_671  [key=2, style=dotted];
m7_662 -> m7_672  [key=2, style=dotted];
m7_663 -> m7_664  [key=0, style=solid];
m7_663 -> m7_645  [key=2, style=dotted];
m7_663 -> m7_665  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_665 -> m7_666  [key=0, style=solid];
m7_665 -> m7_647  [key=2, style=dotted];
m7_665 -> m7_669  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_666 -> m7_667  [key=0, style=solid];
m7_666 -> m7_668  [key=0, style=solid];
m7_666 -> m7_47  [key=2, style=dotted];
m7_669 -> m7_670  [key=0, style=solid];
m7_669 -> m7_320  [key=2, style=dotted];
m7_667 -> m7_670  [key=0, style=solid];
m7_667 -> m7_674  [key=2, style=dotted];
m7_670 -> m7_658  [color=blue, key=0, style=bold];
m7_319 -> m7_320  [key=0, style=solid];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_0 -> m7_4  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_0 -> m7_6  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_0 -> m7_7  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_1 -> m7_15  [key=2, style=dotted];
m7_1 -> m7_12  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_1 -> m7_13  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_2 -> m7_4  [key=0, style=solid];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_16  [key=2, style=dotted];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_2 -> m7_10  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_0  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_6  [key=0, style=solid];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_97  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_73  [color=darkseagreen4, key=1, label=json1, style=dashed];
m7_69 -> m7_96  [key=0, style=solid];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_75  [key=2, style=dotted];
m7_70 -> m7_72  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_70 -> m7_76  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_70 -> m7_79  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_70 -> m7_93  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_70 -> m7_95  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_23  [key=2, style=dotted];
m7_73 -> m7_75  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_51  [key=2, style=dotted];
m7_71 -> m7_23  [key=2, style=dotted];
m7_71 -> m7_66  [key=0, style=solid];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_22  [key=2, style=dotted];
m7_72 -> m7_76  [key=0, style=solid];
m7_74 -> m7_68  [color=blue, key=0, style=bold];
m7_74 -> m7_99  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_98  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_89  [key=0, style=solid];
m7_85 -> m7_101  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_95  [key=2, style=dotted];
m7_86 -> m7_88  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_86 -> m7_92  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_99  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_96  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_99  [key=2, style=dotted];
m7_92 -> m7_96  [key=0, style=solid];
m7_92 -> m7_27  [key=2, style=dotted];
m7_92 -> m7_28  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_48  [key=2, style=dotted];
m7_89 -> m7_92  [key=0, style=solid];
m7_89 -> m7_102  [key=2, style=dotted];
m7_89 -> m7_91  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_97  [key=2, style=dotted];
m7_90 -> m7_99  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_98  [key=2, style=dotted];
m7_91 -> m7_96  [key=0, style=solid];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_51  [key=2, style=dotted];
m7_93 -> m7_100  [key=2, style=dotted];
m7_93 -> m7_95  [key=0, style=solid];
m7_94 -> m7_85  [color=blue, key=0, style=bold];
m7_94 -> m7_96  [key=0, style=solid];
m7_47 -> m7_46  [color=blue, key=0, style=bold];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_27  [key=2, style=dotted];
m7_179 -> m7_28  [key=2, style=dotted];
m7_111 -> m7_112  [key=0, style=solid];
m7_111 -> m7_116  [key=0, style=solid];
m7_111 -> m7_147  [key=2, style=dotted];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_223  [key=0, style=solid];
m7_134 -> m7_135  [key=0, style=solid];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_137  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_135 -> m7_131  [key=0, style=solid];
m7_135 -> m7_151  [key=2, style=dotted];
m7_135 -> m7_26  [key=2, style=dotted];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_132  [key=2, style=dotted];
m7_136 -> m7_138  [color=darkseagreen4, key=1, label=xmlDocument, style=dashed];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_133  [key=2, style=dotted];
m7_137 -> m7_152  [key=2, style=dotted];
m7_137 -> m7_139  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_142  [key=2, style=dotted];
m7_138 -> m7_143  [key=2, style=dotted];
m7_138 -> m7_99  [key=2, style=dotted];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_121  [key=2, style=dotted];
m7_139 -> m7_146  [key=0, style=solid];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_122  [key=2, style=dotted];
m7_140 -> m7_131  [key=0, style=solid];
m7_141 -> m7_134  [color=blue, key=0, style=bold];
m7_141 -> m7_146  [key=0, style=solid];
m7_141 -> m7_27  [key=2, style=dotted];
m7_141 -> m7_28  [key=2, style=dotted];
m7_602 -> m7_603  [key=0, style=solid];
m7_603 -> m7_604  [key=0, style=solid];
m7_603 -> m7_610  [key=2, style=dotted];
m7_603 -> m7_611  [key=2, style=dotted];
m7_603 -> m7_598  [key=2, style=dotted];
m7_604 -> m7_605  [key=0, style=solid];
m7_604 -> m7_600  [key=2, style=dotted];
m7_604 -> m7_601  [key=2, style=dotted];
m7_605 -> m7_606  [key=0, style=solid];
m7_605 -> m7_221  [key=2, style=dotted];
m7_605 -> m7_607  [color=darkseagreen4, key=1, label=xmlProduct, style=dashed];
m7_606 -> m7_607  [key=0, style=solid];
m7_606 -> m7_455  [key=2, style=dotted];
m7_606 -> m7_122  [key=2, style=dotted];
m7_607 -> m7_608  [key=0, style=solid];
m7_607 -> m7_15  [key=2, style=dotted];
m7_608 -> m7_609  [key=0, style=solid];
m7_608 -> m7_122  [key=2, style=dotted];
m7_609 -> m7_602  [color=blue, key=0, style=bold];
m7_538 -> m7_539  [key=0, style=solid];
m7_539 -> m7_540  [key=0, style=solid];
m7_539 -> m7_545  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_540 -> m7_541  [key=0, style=solid];
m7_540 -> m7_221  [key=2, style=dotted];
m7_540 -> m7_543  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_545 -> m7_546  [key=0, style=solid];
m7_545 -> m7_122  [key=2, style=dotted];
m7_541 -> m7_542  [key=0, style=solid];
m7_541 -> m7_345  [key=2, style=dotted];
m7_543 -> m7_544  [key=0, style=solid];
m7_543 -> m7_15  [key=2, style=dotted];
m7_543 -> m7_545  [color=darkseagreen4, key=1, label=newJson, style=dashed];
m7_542 -> m7_543  [key=0, style=solid];
m7_542 -> m7_122  [key=2, style=dotted];
m7_544 -> m7_545  [key=0, style=solid];
m7_544 -> m7_456  [key=2, style=dotted];
m7_546 -> m7_538  [color=blue, key=0, style=bold];
m7_133 -> m7_141  [key=0, style=solid];
m7_133 -> m7_140  [key=0, style=solid];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_136  [key=0, style=solid];
m7_180 -> m7_153  [color=blue, key=0, style=bold];
m7_99 -> m7_125  [color=green, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_300  [key=0, style=solid];
m7_99 -> m7_301  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_99 -> m7_302  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_99 -> m7_320  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_99 -> m7_333  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_99 -> m7_74  [color=darkorchid, key=3, label="Parameter variable bool updateIndex", style=bold];
m7_99 -> m7_114  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m7_99 -> m7_163  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m7_99 -> m7_193  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m7_99 -> m7_231  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m7_99 -> m7_97  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m7_99 -> m7_297  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_295  [color=darkorchid, key=3, label="Parameter variable bool updateIndex", style=bold];
m7_99 -> m7_78  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_112  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_118  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_137  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_167  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_197  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_227  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_250  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_99 -> m7_69  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m7_121 -> m7_123  [key=0, style=solid];
m7_121 -> m7_122  [key=0, style=solid];
m7_214 -> m7_215  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_27  [color=blue, key=0, style=bold];
m7_45 -> m7_43  [color=blue, key=0, style=bold];
m7_402 -> m7_403  [key=0, style=solid];
m7_402 -> m7_15  [key=2, style=dotted];
m7_402 -> m7_404  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m7_403 -> m7_404  [key=0, style=solid];
m7_404 -> m7_405  [key=0, style=solid];
m7_404 -> m7_122  [key=2, style=dotted];
m7_405 -> m7_406  [key=0, style=solid];
m7_405 -> m7_407  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m7_406 -> m7_402  [color=blue, key=0, style=bold];
m7_406 -> m7_407  [key=0, style=solid];
m7_406 -> m7_132  [key=2, style=dotted];
m7_406 -> m7_408  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m7_237 -> m7_74  [color=darkorchid, key=3, label="method methodReturn bool IsPrimitiveToken", style=bold];
m7_237 -> m7_295  [color=darkorchid, key=3, label="method methodReturn bool IsPrimitiveToken", style=bold];
m7_237 -> m7_367  [key=0, style=solid];
m7_237 -> m7_215  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_237 -> m7_238  [key=0, style=solid];
m7_367 -> m7_368  [key=0, style=solid];
m7_367 -> m7_377  [key=0, style=solid];
m7_367 -> m7_122  [key=2, style=dotted];
m7_377 -> m7_378  [key=0, style=solid];
m7_376 -> m7_378  [key=0, style=solid];
m7_376 -> m7_371  [color=blue, key=0, style=bold];
m7_368 -> m7_369  [key=0, style=solid];
m7_368 -> m7_24  [key=2, style=dotted];
m7_375 -> m7_376  [key=0, style=solid];
m7_375 -> m7_23  [key=2, style=dotted];
m7_369 -> m7_370  [key=0, style=solid];
m7_369 -> m7_23  [key=2, style=dotted];
m7_374 -> m7_375  [key=0, style=solid];
m7_370 -> m7_371  [key=0, style=solid];
m7_370 -> m7_362  [color=blue, key=0, style=bold];
m7_373 -> m7_374  [key=0, style=solid];
m7_373 -> m7_24  [key=2, style=dotted];
m7_373 -> m7_375  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_371 -> m7_372  [key=0, style=solid];
m7_372 -> m7_373  [key=0, style=solid];
m7_378 -> m7_237  [color=blue, key=0, style=bold];
m7_378 -> m7_379  [key=0, style=solid];
m7_378 -> m7_142  [key=2, style=dotted];
m7_378 -> m7_380  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_229 -> m7_230  [key=0, style=solid];
m7_229 -> m7_231  [key=0, style=solid];
m7_229 -> m7_238  [key=2, style=dotted];
m7_229 -> m7_232  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_232  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_230 -> m7_239  [key=2, style=dotted];
m7_231 -> m7_232  [key=0, style=solid];
m7_231 -> m7_132  [key=2, style=dotted];
m7_231 -> m7_233  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_231 -> m7_99  [key=2, style=dotted];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_133  [key=2, style=dotted];
m7_232 -> m7_236  [key=0, style=solid];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_15  [key=2, style=dotted];
m7_233 -> m7_235  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_236  [key=0, style=solid];
m7_235 -> m7_236  [key=0, style=solid];
m7_235 -> m7_122  [key=2, style=dotted];
m7_235 -> m7_27  [key=2, style=dotted];
m7_235 -> m7_28  [key=2, style=dotted];
m7_236 -> m7_229  [color=blue, key=0, style=bold];
m7_236 -> m7_213  [color=blue, key=0, style=bold];
m7_675 -> m7_676  [key=0, style=solid];
m7_676 -> m7_677  [key=0, style=solid];
m7_677 -> m7_678  [key=0, style=solid];
m7_677 -> m7_120  [key=2, style=dotted];
m7_677 -> m7_22  [key=2, style=dotted];
m7_677 -> m7_679  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_677 -> m7_680  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_678 -> m7_679  [key=0, style=solid];
m7_679 -> m7_680  [key=0, style=solid];
m7_679 -> m7_122  [key=2, style=dotted];
m7_680 -> m7_681  [key=0, style=solid];
m7_680 -> m7_75  [key=2, style=dotted];
m7_681 -> m7_682  [key=0, style=solid];
m7_681 -> m7_51  [key=2, style=dotted];
m7_681 -> m7_683  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m7_682 -> m7_683  [key=0, style=solid];
m7_683 -> m7_684  [key=0, style=solid];
m7_683 -> m7_122  [key=2, style=dotted];
m7_684 -> m7_675  [color=blue, key=0, style=bold];
m7_239 -> m7_240  [key=0, style=solid];
m7_648 -> m7_649  [key=0, style=solid];
m7_649 -> m7_650  [key=0, style=solid];
m7_649 -> m7_655  [key=2, style=dotted];
m7_649 -> m7_656  [key=2, style=dotted];
m7_649 -> m7_651  [color=darkseagreen4, key=1, label=ms, style=dashed];
m7_650 -> m7_651  [key=0, style=solid];
m7_650 -> m7_657  [key=2, style=dotted];
m7_650 -> m7_652  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_651 -> m7_652  [key=0, style=solid];
m7_651 -> m7_658  [key=2, style=dotted];
m7_652 -> m7_653  [key=0, style=solid];
m7_652 -> m7_659  [key=2, style=dotted];
m7_652 -> m7_660  [key=2, style=dotted];
m7_653 -> m7_654  [key=0, style=solid];
m7_653 -> m7_23  [key=2, style=dotted];
m7_654 -> m7_648  [color=blue, key=0, style=bold];
m7_873 -> m7_874  [key=0, style=solid];
m7_874 -> m7_875  [key=0, style=solid];
m7_874 -> m7_888  [key=2, style=dotted];
m7_874 -> m7_881  [color=darkseagreen4, key=1, label=model, style=dashed];
m7_875 -> m7_876  [key=0, style=solid];
m7_875 -> m7_856  [key=2, style=dotted];
m7_875 -> m7_18  [key=2, style=dotted];
m7_881 -> m7_882  [key=0, style=solid];
m7_881 -> m7_893  [key=2, style=dotted];
m7_876 -> m7_877  [key=0, style=solid];
m7_876 -> m7_97  [key=2, style=dotted];
m7_876 -> m7_889  [key=2, style=dotted];
m7_876 -> m7_48  [key=2, style=dotted];
m7_876 -> m7_645  [key=2, style=dotted];
m7_876 -> m7_881  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_876 -> m7_885  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_877 -> m7_878  [key=0, style=solid];
m7_877 -> m7_890  [key=2, style=dotted];
m7_877 -> m7_882  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_877 -> m7_883  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_885 -> m7_886  [key=0, style=solid];
m7_885 -> m7_647  [key=2, style=dotted];
m7_878 -> m7_879  [key=0, style=solid];
m7_878 -> m7_891  [key=2, style=dotted];
m7_882 -> m7_883  [key=0, style=solid];
m7_882 -> m7_321  [key=2, style=dotted];
m7_882 -> m7_23  [key=2, style=dotted];
m7_883 -> m7_884  [key=0, style=solid];
m7_883 -> m7_46  [key=2, style=dotted];
m7_883 -> m7_321  [key=2, style=dotted];
m7_879 -> m7_880  [key=0, style=solid];
m7_879 -> m7_892  [key=2, style=dotted];
m7_879 -> m7_881  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_880 -> m7_881  [key=0, style=solid];
m7_884 -> m7_885  [key=0, style=solid];
m7_884 -> m7_45  [key=2, style=dotted];
m7_886 -> m7_887  [key=0, style=solid];
m7_886 -> m7_51  [key=2, style=dotted];
m7_886 -> m7_23  [key=2, style=dotted];
m7_887 -> m7_873  [color=blue, key=0, style=bold];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_210  [key=0, style=solid];
m7_206 -> m7_207  [key=0, style=solid];
m7_206 -> m7_210  [key=0, style=solid];
m7_206 -> m7_27  [key=2, style=dotted];
m7_206 -> m7_28  [key=2, style=dotted];
m7_207 -> m7_208  [key=0, style=solid];
m7_207 -> m7_120  [key=2, style=dotted];
m7_207 -> m7_210  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_207 -> m7_209  [key=0, style=solid];
m7_208 -> m7_209  [key=0, style=solid];
m7_208 -> m7_22  [key=2, style=dotted];
m7_208 -> m7_210  [key=0, style=solid];
m7_210 -> m7_211  [key=0, style=solid];
m7_210 -> m7_213  [key=2, style=dotted];
m7_210 -> m7_183  [color=blue, key=0, style=bold];
m7_209 -> m7_210  [key=0, style=solid];
m7_209 -> m7_142  [key=2, style=dotted];
m7_209 -> m7_27  [key=2, style=dotted];
m7_209 -> m7_28  [key=2, style=dotted];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_214  [key=2, style=dotted];
m7_212 -> m7_205  [color=blue, key=0, style=bold];
m7_725 -> m7_726  [key=0, style=solid];
m7_726 -> m7_727  [key=0, style=solid];
m7_727 -> m7_728  [key=0, style=solid];
m7_727 -> m7_120  [key=2, style=dotted];
m7_727 -> m7_730  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_728 -> m7_729  [key=0, style=solid];
m7_728 -> m7_22  [key=2, style=dotted];
m7_730 -> m7_731  [key=0, style=solid];
m7_730 -> m7_213  [key=2, style=dotted];
m7_729 -> m7_730  [key=0, style=solid];
m7_729 -> m7_142  [key=2, style=dotted];
m7_731 -> m7_732  [key=0, style=solid];
m7_731 -> m7_214  [key=2, style=dotted];
m7_732 -> m7_725  [color=blue, key=0, style=bold];
m7_398 -> m7_295  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m7_398 -> m7_399  [key=0, style=solid];
m7_399 -> m7_400  [key=0, style=solid];
m7_399 -> m7_401  [key=0, style=solid];
m7_400 -> m7_401  [key=0, style=solid];
m7_400 -> m7_402  [key=2, style=dotted];
m7_400 -> m7_132  [key=2, style=dotted];
m7_401 -> m7_398  [color=blue, key=0, style=bold];
m7_401 -> m7_402  [key=0, style=solid];
m7_401 -> m7_133  [key=2, style=dotted];
m7_276 -> m7_285  [key=0, style=solid];
m7_276 -> m7_28  [key=2, style=dotted];
m7_120 -> m7_146  [key=0, style=solid];
m7_152 -> m7_153  [key=0, style=solid];
m7_123 -> m7_124  [color=green, key=0, style=solid];
m7_123 -> m7_129  [key=0, style=solid];
m7_124 -> m7_125  [color=green, key=0, style=solid];
m7_124 -> m7_126  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_124 -> m7_130  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_124 -> m7_128  [color=green, key=0, style=solid];
m7_125 -> m7_126  [color=green, key=0, style=solid];
m7_125 -> m7_132  [key=2, style=dotted];
m7_125 -> m7_127  [color=green, key=1, label=data, style=dashed];
m7_125 -> m7_149  [color=green, key=2, style=dotted];
m7_126 -> m7_127  [color=green, key=0, style=solid];
m7_126 -> m7_133  [key=2, style=dotted];
m7_126 -> m7_99  [color=green, key=2, style=dotted];
m7_130 -> m7_131  [key=0, style=solid];
m7_130 -> m7_23  [key=2, style=dotted];
m7_130 -> m7_135  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_130 -> m7_137  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_130 -> m7_150  [key=2, style=dotted];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_121  [key=2, style=dotted];
m7_127 -> m7_129  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_127 -> m7_146  [color=green, key=0, style=solid];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_122  [key=2, style=dotted];
m7_128 -> m7_146  [key=0, style=solid];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_110  [key=2, style=dotted];
m7_129 -> m7_143  [key=0, style=solid];
m7_131 -> m7_123  [color=blue, key=0, style=bold];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_142  [key=0, style=solid];
m7_131 -> m7_60  [key=2, style=dotted];
m7_806 -> m7_807  [key=0, style=solid];
m7_807 -> m7_808  [key=0, style=solid];
m7_807 -> m7_813  [key=2, style=dotted];
m7_807 -> m7_810  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_808 -> m7_809  [key=0, style=solid];
m7_810 -> m7_811  [key=0, style=solid];
m7_810 -> m7_814  [key=2, style=dotted];
m7_810 -> m7_271  [key=2, style=dotted];
m7_810 -> m7_23  [key=2, style=dotted];
m7_809 -> m7_810  [key=0, style=solid];
m7_809 -> m7_75  [key=2, style=dotted];
m7_809 -> m7_811  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m7_811 -> m7_812  [key=0, style=solid];
m7_811 -> m7_271  [key=2, style=dotted];
m7_811 -> m7_84  [key=2, style=dotted];
m7_812 -> m7_806  [color=blue, key=0, style=bold];
m7_479 -> m7_480  [key=0, style=solid];
m7_480 -> m7_481  [key=0, style=solid];
m7_480 -> m7_482  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_481 -> m7_482  [key=0, style=solid];
m7_481 -> m7_132  [key=2, style=dotted];
m7_481 -> m7_483  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_482 -> m7_483  [key=0, style=solid];
m7_482 -> m7_133  [key=2, style=dotted];
m7_483 -> m7_484  [key=0, style=solid];
m7_483 -> m7_15  [key=2, style=dotted];
m7_483 -> m7_485  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_483 -> m7_486  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_484 -> m7_485  [key=0, style=solid];
m7_485 -> m7_486  [key=0, style=solid];
m7_485 -> m7_122  [key=2, style=dotted];
m7_486 -> m7_487  [key=0, style=solid];
m7_486 -> m7_24  [key=2, style=dotted];
m7_487 -> m7_488  [key=0, style=solid];
m7_487 -> m7_23  [key=2, style=dotted];
m7_488 -> m7_479  [color=blue, key=0, style=bold];
m7_769 -> m7_770  [key=0, style=solid];
m7_770 -> m7_771  [key=0, style=solid];
m7_770 -> m7_774  [key=2, style=dotted];
m7_771 -> m7_772  [key=0, style=solid];
m7_771 -> m7_22  [key=2, style=dotted];
m7_772 -> m7_773  [key=0, style=solid];
m7_772 -> m7_23  [key=2, style=dotted];
m7_773 -> m7_769  [color=blue, key=0, style=bold];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_70  [key=0, style=solid];
m7_67 -> m7_60  [key=2, style=dotted];
m7_320 -> m7_335  [key=0, style=solid];
m7_353 -> m7_354  [key=0, style=solid];
m7_294 -> m7_74  [color=darkorchid, key=3, label="method methodReturn bool IsStartToken", style=bold];
m7_294 -> m7_295  [color=darkorchid, key=3, label="method methodReturn bool IsStartToken", style=bold];
m7_294 -> m7_379  [key=0, style=solid];
m7_379 -> m7_380  [key=0, style=solid];
m7_379 -> m7_384  [key=0, style=solid];
m7_379 -> m7_377  [color=blue, key=0, style=bold];
m7_384 -> m7_385  [key=0, style=solid];
m7_384 -> m7_142  [key=2, style=dotted];
m7_384 -> m7_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_383 -> m7_385  [key=0, style=solid];
m7_383 -> m7_384  [key=0, style=solid];
m7_380 -> m7_381  [key=0, style=solid];
m7_382 -> m7_383  [key=0, style=solid];
m7_382 -> m7_380  [color=blue, key=0, style=bold];
m7_381 -> m7_382  [key=0, style=solid];
m7_381 -> m7_221  [key=2, style=dotted];
m7_385 -> m7_294  [color=blue, key=0, style=bold];
m7_385 -> m7_383  [color=blue, key=0, style=bold];
m7_277 -> m7_278  [key=0, style=solid];
m7_277 -> m7_283  [key=0, style=solid];
m7_277 -> m7_239  [key=2, style=dotted];
m7_24 -> m7_338  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_338 -> m7_339  [key=0, style=solid];
m7_338 -> m7_340  [key=0, style=solid];
m7_339 -> m7_340  [key=0, style=solid];
m7_339 -> m7_24  [key=2, style=dotted];
m7_339 -> m7_341  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_340 -> m7_24  [color=blue, key=0, style=bold];
m7_340 -> m7_341  [key=0, style=solid];
m7_340 -> m7_342  [color=darkseagreen4, key=1, label=expected, style=dashed];
m7_619 -> m7_620  [key=0, style=solid];
m7_620 -> m7_621  [key=0, style=solid];
m7_620 -> m7_622  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_621 -> m7_622  [key=0, style=solid];
m7_621 -> m7_132  [key=2, style=dotted];
m7_621 -> m7_623  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_622 -> m7_623  [key=0, style=solid];
m7_622 -> m7_133  [key=2, style=dotted];
m7_623 -> m7_624  [key=0, style=solid];
m7_623 -> m7_15  [key=2, style=dotted];
m7_623 -> m7_625  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_624 -> m7_625  [key=0, style=solid];
m7_624 -> m7_122  [key=2, style=dotted];
m7_625 -> m7_626  [key=0, style=solid];
m7_625 -> m7_221  [key=2, style=dotted];
m7_626 -> m7_627  [key=0, style=solid];
m7_626 -> m7_310  [key=2, style=dotted];
m7_626 -> m7_122  [key=2, style=dotted];
m7_627 -> m7_619  [color=blue, key=0, style=bold];
m7_182 -> m7_183  [key=0, style=solid];
m7_349 -> m7_350  [key=0, style=solid];
m7_349 -> m7_61  [key=2, style=dotted];
m7_840 -> m7_841  [key=0, style=solid];
m7_841 -> m7_842  [key=0, style=solid];
m7_841 -> m7_120  [key=2, style=dotted];
m7_841 -> m7_843  [color=darkseagreen4, key=1, label=original, style=dashed];
m7_842 -> m7_843  [key=0, style=solid];
m7_842 -> m7_51  [key=2, style=dotted];
m7_842 -> m7_23  [key=2, style=dotted];
m7_843 -> m7_844  [key=0, style=solid];
m7_843 -> m7_121  [key=2, style=dotted];
m7_843 -> m7_845  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_844 -> m7_845  [key=0, style=solid];
m7_844 -> m7_23  [key=2, style=dotted];
m7_845 -> m7_846  [key=0, style=solid];
m7_845 -> m7_110  [key=2, style=dotted];
m7_846 -> m7_847  [key=0, style=solid];
m7_846 -> m7_51  [key=2, style=dotted];
m7_846 -> m7_23  [key=2, style=dotted];
m7_847 -> m7_840  [color=blue, key=0, style=bold];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_227  [color=darkorchid, key=3, label="method methodReturn string ReadAsStringInternal", style=bold];
m7_213 -> m7_69  [color=darkorchid, key=3, label="method methodReturn string ReadAsStringInternal", style=bold];
m7_216 -> m7_217  [key=0, style=solid];
m7_216 -> m7_219  [key=0, style=solid];
m7_216 -> m7_60  [key=2, style=dotted];
m7_216 -> m7_221  [key=2, style=dotted];
m7_217 -> m7_218  [key=0, style=solid];
m7_217 -> m7_97  [key=2, style=dotted];
m7_217 -> m7_23  [key=2, style=dotted];
m7_219 -> m7_220  [key=0, style=solid];
m7_219 -> m7_221  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_219 -> m7_223  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_219 -> m7_225  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_219 -> m7_233  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_219 -> m7_235  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_219 -> m7_51  [key=2, style=dotted];
m7_219 -> m7_23  [key=2, style=dotted];
m7_222 -> m7_236  [key=0, style=solid];
m7_222 -> m7_223  [key=0, style=solid];
m7_226 -> m7_227  [key=0, style=solid];
m7_226 -> m7_233  [key=0, style=solid];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_230  [key=0, style=solid];
m7_228 -> m7_226  [color=blue, key=0, style=bold];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_221  [key=2, style=dotted];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_235  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_215 -> m7_220  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_215 -> m7_221  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_215 -> m7_223  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_215 -> m7_225  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_215 -> m7_233  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_218 -> m7_236  [key=0, style=solid];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_75  [key=2, style=dotted];
m7_220 -> m7_215  [color=blue, key=0, style=bold];
m7_220 -> m7_221  [key=0, style=solid];
m7_223 -> m7_224  [key=0, style=solid];
m7_223 -> m7_225  [key=0, style=solid];
m7_223 -> m7_227  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_225 -> m7_226  [key=0, style=solid];
m7_225 -> m7_237  [key=2, style=dotted];
m7_225 -> m7_233  [key=0, style=solid];
m7_225 -> m7_222  [color=blue, key=0, style=bold];
m7_224 -> m7_236  [key=0, style=solid];
m7_224 -> m7_225  [key=0, style=solid];
m7_224 -> m7_142  [key=2, style=dotted];
m7_224 -> m7_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_279 -> m7_280  [key=0, style=solid];
m7_279 -> m7_283  [key=0, style=solid];
m7_279 -> m7_239  [key=2, style=dotted];
m7_279 -> m7_286  [key=2, style=dotted];
m7_280 -> m7_281  [key=0, style=solid];
m7_280 -> m7_24  [key=2, style=dotted];
m7_280 -> m7_282  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_280 -> m7_60  [key=2, style=dotted];
m7_281 -> m7_282  [key=0, style=solid];
m7_281 -> m7_23  [key=2, style=dotted];
m7_281 -> m7_283  [key=0, style=solid];
m7_281 -> m7_239  [key=2, style=dotted];
m7_282 -> m7_283  [key=0, style=solid];
m7_282 -> m7_0  [key=2, style=dotted];
m7_282 -> m7_285  [key=0, style=solid];
m7_283 -> m7_284  [key=0, style=solid];
m7_283 -> m7_122  [key=2, style=dotted];
m7_283 -> m7_285  [key=0, style=solid];
m7_283 -> m7_27  [key=2, style=dotted];
m7_283 -> m7_28  [key=2, style=dotted];
m7_284 -> m7_279  [color=blue, key=0, style=bold];
m7_284 -> m7_285  [key=0, style=solid];
m7_238 -> m7_239  [key=0, style=solid];
m7_238 -> m7_132  [key=2, style=dotted];
m7_238 -> m7_251  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_238 -> m7_254  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_238 -> m7_257  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_238 -> m7_258  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_238 -> m7_259  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_238 -> m7_262  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_238 -> m7_267  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_97 -> m7_68  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m7_97 -> m7_82  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken newToken", style=bold];
m7_97 -> m7_295  [key=0, style=solid];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_27  [key=2, style=dotted];
m7_95 -> m7_28  [key=2, style=dotted];
m7_570 -> m7_571  [key=0, style=solid];
m7_571 -> m7_572  [key=0, style=solid];
m7_571 -> m7_576  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_572 -> m7_573  [key=0, style=solid];
m7_572 -> m7_221  [key=2, style=dotted];
m7_572 -> m7_575  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_576 -> m7_577  [key=0, style=solid];
m7_576 -> m7_122  [key=2, style=dotted];
m7_573 -> m7_574  [key=0, style=solid];
m7_573 -> m7_345  [key=2, style=dotted];
m7_575 -> m7_576  [key=0, style=solid];
m7_575 -> m7_15  [key=2, style=dotted];
m7_574 -> m7_575  [key=0, style=solid];
m7_574 -> m7_122  [key=2, style=dotted];
m7_577 -> m7_570  [color=blue, key=0, style=bold];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_24  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_121  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_108  [key=2, style=dotted];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_78  [color=darkorchid, key=3, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffsetInternal", style=bold];
m7_64 -> m7_69  [color=darkorchid, key=3, label="method methodReturn System.DateTimeOffset? ReadAsDateTimeOffsetInternal", style=bold];
m7_362 -> m7_363  [key=0, style=solid];
m7_362 -> m7_350  [color=blue, key=0, style=bold];
m7_363 -> m7_364  [key=0, style=solid];
m7_363 -> m7_365  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_364 -> m7_365  [key=0, style=solid];
m7_364 -> m7_132  [key=2, style=dotted];
m7_364 -> m7_366  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_364 -> m7_369  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_365 -> m7_366  [key=0, style=solid];
m7_365 -> m7_133  [key=2, style=dotted];
m7_366 -> m7_367  [key=0, style=solid];
m7_366 -> m7_15  [key=2, style=dotted];
m7_366 -> m7_368  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_366 -> m7_337  [color=blue, key=0, style=bold];
m7_312 -> m7_313  [key=0, style=solid];
m7_313 -> m7_312  [color=blue, key=0, style=bold];
m7_313 -> m7_335  [key=0, style=solid];
m7_313 -> m7_336  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_23  [key=2, style=dotted];
m7_163 -> m7_99  [key=2, style=dotted];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_181  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m7_295 -> m7_99  [key=2, style=dotted];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_299  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_295 -> m7_303  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_295 -> m7_304  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_295 -> m7_308  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_296 -> m7_97  [color=blue, key=0, style=bold];
m7_296 -> m7_297  [key=0, style=solid];
m7_296 -> m7_301  [color=darkseagreen4, key=1, label=expected, style=dashed];
m7_296 -> m7_306  [color=darkseagreen4, key=1, label=expected, style=dashed];
m7_240 -> m7_241  [key=0, style=solid];
m7_240 -> m7_250  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadAsDateTimeInternal", style=bold];
m7_240 -> m7_69  [color=darkorchid, key=3, label="method methodReturn System.DateTime? ReadAsDateTimeInternal", style=bold];
m7_240 -> m7_242  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_240 -> m7_247  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_241 -> m7_242  [key=0, style=solid];
m7_241 -> m7_132  [key=2, style=dotted];
m7_241 -> m7_243  [color=darkseagreen4, key=1, label=document, style=dashed];
m7_242 -> m7_243  [key=0, style=solid];
m7_242 -> m7_245  [key=0, style=solid];
m7_242 -> m7_60  [key=2, style=dotted];
m7_242 -> m7_133  [key=2, style=dotted];
m7_243 -> m7_244  [key=0, style=solid];
m7_243 -> m7_97  [key=2, style=dotted];
m7_243 -> m7_245  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m7_245 -> m7_241  [key=0, style=solid];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_15  [key=2, style=dotted];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_248  [key=0, style=solid];
m7_246 -> m7_23  [key=2, style=dotted];
m7_247 -> m7_270  [key=0, style=solid];
m7_247 -> m7_248  [key=0, style=solid];
m7_247 -> m7_120  [key=2, style=dotted];
m7_248 -> m7_249  [key=0, style=solid];
m7_248 -> m7_250  [key=0, style=solid];
m7_248 -> m7_271  [key=2, style=dotted];
m7_248 -> m7_272  [key=2, style=dotted];
m7_251 -> m7_252  [key=0, style=solid];
m7_251 -> m7_267  [key=0, style=solid];
m7_251 -> m7_273  [key=2, style=dotted];
m7_251 -> m7_265  [color=darkseagreen4, key=1, label=instruction, style=dashed];
m7_252 -> m7_253  [key=0, style=solid];
m7_252 -> m7_257  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_252 -> m7_262  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_252 -> m7_15  [key=2, style=dotted];
m7_254 -> m7_255  [key=0, style=solid];
m7_254 -> m7_97  [key=2, style=dotted];
m7_254 -> m7_274  [key=2, style=dotted];
m7_254 -> m7_266  [color=darkseagreen4, key=1, label=cDataSection, style=dashed];
m7_257 -> m7_258  [key=0, style=solid];
m7_257 -> m7_262  [key=0, style=solid];
m7_257 -> m7_101  [key=2, style=dotted];
m7_257 -> m7_275  [key=2, style=dotted];
m7_257 -> m7_261  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_257 -> m7_264  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_257 -> m7_265  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_257 -> m7_266  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_257 -> m7_267  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_257 -> m7_268  [color=darkseagreen4, key=1, label=element, style=dashed];
m7_259 -> m7_259  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_271  [key=2, style=dotted];
m7_259 -> m7_261  [color=darkseagreen4, key=1, label=aa, style=dashed];
m7_259 -> m7_276  [key=2, style=dotted];
m7_260 -> m7_99  [key=2, style=dotted];
m7_260 -> m7_261  [key=0, style=solid];
m7_262 -> m7_263  [key=0, style=solid];
m7_262 -> m7_266  [key=0, style=solid];
m7_262 -> m7_272  [key=2, style=dotted];
m7_262 -> m7_276  [key=2, style=dotted];
m7_262 -> m7_264  [color=darkseagreen4, key=1, label=aa, style=dashed];
m7_263 -> m7_263  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_263 -> m7_264  [key=0, style=solid];
m7_263 -> m7_271  [key=2, style=dotted];
m7_263 -> m7_265  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_264 -> m7_99  [key=2, style=dotted];
m7_264 -> m7_265  [key=0, style=solid];
m7_264 -> m7_277  [key=2, style=dotted];
m7_266 -> m7_270  [key=0, style=solid];
m7_266 -> m7_27  [key=2, style=dotted];
m7_266 -> m7_28  [key=2, style=dotted];
m7_266 -> m7_267  [key=0, style=solid];
m7_266 -> m7_278  [key=2, style=dotted];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_269  [key=0, style=solid];
m7_267 -> m7_278  [key=2, style=dotted];
m7_269 -> m7_270  [key=0, style=solid];
m7_269 -> m7_27  [key=2, style=dotted];
m7_269 -> m7_28  [key=2, style=dotted];
m7_269 -> m7_122  [key=2, style=dotted];
m7_250 -> m7_251  [key=0, style=solid];
m7_250 -> m7_23  [key=2, style=dotted];
m7_244 -> m7_270  [key=0, style=solid];
m7_244 -> m7_245  [key=0, style=solid];
m7_249 -> m7_270  [key=0, style=solid];
m7_249 -> m7_250  [key=0, style=solid];
m7_249 -> m7_22  [key=2, style=dotted];
m7_253 -> m7_254  [key=0, style=solid];
m7_253 -> m7_256  [key=0, style=solid];
m7_253 -> m7_100  [key=2, style=dotted];
m7_253 -> m7_23  [key=2, style=dotted];
m7_255 -> m7_270  [key=0, style=solid];
m7_255 -> m7_256  [key=0, style=solid];
m7_255 -> m7_15  [key=2, style=dotted];
m7_256 -> m7_257  [key=0, style=solid];
m7_256 -> m7_23  [key=2, style=dotted];
m7_258 -> m7_259  [key=0, style=solid];
m7_258 -> m7_276  [key=2, style=dotted];
m7_258 -> m7_277  [key=2, style=dotted];
m7_261 -> m7_270  [key=0, style=solid];
m7_261 -> m7_262  [key=0, style=solid];
m7_261 -> m7_277  [key=2, style=dotted];
m7_265 -> m7_270  [key=0, style=solid];
m7_265 -> m7_266  [key=0, style=solid];
m7_265 -> m7_278  [key=2, style=dotted];
m7_268 -> m7_270  [key=0, style=solid];
m7_268 -> m7_269  [key=0, style=solid];
m7_268 -> m7_15  [key=2, style=dotted];
m7_270 -> m7_240  [color=blue, key=0, style=bold];
m7_270 -> m7_237  [color=blue, key=0, style=bold];
m7_143 -> m7_145  [key=0, style=solid];
m7_143 -> m7_144  [key=0, style=solid];
m7_26 -> m7_24  [color=blue, key=0, style=bold];
m7_336 -> m7_313  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m7_336 -> m7_315  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m7_336 -> m7_317  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken endToken", style=bold];
m7_336 -> m7_341  [key=0, style=solid];
m7_336 -> m7_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_336 -> m7_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_336 -> m7_327  [color=blue, key=0, style=bold];
m7_341 -> m7_342  [key=0, style=solid];
m7_341 -> m7_29  [key=2, style=dotted];
m7_341 -> m7_343  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m7_341 -> m7_344  [key=2, style=dotted];
m7_342 -> m7_343  [key=0, style=solid];
m7_342 -> m7_344  [key=0, style=solid];
m7_342 -> m7_348  [key=2, style=dotted];
m7_342 -> m7_122  [key=2, style=dotted];
m7_343 -> m7_347  [key=0, style=solid];
m7_343 -> m7_349  [key=2, style=dotted];
m7_343 -> m7_28  [key=2, style=dotted];
m7_343 -> m7_337  [color=blue, key=0, style=bold];
m7_345 -> m7_347  [key=0, style=solid];
m7_345 -> m7_346  [key=0, style=solid];
m7_345 -> m7_350  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m7_346 -> m7_347  [key=0, style=solid];
m7_346 -> m7_337  [key=2, style=dotted];
m7_346 -> m7_63  [key=2, style=dotted];
m7_347 -> m7_336  [color=blue, key=0, style=bold];
m7_347 -> m7_348  [key=0, style=solid];
m7_347 -> m7_347  [color=darkseagreen4, key=1, label=settings, style=dashed];
m7_347 -> m7_349  [color=darkseagreen4, key=1, label=settings, style=dashed];
m7_299 -> m7_300  [key=0, style=solid];
m7_299 -> m7_133  [key=2, style=dotted];
m7_299 -> m7_297  [color=blue, key=0, style=bold];
m7_303 -> m7_304  [key=0, style=solid];
m7_303 -> m7_310  [key=2, style=dotted];
m7_303 -> m7_122  [key=2, style=dotted];
m7_304 -> m7_305  [key=0, style=solid];
m7_304 -> m7_120  [key=2, style=dotted];
m7_308 -> m7_309  [key=0, style=solid];
m7_308 -> m7_311  [key=2, style=dotted];
m7_308 -> m7_122  [key=2, style=dotted];
m7_308 -> m7_335  [key=0, style=solid];
m7_308 -> m7_14  [key=2, style=dotted];
m7_297 -> m7_298  [key=0, style=solid];
m7_297 -> m7_132  [key=2, style=dotted];
m7_301 -> m7_302  [key=0, style=solid];
m7_301 -> m7_122  [key=2, style=dotted];
m7_306 -> m7_307  [key=0, style=solid];
m7_306 -> m7_122  [key=2, style=dotted];
m7_298 -> m7_299  [key=0, style=solid];
m7_298 -> m7_298  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m7_298 -> m7_300  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m7_298 -> m7_99  [key=2, style=dotted];
m7_300 -> m7_301  [key=0, style=solid];
m7_300 -> m7_15  [key=2, style=dotted];
m7_300 -> m7_302  [color=darkseagreen4, key=1, label=json1, style=dashed];
m7_302 -> m7_303  [key=0, style=solid];
m7_302 -> m7_221  [key=2, style=dotted];
m7_302 -> m7_306  [key=0, style=solid];
m7_302 -> m7_309  [key=0, style=solid];
m7_302 -> m7_312  [key=0, style=solid];
m7_302 -> m7_314  [key=0, style=solid];
m7_302 -> m7_316  [key=0, style=solid];
m7_302 -> m7_318  [key=0, style=solid];
m7_302 -> m7_321  [key=0, style=solid];
m7_305 -> m7_306  [key=0, style=solid];
m7_305 -> m7_22  [key=2, style=dotted];
m7_305 -> m7_307  [color=darkseagreen4, key=1, label=json2, style=dashed];
m7_305 -> m7_335  [key=0, style=solid];
m7_305 -> m7_14  [key=2, style=dotted];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_75  [key=2, style=dotted];
m7_309 -> m7_294  [color=blue, key=0, style=bold];
m7_309 -> m7_310  [key=0, style=solid];
m7_75 -> m7_96  [key=0, style=solid];
m7_787 -> m7_788  [key=0, style=solid];
m7_788 -> m7_789  [key=0, style=solid];
m7_788 -> m7_75  [key=2, style=dotted];
m7_788 -> m7_790  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_788 -> m7_791  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_788 -> m7_792  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_789 -> m7_790  [key=0, style=solid];
m7_789 -> m7_23  [key=2, style=dotted];
m7_790 -> m7_791  [key=0, style=solid];
m7_790 -> m7_23  [key=2, style=dotted];
m7_791 -> m7_792  [key=0, style=solid];
m7_791 -> m7_23  [key=2, style=dotted];
m7_792 -> m7_793  [key=0, style=solid];
m7_792 -> m7_23  [key=2, style=dotted];
m7_793 -> m7_787  [color=blue, key=0, style=bold];
m7_350 -> m7_351  [key=0, style=solid];
m7_350 -> m7_353  [key=2, style=dotted];
m7_348 -> m7_349  [key=0, style=solid];
m7_348 -> m7_62  [key=2, style=dotted];
m7_348 -> m7_351  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_348 -> m7_85  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m7_348 -> m7_283  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m7_348 -> m7_311  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.JsonContainerType GetTypeForCloseToken", style=bold];
m7_348 -> m7_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m7_348 -> m7_386  [key=0, style=solid];
m7_348 -> m7_336  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonToken token", style=bold];
m7_351 -> m7_352  [key=0, style=solid];
m7_351 -> m7_67  [key=2, style=dotted];
m7_351 -> m7_43  [key=2, style=dotted];
m7_351 -> m7_361  [color=darkseagreen4, key=1, label=currentObject, style=dashed];
m7_352 -> m7_345  [color=blue, key=0, style=bold];
m7_352 -> m7_361  [key=0, style=solid];
m7_352 -> m7_353  [key=0, style=solid];
m7_352 -> m7_355  [key=0, style=solid];
m7_352 -> m7_357  [key=0, style=solid];
m7_352 -> m7_359  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [key=0, style=solid];
m7_562 -> m7_563  [key=0, style=solid];
m7_563 -> m7_564  [key=0, style=solid];
m7_564 -> m7_565  [key=0, style=solid];
m7_564 -> m7_221  [key=2, style=dotted];
m7_564 -> m7_567  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_565 -> m7_566  [key=0, style=solid];
m7_565 -> m7_345  [key=2, style=dotted];
m7_567 -> m7_568  [key=0, style=solid];
m7_567 -> m7_15  [key=2, style=dotted];
m7_566 -> m7_567  [key=0, style=solid];
m7_566 -> m7_122  [key=2, style=dotted];
m7_568 -> m7_569  [key=0, style=solid];
m7_568 -> m7_122  [key=2, style=dotted];
m7_569 -> m7_562  [color=blue, key=0, style=bold];
m7_147 -> m7_74  [color=darkorchid, key=3, label="method methodReturn bool IsWrappedInTypeObject", style=bold];
m7_147 -> m7_273  [key=0, style=solid];
m7_147 -> m7_295  [color=darkorchid, key=3, label="method methodReturn bool IsWrappedInTypeObject", style=bold];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_151  [key=2, style=dotted];
m7_147 -> m7_143  [key=2, style=dotted];
m7_273 -> m7_274  [key=0, style=solid];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_284  [key=0, style=solid];
m7_275 -> m7_276  [key=0, style=solid];
m7_275 -> m7_277  [key=0, style=solid];
m7_275 -> m7_60  [key=2, style=dotted];
m7_278 -> m7_279  [key=0, style=solid];
m7_278 -> m7_60  [key=2, style=dotted];
m7_285 -> m7_147  [color=blue, key=0, style=bold];
m7_285 -> m7_286  [key=0, style=solid];
m7_310 -> m7_322  [key=0, style=solid];
m7_310 -> m7_323  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_310 -> m7_324  [color=darkseagreen4, key=1, label=XmlDocument, style=dashed];
m7_310 -> m7_311  [key=0, style=solid];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_319  [key=2, style=dotted];
m7_322 -> m7_325  [color=darkseagreen4, key=1, label=builder, style=dashed];
m7_323 -> m7_324  [key=0, style=solid];
m7_323 -> m7_312  [key=2, style=dotted];
m7_323 -> m7_63  [key=2, style=dotted];
m7_323 -> m7_61  [key=2, style=dotted];
m7_324 -> m7_325  [key=0, style=solid];
m7_324 -> m7_320  [key=2, style=dotted];
m7_325 -> m7_326  [key=0, style=solid];
m7_325 -> m7_321  [key=2, style=dotted];
m7_326 -> m7_310  [color=blue, key=0, style=bold];
m7_326 -> m7_327  [key=0, style=solid];
m7_473 -> m7_474  [key=0, style=solid];
m7_474 -> m7_475  [key=0, style=solid];
m7_474 -> m7_132  [key=2, style=dotted];
m7_474 -> m7_476  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_475 -> m7_476  [key=0, style=solid];
m7_475 -> m7_133  [key=2, style=dotted];
m7_476 -> m7_477  [key=0, style=solid];
m7_476 -> m7_15  [key=2, style=dotted];
m7_477 -> m7_478  [key=0, style=solid];
m7_477 -> m7_122  [key=2, style=dotted];
m7_478 -> m7_473  [color=blue, key=0, style=bold];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_52  [color=blue, key=0, style=bold];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_63  [key=2, style=dotted];
m7_62 -> m7_60  [color=blue, key=0, style=bold];
m7_586 -> m7_587  [key=0, style=solid];
m7_587 -> m7_588  [key=0, style=solid];
m7_587 -> m7_598  [key=2, style=dotted];
m7_587 -> m7_589  [color=darkseagreen4, key=1, label=product, style=dashed];
m7_587 -> m7_590  [color=darkseagreen4, key=1, label=product, style=dashed];
m7_587 -> m7_591  [color=darkseagreen4, key=1, label=product, style=dashed];
m7_587 -> m7_592  [color=darkseagreen4, key=1, label=product, style=dashed];
m7_588 -> m7_589  [key=0, style=solid];
m7_589 -> m7_590  [key=0, style=solid];
m7_589 -> m7_599  [key=2, style=dotted];
m7_590 -> m7_591  [key=0, style=solid];
m7_591 -> m7_592  [key=0, style=solid];
m7_592 -> m7_593  [key=0, style=solid];
m7_592 -> m7_600  [key=2, style=dotted];
m7_592 -> m7_601  [key=2, style=dotted];
m7_593 -> m7_594  [key=0, style=solid];
m7_593 -> m7_221  [key=2, style=dotted];
m7_593 -> m7_595  [color=darkseagreen4, key=1, label=xmlProduct, style=dashed];
m7_594 -> m7_595  [key=0, style=solid];
m7_594 -> m7_455  [key=2, style=dotted];
m7_594 -> m7_122  [key=2, style=dotted];
m7_595 -> m7_596  [key=0, style=solid];
m7_595 -> m7_15  [key=2, style=dotted];
m7_596 -> m7_597  [key=0, style=solid];
m7_596 -> m7_122  [key=2, style=dotted];
m7_597 -> m7_586  [color=blue, key=0, style=bold];
m7_395 -> m7_396  [key=0, style=solid];
m7_396 -> m7_397  [key=0, style=solid];
m7_396 -> m7_398  [key=2, style=dotted];
m7_396 -> m7_122  [key=2, style=dotted];
m7_397 -> m7_395  [color=blue, key=0, style=bold];
m7_397 -> m7_389  [color=blue, key=0, style=bold];
m7_834 -> m7_835  [key=0, style=solid];
m7_835 -> m7_836  [key=0, style=solid];
m7_836 -> m7_837  [key=0, style=solid];
m7_836 -> m7_120  [key=2, style=dotted];
m7_837 -> m7_838  [key=0, style=solid];
m7_837 -> m7_22  [key=2, style=dotted];
m7_838 -> m7_839  [key=0, style=solid];
m7_838 -> m7_23  [key=2, style=dotted];
m7_839 -> m7_834  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_23  [key=0, style=solid];
m7_183 -> m7_184  [key=0, style=solid];
m7_183 -> m7_197  [color=darkorchid, key=3, label="method methodReturn int? ReadAsInt32Internal", style=bold];
m7_183 -> m7_69  [color=darkorchid, key=3, label="method methodReturn int? ReadAsInt32Internal", style=bold];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_120  [key=2, style=dotted];
m7_184 -> m7_22  [key=2, style=dotted];
m7_184 -> m7_186  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_189  [key=0, style=solid];
m7_186 -> m7_60  [key=2, style=dotted];
m7_186 -> m7_75  [key=2, style=dotted];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_97  [key=2, style=dotted];
m7_187 -> m7_51  [key=2, style=dotted];
m7_187 -> m7_23  [key=2, style=dotted];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_191  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_189 -> m7_195  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_189 -> m7_198  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_189 -> m7_207  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_194  [key=0, style=solid];
m7_192 -> m7_15  [key=2, style=dotted];
m7_193 -> m7_99  [key=2, style=dotted];
m7_193 -> m7_194  [key=0, style=solid];
m7_193 -> m7_211  [key=2, style=dotted];
m7_193 -> m7_23  [key=2, style=dotted];
m7_194 -> m7_210  [key=0, style=solid];
m7_194 -> m7_195  [key=0, style=solid];
m7_194 -> m7_132  [key=2, style=dotted];
m7_194 -> m7_196  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_203  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_199 -> m7_22  [key=2, style=dotted];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_97  [key=2, style=dotted];
m7_201 -> m7_120  [key=2, style=dotted];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_206  [key=0, style=solid];
m7_203 -> m7_212  [key=2, style=dotted];
m7_203 -> m7_205  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_203 -> m7_23  [key=2, style=dotted];
m7_204 -> m7_99  [key=2, style=dotted];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_189  [color=blue, key=0, style=bold];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_23  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_190  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_185 -> m7_191  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_185 -> m7_195  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_185 -> m7_198  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_185 -> m7_207  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_185 -> m7_23  [key=2, style=dotted];
m7_188 -> m7_210  [key=0, style=solid];
m7_188 -> m7_182  [color=blue, key=0, style=bold];
m7_190 -> m7_185  [key=0, style=solid];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_132  [key=2, style=dotted];
m7_190 -> m7_192  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_195  [key=0, style=solid];
m7_191 -> m7_133  [key=2, style=dotted];
m7_195 -> m7_197  [key=0, style=solid];
m7_195 -> m7_196  [key=0, style=solid];
m7_195 -> m7_133  [key=2, style=dotted];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_207  [key=0, style=solid];
m7_198 -> m7_120  [key=2, style=dotted];
m7_200 -> m7_201  [key=0, style=solid];
m7_200 -> m7_203  [key=0, style=solid];
m7_200 -> m7_100  [key=2, style=dotted];
m7_200 -> m7_23  [key=2, style=dotted];
m7_202 -> m7_210  [key=0, style=solid];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_22  [key=2, style=dotted];
m7_196 -> m7_210  [key=0, style=solid];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_15  [key=2, style=dotted];
m7_101 -> m7_102  [key=0, style=solid];
m7_354 -> m7_355  [key=0, style=solid];
m7_354 -> m7_362  [key=0, style=solid];
m7_355 -> m7_356  [key=0, style=solid];
m7_355 -> m7_357  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_356 -> m7_357  [key=0, style=solid];
m7_356 -> m7_132  [key=2, style=dotted];
m7_356 -> m7_358  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_356 -> m7_360  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_356 -> m7_362  [key=0, style=solid];
m7_357 -> m7_358  [key=0, style=solid];
m7_357 -> m7_133  [key=2, style=dotted];
m7_358 -> m7_359  [key=0, style=solid];
m7_358 -> m7_15  [key=2, style=dotted];
m7_358 -> m7_362  [key=0, style=solid];
m7_360 -> m7_361  [key=0, style=solid];
m7_360 -> m7_23  [key=2, style=dotted];
m7_360 -> m7_362  [key=0, style=solid];
m7_360 -> m7_337  [key=2, style=dotted];
m7_359 -> m7_360  [key=0, style=solid];
m7_359 -> m7_24  [key=2, style=dotted];
m7_361 -> m7_354  [color=blue, key=0, style=bold];
m7_361 -> m7_362  [key=0, style=solid];
m7_361 -> m7_27  [key=2, style=dotted];
m7_361 -> m7_28  [key=2, style=dotted];
m7_407 -> m7_408  [key=0, style=solid];
m7_407 -> m7_133  [key=2, style=dotted];
m7_407 -> m7_124  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_125  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_126  [color=green, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_3  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_31  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_36  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_80  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_113  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_132  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_138  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_159  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_164  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_209  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_226  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_241  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_257  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_288  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_289  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_345  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_407 -> m7_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_408 -> m7_409  [key=0, style=solid];
m7_408 -> m7_15  [key=2, style=dotted];
m7_408 -> m7_410  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m7_409 -> m7_410  [key=0, style=solid];
m7_410 -> m7_411  [key=0, style=solid];
m7_410 -> m7_122  [key=2, style=dotted];
m7_411 -> m7_412  [key=0, style=solid];
m7_411 -> m7_413  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m7_412 -> m7_413  [key=0, style=solid];
m7_412 -> m7_132  [key=2, style=dotted];
m7_412 -> m7_414  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m7_413 -> m7_414  [key=0, style=solid];
m7_413 -> m7_133  [key=2, style=dotted];
m7_414 -> m7_415  [key=0, style=solid];
m7_414 -> m7_15  [key=2, style=dotted];
m7_414 -> m7_416  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m7_415 -> m7_416  [key=0, style=solid];
m7_416 -> m7_417  [key=0, style=solid];
m7_416 -> m7_122  [key=2, style=dotted];
m7_417 -> m7_418  [key=0, style=solid];
m7_417 -> m7_419  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m7_418 -> m7_419  [key=0, style=solid];
m7_418 -> m7_132  [key=2, style=dotted];
m7_418 -> m7_420  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m7_419 -> m7_420  [key=0, style=solid];
m7_419 -> m7_133  [key=2, style=dotted];
m7_420 -> m7_421  [key=0, style=solid];
m7_420 -> m7_15  [key=2, style=dotted];
m7_420 -> m7_422  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m7_421 -> m7_422  [key=0, style=solid];
m7_422 -> m7_423  [key=0, style=solid];
m7_422 -> m7_122  [key=2, style=dotted];
m7_423 -> m7_398  [color=blue, key=0, style=bold];
m7_457 -> m7_458  [key=0, style=solid];
m7_458 -> m7_459  [key=0, style=solid];
m7_458 -> m7_461  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_458 -> m7_464  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_459 -> m7_460  [key=0, style=solid];
m7_459 -> m7_221  [key=2, style=dotted];
m7_459 -> m7_463  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_461 -> m7_462  [key=0, style=solid];
m7_461 -> m7_75  [key=2, style=dotted];
m7_464 -> m7_465  [key=0, style=solid];
m7_464 -> m7_122  [key=2, style=dotted];
m7_460 -> m7_461  [key=0, style=solid];
m7_460 -> m7_455  [key=2, style=dotted];
m7_460 -> m7_122  [key=2, style=dotted];
m7_463 -> m7_464  [key=0, style=solid];
m7_463 -> m7_15  [key=2, style=dotted];
m7_462 -> m7_463  [key=0, style=solid];
m7_462 -> m7_51  [key=2, style=dotted];
m7_462 -> m7_455  [key=2, style=dotted];
m7_462 -> m7_122  [key=2, style=dotted];
m7_465 -> m7_457  [color=blue, key=0, style=bold];
m7_287 -> m7_288  [key=0, style=solid];
m7_287 -> m7_293  [key=2, style=dotted];
m7_288 -> m7_289  [key=0, style=solid];
m7_288 -> m7_290  [key=0, style=solid];
m7_288 -> m7_288  [color=darkseagreen4, key=1, label=fragement, style=dashed];
m7_289 -> m7_290  [key=0, style=solid];
m7_289 -> m7_46  [key=2, style=dotted];
m7_289 -> m7_15  [key=2, style=dotted];
m7_289 -> m7_291  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_290 -> m7_291  [key=0, style=solid];
m7_290 -> m7_293  [key=0, style=solid];
m7_290 -> m7_294  [key=2, style=dotted];
m7_291 -> m7_292  [key=0, style=solid];
m7_291 -> m7_23  [key=2, style=dotted];
m7_292 -> m7_292  [key=0, style=solid];
m7_292 -> m7_293  [key=0, style=solid];
m7_292 -> m7_46  [key=2, style=dotted];
m7_292 -> m7_285  [color=blue, key=0, style=bold];
m7_293 -> m7_287  [color=blue, key=0, style=bold];
m7_165 -> m7_167  [key=0, style=solid];
m7_165 -> m7_166  [key=0, style=solid];
m7_578 -> m7_579  [key=0, style=solid];
m7_579 -> m7_580  [key=0, style=solid];
m7_579 -> m7_584  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_580 -> m7_581  [key=0, style=solid];
m7_580 -> m7_582  [key=2, style=dotted];
m7_580 -> m7_583  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_581 -> m7_578  [color=blue, key=0, style=bold];
m7_489 -> m7_490  [key=0, style=solid];
m7_490 -> m7_491  [key=0, style=solid];
m7_490 -> m7_492  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_491 -> m7_492  [key=0, style=solid];
m7_491 -> m7_132  [key=2, style=dotted];
m7_491 -> m7_493  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_491 -> m7_497  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_492 -> m7_493  [key=0, style=solid];
m7_492 -> m7_133  [key=2, style=dotted];
m7_493 -> m7_494  [key=0, style=solid];
m7_493 -> m7_15  [key=2, style=dotted];
m7_497 -> m7_498  [key=0, style=solid];
m7_497 -> m7_23  [key=2, style=dotted];
m7_494 -> m7_495  [key=0, style=solid];
m7_494 -> m7_499  [key=2, style=dotted];
m7_494 -> m7_500  [key=2, style=dotted];
m7_494 -> m7_494  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_494 -> m7_496  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_495 -> m7_496  [key=0, style=solid];
m7_495 -> m7_122  [key=2, style=dotted];
m7_496 -> m7_497  [key=0, style=solid];
m7_496 -> m7_24  [key=2, style=dotted];
m7_498 -> m7_489  [color=blue, key=0, style=bold];
m7_685 -> m7_686  [key=0, style=solid];
m7_686 -> m7_687  [key=0, style=solid];
m7_686 -> m7_688  [color=darkseagreen4, key=1, label=xaml, style=dashed];
m7_687 -> m7_688  [key=0, style=solid];
m7_687 -> m7_132  [key=2, style=dotted];
m7_687 -> m7_689  [color=darkseagreen4, key=1, label=document, style=dashed];
m7_688 -> m7_689  [key=0, style=solid];
m7_688 -> m7_133  [key=2, style=dotted];
m7_689 -> m7_690  [key=0, style=solid];
m7_689 -> m7_15  [key=2, style=dotted];
m7_689 -> m7_691  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_689 -> m7_692  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_690 -> m7_691  [key=0, style=solid];
m7_691 -> m7_692  [key=0, style=solid];
m7_691 -> m7_122  [key=2, style=dotted];
m7_692 -> m7_693  [key=0, style=solid];
m7_692 -> m7_221  [key=2, style=dotted];
m7_692 -> m7_695  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_693 -> m7_694  [key=0, style=solid];
m7_693 -> m7_62  [key=2, style=dotted];
m7_693 -> m7_697  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_695 -> m7_696  [key=0, style=solid];
m7_695 -> m7_353  [key=2, style=dotted];
m7_694 -> m7_695  [key=0, style=solid];
m7_694 -> m7_63  [key=2, style=dotted];
m7_694 -> m7_61  [key=2, style=dotted];
m7_694 -> m7_696  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_697 -> m7_698  [key=0, style=solid];
m7_697 -> m7_67  [key=2, style=dotted];
m7_697 -> m7_699  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m7_696 -> m7_697  [key=0, style=solid];
m7_696 -> m7_66  [key=2, style=dotted];
m7_698 -> m7_699  [key=0, style=solid];
m7_699 -> m7_700  [key=0, style=solid];
m7_699 -> m7_122  [key=2, style=dotted];
m7_700 -> m7_685  [color=blue, key=0, style=bold];
m7_286 -> m7_287  [key=0, style=solid];
m7_286 -> m7_132  [key=2, style=dotted];
m7_501 -> m7_502  [key=0, style=solid];
m7_502 -> m7_503  [key=0, style=solid];
m7_503 -> m7_504  [key=0, style=solid];
m7_503 -> m7_24  [key=2, style=dotted];
m7_504 -> m7_505  [key=0, style=solid];
m7_504 -> m7_23  [key=2, style=dotted];
m7_505 -> m7_501  [color=blue, key=0, style=bold];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_52  [key=2, style=dotted];
m7_112 -> m7_114  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_112 -> m7_115  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_118  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_113 -> m7_60  [key=2, style=dotted];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_120  [key=2, style=dotted];
m7_114 -> m7_99  [key=2, style=dotted];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_51  [key=2, style=dotted];
m7_118 -> m7_23  [key=2, style=dotted];
m7_118 -> m7_148  [key=2, style=dotted];
m7_118 -> m7_120  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_121  [key=2, style=dotted];
m7_115 -> m7_117  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_115 -> m7_146  [key=0, style=solid];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_122  [key=2, style=dotted];
m7_116 -> m7_121  [key=0, style=solid];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_110  [key=2, style=dotted];
m7_119 -> m7_112  [color=blue, key=0, style=bold];
m7_119 -> m7_99  [key=2, style=dotted];
m7_119 -> m7_120  [key=0, style=solid];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_180  [key=0, style=solid];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_177  [key=2, style=dotted];
m7_167 -> m7_178  [key=2, style=dotted];
m7_167 -> m7_179  [key=2, style=dotted];
m7_167 -> m7_180  [key=2, style=dotted];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_181  [key=2, style=dotted];
m7_168 -> m7_175  [color=darkseagreen4, key=1, label=x, style=dashed];
m7_168 -> m7_177  [key=0, style=solid];
m7_169 -> m7_170  [key=0, style=solid];
m7_169 -> m7_164  [key=2, style=dotted];
m7_169 -> m7_173  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_23  [key=2, style=dotted];
m7_175 -> m7_180  [key=0, style=solid];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_97  [key=2, style=dotted];
m7_170 -> m7_48  [key=2, style=dotted];
m7_170 -> m7_165  [key=2, style=dotted];
m7_170 -> m7_173  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m7_170 -> m7_100  [key=2, style=dotted];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_51  [key=2, style=dotted];
m7_171 -> m7_97  [key=2, style=dotted];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_121  [key=2, style=dotted];
m7_173 -> m7_176  [key=0, style=solid];
m7_173 -> m7_182  [key=2, style=dotted];
m7_173 -> m7_175  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_172 -> m7_173  [key=0, style=solid];
m7_172 -> m7_23  [key=2, style=dotted];
m7_172 -> m7_180  [key=0, style=solid];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_110  [key=2, style=dotted];
m7_174 -> m7_99  [key=2, style=dotted];
m7_176 -> m7_166  [color=blue, key=0, style=bold];
m7_176 -> m7_180  [key=0, style=solid];
m7_176 -> m7_27  [key=2, style=dotted];
m7_176 -> m7_28  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_27 -> m7_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_21 -> m7_22  [key=0, style=solid];
m7_142 -> m7_146  [key=0, style=solid];
m7_142 -> m7_28  [key=2, style=dotted];
m7_775 -> m7_776  [key=0, style=solid];
m7_776 -> m7_777  [key=0, style=solid];
m7_776 -> m7_75  [key=2, style=dotted];
m7_776 -> m7_778  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_777 -> m7_778  [key=0, style=solid];
m7_777 -> m7_23  [key=2, style=dotted];
m7_778 -> m7_779  [key=0, style=solid];
m7_778 -> m7_23  [key=2, style=dotted];
m7_779 -> m7_775  [color=blue, key=0, style=bold];
m7_431 -> m7_432  [key=0, style=solid];
m7_432 -> m7_433  [key=0, style=solid];
m7_432 -> m7_436  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_433 -> m7_434  [key=0, style=solid];
m7_433 -> m7_142  [key=2, style=dotted];
m7_433 -> m7_435  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_434 -> m7_431  [color=blue, key=0, style=bold];
m7_706 -> m7_707  [key=0, style=solid];
m7_707 -> m7_708  [key=0, style=solid];
m7_707 -> m7_712  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m7_708 -> m7_709  [key=0, style=solid];
m7_708 -> m7_120  [key=2, style=dotted];
m7_712 -> m7_713  [key=0, style=solid];
m7_712 -> m7_133  [key=2, style=dotted];
m7_709 -> m7_710  [key=0, style=solid];
m7_709 -> m7_121  [key=2, style=dotted];
m7_710 -> m7_711  [key=0, style=solid];
m7_710 -> m7_23  [key=2, style=dotted];
m7_711 -> m7_712  [key=0, style=solid];
m7_711 -> m7_132  [key=2, style=dotted];
m7_711 -> m7_713  [color=darkseagreen4, key=1, label=xml1, style=dashed];
m7_713 -> m7_714  [key=0, style=solid];
m7_713 -> m7_121  [key=2, style=dotted];
m7_714 -> m7_715  [key=0, style=solid];
m7_714 -> m7_23  [key=2, style=dotted];
m7_715 -> m7_706  [color=blue, key=0, style=bold];
m7_800 -> m7_801  [key=0, style=solid];
m7_801 -> m7_802  [key=0, style=solid];
m7_802 -> m7_803  [key=0, style=solid];
m7_802 -> m7_75  [key=2, style=dotted];
m7_802 -> m7_804  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m7_803 -> m7_804  [key=0, style=solid];
m7_803 -> m7_271  [key=2, style=dotted];
m7_803 -> m7_23  [key=2, style=dotted];
m7_804 -> m7_805  [key=0, style=solid];
m7_804 -> m7_271  [key=2, style=dotted];
m7_804 -> m7_84  [key=2, style=dotted];
m7_805 -> m7_800  [color=blue, key=0, style=bold];
m7_17 -> m7_23  [key=0, style=solid];
m7_17 -> m7_25  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_108 -> m7_146  [key=0, style=solid];
m7_438 -> m7_439  [key=0, style=solid];
m7_439 -> m7_440  [key=0, style=solid];
m7_439 -> m7_442  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_440 -> m7_441  [key=0, style=solid];
m7_440 -> m7_221  [key=2, style=dotted];
m7_442 -> m7_443  [key=0, style=solid];
m7_442 -> m7_75  [key=2, style=dotted];
m7_441 -> m7_442  [key=0, style=solid];
m7_441 -> m7_23  [key=2, style=dotted];
m7_443 -> m7_444  [key=0, style=solid];
m7_443 -> m7_51  [key=2, style=dotted];
m7_443 -> m7_23  [key=2, style=dotted];
m7_444 -> m7_438  [color=blue, key=0, style=bold];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_78  [key=0, style=solid];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_82  [color=darkseagreen4, key=1, label=json1, style=dashed];
m7_77 -> m7_96  [key=0, style=solid];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_75  [key=2, style=dotted];
m7_78 -> m7_80  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_78 -> m7_81  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_23  [key=2, style=dotted];
m7_82 -> m7_97  [key=2, style=dotted];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_51  [key=2, style=dotted];
m7_79 -> m7_84  [key=2, style=dotted];
m7_79 -> m7_93  [key=0, style=solid];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_51  [key=2, style=dotted];
m7_80 -> m7_23  [key=2, style=dotted];
m7_80 -> m7_85  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_80 -> m7_89  [color=darkseagreen4, key=1, label=s, style=dashed];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_22  [key=2, style=dotted];
m7_81 -> m7_84  [key=0, style=solid];
m7_81 -> m7_100  [key=2, style=dotted];
m7_83 -> m7_76  [color=blue, key=0, style=bold];
m7_83 -> m7_96  [key=0, style=solid];
m7_815 -> m7_816  [key=0, style=solid];
m7_816 -> m7_817  [key=0, style=solid];
m7_817 -> m7_818  [key=0, style=solid];
m7_817 -> m7_75  [key=2, style=dotted];
m7_817 -> m7_819  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m7_818 -> m7_819  [key=0, style=solid];
m7_818 -> m7_271  [key=2, style=dotted];
m7_818 -> m7_23  [key=2, style=dotted];
m7_819 -> m7_820  [key=0, style=solid];
m7_819 -> m7_271  [key=2, style=dotted];
m7_819 -> m7_84  [key=2, style=dotted];
m7_820 -> m7_815  [color=blue, key=0, style=bold];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_146  [key=0, style=solid];
m7_145 -> m7_146  [key=0, style=solid];
m7_145 -> m7_27  [key=2, style=dotted];
m7_145 -> m7_28  [key=2, style=dotted];
m7_146 -> m7_147  [key=0, style=solid];
m7_146 -> m7_120  [key=2, style=dotted];
m7_146 -> m7_103  [color=blue, key=0, style=bold];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_122  [key=2, style=dotted];
m7_150 -> m7_144  [color=blue, key=0, style=bold];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_167  [color=darkorchid, key=3, label="method methodReturn decimal? ReadAsDecimalInternal", style=bold];
m7_153 -> m7_69  [color=darkorchid, key=3, label="method methodReturn decimal? ReadAsDecimalInternal", style=bold];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_163  [key=2, style=dotted];
m7_154 -> m7_161  [color=darkseagreen4, key=1, label=x, style=dashed];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_159  [key=0, style=solid];
m7_156 -> m7_60  [key=2, style=dotted];
m7_156 -> m7_97  [key=2, style=dotted];
m7_156 -> m7_48  [key=2, style=dotted];
m7_156 -> m7_165  [key=2, style=dotted];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_97  [key=2, style=dotted];
m7_157 -> m7_51  [key=2, style=dotted];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> m7_161  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_159 -> m7_165  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_159 -> m7_168  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_159 -> m7_177  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_159 -> m7_179  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_159 -> m7_121  [key=2, style=dotted];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_164  [key=0, style=solid];
m7_162 -> m7_152  [color=blue, key=0, style=bold];
m7_164 -> m7_180  [key=0, style=solid];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_179  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_155 -> m7_160  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_155 -> m7_161  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_155 -> m7_165  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_155 -> m7_168  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_155 -> m7_177  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_155 -> m7_164  [key=2, style=dotted];
m7_158 -> m7_180  [key=0, style=solid];
m7_158 -> m7_159  [key=0, style=solid];
m7_158 -> m7_23  [key=2, style=dotted];
m7_160 -> m7_155  [key=0, style=solid];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> m7_110  [key=2, style=dotted];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_165  [key=0, style=solid];
m7_161 -> m7_23  [key=2, style=dotted];
m7_177 -> m7_179  [key=0, style=solid];
m7_177 -> m7_178  [key=0, style=solid];
m7_178 -> m7_180  [key=0, style=solid];
m7_23 -> m7_14  [color=blue, key=0, style=bold];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_109  [key=2, style=dotted];
m7_103 -> m7_105  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_103 -> m7_125  [color=green, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m7_103 -> m7_69  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m7_103 -> m7_112  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m7_103 -> m7_118  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m7_103 -> m7_137  [color=darkorchid, key=3, label="method methodReturn byte[] ReadAsBytesInternal", style=bold];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_23  [key=2, style=dotted];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_110  [key=2, style=dotted];
m7_105 -> m7_123  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_105 -> m7_145  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_105 -> m7_116  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_105 -> m7_121  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_105 -> m7_129  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_105 -> m7_143  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_111  [key=2, style=dotted];
m7_106 -> m7_109  [key=0, style=solid];
m7_106 -> m7_60  [key=2, style=dotted];
m7_107 -> m7_101  [color=blue, key=0, style=bold];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_97  [key=2, style=dotted];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_26  [key=2, style=dotted];
m7_716 -> m7_717  [key=0, style=solid];
m7_717 -> m7_718  [key=0, style=solid];
m7_717 -> m7_724  [key=2, style=dotted];
m7_717 -> m7_120  [key=2, style=dotted];
m7_717 -> m7_720  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_717 -> m7_721  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_717 -> m7_722  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_718 -> m7_719  [key=0, style=solid];
m7_718 -> m7_109  [key=2, style=dotted];
m7_720 -> m7_721  [key=0, style=solid];
m7_720 -> m7_23  [key=2, style=dotted];
m7_721 -> m7_722  [key=0, style=solid];
m7_721 -> m7_23  [key=2, style=dotted];
m7_722 -> m7_723  [key=0, style=solid];
m7_722 -> m7_51  [key=2, style=dotted];
m7_722 -> m7_23  [key=2, style=dotted];
m7_719 -> m7_720  [key=0, style=solid];
m7_719 -> m7_110  [key=2, style=dotted];
m7_719 -> m7_721  [color=darkseagreen4, key=1, label=w2, style=dashed];
m7_719 -> m7_722  [color=darkseagreen4, key=1, label=w2, style=dashed];
m7_723 -> m7_716  [color=blue, key=0, style=bold];
m7_84 -> m7_85  [key=0, style=solid];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_9  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_13  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_23  [key=2, style=dotted];
m7_12 -> m7_5  [color=blue, key=0, style=bold];
m7_5 -> m7_11  [key=0, style=solid];
m7_5 -> m7_17  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_20  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_21  [key=2, style=dotted];
m7_8 -> m7_11  [key=0, style=solid];
m7_8 -> m7_18  [key=2, style=dotted];
m7_8 -> m7_19  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_22  [key=2, style=dotted];
m7_14 -> m7_0  [color=blue, key=0, style=bold];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m7_14 -> m7_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonContainerType", style=dashed];
m7_14 -> m7_85  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m7_14 -> m7_283  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m7_14 -> m7_311  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonContainerType value", style=bold];
m7_848 -> m7_849  [key=0, style=solid];
m7_849 -> m7_850  [key=0, style=solid];
m7_849 -> m7_856  [key=2, style=dotted];
m7_849 -> m7_851  [color=darkseagreen4, key=1, label=original, style=dashed];
m7_850 -> m7_851  [key=0, style=solid];
m7_850 -> m7_51  [key=2, style=dotted];
m7_850 -> m7_23  [key=2, style=dotted];
m7_851 -> m7_852  [key=0, style=solid];
m7_851 -> m7_121  [key=2, style=dotted];
m7_851 -> m7_853  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_852 -> m7_853  [key=0, style=solid];
m7_852 -> m7_23  [key=2, style=dotted];
m7_853 -> m7_854  [key=0, style=solid];
m7_853 -> m7_110  [key=2, style=dotted];
m7_854 -> m7_855  [key=0, style=solid];
m7_854 -> m7_51  [key=2, style=dotted];
m7_854 -> m7_23  [key=2, style=dotted];
m7_855 -> m7_848  [color=blue, key=0, style=bold];
m7_28 -> m7_29  [key=0, style=solid];
m7_122 -> m7_146  [key=0, style=solid];
m7_759 -> m7_760  [key=0, style=solid];
m7_386 -> m7_387  [key=0, style=solid];
m7_386 -> m7_393  [key=0, style=solid];
m7_386 -> m7_389  [key=0, style=solid];
m7_386 -> m7_391  [key=0, style=solid];
m7_387 -> m7_388  [key=0, style=solid];
m7_387 -> m7_221  [key=2, style=dotted];
m7_388 -> m7_386  [color=blue, key=0, style=bold];
m7_388 -> m7_394  [key=0, style=solid];
m7_429 -> m7_430  [key=0, style=solid];
m7_429 -> m7_221  [key=2, style=dotted];
m7_428 -> m7_429  [key=0, style=solid];
m7_430 -> m7_428  [color=blue, key=0, style=bold];
m7_436 -> m7_437  [key=0, style=solid];
m7_436 -> m7_75  [key=2, style=dotted];
m7_435 -> m7_436  [key=0, style=solid];
m7_437 -> m7_435  [color=blue, key=0, style=bold];
m7_560 -> m7_561  [key=0, style=solid];
m7_560 -> m7_221  [key=2, style=dotted];
m7_559 -> m7_560  [key=0, style=solid];
m7_561 -> m7_559  [color=blue, key=0, style=bold];
m7_584 -> m7_585  [key=0, style=solid];
m7_584 -> m7_24  [key=2, style=dotted];
m7_583 -> m7_584  [key=0, style=solid];
m7_585 -> m7_583  [color=blue, key=0, style=bold];
m7_760 -> m7_761  [key=0, style=solid];
m7_760 -> m7_221  [key=2, style=dotted];
m7_761 -> m7_759  [color=blue, key=0, style=bold];
m7_635 -> m7_636  [key=0, style=solid];
m7_636 -> m7_637  [key=0, style=solid];
m7_636 -> m7_643  [key=2, style=dotted];
m7_637 -> m7_638  [key=0, style=solid];
m7_637 -> m7_644  [key=2, style=dotted];
m7_637 -> m7_639  [color=darkseagreen4, key=1, label=obj, style=dashed];
m7_638 -> m7_639  [key=0, style=solid];
m7_638 -> m7_97  [key=2, style=dotted];
m7_638 -> m7_48  [key=2, style=dotted];
m7_638 -> m7_645  [key=2, style=dotted];
m7_638 -> m7_640  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_639 -> m7_640  [key=0, style=solid];
m7_639 -> m7_646  [key=2, style=dotted];
m7_640 -> m7_641  [key=0, style=solid];
m7_640 -> m7_647  [key=2, style=dotted];
m7_641 -> m7_642  [key=0, style=solid];
m7_641 -> m7_23  [key=2, style=dotted];
m7_642 -> m7_635  [color=blue, key=0, style=bold];
m7_701 -> m7_702  [key=0, style=solid];
m7_702 -> m7_703  [key=0, style=solid];
m7_703 -> m7_704  [key=0, style=solid];
m7_703 -> m7_221  [key=2, style=dotted];
m7_704 -> m7_705  [key=0, style=solid];
m7_704 -> m7_23  [key=2, style=dotted];
m7_705 -> m7_701  [color=blue, key=0, style=bold];
m7_513 -> m7_514  [key=0, style=solid];
m7_514 -> m7_515  [key=0, style=solid];
m7_514 -> m7_527  [key=2, style=dotted];
m7_514 -> m7_516  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m7_514 -> m7_517  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m7_515 -> m7_516  [key=0, style=solid];
m7_515 -> m7_527  [key=2, style=dotted];
m7_515 -> m7_528  [key=2, style=dotted];
m7_516 -> m7_517  [key=0, style=solid];
m7_516 -> m7_528  [key=2, style=dotted];
m7_517 -> m7_518  [key=0, style=solid];
m7_517 -> m7_97  [key=2, style=dotted];
m7_517 -> m7_529  [key=2, style=dotted];
m7_517 -> m7_519  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_518 -> m7_519  [key=0, style=solid];
m7_518 -> m7_122  [key=2, style=dotted];
m7_519 -> m7_520  [key=0, style=solid];
m7_519 -> m7_27  [key=2, style=dotted];
m7_519 -> m7_523  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_520 -> m7_521  [key=0, style=solid];
m7_520 -> m7_345  [key=2, style=dotted];
m7_520 -> m7_522  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_523 -> m7_524  [key=0, style=solid];
m7_523 -> m7_0  [key=2, style=dotted];
m7_523 -> m7_525  [color=darkseagreen4, key=1, label=xmlJson, style=dashed];
m7_521 -> m7_522  [key=0, style=solid];
m7_522 -> m7_523  [key=0, style=solid];
m7_522 -> m7_122  [key=2, style=dotted];
m7_524 -> m7_525  [key=0, style=solid];
m7_525 -> m7_526  [key=0, style=solid];
m7_525 -> m7_122  [key=2, style=dotted];
m7_526 -> m7_513  [color=blue, key=0, style=bold];
m7_827 -> m7_828  [key=0, style=solid];
m7_828 -> m7_829  [key=0, style=solid];
m7_828 -> m7_813  [key=2, style=dotted];
m7_828 -> m7_831  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_829 -> m7_830  [key=0, style=solid];
m7_831 -> m7_832  [key=0, style=solid];
m7_831 -> m7_814  [key=2, style=dotted];
m7_831 -> m7_271  [key=2, style=dotted];
m7_831 -> m7_23  [key=2, style=dotted];
m7_830 -> m7_831  [key=0, style=solid];
m7_830 -> m7_75  [key=2, style=dotted];
m7_830 -> m7_832  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m7_832 -> m7_833  [key=0, style=solid];
m7_832 -> m7_271  [key=2, style=dotted];
m7_832 -> m7_84  [key=2, style=dotted];
m7_833 -> m7_827  [color=blue, key=0, style=bold];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_45  [key=2, style=dotted];
m7_29 -> m7_46  [key=2, style=dotted];
m7_29 -> m7_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [key=0, style=solid];
m7_32 -> m7_39  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_33  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_33 -> m7_38  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_45  [key=2, style=dotted];
m7_36 -> m7_46  [key=2, style=dotted];
m7_36 -> m7_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_36 -> m7_42  [key=2, style=dotted];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_47  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_49  [key=2, style=dotted];
m7_34 -> m7_50  [key=2, style=dotted];
m7_34 -> m7_43  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_34 -> m7_37  [key=0, style=solid];
m7_34 -> m7_41  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_48  [key=2, style=dotted];
m7_31 -> m7_33  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_31 -> m7_34  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_31 -> m7_38  [color=darkseagreen4, key=1, label=converter, style=dashed];
m7_31 -> m7_35  [key=0, style=solid];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_49  [key=2, style=dotted];
m7_38 -> m7_50  [key=2, style=dotted];
m7_38 -> m7_40  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_38 -> m7_41  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_42  [color=darkseagreen4, key=1, label=xmlText, style=dashed];
m7_35 -> m7_39  [color=darkseagreen4, key=1, label=oldPosition, style=dashed];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_47  [key=2, style=dotted];
m7_37 -> m7_39  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_51  [key=2, style=dotted];
m7_39 -> m7_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m7_39 -> m7_42  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_42  [key=0, style=solid];
m7_40 -> m7_29  [color=blue, key=0, style=bold];
m7_65 -> m7_66  [key=0, style=solid];
m7_755 -> m7_756  [key=0, style=solid];
m7_756 -> m7_757  [key=0, style=solid];
m7_756 -> m7_760  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_757 -> m7_758  [key=0, style=solid];
m7_757 -> m7_142  [key=2, style=dotted];
m7_757 -> m7_759  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_758 -> m7_755  [color=blue, key=0, style=bold];
m7_466 -> m7_467  [key=0, style=solid];
m7_467 -> m7_468  [key=0, style=solid];
m7_467 -> m7_470  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_468 -> m7_469  [key=0, style=solid];
m7_468 -> m7_221  [key=2, style=dotted];
m7_470 -> m7_471  [key=0, style=solid];
m7_470 -> m7_75  [key=2, style=dotted];
m7_469 -> m7_470  [key=0, style=solid];
m7_469 -> m7_23  [key=2, style=dotted];
m7_471 -> m7_472  [key=0, style=solid];
m7_471 -> m7_51  [key=2, style=dotted];
m7_471 -> m7_23  [key=2, style=dotted];
m7_472 -> m7_466  [color=blue, key=0, style=bold];
m7_794 -> m7_795  [key=0, style=solid];
m7_795 -> m7_796  [key=0, style=solid];
m7_796 -> m7_797  [key=0, style=solid];
m7_796 -> m7_75  [key=2, style=dotted];
m7_796 -> m7_798  [color=darkseagreen4, key=1, label=dxml, style=dashed];
m7_797 -> m7_798  [key=0, style=solid];
m7_797 -> m7_271  [key=2, style=dotted];
m7_797 -> m7_23  [key=2, style=dotted];
m7_798 -> m7_799  [key=0, style=solid];
m7_798 -> m7_271  [key=2, style=dotted];
m7_798 -> m7_84  [key=2, style=dotted];
m7_799 -> m7_794  [color=blue, key=0, style=bold];
m7_389 -> m7_390  [key=0, style=solid];
m7_390 -> m7_391  [key=0, style=solid];
m7_390 -> m7_394  [key=0, style=solid];
m7_391 -> m7_392  [key=0, style=solid];
m7_391 -> m7_24  [key=2, style=dotted];
m7_391 -> m7_393  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_391 -> m7_394  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m7_392 -> m7_393  [key=0, style=solid];
m7_392 -> m7_394  [key=0, style=solid];
m7_393 -> m7_394  [key=0, style=solid];
m7_393 -> m7_23  [key=2, style=dotted];
m7_393 -> m7_27  [key=2, style=dotted];
m7_393 -> m7_28  [key=2, style=dotted];
m7_394 -> m7_395  [key=0, style=solid];
m7_394 -> m7_15  [key=2, style=dotted];
m7_394 -> m7_396  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_394 -> m7_348  [color=blue, key=0, style=bold];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_95  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_66 -> m7_71  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_66 -> m7_72  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_66 -> m7_76  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_66 -> m7_79  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_66 -> m7_93  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_109 -> m7_123  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_116  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_109 -> m7_121  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_109 -> m7_129  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_109 -> m7_143  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_109 -> m7_145  [color=darkseagreen4, key=1, label=t, style=dashed];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_105  [key=0, style=solid];
m7_741 -> m7_742  [key=0, style=solid];
m7_742 -> m7_743  [key=0, style=solid];
m7_743 -> m7_744  [key=0, style=solid];
m7_743 -> m7_221  [key=2, style=dotted];
m7_743 -> m7_745  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_744 -> m7_745  [key=0, style=solid];
m7_744 -> m7_23  [key=2, style=dotted];
m7_745 -> m7_746  [key=0, style=solid];
m7_745 -> m7_15  [key=2, style=dotted];
m7_746 -> m7_747  [key=0, style=solid];
m7_746 -> m7_23  [key=2, style=dotted];
m7_747 -> m7_741  [color=blue, key=0, style=bold];
m7_311 -> m7_314  [key=0, style=solid];
m7_311 -> m7_315  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_311 -> m7_316  [color=darkseagreen4, key=1, label=XDocument, style=dashed];
m7_311 -> m7_335  [key=0, style=solid];
m7_311 -> m7_14  [key=2, style=dotted];
m7_314 -> m7_315  [key=0, style=solid];
m7_314 -> m7_319  [key=2, style=dotted];
m7_314 -> m7_317  [color=darkseagreen4, key=1, label=builder, style=dashed];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_312  [key=2, style=dotted];
m7_315 -> m7_63  [key=2, style=dotted];
m7_315 -> m7_61  [key=2, style=dotted];
m7_315 -> m7_335  [key=0, style=solid];
m7_315 -> m7_336  [key=2, style=dotted];
m7_316 -> m7_317  [key=0, style=solid];
m7_316 -> m7_320  [key=2, style=dotted];
m7_317 -> m7_318  [key=0, style=solid];
m7_317 -> m7_321  [key=2, style=dotted];
m7_317 -> m7_335  [key=0, style=solid];
m7_317 -> m7_336  [key=2, style=dotted];
m7_318 -> m7_311  [color=blue, key=0, style=bold];
m7_318 -> m7_319  [key=0, style=solid];
m7_733 -> m7_734  [key=0, style=solid];
m7_734 -> m7_735  [key=0, style=solid];
m7_734 -> m7_736  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m7_735 -> m7_736  [key=0, style=solid];
m7_735 -> m7_132  [key=2, style=dotted];
m7_735 -> m7_737  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_736 -> m7_737  [key=0, style=solid];
m7_736 -> m7_133  [key=2, style=dotted];
m7_737 -> m7_738  [key=0, style=solid];
m7_737 -> m7_15  [key=2, style=dotted];
m7_738 -> m7_739  [key=0, style=solid];
m7_738 -> m7_142  [key=2, style=dotted];
m7_739 -> m7_740  [key=0, style=solid];
m7_739 -> m7_23  [key=2, style=dotted];
m7_740 -> m7_733  [color=blue, key=0, style=bold];
m7_780 -> m7_781  [key=0, style=solid];
m7_781 -> m7_782  [key=0, style=solid];
m7_781 -> m7_774  [key=2, style=dotted];
m7_782 -> m7_783  [key=0, style=solid];
m7_782 -> m7_786  [key=2, style=dotted];
m7_782 -> m7_782  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_783 -> m7_784  [key=0, style=solid];
m7_783 -> m7_22  [key=2, style=dotted];
m7_784 -> m7_785  [key=0, style=solid];
m7_784 -> m7_23  [key=2, style=dotted];
m7_785 -> m7_780  [color=blue, key=0, style=bold];
m7_337 -> m7_363  [key=0, style=solid];
m7_337 -> m7_338  [key=0, style=solid];
m7_506 -> m7_507  [key=0, style=solid];
m7_507 -> m7_508  [key=0, style=solid];
m7_508 -> m7_509  [key=0, style=solid];
m7_508 -> m7_24  [key=2, style=dotted];
m7_508 -> m7_510  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_509 -> m7_510  [key=0, style=solid];
m7_509 -> m7_23  [key=2, style=dotted];
m7_510 -> m7_511  [key=0, style=solid];
m7_510 -> m7_15  [key=2, style=dotted];
m7_511 -> m7_512  [key=0, style=solid];
m7_511 -> m7_122  [key=2, style=dotted];
m7_512 -> m7_506  [color=blue, key=0, style=bold];
m7_857 -> m7_858  [key=0, style=solid];
m7_858 -> m7_859  [key=0, style=solid];
m7_858 -> m7_120  [key=2, style=dotted];
m7_858 -> m7_860  [color=darkseagreen4, key=1, label=original, style=dashed];
m7_859 -> m7_860  [key=0, style=solid];
m7_859 -> m7_51  [key=2, style=dotted];
m7_859 -> m7_23  [key=2, style=dotted];
m7_860 -> m7_861  [key=0, style=solid];
m7_860 -> m7_121  [key=2, style=dotted];
m7_860 -> m7_862  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_861 -> m7_862  [key=0, style=solid];
m7_861 -> m7_23  [key=2, style=dotted];
m7_862 -> m7_863  [key=0, style=solid];
m7_862 -> m7_110  [key=2, style=dotted];
m7_863 -> m7_864  [key=0, style=solid];
m7_863 -> m7_51  [key=2, style=dotted];
m7_863 -> m7_23  [key=2, style=dotted];
m7_864 -> m7_857  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_27  [key=2, style=dotted];
m7_22 -> m7_28  [key=2, style=dotted];
m7_555 -> m7_556  [key=0, style=solid];
m7_556 -> m7_557  [key=0, style=solid];
m7_556 -> m7_560  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_557 -> m7_558  [key=0, style=solid];
m7_557 -> m7_142  [key=2, style=dotted];
m7_557 -> m7_559  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_558 -> m7_555  [color=blue, key=0, style=bold];
m7_52 -> m7_53  [key=0, style=solid];
m7_53 -> m7_52  [color=blue, key=0, style=bold];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_46  [key=2, style=dotted];
m7_53 -> m7_61  [key=2, style=dotted];
m7_53 -> m7_56  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_53 -> m7_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m7_54 -> m7_55  [key=0, style=solid];
m7_54 -> m7_62  [key=2, style=dotted];
m7_54 -> m7_59  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_58  [key=0, style=solid];
m7_56 -> m7_64  [key=2, style=dotted];
m7_57 -> m7_56  [key=0, style=solid];
m7_57 -> m7_65  [key=2, style=dotted];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_63  [key=2, style=dotted];
m7_55 -> m7_61  [key=2, style=dotted];
m7_55 -> m7_57  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_55 -> m7_58  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_67  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_66  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_25  [key=2, style=dotted];
m7_628 -> m7_629  [key=0, style=solid];
m7_629 -> m7_630  [key=0, style=solid];
m7_629 -> m7_631  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_630 -> m7_631  [key=0, style=solid];
m7_630 -> m7_132  [key=2, style=dotted];
m7_630 -> m7_632  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_631 -> m7_632  [key=0, style=solid];
m7_631 -> m7_133  [key=2, style=dotted];
m7_632 -> m7_633  [key=0, style=solid];
m7_632 -> m7_15  [key=2, style=dotted];
m7_633 -> m7_634  [key=0, style=solid];
m7_633 -> m7_122  [key=2, style=dotted];
m7_634 -> m7_628  [color=blue, key=0, style=bold];
m7_96 -> m7_64  [color=blue, key=0, style=bold];
m7_330 -> m7_331  [key=0, style=solid];
m7_330 -> m7_332  [key=0, style=solid];
m7_330 -> m7_43  [key=2, style=dotted];
m7_330 -> m7_133  [key=2, style=dotted];
m7_331 -> m7_333  [key=0, style=solid];
m7_331 -> m7_332  [key=0, style=solid];
m7_331 -> m7_15  [key=2, style=dotted];
m7_331 -> m7_334  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m7_332 -> m7_333  [key=0, style=solid];
m7_332 -> m7_337  [key=2, style=dotted];
m7_334 -> m7_335  [key=0, style=solid];
m7_334 -> m7_24  [key=2, style=dotted];
m7_333 -> m7_334  [key=0, style=solid];
m7_333 -> m7_335  [key=0, style=solid];
m7_333 -> m7_122  [key=2, style=dotted];
m7_329 -> m7_330  [key=0, style=solid];
m7_329 -> m7_132  [key=2, style=dotted];
m7_329 -> m7_331  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_329 -> m7_335  [color=darkseagreen4, key=1, label=doc, style=dashed];
m7_321 -> m7_322  [key=0, style=solid];
m7_328 -> m7_329  [key=0, style=solid];
m7_328 -> m7_330  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_327 -> m7_328  [key=0, style=solid];
m7_335 -> m7_99  [color=blue, key=0, style=bold];
m7_335 -> m7_336  [key=0, style=solid];
m7_335 -> m7_23  [key=2, style=dotted];
m7_762 -> m7_763  [key=0, style=solid];
m7_763 -> m7_764  [key=0, style=solid];
m7_763 -> m7_765  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m7_764 -> m7_765  [key=0, style=solid];
m7_764 -> m7_132  [key=2, style=dotted];
m7_764 -> m7_766  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_765 -> m7_766  [key=0, style=solid];
m7_765 -> m7_133  [key=2, style=dotted];
m7_766 -> m7_767  [key=0, style=solid];
m7_766 -> m7_15  [key=2, style=dotted];
m7_767 -> m7_768  [key=0, style=solid];
m7_767 -> m7_23  [key=2, style=dotted];
m7_768 -> m7_762  [color=blue, key=0, style=bold];
m7_612 -> m7_613  [key=0, style=solid];
m7_613 -> m7_614  [key=0, style=solid];
m7_613 -> m7_615  [color=darkseagreen4, key=1, label=xml, style=dashed];
m7_614 -> m7_615  [key=0, style=solid];
m7_614 -> m7_132  [key=2, style=dotted];
m7_614 -> m7_616  [color=darkseagreen4, key=1, label=d, style=dashed];
m7_615 -> m7_616  [key=0, style=solid];
m7_615 -> m7_133  [key=2, style=dotted];
m7_616 -> m7_617  [key=0, style=solid];
m7_616 -> m7_15  [key=2, style=dotted];
m7_617 -> m7_618  [key=0, style=solid];
m7_617 -> m7_122  [key=2, style=dotted];
m7_618 -> m7_612  [color=blue, key=0, style=bold];
m7_530 -> m7_531  [key=0, style=solid];
m7_531 -> m7_532  [key=0, style=solid];
m7_531 -> m7_536  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_532 -> m7_533  [key=0, style=solid];
m7_532 -> m7_221  [key=2, style=dotted];
m7_532 -> m7_535  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_536 -> m7_537  [key=0, style=solid];
m7_536 -> m7_122  [key=2, style=dotted];
m7_533 -> m7_534  [key=0, style=solid];
m7_533 -> m7_345  [key=2, style=dotted];
m7_535 -> m7_536  [key=0, style=solid];
m7_535 -> m7_15  [key=2, style=dotted];
m7_534 -> m7_535  [key=0, style=solid];
m7_534 -> m7_122  [key=2, style=dotted];
m7_537 -> m7_530  [color=blue, key=0, style=bold];
m7_424 -> m7_425  [key=0, style=solid];
m7_425 -> m7_426  [key=0, style=solid];
m7_425 -> m7_429  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_426 -> m7_427  [key=0, style=solid];
m7_426 -> m7_142  [key=2, style=dotted];
m7_426 -> m7_428  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_427 -> m7_424  [color=blue, key=0, style=bold];
m7_547 -> m7_548  [key=0, style=solid];
m7_548 -> m7_549  [key=0, style=solid];
m7_549 -> m7_550  [key=0, style=solid];
m7_549 -> m7_221  [key=2, style=dotted];
m7_549 -> m7_552  [color=darkseagreen4, key=1, label=node, style=dashed];
m7_550 -> m7_551  [key=0, style=solid];
m7_550 -> m7_345  [key=2, style=dotted];
m7_552 -> m7_553  [key=0, style=solid];
m7_552 -> m7_15  [key=2, style=dotted];
m7_551 -> m7_552  [key=0, style=solid];
m7_551 -> m7_122  [key=2, style=dotted];
m7_553 -> m7_554  [key=0, style=solid];
m7_553 -> m7_122  [key=2, style=dotted];
m7_554 -> m7_547  [color=blue, key=0, style=bold];
m7_865 -> m7_866  [key=0, style=solid];
m7_866 -> m7_867  [key=0, style=solid];
m7_866 -> m7_774  [key=2, style=dotted];
m7_866 -> m7_856  [key=2, style=dotted];
m7_866 -> m7_868  [color=darkseagreen4, key=1, label=original, style=dashed];
m7_867 -> m7_868  [key=0, style=solid];
m7_867 -> m7_51  [key=2, style=dotted];
m7_867 -> m7_23  [key=2, style=dotted];
m7_868 -> m7_869  [key=0, style=solid];
m7_868 -> m7_121  [key=2, style=dotted];
m7_868 -> m7_870  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_869 -> m7_870  [key=0, style=solid];
m7_869 -> m7_23  [key=2, style=dotted];
m7_870 -> m7_871  [key=0, style=solid];
m7_870 -> m7_110  [key=2, style=dotted];
m7_871 -> m7_872  [key=0, style=solid];
m7_871 -> m7_51  [key=2, style=dotted];
m7_871 -> m7_23  [key=2, style=dotted];
m7_872 -> m7_865  [color=blue, key=0, style=bold];
m7_894 -> m7_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_448  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_550  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_894 -> m7_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m7_895 -> m7_227  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_896 -> m7_429  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_897 -> m7_436  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_898 -> m7_560  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_899 -> m7_584  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_900 -> m7_760  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_86 -> m8_87  [key=0, style=solid];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_89  [key=0, style=solid];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_91  [key=2, style=dotted];
m8_88 -> m8_80  [key=2, style=dotted];
m8_89 -> m8_90  [key=0, style=solid];
m8_90 -> m8_86  [color=blue, key=0, style=bold];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_18 -> m8_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_18 -> m8_37  [key=2, style=dotted];
m8_105 -> m8_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_105 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_105 -> m8_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_105 -> m8_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_105 -> m8_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_105 -> m8_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_105 -> m8_118  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_112 -> m8_113  [key=0, style=solid];
m8_112 -> m8_117  [key=0, style=solid];
m8_112 -> m8_121  [key=2, style=dotted];
m8_110 -> m8_112  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_113  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_111 -> m8_112  [key=0, style=solid];
m8_111 -> m8_118  [key=0, style=solid];
m8_111 -> m8_31  [key=2, style=dotted];
m8_113 -> m8_114  [key=0, style=solid];
m8_113 -> m8_122  [key=2, style=dotted];
m8_117 -> m8_108  [key=0, style=solid];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_31  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_28  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_115  [key=0, style=solid];
m8_114 -> m8_117  [key=0, style=solid];
m8_114 -> m8_123  [key=2, style=dotted];
m8_118 -> m8_35  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_107 -> m8_113  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_107 -> m8_114  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_103  [key=2, style=dotted];
m8_107 -> m8_115  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_107 -> m8_116  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_120  [key=2, style=dotted];
m8_116 -> m8_119  [key=0, style=solid];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_124  [key=2, style=dotted];
m8_119 -> m8_105  [color=blue, key=0, style=bold];
m8_73 -> m8_50  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_73 -> m8_66  [color=darkorchid, key=3, label="method methodReturn bool ReadForType", style=bold];
m8_73 -> m8_655  [color=darkorchid, key=3, label="method methodReturn bool ReadForType", style=bold];
m8_73 -> m8_673  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_73 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_73 -> m8_33  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_73 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_73 -> m8_47  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_73 -> m8_982  [key=0, style=solid];
m8_73 -> m8_983  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_984  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_73 -> m8_987  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_989  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_992  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_994  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_996  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_998  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_1000  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_1002  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_1004  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_73 -> m8_446  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_73 -> m8_912  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_982 -> m8_983  [key=0, style=solid];
m8_982 -> m8_984  [key=0, style=solid];
m8_983 -> m8_1005  [key=0, style=solid];
m8_983 -> m8_31  [key=2, style=dotted];
m8_984 -> m8_985  [key=0, style=solid];
m8_987 -> m8_988  [key=0, style=solid];
m8_987 -> m8_989  [key=0, style=solid];
m8_987 -> m8_31  [key=2, style=dotted];
m8_989 -> m8_986  [key=0, style=solid];
m8_989 -> m8_990  [key=0, style=solid];
m8_992 -> m8_1004  [key=0, style=solid];
m8_992 -> m8_1006  [key=2, style=dotted];
m8_994 -> m8_1004  [key=0, style=solid];
m8_994 -> m8_1007  [key=2, style=dotted];
m8_996 -> m8_1004  [key=0, style=solid];
m8_996 -> m8_1008  [key=2, style=dotted];
m8_998 -> m8_1004  [key=0, style=solid];
m8_998 -> m8_1009  [key=2, style=dotted];
m8_1000 -> m8_1004  [key=0, style=solid];
m8_1000 -> m8_1010  [key=2, style=dotted];
m8_1002 -> m8_1004  [key=0, style=solid];
m8_1002 -> m8_1011  [key=2, style=dotted];
m8_1004 -> m8_1005  [key=0, style=solid];
m8_1003 -> m8_1005  [key=0, style=solid];
m8_1003 -> m8_181  [key=2, style=dotted];
m8_988 -> m8_1005  [key=0, style=solid];
m8_990 -> m8_1005  [key=0, style=solid];
m8_985 -> m8_1003  [key=0, style=solid];
m8_985 -> m8_986  [key=0, style=solid];
m8_985 -> m8_991  [key=0, style=solid];
m8_985 -> m8_993  [key=0, style=solid];
m8_985 -> m8_995  [key=0, style=solid];
m8_985 -> m8_997  [key=0, style=solid];
m8_985 -> m8_999  [key=0, style=solid];
m8_985 -> m8_1001  [key=0, style=solid];
m8_986 -> m8_987  [key=0, style=solid];
m8_991 -> m8_992  [key=0, style=solid];
m8_993 -> m8_994  [key=0, style=solid];
m8_995 -> m8_996  [key=0, style=solid];
m8_997 -> m8_998  [key=0, style=solid];
m8_999 -> m8_1000  [key=0, style=solid];
m8_1001 -> m8_1002  [key=0, style=solid];
m8_1005 -> m8_73  [color=blue, key=0, style=bold];
m8_47 -> m8_11  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m8_47 -> m8_50  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_47 -> m8_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_47 -> m8_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_47 -> m8_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_47 -> m8_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_47 -> m8_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_47 -> m8_60  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_47 -> m8_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_47 -> m8_56  [color=darkorchid, key=3, label="method methodReturn object Deserialize", style=bold];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_42  [key=2, style=dotted];
m8_50 -> m8_52  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_50 -> m8_53  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_50 -> m8_54  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_50 -> m8_59  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_50 -> m8_65  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_72  [key=2, style=dotted];
m8_51 -> m8_57  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_51 -> m8_58  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_56  [key=0, style=solid];
m8_52 -> m8_73  [key=2, style=dotted];
m8_58 -> m8_60  [key=0, style=solid];
m8_58 -> m8_74  [key=2, style=dotted];
m8_58 -> m8_63  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_75  [key=2, style=dotted];
m8_59 -> m8_63  [color=darkseagreen4, key=1, label=deserializedValue, style=dashed];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_68  [key=0, style=solid];
m8_65 -> m8_77  [key=2, style=dotted];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_78  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_79  [key=2, style=dotted];
m8_48 -> m8_50  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_55  [key=0, style=solid];
m8_54 -> m8_70  [key=0, style=solid];
m8_54 -> m8_34  [key=2, style=dotted];
m8_54 -> m8_35  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_59  [key=0, style=solid];
m8_56 -> m8_75  [color=darkorchid, key=3, label="Local variable object deserializedValue", style=bold];
m8_56 -> m8_74  [color=darkorchid, key=3, label="Local variable object deserializedValue", style=bold];
m8_56 -> m8_57  [key=0, style=solid];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_63  [key=0, style=solid];
m8_63 -> m8_70  [key=0, style=solid];
m8_64 -> m8_65  [key=0, style=solid];
m8_67 -> m8_70  [key=0, style=solid];
m8_69 -> m8_70  [key=0, style=solid];
m8_61 -> m8_63  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_31  [key=2, style=dotted];
m8_49 -> m8_70  [key=0, style=solid];
m8_49 -> m8_71  [key=2, style=dotted];
m8_55 -> m8_70  [key=0, style=solid];
m8_62 -> m8_70  [key=0, style=solid];
m8_62 -> m8_76  [key=2, style=dotted];
m8_70 -> m8_47  [color=blue, key=0, style=bold];
m8_74 -> m8_11  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_74 -> m8_51  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_74 -> m8_624  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_74 -> m8_674  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_74 -> m8_746  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_74 -> m8_832  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_74 -> m8_936  [key=0, style=solid];
m8_74 -> m8_937  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_74 -> m8_938  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_74 -> m8_940  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_74 -> m8_954  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_74 -> m8_33  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_74 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_74 -> m8_47  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_74 -> m8_482  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_74 -> m8_446  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_74 -> m8_277  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_74 -> m8_912  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_74 -> m8_830  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_74 -> m8_483  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_936 -> m8_937  [key=0, style=solid];
m8_936 -> m8_938  [key=0, style=solid];
m8_937 -> m8_938  [key=0, style=solid];
m8_937 -> m8_29  [key=2, style=dotted];
m8_937 -> m8_279  [key=2, style=dotted];
m8_937 -> m8_334  [key=2, style=dotted];
m8_937 -> m8_335  [key=2, style=dotted];
m8_938 -> m8_939  [key=0, style=solid];
m8_938 -> m8_80  [key=2, style=dotted];
m8_938 -> m8_943  [key=2, style=dotted];
m8_938 -> m8_941  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_939 -> m8_940  [key=0, style=solid];
m8_939 -> m8_941  [key=0, style=solid];
m8_940 -> m8_941  [key=0, style=solid];
m8_940 -> m8_29  [key=2, style=dotted];
m8_940 -> m8_279  [key=2, style=dotted];
m8_940 -> m8_334  [key=2, style=dotted];
m8_940 -> m8_335  [key=2, style=dotted];
m8_941 -> m8_942  [key=0, style=solid];
m8_942 -> m8_74  [color=blue, key=0, style=bold];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_23  [key=0, style=solid];
m8_1072 -> m8_1031  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence> requiredProperties", style=bold];
m8_1072 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_1072 -> m8_1118  [key=0, style=solid];
m8_1072 -> m8_1119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1072 -> m8_1040  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_1118 -> m8_1120  [key=0, style=solid];
m8_1118 -> m8_1119  [key=0, style=solid];
m8_1119 -> m8_1120  [key=0, style=solid];
m8_1120 -> m8_1072  [color=blue, key=0, style=bold];
m8_544 -> m8_545  [key=0, style=solid];
m8_544 -> m8_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_544 -> m8_547  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_544 -> m8_798  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_41  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_33  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_544 -> m8_40  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_544 -> m8_277  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_544 -> m8_278  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_544 -> m8_446  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_544 -> m8_853  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_544 -> m8_615  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_736  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_807  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_544 -> m8_874  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_545 -> m8_546  [key=0, style=solid];
m8_545 -> m8_547  [key=0, style=solid];
m8_546 -> m8_547  [key=0, style=solid];
m8_546 -> m8_29  [key=2, style=dotted];
m8_546 -> m8_279  [key=2, style=dotted];
m8_546 -> m8_334  [key=2, style=dotted];
m8_546 -> m8_335  [key=2, style=dotted];
m8_547 -> m8_548  [key=0, style=solid];
m8_547 -> m8_550  [key=0, style=solid];
m8_547 -> m8_332  [key=2, style=dotted];
m8_547 -> m8_551  [key=2, style=dotted];
m8_548 -> m8_549  [key=0, style=solid];
m8_549 -> m8_550  [key=0, style=solid];
m8_549 -> m8_34  [key=2, style=dotted];
m8_549 -> m8_400  [key=2, style=dotted];
m8_550 -> m8_544  [color=blue, key=0, style=bold];
m8_540 -> m8_552  [key=0, style=solid];
m8_540 -> m8_529  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.DefaultValueHandling flag", style=bold];
m8_552 -> m8_553  [key=0, style=solid];
m8_553 -> m8_540  [color=blue, key=0, style=bold];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_20  [key=0, style=solid];
m8_16 -> m8_37  [key=2, style=dotted];
m8_16 -> m8_38  [key=2, style=dotted];
m8_36 -> m8_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_36 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_36 -> m8_409  [key=0, style=solid];
m8_36 -> m8_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_36 -> m8_204  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_36 -> m8_306  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_36 -> m8_270  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_36 -> m8_323  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_36 -> m8_271  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_409 -> m8_411  [key=0, style=solid];
m8_409 -> m8_410  [key=0, style=solid];
m8_409 -> m8_31  [key=2, style=dotted];
m8_410 -> m8_35  [key=2, style=dotted];
m8_410 -> m8_411  [key=0, style=solid];
m8_411 -> m8_36  [color=blue, key=0, style=bold];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_36  [key=2, style=dotted];
m8_72 -> m8_11  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_72 -> m8_50  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_72 -> m8_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_72 -> m8_673  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_72 -> m8_831  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_72 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_72 -> m8_33  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_72 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_72 -> m8_182  [key=0, style=solid];
m8_72 -> m8_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_72 -> m8_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_72 -> m8_185  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_72 -> m8_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_72 -> m8_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m8_72 -> m8_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContainerContract", style=dashed];
m8_72 -> m8_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_72 -> m8_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_72 -> m8_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_72 -> m8_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_72 -> m8_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_72 -> m8_504  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_72 -> m8_446  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_72 -> m8_912  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_72 -> m8_277  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_193 -> m8_194  [key=0, style=solid];
m8_193 -> m8_195  [key=0, style=solid];
m8_193 -> m8_199  [key=2, style=dotted];
m8_182 -> m8_11  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_182 -> m8_72  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_182 -> m8_183  [key=0, style=solid];
m8_182 -> m8_197  [color=darkseagreen4, key=1, label=converter, style=dashed];
m8_182 -> m8_190  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonConverter converter", style=bold];
m8_191 -> m8_193  [key=0, style=solid];
m8_191 -> m8_192  [key=0, style=solid];
m8_194 -> m8_197  [key=0, style=solid];
m8_195 -> m8_196  [key=0, style=solid];
m8_195 -> m8_197  [key=0, style=solid];
m8_183 -> m8_184  [key=0, style=solid];
m8_183 -> m8_185  [key=0, style=solid];
m8_184 -> m8_197  [key=0, style=solid];
m8_185 -> m8_186  [key=0, style=solid];
m8_185 -> m8_187  [key=0, style=solid];
m8_186 -> m8_197  [key=0, style=solid];
m8_187 -> m8_188  [key=0, style=solid];
m8_187 -> m8_189  [key=0, style=solid];
m8_188 -> m8_197  [key=0, style=solid];
m8_189 -> m8_190  [key=0, style=solid];
m8_189 -> m8_197  [key=0, style=solid];
m8_192 -> m8_197  [key=0, style=solid];
m8_196 -> m8_197  [key=0, style=solid];
m8_197 -> m8_198  [key=0, style=solid];
m8_190 -> m8_191  [key=0, style=solid];
m8_198 -> m8_72  [color=blue, key=0, style=bold];
m8_92 -> m8_75  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_92 -> m8_161  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_92 -> m8_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_92 -> m8_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_92 -> m8_96  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Linq.JToken CreateJToken", style=bold];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_28  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_96  [key=0, style=solid];
m8_95 -> m8_101  [key=0, style=solid];
m8_95 -> m8_102  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_104  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_100 -> m8_101  [key=0, style=solid];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_103  [key=2, style=dotted];
m8_97 -> m8_99  [color=darkseagreen4, key=1, label=writer, style=dashed];
m8_99 -> m8_100  [key=0, style=solid];
m8_101 -> m8_92  [color=blue, key=0, style=bold];
m8_277 -> m8_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m8_277 -> m8_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_815  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_828  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_832  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_277 -> m8_835  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_836  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_839  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_847  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_848  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m8_277 -> m8_261  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDynamicContract contract", style=bold];
m8_277 -> m8_807  [key=0, style=solid];
m8_277 -> m8_808  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m8_277 -> m8_809  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_811  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m8_277 -> m8_812  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_813  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_277 -> m8_816  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_818  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_820  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_821  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_822  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_823  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m8_277 -> m8_829  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_830  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_837  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m8_277 -> m8_844  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_845  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_277 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_810 -> m8_811  [key=0, style=solid];
m8_810 -> m8_812  [key=0, style=solid];
m8_814 -> m8_815  [key=0, style=solid];
m8_814 -> m8_544  [key=2, style=dotted];
m8_815 -> m8_816  [key=0, style=solid];
m8_815 -> m8_602  [key=2, style=dotted];
m8_826 -> m8_827  [key=0, style=solid];
m8_826 -> m8_42  [key=2, style=dotted];
m8_827 -> m8_828  [key=0, style=solid];
m8_827 -> m8_72  [key=2, style=dotted];
m8_828 -> m8_829  [key=0, style=solid];
m8_828 -> m8_838  [key=0, style=solid];
m8_828 -> m8_845  [key=0, style=solid];
m8_828 -> m8_482  [key=2, style=dotted];
m8_831 -> m8_832  [key=0, style=solid];
m8_831 -> m8_42  [key=2, style=dotted];
m8_831 -> m8_836  [color=darkseagreen4, key=1, label=dynamicMemberContract, style=dashed];
m8_832 -> m8_833  [key=0, style=solid];
m8_832 -> m8_72  [key=2, style=dotted];
m8_832 -> m8_834  [color=darkseagreen4, key=1, label=dynamicMemberConverter, style=dashed];
m8_832 -> m8_835  [color=darkseagreen4, key=1, label=dynamicMemberConverter, style=dashed];
m8_835 -> m8_837  [key=0, style=solid];
m8_835 -> m8_74  [key=2, style=dotted];
m8_836 -> m8_837  [key=0, style=solid];
m8_836 -> m8_75  [key=2, style=dotted];
m8_839 -> m8_840  [key=0, style=solid];
m8_839 -> m8_841  [key=0, style=solid];
m8_839 -> m8_77  [key=2, style=dotted];
m8_840 -> m8_845  [key=0, style=solid];
m8_840 -> m8_78  [key=2, style=dotted];
m8_847 -> m8_848  [key=0, style=solid];
m8_847 -> m8_668  [key=2, style=dotted];
m8_848 -> m8_849  [key=0, style=solid];
m8_848 -> m8_608  [key=2, style=dotted];
m8_817 -> m8_66  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_817 -> m8_818  [key=0, style=solid];
m8_808 -> m8_810  [key=0, style=solid];
m8_808 -> m8_809  [key=0, style=solid];
m8_811 -> m8_814  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_811 -> m8_815  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_811 -> m8_828  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_811 -> m8_839  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_811 -> m8_847  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_811 -> m8_848  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_811 -> m8_813  [key=0, style=solid];
m8_811 -> m8_584  [key=2, style=dotted];
m8_811 -> m8_837  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_811 -> m8_849  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_812 -> m8_35  [key=2, style=dotted];
m8_812 -> m8_34  [key=2, style=dotted];
m8_812 -> m8_850  [key=0, style=solid];
m8_807 -> m8_814  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_807 -> m8_815  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_807 -> m8_828  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_807 -> m8_839  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_807 -> m8_847  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_807 -> m8_848  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_807 -> m8_808  [key=0, style=solid];
m8_807 -> m8_837  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_807 -> m8_849  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_813 -> m8_814  [key=0, style=solid];
m8_813 -> m8_815  [key=0, style=solid];
m8_816 -> m8_840  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_816 -> m8_817  [key=0, style=solid];
m8_823 -> m8_826  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_823 -> m8_827  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_823 -> m8_828  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_823 -> m8_824  [key=0, style=solid];
m8_823 -> m8_851  [key=2, style=dotted];
m8_823 -> m8_825  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_825 -> m8_826  [key=0, style=solid];
m8_825 -> m8_827  [key=0, style=solid];
m8_829 -> m8_838  [key=0, style=solid];
m8_829 -> m8_845  [key=0, style=solid];
m8_829 -> m8_336  [key=2, style=dotted];
m8_838 -> m8_839  [key=0, style=solid];
m8_845 -> m8_817  [key=0, style=solid];
m8_845 -> m8_846  [key=0, style=solid];
m8_845 -> m8_31  [key=2, style=dotted];
m8_830 -> m8_831  [key=0, style=solid];
m8_830 -> m8_835  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_830 -> m8_836  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_830 -> m8_541  [key=2, style=dotted];
m8_833 -> m8_75  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_833 -> m8_74  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_833 -> m8_834  [key=0, style=solid];
m8_834 -> m8_835  [key=0, style=solid];
m8_834 -> m8_836  [key=0, style=solid];
m8_837 -> m8_838  [key=0, style=solid];
m8_837 -> m8_845  [key=0, style=solid];
m8_837 -> m8_852  [key=2, style=dotted];
m8_820 -> m8_839  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_820 -> m8_37  [key=2, style=dotted];
m8_820 -> m8_823  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_820 -> m8_837  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_820 -> m8_821  [key=0, style=solid];
m8_820 -> m8_822  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_841 -> m8_850  [key=0, style=solid];
m8_846 -> m8_847  [key=0, style=solid];
m8_846 -> m8_848  [key=0, style=solid];
m8_849 -> m8_850  [key=0, style=solid];
m8_818 -> m8_819  [key=0, style=solid];
m8_818 -> m8_842  [key=0, style=solid];
m8_818 -> m8_844  [key=0, style=solid];
m8_809 -> m8_35  [key=2, style=dotted];
m8_809 -> m8_34  [key=2, style=dotted];
m8_809 -> m8_850  [key=0, style=solid];
m8_821 -> m8_823  [key=0, style=solid];
m8_821 -> m8_31  [key=2, style=dotted];
m8_821 -> m8_822  [key=0, style=solid];
m8_822 -> m8_35  [key=2, style=dotted];
m8_822 -> m8_34  [key=2, style=dotted];
m8_822 -> m8_845  [key=0, style=solid];
m8_844 -> m8_35  [key=2, style=dotted];
m8_844 -> m8_850  [key=0, style=solid];
m8_824 -> m8_825  [key=0, style=solid];
m8_824 -> m8_830  [key=0, style=solid];
m8_843 -> m8_845  [key=0, style=solid];
m8_843 -> m8_846  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_819 -> m8_820  [key=0, style=solid];
m8_842 -> m8_843  [key=0, style=solid];
m8_850 -> m8_277  [color=blue, key=0, style=bold];
m8_78 -> m8_66  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_78 -> m8_655  [color=darkorchid, key=3, label="Parameter variable bool readPastError", style=bold];
m8_78 -> m8_1121  [key=0, style=solid];
m8_78 -> m8_920  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_78 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_78 -> m8_33  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_78 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_78 -> m8_47  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_78 -> m8_1122  [color=darkseagreen4, key=1, label=bool, style=dashed];
m8_78 -> m8_1123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_78 -> m8_1124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_78 -> m8_1125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_78 -> m8_446  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_78 -> m8_668  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_78 -> m8_277  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_78 -> m8_619  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_78 -> m8_680  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_78 -> m8_743  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_78 -> m8_816  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_78 -> m8_1034  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_1121 -> m8_1122  [key=0, style=solid];
m8_1121 -> m8_79  [key=2, style=dotted];
m8_1122 -> m8_1123  [key=0, style=solid];
m8_1122 -> m8_1126  [key=0, style=solid];
m8_1123 -> m8_1124  [key=0, style=solid];
m8_1123 -> m8_336  [key=2, style=dotted];
m8_1124 -> m8_1126  [key=0, style=solid];
m8_1124 -> m8_1125  [key=0, style=solid];
m8_1125 -> m8_1126  [key=0, style=solid];
m8_1125 -> m8_1124  [key=0, style=solid];
m8_1125 -> m8_31  [key=2, style=dotted];
m8_1126 -> m8_78  [color=blue, key=0, style=bold];
m8_33 -> m8_11  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_33 -> m8_415  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m8_33 -> m8_418  [color=darkorchid, key=3, label="Parameter variable System.Collections.IList list", style=bold];
m8_33 -> m8_738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_742  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_745  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_33 -> m8_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_33 -> m8_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_756  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_761  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_762  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_769  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_770  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_10  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m8_33 -> m8_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_33 -> m8_735  [key=0, style=solid];
m8_33 -> m8_736  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_33 -> m8_737  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_33 -> m8_739  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_33 -> m8_740  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_743  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_744  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_33 -> m8_750  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_758  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_33 -> m8_760  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_764  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_33 -> m8_161  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_738 -> m8_739  [key=0, style=solid];
m8_738 -> m8_544  [key=2, style=dotted];
m8_742 -> m8_743  [key=0, style=solid];
m8_742 -> m8_602  [key=2, style=dotted];
m8_745 -> m8_746  [key=0, style=solid];
m8_745 -> m8_42  [key=2, style=dotted];
m8_746 -> m8_747  [key=0, style=solid];
m8_746 -> m8_72  [key=2, style=dotted];
m8_746 -> m8_749  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_746 -> m8_755  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_746 -> m8_756  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_749 -> m8_750  [key=0, style=solid];
m8_749 -> m8_768  [key=0, style=solid];
m8_749 -> m8_73  [key=2, style=dotted];
m8_756 -> m8_758  [key=0, style=solid];
m8_756 -> m8_74  [key=2, style=dotted];
m8_757 -> m8_758  [key=0, style=solid];
m8_757 -> m8_75  [key=2, style=dotted];
m8_761 -> m8_762  [key=0, style=solid];
m8_761 -> m8_766  [key=0, style=solid];
m8_761 -> m8_77  [key=2, style=dotted];
m8_762 -> m8_763  [key=0, style=solid];
m8_762 -> m8_78  [key=2, style=dotted];
m8_769 -> m8_770  [key=0, style=solid];
m8_769 -> m8_668  [key=2, style=dotted];
m8_770 -> m8_771  [key=0, style=solid];
m8_770 -> m8_608  [key=2, style=dotted];
m8_747 -> m8_11  [color=darkorchid, key=3, label="Local variable int? previousErrorIndex", style=bold];
m8_747 -> m8_748  [key=0, style=solid];
m8_747 -> m8_763  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m8_748 -> m8_66  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_748 -> m8_749  [key=0, style=solid];
m8_748 -> m8_767  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_748 -> m8_768  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_736 -> m8_738  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_736 -> m8_742  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_736 -> m8_761  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_736 -> m8_769  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_736 -> m8_770  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_736 -> m8_737  [key=0, style=solid];
m8_736 -> m8_741  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_736 -> m8_771  [color=darkseagreen4, key=1, label=underlyingList, style=dashed];
m8_737 -> m8_738  [key=0, style=solid];
m8_737 -> m8_739  [key=0, style=solid];
m8_739 -> m8_742  [key=0, style=solid];
m8_739 -> m8_740  [key=0, style=solid];
m8_743 -> m8_762  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_743 -> m8_744  [key=0, style=solid];
m8_743 -> m8_760  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_744 -> m8_745  [key=0, style=solid];
m8_744 -> m8_746  [key=0, style=solid];
m8_755 -> m8_756  [key=0, style=solid];
m8_755 -> m8_757  [key=0, style=solid];
m8_750 -> m8_751  [key=0, style=solid];
m8_750 -> m8_753  [key=0, style=solid];
m8_750 -> m8_754  [key=0, style=solid];
m8_768 -> m8_769  [key=0, style=solid];
m8_768 -> m8_770  [key=0, style=solid];
m8_758 -> m8_759  [key=0, style=solid];
m8_758 -> m8_767  [key=0, style=solid];
m8_758 -> m8_726  [key=2, style=dotted];
m8_760 -> m8_761  [key=0, style=solid];
m8_760 -> m8_727  [key=2, style=dotted];
m8_760 -> m8_763  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m8_760 -> m8_765  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m8_766 -> m8_772  [key=0, style=solid];
m8_763 -> m8_764  [key=0, style=solid];
m8_763 -> m8_765  [key=0, style=solid];
m8_771 -> m8_772  [key=0, style=solid];
m8_735 -> m8_736  [key=0, style=solid];
m8_740 -> m8_741  [key=0, style=solid];
m8_740 -> m8_336  [key=2, style=dotted];
m8_764 -> m8_772  [key=0, style=solid];
m8_764 -> m8_400  [key=2, style=dotted];
m8_754 -> m8_75  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_754 -> m8_74  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_754 -> m8_755  [key=0, style=solid];
m8_767 -> m8_748  [key=0, style=solid];
m8_767 -> m8_768  [key=0, style=solid];
m8_741 -> m8_772  [key=0, style=solid];
m8_751 -> m8_752  [key=0, style=solid];
m8_753 -> m8_767  [key=0, style=solid];
m8_753 -> m8_759  [key=0, style=solid];
m8_752 -> m8_768  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_752 -> m8_767  [key=0, style=solid];
m8_752 -> m8_759  [key=0, style=solid];
m8_759 -> m8_760  [key=0, style=solid];
m8_765 -> m8_767  [key=0, style=solid];
m8_772 -> m8_33  [color=blue, key=0, style=bold];
m8_401 -> m8_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_401 -> m8_161  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_401 -> m8_402  [key=0, style=solid];
m8_401 -> m8_403  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_401 -> m8_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_406 -> m8_408  [key=0, style=solid];
m8_406 -> m8_166  [key=2, style=dotted];
m8_406 -> m8_279  [key=2, style=dotted];
m8_406 -> m8_35  [key=2, style=dotted];
m8_405 -> m8_406  [key=0, style=solid];
m8_405 -> m8_407  [key=0, style=solid];
m8_403 -> m8_35  [key=2, style=dotted];
m8_403 -> m8_408  [key=0, style=solid];
m8_403 -> m8_34  [key=2, style=dotted];
m8_402 -> m8_403  [key=0, style=solid];
m8_402 -> m8_404  [key=0, style=solid];
m8_404 -> m8_405  [key=0, style=solid];
m8_404 -> m8_407  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_407 -> m8_408  [key=0, style=solid];
m8_408 -> m8_401  [color=blue, key=0, style=bold];
m8_42 -> m8_11  [color=darkorchid, key=3, label="method methodReturn Newtonsoft.Json.Serialization.JsonContract GetContractSafe", style=bold];
m8_42 -> m8_45  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_47  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m8_42 -> m8_385  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m8_42 -> m8_830  [color=darkorchid, key=3, label="Parameter variable System.Type type", style=bold];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_30  [key=2, style=dotted];
m8_43 -> m8_45  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_44 -> m8_46  [key=0, style=solid];
m8_46 -> m8_42  [color=blue, key=0, style=bold];
m8_270 -> m8_66  [color=darkorchid, key=3, label="method methodReturn bool ReadMetadataPropertiesToken", style=bold];
m8_270 -> m8_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_308  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_270 -> m8_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_325  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_270 -> m8_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_655  [color=darkorchid, key=3, label="method methodReturn bool ReadMetadataPropertiesToken", style=bold];
m8_270 -> m8_160  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_270 -> m8_161  [color=darkorchid, key=3, label="Parameter variable object newValue", style=bold];
m8_270 -> m8_280  [key=0, style=solid];
m8_270 -> m8_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Linq.JTokenReader", style=dashed];
m8_270 -> m8_330  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_270 -> m8_204  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Linq.JTokenReader reader", style=bold];
m8_270 -> m8_202  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_270 -> m8_201  [color=darkorchid, key=3, label="Parameter variable object newValue", style=bold];
m8_270 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_298 -> m8_299  [key=0, style=solid];
m8_298 -> m8_332  [key=2, style=dotted];
m8_298 -> m8_333  [key=2, style=dotted];
m8_298 -> m8_300  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_298 -> m8_330  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_299 -> m8_300  [key=0, style=solid];
m8_299 -> m8_301  [key=0, style=solid];
m8_300 -> m8_301  [key=0, style=solid];
m8_300 -> m8_29  [key=2, style=dotted];
m8_300 -> m8_279  [key=2, style=dotted];
m8_300 -> m8_334  [key=2, style=dotted];
m8_300 -> m8_335  [key=2, style=dotted];
m8_307 -> m8_308  [key=0, style=solid];
m8_307 -> m8_36  [key=2, style=dotted];
m8_308 -> m8_308  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_308 -> m8_309  [key=0, style=solid];
m8_308 -> m8_337  [key=2, style=dotted];
m8_308 -> m8_325  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_308 -> m8_330  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_312 -> m8_313  [key=0, style=solid];
m8_312 -> m8_36  [key=2, style=dotted];
m8_316 -> m8_317  [key=0, style=solid];
m8_316 -> m8_36  [key=2, style=dotted];
m8_324 -> m8_325  [key=0, style=solid];
m8_324 -> m8_36  [key=2, style=dotted];
m8_325 -> m8_326  [key=0, style=solid];
m8_325 -> m8_161  [key=2, style=dotted];
m8_325 -> m8_330  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_328 -> m8_329  [key=0, style=solid];
m8_328 -> m8_36  [key=2, style=dotted];
m8_289 -> m8_11  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Linq.JToken additionalContent", style=bold];
m8_289 -> m8_290  [key=0, style=solid];
m8_289 -> m8_296  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_289 -> m8_297  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_294 -> m8_298  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_294 -> m8_300  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_294 -> m8_295  [key=0, style=solid];
m8_296 -> m8_298  [key=0, style=solid];
m8_296 -> m8_297  [key=0, style=solid];
m8_301 -> m8_302  [key=0, style=solid];
m8_301 -> m8_336  [key=2, style=dotted];
m8_306 -> m8_307  [key=0, style=solid];
m8_306 -> m8_308  [color=darkseagreen4, key=1, label=typeTokenReader, style=dashed];
m8_306 -> m8_269  [key=2, style=dotted];
m8_305 -> m8_308  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m8_305 -> m8_306  [key=0, style=solid];
m8_309 -> m8_310  [key=0, style=solid];
m8_311 -> m8_312  [key=0, style=solid];
m8_311 -> m8_318  [key=0, style=solid];
m8_313 -> m8_316  [key=0, style=solid];
m8_313 -> m8_314  [key=0, style=solid];
m8_314 -> m8_316  [key=0, style=solid];
m8_314 -> m8_315  [key=0, style=solid];
m8_317 -> m8_311  [key=0, style=solid];
m8_317 -> m8_336  [key=2, style=dotted];
m8_323 -> m8_324  [key=0, style=solid];
m8_323 -> m8_325  [color=darkseagreen4, key=1, label=listReader, style=dashed];
m8_323 -> m8_269  [key=2, style=dotted];
m8_280 -> m8_325  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_280 -> m8_330  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_280 -> m8_281  [key=0, style=solid];
m8_320 -> m8_325  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_320 -> m8_330  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_320 -> m8_321  [key=0, style=solid];
m8_326 -> m8_327  [key=0, style=solid];
m8_326 -> m8_336  [key=2, style=dotted];
m8_282 -> m8_328  [key=0, style=solid];
m8_282 -> m8_283  [key=0, style=solid];
m8_322 -> m8_328  [key=0, style=solid];
m8_322 -> m8_323  [key=0, style=solid];
m8_329 -> m8_330  [key=0, style=solid];
m8_288 -> m8_289  [key=0, style=solid];
m8_288 -> m8_290  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_288 -> m8_291  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_288 -> m8_292  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_288 -> m8_293  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_290 -> m8_291  [key=0, style=solid];
m8_290 -> m8_292  [key=0, style=solid];
m8_297 -> m8_330  [key=0, style=solid];
m8_297 -> m8_34  [key=2, style=dotted];
m8_297 -> m8_331  [key=2, style=dotted];
m8_283 -> m8_309  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_283 -> m8_284  [key=0, style=solid];
m8_283 -> m8_303  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_283 -> m8_318  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_283 -> m8_321  [color=darkseagreen4, key=1, label=current, style=dashed];
m8_284 -> m8_294  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m8_284 -> m8_288  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m8_284 -> m8_285  [key=0, style=solid];
m8_284 -> m8_286  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m8_284 -> m8_287  [color=darkseagreen4, key=1, label=refToken, style=dashed];
m8_291 -> m8_294  [key=0, style=solid];
m8_291 -> m8_296  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_291 -> m8_297  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_292 -> m8_294  [key=0, style=solid];
m8_292 -> m8_293  [key=0, style=solid];
m8_293 -> m8_294  [key=0, style=solid];
m8_293 -> m8_296  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_293 -> m8_297  [color=darkseagreen4, key=1, label=additionalContent, style=dashed];
m8_295 -> m8_296  [key=0, style=solid];
m8_295 -> m8_303  [key=0, style=solid];
m8_281 -> m8_330  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_281 -> m8_282  [key=0, style=solid];
m8_287 -> m8_330  [key=0, style=solid];
m8_287 -> m8_34  [key=2, style=dotted];
m8_287 -> m8_331  [key=2, style=dotted];
m8_302 -> m8_330  [key=0, style=solid];
m8_315 -> m8_330  [key=0, style=solid];
m8_327 -> m8_330  [key=0, style=solid];
m8_303 -> m8_306  [color=darkseagreen4, key=1, label=typeToken, style=dashed];
m8_303 -> m8_305  [color=darkseagreen4, key=1, label=typeToken, style=dashed];
m8_303 -> m8_304  [key=0, style=solid];
m8_304 -> m8_305  [key=0, style=solid];
m8_304 -> m8_318  [key=0, style=solid];
m8_310 -> m8_311  [key=0, style=solid];
m8_310 -> m8_318  [key=0, style=solid];
m8_318 -> m8_320  [color=darkseagreen4, key=1, label=idToken, style=dashed];
m8_318 -> m8_319  [key=0, style=solid];
m8_321 -> m8_323  [color=darkseagreen4, key=1, label=valuesToken, style=dashed];
m8_321 -> m8_322  [key=0, style=solid];
m8_319 -> m8_320  [key=0, style=solid];
m8_319 -> m8_321  [key=0, style=solid];
m8_286 -> m8_288  [key=0, style=solid];
m8_286 -> m8_287  [key=0, style=solid];
m8_285 -> m8_303  [key=0, style=solid];
m8_285 -> m8_286  [key=0, style=solid];
m8_330 -> m8_270  [color=blue, key=0, style=bold];
m8_920 -> m8_1109  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_920 -> m8_1097  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>", style=dashed];
m8_920 -> m8_855  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence> propertiesPresence", style=bold];
m8_920 -> m8_1031  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence> propertiesPresence", style=bold];
m8_920 -> m8_1114  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_920 -> m8_1115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_920 -> m8_1101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_920 -> m8_1105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_920 -> m8_1112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_920 -> m8_1096  [key=0, style=solid];
m8_920 -> m8_874  [color=darkorchid, key=3, label="Parameter variable object newObject", style=bold];
m8_920 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m8_920 -> m8_853  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m8_920 -> m8_1034  [color=darkorchid, key=3, label="Parameter variable int initialDepth", style=bold];
m8_1108 -> m8_1109  [color=green, key=0, style=solid];
m8_1108 -> m8_1113  [color=green, key=0, style=solid];
m8_1108 -> m8_1097  [color=green, key=0, style=solid];
m8_1108 -> m8_538  [color=green, key=2, style=dotted];
m8_1108 -> m8_540  [color=green, key=2, style=dotted];
m8_1098 -> m8_1108  [color=green, key=1, label=property, style=dashed];
m8_1098 -> m8_1098  [color=darkseagreen4, key=1, label=propertyPresence, style=dashed];
m8_1098 -> m8_1099  [key=0, style=solid];
m8_1098 -> m8_1101  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1098 -> m8_1105  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1098 -> m8_1106  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1098 -> m8_1107  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1098 -> m8_1109  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1098 -> m8_1112  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1098 -> m8_1114  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1106 -> m8_1108  [color=green, key=0, style=solid];
m8_1106 -> m8_1107  [key=0, style=solid];
m8_1107 -> m8_1108  [color=green, key=0, style=solid];
m8_1107 -> m8_42  [key=2, style=dotted];
m8_1109 -> m8_1113  [key=0, style=solid];
m8_1109 -> m8_1097  [key=0, style=solid];
m8_1109 -> m8_542  [key=2, style=dotted];
m8_1109 -> m8_162  [key=2, style=dotted];
m8_1109 -> m8_507  [key=2, style=dotted];
m8_1113 -> m8_1114  [key=0, style=solid];
m8_1097 -> m8_1098  [key=0, style=solid];
m8_1097 -> m8_1117  [key=0, style=solid];
m8_1114 -> m8_1115  [key=0, style=solid];
m8_1114 -> m8_1116  [key=0, style=solid];
m8_1114 -> m8_77  [key=2, style=dotted];
m8_1115 -> m8_1097  [key=0, style=solid];
m8_1115 -> m8_78  [key=2, style=dotted];
m8_1099 -> m8_1099  [color=darkseagreen4, key=1, label=propertyPresence, style=dashed];
m8_1099 -> m8_1100  [key=0, style=solid];
m8_1099 -> m8_1102  [color=darkseagreen4, key=1, label=presence, style=dashed];
m8_1101 -> m8_1102  [key=0, style=solid];
m8_1101 -> m8_1104  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m8_1101 -> m8_1111  [color=darkseagreen4, key=1, label=resolvedRequired, style=dashed];
m8_1105 -> m8_1097  [key=0, style=solid];
m8_1105 -> m8_34  [key=2, style=dotted];
m8_1105 -> m8_35  [key=2, style=dotted];
m8_1112 -> m8_1097  [key=0, style=solid];
m8_1112 -> m8_34  [key=2, style=dotted];
m8_1112 -> m8_35  [key=2, style=dotted];
m8_1104 -> m8_1106  [key=0, style=solid];
m8_1104 -> m8_1105  [key=0, style=solid];
m8_1111 -> m8_1113  [key=0, style=solid];
m8_1111 -> m8_1097  [key=0, style=solid];
m8_1111 -> m8_1112  [key=0, style=solid];
m8_1096 -> m8_1097  [key=0, style=solid];
m8_1096 -> m8_1117  [key=0, style=solid];
m8_1100 -> m8_1097  [key=0, style=solid];
m8_1100 -> m8_1101  [key=0, style=solid];
m8_1116 -> m8_1117  [key=0, style=solid];
m8_1102 -> m8_1103  [key=0, style=solid];
m8_1102 -> m8_1110  [key=0, style=solid];
m8_1103 -> m8_1104  [key=0, style=solid];
m8_1110 -> m8_1111  [key=0, style=solid];
m8_1117 -> m8_920  [color=blue, key=0, style=bold];
m8_608 -> m8_609  [key=0, style=solid];
m8_608 -> m8_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_608 -> m8_611  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_608 -> m8_798  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_608 -> m8_41  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_608 -> m8_33  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_608 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_608 -> m8_277  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_608 -> m8_278  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_608 -> m8_446  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_608 -> m8_853  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_608 -> m8_615  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_608 -> m8_736  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_608 -> m8_807  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_608 -> m8_874  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_609 -> m8_610  [key=0, style=solid];
m8_609 -> m8_611  [key=0, style=solid];
m8_610 -> m8_611  [key=0, style=solid];
m8_610 -> m8_34  [key=2, style=dotted];
m8_610 -> m8_334  [key=2, style=dotted];
m8_610 -> m8_335  [key=2, style=dotted];
m8_611 -> m8_612  [key=0, style=solid];
m8_611 -> m8_613  [key=2, style=dotted];
m8_612 -> m8_608  [color=blue, key=0, style=bold];
m8_445 -> m8_415  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m8_445 -> m8_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_161  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_445 -> m8_562  [key=0, style=solid];
m8_445 -> m8_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_445 -> m8_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_572  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_576  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_579  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_445 -> m8_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_445 -> m8_581  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_445 -> m8_417  [color=darkorchid, key=3, label="Parameter variable bool createdFromNonDefaultCreator", style=bold];
m8_570 -> m8_571  [key=0, style=solid];
m8_570 -> m8_576  [key=0, style=solid];
m8_564 -> m8_570  [key=0, style=solid];
m8_564 -> m8_565  [key=0, style=solid];
m8_571 -> m8_572  [key=0, style=solid];
m8_571 -> m8_584  [key=2, style=dotted];
m8_571 -> m8_573  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_571 -> m8_575  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_576 -> m8_577  [key=0, style=solid];
m8_576 -> m8_579  [key=0, style=solid];
m8_568 -> m8_32  [key=2, style=dotted];
m8_568 -> m8_568  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_568 -> m8_569  [key=0, style=solid];
m8_573 -> m8_32  [key=2, style=dotted];
m8_573 -> m8_573  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_573 -> m8_574  [key=0, style=solid];
m8_573 -> m8_575  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_563 -> m8_35  [key=2, style=dotted];
m8_563 -> m8_34  [key=2, style=dotted];
m8_563 -> m8_582  [key=0, style=solid];
m8_580 -> m8_35  [key=2, style=dotted];
m8_580 -> m8_34  [key=2, style=dotted];
m8_580 -> m8_582  [key=0, style=solid];
m8_581 -> m8_35  [key=2, style=dotted];
m8_581 -> m8_34  [key=2, style=dotted];
m8_581 -> m8_582  [key=0, style=solid];
m8_562 -> m8_564  [key=0, style=solid];
m8_562 -> m8_563  [key=0, style=solid];
m8_566 -> m8_568  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_566 -> m8_567  [key=0, style=solid];
m8_566 -> m8_583  [key=2, style=dotted];
m8_566 -> m8_569  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_567 -> m8_568  [key=0, style=solid];
m8_567 -> m8_569  [key=0, style=solid];
m8_572 -> m8_573  [key=0, style=solid];
m8_572 -> m8_574  [key=0, style=solid];
m8_578 -> m8_582  [key=0, style=solid];
m8_578 -> m8_583  [key=2, style=dotted];
m8_579 -> m8_580  [key=0, style=solid];
m8_579 -> m8_581  [key=0, style=solid];
m8_565 -> m8_582  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_565 -> m8_566  [key=0, style=solid];
m8_575 -> m8_582  [key=0, style=solid];
m8_577 -> m8_582  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_577 -> m8_578  [key=0, style=solid];
m8_569 -> m8_582  [key=0, style=solid];
m8_574 -> m8_582  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_574 -> m8_575  [key=0, style=solid];
m8_582 -> m8_445  [color=blue, key=0, style=bold];
m8_162 -> m8_11  [color=darkorchid, key=3, label="method methodReturn object EnsureType", style=bold];
m8_162 -> m8_920  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_162 -> m8_162  [color=darkorchid, key=3, label="method methodReturn object EnsureType", style=bold];
m8_162 -> m8_453  [key=0, style=solid];
m8_162 -> m8_454  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_455  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_456  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_162 -> m8_457  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_162 -> m8_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_162 -> m8_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_162 -> m8_462  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_463  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_465  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_466  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_467  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_468  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_469  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_471  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_162 -> m8_472  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_162 -> m8_75  [color=darkorchid, key=3, label="Parameter variable System.Type targetType", style=bold];
m8_162 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_162 -> m8_139  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_162 -> m8_146  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_162 -> m8_629  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_453 -> m8_454  [key=0, style=solid];
m8_453 -> m8_455  [key=0, style=solid];
m8_454 -> m8_473  [key=0, style=solid];
m8_455 -> m8_456  [key=0, style=solid];
m8_455 -> m8_474  [key=2, style=dotted];
m8_456 -> m8_457  [key=0, style=solid];
m8_456 -> m8_472  [key=0, style=solid];
m8_457 -> m8_458  [key=0, style=solid];
m8_457 -> m8_459  [key=0, style=solid];
m8_459 -> m8_460  [key=0, style=solid];
m8_459 -> m8_469  [key=0, style=solid];
m8_460 -> m8_461  [key=0, style=solid];
m8_460 -> m8_464  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m8_461 -> m8_462  [key=0, style=solid];
m8_461 -> m8_466  [key=0, style=solid];
m8_462 -> m8_463  [key=0, style=solid];
m8_462 -> m8_464  [key=0, style=solid];
m8_463 -> m8_37  [key=2, style=dotted];
m8_463 -> m8_473  [key=0, style=solid];
m8_463 -> m8_475  [key=2, style=dotted];
m8_465 -> m8_473  [key=0, style=solid];
m8_465 -> m8_477  [key=2, style=dotted];
m8_466 -> m8_467  [key=0, style=solid];
m8_466 -> m8_468  [key=0, style=solid];
m8_467 -> m8_473  [key=0, style=solid];
m8_467 -> m8_478  [key=2, style=dotted];
m8_468 -> m8_473  [key=0, style=solid];
m8_468 -> m8_479  [key=2, style=dotted];
m8_469 -> m8_473  [key=0, style=solid];
m8_469 -> m8_480  [key=2, style=dotted];
m8_471 -> m8_279  [key=2, style=dotted];
m8_471 -> m8_473  [key=0, style=solid];
m8_471 -> m8_481  [key=2, style=dotted];
m8_471 -> m8_400  [key=2, style=dotted];
m8_472 -> m8_473  [key=0, style=solid];
m8_458 -> m8_473  [key=0, style=solid];
m8_464 -> m8_465  [key=0, style=solid];
m8_464 -> m8_466  [key=0, style=solid];
m8_464 -> m8_476  [key=2, style=dotted];
m8_470 -> m8_471  [key=0, style=solid];
m8_473 -> m8_162  [color=blue, key=0, style=bold];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_36  [key=2, style=dotted];
m8_80 -> m8_81  [key=0, style=solid];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_83  [key=0, style=solid];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_85  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_84 -> m8_80  [color=blue, key=0, style=bold];
m8_160 -> m8_11  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_160 -> m8_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_160 -> m8_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_41  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_160 -> m8_75  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_160 -> m8_200  [key=0, style=solid];
m8_160 -> m8_202  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_160 -> m8_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_222  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_160 -> m8_223  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_160 -> m8_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_240  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_160 -> m8_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_160 -> m8_278  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_160 -> m8_201  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_160 -> m8_105  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_160 -> m8_221  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_160 -> m8_239  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_160 -> m8_277  [color=darkorchid, key=3, label="method methodReturn object CreateObject", style=bold];
m8_203 -> m8_204  [key=0, style=solid];
m8_203 -> m8_212  [key=0, style=solid];
m8_208 -> m8_209  [key=0, style=solid];
m8_208 -> m8_36  [key=2, style=dotted];
m8_210 -> m8_210  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_210 -> m8_211  [key=0, style=solid];
m8_210 -> m8_215  [key=0, style=solid];
m8_210 -> m8_270  [key=2, style=dotted];
m8_210 -> m8_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_222  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_210 -> m8_224  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_210 -> m8_227  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_210 -> m8_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_234  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_210 -> m8_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_244  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_210 -> m8_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_252  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_210 -> m8_258  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_210 -> m8_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_262  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_210 -> m8_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_210 -> m8_265  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_210 -> m8_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_212 -> m8_213  [key=0, style=solid];
m8_212 -> m8_36  [key=2, style=dotted];
m8_213 -> m8_213  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_213 -> m8_214  [key=0, style=solid];
m8_213 -> m8_215  [key=0, style=solid];
m8_213 -> m8_271  [key=2, style=dotted];
m8_213 -> m8_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_222  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_213 -> m8_224  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_213 -> m8_227  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_213 -> m8_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_234  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_213 -> m8_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_244  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_213 -> m8_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_252  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_213 -> m8_258  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_213 -> m8_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_262  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_213 -> m8_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_213 -> m8_265  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_213 -> m8_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_215 -> m8_216  [key=0, style=solid];
m8_215 -> m8_217  [key=0, style=solid];
m8_215 -> m8_272  [key=2, style=dotted];
m8_216 -> m8_267  [key=0, style=solid];
m8_216 -> m8_105  [key=2, style=dotted];
m8_224 -> m8_225  [key=0, style=solid];
m8_224 -> m8_274  [key=2, style=dotted];
m8_224 -> m8_226  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m8_224 -> m8_227  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m8_227 -> m8_267  [key=0, style=solid];
m8_227 -> m8_41  [key=2, style=dotted];
m8_231 -> m8_232  [key=0, style=solid];
m8_231 -> m8_36  [key=2, style=dotted];
m8_234 -> m8_235  [key=0, style=solid];
m8_234 -> m8_75  [key=2, style=dotted];
m8_234 -> m8_236  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_235 -> m8_236  [key=0, style=solid];
m8_235 -> m8_36  [key=2, style=dotted];
m8_242 -> m8_243  [key=0, style=solid];
m8_242 -> m8_275  [key=2, style=dotted];
m8_242 -> m8_252  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_242 -> m8_253  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m8_242 -> m8_254  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_242 -> m8_255  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_242 -> m8_256  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_242 -> m8_257  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_252 -> m8_253  [key=0, style=solid];
m8_252 -> m8_40  [key=2, style=dotted];
m8_258 -> m8_259  [key=0, style=solid];
m8_258 -> m8_39  [key=2, style=dotted];
m8_258 -> m8_40  [key=2, style=dotted];
m8_262 -> m8_267  [key=0, style=solid];
m8_262 -> m8_277  [key=2, style=dotted];
m8_265 -> m8_267  [key=0, style=solid];
m8_265 -> m8_278  [key=2, style=dotted];
m8_266 -> m8_267  [key=0, style=solid];
m8_266 -> m8_166  [key=2, style=dotted];
m8_266 -> m8_279  [key=2, style=dotted];
m8_266 -> m8_35  [key=2, style=dotted];
m8_219 -> m8_66  [color=darkorchid, key=3, label="Local variable bool createdFromNonDefaultCreator", style=bold];
m8_219 -> m8_220  [key=0, style=solid];
m8_219 -> m8_225  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m8_202 -> m8_203  [key=0, style=solid];
m8_202 -> m8_210  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_202 -> m8_213  [color=darkseagreen4, key=1, label=resolvedObjectType, style=dashed];
m8_202 -> m8_160  [color=darkorchid, key=3, label="Local variable System.Type resolvedObjectType", style=bold];
m8_204 -> m8_210  [color=darkseagreen4, key=1, label=tokenReader, style=dashed];
m8_204 -> m8_205  [key=0, style=solid];
m8_207 -> m8_208  [key=0, style=solid];
m8_207 -> m8_210  [color=darkseagreen4, key=1, label=tokenReader, style=dashed];
m8_207 -> m8_269  [key=2, style=dotted];
m8_207 -> m8_209  [color=darkseagreen4, key=1, label=tokenReader, style=dashed];
m8_209 -> m8_210  [key=0, style=solid];
m8_209 -> m8_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_209 -> m8_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_205 -> m8_210  [key=0, style=solid];
m8_205 -> m8_206  [key=0, style=solid];
m8_211 -> m8_267  [key=0, style=solid];
m8_217 -> m8_218  [key=0, style=solid];
m8_217 -> m8_228  [key=0, style=solid];
m8_217 -> m8_237  [key=0, style=solid];
m8_217 -> m8_260  [key=0, style=solid];
m8_217 -> m8_263  [key=0, style=solid];
m8_220 -> m8_224  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m8_220 -> m8_227  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m8_220 -> m8_221  [key=0, style=solid];
m8_222 -> m8_224  [key=0, style=solid];
m8_222 -> m8_223  [key=0, style=solid];
m8_222 -> m8_29  [key=2, style=dotted];
m8_222 -> m8_273  [key=2, style=dotted];
m8_229 -> m8_234  [color=darkseagreen4, key=1, label=primitiveContract, style=dashed];
m8_229 -> m8_230  [key=0, style=solid];
m8_238 -> m8_242  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_238 -> m8_252  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_238 -> m8_258  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_238 -> m8_239  [key=0, style=solid];
m8_238 -> m8_250  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_238 -> m8_254  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_244 -> m8_245  [key=0, style=solid];
m8_244 -> m8_246  [key=0, style=solid];
m8_245 -> m8_267  [key=0, style=solid];
m8_245 -> m8_34  [key=2, style=dotted];
m8_245 -> m8_35  [key=2, style=dotted];
m8_246 -> m8_247  [key=0, style=solid];
m8_246 -> m8_248  [key=0, style=solid];
m8_247 -> m8_267  [key=0, style=solid];
m8_247 -> m8_34  [key=2, style=dotted];
m8_247 -> m8_35  [key=2, style=dotted];
m8_248 -> m8_249  [key=0, style=solid];
m8_248 -> m8_250  [key=0, style=solid];
m8_249 -> m8_267  [key=0, style=solid];
m8_249 -> m8_34  [key=2, style=dotted];
m8_249 -> m8_35  [key=2, style=dotted];
m8_251 -> m8_267  [key=0, style=solid];
m8_251 -> m8_34  [key=2, style=dotted];
m8_251 -> m8_35  [key=2, style=dotted];
m8_261 -> m8_262  [key=0, style=solid];
m8_264 -> m8_265  [key=0, style=solid];
m8_214 -> m8_267  [key=0, style=solid];
m8_225 -> m8_227  [key=0, style=solid];
m8_225 -> m8_226  [key=0, style=solid];
m8_226 -> m8_267  [key=0, style=solid];
m8_223 -> m8_227  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m8_223 -> m8_225  [key=0, style=solid];
m8_223 -> m8_226  [color=darkseagreen4, key=1, label=targetObject, style=dashed];
m8_230 -> m8_231  [key=0, style=solid];
m8_230 -> m8_266  [key=0, style=solid];
m8_230 -> m8_37  [key=2, style=dotted];
m8_230 -> m8_38  [key=2, style=dotted];
m8_232 -> m8_234  [key=0, style=solid];
m8_232 -> m8_233  [key=0, style=solid];
m8_236 -> m8_267  [key=0, style=solid];
m8_239 -> m8_242  [color=darkorchid, key=3, label="Local variable object targetDictionary", style=bold];
m8_239 -> m8_40  [color=darkorchid, key=3, label="Local variable object targetDictionary", style=bold];
m8_239 -> m8_240  [key=0, style=solid];
m8_241 -> m8_242  [key=0, style=solid];
m8_243 -> m8_252  [key=0, style=solid];
m8_243 -> m8_244  [key=0, style=solid];
m8_253 -> m8_254  [key=0, style=solid];
m8_253 -> m8_255  [key=0, style=solid];
m8_254 -> m8_267  [key=0, style=solid];
m8_254 -> m8_276  [key=2, style=dotted];
m8_255 -> m8_256  [key=0, style=solid];
m8_255 -> m8_257  [key=0, style=solid];
m8_256 -> m8_267  [key=0, style=solid];
m8_257 -> m8_259  [key=0, style=solid];
m8_250 -> m8_252  [key=0, style=solid];
m8_250 -> m8_251  [key=0, style=solid];
m8_240 -> m8_258  [key=0, style=solid];
m8_240 -> m8_241  [key=0, style=solid];
m8_259 -> m8_267  [key=0, style=solid];
m8_221 -> m8_160  [color=darkorchid, key=3, label="Local variable object targetObject", style=bold];
m8_221 -> m8_222  [key=0, style=solid];
m8_221 -> m8_274  [color=darkorchid, key=3, label="Local variable object targetObject", style=bold];
m8_200 -> m8_201  [key=0, style=solid];
m8_206 -> m8_207  [key=0, style=solid];
m8_206 -> m8_268  [key=2, style=dotted];
m8_233 -> m8_267  [key=0, style=solid];
m8_233 -> m8_35  [key=2, style=dotted];
m8_201 -> m8_202  [key=0, style=solid];
m8_218 -> m8_219  [key=0, style=solid];
m8_228 -> m8_229  [key=0, style=solid];
m8_237 -> m8_238  [key=0, style=solid];
m8_260 -> m8_261  [key=0, style=solid];
m8_263 -> m8_264  [key=0, style=solid];
m8_267 -> m8_160  [color=blue, key=0, style=bold];
m8_668 -> m8_718  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m8_668 -> m8_731  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_668 -> m8_732  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_668 -> m8_778  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_668 -> m8_41  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_668 -> m8_33  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_668 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_668 -> m8_277  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_668 -> m8_278  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_668 -> m8_446  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_668 -> m8_615  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_668 -> m8_729  [key=0, style=solid];
m8_668 -> m8_736  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_668 -> m8_807  [color=darkorchid, key=3, label="Parameter variable object currentObject", style=bold];
m8_668 -> m8_118  [color=darkorchid, key=3, label="Parameter variable string message", style=bold];
m8_731 -> m8_732  [key=0, style=solid];
m8_731 -> m8_733  [key=0, style=solid];
m8_731 -> m8_77  [key=2, style=dotted];
m8_732 -> m8_734  [key=0, style=solid];
m8_732 -> m8_78  [key=2, style=dotted];
m8_730 -> m8_731  [key=0, style=solid];
m8_733 -> m8_734  [key=0, style=solid];
m8_729 -> m8_35  [key=2, style=dotted];
m8_729 -> m8_734  [key=0, style=solid];
m8_734 -> m8_668  [color=blue, key=0, style=bold];
m8_482 -> m8_11  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContainerContract containerContract", style=bold];
m8_482 -> m8_66  [color=darkorchid, key=3, label="method methodReturn bool SetPropertyValue", style=bold];
m8_482 -> m8_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_655  [color=darkorchid, key=3, label="method methodReturn bool SetPropertyValue", style=bold];
m8_482 -> m8_827  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter", style=bold];
m8_482 -> m8_1050  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter", style=bold];
m8_482 -> m8_41  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m8_482 -> m8_483  [key=0, style=solid];
m8_482 -> m8_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_482 -> m8_484  [color=darkorchid, key=3, label="method methodReturn bool SetPropertyValue", style=bold];
m8_482 -> m8_823  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_482 -> m8_1040  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_482 -> m8_277  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_482 -> m8_807  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m8_487 -> m8_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_487 -> m8_488  [key=0, style=solid];
m8_487 -> m8_489  [key=0, style=solid];
m8_487 -> m8_504  [key=2, style=dotted];
m8_487 -> m8_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_487 -> m8_491  [color=darkseagreen4, key=1, label=gottenCurrentValue, style=dashed];
m8_487 -> m8_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m8_487 -> m8_494  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m8_487 -> m8_495  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m8_487 -> m8_502  [color=darkseagreen4, key=1, label=useExistingValue, style=dashed];
m8_493 -> m8_495  [key=0, style=solid];
m8_493 -> m8_74  [key=2, style=dotted];
m8_493 -> m8_496  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_494 -> m8_495  [key=0, style=solid];
m8_494 -> m8_75  [key=2, style=dotted];
m8_494 -> m8_496  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_495 -> m8_496  [key=0, style=solid];
m8_495 -> m8_502  [key=0, style=solid];
m8_495 -> m8_506  [key=2, style=dotted];
m8_498 -> m8_499  [key=0, style=solid];
m8_498 -> m8_500  [key=0, style=solid];
m8_499 -> m8_500  [key=0, style=solid];
m8_499 -> m8_279  [key=2, style=dotted];
m8_499 -> m8_334  [key=2, style=dotted];
m8_499 -> m8_335  [key=2, style=dotted];
m8_486 -> m8_487  [key=0, style=solid];
m8_488 -> m8_503  [key=0, style=solid];
m8_489 -> m8_75  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_489 -> m8_74  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_489 -> m8_490  [key=0, style=solid];
m8_490 -> m8_494  [key=0, style=solid];
m8_490 -> m8_491  [key=0, style=solid];
m8_491 -> m8_493  [key=0, style=solid];
m8_491 -> m8_492  [key=0, style=solid];
m8_502 -> m8_503  [key=0, style=solid];
m8_492 -> m8_493  [key=0, style=solid];
m8_492 -> m8_495  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m8_492 -> m8_505  [key=2, style=dotted];
m8_496 -> m8_507  [key=2, style=dotted];
m8_496 -> m8_497  [key=0, style=solid];
m8_497 -> m8_498  [key=0, style=solid];
m8_497 -> m8_501  [key=0, style=solid];
m8_500 -> m8_501  [key=0, style=solid];
m8_500 -> m8_508  [key=2, style=dotted];
m8_485 -> m8_486  [key=0, style=solid];
m8_483 -> m8_484  [key=0, style=solid];
m8_484 -> m8_485  [key=0, style=solid];
m8_501 -> m8_503  [key=0, style=solid];
m8_503 -> m8_482  [color=blue, key=0, style=bold];
m8_337 -> m8_380  [key=0, style=solid];
m8_337 -> m8_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_337 -> m8_42  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_337 -> m8_270  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_337 -> m8_271  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_337 -> m8_306  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_337 -> m8_305  [color=darkorchid, key=3, label="Parameter variable string qualifiedTypeName", style=bold];
m8_337 -> m8_384  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_337 -> m8_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_337 -> m8_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_337 -> m8_393  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_337 -> m8_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_337 -> m8_397  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_337 -> m8_385  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_337 -> m8_361  [color=darkorchid, key=3, label="Parameter variable string qualifiedTypeName", style=bold];
m8_380 -> m8_381  [key=0, style=solid];
m8_386 -> m8_387  [key=0, style=solid];
m8_386 -> m8_389  [key=0, style=solid];
m8_386 -> m8_399  [key=2, style=dotted];
m8_386 -> m8_392  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_386 -> m8_393  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_386 -> m8_394  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_386 -> m8_395  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_386 -> m8_396  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m8_391 -> m8_392  [key=0, style=solid];
m8_391 -> m8_393  [key=0, style=solid];
m8_392 -> m8_393  [key=0, style=solid];
m8_392 -> m8_279  [key=2, style=dotted];
m8_392 -> m8_334  [key=2, style=dotted];
m8_392 -> m8_335  [key=2, style=dotted];
m8_396 -> m8_397  [key=0, style=solid];
m8_396 -> m8_42  [key=2, style=dotted];
m8_381 -> m8_382  [key=0, style=solid];
m8_381 -> m8_397  [key=0, style=solid];
m8_384 -> m8_386  [color=darkseagreen4, key=1, label=typeName, style=dashed];
m8_384 -> m8_385  [key=0, style=solid];
m8_384 -> m8_398  [key=2, style=dotted];
m8_385 -> m8_386  [key=0, style=solid];
m8_387 -> m8_388  [key=0, style=solid];
m8_389 -> m8_391  [key=0, style=solid];
m8_389 -> m8_390  [key=0, style=solid];
m8_393 -> m8_394  [key=0, style=solid];
m8_393 -> m8_395  [key=0, style=solid];
m8_393 -> m8_273  [key=2, style=dotted];
m8_394 -> m8_279  [key=2, style=dotted];
m8_394 -> m8_35  [key=2, style=dotted];
m8_394 -> m8_397  [key=0, style=solid];
m8_395 -> m8_396  [key=0, style=solid];
m8_395 -> m8_397  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_390 -> m8_35  [key=2, style=dotted];
m8_390 -> m8_397  [key=0, style=solid];
m8_390 -> m8_34  [key=2, style=dotted];
m8_388 -> m8_397  [key=0, style=solid];
m8_388 -> m8_34  [key=2, style=dotted];
m8_388 -> m8_400  [key=2, style=dotted];
m8_382 -> m8_383  [key=0, style=solid];
m8_383 -> m8_384  [key=0, style=solid];
m8_397 -> m8_337  [color=blue, key=0, style=bold];
m8_602 -> m8_603  [key=0, style=solid];
m8_602 -> m8_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_602 -> m8_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_602 -> m8_798  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_602 -> m8_41  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_602 -> m8_33  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_602 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_602 -> m8_277  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_602 -> m8_278  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_602 -> m8_446  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_602 -> m8_853  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_602 -> m8_615  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_602 -> m8_736  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_602 -> m8_807  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_602 -> m8_874  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_603 -> m8_604  [key=0, style=solid];
m8_603 -> m8_605  [key=0, style=solid];
m8_604 -> m8_605  [key=0, style=solid];
m8_604 -> m8_34  [key=2, style=dotted];
m8_604 -> m8_334  [key=2, style=dotted];
m8_604 -> m8_335  [key=2, style=dotted];
m8_605 -> m8_606  [key=0, style=solid];
m8_605 -> m8_607  [key=2, style=dotted];
m8_606 -> m8_602  [color=blue, key=0, style=bold];
m8_161 -> m8_11  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_161 -> m8_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_161 -> m8_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_75  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_161 -> m8_412  [key=0, style=solid];
m8_161 -> m8_416  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_161 -> m8_420  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_161 -> m8_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_422  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_161 -> m8_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_161 -> m8_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_161 -> m8_433  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_161 -> m8_323  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_161 -> m8_271  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_161 -> m8_270  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_161 -> m8_92  [color=darkorchid, key=3, label="method methodReturn object CreateList", style=bold];
m8_413 -> m8_414  [key=0, style=solid];
m8_413 -> m8_415  [key=0, style=solid];
m8_413 -> m8_272  [key=2, style=dotted];
m8_414 -> m8_444  [key=0, style=solid];
m8_414 -> m8_92  [key=2, style=dotted];
m8_415 -> m8_416  [key=0, style=solid];
m8_415 -> m8_401  [key=2, style=dotted];
m8_415 -> m8_418  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_426  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_428  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_429  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_430  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_432  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_433  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_434  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_435  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_438  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_415 -> m8_442  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m8_418 -> m8_419  [key=0, style=solid];
m8_418 -> m8_445  [key=2, style=dotted];
m8_418 -> m8_429  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_418 -> m8_430  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_418 -> m8_431  [color=darkseagreen4, key=1, label=createdFromNonDefaultCreator, style=dashed];
m8_418 -> m8_433  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_418 -> m8_435  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_418 -> m8_436  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_418 -> m8_438  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_418 -> m8_439  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_418 -> m8_440  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_418 -> m8_441  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_429 -> m8_431  [key=0, style=solid];
m8_429 -> m8_33  [key=2, style=dotted];
m8_430 -> m8_431  [key=0, style=solid];
m8_430 -> m8_446  [key=2, style=dotted];
m8_442 -> m8_443  [key=0, style=solid];
m8_442 -> m8_32  [key=2, style=dotted];
m8_442 -> m8_33  [key=2, style=dotted];
m8_412 -> m8_413  [key=0, style=solid];
m8_412 -> m8_418  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_412 -> m8_33  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_416 -> m8_442  [key=0, style=solid];
m8_416 -> m8_417  [key=0, style=solid];
m8_426 -> m8_427  [key=0, style=solid];
m8_426 -> m8_428  [key=0, style=solid];
m8_428 -> m8_429  [key=0, style=solid];
m8_428 -> m8_430  [key=0, style=solid];
m8_432 -> m8_433  [key=0, style=solid];
m8_432 -> m8_434  [key=0, style=solid];
m8_433 -> m8_433  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_433 -> m8_441  [key=0, style=solid];
m8_433 -> m8_447  [key=2, style=dotted];
m8_433 -> m8_448  [key=2, style=dotted];
m8_434 -> m8_435  [key=0, style=solid];
m8_434 -> m8_438  [key=0, style=solid];
m8_435 -> m8_436  [key=0, style=solid];
m8_435 -> m8_449  [key=2, style=dotted];
m8_435 -> m8_437  [color=darkseagreen4, key=1, label=a, style=dashed];
m8_438 -> m8_444  [key=0, style=solid];
m8_438 -> m8_276  [key=2, style=dotted];
m8_417 -> m8_418  [key=0, style=solid];
m8_419 -> m8_428  [key=0, style=solid];
m8_419 -> m8_420  [key=0, style=solid];
m8_431 -> m8_432  [key=0, style=solid];
m8_431 -> m8_439  [key=0, style=solid];
m8_436 -> m8_437  [key=0, style=solid];
m8_436 -> m8_450  [key=2, style=dotted];
m8_439 -> m8_440  [key=0, style=solid];
m8_439 -> m8_441  [key=0, style=solid];
m8_440 -> m8_444  [key=0, style=solid];
m8_441 -> m8_443  [key=0, style=solid];
m8_443 -> m8_444  [key=0, style=solid];
m8_420 -> m8_421  [key=0, style=solid];
m8_420 -> m8_422  [key=0, style=solid];
m8_421 -> m8_35  [key=2, style=dotted];
m8_421 -> m8_444  [key=0, style=solid];
m8_421 -> m8_34  [key=2, style=dotted];
m8_422 -> m8_423  [key=0, style=solid];
m8_422 -> m8_424  [key=0, style=solid];
m8_423 -> m8_35  [key=2, style=dotted];
m8_423 -> m8_444  [key=0, style=solid];
m8_423 -> m8_34  [key=2, style=dotted];
m8_424 -> m8_426  [key=0, style=solid];
m8_424 -> m8_425  [key=0, style=solid];
m8_425 -> m8_35  [key=2, style=dotted];
m8_425 -> m8_444  [key=0, style=solid];
m8_425 -> m8_34  [key=2, style=dotted];
m8_427 -> m8_35  [key=2, style=dotted];
m8_427 -> m8_444  [key=0, style=solid];
m8_427 -> m8_34  [key=2, style=dotted];
m8_437 -> m8_441  [key=0, style=solid];
m8_444 -> m8_161  [color=blue, key=0, style=bold];
m8_272 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_272 -> m8_161  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_272 -> m8_451  [key=0, style=solid];
m8_451 -> m8_452  [key=0, style=solid];
m8_452 -> m8_272  [color=blue, key=0, style=bold];
m8_506 -> m8_66  [color=darkorchid, key=3, label="method methodReturn bool ShouldSetPropertyValue", style=bold];
m8_506 -> m8_554  [key=0, style=solid];
m8_506 -> m8_556  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_506 -> m8_655  [color=darkorchid, key=3, label="method methodReturn bool ShouldSetPropertyValue", style=bold];
m8_506 -> m8_482  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_506 -> m8_558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_506 -> m8_879  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty property", style=bold];
m8_506 -> m8_489  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_506 -> m8_880  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m8_554 -> m8_538  [key=2, style=dotted];
m8_554 -> m8_555  [key=0, style=solid];
m8_554 -> m8_556  [key=0, style=solid];
m8_556 -> m8_538  [key=2, style=dotted];
m8_556 -> m8_540  [key=2, style=dotted];
m8_556 -> m8_557  [key=0, style=solid];
m8_556 -> m8_558  [key=0, style=solid];
m8_556 -> m8_542  [key=2, style=dotted];
m8_556 -> m8_543  [key=2, style=dotted];
m8_555 -> m8_561  [key=0, style=solid];
m8_557 -> m8_561  [key=0, style=solid];
m8_558 -> m8_559  [key=0, style=solid];
m8_558 -> m8_560  [key=0, style=solid];
m8_559 -> m8_561  [key=0, style=solid];
m8_560 -> m8_561  [key=0, style=solid];
m8_561 -> m8_506  [color=blue, key=0, style=bold];
m8_21 -> m8_22  [key=0, style=solid];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_16  [key=2, style=dotted];
m8_1 -> m8_17  [key=2, style=dotted];
m8_1 -> m8_18  [key=2, style=dotted];
m8_1 -> m8_19  [key=2, style=dotted];
m8_1 -> m8_3  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_4  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_5  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_6  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_7  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_8  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_9  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_10  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_11  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_12  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_13  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_1 -> m8_14  [color=darkseagreen4, key=1, label=o, style=dashed];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_2 -> m8_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_2 -> m8_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_20  [key=2, style=dotted];
m8_3 -> m8_28  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid];
m8_4 -> m8_21  [key=2, style=dotted];
m8_4 -> m8_29  [key=2, style=dotted];
m8_4 -> m8_12  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m8_4 -> m8_25  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_20  [key=2, style=dotted];
m8_5 -> m8_30  [key=2, style=dotted];
m8_5 -> m8_9  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_5 -> m8_21  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_5 -> m8_23  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_5 -> m8_24  [color=darkseagreen4, key=1, label=contract, style=dashed];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_21  [key=2, style=dotted];
m8_6 -> m8_8  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_20  [key=2, style=dotted];
m8_7 -> m8_31  [key=2, style=dotted];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_21  [key=2, style=dotted];
m8_8 -> m8_13  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_20  [key=2, style=dotted];
m8_9 -> m8_12  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_21  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_20  [key=2, style=dotted];
m8_11 -> m8_27  [key=0, style=solid];
m8_11 -> m8_32  [key=2, style=dotted];
m8_11 -> m8_33  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_21  [key=2, style=dotted];
m8_12 -> m8_27  [key=0, style=solid];
m8_12 -> m8_35  [key=2, style=dotted];
m8_12 -> m8_34  [key=2, style=dotted];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_20  [key=2, style=dotted];
m8_13 -> m8_26  [key=0, style=solid];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_21  [key=2, style=dotted];
m8_14 -> m8_36  [key=2, style=dotted];
m8_15 -> m8_0  [color=blue, key=0, style=bold];
m8_15 -> m8_11  [color=darkorchid, key=3, label="Local variable string id", style=bold];
m8_15 -> m8_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_15 -> m8_24  [color=darkseagreen4, key=1, label=id, style=dashed];
m8_15 -> m8_16  [key=0, style=solid];
m8_912 -> m8_954  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_912 -> m8_955  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_962  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_963  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_912 -> m8_968  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_912 -> m8_972  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_912 -> m8_853  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_912 -> m8_856  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_912 -> m8_860  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IDictionary<string, object> extensionData", style=bold];
m8_912 -> m8_944  [key=0, style=solid];
m8_912 -> m8_947  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_949  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_950  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_912 -> m8_956  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_965  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_966  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_970  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_974  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_978  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_979  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_912 -> m8_945  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<Newtonsoft.Json.Serialization.JsonProperty, object> ResolvePropertyAndCreatorValues", style=bold];
m8_953 -> m8_954  [key=0, style=solid];
m8_953 -> m8_42  [key=2, style=dotted];
m8_954 -> m8_955  [key=0, style=solid];
m8_954 -> m8_72  [key=2, style=dotted];
m8_954 -> m8_961  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m8_954 -> m8_962  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m8_955 -> m8_956  [key=0, style=solid];
m8_955 -> m8_957  [key=0, style=solid];
m8_955 -> m8_73  [key=2, style=dotted];
m8_959 -> m8_960  [key=0, style=solid];
m8_959 -> m8_42  [key=2, style=dotted];
m8_962 -> m8_964  [key=0, style=solid];
m8_962 -> m8_74  [key=2, style=dotted];
m8_963 -> m8_964  [key=0, style=solid];
m8_963 -> m8_75  [key=2, style=dotted];
m8_967 -> m8_968  [key=0, style=solid];
m8_967 -> m8_969  [key=0, style=solid];
m8_968 -> m8_969  [key=0, style=solid];
m8_968 -> m8_279  [key=2, style=dotted];
m8_968 -> m8_334  [key=2, style=dotted];
m8_968 -> m8_335  [key=2, style=dotted];
m8_969 -> m8_970  [key=0, style=solid];
m8_969 -> m8_971  [key=0, style=solid];
m8_972 -> m8_973  [key=0, style=solid];
m8_972 -> m8_75  [key=2, style=dotted];
m8_946 -> m8_66  [color=darkorchid, key=3, label="Local variable bool exit", style=bold];
m8_946 -> m8_947  [key=0, style=solid];
m8_950 -> m8_953  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_950 -> m8_954  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_950 -> m8_955  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_950 -> m8_959  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_950 -> m8_962  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_950 -> m8_963  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_950 -> m8_951  [key=0, style=solid];
m8_950 -> m8_851  [key=2, style=dotted];
m8_950 -> m8_952  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_950 -> m8_957  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_950 -> m8_958  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_950 -> m8_964  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_952 -> m8_953  [key=0, style=solid];
m8_952 -> m8_954  [key=0, style=solid];
m8_961 -> m8_962  [key=0, style=solid];
m8_961 -> m8_963  [key=0, style=solid];
m8_956 -> m8_35  [key=2, style=dotted];
m8_956 -> m8_34  [key=2, style=dotted];
m8_956 -> m8_981  [key=0, style=solid];
m8_957 -> m8_958  [key=0, style=solid];
m8_957 -> m8_971  [key=0, style=solid];
m8_958 -> m8_959  [key=0, style=solid];
m8_958 -> m8_960  [key=0, style=solid];
m8_960 -> m8_75  [color=darkorchid, key=3, label="Local variable object propertyValue", style=bold];
m8_960 -> m8_74  [color=darkorchid, key=3, label="Local variable object propertyValue", style=bold];
m8_960 -> m8_961  [key=0, style=solid];
m8_964 -> m8_979  [key=0, style=solid];
m8_965 -> m8_967  [key=0, style=solid];
m8_965 -> m8_966  [key=0, style=solid];
m8_965 -> m8_31  [key=2, style=dotted];
m8_949 -> m8_968  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_949 -> m8_37  [key=2, style=dotted];
m8_949 -> m8_950  [key=0, style=solid];
m8_949 -> m8_956  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_949 -> m8_966  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_949 -> m8_970  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_949 -> m8_973  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_970 -> m8_279  [key=2, style=dotted];
m8_970 -> m8_35  [key=2, style=dotted];
m8_970 -> m8_981  [key=0, style=solid];
m8_971 -> m8_972  [key=0, style=solid];
m8_971 -> m8_974  [key=0, style=solid];
m8_973 -> m8_979  [key=0, style=solid];
m8_979 -> m8_946  [key=0, style=solid];
m8_979 -> m8_980  [key=0, style=solid];
m8_979 -> m8_31  [key=2, style=dotted];
m8_945 -> m8_946  [key=0, style=solid];
m8_945 -> m8_964  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m8_945 -> m8_913  [key=2, style=dotted];
m8_945 -> m8_980  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m8_947 -> m8_948  [key=0, style=solid];
m8_947 -> m8_975  [key=0, style=solid];
m8_947 -> m8_976  [key=0, style=solid];
m8_947 -> m8_978  [key=0, style=solid];
m8_966 -> m8_35  [key=2, style=dotted];
m8_966 -> m8_34  [key=2, style=dotted];
m8_966 -> m8_981  [key=0, style=solid];
m8_978 -> m8_35  [key=2, style=dotted];
m8_978 -> m8_981  [key=0, style=solid];
m8_944 -> m8_971  [color=darkseagreen4, key=1, label="out System.Collections.Generic.IDictionary<string, object>", style=dashed];
m8_944 -> m8_973  [color=darkseagreen4, key=1, label="out System.Collections.Generic.IDictionary<string, object>", style=dashed];
m8_944 -> m8_945  [key=0, style=solid];
m8_944 -> m8_981  [color=darkseagreen4, key=1, label="out System.Collections.Generic.IDictionary<string, object>", style=dashed];
m8_944 -> m8_913  [key=2, style=dotted];
m8_974 -> m8_979  [key=0, style=solid];
m8_974 -> m8_336  [key=2, style=dotted];
m8_951 -> m8_952  [key=0, style=solid];
m8_951 -> m8_965  [key=0, style=solid];
m8_948 -> m8_949  [key=0, style=solid];
m8_975 -> m8_979  [key=0, style=solid];
m8_977 -> m8_979  [key=0, style=solid];
m8_980 -> m8_981  [key=0, style=solid];
m8_976 -> m8_977  [key=0, style=solid];
m8_981 -> m8_912  [color=blue, key=0, style=bold];
m8_275 -> m8_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_275 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_275 -> m8_238  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m8_275 -> m8_585  [key=0, style=solid];
m8_275 -> m8_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_275 -> m8_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_275 -> m8_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_275 -> m8_591  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_275 -> m8_594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_275 -> m8_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_275 -> m8_597  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_275 -> m8_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_275 -> m8_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_275 -> m8_123  [color=darkorchid, key=3, label="Parameter variable bool createdFromNonDefaultCreator", style=bold];
m8_588 -> m8_589  [key=0, style=solid];
m8_588 -> m8_594  [key=0, style=solid];
m8_585 -> m8_588  [key=0, style=solid];
m8_585 -> m8_586  [key=0, style=solid];
m8_589 -> m8_590  [key=0, style=solid];
m8_589 -> m8_584  [key=2, style=dotted];
m8_589 -> m8_591  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_589 -> m8_593  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_594 -> m8_595  [key=0, style=solid];
m8_594 -> m8_597  [key=0, style=solid];
m8_591 -> m8_39  [key=2, style=dotted];
m8_591 -> m8_591  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_591 -> m8_592  [key=0, style=solid];
m8_591 -> m8_593  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m8_587 -> m8_600  [key=0, style=solid];
m8_587 -> m8_601  [key=2, style=dotted];
m8_590 -> m8_591  [key=0, style=solid];
m8_590 -> m8_592  [key=0, style=solid];
m8_596 -> m8_600  [key=0, style=solid];
m8_596 -> m8_601  [key=2, style=dotted];
m8_597 -> m8_598  [key=0, style=solid];
m8_597 -> m8_599  [key=0, style=solid];
m8_598 -> m8_35  [key=2, style=dotted];
m8_598 -> m8_34  [key=2, style=dotted];
m8_598 -> m8_600  [key=0, style=solid];
m8_599 -> m8_35  [key=2, style=dotted];
m8_599 -> m8_34  [key=2, style=dotted];
m8_599 -> m8_600  [key=0, style=solid];
m8_586 -> m8_600  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_586 -> m8_587  [key=0, style=solid];
m8_593 -> m8_600  [key=0, style=solid];
m8_595 -> m8_600  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_595 -> m8_596  [key=0, style=solid];
m8_592 -> m8_600  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_592 -> m8_593  [key=0, style=solid];
m8_600 -> m8_275  [color=blue, key=0, style=bold];
m8_274 -> m8_1016  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_274 -> m8_1018  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_274 -> m8_1022  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_274 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_274 -> m8_1012  [key=0, style=solid];
m8_274 -> m8_219  [color=darkorchid, key=3, label="Parameter variable bool createdFromNonDefaultCreator", style=bold];
m8_274 -> m8_220  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract objectContract", style=bold];
m8_274 -> m8_1013  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_274 -> m8_1014  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_274 -> m8_1017  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_274 -> m8_1019  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_274 -> m8_1020  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_274 -> m8_1024  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_274 -> m8_1025  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_274 -> m8_1026  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_274 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_274 -> m8_853  [color=darkorchid, key=3, label="method methodReturn object CreateNewObject", style=bold];
m8_1016 -> m8_1029  [key=0, style=solid];
m8_1016 -> m8_853  [key=2, style=dotted];
m8_1018 -> m8_1019  [key=0, style=solid];
m8_1018 -> m8_1020  [key=0, style=solid];
m8_1022 -> m8_1029  [key=0, style=solid];
m8_1022 -> m8_853  [key=2, style=dotted];
m8_1012 -> m8_11  [color=darkorchid, key=3, label="Local variable object newObject", style=bold];
m8_1012 -> m8_1013  [key=0, style=solid];
m8_1012 -> m8_1023  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_1012 -> m8_1028  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_1015 -> m8_1016  [key=0, style=solid];
m8_1013 -> m8_1018  [key=0, style=solid];
m8_1013 -> m8_1014  [key=0, style=solid];
m8_1019 -> m8_1023  [key=0, style=solid];
m8_1019 -> m8_584  [key=2, style=dotted];
m8_1019 -> m8_1028  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_1020 -> m8_1021  [key=0, style=solid];
m8_1020 -> m8_1023  [key=0, style=solid];
m8_1021 -> m8_1022  [key=0, style=solid];
m8_1023 -> m8_1024  [key=0, style=solid];
m8_1023 -> m8_1027  [key=0, style=solid];
m8_1028 -> m8_1029  [key=0, style=solid];
m8_1014 -> m8_1015  [key=0, style=solid];
m8_1014 -> m8_1017  [key=0, style=solid];
m8_1017 -> m8_276  [key=2, style=dotted];
m8_1017 -> m8_1023  [key=0, style=solid];
m8_1017 -> m8_1028  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m8_1024 -> m8_1025  [key=0, style=solid];
m8_1024 -> m8_1026  [key=0, style=solid];
m8_1025 -> m8_35  [key=2, style=dotted];
m8_1025 -> m8_34  [key=2, style=dotted];
m8_1025 -> m8_1029  [key=0, style=solid];
m8_1026 -> m8_35  [key=2, style=dotted];
m8_1026 -> m8_34  [key=2, style=dotted];
m8_1026 -> m8_1029  [key=0, style=solid];
m8_1027 -> m8_1029  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_1027 -> m8_1028  [key=0, style=solid];
m8_1029 -> m8_274  [color=blue, key=0, style=bold];
m8_930 -> m8_931  [key=0, style=solid];
m8_921 -> m8_922  [key=0, style=solid];
m8_924 -> m8_925  [key=0, style=solid];
m8_1073 -> m8_1074  [key=0, style=solid];
m8_1076 -> m8_1077  [key=0, style=solid];
m8_923 -> m8_921  [color=blue, key=0, style=bold];
m8_922 -> m8_923  [key=0, style=solid];
m8_926 -> m8_924  [color=blue, key=0, style=bold];
m8_925 -> m8_926  [key=0, style=solid];
m8_933 -> m8_934  [key=0, style=solid];
m8_934 -> m8_934  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_934 -> m8_935  [key=0, style=solid];
m8_927 -> m8_928  [key=0, style=solid];
m8_1075 -> m8_1073  [color=blue, key=0, style=bold];
m8_1074 -> m8_1075  [key=0, style=solid];
m8_1078 -> m8_1076  [color=blue, key=0, style=bold];
m8_1077 -> m8_1078  [key=0, style=solid];
m8_935 -> m8_933  [color=blue, key=0, style=bold];
m8_929 -> m8_927  [color=blue, key=0, style=bold];
m8_928 -> m8_929  [key=0, style=solid];
m8_931 -> m8_932  [key=0, style=solid];
m8_932 -> m8_930  [color=blue, key=0, style=bold];
m8_446 -> m8_415  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonArrayContract contract", style=bold];
m8_446 -> m8_418  [color=darkorchid, key=3, label="Parameter variable System.Collections.IList list", style=bold];
m8_446 -> m8_671  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_446 -> m8_672  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_446 -> m8_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_446 -> m8_674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m8_446 -> m8_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_691  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_696  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_446 -> m8_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_718  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_446 -> m8_719  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_446 -> m8_161  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_446 -> m8_446  [color=darkorchid, key=3, label="method methodReturn object PopulateMultidimensionalArray", style=bold];
m8_446 -> m8_669  [key=0, style=solid];
m8_446 -> m8_670  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_446 -> m8_677  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_446 -> m8_678  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_446 -> m8_680  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_683  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_699  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_446 -> m8_720  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m8_671 -> m8_672  [key=0, style=solid];
m8_671 -> m8_544  [key=2, style=dotted];
m8_672 -> m8_673  [key=0, style=solid];
m8_672 -> m8_602  [key=2, style=dotted];
m8_673 -> m8_674  [key=0, style=solid];
m8_673 -> m8_42  [key=2, style=dotted];
m8_673 -> m8_682  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m8_673 -> m8_692  [color=darkseagreen4, key=1, label=collectionItemContract, style=dashed];
m8_674 -> m8_675  [key=0, style=solid];
m8_674 -> m8_72  [key=2, style=dotted];
m8_674 -> m8_682  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_674 -> m8_690  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_674 -> m8_691  [color=darkseagreen4, key=1, label=collectionItemConverter, style=dashed];
m8_682 -> m8_683  [key=0, style=solid];
m8_682 -> m8_717  [key=0, style=solid];
m8_682 -> m8_73  [key=2, style=dotted];
m8_691 -> m8_693  [key=0, style=solid];
m8_691 -> m8_74  [key=2, style=dotted];
m8_692 -> m8_693  [key=0, style=solid];
m8_692 -> m8_75  [key=2, style=dotted];
m8_696 -> m8_697  [key=0, style=solid];
m8_696 -> m8_701  [key=0, style=solid];
m8_696 -> m8_77  [key=2, style=dotted];
m8_697 -> m8_698  [key=0, style=solid];
m8_697 -> m8_78  [key=2, style=dotted];
m8_718 -> m8_719  [key=0, style=solid];
m8_718 -> m8_668  [key=2, style=dotted];
m8_719 -> m8_720  [key=0, style=solid];
m8_719 -> m8_608  [key=2, style=dotted];
m8_675 -> m8_11  [color=darkorchid, key=3, label="Local variable int? previousErrorIndex", style=bold];
m8_675 -> m8_676  [key=0, style=solid];
m8_675 -> m8_698  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m8_679 -> m8_66  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_679 -> m8_680  [key=0, style=solid];
m8_679 -> m8_716  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_679 -> m8_717  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_670 -> m8_671  [key=0, style=solid];
m8_670 -> m8_672  [key=0, style=solid];
m8_690 -> m8_691  [key=0, style=solid];
m8_690 -> m8_692  [key=0, style=solid];
m8_681 -> m8_682  [key=0, style=solid];
m8_681 -> m8_702  [key=0, style=solid];
m8_683 -> m8_684  [key=0, style=solid];
m8_683 -> m8_688  [key=0, style=solid];
m8_683 -> m8_689  [key=0, style=solid];
m8_717 -> m8_718  [key=0, style=solid];
m8_717 -> m8_719  [key=0, style=solid];
m8_693 -> m8_694  [key=0, style=solid];
m8_693 -> m8_716  [key=0, style=solid];
m8_693 -> m8_726  [key=2, style=dotted];
m8_695 -> m8_696  [key=0, style=solid];
m8_695 -> m8_727  [key=2, style=dotted];
m8_695 -> m8_698  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m8_695 -> m8_700  [color=darkseagreen4, key=1, label=errorPosition, style=dashed];
m8_701 -> m8_721  [key=0, style=solid];
m8_680 -> m8_697  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_680 -> m8_681  [key=0, style=solid];
m8_680 -> m8_695  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_698 -> m8_699  [key=0, style=solid];
m8_698 -> m8_700  [key=0, style=solid];
m8_720 -> m8_721  [key=0, style=solid];
m8_689 -> m8_75  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_689 -> m8_74  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m8_689 -> m8_690  [key=0, style=solid];
m8_676 -> m8_681  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_676 -> m8_677  [key=0, style=solid];
m8_676 -> m8_722  [key=2, style=dotted];
m8_676 -> m8_685  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_676 -> m8_686  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_676 -> m8_707  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_676 -> m8_710  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_676 -> m8_711  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_676 -> m8_712  [color=darkseagreen4, key=1, label=listStack, style=dashed];
m8_678 -> m8_679  [key=0, style=solid];
m8_678 -> m8_446  [color=darkorchid, key=3, label="Local variable System.Collections.IList currentList", style=bold];
m8_678 -> m8_706  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m8_678 -> m8_705  [color=darkorchid, key=3, label="Local variable System.Collections.IList currentList", style=bold];
m8_716 -> m8_679  [key=0, style=solid];
m8_716 -> m8_717  [key=0, style=solid];
m8_715 -> m8_35  [key=2, style=dotted];
m8_715 -> m8_721  [key=0, style=solid];
m8_669 -> m8_670  [key=0, style=solid];
m8_669 -> m8_681  [color=darkseagreen4, key=1, label=rank, style=dashed];
m8_669 -> m8_447  [key=2, style=dotted];
m8_677 -> m8_678  [key=0, style=solid];
m8_677 -> m8_723  [key=2, style=dotted];
m8_699 -> m8_721  [key=0, style=solid];
m8_699 -> m8_400  [key=2, style=dotted];
m8_702 -> m8_717  [key=0, style=solid];
m8_702 -> m8_31  [key=2, style=dotted];
m8_702 -> m8_703  [key=0, style=solid];
m8_703 -> m8_715  [key=0, style=solid];
m8_703 -> m8_704  [key=0, style=solid];
m8_703 -> m8_709  [key=0, style=solid];
m8_703 -> m8_714  [key=0, style=solid];
m8_684 -> m8_685  [key=0, style=solid];
m8_688 -> m8_716  [key=0, style=solid];
m8_688 -> m8_694  [key=0, style=solid];
m8_713 -> m8_717  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_713 -> m8_716  [key=0, style=solid];
m8_686 -> m8_693  [color=darkseagreen4, key=1, label=currentList, style=dashed];
m8_686 -> m8_687  [key=0, style=solid];
m8_686 -> m8_725  [key=2, style=dotted];
m8_694 -> m8_695  [key=0, style=solid];
m8_700 -> m8_716  [key=0, style=solid];
m8_687 -> m8_698  [color=darkseagreen4, key=1, label=previousErrorIndex, style=dashed];
m8_687 -> m8_716  [key=0, style=solid];
m8_687 -> m8_694  [key=0, style=solid];
m8_685 -> m8_686  [key=0, style=solid];
m8_685 -> m8_724  [key=2, style=dotted];
m8_707 -> m8_708  [key=0, style=solid];
m8_707 -> m8_723  [key=2, style=dotted];
m8_710 -> m8_711  [key=0, style=solid];
m8_710 -> m8_724  [key=2, style=dotted];
m8_711 -> m8_713  [key=0, style=solid];
m8_711 -> m8_712  [key=0, style=solid];
m8_712 -> m8_716  [key=0, style=solid];
m8_712 -> m8_725  [key=2, style=dotted];
m8_706 -> m8_726  [key=2, style=dotted];
m8_706 -> m8_707  [key=0, style=solid];
m8_705 -> m8_707  [color=darkseagreen4, key=1, label=newList, style=dashed];
m8_705 -> m8_706  [key=0, style=solid];
m8_705 -> m8_728  [key=2, style=dotted];
m8_705 -> m8_708  [color=darkseagreen4, key=1, label=newList, style=dashed];
m8_714 -> m8_716  [key=0, style=solid];
m8_708 -> m8_716  [key=0, style=solid];
m8_704 -> m8_705  [key=0, style=solid];
m8_709 -> m8_710  [key=0, style=solid];
m8_721 -> m8_446  [color=blue, key=0, style=bold];
m8_75 -> m8_11  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_75 -> m8_50  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_75 -> m8_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_673  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_75 -> m8_831  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_75 -> m8_162  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_75 -> m8_33  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_75 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_75 -> m8_47  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_75 -> m8_125  [key=0, style=solid];
m8_75 -> m8_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_139  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_140  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_75 -> m8_142  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_75 -> m8_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_150  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m8_75 -> m8_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_156  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_158  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_75 -> m8_160  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_75 -> m8_482  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_75 -> m8_446  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_75 -> m8_277  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_75 -> m8_912  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_75 -> m8_1071  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerMember", style=bold];
m8_75 -> m8_202  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_75 -> m8_830  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_75 -> m8_229  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_75 -> m8_485  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_75 -> m8_950  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m8_75 -> m8_92  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_75 -> m8_161  [color=darkorchid, key=3, label="method methodReturn object CreateValueInternal", style=bold];
m8_126 -> m8_159  [key=0, style=solid];
m8_126 -> m8_92  [key=2, style=dotted];
m8_129 -> m8_159  [key=0, style=solid];
m8_129 -> m8_160  [key=2, style=dotted];
m8_131 -> m8_159  [key=0, style=solid];
m8_131 -> m8_161  [key=2, style=dotted];
m8_137 -> m8_159  [key=0, style=solid];
m8_137 -> m8_162  [key=2, style=dotted];
m8_144 -> m8_159  [key=0, style=solid];
m8_144 -> m8_162  [key=2, style=dotted];
m8_147 -> m8_159  [key=0, style=solid];
m8_147 -> m8_162  [key=2, style=dotted];
m8_152 -> m8_159  [key=0, style=solid];
m8_152 -> m8_162  [key=2, style=dotted];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_127  [key=0, style=solid];
m8_157 -> m8_126  [key=0, style=solid];
m8_157 -> m8_158  [key=0, style=solid];
m8_157 -> m8_31  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_130 -> m8_131  [key=0, style=solid];
m8_136 -> m8_137  [key=0, style=solid];
m8_139 -> m8_144  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_143  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_142 -> m8_144  [key=0, style=solid];
m8_142 -> m8_143  [key=0, style=solid];
m8_146 -> m8_147  [key=0, style=solid];
m8_146 -> m8_37  [key=2, style=dotted];
m8_150 -> m8_152  [key=0, style=solid];
m8_150 -> m8_151  [key=0, style=solid];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_130  [key=0, style=solid];
m8_127 -> m8_132  [key=0, style=solid];
m8_127 -> m8_138  [key=0, style=solid];
m8_127 -> m8_145  [key=0, style=solid];
m8_127 -> m8_148  [key=0, style=solid];
m8_127 -> m8_153  [key=0, style=solid];
m8_127 -> m8_155  [key=0, style=solid];
m8_127 -> m8_156  [key=0, style=solid];
m8_140 -> m8_142  [key=0, style=solid];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_163  [key=2, style=dotted];
m8_154 -> m8_159  [key=0, style=solid];
m8_154 -> m8_165  [key=2, style=dotted];
m8_156 -> m8_159  [key=0, style=solid];
m8_156 -> m8_35  [key=2, style=dotted];
m8_158 -> m8_159  [key=0, style=solid];
m8_158 -> m8_35  [key=2, style=dotted];
m8_155 -> m8_157  [key=0, style=solid];
m8_143 -> m8_159  [key=0, style=solid];
m8_143 -> m8_164  [key=2, style=dotted];
m8_141 -> m8_159  [key=0, style=solid];
m8_151 -> m8_159  [key=0, style=solid];
m8_135 -> m8_136  [key=0, style=solid];
m8_138 -> m8_139  [key=0, style=solid];
m8_145 -> m8_146  [key=0, style=solid];
m8_149 -> m8_150  [key=0, style=solid];
m8_132 -> m8_133  [key=0, style=solid];
m8_148 -> m8_149  [key=0, style=solid];
m8_153 -> m8_154  [key=0, style=solid];
m8_134 -> m8_135  [key=0, style=solid];
m8_133 -> m8_134  [key=0, style=solid];
m8_159 -> m8_75  [color=blue, key=0, style=bold];
m8_22 -> m8_27  [key=0, style=solid];
m8_22 -> m8_39  [key=2, style=dotted];
m8_22 -> m8_40  [key=2, style=dotted];
m8_24 -> m8_27  [key=0, style=solid];
m8_24 -> m8_41  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=0, style=solid];
m8_25 -> m8_27  [key=0, style=solid];
m8_25 -> m8_35  [key=2, style=dotted];
m8_25 -> m8_34  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_35  [key=2, style=dotted];
m8_26 -> m8_34  [key=2, style=dotted];
m8_27 -> m8_2  [color=blue, key=0, style=bold];
m8_41 -> m8_5  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m8_41 -> m8_11  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m8_41 -> m8_1030  [key=0, style=solid];
m8_41 -> m8_1031  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_41 -> m8_1033  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_41 -> m8_1039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1043  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1047  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_41 -> m8_1050  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_41 -> m8_1051  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1053  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1054  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_41 -> m8_1055  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_41 -> m8_1057  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_41 -> m8_1058  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1066  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_41 -> m8_1067  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_41 -> m8_1068  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_41 -> m8_41  [color=darkorchid, key=3, label="method methodReturn object PopulateObject", style=bold];
m8_41 -> m8_1032  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_41 -> m8_1034  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1036  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1038  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1040  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_41 -> m8_1045  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1046  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1052  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1063  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1064  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_41 -> m8_1069  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_41 -> m8_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_41 -> m8_221  [color=darkorchid, key=3, label="Parameter variable object newObject", style=bold];
m8_41 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m8_41 -> m8_220  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonObjectContract contract", style=bold];
m8_41 -> m8_15  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_41 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_1030 -> m8_1031  [key=0, style=solid];
m8_1030 -> m8_602  [key=2, style=dotted];
m8_1031 -> m8_540  [key=2, style=dotted];
m8_1031 -> m8_1032  [key=0, style=solid];
m8_1031 -> m8_908  [key=2, style=dotted];
m8_1031 -> m8_1073  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1031 -> m8_1076  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1031 -> m8_1053  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_1031 -> m8_1067  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_1033 -> m8_1034  [key=0, style=solid];
m8_1033 -> m8_544  [key=2, style=dotted];
m8_1039 -> m8_1040  [key=0, style=solid];
m8_1039 -> m8_1064  [key=0, style=solid];
m8_1039 -> m8_121  [key=2, style=dotted];
m8_1042 -> m8_1043  [key=0, style=solid];
m8_1042 -> m8_1044  [key=0, style=solid];
m8_1043 -> m8_1044  [key=0, style=solid];
m8_1043 -> m8_279  [key=2, style=dotted];
m8_1043 -> m8_334  [key=2, style=dotted];
m8_1043 -> m8_335  [key=2, style=dotted];
m8_1044 -> m8_1045  [key=0, style=solid];
m8_1044 -> m8_1046  [key=0, style=solid];
m8_1047 -> m8_1064  [key=0, style=solid];
m8_1047 -> m8_1071  [key=2, style=dotted];
m8_1049 -> m8_1050  [key=0, style=solid];
m8_1049 -> m8_42  [key=2, style=dotted];
m8_1050 -> m8_1051  [key=0, style=solid];
m8_1050 -> m8_72  [key=2, style=dotted];
m8_1050 -> m8_1054  [color=darkseagreen4, key=1, label=propertyConverter, style=dashed];
m8_1051 -> m8_1052  [key=0, style=solid];
m8_1051 -> m8_1053  [key=0, style=solid];
m8_1051 -> m8_73  [key=2, style=dotted];
m8_1053 -> m8_1054  [key=0, style=solid];
m8_1053 -> m8_1072  [key=2, style=dotted];
m8_1054 -> m8_1055  [key=0, style=solid];
m8_1054 -> m8_1056  [key=0, style=solid];
m8_1054 -> m8_1064  [key=0, style=solid];
m8_1054 -> m8_482  [key=2, style=dotted];
m8_1055 -> m8_1056  [key=0, style=solid];
m8_1055 -> m8_1064  [key=0, style=solid];
m8_1055 -> m8_1071  [key=2, style=dotted];
m8_1057 -> m8_1058  [key=0, style=solid];
m8_1057 -> m8_1059  [key=0, style=solid];
m8_1057 -> m8_77  [key=2, style=dotted];
m8_1058 -> m8_1064  [key=0, style=solid];
m8_1058 -> m8_78  [key=2, style=dotted];
m8_1066 -> m8_1067  [key=0, style=solid];
m8_1066 -> m8_668  [key=2, style=dotted];
m8_1067 -> m8_1068  [key=0, style=solid];
m8_1067 -> m8_920  [key=2, style=dotted];
m8_1068 -> m8_1069  [key=0, style=solid];
m8_1068 -> m8_608  [key=2, style=dotted];
m8_1035 -> m8_66  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_1035 -> m8_1036  [key=0, style=solid];
m8_1032 -> m8_1033  [key=0, style=solid];
m8_1032 -> m8_1034  [key=0, style=solid];
m8_1034 -> m8_1058  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_1034 -> m8_1067  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_1034 -> m8_1035  [key=0, style=solid];
m8_1038 -> m8_1039  [key=0, style=solid];
m8_1038 -> m8_1043  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_1038 -> m8_1047  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_1038 -> m8_1055  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_1038 -> m8_1057  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_1038 -> m8_37  [key=2, style=dotted];
m8_1038 -> m8_1040  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_1038 -> m8_1045  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_1038 -> m8_1052  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_1040 -> m8_1049  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1040 -> m8_1050  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1040 -> m8_1051  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1040 -> m8_1053  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1040 -> m8_1054  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1040 -> m8_1041  [key=0, style=solid];
m8_1040 -> m8_851  [key=2, style=dotted];
m8_1040 -> m8_1048  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_1064 -> m8_1035  [key=0, style=solid];
m8_1064 -> m8_1065  [key=0, style=solid];
m8_1064 -> m8_31  [key=2, style=dotted];
m8_1041 -> m8_1042  [key=0, style=solid];
m8_1041 -> m8_1048  [key=0, style=solid];
m8_1045 -> m8_279  [key=2, style=dotted];
m8_1045 -> m8_35  [key=2, style=dotted];
m8_1045 -> m8_1064  [key=0, style=solid];
m8_1046 -> m8_1047  [key=0, style=solid];
m8_1046 -> m8_1064  [key=0, style=solid];
m8_1046 -> m8_31  [key=2, style=dotted];
m8_1048 -> m8_1049  [key=0, style=solid];
m8_1048 -> m8_1050  [key=0, style=solid];
m8_1052 -> m8_35  [key=2, style=dotted];
m8_1052 -> m8_34  [key=2, style=dotted];
m8_1052 -> m8_1064  [key=0, style=solid];
m8_1056 -> m8_1057  [key=0, style=solid];
m8_1059 -> m8_1070  [key=0, style=solid];
m8_1065 -> m8_1066  [key=0, style=solid];
m8_1065 -> m8_1067  [key=0, style=solid];
m8_1069 -> m8_1070  [key=0, style=solid];
m8_1036 -> m8_1037  [key=0, style=solid];
m8_1036 -> m8_1060  [key=0, style=solid];
m8_1036 -> m8_1062  [key=0, style=solid];
m8_1036 -> m8_1063  [key=0, style=solid];
m8_1063 -> m8_35  [key=2, style=dotted];
m8_1063 -> m8_1070  [key=0, style=solid];
m8_1037 -> m8_1038  [key=0, style=solid];
m8_1062 -> m8_1064  [key=0, style=solid];
m8_1061 -> m8_1064  [key=0, style=solid];
m8_1061 -> m8_1065  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_1060 -> m8_1061  [key=0, style=solid];
m8_1070 -> m8_41  [color=blue, key=0, style=bold];
m8_1071 -> m8_1090  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_1071 -> m8_41  [color=darkorchid, key=3, label="Parameter variable object o", style=bold];
m8_1071 -> m8_1038  [color=darkorchid, key=3, label="Parameter variable string memberName", style=bold];
m8_1071 -> m8_1089  [key=0, style=solid];
m8_1071 -> m8_1091  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_1071 -> m8_1093  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_1071 -> m8_1094  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_1090 -> m8_1091  [key=0, style=solid];
m8_1090 -> m8_75  [key=2, style=dotted];
m8_1089 -> m8_1090  [key=0, style=solid];
m8_1089 -> m8_1094  [key=0, style=solid];
m8_1091 -> m8_1092  [key=0, style=solid];
m8_1091 -> m8_1095  [key=0, style=solid];
m8_1091 -> m8_919  [key=2, style=dotted];
m8_1093 -> m8_34  [key=2, style=dotted];
m8_1093 -> m8_1095  [key=0, style=solid];
m8_1093 -> m8_400  [key=2, style=dotted];
m8_1094 -> m8_336  [key=2, style=dotted];
m8_1094 -> m8_1095  [key=0, style=solid];
m8_1092 -> m8_1093  [key=0, style=solid];
m8_1095 -> m8_1071  [color=blue, key=0, style=bold];
m8_121 -> m8_66  [color=darkorchid, key=3, label="method methodReturn bool CheckPropertyName", style=bold];
m8_121 -> m8_655  [color=darkorchid, key=3, label="method methodReturn bool CheckPropertyName", style=bold];
m8_121 -> m8_1079  [key=0, style=solid];
m8_121 -> m8_41  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_121 -> m8_40  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_121 -> m8_1080  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_121 -> m8_1085  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_121 -> m8_105  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_121 -> m8_110  [color=darkorchid, key=3, label="Parameter variable string memberName", style=bold];
m8_121 -> m8_1038  [color=darkorchid, key=3, label="Parameter variable string memberName", style=bold];
m8_1079 -> m8_1080  [key=0, style=solid];
m8_1079 -> m8_1087  [key=0, style=solid];
m8_1080 -> m8_1081  [key=0, style=solid];
m8_1087 -> m8_1088  [key=0, style=solid];
m8_1085 -> m8_1086  [key=0, style=solid];
m8_1085 -> m8_336  [key=2, style=dotted];
m8_1081 -> m8_1082  [key=0, style=solid];
m8_1086 -> m8_1088  [key=0, style=solid];
m8_1084 -> m8_1085  [key=0, style=solid];
m8_1082 -> m8_1083  [key=0, style=solid];
m8_1083 -> m8_1084  [key=0, style=solid];
m8_1088 -> m8_121  [color=blue, key=0, style=bold];
m8_166 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_166 -> m8_167  [key=0, style=solid];
m8_166 -> m8_172  [color=darkorchid, key=3, label="method methodReturn string GetExpectedDescription", style=bold];
m8_166 -> m8_174  [color=darkorchid, key=3, label="method methodReturn string GetExpectedDescription", style=bold];
m8_166 -> m8_176  [color=darkorchid, key=3, label="method methodReturn string GetExpectedDescription", style=bold];
m8_166 -> m8_178  [color=darkorchid, key=3, label="method methodReturn string GetExpectedDescription", style=bold];
m8_166 -> m8_401  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract contract", style=bold];
m8_167 -> m8_168  [key=0, style=solid];
m8_167 -> m8_173  [key=0, style=solid];
m8_167 -> m8_175  [key=0, style=solid];
m8_167 -> m8_177  [key=0, style=solid];
m8_167 -> m8_179  [key=0, style=solid];
m8_172 -> m8_180  [key=0, style=solid];
m8_174 -> m8_180  [key=0, style=solid];
m8_176 -> m8_180  [key=0, style=solid];
m8_178 -> m8_180  [key=0, style=solid];
m8_179 -> m8_180  [key=0, style=solid];
m8_179 -> m8_181  [key=2, style=dotted];
m8_168 -> m8_169  [key=0, style=solid];
m8_173 -> m8_174  [key=0, style=solid];
m8_175 -> m8_176  [key=0, style=solid];
m8_177 -> m8_178  [key=0, style=solid];
m8_171 -> m8_172  [key=0, style=solid];
m8_169 -> m8_170  [key=0, style=solid];
m8_170 -> m8_171  [key=0, style=solid];
m8_180 -> m8_166  [color=blue, key=0, style=bold];
m8_278 -> m8_777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_778  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m8_278 -> m8_786  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_795  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_798  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m8_278 -> m8_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_801  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty member", style=bold];
m8_278 -> m8_264  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonISerializableContract contract", style=bold];
m8_278 -> m8_773  [key=0, style=solid];
m8_278 -> m8_775  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_780  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_782  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_783  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_784  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_785  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_788  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_792  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_793  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_796  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m8_278 -> m8_797  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_278 -> m8_799  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_278 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_776 -> m8_777  [key=0, style=solid];
m8_776 -> m8_778  [key=0, style=solid];
m8_777 -> m8_778  [key=0, style=solid];
m8_777 -> m8_34  [key=2, style=dotted];
m8_777 -> m8_334  [key=2, style=dotted];
m8_777 -> m8_335  [key=2, style=dotted];
m8_778 -> m8_779  [key=0, style=solid];
m8_778 -> m8_805  [key=2, style=dotted];
m8_778 -> m8_86  [key=2, style=dotted];
m8_778 -> m8_787  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m8_778 -> m8_788  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m8_778 -> m8_795  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m8_778 -> m8_798  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m8_786 -> m8_787  [key=0, style=solid];
m8_786 -> m8_160  [key=2, style=dotted];
m8_795 -> m8_796  [key=0, style=solid];
m8_795 -> m8_668  [key=2, style=dotted];
m8_798 -> m8_799  [key=0, style=solid];
m8_798 -> m8_276  [key=2, style=dotted];
m8_798 -> m8_800  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_798 -> m8_801  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_798 -> m8_802  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_798 -> m8_803  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_800 -> m8_801  [key=0, style=solid];
m8_800 -> m8_544  [key=2, style=dotted];
m8_801 -> m8_802  [key=0, style=solid];
m8_801 -> m8_602  [key=2, style=dotted];
m8_802 -> m8_803  [key=0, style=solid];
m8_802 -> m8_608  [key=2, style=dotted];
m8_779 -> m8_66  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_779 -> m8_780  [key=0, style=solid];
m8_774 -> m8_776  [key=0, style=solid];
m8_774 -> m8_775  [key=0, style=solid];
m8_787 -> m8_793  [key=0, style=solid];
m8_787 -> m8_806  [key=2, style=dotted];
m8_788 -> m8_793  [key=0, style=solid];
m8_788 -> m8_268  [key=2, style=dotted];
m8_788 -> m8_806  [key=2, style=dotted];
m8_785 -> m8_786  [key=0, style=solid];
m8_785 -> m8_788  [key=0, style=solid];
m8_794 -> m8_795  [key=0, style=solid];
m8_794 -> m8_796  [key=0, style=solid];
m8_796 -> m8_798  [key=0, style=solid];
m8_796 -> m8_797  [key=0, style=solid];
m8_799 -> m8_800  [key=0, style=solid];
m8_799 -> m8_801  [key=0, style=solid];
m8_803 -> m8_804  [key=0, style=solid];
m8_793 -> m8_779  [key=0, style=solid];
m8_793 -> m8_794  [key=0, style=solid];
m8_793 -> m8_31  [key=2, style=dotted];
m8_780 -> m8_781  [key=0, style=solid];
m8_780 -> m8_789  [key=0, style=solid];
m8_780 -> m8_790  [key=0, style=solid];
m8_780 -> m8_792  [key=0, style=solid];
m8_773 -> m8_774  [key=0, style=solid];
m8_773 -> m8_775  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m8_773 -> m8_797  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m8_775 -> m8_35  [key=2, style=dotted];
m8_775 -> m8_34  [key=2, style=dotted];
m8_775 -> m8_804  [key=0, style=solid];
m8_782 -> m8_37  [key=2, style=dotted];
m8_782 -> m8_787  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_782 -> m8_788  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_782 -> m8_783  [key=0, style=solid];
m8_782 -> m8_784  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m8_783 -> m8_785  [key=0, style=solid];
m8_783 -> m8_31  [key=2, style=dotted];
m8_783 -> m8_784  [key=0, style=solid];
m8_784 -> m8_35  [key=2, style=dotted];
m8_784 -> m8_34  [key=2, style=dotted];
m8_784 -> m8_804  [key=0, style=solid];
m8_792 -> m8_35  [key=2, style=dotted];
m8_792 -> m8_804  [key=0, style=solid];
m8_797 -> m8_35  [key=2, style=dotted];
m8_797 -> m8_34  [key=2, style=dotted];
m8_797 -> m8_804  [key=0, style=solid];
m8_791 -> m8_794  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_791 -> m8_793  [key=0, style=solid];
m8_789 -> m8_793  [key=0, style=solid];
m8_781 -> m8_782  [key=0, style=solid];
m8_790 -> m8_791  [key=0, style=solid];
m8_804 -> m8_278  [color=blue, key=0, style=bold];
m8_504 -> m8_66  [color=darkorchid, key=3, label="method methodReturn bool CalculatePropertyDetails", style=bold];
m8_504 -> m8_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_655  [color=darkorchid, key=3, label="method methodReturn bool CalculatePropertyDetails", style=bold];
m8_504 -> m8_42  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract propertyContract", style=bold];
m8_504 -> m8_72  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonConverter propertyConverter", style=bold];
m8_504 -> m8_482  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m8_504 -> m8_509  [key=0, style=solid];
m8_504 -> m8_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_504 -> m8_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_520  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m8_504 -> m8_537  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m8_504 -> m8_484  [color=darkorchid, key=3, label="Parameter variable bool useExistingValue", style=bold];
m8_504 -> m8_483  [color=darkorchid, key=3, label="Parameter variable object currentValue", style=bold];
m8_504 -> m8_485  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonContract propertyContract", style=bold];
m8_504 -> m8_486  [color=darkorchid, key=3, label="Parameter variable bool gottenCurrentValue", style=bold];
m8_517 -> m8_518  [key=0, style=solid];
m8_517 -> m8_42  [key=2, style=dotted];
m8_518 -> m8_538  [key=2, style=dotted];
m8_518 -> m8_519  [key=0, style=solid];
m8_523 -> m8_524  [key=0, style=solid];
m8_523 -> m8_29  [key=2, style=dotted];
m8_523 -> m8_42  [key=2, style=dotted];
m8_527 -> m8_538  [key=2, style=dotted];
m8_527 -> m8_528  [key=0, style=solid];
m8_527 -> m8_529  [key=0, style=solid];
m8_529 -> m8_538  [key=2, style=dotted];
m8_529 -> m8_540  [key=2, style=dotted];
m8_529 -> m8_530  [key=0, style=solid];
m8_529 -> m8_531  [key=0, style=solid];
m8_529 -> m8_541  [key=2, style=dotted];
m8_529 -> m8_542  [key=2, style=dotted];
m8_529 -> m8_543  [key=2, style=dotted];
m8_533 -> m8_534  [key=0, style=solid];
m8_533 -> m8_29  [key=2, style=dotted];
m8_533 -> m8_42  [key=2, style=dotted];
m8_533 -> m8_535  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_533 -> m8_537  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_535 -> m8_536  [key=0, style=solid];
m8_535 -> m8_72  [key=2, style=dotted];
m8_535 -> m8_537  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.JsonConverter", style=dashed];
m8_516 -> m8_517  [key=0, style=solid];
m8_516 -> m8_518  [key=0, style=solid];
m8_519 -> m8_520  [key=0, style=solid];
m8_519 -> m8_525  [key=0, style=solid];
m8_520 -> m8_523  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_520 -> m8_533  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_520 -> m8_521  [key=0, style=solid];
m8_520 -> m8_505  [key=2, style=dotted];
m8_520 -> m8_522  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_520 -> m8_531  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_520 -> m8_537  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_522 -> m8_523  [key=0, style=solid];
m8_522 -> m8_525  [key=0, style=solid];
m8_524 -> m8_525  [key=0, style=solid];
m8_524 -> m8_539  [key=2, style=dotted];
m8_524 -> m8_537  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_515 -> m8_527  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m8_515 -> m8_529  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m8_515 -> m8_516  [key=0, style=solid];
m8_515 -> m8_519  [color=darkseagreen4, key=1, label=tokenType, style=dashed];
m8_525 -> m8_527  [key=0, style=solid];
m8_525 -> m8_526  [key=0, style=solid];
m8_528 -> m8_537  [key=0, style=solid];
m8_530 -> m8_537  [key=0, style=solid];
m8_531 -> m8_533  [key=0, style=solid];
m8_531 -> m8_532  [key=0, style=solid];
m8_509 -> m8_533  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_509 -> m8_531  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_509 -> m8_510  [key=0, style=solid];
m8_509 -> m8_537  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_534 -> m8_535  [key=0, style=solid];
m8_534 -> m8_536  [key=0, style=solid];
m8_536 -> m8_537  [key=0, style=solid];
m8_513 -> m8_515  [key=0, style=solid];
m8_513 -> m8_514  [key=0, style=solid];
m8_532 -> m8_537  [color=darkseagreen4, key=1, label="out Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m8_532 -> m8_536  [key=0, style=solid];
m8_521 -> m8_522  [key=0, style=solid];
m8_521 -> m8_537  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_510 -> m8_525  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_510 -> m8_537  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_510 -> m8_511  [key=0, style=solid];
m8_526 -> m8_537  [key=0, style=solid];
m8_512 -> m8_537  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m8_512 -> m8_513  [key=0, style=solid];
m8_514 -> m8_537  [key=0, style=solid];
m8_511 -> m8_512  [key=0, style=solid];
m8_537 -> m8_504  [color=blue, key=0, style=bold];
m8_853 -> m8_855  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_853 -> m8_859  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_853 -> m8_861  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_853 -> m8_876  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_853 -> m8_877  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_853 -> m8_904  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_853 -> m8_905  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_853 -> m8_274  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_853 -> m8_854  [key=0, style=solid];
m8_853 -> m8_856  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_853 -> m8_858  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_853 -> m8_862  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_853 -> m8_865  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_853 -> m8_867  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_853 -> m8_874  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ObjectConstructor<object>", style=dashed];
m8_853 -> m8_875  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_853 -> m8_903  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m8_855 -> m8_540  [key=2, style=dotted];
m8_855 -> m8_856  [key=0, style=solid];
m8_855 -> m8_908  [key=2, style=dotted];
m8_855 -> m8_921  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_855 -> m8_924  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_855 -> m8_870  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_855 -> m8_871  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_855 -> m8_873  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_855 -> m8_904  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m8_857 -> m8_858  [key=0, style=solid];
m8_857 -> m8_860  [key=0, style=solid];
m8_859 -> m8_860  [key=0, style=solid];
m8_859 -> m8_279  [key=2, style=dotted];
m8_859 -> m8_334  [key=2, style=dotted];
m8_859 -> m8_335  [key=2, style=dotted];
m8_861 -> m8_862  [key=0, style=solid];
m8_861 -> m8_912  [key=2, style=dotted];
m8_861 -> m8_864  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m8_861 -> m8_901  [color=darkseagreen4, key=1, label=extensionData, style=dashed];
m8_861 -> m8_902  [color=darkseagreen4, key=1, label=extensionData, style=dashed];
m8_876 -> m8_877  [key=0, style=solid];
m8_876 -> m8_544  [key=2, style=dotted];
m8_877 -> m8_878  [key=0, style=solid];
m8_877 -> m8_602  [key=2, style=dotted];
m8_881 -> m8_882  [key=0, style=solid];
m8_881 -> m8_883  [key=0, style=solid];
m8_881 -> m8_506  [key=2, style=dotted];
m8_884 -> m8_885  [key=0, style=solid];
m8_884 -> m8_30  [key=2, style=dotted];
m8_884 -> m8_886  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m8_884 -> m8_893  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m8_884 -> m8_894  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m8_904 -> m8_905  [key=0, style=solid];
m8_904 -> m8_920  [key=2, style=dotted];
m8_905 -> m8_906  [key=0, style=solid];
m8_905 -> m8_608  [key=2, style=dotted];
m8_854 -> m8_855  [key=0, style=solid];
m8_854 -> m8_28  [key=2, style=dotted];
m8_856 -> m8_857  [key=0, style=solid];
m8_856 -> m8_861  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m8_870 -> m8_871  [key=0, style=solid];
m8_870 -> m8_864  [key=0, style=solid];
m8_871 -> m8_871  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_871 -> m8_872  [key=0, style=solid];
m8_871 -> m8_917  [key=2, style=dotted];
m8_871 -> m8_933  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_871 -> m8_934  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_871 -> m8_873  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_873 -> m8_873  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_873 -> m8_864  [key=0, style=solid];
m8_858 -> m8_859  [key=0, style=solid];
m8_858 -> m8_909  [key=2, style=dotted];
m8_858 -> m8_910  [key=2, style=dotted];
m8_858 -> m8_911  [key=2, style=dotted];
m8_858 -> m8_927  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_860 -> m8_861  [key=0, style=solid];
m8_862 -> m8_863  [key=0, style=solid];
m8_862 -> m8_868  [color=darkseagreen4, key=1, label=creatorParameterValues, style=dashed];
m8_862 -> m8_874  [color=darkseagreen4, key=1, label=creatorParameterValues, style=dashed];
m8_864 -> m8_865  [key=0, style=solid];
m8_864 -> m8_874  [key=0, style=solid];
m8_901 -> m8_904  [key=0, style=solid];
m8_901 -> m8_902  [key=0, style=solid];
m8_902 -> m8_904  [key=0, style=solid];
m8_902 -> m8_903  [key=0, style=solid];
m8_874 -> m8_876  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_874 -> m8_877  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_874 -> m8_904  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_874 -> m8_905  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_874 -> m8_276  [key=2, style=dotted];
m8_874 -> m8_875  [key=0, style=solid];
m8_874 -> m8_882  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_874 -> m8_887  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_874 -> m8_895  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_874 -> m8_903  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_874 -> m8_906  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m8_875 -> m8_876  [key=0, style=solid];
m8_875 -> m8_877  [key=0, style=solid];
m8_878 -> m8_901  [key=0, style=solid];
m8_878 -> m8_879  [key=0, style=solid];
m8_879 -> m8_881  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_879 -> m8_884  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_879 -> m8_879  [color=darkseagreen4, key=1, label=remainingPropertyValue, style=dashed];
m8_879 -> m8_880  [key=0, style=solid];
m8_879 -> m8_882  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_879 -> m8_883  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_879 -> m8_887  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_879 -> m8_895  [color=darkseagreen4, key=1, label=property, style=dashed];
m8_880 -> m8_881  [key=0, style=solid];
m8_880 -> m8_880  [color=darkseagreen4, key=1, label=remainingPropertyValue, style=dashed];
m8_880 -> m8_882  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_880 -> m8_883  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_880 -> m8_890  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_880 -> m8_898  [color=darkseagreen4, key=1, label=value, style=dashed];
m8_882 -> m8_507  [key=2, style=dotted];
m8_882 -> m8_878  [key=0, style=solid];
m8_883 -> m8_884  [key=0, style=solid];
m8_883 -> m8_878  [key=0, style=solid];
m8_885 -> m8_886  [key=0, style=solid];
m8_885 -> m8_893  [key=0, style=solid];
m8_886 -> m8_887  [key=0, style=solid];
m8_886 -> m8_889  [color=darkseagreen4, key=1, label=propertyArrayContract, style=dashed];
m8_886 -> m8_890  [color=darkseagreen4, key=1, label=propertyArrayContract, style=dashed];
m8_893 -> m8_878  [key=0, style=solid];
m8_893 -> m8_894  [key=0, style=solid];
m8_894 -> m8_895  [key=0, style=solid];
m8_894 -> m8_897  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_894 -> m8_898  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m8_906 -> m8_907  [key=0, style=solid];
m8_890 -> m8_32  [key=2, style=dotted];
m8_890 -> m8_891  [key=0, style=solid];
m8_889 -> m8_32  [key=2, style=dotted];
m8_889 -> m8_890  [key=0, style=solid];
m8_889 -> m8_892  [color=darkseagreen4, key=1, label=createdObjectCollectionWrapper, style=dashed];
m8_898 -> m8_39  [key=2, style=dotted];
m8_898 -> m8_899  [key=0, style=solid];
m8_897 -> m8_39  [key=2, style=dotted];
m8_897 -> m8_898  [key=0, style=solid];
m8_897 -> m8_900  [color=darkseagreen4, key=1, label=targetDictionary, style=dashed];
m8_865 -> m8_871  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_865 -> m8_865  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_865 -> m8_866  [key=0, style=solid];
m8_865 -> m8_914  [key=2, style=dotted];
m8_865 -> m8_930  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_865 -> m8_867  [color=darkseagreen4, key=1, label=matchingCreatorParameter, style=dashed];
m8_865 -> m8_868  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_865 -> m8_869  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_867 -> m8_868  [key=0, style=solid];
m8_867 -> m8_915  [key=2, style=dotted];
m8_903 -> m8_902  [key=0, style=solid];
m8_903 -> m8_903  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_903 -> m8_919  [key=2, style=dotted];
m8_868 -> m8_870  [key=0, style=solid];
m8_868 -> m8_871  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_868 -> m8_868  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m8_869 -> m8_870  [key=0, style=solid];
m8_869 -> m8_916  [key=2, style=dotted];
m8_872 -> m8_873  [key=0, style=solid];
m8_872 -> m8_864  [key=0, style=solid];
m8_863 -> m8_864  [key=0, style=solid];
m8_863 -> m8_878  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m8_863 -> m8_869  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m8_863 -> m8_913  [key=2, style=dotted];
m8_887 -> m8_889  [color=darkseagreen4, key=1, label=createdObjectCollection, style=dashed];
m8_887 -> m8_505  [key=2, style=dotted];
m8_887 -> m8_888  [key=0, style=solid];
m8_895 -> m8_897  [color=darkseagreen4, key=1, label=createdObjectDictionary, style=dashed];
m8_895 -> m8_505  [key=2, style=dotted];
m8_895 -> m8_896  [key=0, style=solid];
m8_888 -> m8_878  [key=0, style=solid];
m8_888 -> m8_889  [key=0, style=solid];
m8_891 -> m8_878  [key=0, style=solid];
m8_891 -> m8_892  [key=0, style=solid];
m8_896 -> m8_878  [key=0, style=solid];
m8_896 -> m8_897  [key=0, style=solid];
m8_899 -> m8_878  [key=0, style=solid];
m8_899 -> m8_900  [key=0, style=solid];
m8_892 -> m8_726  [key=2, style=dotted];
m8_892 -> m8_891  [key=0, style=solid];
m8_900 -> m8_899  [key=0, style=solid];
m8_900 -> m8_900  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m8_900 -> m8_918  [key=2, style=dotted];
m8_866 -> m8_867  [key=0, style=solid];
m8_866 -> m8_869  [key=0, style=solid];
m8_907 -> m8_853  [color=blue, key=0, style=bold];
m8_271 -> m8_66  [color=darkorchid, key=3, label="method methodReturn bool ReadMetadataProperties", style=bold];
m8_271 -> m8_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_655  [color=darkorchid, key=3, label="method methodReturn bool ReadMetadataProperties", style=bold];
m8_271 -> m8_160  [color=darkorchid, key=3, label="Parameter variable object existingValue", style=bold];
m8_271 -> m8_338  [key=0, style=solid];
m8_271 -> m8_340  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_341  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_349  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_377  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_271 -> m8_379  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_271 -> m8_202  [color=darkorchid, key=3, label="Parameter variable System.Type objectType", style=bold];
m8_271 -> m8_201  [color=darkorchid, key=3, label="Parameter variable object newValue", style=bold];
m8_271 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_346 -> m8_347  [key=0, style=solid];
m8_346 -> m8_36  [key=2, style=dotted];
m8_350 -> m8_351  [key=0, style=solid];
m8_350 -> m8_36  [key=2, style=dotted];
m8_354 -> m8_355  [key=0, style=solid];
m8_354 -> m8_332  [key=2, style=dotted];
m8_354 -> m8_333  [key=2, style=dotted];
m8_354 -> m8_356  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_354 -> m8_379  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_355 -> m8_356  [key=0, style=solid];
m8_355 -> m8_357  [key=0, style=solid];
m8_356 -> m8_357  [key=0, style=solid];
m8_356 -> m8_29  [key=2, style=dotted];
m8_356 -> m8_279  [key=2, style=dotted];
m8_356 -> m8_334  [key=2, style=dotted];
m8_356 -> m8_335  [key=2, style=dotted];
m8_360 -> m8_361  [key=0, style=solid];
m8_360 -> m8_36  [key=2, style=dotted];
m8_362 -> m8_362  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_362 -> m8_363  [key=0, style=solid];
m8_362 -> m8_337  [key=2, style=dotted];
m8_362 -> m8_379  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m8_363 -> m8_364  [key=0, style=solid];
m8_363 -> m8_36  [key=2, style=dotted];
m8_366 -> m8_367  [key=0, style=solid];
m8_366 -> m8_36  [key=2, style=dotted];
m8_368 -> m8_369  [key=0, style=solid];
m8_368 -> m8_36  [key=2, style=dotted];
m8_371 -> m8_372  [key=0, style=solid];
m8_371 -> m8_36  [key=2, style=dotted];
m8_372 -> m8_373  [key=0, style=solid];
m8_372 -> m8_161  [key=2, style=dotted];
m8_372 -> m8_374  [color=darkseagreen4, key=1, label=list, style=dashed];
m8_373 -> m8_374  [key=0, style=solid];
m8_373 -> m8_36  [key=2, style=dotted];
m8_345 -> m8_346  [key=0, style=solid];
m8_345 -> m8_359  [key=0, style=solid];
m8_345 -> m8_38  [key=2, style=dotted];
m8_347 -> m8_348  [key=0, style=solid];
m8_347 -> m8_349  [key=0, style=solid];
m8_349 -> m8_350  [key=0, style=solid];
m8_349 -> m8_354  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_349 -> m8_356  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_349 -> m8_37  [key=2, style=dotted];
m8_349 -> m8_351  [color=darkseagreen4, key=1, label=reference, style=dashed];
m8_351 -> m8_352  [key=0, style=solid];
m8_351 -> m8_358  [key=0, style=solid];
m8_352 -> m8_354  [key=0, style=solid];
m8_352 -> m8_353  [key=0, style=solid];
m8_357 -> m8_379  [key=0, style=solid];
m8_359 -> m8_360  [key=0, style=solid];
m8_359 -> m8_365  [key=0, style=solid];
m8_359 -> m8_38  [key=2, style=dotted];
m8_361 -> m8_362  [key=0, style=solid];
m8_361 -> m8_37  [key=2, style=dotted];
m8_364 -> m8_377  [key=0, style=solid];
m8_365 -> m8_366  [key=0, style=solid];
m8_365 -> m8_370  [key=0, style=solid];
m8_365 -> m8_38  [key=2, style=dotted];
m8_367 -> m8_368  [key=0, style=solid];
m8_367 -> m8_379  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_367 -> m8_37  [key=2, style=dotted];
m8_369 -> m8_377  [key=0, style=solid];
m8_370 -> m8_371  [key=0, style=solid];
m8_370 -> m8_376  [key=0, style=solid];
m8_370 -> m8_38  [key=2, style=dotted];
m8_338 -> m8_372  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_338 -> m8_379  [color=darkseagreen4, key=1, label="out string", style=dashed];
m8_338 -> m8_339  [key=0, style=solid];
m8_374 -> m8_379  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_374 -> m8_375  [key=0, style=solid];
m8_340 -> m8_341  [key=0, style=solid];
m8_340 -> m8_378  [key=0, style=solid];
m8_341 -> m8_37  [key=2, style=dotted];
m8_341 -> m8_342  [key=0, style=solid];
m8_344 -> m8_345  [key=0, style=solid];
m8_344 -> m8_359  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_344 -> m8_365  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_344 -> m8_370  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m8_344 -> m8_37  [key=2, style=dotted];
m8_348 -> m8_35  [key=2, style=dotted];
m8_348 -> m8_379  [key=0, style=solid];
m8_348 -> m8_34  [key=2, style=dotted];
m8_353 -> m8_35  [key=2, style=dotted];
m8_353 -> m8_379  [key=0, style=solid];
m8_353 -> m8_34  [key=2, style=dotted];
m8_377 -> m8_343  [key=0, style=solid];
m8_377 -> m8_378  [key=0, style=solid];
m8_358 -> m8_377  [key=0, style=solid];
m8_339 -> m8_379  [color=darkseagreen4, key=1, label="out object", style=dashed];
m8_339 -> m8_340  [key=0, style=solid];
m8_378 -> m8_379  [key=0, style=solid];
m8_375 -> m8_379  [key=0, style=solid];
m8_376 -> m8_377  [key=0, style=solid];
m8_342 -> m8_378  [key=0, style=solid];
m8_342 -> m8_343  [key=0, style=solid];
m8_343 -> m8_344  [key=0, style=solid];
m8_343 -> m8_377  [color=darkseagreen4, key=1, label=metadataProperty, style=dashed];
m8_379 -> m8_271  [color=blue, key=0, style=bold];
m8_40 -> m8_11  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_40 -> m8_242  [color=darkorchid, key=3, label="Parameter variable System.Collections.IDictionary dictionary", style=bold];
m8_40 -> m8_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_40 -> m8_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_40 -> m8_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_40 -> m8_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_651  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_654  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_21  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m8_40 -> m8_2  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m8_40 -> m8_15  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_40 -> m8_614  [key=0, style=solid];
m8_40 -> m8_615  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m8_40 -> m8_616  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_40 -> m8_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_40 -> m8_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_40 -> m8_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m8_40 -> m8_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_652  [color=darkseagreen4, key=1, label="System.Collections.IDictionary", style=dashed];
m8_40 -> m8_660  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_661  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m8_40 -> m8_160  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonProperty containerProperty", style=bold];
m8_40 -> m8_238  [color=darkorchid, key=3, label="Parameter variable Newtonsoft.Json.Serialization.JsonDictionaryContract contract", style=bold];
m8_40 -> m8_200  [color=darkorchid, key=3, label="Parameter variable string id", style=bold];
m8_617 -> m8_618  [key=0, style=solid];
m8_617 -> m8_544  [key=2, style=dotted];
m8_618 -> m8_619  [key=0, style=solid];
m8_618 -> m8_602  [key=2, style=dotted];
m8_621 -> m8_622  [key=0, style=solid];
m8_621 -> m8_42  [key=2, style=dotted];
m8_623 -> m8_624  [key=0, style=solid];
m8_623 -> m8_42  [key=2, style=dotted];
m8_624 -> m8_625  [key=0, style=solid];
m8_624 -> m8_72  [key=2, style=dotted];
m8_624 -> m8_646  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m8_624 -> m8_649  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m8_624 -> m8_650  [color=darkseagreen4, key=1, label=dictionaryValueConverter, style=dashed];
m8_630 -> m8_631  [key=0, style=solid];
m8_630 -> m8_661  [key=0, style=solid];
m8_630 -> m8_37  [key=2, style=dotted];
m8_630 -> m8_121  [key=2, style=dotted];
m8_643 -> m8_643  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_643 -> m8_644  [key=0, style=solid];
m8_643 -> m8_646  [key=0, style=solid];
m8_643 -> m8_162  [key=2, style=dotted];
m8_643 -> m8_652  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_643 -> m8_654  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_646 -> m8_647  [key=0, style=solid];
m8_646 -> m8_648  [key=0, style=solid];
m8_646 -> m8_73  [key=2, style=dotted];
m8_650 -> m8_652  [key=0, style=solid];
m8_650 -> m8_74  [key=2, style=dotted];
m8_651 -> m8_652  [key=0, style=solid];
m8_651 -> m8_75  [key=2, style=dotted];
m8_654 -> m8_655  [key=0, style=solid];
m8_654 -> m8_656  [key=0, style=solid];
m8_654 -> m8_77  [key=2, style=dotted];
m8_655 -> m8_661  [key=0, style=solid];
m8_655 -> m8_78  [key=2, style=dotted];
m8_663 -> m8_664  [key=0, style=solid];
m8_663 -> m8_668  [key=2, style=dotted];
m8_664 -> m8_665  [key=0, style=solid];
m8_664 -> m8_608  [key=2, style=dotted];
m8_626 -> m8_66  [color=darkorchid, key=3, label="Local variable bool finished", style=bold];
m8_626 -> m8_627  [key=0, style=solid];
m8_615 -> m8_617  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_615 -> m8_618  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_615 -> m8_654  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_615 -> m8_663  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_615 -> m8_664  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_615 -> m8_616  [key=0, style=solid];
m8_615 -> m8_665  [color=darkseagreen4, key=1, label=underlyingDictionary, style=dashed];
m8_616 -> m8_617  [key=0, style=solid];
m8_616 -> m8_618  [key=0, style=solid];
m8_619 -> m8_655  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m8_619 -> m8_620  [key=0, style=solid];
m8_620 -> m8_621  [key=0, style=solid];
m8_620 -> m8_622  [key=0, style=solid];
m8_622 -> m8_623  [key=0, style=solid];
m8_622 -> m8_624  [key=0, style=solid];
m8_625 -> m8_626  [key=0, style=solid];
m8_625 -> m8_632  [color=darkseagreen4, key=1, label=keyTypeCode, style=dashed];
m8_649 -> m8_650  [key=0, style=solid];
m8_649 -> m8_651  [key=0, style=solid];
m8_629 -> m8_630  [key=0, style=solid];
m8_629 -> m8_643  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_629 -> m8_162  [color=darkorchid, key=3, label="Local variable object keyValue", style=bold];
m8_629 -> m8_641  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_629 -> m8_640  [color=darkorchid, key=3, label="Local variable object keyValue", style=bold];
m8_631 -> m8_632  [key=0, style=solid];
m8_661 -> m8_626  [key=0, style=solid];
m8_661 -> m8_662  [key=0, style=solid];
m8_661 -> m8_31  [key=2, style=dotted];
m8_641 -> m8_643  [key=0, style=solid];
m8_641 -> m8_37  [key=2, style=dotted];
m8_641 -> m8_642  [key=0, style=solid];
m8_641 -> m8_667  [key=2, style=dotted];
m8_644 -> m8_645  [key=0, style=solid];
m8_652 -> m8_661  [key=0, style=solid];
m8_652 -> m8_653  [key=0, style=solid];
m8_642 -> m8_646  [key=0, style=solid];
m8_642 -> m8_654  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_642 -> m8_644  [key=0, style=solid];
m8_642 -> m8_652  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m8_647 -> m8_35  [key=2, style=dotted];
m8_647 -> m8_661  [key=0, style=solid];
m8_648 -> m8_75  [color=darkorchid, key=3, label="Local variable object itemValue", style=bold];
m8_648 -> m8_74  [color=darkorchid, key=3, label="Local variable object itemValue", style=bold];
m8_648 -> m8_649  [key=0, style=solid];
m8_653 -> m8_654  [key=0, style=solid];
m8_656 -> m8_666  [key=0, style=solid];
m8_662 -> m8_663  [key=0, style=solid];
m8_662 -> m8_664  [key=0, style=solid];
m8_665 -> m8_666  [key=0, style=solid];
m8_614 -> m8_615  [key=0, style=solid];
m8_627 -> m8_628  [key=0, style=solid];
m8_627 -> m8_657  [key=0, style=solid];
m8_627 -> m8_658  [key=0, style=solid];
m8_627 -> m8_660  [key=0, style=solid];
m8_645 -> m8_279  [key=2, style=dotted];
m8_645 -> m8_661  [key=0, style=solid];
m8_645 -> m8_400  [key=2, style=dotted];
m8_660 -> m8_35  [key=2, style=dotted];
m8_660 -> m8_666  [key=0, style=solid];
m8_632 -> m8_633  [key=0, style=solid];
m8_632 -> m8_636  [key=0, style=solid];
m8_632 -> m8_639  [key=0, style=solid];
m8_628 -> m8_629  [key=0, style=solid];
m8_640 -> m8_641  [key=0, style=solid];
m8_657 -> m8_661  [key=0, style=solid];
m8_659 -> m8_661  [key=0, style=solid];
m8_659 -> m8_662  [color=darkseagreen4, key=1, label=finished, style=dashed];
m8_639 -> m8_641  [color=darkseagreen4, key=1, label=dateParseHandling, style=dashed];
m8_639 -> m8_640  [key=0, style=solid];
m8_658 -> m8_659  [key=0, style=solid];
m8_633 -> m8_634  [key=0, style=solid];
m8_636 -> m8_637  [key=0, style=solid];
m8_635 -> m8_640  [key=0, style=solid];
m8_638 -> m8_640  [key=0, style=solid];
m8_634 -> m8_635  [key=0, style=solid];
m8_637 -> m8_638  [key=0, style=solid];
m8_666 -> m8_40  [color=blue, key=0, style=bold];
m8_1127 -> m8_1108  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_81  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_89  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_112  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_131  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_137  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_144  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_152  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_216  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_224  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_265  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_415  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_429  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_499  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_547  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_554  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_556  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_603  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_611  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_651  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_654  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_671  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_672  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_673  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_674  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_691  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_719  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_731  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_732  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_738  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_742  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_745  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_746  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_749  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_756  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_757  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_761  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_762  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_769  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_770  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_776  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_777  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_778  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_786  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_795  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_798  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_800  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_801  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_802  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_810  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_814  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_815  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_826  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_827  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_828  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_831  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_832  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_835  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_836  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_839  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_840  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_847  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_848  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_855  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_857  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_859  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_861  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_876  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_877  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_881  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_884  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_904  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_905  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_937  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_938  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_939  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_940  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_953  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_954  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_955  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_959  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_962  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_963  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_967  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_968  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_969  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_972  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1016  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1018  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1022  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1030  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1031  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1033  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1039  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1042  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1043  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1044  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1047  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1049  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1050  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1051  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1053  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1054  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1055  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1057  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1058  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1066  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1067  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1068  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1079  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1090  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1127 -> m8_1121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m8_1128 -> m8_934  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_8  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_6 -> m9_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_10 -> m9_6  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_4  [color=blue, key=0, style=bold];
m9_11 -> m9_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaException", style=dashed];
m9_11 -> m9_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaException", style=dashed];
m9_11 -> m9_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Schema.JsonSchemaException", style=dashed];
m10_439 -> m10_17  [key=2, style=dotted];
m10_439 -> m10_440  [key=0, style=solid];
m10_15 -> m10_16  [key=0, style=solid];
m10_1499 -> m10_1500  [key=0, style=solid];
m10_1501 -> m10_13  [key=2, style=dotted];
m10_1501 -> m10_14  [key=2, style=dotted];
m10_1501 -> m10_1502  [key=0, style=solid];
m10_1501 -> m10_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1500 -> m10_1501  [key=0, style=solid];
m10_1500 -> m10_1500  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1502 -> m10_1503  [key=0, style=solid];
m10_1502 -> m10_1504  [key=2, style=dotted];
m10_1502 -> m10_1505  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1503 -> m10_1499  [color=blue, key=0, style=bold];
m10_587 -> m10_17  [key=2, style=dotted];
m10_587 -> m10_588  [key=0, style=solid];
m10_537 -> m10_538  [key=0, style=solid];
m10_537 -> m10_115  [key=2, style=dotted];
m10_1758 -> m10_1759  [key=0, style=solid];
m10_1760 -> m10_13  [key=2, style=dotted];
m10_1760 -> m10_14  [key=2, style=dotted];
m10_1760 -> m10_1761  [key=0, style=solid];
m10_1760 -> m10_1762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1760 -> m10_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1761 -> m10_15  [key=2, style=dotted];
m10_1761 -> m10_16  [key=2, style=dotted];
m10_1761 -> m10_1762  [key=0, style=solid];
m10_1759 -> m10_1760  [key=0, style=solid];
m10_1759 -> m10_1759  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1762 -> m10_1763  [key=0, style=solid];
m10_1762 -> m10_1504  [key=2, style=dotted];
m10_1762 -> m10_1764  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1763 -> m10_1758  [color=blue, key=0, style=bold];
m10_1920 -> m10_1957  [key=0, style=solid];
m10_1957 -> m10_1958  [key=0, style=solid];
m10_1958 -> m10_1920  [color=blue, key=0, style=bold];
m10_110 -> m10_276  [key=0, style=solid];
m10_110 -> m10_277  [color=darkseagreen4, key=1, label="System.Reflection.ConstructorInfo", style=dashed];
m10_110 -> m10_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m10_110 -> m10_15  [key=2, style=dotted];
m10_110 -> m10_111  [key=0, style=solid];
m10_276 -> m10_277  [key=0, style=solid];
m10_276 -> m10_269  [key=2, style=dotted];
m10_276 -> m10_278  [color=darkseagreen4, key=1, label=constructorParameters, style=dashed];
m10_276 -> m10_17  [key=2, style=dotted];
m10_277 -> m10_278  [key=0, style=solid];
m10_277 -> m10_286  [key=2, style=dotted];
m10_277 -> m10_283  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m10_277 -> m10_284  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m10_277 -> m10_138  [key=2, style=dotted];
m10_279 -> m10_280  [key=0, style=solid];
m10_279 -> m10_270  [key=2, style=dotted];
m10_279 -> m10_281  [color=darkseagreen4, key=1, label=matchingMemberProperty, style=dashed];
m10_279 -> m10_17  [key=2, style=dotted];
m10_278 -> m10_279  [key=0, style=solid];
m10_278 -> m10_284  [key=0, style=solid];
m10_278 -> m10_280  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m10_278 -> m10_281  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m10_278 -> m10_17  [key=2, style=dotted];
m10_283 -> m10_278  [key=0, style=solid];
m10_283 -> m10_288  [key=2, style=dotted];
m10_283 -> m10_17  [key=2, style=dotted];
m10_283 -> m10_284  [key=0, style=solid];
m10_284 -> m10_285  [key=0, style=solid];
m10_284 -> m10_17  [key=2, style=dotted];
m10_280 -> m10_281  [key=0, style=solid];
m10_280 -> m10_278  [key=0, style=solid];
m10_280 -> m10_17  [key=2, style=dotted];
m10_281 -> m10_282  [key=0, style=solid];
m10_281 -> m10_287  [key=2, style=dotted];
m10_281 -> m10_283  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_281 -> m10_17  [key=2, style=dotted];
m10_282 -> m10_283  [key=0, style=solid];
m10_282 -> m10_278  [key=0, style=solid];
m10_282 -> m10_138  [key=2, style=dotted];
m10_285 -> m10_110  [color=blue, key=0, style=bold];
m10_285 -> m10_17  [key=2, style=dotted];
m10_285 -> m10_286  [key=0, style=solid];
m10_0 -> m10_1  [color=green, key=0, style=solid];
m10_1 -> m10_2  [color=green, key=0, style=solid];
m10_1 -> m10_1  [color=green, key=3, label="Local variable string json", style=bold];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_2 -> m10_3  [color=green, key=0, style=solid];
m10_2 -> m10_13  [color=green, key=2, style=dotted];
m10_2 -> m10_14  [color=green, key=2, style=dotted];
m10_2 -> m10_4  [color=green, key=1, label=reader, style=dashed];
m10_2 -> m10_5  [color=green, key=1, label=reader, style=dashed];
m10_2 -> m10_6  [color=green, key=1, label=reader, style=dashed];
m10_2 -> m10_7  [color=green, key=1, label=reader, style=dashed];
m10_2 -> m10_8  [color=green, key=1, label=reader, style=dashed];
m10_2 -> m10_9  [color=green, key=1, label=reader, style=dashed];
m10_2 -> m10_10  [color=green, key=1, label=reader, style=dashed];
m10_2 -> m10_11  [color=green, key=1, label=reader, style=dashed];
m10_2 -> m10_20  [color=green, key=1, label=reader, style=dashed];
m10_155 -> m10_17  [key=2, style=dotted];
m10_155 -> m10_156  [key=0, style=solid];
m10_404 -> m10_17  [key=2, style=dotted];
m10_404 -> m10_405  [key=0, style=solid];
m10_681 -> m10_682  [key=0, style=solid];
m10_683 -> m10_13  [key=2, style=dotted];
m10_683 -> m10_14  [key=2, style=dotted];
m10_683 -> m10_684  [key=0, style=solid];
m10_683 -> m10_681  [color=blue, key=0, style=bold];
m10_685 -> m10_13  [key=2, style=dotted];
m10_685 -> m10_14  [key=2, style=dotted];
m10_685 -> m10_686  [key=0, style=solid];
m10_685 -> m10_687  [key=0, style=solid];
m10_685 -> m10_657  [key=2, style=dotted];
m10_687 -> m10_13  [key=2, style=dotted];
m10_687 -> m10_14  [key=2, style=dotted];
m10_687 -> m10_688  [key=0, style=solid];
m10_687 -> m10_658  [color=blue, key=0, style=bold];
m10_689 -> m10_13  [key=2, style=dotted];
m10_689 -> m10_14  [key=2, style=dotted];
m10_689 -> m10_690  [key=0, style=solid];
m10_689 -> m10_691  [key=0, style=solid];
m10_691 -> m10_13  [key=2, style=dotted];
m10_691 -> m10_14  [key=2, style=dotted];
m10_691 -> m10_692  [key=0, style=solid];
m10_691 -> m10_708  [key=2, style=dotted];
m10_693 -> m10_13  [key=2, style=dotted];
m10_693 -> m10_14  [key=2, style=dotted];
m10_693 -> m10_694  [key=0, style=solid];
m10_693 -> m10_708  [key=2, style=dotted];
m10_695 -> m10_13  [key=2, style=dotted];
m10_695 -> m10_14  [key=2, style=dotted];
m10_695 -> m10_696  [key=0, style=solid];
m10_695 -> m10_709  [key=2, style=dotted];
m10_695 -> m10_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_695 -> m10_697  [key=0, style=solid];
m10_697 -> m10_13  [key=2, style=dotted];
m10_697 -> m10_14  [key=2, style=dotted];
m10_697 -> m10_698  [key=0, style=solid];
m10_697 -> m10_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_697 -> m10_658  [key=2, style=dotted];
m10_699 -> m10_13  [key=2, style=dotted];
m10_699 -> m10_14  [key=2, style=dotted];
m10_699 -> m10_700  [key=0, style=solid];
m10_699 -> m10_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_701 -> m10_13  [key=2, style=dotted];
m10_701 -> m10_14  [key=2, style=dotted];
m10_701 -> m10_702  [key=0, style=solid];
m10_701 -> m10_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_701 -> m10_699  [color=blue, key=0, style=bold];
m10_703 -> m10_13  [key=2, style=dotted];
m10_703 -> m10_14  [key=2, style=dotted];
m10_703 -> m10_704  [key=0, style=solid];
m10_703 -> m10_117  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m10_705 -> m10_13  [key=2, style=dotted];
m10_705 -> m10_14  [key=2, style=dotted];
m10_705 -> m10_706  [key=0, style=solid];
m10_705 -> m10_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_705 -> m10_206  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m10_705 -> m10_209  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m10_684 -> m10_17  [key=2, style=dotted];
m10_684 -> m10_685  [key=0, style=solid];
m10_684 -> m10_451  [key=2, style=dotted];
m10_684 -> m10_686  [key=0, style=solid];
m10_686 -> m10_17  [key=2, style=dotted];
m10_686 -> m10_687  [key=0, style=solid];
m10_686 -> m10_451  [key=2, style=dotted];
m10_688 -> m10_17  [key=2, style=dotted];
m10_688 -> m10_689  [key=0, style=solid];
m10_688 -> m10_451  [key=2, style=dotted];
m10_688 -> m10_690  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_688 -> m10_691  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_690 -> m10_17  [key=2, style=dotted];
m10_690 -> m10_691  [key=0, style=solid];
m10_690 -> m10_451  [key=2, style=dotted];
m10_690 -> m10_692  [key=0, style=solid];
m10_690 -> m10_693  [key=2, style=dotted];
m10_692 -> m10_17  [key=2, style=dotted];
m10_692 -> m10_693  [key=0, style=solid];
m10_692 -> m10_451  [key=2, style=dotted];
m10_692 -> m10_688  [color=blue, key=0, style=bold];
m10_694 -> m10_17  [key=2, style=dotted];
m10_694 -> m10_695  [key=0, style=solid];
m10_694 -> m10_451  [key=2, style=dotted];
m10_694 -> m10_696  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_694 -> m10_697  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_704 -> m10_17  [key=2, style=dotted];
m10_704 -> m10_705  [key=0, style=solid];
m10_704 -> m10_451  [key=2, style=dotted];
m10_704 -> m10_204  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m10_704 -> m10_219  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m10_696 -> m10_18  [key=2, style=dotted];
m10_696 -> m10_697  [key=0, style=solid];
m10_696 -> m10_710  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_696 -> m10_698  [key=0, style=solid];
m10_696 -> m10_119  [key=2, style=dotted];
m10_698 -> m10_18  [key=2, style=dotted];
m10_698 -> m10_699  [key=0, style=solid];
m10_698 -> m10_713  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_698 -> m10_694  [color=blue, key=0, style=bold];
m10_700 -> m10_18  [key=2, style=dotted];
m10_700 -> m10_701  [key=0, style=solid];
m10_700 -> m10_716  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_700 -> m10_658  [key=2, style=dotted];
m10_702 -> m10_18  [key=2, style=dotted];
m10_702 -> m10_703  [key=0, style=solid];
m10_702 -> m10_719  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_702 -> m10_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_79  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_88  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_93  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_121  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_151  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_447  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_474  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_485  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_491  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_493  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_538  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_574  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_577  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_583  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_684  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_695  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_696  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_697  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_702 -> m10_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m10_706 -> m10_18  [key=2, style=dotted];
m10_706 -> m10_707  [key=0, style=solid];
m10_706 -> m10_722  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_706 -> m10_207  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_682 -> m10_683  [key=0, style=solid];
m10_682 -> m10_682  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonTextReader reader", style=bold];
m10_682 -> m10_212  [key=2, style=dotted];
m10_707 -> m10_681  [color=blue, key=0, style=bold];
m10_707 -> m10_208  [color=darkseagreen4, key=1, label=createExtensionDataDictionary, style=dashed];
m10_1702 -> m10_1703  [key=0, style=solid];
m10_1703 -> m10_13  [key=2, style=dotted];
m10_1703 -> m10_14  [key=2, style=dotted];
m10_1703 -> m10_1704  [key=0, style=solid];
m10_1703 -> m10_1705  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1703 -> m10_1706  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1703 -> m10_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1704 -> m10_16  [key=2, style=dotted];
m10_1704 -> m10_1705  [key=0, style=solid];
m10_1704 -> m10_138  [key=2, style=dotted];
m10_1705 -> m10_16  [key=2, style=dotted];
m10_1705 -> m10_1706  [key=0, style=solid];
m10_1705 -> m10_138  [key=2, style=dotted];
m10_1706 -> m10_18  [key=2, style=dotted];
m10_1706 -> m10_1707  [key=0, style=solid];
m10_1706 -> m10_1708  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1707 -> m10_1702  [color=blue, key=0, style=bold];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_49  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1244 -> m10_1245  [key=0, style=solid];
m10_1246 -> m10_13  [key=2, style=dotted];
m10_1246 -> m10_14  [key=2, style=dotted];
m10_1246 -> m10_1247  [key=0, style=solid];
m10_1246 -> m10_1248  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1246 -> m10_1249  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1246 -> m10_1250  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1246 -> m10_1251  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1246 -> m10_1252  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1246 -> m10_1253  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1246 -> m10_1254  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1246 -> m10_1255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1246 -> m10_1257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1246 -> m10_1258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1248 -> m10_15  [key=2, style=dotted];
m10_1248 -> m10_16  [key=2, style=dotted];
m10_1248 -> m10_1249  [key=0, style=solid];
m10_1250 -> m10_15  [key=2, style=dotted];
m10_1250 -> m10_16  [key=2, style=dotted];
m10_1250 -> m10_1251  [key=0, style=solid];
m10_1257 -> m10_15  [key=2, style=dotted];
m10_1257 -> m10_16  [key=2, style=dotted];
m10_1257 -> m10_1258  [key=0, style=solid];
m10_1249 -> m10_17  [key=2, style=dotted];
m10_1249 -> m10_1250  [key=0, style=solid];
m10_1251 -> m10_17  [key=2, style=dotted];
m10_1251 -> m10_1252  [key=0, style=solid];
m10_1253 -> m10_17  [key=2, style=dotted];
m10_1253 -> m10_1254  [key=0, style=solid];
m10_1254 -> m10_17  [key=2, style=dotted];
m10_1254 -> m10_1255  [key=0, style=solid];
m10_1258 -> m10_17  [key=2, style=dotted];
m10_1258 -> m10_1259  [key=0, style=solid];
m10_1256 -> m10_17  [key=2, style=dotted];
m10_1256 -> m10_1257  [key=0, style=solid];
m10_1256 -> m10_1256  [color=darkseagreen4, key=1, label=dt, style=dashed];
m10_1256 -> m10_1226  [key=2, style=dotted];
m10_1245 -> m10_1246  [key=0, style=solid];
m10_1245 -> m10_1245  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1247 -> m10_1248  [key=0, style=solid];
m10_1247 -> m10_1243  [key=2, style=dotted];
m10_1252 -> m10_1253  [key=0, style=solid];
m10_1252 -> m10_1068  [key=2, style=dotted];
m10_1255 -> m10_1256  [key=0, style=solid];
m10_1259 -> m10_1244  [color=blue, key=0, style=bold];
m10_497 -> m10_498  [key=0, style=solid];
m10_497 -> m10_20  [color=blue, key=0, style=bold];
m10_499 -> m10_13  [key=2, style=dotted];
m10_499 -> m10_14  [key=2, style=dotted];
m10_499 -> m10_500  [key=0, style=solid];
m10_499 -> m10_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_499 -> m10_504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_499 -> m10_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_499 -> m10_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_502 -> m10_15  [key=2, style=dotted];
m10_502 -> m10_16  [key=2, style=dotted];
m10_502 -> m10_503  [key=0, style=solid];
m10_502 -> m10_507  [key=0, style=solid];
m10_504 -> m10_15  [key=2, style=dotted];
m10_504 -> m10_16  [key=2, style=dotted];
m10_504 -> m10_505  [key=0, style=solid];
m10_505 -> m10_17  [key=2, style=dotted];
m10_505 -> m10_506  [key=0, style=solid];
m10_505 -> m10_498  [color=blue, key=0, style=bold];
m10_506 -> m10_17  [key=2, style=dotted];
m10_506 -> m10_507  [key=0, style=solid];
m10_498 -> m10_499  [key=0, style=solid];
m10_498 -> m10_498  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_498 -> m10_503  [key=0, style=solid];
m10_500 -> m10_501  [key=0, style=solid];
m10_500 -> m10_503  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_500 -> m10_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m10_501 -> m10_502  [key=0, style=solid];
m10_501 -> m10_504  [key=0, style=solid];
m10_503 -> m10_501  [key=0, style=solid];
m10_503 -> m10_503  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_503 -> m10_504  [key=0, style=solid];
m10_503 -> m10_506  [key=2, style=dotted];
m10_507 -> m10_497  [color=blue, key=0, style=bold];
m10_507 -> m10_508  [key=0, style=solid];
m10_507 -> m10_509  [key=0, style=solid];
m10_507 -> m10_500  [key=2, style=dotted];
m10_891 -> m10_892  [key=0, style=solid];
m10_893 -> m10_13  [key=2, style=dotted];
m10_893 -> m10_14  [key=2, style=dotted];
m10_893 -> m10_894  [key=0, style=solid];
m10_893 -> m10_895  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_896  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_897  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_898  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_899  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_900  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_901  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_902  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_903  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_904  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_905  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_906  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_907  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_908  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_909  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_910  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_911  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_912  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_913  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_914  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_915  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_916  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_917  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_918  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_919  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_920  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_921  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_922  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_923  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_924  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_925  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_926  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_927  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_928  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_929  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_930  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_931  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_932  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_933  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_934  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_935  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_936  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_937  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_938  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_939  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_940  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_941  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_942  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_943  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_944  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_945  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_946  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_947  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_948  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_949  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_950  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_893 -> m10_951  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_895 -> m10_17  [key=2, style=dotted];
m10_895 -> m10_896  [key=0, style=solid];
m10_897 -> m10_17  [key=2, style=dotted];
m10_897 -> m10_898  [key=0, style=solid];
m10_898 -> m10_17  [key=2, style=dotted];
m10_898 -> m10_899  [key=0, style=solid];
m10_900 -> m10_17  [key=2, style=dotted];
m10_900 -> m10_901  [key=0, style=solid];
m10_901 -> m10_17  [key=2, style=dotted];
m10_901 -> m10_902  [key=0, style=solid];
m10_903 -> m10_17  [key=2, style=dotted];
m10_903 -> m10_904  [key=0, style=solid];
m10_904 -> m10_17  [key=2, style=dotted];
m10_904 -> m10_905  [key=0, style=solid];
m10_906 -> m10_17  [key=2, style=dotted];
m10_906 -> m10_907  [key=0, style=solid];
m10_907 -> m10_17  [key=2, style=dotted];
m10_907 -> m10_908  [key=0, style=solid];
m10_909 -> m10_17  [key=2, style=dotted];
m10_909 -> m10_910  [key=0, style=solid];
m10_910 -> m10_17  [key=2, style=dotted];
m10_910 -> m10_911  [key=0, style=solid];
m10_912 -> m10_17  [key=2, style=dotted];
m10_912 -> m10_913  [key=0, style=solid];
m10_913 -> m10_17  [key=2, style=dotted];
m10_913 -> m10_914  [key=0, style=solid];
m10_915 -> m10_17  [key=2, style=dotted];
m10_915 -> m10_916  [key=0, style=solid];
m10_916 -> m10_17  [key=2, style=dotted];
m10_916 -> m10_917  [key=0, style=solid];
m10_918 -> m10_17  [key=2, style=dotted];
m10_918 -> m10_919  [key=0, style=solid];
m10_919 -> m10_17  [key=2, style=dotted];
m10_919 -> m10_920  [key=0, style=solid];
m10_921 -> m10_17  [key=2, style=dotted];
m10_921 -> m10_922  [key=0, style=solid];
m10_922 -> m10_17  [key=2, style=dotted];
m10_922 -> m10_923  [key=0, style=solid];
m10_924 -> m10_17  [key=2, style=dotted];
m10_924 -> m10_925  [key=0, style=solid];
m10_925 -> m10_17  [key=2, style=dotted];
m10_925 -> m10_926  [key=0, style=solid];
m10_927 -> m10_17  [key=2, style=dotted];
m10_927 -> m10_928  [key=0, style=solid];
m10_928 -> m10_17  [key=2, style=dotted];
m10_928 -> m10_929  [key=0, style=solid];
m10_930 -> m10_17  [key=2, style=dotted];
m10_930 -> m10_931  [key=0, style=solid];
m10_931 -> m10_17  [key=2, style=dotted];
m10_931 -> m10_932  [key=0, style=solid];
m10_933 -> m10_17  [key=2, style=dotted];
m10_933 -> m10_934  [key=0, style=solid];
m10_934 -> m10_17  [key=2, style=dotted];
m10_934 -> m10_935  [key=0, style=solid];
m10_936 -> m10_17  [key=2, style=dotted];
m10_936 -> m10_937  [key=0, style=solid];
m10_937 -> m10_17  [key=2, style=dotted];
m10_937 -> m10_938  [key=0, style=solid];
m10_939 -> m10_17  [key=2, style=dotted];
m10_939 -> m10_940  [key=0, style=solid];
m10_940 -> m10_17  [key=2, style=dotted];
m10_940 -> m10_941  [key=0, style=solid];
m10_942 -> m10_17  [key=2, style=dotted];
m10_942 -> m10_943  [key=0, style=solid];
m10_943 -> m10_17  [key=2, style=dotted];
m10_943 -> m10_944  [key=0, style=solid];
m10_945 -> m10_17  [key=2, style=dotted];
m10_945 -> m10_946  [key=0, style=solid];
m10_946 -> m10_17  [key=2, style=dotted];
m10_946 -> m10_947  [key=0, style=solid];
m10_948 -> m10_17  [key=2, style=dotted];
m10_948 -> m10_949  [key=0, style=solid];
m10_949 -> m10_17  [key=2, style=dotted];
m10_949 -> m10_950  [key=0, style=solid];
m10_951 -> m10_17  [key=2, style=dotted];
m10_951 -> m10_952  [key=0, style=solid];
m10_892 -> m10_893  [key=0, style=solid];
m10_892 -> m10_892  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_894 -> m10_895  [key=0, style=solid];
m10_894 -> m10_138  [key=2, style=dotted];
m10_896 -> m10_897  [key=0, style=solid];
m10_896 -> m10_138  [key=2, style=dotted];
m10_899 -> m10_900  [key=0, style=solid];
m10_899 -> m10_138  [key=2, style=dotted];
m10_902 -> m10_903  [key=0, style=solid];
m10_902 -> m10_138  [key=2, style=dotted];
m10_905 -> m10_906  [key=0, style=solid];
m10_905 -> m10_138  [key=2, style=dotted];
m10_908 -> m10_909  [key=0, style=solid];
m10_908 -> m10_138  [key=2, style=dotted];
m10_911 -> m10_912  [key=0, style=solid];
m10_911 -> m10_138  [key=2, style=dotted];
m10_914 -> m10_915  [key=0, style=solid];
m10_914 -> m10_138  [key=2, style=dotted];
m10_917 -> m10_918  [key=0, style=solid];
m10_917 -> m10_138  [key=2, style=dotted];
m10_920 -> m10_921  [key=0, style=solid];
m10_920 -> m10_138  [key=2, style=dotted];
m10_923 -> m10_924  [key=0, style=solid];
m10_923 -> m10_138  [key=2, style=dotted];
m10_926 -> m10_927  [key=0, style=solid];
m10_926 -> m10_138  [key=2, style=dotted];
m10_929 -> m10_930  [key=0, style=solid];
m10_929 -> m10_138  [key=2, style=dotted];
m10_932 -> m10_933  [key=0, style=solid];
m10_932 -> m10_138  [key=2, style=dotted];
m10_935 -> m10_936  [key=0, style=solid];
m10_935 -> m10_138  [key=2, style=dotted];
m10_938 -> m10_939  [key=0, style=solid];
m10_938 -> m10_138  [key=2, style=dotted];
m10_941 -> m10_942  [key=0, style=solid];
m10_941 -> m10_138  [key=2, style=dotted];
m10_944 -> m10_945  [key=0, style=solid];
m10_944 -> m10_138  [key=2, style=dotted];
m10_947 -> m10_948  [key=0, style=solid];
m10_947 -> m10_138  [key=2, style=dotted];
m10_950 -> m10_951  [key=0, style=solid];
m10_950 -> m10_138  [key=2, style=dotted];
m10_952 -> m10_891  [color=blue, key=0, style=bold];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_15  [key=2, style=dotted];
m10_64 -> m10_16  [key=2, style=dotted];
m10_65 -> m10_66  [key=0, style=solid];
m10_65 -> m10_102  [key=2, style=dotted];
m10_65 -> m10_69  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_70  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_72  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_74  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_80  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_81  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_82  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_84  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_85  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_86  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_87  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_88  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_90  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_91  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_92  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_93  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_95  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_96  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_97  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_99  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_100  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_65 -> m10_17  [key=2, style=dotted];
m10_66 -> m10_67  [key=0, style=solid];
m10_66 -> m10_103  [key=2, style=dotted];
m10_66 -> m10_15  [key=2, style=dotted];
m10_66 -> m10_16  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_47  [key=2, style=dotted];
m10_69 -> m10_17  [key=2, style=dotted];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_104  [key=2, style=dotted];
m10_70 -> m10_105  [key=2, style=dotted];
m10_70 -> m10_15  [key=2, style=dotted];
m10_70 -> m10_16  [key=2, style=dotted];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_106  [key=2, style=dotted];
m10_72 -> m10_74  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m10_72 -> m10_75  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m10_72 -> m10_76  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m10_72 -> m10_15  [key=2, style=dotted];
m10_72 -> m10_16  [key=2, style=dotted];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_17  [key=2, style=dotted];
m10_80 -> m10_81  [key=0, style=solid];
m10_80 -> m10_80  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_81 -> m10_82  [key=0, style=solid];
m10_81 -> m10_97  [key=0, style=solid];
m10_81 -> m10_13  [key=2, style=dotted];
m10_81 -> m10_14  [key=2, style=dotted];
m10_81 -> m10_83  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_81 -> m10_84  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_81 -> m10_85  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_81 -> m10_86  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_82 -> m10_83  [key=0, style=solid];
m10_82 -> m10_108  [key=2, style=dotted];
m10_82 -> m10_84  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m10_82 -> m10_85  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m10_82 -> m10_15  [key=2, style=dotted];
m10_82 -> m10_16  [key=2, style=dotted];
m10_84 -> m10_85  [key=0, style=solid];
m10_84 -> m10_109  [key=2, style=dotted];
m10_84 -> m10_15  [key=2, style=dotted];
m10_84 -> m10_16  [key=2, style=dotted];
m10_85 -> m10_97  [key=0, style=solid];
m10_85 -> m10_110  [key=2, style=dotted];
m10_85 -> m10_105  [key=2, style=dotted];
m10_85 -> m10_17  [key=2, style=dotted];
m10_85 -> m10_86  [key=0, style=solid];
m10_86 -> m10_87  [key=0, style=solid];
m10_86 -> m10_97  [key=0, style=solid];
m10_86 -> m10_91  [key=2, style=dotted];
m10_86 -> m10_88  [color=darkseagreen4, key=1, label=s, style=dashed];
m10_87 -> m10_88  [key=0, style=solid];
m10_87 -> m10_92  [key=0, style=solid];
m10_87 -> m10_17  [key=2, style=dotted];
m10_88 -> m10_89  [key=0, style=solid];
m10_88 -> m10_111  [key=2, style=dotted];
m10_88 -> m10_90  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m10_88 -> m10_91  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m10_88 -> m10_92  [key=2, style=dotted];
m10_90 -> m10_91  [key=0, style=solid];
m10_90 -> m10_109  [key=2, style=dotted];
m10_90 -> m10_79  [color=blue, key=0, style=bold];
m10_91 -> m10_97  [key=0, style=solid];
m10_91 -> m10_110  [key=2, style=dotted];
m10_91 -> m10_105  [key=2, style=dotted];
m10_92 -> m10_93  [key=0, style=solid];
m10_92 -> m10_97  [key=0, style=solid];
m10_92 -> m10_112  [key=2, style=dotted];
m10_93 -> m10_94  [key=0, style=solid];
m10_93 -> m10_113  [key=2, style=dotted];
m10_93 -> m10_95  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m10_93 -> m10_96  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m10_95 -> m10_96  [key=0, style=solid];
m10_95 -> m10_109  [key=2, style=dotted];
m10_95 -> m10_17  [key=2, style=dotted];
m10_95 -> m10_107  [key=2, style=dotted];
m10_96 -> m10_97  [key=0, style=solid];
m10_96 -> m10_110  [key=2, style=dotted];
m10_96 -> m10_105  [key=2, style=dotted];
m10_96 -> m10_17  [key=2, style=dotted];
m10_96 -> m10_107  [key=2, style=dotted];
m10_97 -> m10_98  [key=0, style=solid];
m10_97 -> m10_114  [key=2, style=dotted];
m10_97 -> m10_99  [color=darkseagreen4, key=1, label=extensionDataMember, style=dashed];
m10_97 -> m10_17  [key=2, style=dotted];
m10_97 -> m10_107  [key=2, style=dotted];
m10_99 -> m10_100  [key=0, style=solid];
m10_99 -> m10_115  [key=2, style=dotted];
m10_99 -> m10_17  [key=2, style=dotted];
m10_99 -> m10_107  [key=2, style=dotted];
m10_100 -> m10_101  [key=0, style=solid];
m10_100 -> m10_17  [key=2, style=dotted];
m10_100 -> m10_107  [key=2, style=dotted];
m10_67 -> m10_68  [key=0, style=solid];
m10_67 -> m10_17  [key=2, style=dotted];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_15  [key=2, style=dotted];
m10_68 -> m10_16  [key=2, style=dotted];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_78  [color=darkseagreen4, key=1, label=extensionDataNameResolver, style=dashed];
m10_71 -> m10_80  [color=darkseagreen4, key=1, label=extensionDataNameResolver, style=dashed];
m10_71 -> m10_17  [key=2, style=dotted];
m10_78 -> m10_79  [key=0, style=solid];
m10_78 -> m10_80  [key=0, style=solid];
m10_78 -> m10_59  [color=blue, key=0, style=bold];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_78  [key=0, style=solid];
m10_73 -> m10_17  [key=2, style=dotted];
m10_75 -> m10_76  [key=0, style=solid];
m10_75 -> m10_78  [key=0, style=solid];
m10_75 -> m10_75  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_75 -> m10_15  [key=2, style=dotted];
m10_75 -> m10_16  [key=2, style=dotted];
m10_76 -> m10_77  [key=0, style=solid];
m10_76 -> m10_107  [key=2, style=dotted];
m10_76 -> m10_117  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m10_76 -> m10_17  [key=2, style=dotted];
m10_77 -> m10_78  [key=0, style=solid];
m10_77 -> m10_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_77 -> m10_80  [color=darkseagreen4, key=1, label=extensionDataNameResolver, style=dashed];
m10_77 -> m10_17  [key=2, style=dotted];
m10_79 -> m10_80  [key=0, style=solid];
m10_83 -> m10_84  [key=0, style=solid];
m10_83 -> m10_86  [key=0, style=solid];
m10_83 -> m10_15  [key=2, style=dotted];
m10_83 -> m10_16  [key=2, style=dotted];
m10_89 -> m10_90  [key=0, style=solid];
m10_89 -> m10_97  [key=0, style=solid];
m10_89 -> m10_17  [key=2, style=dotted];
m10_94 -> m10_95  [key=0, style=solid];
m10_94 -> m10_97  [key=0, style=solid];
m10_94 -> m10_17  [key=2, style=dotted];
m10_94 -> m10_107  [key=2, style=dotted];
m10_98 -> m10_99  [key=0, style=solid];
m10_98 -> m10_100  [key=0, style=solid];
m10_98 -> m10_17  [key=2, style=dotted];
m10_98 -> m10_107  [key=2, style=dotted];
m10_101 -> m10_64  [color=blue, key=0, style=bold];
m10_101 -> m10_17  [key=2, style=dotted];
m10_101 -> m10_102  [key=0, style=solid];
m10_101 -> m10_107  [key=2, style=dotted];
m10_1437 -> m10_1438  [key=0, style=solid];
m10_1439 -> m10_13  [key=2, style=dotted];
m10_1439 -> m10_14  [key=2, style=dotted];
m10_1439 -> m10_1440  [key=0, style=solid];
m10_1439 -> m10_1441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1439 -> m10_1442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1440 -> m10_15  [key=2, style=dotted];
m10_1440 -> m10_16  [key=2, style=dotted];
m10_1440 -> m10_1441  [key=0, style=solid];
m10_1441 -> m10_15  [key=2, style=dotted];
m10_1441 -> m10_16  [key=2, style=dotted];
m10_1441 -> m10_1442  [key=0, style=solid];
m10_1442 -> m10_15  [key=2, style=dotted];
m10_1442 -> m10_1443  [key=0, style=solid];
m10_1442 -> m10_131  [key=2, style=dotted];
m10_1438 -> m10_1439  [key=0, style=solid];
m10_1438 -> m10_1438  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1443 -> m10_1437  [color=blue, key=0, style=bold];
m10_217 -> m10_17  [key=2, style=dotted];
m10_217 -> m10_218  [key=0, style=solid];
m10_288 -> m10_17  [key=2, style=dotted];
m10_288 -> m10_289  [key=0, style=solid];
m10_3 -> m10_4  [color=green, key=0, style=solid];
m10_3 -> m10_15  [color=green, key=2, style=dotted];
m10_3 -> m10_16  [color=green, key=2, style=dotted];
m10_3 -> m10_5  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_3 -> m10_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_3 -> m10_9  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_3 -> m10_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_4 -> m10_5  [color=green, key=0, style=solid];
m10_4 -> m10_17  [color=green, key=2, style=dotted];
m10_4 -> m10_6  [key=0, style=solid];
m10_5 -> m10_6  [color=green, key=0, style=solid];
m10_5 -> m10_15  [color=green, key=2, style=dotted];
m10_5 -> m10_16  [color=green, key=2, style=dotted];
m10_5 -> m10_17  [key=2, style=dotted];
m10_5 -> m10_18  [key=2, style=dotted];
m10_6 -> m10_7  [color=green, key=0, style=solid];
m10_6 -> m10_17  [color=green, key=2, style=dotted];
m10_7 -> m10_8  [color=green, key=0, style=solid];
m10_7 -> m10_15  [color=green, key=2, style=dotted];
m10_7 -> m10_16  [color=green, key=2, style=dotted];
m10_8 -> m10_9  [color=green, key=0, style=solid];
m10_8 -> m10_17  [color=green, key=2, style=dotted];
m10_8 -> m10_15  [key=0, style=solid];
m10_8 -> m10_19  [key=2, style=dotted];
m10_9 -> m10_10  [color=green, key=0, style=solid];
m10_9 -> m10_15  [color=green, key=2, style=dotted];
m10_9 -> m10_16  [color=green, key=2, style=dotted];
m10_9 -> m10_20  [key=2, style=dotted];
m10_9 -> m10_13  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_10 -> m10_11  [color=green, key=0, style=solid];
m10_10 -> m10_17  [color=green, key=2, style=dotted];
m10_11 -> m10_12  [color=green, key=0, style=solid];
m10_11 -> m10_18  [color=green, key=2, style=dotted];
m10_11 -> m10_19  [color=green, key=1, label="lambda expression", style=dashed];
m10_12 -> m10_0  [color=blue, key=0, style=bold];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_21  [key=2, style=dotted];
m10_12 -> m10_22  [key=2, style=dotted];
m10_12 -> m10_14  [color=darkseagreen4, key=1, label=updatedCache, style=dashed];
m10_347 -> m10_348  [key=0, style=solid];
m10_348 -> m10_18  [key=2, style=dotted];
m10_348 -> m10_349  [key=0, style=solid];
m10_348 -> m10_350  [color=darkseagreen4, key=1, label=onSerializing, style=dashed];
m10_348 -> m10_360  [key=2, style=dotted];
m10_348 -> m10_351  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m10_348 -> m10_352  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m10_348 -> m10_353  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m10_348 -> m10_354  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m10_348 -> m10_355  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m10_348 -> m10_356  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m10_348 -> m10_357  [color=darkseagreen4, key=1, label=onError, style=dashed];
m10_348 -> m10_358  [color=darkseagreen4, key=1, label=onError, style=dashed];
m10_349 -> m10_347  [color=blue, key=0, style=bold];
m10_349 -> m10_350  [key=0, style=solid];
m10_349 -> m10_351  [key=0, style=solid];
m10_477 -> m10_15  [key=2, style=dotted];
m10_477 -> m10_478  [key=0, style=solid];
m10_185 -> m10_186  [key=0, style=solid];
m10_185 -> m10_201  [key=2, style=dotted];
m10_185 -> m10_202  [key=2, style=dotted];
m10_187 -> m10_13  [key=2, style=dotted];
m10_187 -> m10_14  [key=2, style=dotted];
m10_187 -> m10_188  [key=0, style=solid];
m10_187 -> m10_219  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_188 -> m10_15  [key=2, style=dotted];
m10_188 -> m10_188  [key=0, style=solid];
m10_188 -> m10_189  [key=0, style=solid];
m10_186 -> m10_187  [key=0, style=solid];
m10_186 -> m10_186  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_186 -> m10_109  [key=2, style=dotted];
m10_186 -> m10_222  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m10_189 -> m10_185  [color=blue, key=0, style=bold];
m10_189 -> m10_190  [key=0, style=solid];
m10_131 -> m10_132  [key=0, style=solid];
m10_13 -> m10_14  [key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid];
m10_16 -> m10_3  [color=blue, key=0, style=bold];
m10_419 -> m10_420  [key=0, style=solid];
m10_419 -> m10_422  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_419 -> m10_17  [key=2, style=dotted];
m10_420 -> m10_421  [key=0, style=solid];
m10_420 -> m10_439  [key=2, style=dotted];
m10_420 -> m10_425  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_420 -> m10_426  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_420 -> m10_427  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_420 -> m10_430  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_420 -> m10_432  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_420 -> m10_434  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_420 -> m10_435  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_420 -> m10_436  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_420 -> m10_437  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_420 -> m10_15  [key=2, style=dotted];
m10_420 -> m10_16  [key=2, style=dotted];
m10_422 -> m10_423  [key=0, style=solid];
m10_422 -> m10_55  [key=2, style=dotted];
m10_422 -> m10_424  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m10_422 -> m10_17  [key=2, style=dotted];
m10_421 -> m10_422  [key=0, style=solid];
m10_421 -> m10_103  [key=2, style=dotted];
m10_421 -> m10_17  [key=2, style=dotted];
m10_425 -> m10_427  [key=0, style=solid];
m10_425 -> m10_442  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_425 -> m10_426  [key=0, style=solid];
m10_426 -> m10_427  [key=0, style=solid];
m10_426 -> m10_426  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_427 -> m10_428  [key=0, style=solid];
m10_427 -> m10_108  [key=2, style=dotted];
m10_427 -> m10_429  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m10_427 -> m10_436  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m10_427 -> m10_13  [key=2, style=dotted];
m10_427 -> m10_14  [key=2, style=dotted];
m10_427 -> m10_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_427 -> m10_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_427 -> m10_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_430 -> m10_431  [key=0, style=solid];
m10_430 -> m10_194  [key=2, style=dotted];
m10_430 -> m10_433  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m10_430 -> m10_435  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m10_430 -> m10_15  [key=2, style=dotted];
m10_432 -> m10_436  [key=0, style=solid];
m10_432 -> m10_15  [key=2, style=dotted];
m10_432 -> m10_433  [key=0, style=solid];
m10_434 -> m10_436  [key=0, style=solid];
m10_434 -> m10_425  [color=blue, key=0, style=bold];
m10_435 -> m10_438  [key=0, style=solid];
m10_435 -> m10_156  [key=2, style=dotted];
m10_435 -> m10_440  [key=2, style=dotted];
m10_435 -> m10_436  [key=0, style=solid];
m10_436 -> m10_437  [key=0, style=solid];
m10_436 -> m10_109  [key=2, style=dotted];
m10_436 -> m10_436  [color=darkorchid, key=3, label="Local variable long i", style=bold];
m10_436 -> m10_442  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_437 -> m10_438  [key=0, style=solid];
m10_437 -> m10_13  [key=2, style=dotted];
m10_437 -> m10_14  [key=2, style=dotted];
m10_437 -> m10_446  [key=2, style=dotted];
m10_437 -> m10_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_437 -> m10_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_423 -> m10_424  [key=0, style=solid];
m10_423 -> m10_426  [key=0, style=solid];
m10_423 -> m10_15  [key=2, style=dotted];
m10_423 -> m10_131  [key=2, style=dotted];
m10_424 -> m10_425  [key=0, style=solid];
m10_424 -> m10_107  [key=2, style=dotted];
m10_424 -> m10_442  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m10_424 -> m10_394  [color=blue, key=0, style=bold];
m10_428 -> m10_429  [key=0, style=solid];
m10_428 -> m10_437  [key=0, style=solid];
m10_428 -> m10_431  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_428 -> m10_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m10_429 -> m10_430  [key=0, style=solid];
m10_429 -> m10_269  [key=2, style=dotted];
m10_429 -> m10_431  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_429 -> m10_433  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_429 -> m10_432  [key=0, style=solid];
m10_431 -> m10_432  [key=0, style=solid];
m10_431 -> m10_433  [key=0, style=solid];
m10_431 -> m10_429  [key=0, style=solid];
m10_431 -> m10_431  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_433 -> m10_434  [key=0, style=solid];
m10_433 -> m10_435  [key=0, style=solid];
m10_433 -> m10_162  [key=2, style=dotted];
m10_433 -> m10_17  [key=2, style=dotted];
m10_438 -> m10_419  [color=blue, key=0, style=bold];
m10_438 -> m10_15  [key=2, style=dotted];
m10_438 -> m10_439  [key=0, style=solid];
m10_213 -> m10_213  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_213 -> m10_17  [key=2, style=dotted];
m10_213 -> m10_214  [key=0, style=solid];
m10_399 -> m10_407  [key=0, style=solid];
m10_399 -> m10_15  [key=2, style=dotted];
m10_399 -> m10_16  [key=2, style=dotted];
m10_399 -> m10_400  [key=0, style=solid];
m10_407 -> m10_408  [key=0, style=solid];
m10_407 -> m10_15  [key=2, style=dotted];
m10_407 -> m10_16  [key=2, style=dotted];
m10_408 -> m10_399  [color=blue, key=0, style=bold];
m10_408 -> m10_17  [key=2, style=dotted];
m10_408 -> m10_409  [key=0, style=solid];
m10_792 -> m10_793  [key=0, style=solid];
m10_822 -> m10_13  [key=2, style=dotted];
m10_822 -> m10_14  [key=2, style=dotted];
m10_822 -> m10_823  [key=0, style=solid];
m10_822 -> m10_842  [key=2, style=dotted];
m10_822 -> m10_826  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m10_827 -> m10_17  [key=2, style=dotted];
m10_827 -> m10_828  [key=0, style=solid];
m10_827 -> m10_840  [key=2, style=dotted];
m10_820 -> m10_822  [color=darkseagreen4, key=1, label=json, style=dashed];
m10_820 -> m10_827  [color=darkseagreen4, key=1, label=json, style=dashed];
m10_820 -> m10_821  [key=0, style=solid];
m10_820 -> m10_840  [key=2, style=dotted];
m10_821 -> m10_822  [key=0, style=solid];
m10_821 -> m10_841  [key=2, style=dotted];
m10_821 -> m10_826  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m10_823 -> m10_827  [color=darkseagreen4, key=1, label=sb, style=dashed];
m10_823 -> m10_824  [key=0, style=solid];
m10_823 -> m10_829  [key=2, style=dotted];
m10_826 -> m10_827  [key=0, style=solid];
m10_826 -> m10_843  [key=2, style=dotted];
m10_793 -> m10_820  [color=darkseagreen4, key=1, label=sb, style=dashed];
m10_793 -> m10_794  [key=0, style=solid];
m10_793 -> m10_829  [key=2, style=dotted];
m10_819 -> m10_820  [key=0, style=solid];
m10_819 -> m10_392  [key=2, style=dotted];
m10_824 -> m10_825  [key=0, style=solid];
m10_824 -> m10_830  [key=2, style=dotted];
m10_825 -> m10_826  [key=0, style=solid];
m10_825 -> m10_389  [key=2, style=dotted];
m10_805 -> m10_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m10_805 -> m10_806  [key=0, style=solid];
m10_805 -> m10_807  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_805 -> m10_808  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_794 -> m10_795  [key=0, style=solid];
m10_794 -> m10_830  [key=2, style=dotted];
m10_795 -> m10_819  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_796  [key=0, style=solid];
m10_795 -> m10_389  [key=2, style=dotted];
m10_795 -> m10_797  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_798  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_799  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_800  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_801  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_802  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_803  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_804  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_807  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_809  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_810  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_811  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_812  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_813  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_814  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_815  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_816  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_817  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_795 -> m10_818  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m10_818 -> m10_819  [key=0, style=solid];
m10_818 -> m10_839  [key=2, style=dotted];
m10_814 -> m10_392  [key=2, style=dotted];
m10_814 -> m10_815  [key=0, style=solid];
m10_804 -> m10_805  [key=0, style=solid];
m10_804 -> m10_831  [key=2, style=dotted];
m10_806 -> m10_807  [key=0, style=solid];
m10_806 -> m10_809  [key=0, style=solid];
m10_807 -> m10_808  [key=0, style=solid];
m10_807 -> m10_835  [key=2, style=dotted];
m10_808 -> m10_806  [key=0, style=solid];
m10_808 -> m10_808  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_796 -> m10_797  [key=0, style=solid];
m10_796 -> m10_831  [key=2, style=dotted];
m10_797 -> m10_798  [key=0, style=solid];
m10_797 -> m10_832  [key=2, style=dotted];
m10_798 -> m10_799  [key=0, style=solid];
m10_798 -> m10_833  [key=2, style=dotted];
m10_799 -> m10_800  [key=0, style=solid];
m10_799 -> m10_834  [key=2, style=dotted];
m10_800 -> m10_801  [key=0, style=solid];
m10_800 -> m10_835  [key=2, style=dotted];
m10_801 -> m10_802  [key=0, style=solid];
m10_801 -> m10_834  [key=2, style=dotted];
m10_802 -> m10_803  [key=0, style=solid];
m10_802 -> m10_836  [key=2, style=dotted];
m10_803 -> m10_804  [key=0, style=solid];
m10_803 -> m10_834  [key=2, style=dotted];
m10_809 -> m10_810  [key=0, style=solid];
m10_809 -> m10_833  [key=2, style=dotted];
m10_810 -> m10_811  [key=0, style=solid];
m10_810 -> m10_834  [key=2, style=dotted];
m10_811 -> m10_812  [key=0, style=solid];
m10_811 -> m10_837  [key=2, style=dotted];
m10_812 -> m10_813  [key=0, style=solid];
m10_812 -> m10_838  [key=2, style=dotted];
m10_813 -> m10_814  [key=0, style=solid];
m10_813 -> m10_835  [key=2, style=dotted];
m10_815 -> m10_816  [key=0, style=solid];
m10_815 -> m10_838  [key=2, style=dotted];
m10_816 -> m10_817  [key=0, style=solid];
m10_816 -> m10_836  [key=2, style=dotted];
m10_817 -> m10_818  [key=0, style=solid];
m10_817 -> m10_839  [key=2, style=dotted];
m10_828 -> m10_792  [color=blue, key=0, style=bold];
m10_1802 -> m10_1803  [key=0, style=solid];
m10_1804 -> m10_13  [key=2, style=dotted];
m10_1804 -> m10_1805  [key=0, style=solid];
m10_1804 -> m10_116  [key=2, style=dotted];
m10_1804 -> m10_157  [key=2, style=dotted];
m10_1804 -> m10_158  [key=2, style=dotted];
m10_1804 -> m10_1806  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1807  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1808  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1809  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1810  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1811  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1812  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1813  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1814  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1815  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1816  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1817  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1818  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1819  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1820  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1821  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1822  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1823  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1824  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1825  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1826  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1827  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1828  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1829  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1830  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1831  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1832  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1833  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1834  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1835  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1836  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1837  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1838  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1839  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1840  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1804 -> m10_1841  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1805 -> m10_15  [key=2, style=dotted];
m10_1805 -> m10_16  [key=2, style=dotted];
m10_1805 -> m10_1806  [key=0, style=solid];
m10_1806 -> m10_15  [key=2, style=dotted];
m10_1806 -> m10_16  [key=2, style=dotted];
m10_1806 -> m10_1807  [key=0, style=solid];
m10_1808 -> m10_15  [key=2, style=dotted];
m10_1808 -> m10_16  [key=2, style=dotted];
m10_1808 -> m10_1809  [key=0, style=solid];
m10_1811 -> m10_15  [key=2, style=dotted];
m10_1811 -> m10_16  [key=2, style=dotted];
m10_1811 -> m10_1812  [key=0, style=solid];
m10_1814 -> m10_15  [key=2, style=dotted];
m10_1814 -> m10_16  [key=2, style=dotted];
m10_1814 -> m10_1815  [key=0, style=solid];
m10_1817 -> m10_15  [key=2, style=dotted];
m10_1817 -> m10_16  [key=2, style=dotted];
m10_1817 -> m10_1818  [key=0, style=solid];
m10_1820 -> m10_15  [key=2, style=dotted];
m10_1820 -> m10_16  [key=2, style=dotted];
m10_1820 -> m10_1821  [key=0, style=solid];
m10_1823 -> m10_15  [key=2, style=dotted];
m10_1823 -> m10_16  [key=2, style=dotted];
m10_1823 -> m10_1824  [key=0, style=solid];
m10_1826 -> m10_15  [key=2, style=dotted];
m10_1826 -> m10_16  [key=2, style=dotted];
m10_1826 -> m10_1827  [key=0, style=solid];
m10_1829 -> m10_15  [key=2, style=dotted];
m10_1829 -> m10_16  [key=2, style=dotted];
m10_1829 -> m10_1830  [key=0, style=solid];
m10_1832 -> m10_15  [key=2, style=dotted];
m10_1832 -> m10_16  [key=2, style=dotted];
m10_1832 -> m10_1833  [key=0, style=solid];
m10_1835 -> m10_15  [key=2, style=dotted];
m10_1835 -> m10_16  [key=2, style=dotted];
m10_1835 -> m10_1836  [key=0, style=solid];
m10_1838 -> m10_15  [key=2, style=dotted];
m10_1838 -> m10_16  [key=2, style=dotted];
m10_1838 -> m10_1839  [key=0, style=solid];
m10_1841 -> m10_15  [key=2, style=dotted];
m10_1841 -> m10_16  [key=2, style=dotted];
m10_1841 -> m10_1842  [key=0, style=solid];
m10_1807 -> m10_17  [key=2, style=dotted];
m10_1807 -> m10_1808  [key=0, style=solid];
m10_1809 -> m10_17  [key=2, style=dotted];
m10_1809 -> m10_1810  [key=0, style=solid];
m10_1810 -> m10_17  [key=2, style=dotted];
m10_1810 -> m10_1811  [key=0, style=solid];
m10_1812 -> m10_17  [key=2, style=dotted];
m10_1812 -> m10_1813  [key=0, style=solid];
m10_1813 -> m10_17  [key=2, style=dotted];
m10_1813 -> m10_1814  [key=0, style=solid];
m10_1815 -> m10_17  [key=2, style=dotted];
m10_1815 -> m10_1816  [key=0, style=solid];
m10_1816 -> m10_17  [key=2, style=dotted];
m10_1816 -> m10_1817  [key=0, style=solid];
m10_1818 -> m10_17  [key=2, style=dotted];
m10_1818 -> m10_1819  [key=0, style=solid];
m10_1819 -> m10_17  [key=2, style=dotted];
m10_1819 -> m10_1820  [key=0, style=solid];
m10_1821 -> m10_17  [key=2, style=dotted];
m10_1821 -> m10_1822  [key=0, style=solid];
m10_1822 -> m10_17  [key=2, style=dotted];
m10_1822 -> m10_1823  [key=0, style=solid];
m10_1824 -> m10_17  [key=2, style=dotted];
m10_1824 -> m10_1825  [key=0, style=solid];
m10_1825 -> m10_17  [key=2, style=dotted];
m10_1825 -> m10_1826  [key=0, style=solid];
m10_1827 -> m10_17  [key=2, style=dotted];
m10_1827 -> m10_1828  [key=0, style=solid];
m10_1828 -> m10_17  [key=2, style=dotted];
m10_1828 -> m10_1829  [key=0, style=solid];
m10_1830 -> m10_17  [key=2, style=dotted];
m10_1830 -> m10_1831  [key=0, style=solid];
m10_1831 -> m10_17  [key=2, style=dotted];
m10_1831 -> m10_1832  [key=0, style=solid];
m10_1833 -> m10_17  [key=2, style=dotted];
m10_1833 -> m10_1834  [key=0, style=solid];
m10_1834 -> m10_17  [key=2, style=dotted];
m10_1834 -> m10_1835  [key=0, style=solid];
m10_1836 -> m10_17  [key=2, style=dotted];
m10_1836 -> m10_1837  [key=0, style=solid];
m10_1837 -> m10_17  [key=2, style=dotted];
m10_1837 -> m10_1838  [key=0, style=solid];
m10_1839 -> m10_17  [key=2, style=dotted];
m10_1839 -> m10_1840  [key=0, style=solid];
m10_1840 -> m10_17  [key=2, style=dotted];
m10_1840 -> m10_1841  [key=0, style=solid];
m10_1803 -> m10_1804  [key=0, style=solid];
m10_1803 -> m10_1803  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1842 -> m10_1802  [color=blue, key=0, style=bold];
m10_1370 -> m10_1371  [key=0, style=solid];
m10_1372 -> m10_13  [key=2, style=dotted];
m10_1372 -> m10_14  [key=2, style=dotted];
m10_1372 -> m10_1373  [key=0, style=solid];
m10_1372 -> m10_1374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1372 -> m10_1375  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1372 -> m10_1376  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1372 -> m10_1377  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1373 -> m10_15  [key=2, style=dotted];
m10_1373 -> m10_16  [key=2, style=dotted];
m10_1373 -> m10_1374  [key=0, style=solid];
m10_1376 -> m10_15  [key=2, style=dotted];
m10_1376 -> m10_16  [key=2, style=dotted];
m10_1376 -> m10_1377  [key=0, style=solid];
m10_1374 -> m10_17  [key=2, style=dotted];
m10_1374 -> m10_1375  [key=0, style=solid];
m10_1375 -> m10_17  [key=2, style=dotted];
m10_1375 -> m10_1376  [key=0, style=solid];
m10_1377 -> m10_17  [key=2, style=dotted];
m10_1377 -> m10_1378  [key=0, style=solid];
m10_1371 -> m10_1372  [key=0, style=solid];
m10_1371 -> m10_1371  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1378 -> m10_1370  [color=blue, key=0, style=bold];
m10_757 -> m10_758  [key=0, style=solid];
m10_759 -> m10_13  [key=2, style=dotted];
m10_759 -> m10_14  [key=2, style=dotted];
m10_759 -> m10_760  [key=0, style=solid];
m10_759 -> m10_761  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_759 -> m10_762  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_763 -> m10_13  [key=2, style=dotted];
m10_763 -> m10_14  [key=2, style=dotted];
m10_763 -> m10_764  [key=0, style=solid];
m10_763 -> m10_765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_763 -> m10_766  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_767 -> m10_13  [key=2, style=dotted];
m10_767 -> m10_14  [key=2, style=dotted];
m10_767 -> m10_768  [key=0, style=solid];
m10_767 -> m10_769  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_767 -> m10_770  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_771 -> m10_13  [key=2, style=dotted];
m10_771 -> m10_14  [key=2, style=dotted];
m10_771 -> m10_772  [key=0, style=solid];
m10_771 -> m10_773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_771 -> m10_774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_775 -> m10_13  [key=2, style=dotted];
m10_775 -> m10_14  [key=2, style=dotted];
m10_775 -> m10_776  [key=0, style=solid];
m10_775 -> m10_787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_777 -> m10_13  [key=2, style=dotted];
m10_777 -> m10_14  [key=2, style=dotted];
m10_777 -> m10_778  [key=0, style=solid];
m10_777 -> m10_779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_777 -> m10_780  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_781 -> m10_13  [key=2, style=dotted];
m10_781 -> m10_14  [key=2, style=dotted];
m10_781 -> m10_782  [key=0, style=solid];
m10_783 -> m10_13  [key=2, style=dotted];
m10_783 -> m10_14  [key=2, style=dotted];
m10_783 -> m10_784  [key=0, style=solid];
m10_783 -> m10_790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_760 -> m10_15  [key=2, style=dotted];
m10_760 -> m10_16  [key=2, style=dotted];
m10_760 -> m10_761  [key=0, style=solid];
m10_764 -> m10_15  [key=2, style=dotted];
m10_764 -> m10_16  [key=2, style=dotted];
m10_764 -> m10_765  [key=0, style=solid];
m10_768 -> m10_15  [key=2, style=dotted];
m10_768 -> m10_16  [key=2, style=dotted];
m10_768 -> m10_769  [key=0, style=solid];
m10_772 -> m10_15  [key=2, style=dotted];
m10_772 -> m10_16  [key=2, style=dotted];
m10_772 -> m10_773  [key=0, style=solid];
m10_778 -> m10_15  [key=2, style=dotted];
m10_778 -> m10_16  [key=2, style=dotted];
m10_778 -> m10_779  [key=0, style=solid];
m10_782 -> m10_15  [key=2, style=dotted];
m10_782 -> m10_783  [key=0, style=solid];
m10_782 -> m10_131  [key=2, style=dotted];
m10_761 -> m10_17  [key=2, style=dotted];
m10_761 -> m10_762  [key=0, style=solid];
m10_762 -> m10_17  [key=2, style=dotted];
m10_762 -> m10_763  [key=0, style=solid];
m10_765 -> m10_17  [key=2, style=dotted];
m10_765 -> m10_766  [key=0, style=solid];
m10_766 -> m10_17  [key=2, style=dotted];
m10_766 -> m10_767  [key=0, style=solid];
m10_769 -> m10_17  [key=2, style=dotted];
m10_769 -> m10_770  [key=0, style=solid];
m10_770 -> m10_17  [key=2, style=dotted];
m10_770 -> m10_771  [key=0, style=solid];
m10_773 -> m10_17  [key=2, style=dotted];
m10_773 -> m10_774  [key=0, style=solid];
m10_774 -> m10_17  [key=2, style=dotted];
m10_774 -> m10_775  [key=0, style=solid];
m10_779 -> m10_17  [key=2, style=dotted];
m10_779 -> m10_780  [key=0, style=solid];
m10_780 -> m10_17  [key=2, style=dotted];
m10_780 -> m10_781  [key=0, style=solid];
m10_776 -> m10_18  [key=2, style=dotted];
m10_776 -> m10_777  [key=0, style=solid];
m10_776 -> m10_786  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_784 -> m10_18  [key=2, style=dotted];
m10_784 -> m10_785  [key=0, style=solid];
m10_784 -> m10_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_758 -> m10_759  [key=0, style=solid];
m10_758 -> m10_682  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonTextReader reader", style=bold];
m10_785 -> m10_757  [color=blue, key=0, style=bold];
m10_197 -> m10_195  [color=blue, key=0, style=bold];
m10_135 -> m10_136  [key=0, style=solid];
m10_135 -> m10_137  [key=0, style=solid];
m10_135 -> m10_138  [key=2, style=dotted];
m10_418 -> m10_17  [key=2, style=dotted];
m10_418 -> m10_419  [key=0, style=solid];
m10_651 -> m10_652  [key=0, style=solid];
m10_651 -> m10_653  [key=0, style=solid];
m10_654 -> m10_13  [key=2, style=dotted];
m10_654 -> m10_655  [key=0, style=solid];
m10_654 -> m10_656  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_657  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_658  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_659  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_660  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_661  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_662  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_663  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_664  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_665  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_666  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_667  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_668  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_654 -> m10_669  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_653 -> m10_14  [key=2, style=dotted];
m10_653 -> m10_654  [key=0, style=solid];
m10_653 -> m10_655  [key=0, style=solid];
m10_655 -> m10_17  [key=2, style=dotted];
m10_655 -> m10_656  [key=0, style=solid];
m10_655 -> m10_321  [color=blue, key=0, style=bold];
m10_657 -> m10_17  [key=2, style=dotted];
m10_657 -> m10_658  [key=0, style=solid];
m10_658 -> m10_17  [key=2, style=dotted];
m10_658 -> m10_659  [key=0, style=solid];
m10_658 -> m10_684  [key=0, style=solid];
m10_658 -> m10_685  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_658 -> m10_686  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_660 -> m10_17  [key=2, style=dotted];
m10_660 -> m10_661  [key=0, style=solid];
m10_660 -> m10_199  [key=2, style=dotted];
m10_660 -> m10_663  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
m10_661 -> m10_17  [key=2, style=dotted];
m10_661 -> m10_662  [key=0, style=solid];
m10_661 -> m10_663  [key=0, style=solid];
m10_663 -> m10_17  [key=2, style=dotted];
m10_663 -> m10_664  [key=0, style=solid];
m10_663 -> m10_200  [key=2, style=dotted];
m10_663 -> m10_667  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m10_664 -> m10_17  [key=2, style=dotted];
m10_664 -> m10_665  [key=0, style=solid];
m10_664 -> m10_667  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_665 -> m10_17  [key=2, style=dotted];
m10_665 -> m10_666  [key=0, style=solid];
m10_665 -> m10_588  [color=blue, key=0, style=bold];
m10_666 -> m10_17  [key=2, style=dotted];
m10_666 -> m10_667  [key=0, style=solid];
m10_668 -> m10_17  [key=2, style=dotted];
m10_668 -> m10_669  [key=0, style=solid];
m10_668 -> m10_666  [color=blue, key=0, style=bold];
m10_669 -> m10_17  [key=2, style=dotted];
m10_669 -> m10_670  [key=0, style=solid];
m10_669 -> m10_679  [key=2, style=dotted];
m10_669 -> m10_672  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m10_669 -> m10_674  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m10_669 -> m10_676  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m10_669 -> m10_677  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m10_656 -> m10_657  [key=0, style=solid];
m10_656 -> m10_138  [key=2, style=dotted];
m10_659 -> m10_660  [key=0, style=solid];
m10_659 -> m10_138  [key=2, style=dotted];
m10_662 -> m10_663  [key=0, style=solid];
m10_662 -> m10_138  [key=2, style=dotted];
m10_662 -> m10_665  [key=0, style=solid];
m10_667 -> m10_668  [key=0, style=solid];
m10_667 -> m10_138  [key=2, style=dotted];
m10_667 -> m10_217  [key=2, style=dotted];
m10_652 -> m10_653  [key=0, style=solid];
m10_652 -> m10_652  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m10_652 -> m10_655  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_670 -> m10_651  [color=blue, key=0, style=bold];
m10_670 -> m10_671  [key=0, style=solid];
m10_670 -> m10_672  [key=0, style=solid];
m10_1452 -> m10_1453  [key=0, style=solid];
m10_1454 -> m10_13  [key=2, style=dotted];
m10_1454 -> m10_14  [key=2, style=dotted];
m10_1454 -> m10_1455  [key=0, style=solid];
m10_1454 -> m10_1458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1455 -> m10_18  [key=2, style=dotted];
m10_1455 -> m10_1456  [key=0, style=solid];
m10_1455 -> m10_1457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1453 -> m10_1454  [key=0, style=solid];
m10_1453 -> m10_1453  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1456 -> m10_1452  [color=blue, key=0, style=bold];
m10_196 -> m10_15  [key=2, style=dotted];
m10_196 -> m10_196  [key=0, style=solid];
m10_196 -> m10_197  [key=0, style=solid];
m10_1672 -> m10_1673  [key=0, style=solid];
m10_1674 -> m10_13  [key=2, style=dotted];
m10_1674 -> m10_14  [key=2, style=dotted];
m10_1674 -> m10_1675  [key=0, style=solid];
m10_1674 -> m10_1676  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1674 -> m10_1677  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1676 -> m10_17  [key=2, style=dotted];
m10_1676 -> m10_1677  [key=0, style=solid];
m10_1677 -> m10_17  [key=2, style=dotted];
m10_1677 -> m10_1678  [key=0, style=solid];
m10_1673 -> m10_1674  [key=0, style=solid];
m10_1673 -> m10_1673  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1675 -> m10_1676  [key=0, style=solid];
m10_1675 -> m10_747  [key=2, style=dotted];
m10_1678 -> m10_1672  [color=blue, key=0, style=bold];
m10_269 -> m10_270  [key=0, style=solid];
m10_269 -> m10_138  [key=2, style=dotted];
m10_320 -> m10_17  [key=2, style=dotted];
m10_320 -> m10_321  [key=0, style=solid];
m10_200 -> m10_14  [key=2, style=dotted];
m10_200 -> m10_201  [key=0, style=solid];
m10_618 -> m10_619  [key=0, style=solid];
m10_621 -> m10_13  [key=2, style=dotted];
m10_621 -> m10_14  [key=2, style=dotted];
m10_621 -> m10_622  [key=0, style=solid];
m10_621 -> m10_541  [key=2, style=dotted];
m10_621 -> m10_623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_621 -> m10_624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_621 -> m10_625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_621 -> m10_626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_621 -> m10_628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_621 -> m10_629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_621 -> m10_630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_621 -> m10_631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_622 -> m10_16  [key=2, style=dotted];
m10_622 -> m10_623  [key=0, style=solid];
m10_622 -> m10_138  [key=2, style=dotted];
m10_622 -> m10_659  [key=2, style=dotted];
m10_624 -> m10_16  [key=2, style=dotted];
m10_624 -> m10_625  [key=0, style=solid];
m10_624 -> m10_138  [key=2, style=dotted];
m10_624 -> m10_634  [key=0, style=solid];
m10_629 -> m10_16  [key=2, style=dotted];
m10_629 -> m10_630  [key=0, style=solid];
m10_629 -> m10_138  [key=2, style=dotted];
m10_623 -> m10_17  [key=2, style=dotted];
m10_623 -> m10_624  [key=0, style=solid];
m10_625 -> m10_17  [key=2, style=dotted];
m10_625 -> m10_626  [key=0, style=solid];
m10_628 -> m10_17  [key=2, style=dotted];
m10_628 -> m10_629  [key=0, style=solid];
m10_630 -> m10_17  [key=2, style=dotted];
m10_630 -> m10_631  [key=0, style=solid];
m10_620 -> m10_621  [key=0, style=solid];
m10_620 -> m10_115  [key=2, style=dotted];
m10_620 -> m10_627  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m10_626 -> m10_627  [key=0, style=solid];
m10_626 -> m10_534  [key=2, style=dotted];
m10_631 -> m10_632  [key=0, style=solid];
m10_631 -> m10_138  [key=2, style=dotted];
m10_631 -> m10_131  [key=2, style=dotted];
m10_627 -> m10_628  [key=0, style=solid];
m10_627 -> m10_633  [key=2, style=dotted];
m10_619 -> m10_620  [key=0, style=solid];
m10_619 -> m10_536  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m10_632 -> m10_618  [color=blue, key=0, style=bold];
m10_632 -> m10_633  [key=0, style=solid];
m10_321 -> m10_590  [key=0, style=solid];
m10_321 -> m10_591  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_321 -> m10_597  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_321 -> m10_599  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_321 -> m10_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_621  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_626  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_629  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_633  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_635  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_637  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_638  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_321 -> m10_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m10_321 -> m10_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_643  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_644  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_645  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_321 -> m10_647  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_321 -> m10_653  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m10_321 -> m10_17  [key=2, style=dotted];
m10_321 -> m10_322  [key=0, style=solid];
m10_590 -> m10_591  [key=0, style=solid];
m10_590 -> m10_55  [key=2, style=dotted];
m10_590 -> m10_594  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_595  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_601  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_602  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_611  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_612  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_613  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_614  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_616  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_617  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_618  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_619  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_620  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_621  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_622  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_623  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_624  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m10_590 -> m10_15  [key=2, style=dotted];
m10_590 -> m10_16  [key=2, style=dotted];
m10_591 -> m10_592  [key=0, style=solid];
m10_591 -> m10_55  [key=2, style=dotted];
m10_591 -> m10_634  [color=darkseagreen4, key=1, label=requiredAttribute, style=dashed];
m10_591 -> m10_17  [key=2, style=dotted];
m10_597 -> m10_598  [key=0, style=solid];
m10_597 -> m10_607  [color=darkseagreen4, key=1, label=mappedName, style=dashed];
m10_597 -> m10_608  [color=darkseagreen4, key=1, label=mappedName, style=dashed];
m10_597 -> m10_597  [color=darkorchid, key=3, label="Local variable int length", style=bold];
m10_597 -> m10_15  [key=2, style=dotted];
m10_597 -> m10_16  [key=2, style=dotted];
m10_599 -> m10_600  [key=0, style=solid];
m10_599 -> m10_55  [key=2, style=dotted];
m10_599 -> m10_603  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m10_599 -> m10_604  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m10_599 -> m10_15  [key=2, style=dotted];
m10_599 -> m10_16  [key=2, style=dotted];
m10_607 -> m10_609  [key=0, style=solid];
m10_607 -> m10_657  [key=2, style=dotted];
m10_607 -> m10_16  [key=2, style=dotted];
m10_607 -> m10_608  [key=0, style=solid];
m10_607 -> m10_138  [key=2, style=dotted];
m10_608 -> m10_609  [key=0, style=solid];
m10_608 -> m10_658  [key=2, style=dotted];
m10_608 -> m10_16  [key=2, style=dotted];
m10_608 -> m10_138  [key=2, style=dotted];
m10_609 -> m10_610  [key=0, style=solid];
m10_609 -> m10_17  [key=2, style=dotted];
m10_612 -> m10_613  [key=0, style=solid];
m10_612 -> m10_17  [key=2, style=dotted];
m10_613 -> m10_614  [key=0, style=solid];
m10_613 -> m10_17  [key=2, style=dotted];
m10_614 -> m10_615  [key=0, style=solid];
m10_614 -> m10_16  [key=2, style=dotted];
m10_614 -> m10_138  [key=2, style=dotted];
m10_616 -> m10_617  [key=0, style=solid];
m10_616 -> m10_138  [key=2, style=dotted];
m10_616 -> m10_131  [key=2, style=dotted];
m10_617 -> m10_618  [key=0, style=solid];
m10_617 -> m10_605  [color=blue, key=0, style=bold];
m10_633 -> m10_634  [key=0, style=solid];
m10_635 -> m10_636  [key=0, style=solid];
m10_635 -> m10_536  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m10_637 -> m10_638  [key=0, style=solid];
m10_637 -> m10_13  [key=2, style=dotted];
m10_637 -> m10_14  [key=2, style=dotted];
m10_637 -> m10_541  [key=2, style=dotted];
m10_637 -> m10_639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_637 -> m10_640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_637 -> m10_641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_637 -> m10_642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_637 -> m10_643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_637 -> m10_644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_637 -> m10_646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_637 -> m10_647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_637 -> m10_648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_637 -> m10_649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_638 -> m10_639  [key=0, style=solid];
m10_638 -> m10_55  [key=2, style=dotted];
m10_638 -> m10_641  [color=darkseagreen4, key=1, label=hasJsonIgnoreAttribute, style=dashed];
m10_638 -> m10_642  [color=darkseagreen4, key=1, label=hasJsonIgnoreAttribute, style=dashed];
m10_638 -> m10_16  [key=2, style=dotted];
m10_638 -> m10_138  [key=2, style=dotted];
m10_639 -> m10_640  [key=0, style=solid];
m10_639 -> m10_642  [key=0, style=solid];
m10_639 -> m10_17  [key=2, style=dotted];
m10_641 -> m10_643  [key=0, style=solid];
m10_641 -> m10_16  [key=2, style=dotted];
m10_641 -> m10_642  [key=0, style=solid];
m10_641 -> m10_138  [key=2, style=dotted];
m10_642 -> m10_643  [key=0, style=solid];
m10_642 -> m10_17  [key=2, style=dotted];
m10_643 -> m10_644  [key=0, style=solid];
m10_643 -> m10_325  [key=2, style=dotted];
m10_643 -> m10_16  [key=2, style=dotted];
m10_643 -> m10_138  [key=2, style=dotted];
m10_644 -> m10_645  [key=0, style=solid];
m10_644 -> m10_325  [key=2, style=dotted];
m10_644 -> m10_534  [key=2, style=dotted];
m10_645 -> m10_646  [key=0, style=solid];
m10_645 -> m10_55  [key=2, style=dotted];
m10_645 -> m10_647  [color=darkseagreen4, key=1, label=defaultValueAttribute, style=dashed];
m10_645 -> m10_633  [key=2, style=dotted];
m10_647 -> m10_648  [key=0, style=solid];
m10_647 -> m10_16  [key=2, style=dotted];
m10_647 -> m10_138  [key=2, style=dotted];
m10_594 -> m10_595  [key=0, style=solid];
m10_594 -> m10_597  [key=0, style=solid];
m10_594 -> m10_15  [key=2, style=dotted];
m10_594 -> m10_16  [key=2, style=dotted];
m10_595 -> m10_596  [key=0, style=solid];
m10_595 -> m10_607  [color=darkseagreen4, key=1, label=mappedName, style=dashed];
m10_595 -> m10_608  [color=darkseagreen4, key=1, label=mappedName, style=dashed];
m10_595 -> m10_17  [key=2, style=dotted];
m10_601 -> m10_602  [key=0, style=solid];
m10_601 -> m10_603  [key=0, style=solid];
m10_601 -> m10_15  [key=2, style=dotted];
m10_601 -> m10_16  [key=2, style=dotted];
m10_602 -> m10_606  [key=0, style=solid];
m10_602 -> m10_656  [key=2, style=dotted];
m10_602 -> m10_607  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m10_602 -> m10_17  [key=2, style=dotted];
m10_602 -> m10_603  [key=0, style=solid];
m10_611 -> m10_612  [key=0, style=solid];
m10_611 -> m10_625  [key=0, style=solid];
m10_611 -> m10_16  [key=2, style=dotted];
m10_611 -> m10_138  [key=2, style=dotted];
m10_592 -> m10_593  [key=0, style=solid];
m10_592 -> m10_15  [key=2, style=dotted];
m10_592 -> m10_16  [key=2, style=dotted];
m10_634 -> m10_635  [key=0, style=solid];
m10_634 -> m10_637  [key=0, style=solid];
m10_593 -> m10_594  [key=0, style=solid];
m10_593 -> m10_17  [key=2, style=dotted];
m10_596 -> m10_599  [key=0, style=solid];
m10_596 -> m10_607  [color=darkseagreen4, key=1, label=hasSpecifiedName, style=dashed];
m10_596 -> m10_17  [key=2, style=dotted];
m10_596 -> m10_597  [key=0, style=solid];
m10_598 -> m10_599  [key=0, style=solid];
m10_598 -> m10_607  [color=darkseagreen4, key=1, label=hasSpecifiedName, style=dashed];
m10_598 -> m10_17  [key=2, style=dotted];
m10_600 -> m10_601  [key=0, style=solid];
m10_600 -> m10_17  [key=2, style=dotted];
m10_603 -> m10_604  [key=0, style=solid];
m10_603 -> m10_605  [key=0, style=solid];
m10_603 -> m10_560  [color=blue, key=0, style=bold];
m10_604 -> m10_606  [key=0, style=solid];
m10_604 -> m10_107  [key=2, style=dotted];
m10_604 -> m10_607  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m10_605 -> m10_606  [key=0, style=solid];
m10_605 -> m10_607  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m10_606 -> m10_607  [key=0, style=solid];
m10_606 -> m10_608  [key=0, style=solid];
m10_606 -> m10_13  [key=2, style=dotted];
m10_606 -> m10_14  [key=2, style=dotted];
m10_606 -> m10_609  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_606 -> m10_610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_606 -> m10_611  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_606 -> m10_612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_606 -> m10_613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_606 -> m10_614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_606 -> m10_615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_606 -> m10_616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_610 -> m10_611  [key=0, style=solid];
m10_610 -> m10_637  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m10_610 -> m10_642  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m10_610 -> m10_651  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m10_610 -> m10_17  [key=2, style=dotted];
m10_615 -> m10_616  [key=0, style=solid];
m10_615 -> m10_637  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m10_615 -> m10_642  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m10_615 -> m10_651  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m10_615 -> m10_17  [key=2, style=dotted];
m10_636 -> m10_637  [key=0, style=solid];
m10_636 -> m10_642  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m10_636 -> m10_651  [color=darkseagreen4, key=1, label=hasMemberAttribute, style=dashed];
m10_636 -> m10_115  [key=2, style=dotted];
m10_636 -> m10_645  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m10_640 -> m10_641  [key=0, style=solid];
m10_640 -> m10_16  [key=2, style=dotted];
m10_640 -> m10_138  [key=2, style=dotted];
m10_646 -> m10_647  [key=0, style=solid];
m10_646 -> m10_648  [key=0, style=solid];
m10_646 -> m10_17  [key=2, style=dotted];
m10_648 -> m10_649  [key=0, style=solid];
m10_648 -> m10_655  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_648 -> m10_17  [key=2, style=dotted];
m10_649 -> m10_650  [key=0, style=solid];
m10_649 -> m10_651  [key=0, style=solid];
m10_649 -> m10_138  [key=2, style=dotted];
m10_649 -> m10_131  [key=2, style=dotted];
m10_650 -> m10_651  [key=0, style=solid];
m10_650 -> m10_655  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m10_650 -> m10_634  [color=blue, key=0, style=bold];
m10_19 -> m10_20  [color=green, key=0, style=solid];
m10_680 -> m10_676  [color=blue, key=0, style=bold];
m10_1170 -> m10_1171  [key=0, style=solid];
m10_1172 -> m10_13  [key=2, style=dotted];
m10_1172 -> m10_14  [key=2, style=dotted];
m10_1172 -> m10_1173  [key=0, style=solid];
m10_1172 -> m10_1174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1172 -> m10_1175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1172 -> m10_1176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1172 -> m10_1177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1172 -> m10_1180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1173 -> m10_15  [key=2, style=dotted];
m10_1173 -> m10_16  [key=2, style=dotted];
m10_1173 -> m10_1174  [key=0, style=solid];
m10_1175 -> m10_15  [key=2, style=dotted];
m10_1175 -> m10_16  [key=2, style=dotted];
m10_1175 -> m10_1176  [key=0, style=solid];
m10_1174 -> m10_17  [key=2, style=dotted];
m10_1174 -> m10_1175  [key=0, style=solid];
m10_1176 -> m10_17  [key=2, style=dotted];
m10_1176 -> m10_1177  [key=0, style=solid];
m10_1177 -> m10_18  [key=2, style=dotted];
m10_1177 -> m10_1178  [key=0, style=solid];
m10_1177 -> m10_1179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1171 -> m10_1172  [key=0, style=solid];
m10_1171 -> m10_1171  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1178 -> m10_1170  [color=blue, key=0, style=bold];
m10_1069 -> m10_1070  [key=0, style=solid];
m10_1070 -> m10_13  [key=2, style=dotted];
m10_1070 -> m10_14  [key=2, style=dotted];
m10_1070 -> m10_1071  [key=0, style=solid];
m10_1070 -> m10_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1071 -> m10_18  [key=2, style=dotted];
m10_1071 -> m10_1072  [key=0, style=solid];
m10_1071 -> m10_1073  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1072 -> m10_1069  [color=blue, key=0, style=bold];
m10_156 -> m10_140  [color=blue, key=0, style=bold];
m10_50 -> m10_13  [key=2, style=dotted];
m10_50 -> m10_14  [key=2, style=dotted];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_52  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_50 -> m10_53  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_50 -> m10_54  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_50 -> m10_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_460 -> m10_461  [key=0, style=solid];
m10_460 -> m10_465  [color=darkseagreen4, key=1, label=total, style=dashed];
m10_461 -> m10_462  [key=0, style=solid];
m10_461 -> m10_465  [key=2, style=dotted];
m10_461 -> m10_463  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_461 -> m10_18  [key=2, style=dotted];
m10_461 -> m10_464  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_462 -> m10_463  [key=0, style=solid];
m10_462 -> m10_103  [key=2, style=dotted];
m10_462 -> m10_462  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_462 -> m10_459  [key=0, style=solid];
m10_463 -> m10_464  [key=0, style=solid];
m10_463 -> m10_452  [color=blue, key=0, style=bold];
m10_464 -> m10_460  [color=blue, key=0, style=bold];
m10_464 -> m10_465  [key=0, style=solid];
m10_353 -> m10_354  [key=0, style=solid];
m10_353 -> m10_355  [key=0, style=solid];
m10_353 -> m10_353  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m10_354 -> m10_13  [key=2, style=dotted];
m10_354 -> m10_14  [key=2, style=dotted];
m10_354 -> m10_355  [key=0, style=solid];
m10_354 -> m10_358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_354 -> m10_105  [key=2, style=dotted];
m10_355 -> m10_18  [key=2, style=dotted];
m10_355 -> m10_356  [key=0, style=solid];
m10_355 -> m10_357  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_356 -> m10_353  [color=blue, key=0, style=bold];
m10_356 -> m10_357  [key=0, style=solid];
m10_356 -> m10_105  [key=2, style=dotted];
m10_198 -> m10_199  [key=0, style=solid];
m10_22 -> m10_23  [key=0, style=solid];
m10_24 -> m10_13  [key=2, style=dotted];
m10_24 -> m10_14  [key=2, style=dotted];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_26  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_27  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_28  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_29  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_30  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_31  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_32  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_33  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_35  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_36  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_37  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_39  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_40  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_41  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_42  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_43  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_44  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_24 -> m10_45  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_26 -> m10_15  [key=2, style=dotted];
m10_26 -> m10_16  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_47  [key=2, style=dotted];
m10_26 -> m10_29  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m10_26 -> m10_39  [color=darkseagreen4, key=1, label=memberSerialization, style=dashed];
m10_28 -> m10_15  [key=2, style=dotted];
m10_28 -> m10_16  [key=2, style=dotted];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_50  [key=2, style=dotted];
m10_28 -> m10_34  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m10_28 -> m10_36  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m10_28 -> m10_38  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m10_28 -> m10_40  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m10_28 -> m10_44  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m10_28 -> m10_45  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m10_32 -> m10_15  [key=2, style=dotted];
m10_32 -> m10_16  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_31  [key=0, style=solid];
m10_32 -> m10_52  [key=2, style=dotted];
m10_36 -> m10_15  [key=2, style=dotted];
m10_36 -> m10_16  [key=2, style=dotted];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_31  [key=0, style=solid];
m10_36 -> m10_54  [key=2, style=dotted];
m10_40 -> m10_15  [key=2, style=dotted];
m10_40 -> m10_16  [key=2, style=dotted];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_31  [key=0, style=solid];
m10_40 -> m10_54  [key=2, style=dotted];
m10_44 -> m10_15  [key=2, style=dotted];
m10_44 -> m10_16  [key=2, style=dotted];
m10_44 -> m10_45  [key=0, style=solid];
m10_44 -> m10_41  [key=0, style=solid];
m10_44 -> m10_54  [key=2, style=dotted];
m10_27 -> m10_17  [key=2, style=dotted];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_48  [key=2, style=dotted];
m10_27 -> m10_49  [key=2, style=dotted];
m10_27 -> m10_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_27 -> m10_31  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m10_27 -> m10_41  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m10_27 -> m10_27  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_29 -> m10_17  [key=2, style=dotted];
m10_29 -> m10_30  [key=0, style=solid];
m10_29 -> m10_41  [key=0, style=solid];
m10_30 -> m10_17  [key=2, style=dotted];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_48  [key=2, style=dotted];
m10_30 -> m10_49  [key=2, style=dotted];
m10_30 -> m10_51  [key=2, style=dotted];
m10_30 -> m10_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_30 -> m10_33  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
m10_31 -> m10_17  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_45  [key=0, style=solid];
m10_31 -> m10_33  [color=darkseagreen4, key=1, label=member, style=dashed];
m10_31 -> m10_34  [color=darkseagreen4, key=1, label=member, style=dashed];
m10_31 -> m10_35  [color=darkseagreen4, key=1, label=member, style=dashed];
m10_31 -> m10_36  [color=darkseagreen4, key=1, label=member, style=dashed];
m10_31 -> m10_37  [color=darkseagreen4, key=1, label=member, style=dashed];
m10_31 -> m10_38  [color=darkseagreen4, key=1, label=member, style=dashed];
m10_31 -> m10_39  [color=darkseagreen4, key=1, label=member, style=dashed];
m10_31 -> m10_40  [color=darkseagreen4, key=1, label=member, style=dashed];
m10_33 -> m10_17  [key=2, style=dotted];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_35  [key=0, style=solid];
m10_33 -> m10_53  [key=2, style=dotted];
m10_34 -> m10_17  [key=2, style=dotted];
m10_34 -> m10_35  [key=0, style=solid];
m10_34 -> m10_31  [key=0, style=solid];
m10_34 -> m10_54  [key=2, style=dotted];
m10_35 -> m10_17  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_37  [key=0, style=solid];
m10_35 -> m10_55  [key=2, style=dotted];
m10_37 -> m10_17  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_39  [key=0, style=solid];
m10_37 -> m10_55  [key=2, style=dotted];
m10_38 -> m10_17  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_31  [key=0, style=solid];
m10_38 -> m10_54  [key=2, style=dotted];
m10_39 -> m10_17  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_31  [key=0, style=solid];
m10_39 -> m10_56  [key=2, style=dotted];
m10_41 -> m10_17  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_47  [key=2, style=dotted];
m10_41 -> m10_45  [key=0, style=solid];
m10_41 -> m10_44  [color=darkseagreen4, key=1, label=member, style=dashed];
m10_42 -> m10_17  [key=2, style=dotted];
m10_42 -> m10_43  [key=0, style=solid];
m10_43 -> m10_17  [key=2, style=dotted];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_41  [key=0, style=solid];
m10_45 -> m10_17  [key=2, style=dotted];
m10_45 -> m10_46  [key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_23  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_23 -> m10_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_23 -> m10_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_23 -> m10_30  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_25 -> m10_26  [key=0, style=solid];
m10_46 -> m10_22  [color=blue, key=0, style=bold];
m10_46 -> m10_23  [color=blue, key=0, style=bold];
m10_116 -> m10_117  [key=0, style=solid];
m10_484 -> m10_485  [key=0, style=solid];
m10_484 -> m10_486  [key=0, style=solid];
m10_486 -> m10_13  [key=2, style=dotted];
m10_486 -> m10_487  [key=0, style=solid];
m10_486 -> m10_482  [key=2, style=dotted];
m10_486 -> m10_483  [key=2, style=dotted];
m10_486 -> m10_488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_486 -> m10_486  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m10_492 -> m10_13  [key=2, style=dotted];
m10_492 -> m10_493  [key=0, style=solid];
m10_492 -> m10_482  [key=2, style=dotted];
m10_492 -> m10_483  [key=2, style=dotted];
m10_492 -> m10_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_492 -> m10_162  [key=2, style=dotted];
m10_487 -> m10_15  [key=2, style=dotted];
m10_487 -> m10_488  [key=0, style=solid];
m10_487 -> m10_497  [key=0, style=solid];
m10_487 -> m10_419  [key=2, style=dotted];
m10_493 -> m10_15  [key=2, style=dotted];
m10_493 -> m10_494  [key=0, style=solid];
m10_493 -> m10_497  [key=0, style=solid];
m10_493 -> m10_444  [key=2, style=dotted];
m10_488 -> m10_17  [key=2, style=dotted];
m10_488 -> m10_489  [key=0, style=solid];
m10_488 -> m10_490  [key=0, style=solid];
m10_488 -> m10_500  [key=2, style=dotted];
m10_494 -> m10_17  [key=2, style=dotted];
m10_494 -> m10_495  [key=0, style=solid];
m10_494 -> m10_496  [key=0, style=solid];
m10_494 -> m10_502  [key=2, style=dotted];
m10_485 -> m10_486  [key=0, style=solid];
m10_485 -> m10_481  [key=2, style=dotted];
m10_485 -> m10_491  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_485 -> m10_497  [key=0, style=solid];
m10_485 -> m10_444  [key=2, style=dotted];
m10_491 -> m10_492  [key=0, style=solid];
m10_491 -> m10_497  [key=0, style=solid];
m10_491 -> m10_419  [key=2, style=dotted];
m10_489 -> m10_491  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_489 -> m10_440  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m10_489 -> m10_490  [key=0, style=solid];
m10_489 -> m10_495  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_489 -> m10_497  [key=0, style=solid];
m10_489 -> m10_466  [key=2, style=dotted];
m10_495 -> m10_495  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_495 -> m10_490  [key=0, style=solid];
m10_495 -> m10_497  [key=0, style=solid];
m10_495 -> m10_472  [key=2, style=dotted];
m10_490 -> m10_491  [key=0, style=solid];
m10_490 -> m10_496  [key=0, style=solid];
m10_490 -> m10_492  [key=0, style=solid];
m10_490 -> m10_501  [key=2, style=dotted];
m10_496 -> m10_484  [color=blue, key=0, style=bold];
m10_496 -> m10_497  [key=0, style=solid];
m10_496 -> m10_64  [key=2, style=dotted];
m10_296 -> m10_17  [key=2, style=dotted];
m10_296 -> m10_297  [key=0, style=solid];
m10_402 -> m10_511  [key=0, style=solid];
m10_402 -> m10_513  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_402 -> m10_514  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_402 -> m10_515  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m10_402 -> m10_516  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_402 -> m10_517  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_402 -> m10_518  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_402 -> m10_519  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_402 -> m10_520  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_402 -> m10_521  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_402 -> m10_522  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m10_402 -> m10_523  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_402 -> m10_524  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m10_402 -> m10_525  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m10_402 -> m10_526  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_402 -> m10_17  [key=2, style=dotted];
m10_402 -> m10_403  [key=0, style=solid];
m10_511 -> m10_512  [key=0, style=solid];
m10_511 -> m10_513  [key=0, style=solid];
m10_511 -> m10_52  [key=2, style=dotted];
m10_511 -> m10_17  [key=2, style=dotted];
m10_513 -> m10_514  [key=0, style=solid];
m10_513 -> m10_515  [key=0, style=solid];
m10_514 -> m10_528  [key=0, style=solid];
m10_514 -> m10_156  [key=2, style=dotted];
m10_514 -> m10_529  [key=2, style=dotted];
m10_514 -> m10_530  [key=2, style=dotted];
m10_514 -> m10_13  [key=2, style=dotted];
m10_514 -> m10_14  [key=2, style=dotted];
m10_514 -> m10_515  [key=0, style=solid];
m10_514 -> m10_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_515 -> m10_516  [key=0, style=solid];
m10_515 -> m10_517  [key=0, style=solid];
m10_515 -> m10_18  [key=2, style=dotted];
m10_516 -> m10_528  [key=0, style=solid];
m10_516 -> m10_156  [key=2, style=dotted];
m10_516 -> m10_529  [key=2, style=dotted];
m10_516 -> m10_530  [key=2, style=dotted];
m10_516 -> m10_513  [color=blue, key=0, style=bold];
m10_517 -> m10_518  [key=0, style=solid];
m10_517 -> m10_519  [key=0, style=solid];
m10_518 -> m10_528  [key=0, style=solid];
m10_518 -> m10_156  [key=2, style=dotted];
m10_518 -> m10_529  [key=2, style=dotted];
m10_518 -> m10_531  [key=2, style=dotted];
m10_518 -> m10_519  [key=0, style=solid];
m10_518 -> m10_138  [key=2, style=dotted];
m10_519 -> m10_520  [key=0, style=solid];
m10_519 -> m10_521  [key=0, style=solid];
m10_519 -> m10_517  [color=blue, key=0, style=bold];
m10_520 -> m10_528  [key=0, style=solid];
m10_520 -> m10_156  [key=2, style=dotted];
m10_520 -> m10_529  [key=2, style=dotted];
m10_520 -> m10_440  [key=2, style=dotted];
m10_520 -> m10_521  [key=0, style=solid];
m10_521 -> m10_522  [key=0, style=solid];
m10_521 -> m10_524  [key=0, style=solid];
m10_521 -> m10_13  [key=2, style=dotted];
m10_521 -> m10_14  [key=2, style=dotted];
m10_521 -> m10_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_522 -> m10_523  [key=0, style=solid];
m10_522 -> m10_526  [key=0, style=solid];
m10_522 -> m10_18  [key=2, style=dotted];
m10_522 -> m10_524  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_523 -> m10_528  [key=0, style=solid];
m10_523 -> m10_156  [key=2, style=dotted];
m10_523 -> m10_529  [key=2, style=dotted];
m10_523 -> m10_530  [key=2, style=dotted];
m10_523 -> m10_520  [color=blue, key=0, style=bold];
m10_524 -> m10_525  [key=0, style=solid];
m10_524 -> m10_526  [key=0, style=solid];
m10_525 -> m10_528  [key=0, style=solid];
m10_525 -> m10_156  [key=2, style=dotted];
m10_525 -> m10_529  [key=2, style=dotted];
m10_525 -> m10_531  [key=2, style=dotted];
m10_525 -> m10_526  [key=0, style=solid];
m10_525 -> m10_138  [key=2, style=dotted];
m10_526 -> m10_527  [key=0, style=solid];
m10_526 -> m10_528  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m10_526 -> m10_524  [color=blue, key=0, style=bold];
m10_512 -> m10_528  [key=0, style=solid];
m10_512 -> m10_508  [color=blue, key=0, style=bold];
m10_527 -> m10_528  [key=0, style=solid];
m10_528 -> m10_402  [color=blue, key=0, style=bold];
m10_528 -> m10_13  [key=2, style=dotted];
m10_528 -> m10_14  [key=2, style=dotted];
m10_528 -> m10_529  [key=0, style=solid];
m10_528 -> m10_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_481 -> m10_482  [key=0, style=solid];
m10_481 -> m10_106  [key=2, style=dotted];
m10_481 -> m10_484  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m10_481 -> m10_486  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m10_1051 -> m10_1052  [key=0, style=solid];
m10_1052 -> m10_13  [key=2, style=dotted];
m10_1052 -> m10_14  [key=2, style=dotted];
m10_1052 -> m10_1053  [key=0, style=solid];
m10_1052 -> m10_1054  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1054 -> m10_17  [key=2, style=dotted];
m10_1054 -> m10_1055  [key=0, style=solid];
m10_1053 -> m10_1054  [key=0, style=solid];
m10_1053 -> m10_975  [key=2, style=dotted];
m10_1053 -> m10_551  [key=2, style=dotted];
m10_1055 -> m10_1051  [color=blue, key=0, style=bold];
m10_159 -> m10_160  [key=0, style=solid];
m10_1388 -> m10_1389  [key=0, style=solid];
m10_1390 -> m10_13  [key=2, style=dotted];
m10_1390 -> m10_14  [key=2, style=dotted];
m10_1390 -> m10_1391  [key=0, style=solid];
m10_1390 -> m10_1392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1390 -> m10_1404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1391 -> m10_15  [key=2, style=dotted];
m10_1391 -> m10_16  [key=2, style=dotted];
m10_1391 -> m10_1392  [key=0, style=solid];
m10_1393 -> m10_15  [key=2, style=dotted];
m10_1393 -> m10_16  [key=2, style=dotted];
m10_1393 -> m10_1394  [key=0, style=solid];
m10_1395 -> m10_15  [key=2, style=dotted];
m10_1395 -> m10_16  [key=2, style=dotted];
m10_1395 -> m10_1396  [key=0, style=solid];
m10_1397 -> m10_15  [key=2, style=dotted];
m10_1397 -> m10_16  [key=2, style=dotted];
m10_1397 -> m10_1398  [key=0, style=solid];
m10_1399 -> m10_15  [key=2, style=dotted];
m10_1399 -> m10_16  [key=2, style=dotted];
m10_1399 -> m10_1400  [key=0, style=solid];
m10_1401 -> m10_15  [key=2, style=dotted];
m10_1401 -> m10_16  [key=2, style=dotted];
m10_1401 -> m10_1402  [key=0, style=solid];
m10_1403 -> m10_15  [key=2, style=dotted];
m10_1403 -> m10_16  [key=2, style=dotted];
m10_1403 -> m10_1404  [key=0, style=solid];
m10_1392 -> m10_17  [key=2, style=dotted];
m10_1392 -> m10_1393  [key=0, style=solid];
m10_1394 -> m10_17  [key=2, style=dotted];
m10_1394 -> m10_1395  [key=0, style=solid];
m10_1396 -> m10_17  [key=2, style=dotted];
m10_1396 -> m10_1397  [key=0, style=solid];
m10_1398 -> m10_17  [key=2, style=dotted];
m10_1398 -> m10_1399  [key=0, style=solid];
m10_1400 -> m10_17  [key=2, style=dotted];
m10_1400 -> m10_1401  [key=0, style=solid];
m10_1402 -> m10_17  [key=2, style=dotted];
m10_1402 -> m10_1403  [key=0, style=solid];
m10_1404 -> m10_17  [key=2, style=dotted];
m10_1404 -> m10_1405  [key=0, style=solid];
m10_1389 -> m10_1390  [key=0, style=solid];
m10_1389 -> m10_1389  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1405 -> m10_1388  [color=blue, key=0, style=bold];
m10_555 -> m10_18  [key=2, style=dotted];
m10_555 -> m10_556  [key=0, style=solid];
m10_555 -> m10_557  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_554 -> m10_16  [key=2, style=dotted];
m10_554 -> m10_555  [key=0, style=solid];
m10_554 -> m10_138  [key=2, style=dotted];
m10_679 -> m10_15  [key=2, style=dotted];
m10_679 -> m10_679  [key=0, style=solid];
m10_679 -> m10_680  [key=0, style=solid];
m10_225 -> m10_226  [key=0, style=solid];
m10_225 -> m10_227  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TEnumeratorKey, TEnumeratorValue>>", style=dashed];
m10_225 -> m10_17  [key=2, style=dotted];
m10_226 -> m10_227  [key=0, style=solid];
m10_226 -> m10_18  [key=2, style=dotted];
m10_226 -> m10_229  [key=2, style=dotted];
m10_226 -> m10_17  [key=2, style=dotted];
m10_227 -> m10_228  [key=0, style=solid];
m10_227 -> m10_17  [key=2, style=dotted];
m10_228 -> m10_225  [color=blue, key=0, style=bold];
m10_228 -> m10_15  [key=2, style=dotted];
m10_228 -> m10_229  [key=0, style=solid];
m10_21 -> m10_19  [color=blue, key=0, style=bold];
m10_1111 -> m10_1112  [key=0, style=solid];
m10_1113 -> m10_13  [key=2, style=dotted];
m10_1113 -> m10_14  [key=2, style=dotted];
m10_1113 -> m10_1114  [key=0, style=solid];
m10_1113 -> m10_1115  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1113 -> m10_1116  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1113 -> m10_1117  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1113 -> m10_1118  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1113 -> m10_1119  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1113 -> m10_1120  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1113 -> m10_1121  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1113 -> m10_1122  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1113 -> m10_1123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1113 -> m10_1124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1114 -> m10_15  [key=2, style=dotted];
m10_1114 -> m10_16  [key=2, style=dotted];
m10_1114 -> m10_1115  [key=0, style=solid];
m10_1116 -> m10_15  [key=2, style=dotted];
m10_1116 -> m10_16  [key=2, style=dotted];
m10_1116 -> m10_1117  [key=0, style=solid];
m10_1119 -> m10_15  [key=2, style=dotted];
m10_1119 -> m10_16  [key=2, style=dotted];
m10_1119 -> m10_1120  [key=0, style=solid];
m10_1122 -> m10_15  [key=2, style=dotted];
m10_1122 -> m10_16  [key=2, style=dotted];
m10_1122 -> m10_1123  [key=0, style=solid];
m10_1124 -> m10_15  [key=2, style=dotted];
m10_1124 -> m10_1125  [key=0, style=solid];
m10_1124 -> m10_131  [key=2, style=dotted];
m10_1115 -> m10_17  [key=2, style=dotted];
m10_1115 -> m10_1116  [key=0, style=solid];
m10_1117 -> m10_17  [key=2, style=dotted];
m10_1117 -> m10_1118  [key=0, style=solid];
m10_1118 -> m10_17  [key=2, style=dotted];
m10_1118 -> m10_1119  [key=0, style=solid];
m10_1120 -> m10_17  [key=2, style=dotted];
m10_1120 -> m10_1121  [key=0, style=solid];
m10_1121 -> m10_17  [key=2, style=dotted];
m10_1121 -> m10_1122  [key=0, style=solid];
m10_1123 -> m10_17  [key=2, style=dotted];
m10_1123 -> m10_1124  [key=0, style=solid];
m10_1112 -> m10_1113  [key=0, style=solid];
m10_1112 -> m10_1112  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1125 -> m10_1111  [color=blue, key=0, style=bold];
m10_153 -> m10_17  [key=2, style=dotted];
m10_153 -> m10_154  [key=0, style=solid];
m10_161 -> m10_13  [key=2, style=dotted];
m10_161 -> m10_14  [key=2, style=dotted];
m10_161 -> m10_162  [key=0, style=solid];
m10_161 -> m10_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1260 -> m10_1261  [key=0, style=solid];
m10_1262 -> m10_13  [key=2, style=dotted];
m10_1262 -> m10_14  [key=2, style=dotted];
m10_1262 -> m10_1263  [key=0, style=solid];
m10_1262 -> m10_1264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1262 -> m10_1265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1262 -> m10_1266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1262 -> m10_1267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1262 -> m10_1268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1262 -> m10_1269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1262 -> m10_1270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1263 -> m10_15  [key=2, style=dotted];
m10_1263 -> m10_16  [key=2, style=dotted];
m10_1263 -> m10_1264  [key=0, style=solid];
m10_1265 -> m10_15  [key=2, style=dotted];
m10_1265 -> m10_16  [key=2, style=dotted];
m10_1265 -> m10_1266  [key=0, style=solid];
m10_1264 -> m10_17  [key=2, style=dotted];
m10_1264 -> m10_1265  [key=0, style=solid];
m10_1266 -> m10_17  [key=2, style=dotted];
m10_1266 -> m10_1267  [key=0, style=solid];
m10_1268 -> m10_17  [key=2, style=dotted];
m10_1268 -> m10_1269  [key=0, style=solid];
m10_1269 -> m10_17  [key=2, style=dotted];
m10_1269 -> m10_1270  [key=0, style=solid];
m10_1270 -> m10_17  [key=2, style=dotted];
m10_1270 -> m10_1271  [key=0, style=solid];
m10_1261 -> m10_1262  [key=0, style=solid];
m10_1261 -> m10_1261  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1267 -> m10_1268  [key=0, style=solid];
m10_1267 -> m10_747  [key=2, style=dotted];
m10_1271 -> m10_1260  [color=blue, key=0, style=bold];
m10_215 -> m10_17  [key=2, style=dotted];
m10_215 -> m10_216  [key=0, style=solid];
m10_339 -> m10_17  [key=2, style=dotted];
m10_339 -> m10_340  [key=0, style=solid];
m10_105 -> m10_17  [key=2, style=dotted];
m10_105 -> m10_106  [key=0, style=solid];
m10_105 -> m10_107  [key=2, style=dotted];
m10_708 -> m10_210  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m10_1508 -> m10_1509  [key=0, style=solid];
m10_1510 -> m10_13  [key=2, style=dotted];
m10_1510 -> m10_1511  [key=0, style=solid];
m10_1510 -> m10_116  [key=2, style=dotted];
m10_1510 -> m10_157  [key=2, style=dotted];
m10_1510 -> m10_158  [key=2, style=dotted];
m10_1510 -> m10_1512  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1513  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1514  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1515  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1516  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1517  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1524  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1527  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1528  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1510 -> m10_1529  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1511 -> m10_15  [key=2, style=dotted];
m10_1511 -> m10_16  [key=2, style=dotted];
m10_1511 -> m10_1512  [key=0, style=solid];
m10_1513 -> m10_15  [key=2, style=dotted];
m10_1513 -> m10_16  [key=2, style=dotted];
m10_1513 -> m10_1514  [key=0, style=solid];
m10_1515 -> m10_15  [key=2, style=dotted];
m10_1515 -> m10_16  [key=2, style=dotted];
m10_1515 -> m10_1516  [key=0, style=solid];
m10_1517 -> m10_15  [key=2, style=dotted];
m10_1517 -> m10_16  [key=2, style=dotted];
m10_1517 -> m10_1518  [key=0, style=solid];
m10_1519 -> m10_15  [key=2, style=dotted];
m10_1519 -> m10_16  [key=2, style=dotted];
m10_1519 -> m10_1520  [key=0, style=solid];
m10_1521 -> m10_15  [key=2, style=dotted];
m10_1521 -> m10_16  [key=2, style=dotted];
m10_1521 -> m10_1522  [key=0, style=solid];
m10_1523 -> m10_15  [key=2, style=dotted];
m10_1523 -> m10_16  [key=2, style=dotted];
m10_1523 -> m10_1524  [key=0, style=solid];
m10_1525 -> m10_15  [key=2, style=dotted];
m10_1525 -> m10_16  [key=2, style=dotted];
m10_1525 -> m10_1526  [key=0, style=solid];
m10_1527 -> m10_15  [key=2, style=dotted];
m10_1527 -> m10_16  [key=2, style=dotted];
m10_1527 -> m10_1528  [key=0, style=solid];
m10_1529 -> m10_15  [key=2, style=dotted];
m10_1529 -> m10_1530  [key=0, style=solid];
m10_1529 -> m10_131  [key=2, style=dotted];
m10_1512 -> m10_17  [key=2, style=dotted];
m10_1512 -> m10_1513  [key=0, style=solid];
m10_1514 -> m10_17  [key=2, style=dotted];
m10_1514 -> m10_1515  [key=0, style=solid];
m10_1516 -> m10_17  [key=2, style=dotted];
m10_1516 -> m10_1517  [key=0, style=solid];
m10_1518 -> m10_17  [key=2, style=dotted];
m10_1518 -> m10_1519  [key=0, style=solid];
m10_1520 -> m10_17  [key=2, style=dotted];
m10_1520 -> m10_1521  [key=0, style=solid];
m10_1522 -> m10_17  [key=2, style=dotted];
m10_1522 -> m10_1523  [key=0, style=solid];
m10_1524 -> m10_17  [key=2, style=dotted];
m10_1524 -> m10_1525  [key=0, style=solid];
m10_1526 -> m10_17  [key=2, style=dotted];
m10_1526 -> m10_1527  [key=0, style=solid];
m10_1528 -> m10_17  [key=2, style=dotted];
m10_1528 -> m10_1529  [key=0, style=solid];
m10_1509 -> m10_1510  [key=0, style=solid];
m10_1509 -> m10_1509  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1530 -> m10_1508  [color=blue, key=0, style=bold];
m10_109 -> m10_13  [key=2, style=dotted];
m10_109 -> m10_110  [key=0, style=solid];
m10_109 -> m10_116  [key=2, style=dotted];
m10_109 -> m10_111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_552 -> m10_553  [key=0, style=solid];
m10_552 -> m10_560  [key=0, style=solid];
m10_553 -> m10_13  [key=2, style=dotted];
m10_553 -> m10_14  [key=2, style=dotted];
m10_553 -> m10_554  [key=0, style=solid];
m10_553 -> m10_555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_553 -> m10_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_553 -> m10_571  [key=0, style=solid];
m10_553 -> m10_572  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_553 -> m10_573  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_553 -> m10_574  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_553 -> m10_575  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_553 -> m10_577  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_553 -> m10_578  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m10_553 -> m10_579  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_553 -> m10_580  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_553 -> m10_583  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_553 -> m10_584  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_556 -> m10_552  [color=blue, key=0, style=bold];
m10_862 -> m10_863  [key=0, style=solid];
m10_865 -> m10_13  [key=2, style=dotted];
m10_865 -> m10_14  [key=2, style=dotted];
m10_865 -> m10_866  [key=0, style=solid];
m10_865 -> m10_867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_865 -> m10_868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_865 -> m10_869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_865 -> m10_870  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_865 -> m10_871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_865 -> m10_872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_865 -> m10_873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_865 -> m10_874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_865 -> m10_875  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_866 -> m10_15  [key=2, style=dotted];
m10_866 -> m10_867  [key=0, style=solid];
m10_868 -> m10_15  [key=2, style=dotted];
m10_868 -> m10_869  [key=0, style=solid];
m10_872 -> m10_15  [key=2, style=dotted];
m10_872 -> m10_16  [key=2, style=dotted];
m10_872 -> m10_873  [key=0, style=solid];
m10_874 -> m10_15  [key=2, style=dotted];
m10_874 -> m10_875  [key=0, style=solid];
m10_874 -> m10_131  [key=2, style=dotted];
m10_867 -> m10_17  [key=2, style=dotted];
m10_867 -> m10_868  [key=0, style=solid];
m10_869 -> m10_17  [key=2, style=dotted];
m10_869 -> m10_870  [key=0, style=solid];
m10_870 -> m10_17  [key=2, style=dotted];
m10_870 -> m10_871  [key=0, style=solid];
m10_871 -> m10_17  [key=2, style=dotted];
m10_871 -> m10_872  [key=0, style=solid];
m10_871 -> m10_91  [key=2, style=dotted];
m10_873 -> m10_17  [key=2, style=dotted];
m10_873 -> m10_874  [key=0, style=solid];
m10_875 -> m10_17  [key=2, style=dotted];
m10_875 -> m10_876  [key=0, style=solid];
m10_864 -> m10_865  [key=0, style=solid];
m10_864 -> m10_366  [key=2, style=dotted];
m10_863 -> m10_864  [key=0, style=solid];
m10_863 -> m10_863  [color=darkorchid, key=3, label="Local variable int length", style=bold];
m10_876 -> m10_862  [color=blue, key=0, style=bold];
m10_287 -> m10_297  [key=0, style=solid];
m10_287 -> m10_298  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m10_287 -> m10_299  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m10_287 -> m10_301  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m10_287 -> m10_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_313  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_287 -> m10_288  [key=0, style=solid];
m10_287 -> m10_138  [key=2, style=dotted];
m10_297 -> m10_298  [key=0, style=solid];
m10_297 -> m10_319  [key=2, style=dotted];
m10_297 -> m10_299  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_301  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_302  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_303  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_305  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_306  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_307  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_308  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_309  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_310  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_311  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_312  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_313  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_314  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_315  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_316  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_317  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_297 -> m10_138  [key=2, style=dotted];
m10_298 -> m10_299  [key=0, style=solid];
m10_298 -> m10_17  [key=2, style=dotted];
m10_299 -> m10_300  [key=0, style=solid];
m10_299 -> m10_320  [key=2, style=dotted];
m10_299 -> m10_17  [key=2, style=dotted];
m10_301 -> m10_302  [key=0, style=solid];
m10_301 -> m10_321  [key=2, style=dotted];
m10_301 -> m10_17  [key=2, style=dotted];
m10_304 -> m10_305  [key=0, style=solid];
m10_304 -> m10_317  [key=0, style=solid];
m10_304 -> m10_17  [key=2, style=dotted];
m10_305 -> m10_306  [key=0, style=solid];
m10_305 -> m10_17  [key=2, style=dotted];
m10_306 -> m10_307  [key=0, style=solid];
m10_306 -> m10_138  [key=2, style=dotted];
m10_307 -> m10_308  [key=0, style=solid];
m10_307 -> m10_17  [key=2, style=dotted];
m10_308 -> m10_309  [key=0, style=solid];
m10_308 -> m10_310  [key=0, style=solid];
m10_308 -> m10_17  [key=2, style=dotted];
m10_309 -> m10_310  [key=0, style=solid];
m10_309 -> m10_309  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_309 -> m10_17  [key=2, style=dotted];
m10_310 -> m10_311  [key=0, style=solid];
m10_310 -> m10_138  [key=2, style=dotted];
m10_311 -> m10_312  [key=0, style=solid];
m10_311 -> m10_17  [key=2, style=dotted];
m10_312 -> m10_313  [key=0, style=solid];
m10_312 -> m10_17  [key=2, style=dotted];
m10_313 -> m10_314  [key=0, style=solid];
m10_313 -> m10_17  [key=2, style=dotted];
m10_314 -> m10_315  [key=0, style=solid];
m10_314 -> m10_138  [key=2, style=dotted];
m10_315 -> m10_316  [key=0, style=solid];
m10_315 -> m10_17  [key=2, style=dotted];
m10_316 -> m10_317  [key=0, style=solid];
m10_316 -> m10_17  [key=2, style=dotted];
m10_302 -> m10_303  [key=0, style=solid];
m10_302 -> m10_138  [key=2, style=dotted];
m10_303 -> m10_304  [key=0, style=solid];
m10_303 -> m10_17  [key=2, style=dotted];
m10_317 -> m10_318  [key=0, style=solid];
m10_317 -> m10_17  [key=2, style=dotted];
m10_300 -> m10_301  [key=0, style=solid];
m10_300 -> m10_17  [key=2, style=dotted];
m10_318 -> m10_287  [color=blue, key=0, style=bold];
m10_318 -> m10_319  [key=0, style=solid];
m10_318 -> m10_138  [key=2, style=dotted];
m10_440 -> m10_442  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_440 -> m10_440  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m10_440 -> m10_441  [key=0, style=solid];
m10_440 -> m10_444  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_113 -> m10_255  [key=0, style=solid];
m10_113 -> m10_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m10_113 -> m10_107  [color=blue, key=0, style=bold];
m10_255 -> m10_256  [key=0, style=solid];
m10_255 -> m10_201  [key=2, style=dotted];
m10_255 -> m10_138  [key=2, style=dotted];
m10_263 -> m10_264  [key=0, style=solid];
m10_263 -> m10_270  [key=2, style=dotted];
m10_263 -> m10_138  [key=2, style=dotted];
m10_256 -> m10_257  [key=0, style=solid];
m10_256 -> m10_249  [key=2, style=dotted];
m10_256 -> m10_258  [color=darkseagreen4, key=1, label=en, style=dashed];
m10_256 -> m10_259  [color=darkseagreen4, key=1, label=en, style=dashed];
m10_256 -> m10_17  [key=2, style=dotted];
m10_257 -> m10_258  [key=0, style=solid];
m10_257 -> m10_267  [key=0, style=solid];
m10_257 -> m10_250  [key=2, style=dotted];
m10_257 -> m10_17  [key=2, style=dotted];
m10_258 -> m10_259  [key=0, style=solid];
m10_258 -> m10_260  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m10_258 -> m10_266  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m10_258 -> m10_17  [key=2, style=dotted];
m10_259 -> m10_260  [key=0, style=solid];
m10_259 -> m10_267  [key=0, style=solid];
m10_259 -> m10_250  [key=2, style=dotted];
m10_259 -> m10_138  [key=2, style=dotted];
m10_267 -> m10_268  [key=0, style=solid];
m10_267 -> m10_17  [key=2, style=dotted];
m10_260 -> m10_261  [key=0, style=solid];
m10_260 -> m10_269  [key=2, style=dotted];
m10_260 -> m10_262  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_260 -> m10_17  [key=2, style=dotted];
m10_266 -> m10_268  [key=0, style=solid];
m10_266 -> m10_17  [key=2, style=dotted];
m10_266 -> m10_267  [key=0, style=solid];
m10_261 -> m10_262  [key=0, style=solid];
m10_261 -> m10_267  [key=0, style=solid];
m10_261 -> m10_17  [key=2, style=dotted];
m10_262 -> m10_263  [key=0, style=solid];
m10_262 -> m10_266  [key=0, style=solid];
m10_262 -> m10_17  [key=2, style=dotted];
m10_264 -> m10_265  [key=0, style=solid];
m10_264 -> m10_262  [key=0, style=solid];
m10_264 -> m10_17  [key=2, style=dotted];
m10_265 -> m10_268  [key=0, style=solid];
m10_265 -> m10_17  [key=2, style=dotted];
m10_265 -> m10_266  [key=0, style=solid];
m10_268 -> m10_113  [color=blue, key=0, style=bold];
m10_268 -> m10_17  [key=2, style=dotted];
m10_268 -> m10_269  [key=0, style=solid];
m10_471 -> m10_15  [key=2, style=dotted];
m10_471 -> m10_472  [key=0, style=solid];
m10_1460 -> m10_1461  [key=0, style=solid];
m10_1462 -> m10_13  [key=2, style=dotted];
m10_1462 -> m10_14  [key=2, style=dotted];
m10_1462 -> m10_1463  [key=0, style=solid];
m10_1462 -> m10_1464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1462 -> m10_1465  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1462 -> m10_1466  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1463 -> m10_15  [key=2, style=dotted];
m10_1463 -> m10_16  [key=2, style=dotted];
m10_1463 -> m10_1464  [key=0, style=solid];
m10_1464 -> m10_15  [key=2, style=dotted];
m10_1464 -> m10_16  [key=2, style=dotted];
m10_1464 -> m10_1465  [key=0, style=solid];
m10_1465 -> m10_15  [key=2, style=dotted];
m10_1465 -> m10_16  [key=2, style=dotted];
m10_1465 -> m10_1466  [key=0, style=solid];
m10_1466 -> m10_15  [key=2, style=dotted];
m10_1466 -> m10_1467  [key=0, style=solid];
m10_1466 -> m10_131  [key=2, style=dotted];
m10_1461 -> m10_1462  [key=0, style=solid];
m10_1461 -> m10_1461  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1467 -> m10_1460  [color=blue, key=0, style=bold];
m10_1298 -> m10_1299  [key=0, style=solid];
m10_1299 -> m10_13  [key=2, style=dotted];
m10_1299 -> m10_14  [key=2, style=dotted];
m10_1299 -> m10_1300  [key=0, style=solid];
m10_1299 -> m10_1303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1300 -> m10_18  [key=2, style=dotted];
m10_1300 -> m10_1301  [key=0, style=solid];
m10_1300 -> m10_1302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1301 -> m10_1298  [color=blue, key=0, style=bold];
m10_545 -> m10_546  [key=0, style=solid];
m10_545 -> m10_543  [key=0, style=solid];
m10_546 -> m10_13  [key=2, style=dotted];
m10_546 -> m10_14  [key=2, style=dotted];
m10_546 -> m10_547  [key=0, style=solid];
m10_546 -> m10_548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_546 -> m10_549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_547 -> m10_16  [key=2, style=dotted];
m10_547 -> m10_548  [key=0, style=solid];
m10_547 -> m10_138  [key=2, style=dotted];
m10_547 -> m10_554  [key=2, style=dotted];
m10_549 -> m10_17  [key=2, style=dotted];
m10_549 -> m10_550  [key=0, style=solid];
m10_549 -> m10_555  [key=2, style=dotted];
m10_549 -> m10_556  [key=2, style=dotted];
m10_549 -> m10_557  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_548 -> m10_549  [key=0, style=solid];
m10_548 -> m10_534  [key=2, style=dotted];
m10_548 -> m10_551  [key=2, style=dotted];
m10_548 -> m10_543  [key=0, style=solid];
m10_548 -> m10_288  [key=2, style=dotted];
m10_550 -> m10_545  [color=blue, key=0, style=bold];
m10_550 -> m10_551  [key=0, style=solid];
m10_114 -> m10_120  [key=0, style=solid];
m10_120 -> m10_121  [key=0, style=solid];
m10_120 -> m10_124  [key=2, style=dotted];
m10_120 -> m10_125  [key=2, style=dotted];
m10_120 -> m10_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_120 -> m10_16  [key=2, style=dotted];
m10_121 -> m10_122  [key=0, style=solid];
m10_121 -> m10_126  [key=2, style=dotted];
m10_121 -> m10_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_121 -> m10_121  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_121 -> m10_130  [key=2, style=dotted];
m10_122 -> m10_123  [key=0, style=solid];
m10_122 -> m10_131  [key=2, style=dotted];
m10_123 -> m10_114  [color=blue, key=0, style=bold];
m10_123 -> m10_124  [key=0, style=solid];
m10_123 -> m10_125  [color=darkseagreen4, key=1, label=ms, style=dashed];
m10_123 -> m10_127  [color=darkseagreen4, key=1, label=ms, style=dashed];
m10_123 -> m10_129  [key=2, style=dotted];
m10_1305 -> m10_1306  [key=0, style=solid];
m10_1306 -> m10_13  [key=2, style=dotted];
m10_1306 -> m10_14  [key=2, style=dotted];
m10_1306 -> m10_1307  [key=0, style=solid];
m10_1306 -> m10_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1307 -> m10_18  [key=2, style=dotted];
m10_1307 -> m10_1308  [key=0, style=solid];
m10_1307 -> m10_1309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1308 -> m10_1305  [color=blue, key=0, style=bold];
m10_133 -> m10_134  [key=0, style=solid];
m10_133 -> m10_133  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m10_201 -> m10_13  [key=2, style=dotted];
m10_201 -> m10_202  [key=0, style=solid];
m10_201 -> m10_203  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_204  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_205  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_206  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_207  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_208  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_209  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_210  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_211  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_212  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_213  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_214  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_215  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_216  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_217  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_218  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_219  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_220  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_221  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_222  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_223  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_224  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_225  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_226  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_227  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_228  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_229  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_230  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_231  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_232  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_233  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_234  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_235  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_236  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_237  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_238  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_239  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_240  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_241  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_242  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_243  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_244  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_245  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_246  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_247  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_201 -> m10_248  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_129 -> m10_130  [key=0, style=solid];
m10_129 -> m10_133  [key=2, style=dotted];
m10_129 -> m10_134  [key=2, style=dotted];
m10_472 -> m10_473  [key=0, style=solid];
m10_472 -> m10_17  [key=2, style=dotted];
m10_473 -> m10_474  [key=0, style=solid];
m10_473 -> m10_477  [key=2, style=dotted];
m10_473 -> m10_475  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_473 -> m10_440  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m10_473 -> m10_479  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_474 -> m10_475  [key=0, style=solid];
m10_474 -> m10_103  [key=2, style=dotted];
m10_474 -> m10_480  [key=0, style=solid];
m10_475 -> m10_476  [key=0, style=solid];
m10_476 -> m10_472  [color=blue, key=0, style=bold];
m10_476 -> m10_13  [key=2, style=dotted];
m10_476 -> m10_477  [key=0, style=solid];
m10_476 -> m10_482  [key=2, style=dotted];
m10_476 -> m10_483  [key=2, style=dotted];
m10_476 -> m10_478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_286 -> m10_17  [key=2, style=dotted];
m10_286 -> m10_287  [key=0, style=solid];
m10_1291 -> m10_1292  [key=0, style=solid];
m10_1292 -> m10_13  [key=2, style=dotted];
m10_1292 -> m10_14  [key=2, style=dotted];
m10_1292 -> m10_1293  [key=0, style=solid];
m10_1292 -> m10_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1293 -> m10_18  [key=2, style=dotted];
m10_1293 -> m10_1294  [key=0, style=solid];
m10_1293 -> m10_1295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1294 -> m10_1291  [color=blue, key=0, style=bold];
m10_191 -> m10_192  [key=0, style=solid];
m10_191 -> m10_191  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_508 -> m10_509  [key=0, style=solid];
m10_508 -> m10_510  [key=0, style=solid];
m10_509 -> m10_13  [key=2, style=dotted];
m10_509 -> m10_14  [key=2, style=dotted];
m10_509 -> m10_510  [key=0, style=solid];
m10_509 -> m10_511  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_510 -> m10_16  [key=2, style=dotted];
m10_510 -> m10_511  [key=0, style=solid];
m10_510 -> m10_138  [key=2, style=dotted];
m10_510 -> m10_502  [color=blue, key=0, style=bold];
m10_167 -> m10_168  [key=0, style=solid];
m10_169 -> m10_13  [key=2, style=dotted];
m10_169 -> m10_14  [key=2, style=dotted];
m10_169 -> m10_170  [key=0, style=solid];
m10_169 -> m10_171  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_169 -> m10_172  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_169 -> m10_173  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m10_169 -> m10_174  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_169 -> m10_175  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_169 -> m10_176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_169 -> m10_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_169 -> m10_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_169 -> m10_179  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m10_169 -> m10_180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_169 -> m10_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_169 -> m10_161  [key=2, style=dotted];
m10_169 -> m10_184  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m10_170 -> m10_15  [key=2, style=dotted];
m10_170 -> m10_171  [key=0, style=solid];
m10_170 -> m10_161  [key=2, style=dotted];
m10_170 -> m10_173  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m10_170 -> m10_179  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m10_170 -> m10_184  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m10_170 -> m10_189  [color=darkseagreen4, key=1, label=valueType, style=dashed];
m10_172 -> m10_15  [key=2, style=dotted];
m10_172 -> m10_173  [key=0, style=solid];
m10_172 -> m10_174  [key=0, style=solid];
m10_172 -> m10_193  [key=2, style=dotted];
m10_174 -> m10_15  [key=2, style=dotted];
m10_174 -> m10_175  [key=0, style=solid];
m10_174 -> m10_178  [color=darkseagreen4, key=1, label=createdType, style=dashed];
m10_176 -> m10_15  [key=2, style=dotted];
m10_176 -> m10_177  [key=0, style=solid];
m10_176 -> m10_183  [key=0, style=solid];
m10_178 -> m10_15  [key=2, style=dotted];
m10_178 -> m10_179  [key=0, style=solid];
m10_178 -> m10_198  [key=2, style=dotted];
m10_178 -> m10_181  [color=darkseagreen4, key=1, label=createExtensionDataDictionary, style=dashed];
m10_178 -> m10_208  [color=darkseagreen4, key=1, label=createExtensionDataDictionary, style=dashed];
m10_171 -> m10_17  [key=2, style=dotted];
m10_171 -> m10_172  [key=0, style=solid];
m10_173 -> m10_17  [key=2, style=dotted];
m10_173 -> m10_174  [key=0, style=solid];
m10_173 -> m10_175  [key=0, style=solid];
m10_173 -> m10_194  [key=2, style=dotted];
m10_173 -> m10_178  [color=darkseagreen4, key=1, label=createdType, style=dashed];
m10_175 -> m10_17  [key=2, style=dotted];
m10_175 -> m10_176  [key=0, style=solid];
m10_175 -> m10_195  [key=2, style=dotted];
m10_175 -> m10_181  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m10_175 -> m10_204  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m10_175 -> m10_187  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m10_175 -> m10_219  [color=darkseagreen4, key=1, label=getExtensionDataDictionary, style=dashed];
m10_177 -> m10_17  [key=2, style=dotted];
m10_177 -> m10_178  [key=0, style=solid];
m10_177 -> m10_196  [key=2, style=dotted];
m10_177 -> m10_197  [key=2, style=dotted];
m10_177 -> m10_181  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m10_177 -> m10_206  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m10_177 -> m10_209  [color=darkseagreen4, key=1, label=setExtensionDataDictionary, style=dashed];
m10_179 -> m10_17  [key=2, style=dotted];
m10_179 -> m10_180  [key=0, style=solid];
m10_179 -> m10_199  [key=2, style=dotted];
m10_180 -> m10_18  [key=2, style=dotted];
m10_180 -> m10_181  [key=0, style=solid];
m10_180 -> m10_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_180 -> m10_200  [key=2, style=dotted];
m10_180 -> m10_210  [color=darkseagreen4, key=1, label=setExtensionDataDictionaryValue, style=dashed];
m10_168 -> m10_169  [key=0, style=solid];
m10_168 -> m10_168  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_168 -> m10_160  [key=2, style=dotted];
m10_168 -> m10_170  [color=darkseagreen4, key=1, label=dictionaryType, style=dashed];
m10_181 -> m10_167  [color=blue, key=0, style=bold];
m10_181 -> m10_182  [key=0, style=solid];
m10_181 -> m10_204  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_181 -> m10_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_181 -> m10_210  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_250 -> m10_251  [key=0, style=solid];
m10_253 -> m10_13  [key=2, style=dotted];
m10_253 -> m10_254  [key=0, style=solid];
m10_253 -> m10_255  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_256  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_257  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_258  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_259  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_260  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_261  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_262  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_263  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_264  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_265  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_266  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_267  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_268  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_269  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_270  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_271  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_272  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_273  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_274  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_275  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_280  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_281  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_283  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_284  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_285  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_286  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_287  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_288  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_290  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_291  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_292  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_293  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_294  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_295  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_297  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_320  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_333  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_334  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_336  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_337  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_253 -> m10_154  [key=2, style=dotted];
m10_252 -> m10_14  [key=2, style=dotted];
m10_252 -> m10_253  [key=0, style=solid];
m10_254 -> m10_17  [key=2, style=dotted];
m10_254 -> m10_255  [key=0, style=solid];
m10_254 -> m10_252  [color=blue, key=0, style=bold];
m10_270 -> m10_17  [key=2, style=dotted];
m10_270 -> m10_271  [key=0, style=solid];
m10_270 -> m10_289  [key=0, style=solid];
m10_270 -> m10_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonPropertyCollection", style=dashed];
m10_270 -> m10_292  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_271 -> m10_17  [key=2, style=dotted];
m10_271 -> m10_272  [key=0, style=solid];
m10_271 -> m10_248  [key=2, style=dotted];
m10_271 -> m10_273  [color=darkseagreen4, key=1, label=constructors, style=dashed];
m10_272 -> m10_17  [key=2, style=dotted];
m10_272 -> m10_273  [key=0, style=solid];
m10_272 -> m10_274  [key=0, style=solid];
m10_274 -> m10_17  [key=2, style=dotted];
m10_274 -> m10_275  [key=0, style=solid];
m10_275 -> m10_17  [key=2, style=dotted];
m10_275 -> m10_276  [key=0, style=solid];
m10_275 -> m10_111  [color=blue, key=0, style=bold];
m10_289 -> m10_17  [key=2, style=dotted];
m10_289 -> m10_290  [key=0, style=solid];
m10_289 -> m10_291  [key=0, style=solid];
m10_290 -> m10_17  [key=2, style=dotted];
m10_290 -> m10_291  [key=0, style=solid];
m10_290 -> m10_295  [key=0, style=solid];
m10_291 -> m10_17  [key=2, style=dotted];
m10_291 -> m10_292  [key=0, style=solid];
m10_291 -> m10_296  [key=2, style=dotted];
m10_291 -> m10_294  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_293 -> m10_17  [key=2, style=dotted];
m10_293 -> m10_294  [key=0, style=solid];
m10_293 -> m10_295  [key=0, style=solid];
m10_294 -> m10_17  [key=2, style=dotted];
m10_294 -> m10_295  [key=0, style=solid];
m10_295 -> m10_17  [key=2, style=dotted];
m10_295 -> m10_296  [key=0, style=solid];
m10_295 -> m10_270  [color=blue, key=0, style=bold];
m10_319 -> m10_17  [key=2, style=dotted];
m10_319 -> m10_320  [key=0, style=solid];
m10_323 -> m10_17  [key=2, style=dotted];
m10_323 -> m10_324  [key=0, style=solid];
m10_323 -> m10_325  [key=2, style=dotted];
m10_324 -> m10_17  [key=2, style=dotted];
m10_324 -> m10_325  [key=0, style=solid];
m10_324 -> m10_322  [color=blue, key=0, style=bold];
m10_325 -> m10_17  [key=2, style=dotted];
m10_325 -> m10_326  [key=0, style=solid];
m10_327 -> m10_17  [key=2, style=dotted];
m10_327 -> m10_328  [key=0, style=solid];
m10_327 -> m10_198  [key=2, style=dotted];
m10_328 -> m10_17  [key=2, style=dotted];
m10_328 -> m10_329  [key=0, style=solid];
m10_328 -> m10_326  [color=blue, key=0, style=bold];
m10_329 -> m10_17  [key=2, style=dotted];
m10_329 -> m10_330  [key=0, style=solid];
m10_329 -> m10_106  [key=2, style=dotted];
m10_329 -> m10_331  [color=darkseagreen4, key=1, label=containerAttribute, style=dashed];
m10_331 -> m10_17  [key=2, style=dotted];
m10_331 -> m10_332  [key=0, style=solid];
m10_332 -> m10_17  [key=2, style=dotted];
m10_332 -> m10_333  [key=0, style=solid];
m10_332 -> m10_322  [key=2, style=dotted];
m10_333 -> m10_17  [key=2, style=dotted];
m10_333 -> m10_334  [key=0, style=solid];
m10_333 -> m10_339  [key=2, style=dotted];
m10_335 -> m10_17  [key=2, style=dotted];
m10_335 -> m10_336  [key=0, style=solid];
m10_335 -> m10_326  [key=2, style=dotted];
m10_336 -> m10_17  [key=2, style=dotted];
m10_336 -> m10_337  [key=0, style=solid];
m10_336 -> m10_112  [key=2, style=dotted];
m10_336 -> m10_341  [key=2, style=dotted];
m10_337 -> m10_17  [key=2, style=dotted];
m10_337 -> m10_338  [key=0, style=solid];
m10_337 -> m10_342  [key=2, style=dotted];
m10_340 -> m10_17  [key=2, style=dotted];
m10_340 -> m10_341  [key=0, style=solid];
m10_341 -> m10_17  [key=2, style=dotted];
m10_341 -> m10_342  [key=0, style=solid];
m10_343 -> m10_17  [key=2, style=dotted];
m10_343 -> m10_344  [key=0, style=solid];
m10_344 -> m10_17  [key=2, style=dotted];
m10_344 -> m10_345  [key=0, style=solid];
m10_345 -> m10_17  [key=2, style=dotted];
m10_345 -> m10_346  [key=0, style=solid];
m10_273 -> m10_274  [key=0, style=solid];
m10_273 -> m10_138  [key=2, style=dotted];
m10_273 -> m10_275  [key=0, style=solid];
m10_292 -> m10_293  [key=0, style=solid];
m10_292 -> m10_138  [key=2, style=dotted];
m10_292 -> m10_294  [key=0, style=solid];
m10_322 -> m10_323  [key=0, style=solid];
m10_322 -> m10_138  [key=2, style=dotted];
m10_326 -> m10_327  [key=0, style=solid];
m10_326 -> m10_138  [key=2, style=dotted];
m10_330 -> m10_331  [key=0, style=solid];
m10_330 -> m10_138  [key=2, style=dotted];
m10_330 -> m10_332  [key=0, style=solid];
m10_334 -> m10_335  [key=0, style=solid];
m10_334 -> m10_138  [key=2, style=dotted];
m10_334 -> m10_337  [key=0, style=solid];
m10_334 -> m10_340  [key=2, style=dotted];
m10_334 -> m10_112  [key=2, style=dotted];
m10_338 -> m10_339  [key=0, style=solid];
m10_338 -> m10_138  [key=2, style=dotted];
m10_338 -> m10_103  [color=blue, key=0, style=bold];
m10_342 -> m10_343  [key=0, style=solid];
m10_342 -> m10_138  [key=2, style=dotted];
m10_342 -> m10_348  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_342 -> m10_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_342 -> m10_352  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_342 -> m10_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_342 -> m10_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_342 -> m10_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_251 -> m10_252  [key=0, style=solid];
m10_251 -> m10_251  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m10_346 -> m10_250  [color=blue, key=0, style=bold];
m10_346 -> m10_347  [key=0, style=solid];
m10_535 -> m10_536  [key=0, style=solid];
m10_535 -> m10_529  [color=blue, key=0, style=bold];
m10_538 -> m10_13  [key=2, style=dotted];
m10_538 -> m10_14  [key=2, style=dotted];
m10_538 -> m10_539  [key=0, style=solid];
m10_538 -> m10_541  [key=2, style=dotted];
m10_538 -> m10_543  [color=darkseagreen4, key=1, label=members, style=dashed];
m10_538 -> m10_23  [key=2, style=dotted];
m10_539 -> m10_18  [key=2, style=dotted];
m10_539 -> m10_540  [key=0, style=solid];
m10_539 -> m10_542  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_539 -> m10_541  [key=0, style=solid];
m10_536 -> m10_537  [key=0, style=solid];
m10_536 -> m10_536  [color=darkorchid, key=3, label="Local variable string helloWorld", style=bold];
m10_540 -> m10_535  [color=blue, key=0, style=bold];
m10_540 -> m10_551  [key=0, style=solid];
m10_540 -> m10_213  [key=2, style=dotted];
m10_195 -> m10_196  [key=0, style=solid];
m10_468 -> m10_469  [key=0, style=solid];
m10_468 -> m10_103  [key=2, style=dotted];
m10_470 -> m10_13  [key=2, style=dotted];
m10_470 -> m10_471  [key=0, style=solid];
m10_470 -> m10_482  [key=2, style=dotted];
m10_470 -> m10_483  [key=2, style=dotted];
m10_470 -> m10_472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_470 -> m10_466  [color=blue, key=0, style=bold];
m10_478 -> m10_17  [key=2, style=dotted];
m10_478 -> m10_479  [key=0, style=solid];
m10_478 -> m10_480  [key=0, style=solid];
m10_478 -> m10_498  [key=2, style=dotted];
m10_469 -> m10_470  [key=0, style=solid];
m10_469 -> m10_481  [key=2, style=dotted];
m10_469 -> m10_475  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_479 -> m10_479  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_479 -> m10_474  [key=0, style=solid];
m10_479 -> m10_497  [key=0, style=solid];
m10_479 -> m10_460  [key=2, style=dotted];
m10_480 -> m10_468  [color=blue, key=0, style=bold];
m10_480 -> m10_481  [key=0, style=solid];
m10_480 -> m10_499  [key=2, style=dotted];
m10_480 -> m10_488  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_480 -> m10_490  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_480 -> m10_492  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_480 -> m10_494  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_529 -> m10_532  [key=0, style=solid];
m10_529 -> m10_533  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_529 -> m10_534  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_529 -> m10_18  [key=2, style=dotted];
m10_529 -> m10_530  [key=0, style=solid];
m10_529 -> m10_531  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_532 -> m10_533  [key=0, style=solid];
m10_532 -> m10_534  [key=0, style=solid];
m10_532 -> m10_536  [key=2, style=dotted];
m10_532 -> m10_537  [key=2, style=dotted];
m10_533 -> m10_535  [key=0, style=solid];
m10_533 -> m10_531  [color=blue, key=0, style=bold];
m10_534 -> m10_535  [key=0, style=solid];
m10_534 -> m10_440  [key=2, style=dotted];
m10_1272 -> m10_1273  [key=0, style=solid];
m10_1274 -> m10_13  [key=2, style=dotted];
m10_1274 -> m10_14  [key=2, style=dotted];
m10_1274 -> m10_1275  [key=0, style=solid];
m10_1274 -> m10_1276  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1274 -> m10_1277  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1274 -> m10_1278  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1274 -> m10_1279  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1274 -> m10_1282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1275 -> m10_15  [key=2, style=dotted];
m10_1275 -> m10_16  [key=2, style=dotted];
m10_1275 -> m10_1276  [key=0, style=solid];
m10_1277 -> m10_15  [key=2, style=dotted];
m10_1277 -> m10_16  [key=2, style=dotted];
m10_1277 -> m10_1278  [key=0, style=solid];
m10_1276 -> m10_17  [key=2, style=dotted];
m10_1276 -> m10_1277  [key=0, style=solid];
m10_1278 -> m10_17  [key=2, style=dotted];
m10_1278 -> m10_1279  [key=0, style=solid];
m10_1279 -> m10_18  [key=2, style=dotted];
m10_1279 -> m10_1280  [key=0, style=solid];
m10_1279 -> m10_1281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1273 -> m10_1274  [key=0, style=solid];
m10_1273 -> m10_1273  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1280 -> m10_1272  [color=blue, key=0, style=bold];
m10_482 -> m10_483  [key=0, style=solid];
m10_482 -> m10_484  [key=0, style=solid];
m10_54 -> m10_18  [key=2, style=dotted];
m10_54 -> m10_55  [key=0, style=solid];
m10_54 -> m10_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_108 -> m10_238  [key=0, style=solid];
m10_108 -> m10_244  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_108 -> m10_245  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_108 -> m10_109  [key=0, style=solid];
m10_108 -> m10_114  [key=2, style=dotted];
m10_108 -> m10_115  [key=2, style=dotted];
m10_238 -> m10_239  [key=0, style=solid];
m10_238 -> m10_248  [key=2, style=dotted];
m10_238 -> m10_49  [key=2, style=dotted];
m10_238 -> m10_249  [key=2, style=dotted];
m10_238 -> m10_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_238 -> m10_240  [color=darkseagreen4, key=1, label=en, style=dashed];
m10_238 -> m10_241  [color=darkseagreen4, key=1, label=en, style=dashed];
m10_238 -> m10_17  [key=2, style=dotted];
m10_244 -> m10_245  [key=0, style=solid];
m10_244 -> m10_246  [key=0, style=solid];
m10_244 -> m10_15  [key=2, style=dotted];
m10_245 -> m10_247  [key=0, style=solid];
m10_245 -> m10_251  [key=2, style=dotted];
m10_245 -> m10_17  [key=2, style=dotted];
m10_245 -> m10_246  [key=0, style=solid];
m10_239 -> m10_240  [key=0, style=solid];
m10_239 -> m10_244  [key=0, style=solid];
m10_239 -> m10_250  [key=2, style=dotted];
m10_239 -> m10_17  [key=2, style=dotted];
m10_240 -> m10_241  [key=0, style=solid];
m10_240 -> m10_243  [color=darkseagreen4, key=1, label=conInfo, style=dashed];
m10_240 -> m10_15  [key=2, style=dotted];
m10_241 -> m10_242  [key=0, style=solid];
m10_241 -> m10_243  [key=0, style=solid];
m10_241 -> m10_250  [key=2, style=dotted];
m10_241 -> m10_17  [key=2, style=dotted];
m10_243 -> m10_247  [key=0, style=solid];
m10_243 -> m10_17  [key=2, style=dotted];
m10_243 -> m10_244  [key=0, style=solid];
m10_242 -> m10_247  [key=0, style=solid];
m10_242 -> m10_156  [key=2, style=dotted];
m10_242 -> m10_17  [key=2, style=dotted];
m10_242 -> m10_243  [key=0, style=solid];
m10_246 -> m10_247  [key=0, style=solid];
m10_246 -> m10_17  [key=2, style=dotted];
m10_247 -> m10_108  [color=blue, key=0, style=bold];
m10_247 -> m10_17  [key=2, style=dotted];
m10_247 -> m10_248  [key=0, style=solid];
m10_953 -> m10_954  [key=0, style=solid];
m10_955 -> m10_13  [key=2, style=dotted];
m10_955 -> m10_14  [key=2, style=dotted];
m10_955 -> m10_956  [key=0, style=solid];
m10_955 -> m10_957  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_955 -> m10_958  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_955 -> m10_959  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_955 -> m10_960  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_955 -> m10_961  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_955 -> m10_962  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_955 -> m10_965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_956 -> m10_15  [key=2, style=dotted];
m10_956 -> m10_957  [key=0, style=solid];
m10_958 -> m10_15  [key=2, style=dotted];
m10_958 -> m10_959  [key=0, style=solid];
m10_960 -> m10_15  [key=2, style=dotted];
m10_960 -> m10_961  [key=0, style=solid];
m10_957 -> m10_17  [key=2, style=dotted];
m10_957 -> m10_958  [key=0, style=solid];
m10_959 -> m10_17  [key=2, style=dotted];
m10_959 -> m10_960  [key=0, style=solid];
m10_961 -> m10_17  [key=2, style=dotted];
m10_961 -> m10_962  [key=0, style=solid];
m10_962 -> m10_18  [key=2, style=dotted];
m10_962 -> m10_963  [key=0, style=solid];
m10_962 -> m10_964  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_954 -> m10_955  [key=0, style=solid];
m10_954 -> m10_954  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_963 -> m10_953  [color=blue, key=0, style=bold];
m10_1476 -> m10_1477  [key=0, style=solid];
m10_1478 -> m10_13  [key=2, style=dotted];
m10_1478 -> m10_14  [key=2, style=dotted];
m10_1478 -> m10_1479  [key=0, style=solid];
m10_1478 -> m10_1480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1478 -> m10_1481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1478 -> m10_1482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1479 -> m10_15  [key=2, style=dotted];
m10_1479 -> m10_16  [key=2, style=dotted];
m10_1479 -> m10_1480  [key=0, style=solid];
m10_1481 -> m10_15  [key=2, style=dotted];
m10_1481 -> m10_16  [key=2, style=dotted];
m10_1481 -> m10_1482  [key=0, style=solid];
m10_1480 -> m10_17  [key=2, style=dotted];
m10_1480 -> m10_1481  [key=0, style=solid];
m10_1482 -> m10_17  [key=2, style=dotted];
m10_1482 -> m10_1483  [key=0, style=solid];
m10_1477 -> m10_1478  [key=0, style=solid];
m10_1477 -> m10_1477  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1483 -> m10_1476  [color=blue, key=0, style=bold];
m10_967 -> m10_968  [key=0, style=solid];
m10_969 -> m10_13  [key=2, style=dotted];
m10_969 -> m10_970  [key=0, style=solid];
m10_968 -> m10_14  [key=2, style=dotted];
m10_968 -> m10_969  [key=0, style=solid];
m10_973 -> m10_17  [key=2, style=dotted];
m10_973 -> m10_974  [key=0, style=solid];
m10_970 -> m10_971  [key=0, style=solid];
m10_970 -> m10_975  [key=2, style=dotted];
m10_970 -> m10_972  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_972 -> m10_973  [key=0, style=solid];
m10_972 -> m10_977  [key=2, style=dotted];
m10_971 -> m10_972  [key=0, style=solid];
m10_971 -> m10_976  [key=2, style=dotted];
m10_974 -> m10_967  [color=blue, key=0, style=bold];
m10_483 -> m10_497  [key=0, style=solid];
m10_483 -> m10_64  [key=2, style=dotted];
m10_389 -> m10_390  [key=0, style=solid];
m10_1708 -> m10_1709  [key=0, style=solid];
m10_57 -> m10_58  [key=0, style=solid];
m10_57 -> m10_15  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_13  [key=2, style=dotted];
m10_61 -> m10_14  [key=2, style=dotted];
m10_61 -> m10_63  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_64  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_65  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_66  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_67  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_68  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_69  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_70  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_71  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_72  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_73  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_74  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_75  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_76  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_61 -> m10_77  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_60  [key=2, style=dotted];
m10_58 -> m10_56  [color=blue, key=0, style=bold];
m10_59 -> m10_57  [color=blue, key=0, style=bold];
m10_59 -> m10_60  [key=0, style=solid];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_60  [key=2, style=dotted];
m10_62 -> m10_15  [key=2, style=dotted];
m10_62 -> m10_16  [key=2, style=dotted];
m10_63 -> m10_61  [color=blue, key=0, style=bold];
m10_63 -> m10_17  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_117 -> m10_118  [key=0, style=solid];
m10_117 -> m10_119  [key=2, style=dotted];
m10_118 -> m10_116  [color=blue, key=0, style=bold];
m10_118 -> m10_119  [key=0, style=solid];
m10_118 -> m10_120  [color=darkseagreen4, key=1, label=ms, style=dashed];
m10_118 -> m10_129  [key=2, style=dotted];
m10_118 -> m10_122  [color=darkseagreen4, key=1, label=ms, style=dashed];
m10_127 -> m10_128  [key=0, style=solid];
m10_127 -> m10_129  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_127 -> m10_130  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_127 -> m10_16  [key=2, style=dotted];
m10_136 -> m10_137  [key=0, style=solid];
m10_136 -> m10_140  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_136 -> m10_142  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_136 -> m10_143  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_136 -> m10_144  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_136 -> m10_151  [color=darkseagreen4, key=1, label="?", style=dashed];
m10_136 -> m10_135  [key=0, style=solid];
m10_136 -> m10_139  [key=2, style=dotted];
m10_128 -> m10_129  [key=0, style=solid];
m10_128 -> m10_50  [key=2, style=dotted];
m10_128 -> m10_130  [color=darkseagreen4, key=1, label=m, style=dashed];
m10_128 -> m10_131  [color=darkseagreen4, key=1, label=m, style=dashed];
m10_128 -> m10_117  [color=blue, key=0, style=bold];
m10_130 -> m10_131  [key=0, style=solid];
m10_130 -> m10_135  [key=2, style=dotted];
m10_130 -> m10_134  [key=2, style=dotted];
m10_132 -> m10_127  [color=blue, key=0, style=bold];
m10_132 -> m10_133  [key=0, style=solid];
m10_137 -> m10_138  [key=0, style=solid];
m10_137 -> m10_153  [key=2, style=dotted];
m10_137 -> m10_132  [color=blue, key=0, style=bold];
m10_140 -> m10_141  [key=0, style=solid];
m10_140 -> m10_142  [key=0, style=solid];
m10_140 -> m10_154  [key=2, style=dotted];
m10_142 -> m10_143  [key=0, style=solid];
m10_142 -> m10_144  [key=0, style=solid];
m10_142 -> m10_155  [key=2, style=dotted];
m10_142 -> m10_13  [key=2, style=dotted];
m10_142 -> m10_116  [key=2, style=dotted];
m10_142 -> m10_157  [key=2, style=dotted];
m10_142 -> m10_158  [key=2, style=dotted];
m10_142 -> m10_145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_142 -> m10_146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_142 -> m10_147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_142 -> m10_148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_142 -> m10_149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_142 -> m10_150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_142 -> m10_151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_142 -> m10_152  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_142 -> m10_153  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_142 -> m10_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_143 -> m10_152  [key=0, style=solid];
m10_143 -> m10_156  [key=2, style=dotted];
m10_143 -> m10_157  [key=2, style=dotted];
m10_143 -> m10_158  [key=2, style=dotted];
m10_143 -> m10_16  [key=2, style=dotted];
m10_143 -> m10_144  [key=0, style=solid];
m10_143 -> m10_138  [key=2, style=dotted];
m10_144 -> m10_145  [key=0, style=solid];
m10_144 -> m10_159  [key=2, style=dotted];
m10_144 -> m10_146  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_144 -> m10_16  [key=2, style=dotted];
m10_144 -> m10_138  [key=2, style=dotted];
m10_151 -> m10_152  [key=0, style=solid];
m10_151 -> m10_156  [key=2, style=dotted];
m10_151 -> m10_157  [key=2, style=dotted];
m10_151 -> m10_158  [key=2, style=dotted];
m10_151 -> m10_17  [key=2, style=dotted];
m10_138 -> m10_139  [key=0, style=solid];
m10_138 -> m10_140  [key=0, style=solid];
m10_139 -> m10_152  [key=0, style=solid];
m10_141 -> m10_152  [key=0, style=solid];
m10_141 -> m10_142  [key=0, style=solid];
m10_141 -> m10_141  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_145 -> m10_146  [key=0, style=solid];
m10_145 -> m10_16  [key=2, style=dotted];
m10_145 -> m10_138  [key=2, style=dotted];
m10_146 -> m10_147  [key=0, style=solid];
m10_146 -> m10_151  [key=0, style=solid];
m10_146 -> m10_160  [key=2, style=dotted];
m10_146 -> m10_148  [color=darkseagreen4, key=1, label=dictionaryType, style=dashed];
m10_146 -> m10_17  [key=2, style=dotted];
m10_147 -> m10_148  [key=0, style=solid];
m10_147 -> m10_161  [key=2, style=dotted];
m10_147 -> m10_149  [color=darkseagreen4, key=1, label=keyType, style=dashed];
m10_147 -> m10_17  [key=2, style=dotted];
m10_148 -> m10_149  [key=0, style=solid];
m10_148 -> m10_161  [key=2, style=dotted];
m10_148 -> m10_16  [key=2, style=dotted];
m10_148 -> m10_138  [key=2, style=dotted];
m10_149 -> m10_150  [key=0, style=solid];
m10_149 -> m10_151  [key=0, style=solid];
m10_149 -> m10_162  [key=2, style=dotted];
m10_149 -> m10_17  [key=2, style=dotted];
m10_150 -> m10_152  [key=0, style=solid];
m10_150 -> m10_16  [key=2, style=dotted];
m10_150 -> m10_151  [key=0, style=solid];
m10_150 -> m10_138  [key=2, style=dotted];
m10_152 -> m10_136  [color=blue, key=0, style=bold];
m10_152 -> m10_16  [key=2, style=dotted];
m10_152 -> m10_153  [key=0, style=solid];
m10_152 -> m10_138  [key=2, style=dotted];
m10_207 -> m10_211  [key=0, style=solid];
m10_207 -> m10_213  [key=2, style=dotted];
m10_207 -> m10_214  [key=2, style=dotted];
m10_207 -> m10_17  [key=2, style=dotted];
m10_207 -> m10_208  [key=0, style=solid];
m10_204 -> m10_205  [key=0, style=solid];
m10_204 -> m10_212  [key=2, style=dotted];
m10_204 -> m10_210  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m10_204 -> m10_17  [key=2, style=dotted];
m10_219 -> m10_220  [key=0, style=solid];
m10_219 -> m10_212  [key=2, style=dotted];
m10_219 -> m10_222  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m10_219 -> m10_15  [key=2, style=dotted];
m10_206 -> m10_207  [key=0, style=solid];
m10_206 -> m10_208  [key=0, style=solid];
m10_206 -> m10_17  [key=2, style=dotted];
m10_209 -> m10_210  [key=0, style=solid];
m10_209 -> m10_216  [key=2, style=dotted];
m10_209 -> m10_15  [key=2, style=dotted];
m10_208 -> m10_209  [key=0, style=solid];
m10_208 -> m10_215  [key=2, style=dotted];
m10_208 -> m10_210  [color=darkseagreen4, key=1, label=dictionary, style=dashed];
m10_208 -> m10_17  [key=2, style=dotted];
m10_210 -> m10_211  [key=0, style=solid];
m10_210 -> m10_217  [key=2, style=dotted];
m10_210 -> m10_17  [key=2, style=dotted];
m10_222 -> m10_223  [key=0, style=solid];
m10_222 -> m10_224  [key=2, style=dotted];
m10_222 -> m10_17  [key=2, style=dotted];
m10_203 -> m10_204  [key=0, style=solid];
m10_203 -> m10_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_203 -> m10_210  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_203 -> m10_17  [key=2, style=dotted];
m10_205 -> m10_206  [key=0, style=solid];
m10_205 -> m10_210  [key=0, style=solid];
m10_205 -> m10_15  [key=2, style=dotted];
m10_211 -> m10_203  [color=blue, key=0, style=bold];
m10_211 -> m10_17  [key=2, style=dotted];
m10_211 -> m10_212  [key=0, style=solid];
m10_218 -> m10_219  [key=0, style=solid];
m10_218 -> m10_17  [key=2, style=dotted];
m10_220 -> m10_221  [key=0, style=solid];
m10_220 -> m10_222  [key=0, style=solid];
m10_220 -> m10_17  [key=2, style=dotted];
m10_221 -> m10_223  [key=0, style=solid];
m10_221 -> m10_17  [key=2, style=dotted];
m10_221 -> m10_222  [key=0, style=solid];
m10_223 -> m10_218  [color=blue, key=0, style=bold];
m10_223 -> m10_17  [key=2, style=dotted];
m10_223 -> m10_224  [key=0, style=solid];
m10_442 -> m10_443  [key=0, style=solid];
m10_442 -> m10_119  [key=2, style=dotted];
m10_442 -> m10_448  [color=darkseagreen4, key=1, label=total, style=dashed];
m10_441 -> m10_442  [key=0, style=solid];
m10_441 -> m10_445  [key=0, style=solid];
m10_443 -> m10_441  [color=blue, key=0, style=bold];
m10_443 -> m10_18  [key=2, style=dotted];
m10_443 -> m10_444  [key=0, style=solid];
m10_443 -> m10_447  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_557 -> m10_558  [key=0, style=solid];
m10_558 -> m10_559  [key=0, style=solid];
m10_558 -> m10_138  [key=2, style=dotted];
m10_559 -> m10_557  [color=blue, key=0, style=bold];
m10_20 -> m10_21  [color=green, key=0, style=solid];
m10_20 -> m10_15  [color=green, key=2, style=dotted];
m10_20 -> m10_478  [key=0, style=solid];
m10_20 -> m10_479  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_20 -> m10_480  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_20 -> m10_483  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_20 -> m10_485  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_20 -> m10_487  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_20 -> m10_489  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_20 -> m10_491  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_20 -> m10_493  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_20 -> m10_495  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_20 -> m10_496  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_351 -> m10_13  [key=2, style=dotted];
m10_351 -> m10_352  [key=0, style=solid];
m10_351 -> m10_353  [key=0, style=solid];
m10_448 -> m10_13  [key=2, style=dotted];
m10_448 -> m10_14  [key=2, style=dotted];
m10_448 -> m10_449  [key=0, style=solid];
m10_448 -> m10_446  [key=2, style=dotted];
m10_448 -> m10_457  [key=0, style=solid];
m10_465 -> m10_13  [key=2, style=dotted];
m10_465 -> m10_14  [key=2, style=dotted];
m10_465 -> m10_466  [key=0, style=solid];
m10_465 -> m10_446  [key=2, style=dotted];
m10_165 -> m10_15  [key=2, style=dotted];
m10_165 -> m10_165  [key=0, style=solid];
m10_165 -> m10_166  [key=0, style=solid];
m10_165 -> m10_190  [key=0, style=solid];
m10_183 -> m10_15  [key=2, style=dotted];
m10_183 -> m10_184  [key=0, style=solid];
m10_183 -> m10_189  [key=0, style=solid];
m10_752 -> m10_15  [key=2, style=dotted];
m10_752 -> m10_753  [key=0, style=solid];
m10_787 -> m10_15  [key=2, style=dotted];
m10_787 -> m10_788  [key=0, style=solid];
m10_790 -> m10_15  [key=2, style=dotted];
m10_790 -> m10_791  [key=0, style=solid];
m10_965 -> m10_15  [key=2, style=dotted];
m10_965 -> m10_966  [key=0, style=solid];
m10_1044 -> m10_15  [key=2, style=dotted];
m10_1044 -> m10_1045  [key=0, style=solid];
m10_1289 -> m10_15  [key=2, style=dotted];
m10_1289 -> m10_1290  [key=0, style=solid];
m10_1296 -> m10_15  [key=2, style=dotted];
m10_1296 -> m10_1297  [key=0, style=solid];
m10_1303 -> m10_15  [key=2, style=dotted];
m10_1303 -> m10_1304  [key=0, style=solid];
m10_1310 -> m10_15  [key=2, style=dotted];
m10_1310 -> m10_1311  [key=0, style=solid];
m10_1317 -> m10_15  [key=2, style=dotted];
m10_1317 -> m10_1318  [key=0, style=solid];
m10_1450 -> m10_15  [key=2, style=dotted];
m10_1450 -> m10_1451  [key=0, style=solid];
m10_1458 -> m10_15  [key=2, style=dotted];
m10_1458 -> m10_1459  [key=0, style=solid];
m10_1489 -> m10_15  [key=2, style=dotted];
m10_1489 -> m10_1490  [key=0, style=solid];
m10_1506 -> m10_15  [key=2, style=dotted];
m10_1506 -> m10_16  [key=2, style=dotted];
m10_1506 -> m10_1507  [key=0, style=solid];
m10_1670 -> m10_15  [key=2, style=dotted];
m10_1670 -> m10_1671  [key=0, style=solid];
m10_1765 -> m10_15  [key=2, style=dotted];
m10_1765 -> m10_16  [key=2, style=dotted];
m10_1765 -> m10_1766  [key=0, style=solid];
m10_1797 -> m10_15  [key=2, style=dotted];
m10_1797 -> m10_16  [key=2, style=dotted];
m10_1797 -> m10_1798  [key=0, style=solid];
m10_1800 -> m10_15  [key=2, style=dotted];
m10_1800 -> m10_16  [key=2, style=dotted];
m10_1800 -> m10_1801  [key=0, style=solid];
m10_1922 -> m10_15  [key=2, style=dotted];
m10_1922 -> m10_1923  [key=0, style=solid];
m10_1925 -> m10_15  [key=2, style=dotted];
m10_1925 -> m10_1926  [key=0, style=solid];
m10_1928 -> m10_15  [key=2, style=dotted];
m10_1928 -> m10_1929  [key=0, style=solid];
m10_1931 -> m10_15  [key=2, style=dotted];
m10_1931 -> m10_1932  [key=0, style=solid];
m10_1934 -> m10_15  [key=2, style=dotted];
m10_1934 -> m10_1935  [key=0, style=solid];
m10_1937 -> m10_15  [key=2, style=dotted];
m10_1937 -> m10_1938  [key=0, style=solid];
m10_350 -> m10_351  [key=0, style=solid];
m10_350 -> m10_105  [key=2, style=dotted];
m10_352 -> m10_350  [color=blue, key=0, style=bold];
m10_352 -> m10_353  [key=0, style=solid];
m10_352 -> m10_105  [key=2, style=dotted];
m10_358 -> m10_359  [key=0, style=solid];
m10_358 -> m10_138  [key=2, style=dotted];
m10_358 -> m10_105  [key=2, style=dotted];
m10_447 -> m10_448  [key=0, style=solid];
m10_447 -> m10_108  [key=2, style=dotted];
m10_447 -> m10_449  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m10_447 -> m10_456  [color=darkseagreen4, key=1, label=overrideConstructor, style=dashed];
m10_449 -> m10_450  [key=0, style=solid];
m10_449 -> m10_451  [key=2, style=dotted];
m10_449 -> m10_269  [key=2, style=dotted];
m10_449 -> m10_453  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_466 -> m10_467  [key=0, style=solid];
m10_466 -> m10_451  [key=2, style=dotted];
m10_543 -> m10_544  [key=0, style=solid];
m10_543 -> m10_534  [key=2, style=dotted];
m10_543 -> m10_549  [key=0, style=solid];
m10_711 -> m10_712  [key=0, style=solid];
m10_711 -> m10_451  [key=2, style=dotted];
m10_711 -> m10_442  [color=darkseagreen4, key=1, label=namingStrategy, style=dashed];
m10_714 -> m10_715  [key=0, style=solid];
m10_714 -> m10_451  [key=2, style=dotted];
m10_717 -> m10_718  [key=0, style=solid];
m10_717 -> m10_451  [key=2, style=dotted];
m10_720 -> m10_721  [key=0, style=solid];
m10_720 -> m10_451  [key=2, style=dotted];
m10_723 -> m10_724  [key=0, style=solid];
m10_723 -> m10_451  [key=2, style=dotted];
m10_749 -> m10_750  [key=0, style=solid];
m10_749 -> m10_747  [key=2, style=dotted];
m10_755 -> m10_756  [key=0, style=solid];
m10_755 -> m10_747  [key=2, style=dotted];
m10_1061 -> m10_1062  [key=0, style=solid];
m10_1061 -> m10_975  [key=2, style=dotted];
m10_1074 -> m10_1075  [key=0, style=solid];
m10_1074 -> m10_747  [key=2, style=dotted];
m10_1081 -> m10_1082  [key=0, style=solid];
m10_1081 -> m10_975  [key=2, style=dotted];
m10_1088 -> m10_1089  [key=0, style=solid];
m10_1088 -> m10_1068  [key=2, style=dotted];
m10_1102 -> m10_1103  [key=0, style=solid];
m10_1102 -> m10_975  [key=2, style=dotted];
m10_1109 -> m10_1110  [key=0, style=solid];
m10_1109 -> m10_975  [key=2, style=dotted];
m10_1180 -> m10_1181  [key=0, style=solid];
m10_1180 -> m10_1068  [key=2, style=dotted];
m10_1282 -> m10_1283  [key=0, style=solid];
m10_1282 -> m10_451  [key=2, style=dotted];
m10_1709 -> m10_1710  [key=0, style=solid];
m10_1709 -> m10_138  [key=2, style=dotted];
m10_56 -> m10_57  [key=0, style=solid];
m10_164 -> m10_165  [key=0, style=solid];
m10_164 -> m10_166  [key=0, style=solid];
m10_166 -> m10_164  [color=blue, key=0, style=bold];
m10_166 -> m10_167  [key=0, style=solid];
m10_166 -> m10_192  [key=2, style=dotted];
m10_166 -> m10_168  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_166 -> m10_172  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_166 -> m10_174  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_166 -> m10_179  [color=darkseagreen4, key=1, label=t, style=dashed];
m10_182 -> m10_183  [key=0, style=solid];
m10_184 -> m10_182  [color=blue, key=0, style=bold];
m10_184 -> m10_185  [key=0, style=solid];
m10_184 -> m10_194  [key=2, style=dotted];
m10_751 -> m10_752  [key=0, style=solid];
m10_753 -> m10_751  [color=blue, key=0, style=bold];
m10_786 -> m10_787  [key=0, style=solid];
m10_788 -> m10_786  [color=blue, key=0, style=bold];
m10_789 -> m10_790  [key=0, style=solid];
m10_791 -> m10_789  [color=blue, key=0, style=bold];
m10_964 -> m10_965  [key=0, style=solid];
m10_966 -> m10_964  [color=blue, key=0, style=bold];
m10_1043 -> m10_1044  [key=0, style=solid];
m10_1045 -> m10_1043  [color=blue, key=0, style=bold];
m10_1288 -> m10_1289  [key=0, style=solid];
m10_1290 -> m10_1288  [color=blue, key=0, style=bold];
m10_1295 -> m10_1296  [key=0, style=solid];
m10_1297 -> m10_1295  [color=blue, key=0, style=bold];
m10_1302 -> m10_1303  [key=0, style=solid];
m10_1304 -> m10_1302  [color=blue, key=0, style=bold];
m10_1309 -> m10_1310  [key=0, style=solid];
m10_1311 -> m10_1309  [color=blue, key=0, style=bold];
m10_1316 -> m10_1317  [key=0, style=solid];
m10_1318 -> m10_1316  [color=blue, key=0, style=bold];
m10_1449 -> m10_1450  [key=0, style=solid];
m10_1451 -> m10_1449  [color=blue, key=0, style=bold];
m10_1457 -> m10_1458  [key=0, style=solid];
m10_1459 -> m10_1457  [color=blue, key=0, style=bold];
m10_1488 -> m10_1489  [key=0, style=solid];
m10_1490 -> m10_1488  [color=blue, key=0, style=bold];
m10_1505 -> m10_1506  [key=0, style=solid];
m10_1507 -> m10_1505  [color=blue, key=0, style=bold];
m10_1669 -> m10_1670  [key=0, style=solid];
m10_1671 -> m10_1669  [color=blue, key=0, style=bold];
m10_1764 -> m10_1765  [key=0, style=solid];
m10_1766 -> m10_1764  [color=blue, key=0, style=bold];
m10_1796 -> m10_1797  [key=0, style=solid];
m10_1798 -> m10_1796  [color=blue, key=0, style=bold];
m10_1799 -> m10_1800  [key=0, style=solid];
m10_1801 -> m10_1799  [color=blue, key=0, style=bold];
m10_1921 -> m10_1922  [key=0, style=solid];
m10_1923 -> m10_1921  [color=blue, key=0, style=bold];
m10_1924 -> m10_1925  [key=0, style=solid];
m10_1926 -> m10_1924  [color=blue, key=0, style=bold];
m10_1927 -> m10_1928  [key=0, style=solid];
m10_1929 -> m10_1927  [color=blue, key=0, style=bold];
m10_1930 -> m10_1931  [key=0, style=solid];
m10_1932 -> m10_1930  [color=blue, key=0, style=bold];
m10_1933 -> m10_1934  [key=0, style=solid];
m10_1935 -> m10_1933  [color=blue, key=0, style=bold];
m10_1936 -> m10_1937  [key=0, style=solid];
m10_1938 -> m10_1936  [color=blue, key=0, style=bold];
m10_357 -> m10_358  [key=0, style=solid];
m10_357 -> m10_359  [key=0, style=solid];
m10_531 -> m10_532  [key=0, style=solid];
m10_542 -> m10_543  [key=0, style=solid];
m10_542 -> m10_286  [key=2, style=dotted];
m10_542 -> m10_548  [color=darkseagreen4, key=1, label=properties, style=dashed];
m10_542 -> m10_549  [color=darkseagreen4, key=1, label=properties, style=dashed];
m10_710 -> m10_711  [key=0, style=solid];
m10_710 -> m10_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m10_710 -> m10_231  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m10_710 -> m10_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver.EnumerableDictionaryWrapper<TEnumeratorKey, TEnumeratorValue>", style=dashed];
m10_713 -> m10_714  [key=0, style=solid];
m10_713 -> m10_682  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m10_716 -> m10_717  [key=0, style=solid];
m10_719 -> m10_720  [key=0, style=solid];
m10_722 -> m10_723  [key=0, style=solid];
m10_748 -> m10_749  [key=0, style=solid];
m10_754 -> m10_755  [key=0, style=solid];
m10_1060 -> m10_1061  [key=0, style=solid];
m10_1073 -> m10_1074  [key=0, style=solid];
m10_1080 -> m10_1081  [key=0, style=solid];
m10_1087 -> m10_1088  [key=0, style=solid];
m10_1101 -> m10_1102  [key=0, style=solid];
m10_1108 -> m10_1109  [key=0, style=solid];
m10_1179 -> m10_1180  [key=0, style=solid];
m10_1281 -> m10_1282  [key=0, style=solid];
m10_359 -> m10_357  [color=blue, key=0, style=bold];
m10_359 -> m10_342  [color=blue, key=0, style=bold];
m10_450 -> m10_447  [color=blue, key=0, style=bold];
m10_450 -> m10_451  [key=0, style=solid];
m10_450 -> m10_194  [key=2, style=dotted];
m10_450 -> m10_453  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m10_450 -> m10_455  [color=darkseagreen4, key=1, label=expectedParameterType, style=dashed];
m10_467 -> m10_464  [color=blue, key=0, style=bold];
m10_467 -> m10_468  [key=0, style=solid];
m10_467 -> m10_471  [key=2, style=dotted];
m10_467 -> m10_469  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_544 -> m10_542  [color=blue, key=0, style=bold];
m10_544 -> m10_545  [key=0, style=solid];
m10_544 -> m10_553  [key=2, style=dotted];
m10_544 -> m10_547  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_544 -> m10_548  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_712 -> m10_710  [color=blue, key=0, style=bold];
m10_712 -> m10_667  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m10_715 -> m10_713  [color=blue, key=0, style=bold];
m10_718 -> m10_716  [color=blue, key=0, style=bold];
m10_721 -> m10_719  [color=blue, key=0, style=bold];
m10_724 -> m10_722  [color=blue, key=0, style=bold];
m10_750 -> m10_748  [color=blue, key=0, style=bold];
m10_756 -> m10_754  [color=blue, key=0, style=bold];
m10_1062 -> m10_1060  [color=blue, key=0, style=bold];
m10_1075 -> m10_1073  [color=blue, key=0, style=bold];
m10_1082 -> m10_1080  [color=blue, key=0, style=bold];
m10_1089 -> m10_1087  [color=blue, key=0, style=bold];
m10_1103 -> m10_1101  [color=blue, key=0, style=bold];
m10_1110 -> m10_1108  [color=blue, key=0, style=bold];
m10_1181 -> m10_1179  [color=blue, key=0, style=bold];
m10_1283 -> m10_1281  [color=blue, key=0, style=bold];
m10_1710 -> m10_1708  [color=blue, key=0, style=bold];
m10_1531 -> m10_1532  [key=0, style=solid];
m10_1533 -> m10_13  [key=2, style=dotted];
m10_1533 -> m10_1534  [key=0, style=solid];
m10_1533 -> m10_116  [key=2, style=dotted];
m10_1533 -> m10_157  [key=2, style=dotted];
m10_1533 -> m10_158  [key=2, style=dotted];
m10_1533 -> m10_1535  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1537  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1541  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1544  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1546  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1547  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1548  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1549  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1550  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1551  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1552  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1554  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1555  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1559  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1560  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1561  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1562  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1563  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1564  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1565  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1566  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1567  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1533 -> m10_1568  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1534 -> m10_15  [key=2, style=dotted];
m10_1534 -> m10_16  [key=2, style=dotted];
m10_1534 -> m10_1535  [key=0, style=solid];
m10_1536 -> m10_15  [key=2, style=dotted];
m10_1536 -> m10_16  [key=2, style=dotted];
m10_1536 -> m10_1537  [key=0, style=solid];
m10_1538 -> m10_15  [key=2, style=dotted];
m10_1538 -> m10_16  [key=2, style=dotted];
m10_1538 -> m10_1539  [key=0, style=solid];
m10_1540 -> m10_15  [key=2, style=dotted];
m10_1540 -> m10_16  [key=2, style=dotted];
m10_1540 -> m10_1541  [key=0, style=solid];
m10_1543 -> m10_15  [key=2, style=dotted];
m10_1543 -> m10_16  [key=2, style=dotted];
m10_1543 -> m10_1544  [key=0, style=solid];
m10_1545 -> m10_15  [key=2, style=dotted];
m10_1545 -> m10_16  [key=2, style=dotted];
m10_1545 -> m10_1546  [key=0, style=solid];
m10_1548 -> m10_15  [key=2, style=dotted];
m10_1548 -> m10_16  [key=2, style=dotted];
m10_1548 -> m10_1549  [key=0, style=solid];
m10_1550 -> m10_15  [key=2, style=dotted];
m10_1550 -> m10_16  [key=2, style=dotted];
m10_1550 -> m10_1551  [key=0, style=solid];
m10_1552 -> m10_15  [key=2, style=dotted];
m10_1552 -> m10_16  [key=2, style=dotted];
m10_1552 -> m10_1553  [key=0, style=solid];
m10_1555 -> m10_15  [key=2, style=dotted];
m10_1555 -> m10_16  [key=2, style=dotted];
m10_1555 -> m10_1556  [key=0, style=solid];
m10_1557 -> m10_15  [key=2, style=dotted];
m10_1557 -> m10_16  [key=2, style=dotted];
m10_1557 -> m10_1558  [key=0, style=solid];
m10_1561 -> m10_15  [key=2, style=dotted];
m10_1561 -> m10_16  [key=2, style=dotted];
m10_1561 -> m10_1562  [key=0, style=solid];
m10_1563 -> m10_15  [key=2, style=dotted];
m10_1563 -> m10_16  [key=2, style=dotted];
m10_1563 -> m10_1564  [key=0, style=solid];
m10_1565 -> m10_15  [key=2, style=dotted];
m10_1565 -> m10_16  [key=2, style=dotted];
m10_1565 -> m10_1566  [key=0, style=solid];
m10_1567 -> m10_15  [key=2, style=dotted];
m10_1567 -> m10_16  [key=2, style=dotted];
m10_1567 -> m10_1568  [key=0, style=solid];
m10_1535 -> m10_17  [key=2, style=dotted];
m10_1535 -> m10_1536  [key=0, style=solid];
m10_1537 -> m10_17  [key=2, style=dotted];
m10_1537 -> m10_1538  [key=0, style=solid];
m10_1539 -> m10_17  [key=2, style=dotted];
m10_1539 -> m10_1540  [key=0, style=solid];
m10_1541 -> m10_17  [key=2, style=dotted];
m10_1541 -> m10_1542  [key=0, style=solid];
m10_1542 -> m10_17  [key=2, style=dotted];
m10_1542 -> m10_1543  [key=0, style=solid];
m10_1544 -> m10_17  [key=2, style=dotted];
m10_1544 -> m10_1545  [key=0, style=solid];
m10_1546 -> m10_17  [key=2, style=dotted];
m10_1546 -> m10_1547  [key=0, style=solid];
m10_1547 -> m10_17  [key=2, style=dotted];
m10_1547 -> m10_1548  [key=0, style=solid];
m10_1549 -> m10_17  [key=2, style=dotted];
m10_1549 -> m10_1550  [key=0, style=solid];
m10_1551 -> m10_17  [key=2, style=dotted];
m10_1551 -> m10_1552  [key=0, style=solid];
m10_1553 -> m10_17  [key=2, style=dotted];
m10_1553 -> m10_1554  [key=0, style=solid];
m10_1554 -> m10_17  [key=2, style=dotted];
m10_1554 -> m10_1555  [key=0, style=solid];
m10_1556 -> m10_17  [key=2, style=dotted];
m10_1556 -> m10_1557  [key=0, style=solid];
m10_1558 -> m10_17  [key=2, style=dotted];
m10_1558 -> m10_1559  [key=0, style=solid];
m10_1559 -> m10_17  [key=2, style=dotted];
m10_1559 -> m10_1560  [key=0, style=solid];
m10_1560 -> m10_17  [key=2, style=dotted];
m10_1560 -> m10_1561  [key=0, style=solid];
m10_1562 -> m10_17  [key=2, style=dotted];
m10_1562 -> m10_1563  [key=0, style=solid];
m10_1564 -> m10_17  [key=2, style=dotted];
m10_1564 -> m10_1565  [key=0, style=solid];
m10_1566 -> m10_17  [key=2, style=dotted];
m10_1566 -> m10_1567  [key=0, style=solid];
m10_1568 -> m10_17  [key=2, style=dotted];
m10_1568 -> m10_1569  [key=0, style=solid];
m10_1532 -> m10_1533  [key=0, style=solid];
m10_1569 -> m10_1531  [color=blue, key=0, style=bold];
m10_51 -> m10_52  [key=0, style=solid];
m10_403 -> m10_15  [key=2, style=dotted];
m10_403 -> m10_16  [key=2, style=dotted];
m10_403 -> m10_404  [key=0, style=solid];
m10_1126 -> m10_1127  [key=0, style=solid];
m10_1128 -> m10_13  [key=2, style=dotted];
m10_1128 -> m10_14  [key=2, style=dotted];
m10_1128 -> m10_1129  [key=0, style=solid];
m10_1128 -> m10_1130  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1128 -> m10_1131  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1128 -> m10_1132  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1128 -> m10_1133  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1128 -> m10_1134  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1128 -> m10_1135  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1128 -> m10_1136  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1128 -> m10_1137  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1129 -> m10_15  [key=2, style=dotted];
m10_1129 -> m10_16  [key=2, style=dotted];
m10_1129 -> m10_1130  [key=0, style=solid];
m10_1131 -> m10_15  [key=2, style=dotted];
m10_1131 -> m10_16  [key=2, style=dotted];
m10_1131 -> m10_1132  [key=0, style=solid];
m10_1133 -> m10_15  [key=2, style=dotted];
m10_1133 -> m10_16  [key=2, style=dotted];
m10_1133 -> m10_1134  [key=0, style=solid];
m10_1136 -> m10_15  [key=2, style=dotted];
m10_1136 -> m10_16  [key=2, style=dotted];
m10_1136 -> m10_1137  [key=0, style=solid];
m10_1130 -> m10_17  [key=2, style=dotted];
m10_1130 -> m10_1131  [key=0, style=solid];
m10_1132 -> m10_17  [key=2, style=dotted];
m10_1132 -> m10_1133  [key=0, style=solid];
m10_1134 -> m10_17  [key=2, style=dotted];
m10_1134 -> m10_1135  [key=0, style=solid];
m10_1135 -> m10_17  [key=2, style=dotted];
m10_1135 -> m10_1136  [key=0, style=solid];
m10_1137 -> m10_17  [key=2, style=dotted];
m10_1137 -> m10_1138  [key=0, style=solid];
m10_1127 -> m10_1128  [key=0, style=solid];
m10_1127 -> m10_1127  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1138 -> m10_1126  [color=blue, key=0, style=bold];
m10_134 -> m10_13  [key=2, style=dotted];
m10_134 -> m10_14  [key=2, style=dotted];
m10_134 -> m10_135  [key=0, style=solid];
m10_134 -> m10_136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1063 -> m10_1064  [key=0, style=solid];
m10_1064 -> m10_13  [key=2, style=dotted];
m10_1064 -> m10_14  [key=2, style=dotted];
m10_1064 -> m10_1065  [key=0, style=solid];
m10_1064 -> m10_1066  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1066 -> m10_17  [key=2, style=dotted];
m10_1066 -> m10_1067  [key=0, style=solid];
m10_1065 -> m10_1066  [key=0, style=solid];
m10_1065 -> m10_1068  [key=2, style=dotted];
m10_1065 -> m10_551  [key=2, style=dotted];
m10_1067 -> m10_1063  [color=blue, key=0, style=bold];
m10_102 -> m10_17  [key=2, style=dotted];
m10_102 -> m10_103  [key=0, style=solid];
m10_102 -> m10_107  [key=2, style=dotted];
m10_103 -> m10_17  [key=2, style=dotted];
m10_103 -> m10_104  [key=0, style=solid];
m10_103 -> m10_107  [key=2, style=dotted];
m10_103 -> m10_329  [key=0, style=solid];
m10_103 -> m10_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_103 -> m10_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_103 -> m10_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_103 -> m10_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_103 -> m10_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_103 -> m10_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_103 -> m10_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m10_104 -> m10_17  [key=2, style=dotted];
m10_104 -> m10_105  [key=0, style=solid];
m10_104 -> m10_107  [key=2, style=dotted];
m10_104 -> m10_538  [key=0, style=solid];
m10_104 -> m10_542  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_104 -> m10_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m10_106 -> m10_93  [color=blue, key=0, style=bold];
m10_1686 -> m10_1687  [key=0, style=solid];
m10_1688 -> m10_13  [key=2, style=dotted];
m10_1688 -> m10_14  [key=2, style=dotted];
m10_1688 -> m10_1689  [key=0, style=solid];
m10_1688 -> m10_1690  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1691  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1692  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1693  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1694  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1695  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1696  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1697  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1698  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1699  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1688 -> m10_1700  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1689 -> m10_15  [key=2, style=dotted];
m10_1689 -> m10_1690  [key=0, style=solid];
m10_1691 -> m10_15  [key=2, style=dotted];
m10_1691 -> m10_1692  [key=0, style=solid];
m10_1693 -> m10_15  [key=2, style=dotted];
m10_1693 -> m10_1694  [key=0, style=solid];
m10_1695 -> m10_15  [key=2, style=dotted];
m10_1695 -> m10_1696  [key=0, style=solid];
m10_1697 -> m10_15  [key=2, style=dotted];
m10_1697 -> m10_1698  [key=0, style=solid];
m10_1699 -> m10_15  [key=2, style=dotted];
m10_1699 -> m10_1700  [key=0, style=solid];
m10_1690 -> m10_17  [key=2, style=dotted];
m10_1690 -> m10_1691  [key=0, style=solid];
m10_1692 -> m10_17  [key=2, style=dotted];
m10_1692 -> m10_1693  [key=0, style=solid];
m10_1694 -> m10_17  [key=2, style=dotted];
m10_1694 -> m10_1695  [key=0, style=solid];
m10_1696 -> m10_17  [key=2, style=dotted];
m10_1696 -> m10_1697  [key=0, style=solid];
m10_1698 -> m10_17  [key=2, style=dotted];
m10_1698 -> m10_1699  [key=0, style=solid];
m10_1700 -> m10_17  [key=2, style=dotted];
m10_1700 -> m10_1701  [key=0, style=solid];
m10_1687 -> m10_1688  [key=0, style=solid];
m10_1687 -> m10_1687  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1701 -> m10_1686  [color=blue, key=0, style=bold];
m10_530 -> m10_527  [color=blue, key=0, style=bold];
m10_560 -> m10_561  [key=0, style=solid];
m10_561 -> m10_552  [color=blue, key=0, style=bold];
m10_561 -> m10_564  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m10_561 -> m10_572  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m10_561 -> m10_587  [color=darkseagreen4, key=1, label=newLinesText, style=dashed];
m10_561 -> m10_562  [key=0, style=solid];
m10_1570 -> m10_1571  [key=0, style=solid];
m10_1572 -> m10_13  [key=2, style=dotted];
m10_1572 -> m10_1573  [key=0, style=solid];
m10_1572 -> m10_116  [key=2, style=dotted];
m10_1572 -> m10_157  [key=2, style=dotted];
m10_1572 -> m10_158  [key=2, style=dotted];
m10_1572 -> m10_1574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1587  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1603  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1604  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1605  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1606  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1607  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1608  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1609  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1610  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1611  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1612  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1613  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1614  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1615  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1616  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1617  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1618  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1619  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1620  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1621  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1622  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1623  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1624  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1625  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1626  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1627  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1628  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1629  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1630  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1631  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1632  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1633  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1634  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1635  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1636  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1637  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1638  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1639  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1640  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1641  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1642  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1643  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1644  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1645  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1646  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1647  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1648  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1649  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1650  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1651  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1652  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1653  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1572 -> m10_1654  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1573 -> m10_15  [key=2, style=dotted];
m10_1573 -> m10_16  [key=2, style=dotted];
m10_1573 -> m10_1574  [key=0, style=solid];
m10_1577 -> m10_15  [key=2, style=dotted];
m10_1577 -> m10_16  [key=2, style=dotted];
m10_1577 -> m10_1578  [key=0, style=solid];
m10_1580 -> m10_15  [key=2, style=dotted];
m10_1580 -> m10_16  [key=2, style=dotted];
m10_1580 -> m10_1581  [key=0, style=solid];
m10_1583 -> m10_15  [key=2, style=dotted];
m10_1583 -> m10_16  [key=2, style=dotted];
m10_1583 -> m10_1584  [key=0, style=solid];
m10_1587 -> m10_15  [key=2, style=dotted];
m10_1587 -> m10_16  [key=2, style=dotted];
m10_1587 -> m10_1588  [key=0, style=solid];
m10_1590 -> m10_15  [key=2, style=dotted];
m10_1590 -> m10_16  [key=2, style=dotted];
m10_1590 -> m10_1591  [key=0, style=solid];
m10_1594 -> m10_15  [key=2, style=dotted];
m10_1594 -> m10_16  [key=2, style=dotted];
m10_1594 -> m10_1595  [key=0, style=solid];
m10_1598 -> m10_15  [key=2, style=dotted];
m10_1598 -> m10_16  [key=2, style=dotted];
m10_1598 -> m10_1599  [key=0, style=solid];
m10_1602 -> m10_15  [key=2, style=dotted];
m10_1602 -> m10_16  [key=2, style=dotted];
m10_1602 -> m10_1603  [key=0, style=solid];
m10_1606 -> m10_15  [key=2, style=dotted];
m10_1606 -> m10_16  [key=2, style=dotted];
m10_1606 -> m10_1607  [key=0, style=solid];
m10_1609 -> m10_15  [key=2, style=dotted];
m10_1609 -> m10_16  [key=2, style=dotted];
m10_1609 -> m10_1610  [key=0, style=solid];
m10_1613 -> m10_15  [key=2, style=dotted];
m10_1613 -> m10_16  [key=2, style=dotted];
m10_1613 -> m10_1614  [key=0, style=solid];
m10_1615 -> m10_15  [key=2, style=dotted];
m10_1615 -> m10_16  [key=2, style=dotted];
m10_1615 -> m10_1616  [key=0, style=solid];
m10_1618 -> m10_15  [key=2, style=dotted];
m10_1618 -> m10_16  [key=2, style=dotted];
m10_1618 -> m10_1619  [key=0, style=solid];
m10_1621 -> m10_15  [key=2, style=dotted];
m10_1621 -> m10_16  [key=2, style=dotted];
m10_1621 -> m10_1622  [key=0, style=solid];
m10_1624 -> m10_15  [key=2, style=dotted];
m10_1624 -> m10_16  [key=2, style=dotted];
m10_1624 -> m10_1625  [key=0, style=solid];
m10_1627 -> m10_15  [key=2, style=dotted];
m10_1627 -> m10_16  [key=2, style=dotted];
m10_1627 -> m10_1628  [key=0, style=solid];
m10_1629 -> m10_15  [key=2, style=dotted];
m10_1629 -> m10_16  [key=2, style=dotted];
m10_1629 -> m10_1630  [key=0, style=solid];
m10_1632 -> m10_15  [key=2, style=dotted];
m10_1632 -> m10_16  [key=2, style=dotted];
m10_1632 -> m10_1633  [key=0, style=solid];
m10_1634 -> m10_15  [key=2, style=dotted];
m10_1634 -> m10_16  [key=2, style=dotted];
m10_1634 -> m10_1635  [key=0, style=solid];
m10_1636 -> m10_15  [key=2, style=dotted];
m10_1636 -> m10_16  [key=2, style=dotted];
m10_1636 -> m10_1637  [key=0, style=solid];
m10_1638 -> m10_15  [key=2, style=dotted];
m10_1638 -> m10_16  [key=2, style=dotted];
m10_1638 -> m10_1639  [key=0, style=solid];
m10_1640 -> m10_15  [key=2, style=dotted];
m10_1640 -> m10_16  [key=2, style=dotted];
m10_1640 -> m10_1641  [key=0, style=solid];
m10_1642 -> m10_15  [key=2, style=dotted];
m10_1642 -> m10_16  [key=2, style=dotted];
m10_1642 -> m10_1643  [key=0, style=solid];
m10_1644 -> m10_15  [key=2, style=dotted];
m10_1644 -> m10_16  [key=2, style=dotted];
m10_1644 -> m10_1645  [key=0, style=solid];
m10_1646 -> m10_15  [key=2, style=dotted];
m10_1646 -> m10_16  [key=2, style=dotted];
m10_1646 -> m10_1647  [key=0, style=solid];
m10_1648 -> m10_15  [key=2, style=dotted];
m10_1648 -> m10_16  [key=2, style=dotted];
m10_1648 -> m10_1649  [key=0, style=solid];
m10_1651 -> m10_15  [key=2, style=dotted];
m10_1651 -> m10_16  [key=2, style=dotted];
m10_1651 -> m10_1652  [key=0, style=solid];
m10_1654 -> m10_15  [key=2, style=dotted];
m10_1654 -> m10_1655  [key=0, style=solid];
m10_1654 -> m10_131  [key=2, style=dotted];
m10_1574 -> m10_17  [key=2, style=dotted];
m10_1574 -> m10_1575  [key=0, style=solid];
m10_1575 -> m10_17  [key=2, style=dotted];
m10_1575 -> m10_1576  [key=0, style=solid];
m10_1576 -> m10_17  [key=2, style=dotted];
m10_1576 -> m10_1577  [key=0, style=solid];
m10_1578 -> m10_17  [key=2, style=dotted];
m10_1578 -> m10_1579  [key=0, style=solid];
m10_1579 -> m10_17  [key=2, style=dotted];
m10_1579 -> m10_1580  [key=0, style=solid];
m10_1581 -> m10_17  [key=2, style=dotted];
m10_1581 -> m10_1582  [key=0, style=solid];
m10_1582 -> m10_17  [key=2, style=dotted];
m10_1582 -> m10_1583  [key=0, style=solid];
m10_1584 -> m10_17  [key=2, style=dotted];
m10_1584 -> m10_1585  [key=0, style=solid];
m10_1585 -> m10_17  [key=2, style=dotted];
m10_1585 -> m10_1586  [key=0, style=solid];
m10_1586 -> m10_17  [key=2, style=dotted];
m10_1586 -> m10_1587  [key=0, style=solid];
m10_1588 -> m10_17  [key=2, style=dotted];
m10_1588 -> m10_1589  [key=0, style=solid];
m10_1589 -> m10_17  [key=2, style=dotted];
m10_1589 -> m10_1590  [key=0, style=solid];
m10_1591 -> m10_17  [key=2, style=dotted];
m10_1591 -> m10_1592  [key=0, style=solid];
m10_1592 -> m10_17  [key=2, style=dotted];
m10_1592 -> m10_1593  [key=0, style=solid];
m10_1593 -> m10_17  [key=2, style=dotted];
m10_1593 -> m10_1594  [key=0, style=solid];
m10_1595 -> m10_17  [key=2, style=dotted];
m10_1595 -> m10_1596  [key=0, style=solid];
m10_1596 -> m10_17  [key=2, style=dotted];
m10_1596 -> m10_1597  [key=0, style=solid];
m10_1597 -> m10_17  [key=2, style=dotted];
m10_1597 -> m10_1598  [key=0, style=solid];
m10_1599 -> m10_17  [key=2, style=dotted];
m10_1599 -> m10_1600  [key=0, style=solid];
m10_1600 -> m10_17  [key=2, style=dotted];
m10_1600 -> m10_1601  [key=0, style=solid];
m10_1601 -> m10_17  [key=2, style=dotted];
m10_1601 -> m10_1602  [key=0, style=solid];
m10_1603 -> m10_17  [key=2, style=dotted];
m10_1603 -> m10_1604  [key=0, style=solid];
m10_1604 -> m10_17  [key=2, style=dotted];
m10_1604 -> m10_1605  [key=0, style=solid];
m10_1605 -> m10_17  [key=2, style=dotted];
m10_1605 -> m10_1606  [key=0, style=solid];
m10_1607 -> m10_17  [key=2, style=dotted];
m10_1607 -> m10_1608  [key=0, style=solid];
m10_1608 -> m10_17  [key=2, style=dotted];
m10_1608 -> m10_1609  [key=0, style=solid];
m10_1610 -> m10_17  [key=2, style=dotted];
m10_1610 -> m10_1611  [key=0, style=solid];
m10_1611 -> m10_17  [key=2, style=dotted];
m10_1611 -> m10_1612  [key=0, style=solid];
m10_1612 -> m10_17  [key=2, style=dotted];
m10_1612 -> m10_1613  [key=0, style=solid];
m10_1614 -> m10_17  [key=2, style=dotted];
m10_1614 -> m10_1615  [key=0, style=solid];
m10_1616 -> m10_17  [key=2, style=dotted];
m10_1616 -> m10_1617  [key=0, style=solid];
m10_1617 -> m10_17  [key=2, style=dotted];
m10_1617 -> m10_1618  [key=0, style=solid];
m10_1619 -> m10_17  [key=2, style=dotted];
m10_1619 -> m10_1620  [key=0, style=solid];
m10_1620 -> m10_17  [key=2, style=dotted];
m10_1620 -> m10_1621  [key=0, style=solid];
m10_1622 -> m10_17  [key=2, style=dotted];
m10_1622 -> m10_1623  [key=0, style=solid];
m10_1623 -> m10_17  [key=2, style=dotted];
m10_1623 -> m10_1624  [key=0, style=solid];
m10_1625 -> m10_17  [key=2, style=dotted];
m10_1625 -> m10_1626  [key=0, style=solid];
m10_1626 -> m10_17  [key=2, style=dotted];
m10_1626 -> m10_1627  [key=0, style=solid];
m10_1628 -> m10_17  [key=2, style=dotted];
m10_1628 -> m10_1629  [key=0, style=solid];
m10_1630 -> m10_17  [key=2, style=dotted];
m10_1630 -> m10_1631  [key=0, style=solid];
m10_1631 -> m10_17  [key=2, style=dotted];
m10_1631 -> m10_1632  [key=0, style=solid];
m10_1633 -> m10_17  [key=2, style=dotted];
m10_1633 -> m10_1634  [key=0, style=solid];
m10_1635 -> m10_17  [key=2, style=dotted];
m10_1635 -> m10_1636  [key=0, style=solid];
m10_1637 -> m10_17  [key=2, style=dotted];
m10_1637 -> m10_1638  [key=0, style=solid];
m10_1639 -> m10_17  [key=2, style=dotted];
m10_1639 -> m10_1640  [key=0, style=solid];
m10_1641 -> m10_17  [key=2, style=dotted];
m10_1641 -> m10_1642  [key=0, style=solid];
m10_1643 -> m10_17  [key=2, style=dotted];
m10_1643 -> m10_1644  [key=0, style=solid];
m10_1645 -> m10_17  [key=2, style=dotted];
m10_1645 -> m10_1646  [key=0, style=solid];
m10_1647 -> m10_17  [key=2, style=dotted];
m10_1647 -> m10_1648  [key=0, style=solid];
m10_1649 -> m10_17  [key=2, style=dotted];
m10_1649 -> m10_1650  [key=0, style=solid];
m10_1650 -> m10_17  [key=2, style=dotted];
m10_1650 -> m10_1651  [key=0, style=solid];
m10_1652 -> m10_17  [key=2, style=dotted];
m10_1652 -> m10_1653  [key=0, style=solid];
m10_1653 -> m10_17  [key=2, style=dotted];
m10_1653 -> m10_1654  [key=0, style=solid];
m10_1571 -> m10_1572  [key=0, style=solid];
m10_1655 -> m10_1570  [color=blue, key=0, style=bold];
m10_1076 -> m10_1077  [key=0, style=solid];
m10_1077 -> m10_13  [key=2, style=dotted];
m10_1077 -> m10_14  [key=2, style=dotted];
m10_1077 -> m10_1078  [key=0, style=solid];
m10_1077 -> m10_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1078 -> m10_18  [key=2, style=dotted];
m10_1078 -> m10_1079  [key=0, style=solid];
m10_1078 -> m10_1080  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1079 -> m10_1076  [color=blue, key=0, style=bold];
m10_541 -> m10_542  [key=0, style=solid];
m10_541 -> m10_552  [key=2, style=dotted];
m10_541 -> m10_546  [color=darkseagreen4, key=1, label=nameTable, style=dashed];
m10_541 -> m10_547  [color=darkseagreen4, key=1, label=nameTable, style=dashed];
m10_551 -> m10_104  [color=blue, key=0, style=bold];
m10_844 -> m10_845  [key=0, style=solid];
m10_847 -> m10_13  [key=2, style=dotted];
m10_847 -> m10_848  [key=0, style=solid];
m10_847 -> m10_849  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_850  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_851  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_852  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_853  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_854  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_855  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_856  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_857  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_858  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_859  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_847 -> m10_860  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_846 -> m10_14  [key=2, style=dotted];
m10_846 -> m10_847  [key=0, style=solid];
m10_849 -> m10_17  [key=2, style=dotted];
m10_849 -> m10_850  [key=0, style=solid];
m10_851 -> m10_17  [key=2, style=dotted];
m10_851 -> m10_852  [key=0, style=solid];
m10_852 -> m10_17  [key=2, style=dotted];
m10_852 -> m10_853  [key=0, style=solid];
m10_854 -> m10_17  [key=2, style=dotted];
m10_854 -> m10_855  [key=0, style=solid];
m10_855 -> m10_17  [key=2, style=dotted];
m10_855 -> m10_856  [key=0, style=solid];
m10_857 -> m10_17  [key=2, style=dotted];
m10_857 -> m10_858  [key=0, style=solid];
m10_858 -> m10_17  [key=2, style=dotted];
m10_858 -> m10_859  [key=0, style=solid];
m10_860 -> m10_17  [key=2, style=dotted];
m10_860 -> m10_861  [key=0, style=solid];
m10_848 -> m10_849  [key=0, style=solid];
m10_848 -> m10_138  [key=2, style=dotted];
m10_850 -> m10_851  [key=0, style=solid];
m10_850 -> m10_138  [key=2, style=dotted];
m10_853 -> m10_854  [key=0, style=solid];
m10_853 -> m10_138  [key=2, style=dotted];
m10_856 -> m10_857  [key=0, style=solid];
m10_856 -> m10_138  [key=2, style=dotted];
m10_859 -> m10_860  [key=0, style=solid];
m10_859 -> m10_138  [key=2, style=dotted];
m10_845 -> m10_846  [key=0, style=solid];
m10_845 -> m10_845  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m10_861 -> m10_844  [color=blue, key=0, style=bold];
m10_52 -> m10_15  [key=2, style=dotted];
m10_52 -> m10_16  [key=2, style=dotted];
m10_52 -> m10_53  [key=0, style=solid];
m10_1104 -> m10_1105  [key=0, style=solid];
m10_1105 -> m10_13  [key=2, style=dotted];
m10_1105 -> m10_14  [key=2, style=dotted];
m10_1105 -> m10_1106  [key=0, style=solid];
m10_1105 -> m10_1109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1106 -> m10_18  [key=2, style=dotted];
m10_1106 -> m10_1107  [key=0, style=solid];
m10_1106 -> m10_1108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1107 -> m10_1104  [color=blue, key=0, style=bold];
m10_55 -> m10_48  [color=blue, key=0, style=bold];
m10_444 -> m10_444  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_444 -> m10_441  [key=0, style=solid];
m10_444 -> m10_445  [key=0, style=solid];
m10_445 -> m10_435  [color=blue, key=0, style=bold];
m10_445 -> m10_446  [key=0, style=solid];
m10_445 -> m10_459  [key=2, style=dotted];
m10_445 -> m10_447  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_445 -> m10_450  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_445 -> m10_452  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_445 -> m10_454  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_445 -> m10_455  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_445 -> m10_456  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_445 -> m10_457  [color=darkseagreen4, key=1, label=contract, style=dashed];
m10_224 -> m10_15  [key=2, style=dotted];
m10_224 -> m10_225  [key=0, style=solid];
m10_154 -> m10_16  [key=2, style=dotted];
m10_154 -> m10_155  [key=0, style=solid];
m10_154 -> m10_138  [key=2, style=dotted];
m10_589 -> m10_669  [key=0, style=solid];
m10_589 -> m10_671  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_589 -> m10_675  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_589 -> m10_676  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_589 -> m10_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m10_589 -> m10_17  [key=2, style=dotted];
m10_589 -> m10_590  [key=0, style=solid];
m10_671 -> m10_672  [key=0, style=solid];
m10_671 -> m10_680  [key=2, style=dotted];
m10_671 -> m10_674  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m10_671 -> m10_676  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m10_671 -> m10_677  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m10_675 -> m10_676  [key=0, style=solid];
m10_675 -> m10_682  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_676 -> m10_677  [key=0, style=solid];
m10_676 -> m10_678  [key=0, style=solid];
m10_676 -> m10_196  [key=2, style=dotted];
m10_677 -> m10_678  [key=0, style=solid];
m10_677 -> m10_197  [key=2, style=dotted];
m10_677 -> m10_677  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_672 -> m10_673  [key=0, style=solid];
m10_672 -> m10_674  [key=0, style=solid];
m10_672 -> m10_192  [key=2, style=dotted];
m10_674 -> m10_675  [key=0, style=solid];
m10_674 -> m10_195  [key=2, style=dotted];
m10_674 -> m10_682  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m10_673 -> m10_678  [key=0, style=solid];
m10_678 -> m10_589  [color=blue, key=0, style=bold];
m10_678 -> m10_13  [key=2, style=dotted];
m10_678 -> m10_14  [key=2, style=dotted];
m10_678 -> m10_679  [key=0, style=solid];
m10_393 -> m10_394  [key=0, style=solid];
m10_126 -> m10_127  [key=0, style=solid];
m10_126 -> m10_130  [key=2, style=dotted];
m10_996 -> m10_997  [key=0, style=solid];
m10_998 -> m10_13  [key=2, style=dotted];
m10_998 -> m10_999  [key=0, style=solid];
m10_998 -> m10_1000  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1001  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1002  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1003  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1004  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1005  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1006  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1007  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1008  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1009  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1010  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1011  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1012  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1013  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1014  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_998 -> m10_1015  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_997 -> m10_14  [key=2, style=dotted];
m10_997 -> m10_998  [key=0, style=solid];
m10_999 -> m10_15  [key=2, style=dotted];
m10_999 -> m10_16  [key=2, style=dotted];
m10_999 -> m10_1000  [key=0, style=solid];
m10_1001 -> m10_15  [key=2, style=dotted];
m10_1001 -> m10_1002  [key=0, style=solid];
m10_1005 -> m10_15  [key=2, style=dotted];
m10_1005 -> m10_1006  [key=0, style=solid];
m10_1009 -> m10_15  [key=2, style=dotted];
m10_1009 -> m10_1010  [key=0, style=solid];
m10_1013 -> m10_15  [key=2, style=dotted];
m10_1013 -> m10_16  [key=2, style=dotted];
m10_1013 -> m10_1014  [key=0, style=solid];
m10_1015 -> m10_15  [key=2, style=dotted];
m10_1015 -> m10_1016  [key=0, style=solid];
m10_1015 -> m10_131  [key=2, style=dotted];
m10_1000 -> m10_17  [key=2, style=dotted];
m10_1000 -> m10_1001  [key=0, style=solid];
m10_1002 -> m10_17  [key=2, style=dotted];
m10_1002 -> m10_1003  [key=0, style=solid];
m10_1003 -> m10_17  [key=2, style=dotted];
m10_1003 -> m10_1004  [key=0, style=solid];
m10_1004 -> m10_17  [key=2, style=dotted];
m10_1004 -> m10_1005  [key=0, style=solid];
m10_1006 -> m10_17  [key=2, style=dotted];
m10_1006 -> m10_1007  [key=0, style=solid];
m10_1007 -> m10_17  [key=2, style=dotted];
m10_1007 -> m10_1008  [key=0, style=solid];
m10_1008 -> m10_17  [key=2, style=dotted];
m10_1008 -> m10_1009  [key=0, style=solid];
m10_1010 -> m10_17  [key=2, style=dotted];
m10_1010 -> m10_1011  [key=0, style=solid];
m10_1011 -> m10_17  [key=2, style=dotted];
m10_1011 -> m10_1012  [key=0, style=solid];
m10_1012 -> m10_17  [key=2, style=dotted];
m10_1012 -> m10_1013  [key=0, style=solid];
m10_1014 -> m10_17  [key=2, style=dotted];
m10_1014 -> m10_1015  [key=0, style=solid];
m10_1016 -> m10_996  [color=blue, key=0, style=bold];
m10_1046 -> m10_1047  [key=0, style=solid];
m10_1047 -> m10_13  [key=2, style=dotted];
m10_1047 -> m10_14  [key=2, style=dotted];
m10_1047 -> m10_1048  [key=0, style=solid];
m10_1047 -> m10_1049  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1049 -> m10_17  [key=2, style=dotted];
m10_1049 -> m10_1050  [key=0, style=solid];
m10_1048 -> m10_1049  [key=0, style=solid];
m10_1048 -> m10_747  [key=2, style=dotted];
m10_1048 -> m10_551  [key=2, style=dotted];
m10_1050 -> m10_1046  [color=blue, key=0, style=bold];
m10_48 -> m10_49  [key=0, style=solid];
m10_53 -> m10_17  [key=2, style=dotted];
m10_53 -> m10_54  [key=0, style=solid];
m10_394 -> m10_395  [key=0, style=solid];
m10_394 -> m10_374  [key=0, style=solid];
m10_394 -> m10_402  [key=2, style=dotted];
m10_394 -> m10_394  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m10_396 -> m10_13  [key=2, style=dotted];
m10_396 -> m10_397  [key=0, style=solid];
m10_396 -> m10_116  [key=2, style=dotted];
m10_396 -> m10_157  [key=2, style=dotted];
m10_396 -> m10_158  [key=2, style=dotted];
m10_396 -> m10_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_401  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_402  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_403  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_404  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_405  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_396 -> m10_54  [key=2, style=dotted];
m10_397 -> m10_15  [key=2, style=dotted];
m10_397 -> m10_16  [key=2, style=dotted];
m10_397 -> m10_398  [key=0, style=solid];
m10_397 -> m10_374  [key=0, style=solid];
m10_401 -> m10_15  [key=2, style=dotted];
m10_401 -> m10_16  [key=2, style=dotted];
m10_401 -> m10_402  [key=0, style=solid];
m10_405 -> m10_15  [key=2, style=dotted];
m10_405 -> m10_16  [key=2, style=dotted];
m10_405 -> m10_406  [key=0, style=solid];
m10_409 -> m10_15  [key=2, style=dotted];
m10_409 -> m10_16  [key=2, style=dotted];
m10_409 -> m10_410  [key=0, style=solid];
m10_409 -> m10_50  [key=2, style=dotted];
m10_409 -> m10_412  [color=darkseagreen4, key=1, label=ret, style=dashed];
m10_409 -> m10_414  [color=darkseagreen4, key=1, label=ret, style=dashed];
m10_409 -> m10_415  [color=darkseagreen4, key=1, label=ret, style=dashed];
m10_411 -> m10_15  [key=2, style=dotted];
m10_411 -> m10_16  [key=2, style=dotted];
m10_411 -> m10_412  [key=0, style=solid];
m10_411 -> m10_414  [key=0, style=solid];
m10_413 -> m10_15  [key=2, style=dotted];
m10_413 -> m10_16  [key=2, style=dotted];
m10_413 -> m10_414  [key=0, style=solid];
m10_413 -> m10_411  [key=0, style=solid];
m10_413 -> m10_417  [key=2, style=dotted];
m10_413 -> m10_413  [color=darkseagreen4, key=1, label=current, style=dashed];
m10_415 -> m10_15  [key=2, style=dotted];
m10_415 -> m10_16  [key=2, style=dotted];
m10_415 -> m10_416  [key=0, style=solid];
m10_417 -> m10_15  [key=2, style=dotted];
m10_417 -> m10_16  [key=2, style=dotted];
m10_417 -> m10_418  [key=0, style=solid];
m10_398 -> m10_17  [key=2, style=dotted];
m10_398 -> m10_399  [key=0, style=solid];
m10_398 -> m10_360  [color=blue, key=0, style=bold];
m10_400 -> m10_17  [key=2, style=dotted];
m10_400 -> m10_401  [key=0, style=solid];
m10_400 -> m10_405  [key=0, style=solid];
m10_406 -> m10_17  [key=2, style=dotted];
m10_406 -> m10_407  [key=0, style=solid];
m10_406 -> m10_400  [color=blue, key=0, style=bold];
m10_410 -> m10_17  [key=2, style=dotted];
m10_410 -> m10_411  [key=0, style=solid];
m10_410 -> m10_412  [color=darkseagreen4, key=1, label=current, style=dashed];
m10_410 -> m10_413  [color=darkseagreen4, key=1, label=current, style=dashed];
m10_412 -> m10_17  [key=2, style=dotted];
m10_412 -> m10_413  [key=0, style=solid];
m10_412 -> m10_54  [key=2, style=dotted];
m10_414 -> m10_17  [key=2, style=dotted];
m10_414 -> m10_415  [key=0, style=solid];
m10_414 -> m10_418  [key=2, style=dotted];
m10_416 -> m10_17  [key=2, style=dotted];
m10_416 -> m10_417  [key=0, style=solid];
m10_416 -> m10_124  [color=blue, key=0, style=bold];
m10_395 -> m10_396  [key=0, style=solid];
m10_395 -> m10_395  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_395 -> m10_50  [key=2, style=dotted];
m10_395 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m10_111 -> m10_271  [key=0, style=solid];
m10_111 -> m10_112  [key=0, style=solid];
m10_1312 -> m10_1313  [key=0, style=solid];
m10_1313 -> m10_13  [key=2, style=dotted];
m10_1313 -> m10_14  [key=2, style=dotted];
m10_1313 -> m10_1314  [key=0, style=solid];
m10_1313 -> m10_1317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1314 -> m10_18  [key=2, style=dotted];
m10_1314 -> m10_1315  [key=0, style=solid];
m10_1314 -> m10_1316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1315 -> m10_1312  [color=blue, key=0, style=bold];
m10_1333 -> m10_1334  [key=0, style=solid];
m10_1335 -> m10_13  [key=2, style=dotted];
m10_1335 -> m10_14  [key=2, style=dotted];
m10_1335 -> m10_1336  [key=0, style=solid];
m10_1335 -> m10_1337  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1335 -> m10_1338  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1335 -> m10_1339  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1335 -> m10_1340  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1335 -> m10_1341  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1335 -> m10_1342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1335 -> m10_1343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1335 -> m10_1345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1335 -> m10_1346  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1337 -> m10_15  [key=2, style=dotted];
m10_1337 -> m10_16  [key=2, style=dotted];
m10_1337 -> m10_1338  [key=0, style=solid];
m10_1339 -> m10_15  [key=2, style=dotted];
m10_1339 -> m10_16  [key=2, style=dotted];
m10_1339 -> m10_1340  [key=0, style=solid];
m10_1345 -> m10_15  [key=2, style=dotted];
m10_1345 -> m10_16  [key=2, style=dotted];
m10_1345 -> m10_1346  [key=0, style=solid];
m10_1338 -> m10_17  [key=2, style=dotted];
m10_1338 -> m10_1339  [key=0, style=solid];
m10_1340 -> m10_17  [key=2, style=dotted];
m10_1340 -> m10_1341  [key=0, style=solid];
m10_1342 -> m10_17  [key=2, style=dotted];
m10_1342 -> m10_1343  [key=0, style=solid];
m10_1343 -> m10_17  [key=2, style=dotted];
m10_1343 -> m10_1344  [key=0, style=solid];
m10_1346 -> m10_17  [key=2, style=dotted];
m10_1346 -> m10_1347  [key=0, style=solid];
m10_1344 -> m10_17  [key=2, style=dotted];
m10_1344 -> m10_1345  [key=0, style=solid];
m10_1334 -> m10_1335  [key=0, style=solid];
m10_1334 -> m10_1334  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1336 -> m10_1337  [key=0, style=solid];
m10_1336 -> m10_1243  [key=2, style=dotted];
m10_1341 -> m10_1342  [key=0, style=solid];
m10_1341 -> m10_1344  [color=darkseagreen4, key=1, label=d, style=dashed];
m10_1341 -> m10_747  [key=2, style=dotted];
m10_1347 -> m10_1333  [color=blue, key=0, style=bold];
m10_1083 -> m10_1084  [key=0, style=solid];
m10_1084 -> m10_13  [key=2, style=dotted];
m10_1084 -> m10_14  [key=2, style=dotted];
m10_1084 -> m10_1085  [key=0, style=solid];
m10_1084 -> m10_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1085 -> m10_18  [key=2, style=dotted];
m10_1085 -> m10_1086  [key=0, style=solid];
m10_1085 -> m10_1087  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1086 -> m10_1083  [color=blue, key=0, style=bold];
m10_107 -> m10_94  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_95  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_96  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_97  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_98  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_99  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_100  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_101  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_102  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_103  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_104  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_105  [color=darkorchid, key=3, label="Parameter variable string input", style=bold];
m10_107 -> m10_108  [key=0, style=solid];
m10_107 -> m10_111  [color=darkorchid, key=3, label="method methodReturn string ReadString", style=bold];
m10_112 -> m10_113  [key=0, style=solid];
m10_569 -> m10_17  [key=2, style=dotted];
m10_569 -> m10_570  [key=0, style=solid];
m10_571 -> m10_572  [key=0, style=solid];
m10_571 -> m10_319  [key=2, style=dotted];
m10_571 -> m10_573  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_574  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_575  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_577  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_579  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_580  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_581  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_582  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_583  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_584  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_585  [color=darkseagreen4, key=1, label=property, style=dashed];
m10_571 -> m10_17  [key=2, style=dotted];
m10_572 -> m10_573  [key=0, style=solid];
m10_572 -> m10_192  [key=2, style=dotted];
m10_572 -> m10_17  [key=2, style=dotted];
m10_573 -> m10_574  [key=0, style=solid];
m10_573 -> m10_15  [key=2, style=dotted];
m10_573 -> m10_16  [key=2, style=dotted];
m10_574 -> m10_575  [key=0, style=solid];
m10_574 -> m10_562  [key=2, style=dotted];
m10_574 -> m10_17  [key=2, style=dotted];
m10_575 -> m10_576  [key=0, style=solid];
m10_575 -> m10_320  [key=2, style=dotted];
m10_575 -> m10_15  [key=2, style=dotted];
m10_575 -> m10_16  [key=2, style=dotted];
m10_577 -> m10_578  [key=0, style=solid];
m10_577 -> m10_321  [key=2, style=dotted];
m10_577 -> m10_579  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m10_577 -> m10_580  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m10_577 -> m10_584  [color=darkseagreen4, key=1, label=allowNonPublicAccess, style=dashed];
m10_577 -> m10_17  [key=2, style=dotted];
m10_578 -> m10_579  [key=0, style=solid];
m10_578 -> m10_581  [key=0, style=solid];
m10_578 -> m10_17  [key=2, style=dotted];
m10_579 -> m10_580  [key=0, style=solid];
m10_579 -> m10_587  [key=2, style=dotted];
m10_579 -> m10_15  [key=2, style=dotted];
m10_579 -> m10_16  [key=2, style=dotted];
m10_580 -> m10_583  [key=0, style=solid];
m10_580 -> m10_196  [key=2, style=dotted];
m10_580 -> m10_17  [key=2, style=dotted];
m10_580 -> m10_581  [key=0, style=solid];
m10_583 -> m10_584  [key=0, style=solid];
m10_583 -> m10_588  [key=2, style=dotted];
m10_583 -> m10_17  [key=2, style=dotted];
m10_584 -> m10_585  [key=0, style=solid];
m10_584 -> m10_589  [key=2, style=dotted];
m10_584 -> m10_17  [key=2, style=dotted];
m10_581 -> m10_582  [key=0, style=solid];
m10_581 -> m10_17  [key=2, style=dotted];
m10_582 -> m10_583  [key=0, style=solid];
m10_582 -> m10_15  [key=2, style=dotted];
m10_582 -> m10_16  [key=2, style=dotted];
m10_585 -> m10_586  [key=0, style=solid];
m10_585 -> m10_15  [key=2, style=dotted];
m10_585 -> m10_16  [key=2, style=dotted];
m10_576 -> m10_577  [key=0, style=solid];
m10_576 -> m10_17  [key=2, style=dotted];
m10_586 -> m10_553  [color=blue, key=0, style=bold];
m10_586 -> m10_17  [key=2, style=dotted];
m10_586 -> m10_587  [key=0, style=solid];
m10_877 -> m10_878  [key=0, style=solid];
m10_879 -> m10_13  [key=2, style=dotted];
m10_879 -> m10_14  [key=2, style=dotted];
m10_879 -> m10_880  [key=0, style=solid];
m10_879 -> m10_881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_879 -> m10_882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_879 -> m10_883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_879 -> m10_884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_879 -> m10_885  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_879 -> m10_886  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_879 -> m10_887  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_880 -> m10_15  [key=2, style=dotted];
m10_880 -> m10_881  [key=0, style=solid];
m10_882 -> m10_15  [key=2, style=dotted];
m10_882 -> m10_883  [key=0, style=solid];
m10_884 -> m10_15  [key=2, style=dotted];
m10_884 -> m10_885  [key=0, style=solid];
m10_886 -> m10_15  [key=2, style=dotted];
m10_886 -> m10_887  [key=0, style=solid];
m10_881 -> m10_17  [key=2, style=dotted];
m10_881 -> m10_882  [key=0, style=solid];
m10_883 -> m10_17  [key=2, style=dotted];
m10_883 -> m10_884  [key=0, style=solid];
m10_885 -> m10_17  [key=2, style=dotted];
m10_885 -> m10_886  [key=0, style=solid];
m10_885 -> m10_889  [key=2, style=dotted];
m10_885 -> m10_890  [key=2, style=dotted];
m10_887 -> m10_17  [key=2, style=dotted];
m10_887 -> m10_888  [key=0, style=solid];
m10_878 -> m10_879  [key=0, style=solid];
m10_878 -> m10_878  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_888 -> m10_877  [color=blue, key=0, style=bold];
m10_1139 -> m10_1140  [key=0, style=solid];
m10_1141 -> m10_13  [key=2, style=dotted];
m10_1141 -> m10_14  [key=2, style=dotted];
m10_1141 -> m10_1142  [key=0, style=solid];
m10_1141 -> m10_1143  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1141 -> m10_1144  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1141 -> m10_1145  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1141 -> m10_1146  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1141 -> m10_1147  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1141 -> m10_1148  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1141 -> m10_1149  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1141 -> m10_1150  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1141 -> m10_1151  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1142 -> m10_15  [key=2, style=dotted];
m10_1142 -> m10_16  [key=2, style=dotted];
m10_1142 -> m10_1143  [key=0, style=solid];
m10_1144 -> m10_15  [key=2, style=dotted];
m10_1144 -> m10_16  [key=2, style=dotted];
m10_1144 -> m10_1145  [key=0, style=solid];
m10_1150 -> m10_15  [key=2, style=dotted];
m10_1150 -> m10_16  [key=2, style=dotted];
m10_1150 -> m10_1151  [key=0, style=solid];
m10_1143 -> m10_17  [key=2, style=dotted];
m10_1143 -> m10_1144  [key=0, style=solid];
m10_1145 -> m10_17  [key=2, style=dotted];
m10_1145 -> m10_1146  [key=0, style=solid];
m10_1147 -> m10_17  [key=2, style=dotted];
m10_1147 -> m10_1148  [key=0, style=solid];
m10_1148 -> m10_17  [key=2, style=dotted];
m10_1148 -> m10_1149  [key=0, style=solid];
m10_1149 -> m10_17  [key=2, style=dotted];
m10_1149 -> m10_1150  [key=0, style=solid];
m10_1149 -> m10_1153  [key=2, style=dotted];
m10_1149 -> m10_1154  [key=2, style=dotted];
m10_1149 -> m10_1155  [key=2, style=dotted];
m10_1151 -> m10_17  [key=2, style=dotted];
m10_1151 -> m10_1152  [key=0, style=solid];
m10_1140 -> m10_1141  [key=0, style=solid];
m10_1140 -> m10_1140  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1146 -> m10_1147  [key=0, style=solid];
m10_1146 -> m10_1068  [key=2, style=dotted];
m10_1152 -> m10_1139  [color=blue, key=0, style=bold];
m10_1679 -> m10_1680  [key=0, style=solid];
m10_1681 -> m10_13  [key=2, style=dotted];
m10_1681 -> m10_14  [key=2, style=dotted];
m10_1681 -> m10_1682  [key=0, style=solid];
m10_1681 -> m10_1683  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1681 -> m10_1684  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1683 -> m10_17  [key=2, style=dotted];
m10_1683 -> m10_1684  [key=0, style=solid];
m10_1684 -> m10_17  [key=2, style=dotted];
m10_1684 -> m10_1685  [key=0, style=solid];
m10_1680 -> m10_1681  [key=0, style=solid];
m10_1680 -> m10_1680  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1682 -> m10_1683  [key=0, style=solid];
m10_1682 -> m10_747  [key=2, style=dotted];
m10_1685 -> m10_1679  [color=blue, key=0, style=bold];
m10_452 -> m10_453  [key=0, style=solid];
m10_452 -> m10_456  [key=0, style=solid];
m10_454 -> m10_13  [key=2, style=dotted];
m10_454 -> m10_14  [key=2, style=dotted];
m10_454 -> m10_455  [key=0, style=solid];
m10_454 -> m10_446  [key=2, style=dotted];
m10_454 -> m10_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_454 -> m10_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_454 -> m10_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_455 -> m10_15  [key=2, style=dotted];
m10_455 -> m10_456  [key=0, style=solid];
m10_455 -> m10_458  [key=0, style=solid];
m10_455 -> m10_156  [key=2, style=dotted];
m10_455 -> m10_440  [key=2, style=dotted];
m10_457 -> m10_17  [key=2, style=dotted];
m10_457 -> m10_458  [key=0, style=solid];
m10_456 -> m10_17  [key=2, style=dotted];
m10_456 -> m10_457  [key=0, style=solid];
m10_456 -> m10_109  [key=2, style=dotted];
m10_453 -> m10_454  [key=0, style=solid];
m10_453 -> m10_457  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_453 -> m10_453  [color=darkorchid, key=3, label="Local variable long i", style=bold];
m10_453 -> m10_460  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_453 -> m10_455  [key=0, style=solid];
m10_453 -> m10_162  [key=2, style=dotted];
m10_458 -> m10_460  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_458 -> m10_440  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m10_458 -> m10_459  [key=0, style=solid];
m10_458 -> m10_462  [color=darkseagreen4, key=1, label=j, style=dashed];
m10_458 -> m10_444  [color=blue, key=0, style=bold];
m10_459 -> m10_460  [key=0, style=solid];
m10_459 -> m10_463  [key=0, style=solid];
m10_214 -> m10_15  [key=2, style=dotted];
m10_214 -> m10_215  [key=0, style=solid];
m10_125 -> m10_16  [key=2, style=dotted];
m10_125 -> m10_126  [key=0, style=solid];
m10_1468 -> m10_1469  [key=0, style=solid];
m10_1470 -> m10_13  [key=2, style=dotted];
m10_1470 -> m10_14  [key=2, style=dotted];
m10_1470 -> m10_1471  [key=0, style=solid];
m10_1470 -> m10_1472  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1470 -> m10_1473  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1470 -> m10_1474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1471 -> m10_15  [key=2, style=dotted];
m10_1471 -> m10_16  [key=2, style=dotted];
m10_1471 -> m10_1472  [key=0, style=solid];
m10_1473 -> m10_15  [key=2, style=dotted];
m10_1473 -> m10_16  [key=2, style=dotted];
m10_1473 -> m10_1474  [key=0, style=solid];
m10_1472 -> m10_17  [key=2, style=dotted];
m10_1472 -> m10_1473  [key=0, style=solid];
m10_1474 -> m10_17  [key=2, style=dotted];
m10_1474 -> m10_1475  [key=0, style=solid];
m10_1469 -> m10_1470  [key=0, style=solid];
m10_1469 -> m10_1469  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1475 -> m10_1468  [color=blue, key=0, style=bold];
m10_1406 -> m10_1407  [key=0, style=solid];
m10_1407 -> m10_13  [key=2, style=dotted];
m10_1407 -> m10_14  [key=2, style=dotted];
m10_1407 -> m10_1408  [key=0, style=solid];
m10_1407 -> m10_1409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1416  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1417  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1418  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1419  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1420  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1421  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1422  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1423  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1424  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1407 -> m10_1435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1409 -> m10_15  [key=2, style=dotted];
m10_1409 -> m10_16  [key=2, style=dotted];
m10_1409 -> m10_1410  [key=0, style=solid];
m10_1411 -> m10_15  [key=2, style=dotted];
m10_1411 -> m10_16  [key=2, style=dotted];
m10_1411 -> m10_1412  [key=0, style=solid];
m10_1413 -> m10_15  [key=2, style=dotted];
m10_1413 -> m10_16  [key=2, style=dotted];
m10_1413 -> m10_1414  [key=0, style=solid];
m10_1415 -> m10_15  [key=2, style=dotted];
m10_1415 -> m10_16  [key=2, style=dotted];
m10_1415 -> m10_1416  [key=0, style=solid];
m10_1417 -> m10_15  [key=2, style=dotted];
m10_1417 -> m10_16  [key=2, style=dotted];
m10_1417 -> m10_1418  [key=0, style=solid];
m10_1419 -> m10_15  [key=2, style=dotted];
m10_1419 -> m10_16  [key=2, style=dotted];
m10_1419 -> m10_1420  [key=0, style=solid];
m10_1421 -> m10_15  [key=2, style=dotted];
m10_1421 -> m10_16  [key=2, style=dotted];
m10_1421 -> m10_1422  [key=0, style=solid];
m10_1423 -> m10_15  [key=2, style=dotted];
m10_1423 -> m10_16  [key=2, style=dotted];
m10_1423 -> m10_1424  [key=0, style=solid];
m10_1425 -> m10_15  [key=2, style=dotted];
m10_1425 -> m10_16  [key=2, style=dotted];
m10_1425 -> m10_1426  [key=0, style=solid];
m10_1427 -> m10_15  [key=2, style=dotted];
m10_1427 -> m10_16  [key=2, style=dotted];
m10_1427 -> m10_1428  [key=0, style=solid];
m10_1429 -> m10_15  [key=2, style=dotted];
m10_1429 -> m10_16  [key=2, style=dotted];
m10_1429 -> m10_1430  [key=0, style=solid];
m10_1431 -> m10_15  [key=2, style=dotted];
m10_1431 -> m10_16  [key=2, style=dotted];
m10_1431 -> m10_1432  [key=0, style=solid];
m10_1433 -> m10_15  [key=2, style=dotted];
m10_1433 -> m10_16  [key=2, style=dotted];
m10_1433 -> m10_1434  [key=0, style=solid];
m10_1435 -> m10_15  [key=2, style=dotted];
m10_1435 -> m10_1436  [key=0, style=solid];
m10_1435 -> m10_131  [key=2, style=dotted];
m10_1410 -> m10_17  [key=2, style=dotted];
m10_1410 -> m10_1411  [key=0, style=solid];
m10_1412 -> m10_17  [key=2, style=dotted];
m10_1412 -> m10_1413  [key=0, style=solid];
m10_1414 -> m10_17  [key=2, style=dotted];
m10_1414 -> m10_1415  [key=0, style=solid];
m10_1416 -> m10_17  [key=2, style=dotted];
m10_1416 -> m10_1417  [key=0, style=solid];
m10_1418 -> m10_17  [key=2, style=dotted];
m10_1418 -> m10_1419  [key=0, style=solid];
m10_1420 -> m10_17  [key=2, style=dotted];
m10_1420 -> m10_1421  [key=0, style=solid];
m10_1422 -> m10_17  [key=2, style=dotted];
m10_1422 -> m10_1423  [key=0, style=solid];
m10_1424 -> m10_17  [key=2, style=dotted];
m10_1424 -> m10_1425  [key=0, style=solid];
m10_1426 -> m10_17  [key=2, style=dotted];
m10_1426 -> m10_1427  [key=0, style=solid];
m10_1428 -> m10_17  [key=2, style=dotted];
m10_1428 -> m10_1429  [key=0, style=solid];
m10_1430 -> m10_17  [key=2, style=dotted];
m10_1430 -> m10_1431  [key=0, style=solid];
m10_1432 -> m10_17  [key=2, style=dotted];
m10_1432 -> m10_1433  [key=0, style=solid];
m10_1434 -> m10_17  [key=2, style=dotted];
m10_1434 -> m10_1435  [key=0, style=solid];
m10_1408 -> m10_1409  [key=0, style=solid];
m10_1436 -> m10_1406  [color=blue, key=0, style=bold];
m10_360 -> m10_361  [key=0, style=solid];
m10_360 -> m10_366  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_360 -> m10_360  [color=darkorchid, key=3, label="Local variable long i", style=bold];
m10_362 -> m10_13  [key=2, style=dotted];
m10_362 -> m10_14  [key=2, style=dotted];
m10_362 -> m10_363  [key=0, style=solid];
m10_362 -> m10_364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_362 -> m10_383  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_362 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_364 -> m10_17  [key=2, style=dotted];
m10_364 -> m10_365  [key=0, style=solid];
m10_364 -> m10_391  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_364 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_361 -> m10_362  [key=0, style=solid];
m10_361 -> m10_364  [color=darkseagreen4, key=1, label=s, style=dashed];
m10_361 -> m10_366  [key=2, style=dotted];
m10_361 -> m10_379  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_361 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_363 -> m10_364  [key=0, style=solid];
m10_363 -> m10_138  [key=2, style=dotted];
m10_363 -> m10_387  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_363 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_365 -> m10_360  [color=blue, key=0, style=bold];
m10_365 -> m10_366  [key=0, style=solid];
m10_365 -> m10_395  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m10_365 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationErrorCallback>", style=dashed];
m10_1056 -> m10_1057  [key=0, style=solid];
m10_1057 -> m10_13  [key=2, style=dotted];
m10_1057 -> m10_14  [key=2, style=dotted];
m10_1057 -> m10_1058  [key=0, style=solid];
m10_1057 -> m10_1061  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1058 -> m10_18  [key=2, style=dotted];
m10_1058 -> m10_1059  [key=0, style=solid];
m10_1058 -> m10_1060  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1059 -> m10_1056  [color=blue, key=0, style=bold];
m10_392 -> m10_393  [key=0, style=solid];
m10_392 -> m10_403  [key=2, style=dotted];
m10_392 -> m10_54  [key=2, style=dotted];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_60  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_162 -> m10_18  [key=2, style=dotted];
m10_162 -> m10_163  [key=0, style=solid];
m10_162 -> m10_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_160 -> m10_160  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_160 -> m10_161  [key=0, style=solid];
m10_1359 -> m10_1360  [key=0, style=solid];
m10_1361 -> m10_13  [key=2, style=dotted];
m10_1361 -> m10_14  [key=2, style=dotted];
m10_1361 -> m10_1362  [key=0, style=solid];
m10_1361 -> m10_1364  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1361 -> m10_1366  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1361 -> m10_1367  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1361 -> m10_1368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1364 -> m10_15  [key=2, style=dotted];
m10_1364 -> m10_16  [key=2, style=dotted];
m10_1364 -> m10_1365  [key=0, style=solid];
m10_1366 -> m10_15  [key=2, style=dotted];
m10_1366 -> m10_16  [key=2, style=dotted];
m10_1366 -> m10_1367  [key=0, style=solid];
m10_1368 -> m10_15  [key=2, style=dotted];
m10_1368 -> m10_1369  [key=0, style=solid];
m10_1368 -> m10_131  [key=2, style=dotted];
m10_1367 -> m10_17  [key=2, style=dotted];
m10_1367 -> m10_1368  [key=0, style=solid];
m10_1360 -> m10_1361  [key=0, style=solid];
m10_1360 -> m10_1360  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1362 -> m10_1363  [key=0, style=solid];
m10_1362 -> m10_1365  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_1362 -> m10_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m10_1363 -> m10_1364  [key=0, style=solid];
m10_1363 -> m10_1366  [key=0, style=solid];
m10_1365 -> m10_1363  [key=0, style=solid];
m10_1365 -> m10_1365  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_1369 -> m10_1359  [color=blue, key=0, style=bold];
m10_1711 -> m10_1712  [key=0, style=solid];
m10_1717 -> m10_13  [key=2, style=dotted];
m10_1717 -> m10_14  [key=2, style=dotted];
m10_1717 -> m10_1718  [key=0, style=solid];
m10_1717 -> m10_1719  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1721  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1722  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1724  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1725  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1726  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1727  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1728  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1729  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1730  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1731  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1732  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1733  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1717 -> m10_1734  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_13  [key=2, style=dotted];
m10_1735 -> m10_14  [key=2, style=dotted];
m10_1735 -> m10_1736  [key=0, style=solid];
m10_1735 -> m10_1737  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1738  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1740  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1741  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1742  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1743  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1744  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1745  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1746  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1747  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1748  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1750  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1751  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1735 -> m10_1752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1718 -> m10_15  [key=2, style=dotted];
m10_1718 -> m10_1719  [key=0, style=solid];
m10_1719 -> m10_15  [key=2, style=dotted];
m10_1719 -> m10_1720  [key=0, style=solid];
m10_1722 -> m10_15  [key=2, style=dotted];
m10_1722 -> m10_1723  [key=0, style=solid];
m10_1725 -> m10_15  [key=2, style=dotted];
m10_1725 -> m10_1726  [key=0, style=solid];
m10_1728 -> m10_15  [key=2, style=dotted];
m10_1728 -> m10_1729  [key=0, style=solid];
m10_1731 -> m10_15  [key=2, style=dotted];
m10_1731 -> m10_1732  [key=0, style=solid];
m10_1734 -> m10_15  [key=2, style=dotted];
m10_1734 -> m10_1735  [key=0, style=solid];
m10_1736 -> m10_15  [key=2, style=dotted];
m10_1736 -> m10_1737  [key=0, style=solid];
m10_1752 -> m10_15  [key=2, style=dotted];
m10_1752 -> m10_1753  [key=0, style=solid];
m10_1720 -> m10_17  [key=2, style=dotted];
m10_1720 -> m10_1721  [key=0, style=solid];
m10_1721 -> m10_17  [key=2, style=dotted];
m10_1721 -> m10_1722  [key=0, style=solid];
m10_1723 -> m10_17  [key=2, style=dotted];
m10_1723 -> m10_1724  [key=0, style=solid];
m10_1724 -> m10_17  [key=2, style=dotted];
m10_1724 -> m10_1725  [key=0, style=solid];
m10_1726 -> m10_17  [key=2, style=dotted];
m10_1726 -> m10_1727  [key=0, style=solid];
m10_1727 -> m10_17  [key=2, style=dotted];
m10_1727 -> m10_1728  [key=0, style=solid];
m10_1729 -> m10_17  [key=2, style=dotted];
m10_1729 -> m10_1730  [key=0, style=solid];
m10_1730 -> m10_17  [key=2, style=dotted];
m10_1730 -> m10_1731  [key=0, style=solid];
m10_1732 -> m10_17  [key=2, style=dotted];
m10_1732 -> m10_1733  [key=0, style=solid];
m10_1733 -> m10_17  [key=2, style=dotted];
m10_1733 -> m10_1734  [key=0, style=solid];
m10_1738 -> m10_17  [key=2, style=dotted];
m10_1738 -> m10_1739  [key=0, style=solid];
m10_1739 -> m10_17  [key=2, style=dotted];
m10_1739 -> m10_1740  [key=0, style=solid];
m10_1741 -> m10_17  [key=2, style=dotted];
m10_1741 -> m10_1742  [key=0, style=solid];
m10_1742 -> m10_17  [key=2, style=dotted];
m10_1742 -> m10_1743  [key=0, style=solid];
m10_1744 -> m10_17  [key=2, style=dotted];
m10_1744 -> m10_1745  [key=0, style=solid];
m10_1745 -> m10_17  [key=2, style=dotted];
m10_1745 -> m10_1746  [key=0, style=solid];
m10_1747 -> m10_17  [key=2, style=dotted];
m10_1747 -> m10_1748  [key=0, style=solid];
m10_1748 -> m10_17  [key=2, style=dotted];
m10_1748 -> m10_1749  [key=0, style=solid];
m10_1750 -> m10_17  [key=2, style=dotted];
m10_1750 -> m10_1751  [key=0, style=solid];
m10_1751 -> m10_17  [key=2, style=dotted];
m10_1751 -> m10_1752  [key=0, style=solid];
m10_1716 -> m10_1717  [key=0, style=solid];
m10_1716 -> m10_1735  [color=darkseagreen4, key=1, label=json, style=dashed];
m10_1716 -> m10_1716  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1737 -> m10_1738  [key=0, style=solid];
m10_1737 -> m10_747  [key=2, style=dotted];
m10_1740 -> m10_1741  [key=0, style=solid];
m10_1740 -> m10_747  [key=2, style=dotted];
m10_1743 -> m10_1744  [key=0, style=solid];
m10_1743 -> m10_747  [key=2, style=dotted];
m10_1746 -> m10_1747  [key=0, style=solid];
m10_1746 -> m10_747  [key=2, style=dotted];
m10_1749 -> m10_1750  [key=0, style=solid];
m10_1749 -> m10_747  [key=2, style=dotted];
m10_1715 -> m10_1716  [key=0, style=solid];
m10_1715 -> m10_1757  [key=2, style=dotted];
m10_1715 -> m10_1756  [key=2, style=dotted];
m10_1714 -> m10_1243  [key=2, style=dotted];
m10_1714 -> m10_1715  [key=0, style=solid];
m10_1714 -> m10_1755  [key=2, style=dotted];
m10_1714 -> m10_1756  [key=2, style=dotted];
m10_1713 -> m10_1715  [color=darkseagreen4, key=1, label=d, style=dashed];
m10_1713 -> m10_1714  [key=0, style=solid];
m10_1713 -> m10_1754  [key=2, style=dotted];
m10_1712 -> m10_1713  [key=0, style=solid];
m10_1753 -> m10_1711  [color=blue, key=0, style=bold];
m10_1038 -> m10_1039  [key=0, style=solid];
m10_1039 -> m10_13  [key=2, style=dotted];
m10_1039 -> m10_14  [key=2, style=dotted];
m10_1039 -> m10_1040  [key=0, style=solid];
m10_1039 -> m10_1041  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1039 -> m10_1044  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1040 -> m10_15  [key=2, style=dotted];
m10_1040 -> m10_1041  [key=0, style=solid];
m10_1041 -> m10_18  [key=2, style=dotted];
m10_1041 -> m10_1042  [key=0, style=solid];
m10_1041 -> m10_1043  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1042 -> m10_1038  [color=blue, key=0, style=bold];
m10_1196 -> m10_1197  [key=0, style=solid];
m10_1198 -> m10_13  [key=2, style=dotted];
m10_1198 -> m10_14  [key=2, style=dotted];
m10_1198 -> m10_1199  [key=0, style=solid];
m10_1198 -> m10_1200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1198 -> m10_1201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1198 -> m10_1202  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1198 -> m10_1203  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1198 -> m10_1204  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1198 -> m10_1205  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1198 -> m10_1206  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1198 -> m10_1207  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1198 -> m10_1208  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1199 -> m10_15  [key=2, style=dotted];
m10_1199 -> m10_16  [key=2, style=dotted];
m10_1199 -> m10_1200  [key=0, style=solid];
m10_1201 -> m10_15  [key=2, style=dotted];
m10_1201 -> m10_16  [key=2, style=dotted];
m10_1201 -> m10_1202  [key=0, style=solid];
m10_1207 -> m10_15  [key=2, style=dotted];
m10_1207 -> m10_16  [key=2, style=dotted];
m10_1207 -> m10_1208  [key=0, style=solid];
m10_1200 -> m10_17  [key=2, style=dotted];
m10_1200 -> m10_1201  [key=0, style=solid];
m10_1202 -> m10_17  [key=2, style=dotted];
m10_1202 -> m10_1203  [key=0, style=solid];
m10_1204 -> m10_17  [key=2, style=dotted];
m10_1204 -> m10_1205  [key=0, style=solid];
m10_1205 -> m10_17  [key=2, style=dotted];
m10_1205 -> m10_1206  [key=0, style=solid];
m10_1206 -> m10_17  [key=2, style=dotted];
m10_1206 -> m10_1207  [key=0, style=solid];
m10_1206 -> m10_1153  [key=2, style=dotted];
m10_1206 -> m10_1154  [key=2, style=dotted];
m10_1206 -> m10_1155  [key=2, style=dotted];
m10_1206 -> m10_1210  [key=2, style=dotted];
m10_1206 -> m10_1211  [key=2, style=dotted];
m10_1208 -> m10_17  [key=2, style=dotted];
m10_1208 -> m10_1209  [key=0, style=solid];
m10_1197 -> m10_1198  [key=0, style=solid];
m10_1197 -> m10_1197  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1203 -> m10_1204  [key=0, style=solid];
m10_1203 -> m10_1068  [key=2, style=dotted];
m10_1209 -> m10_1196  [color=blue, key=0, style=bold];
m10_190 -> m10_191  [key=0, style=solid];
m10_190 -> m10_115  [color=blue, key=0, style=bold];
m10_192 -> m10_13  [key=2, style=dotted];
m10_192 -> m10_14  [key=2, style=dotted];
m10_192 -> m10_193  [key=0, style=solid];
m10_192 -> m10_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_193 -> m10_18  [key=2, style=dotted];
m10_193 -> m10_194  [key=0, style=solid];
m10_193 -> m10_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_194 -> m10_190  [color=blue, key=0, style=bold];
m10_1182 -> m10_1183  [key=0, style=solid];
m10_1184 -> m10_13  [key=2, style=dotted];
m10_1184 -> m10_14  [key=2, style=dotted];
m10_1184 -> m10_1185  [key=0, style=solid];
m10_1184 -> m10_1186  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1184 -> m10_1187  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1184 -> m10_1188  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1184 -> m10_1189  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1184 -> m10_1190  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1184 -> m10_1191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1184 -> m10_1192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1184 -> m10_1193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1184 -> m10_1194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1185 -> m10_15  [key=2, style=dotted];
m10_1185 -> m10_16  [key=2, style=dotted];
m10_1185 -> m10_1186  [key=0, style=solid];
m10_1187 -> m10_15  [key=2, style=dotted];
m10_1187 -> m10_16  [key=2, style=dotted];
m10_1187 -> m10_1188  [key=0, style=solid];
m10_1193 -> m10_15  [key=2, style=dotted];
m10_1193 -> m10_16  [key=2, style=dotted];
m10_1193 -> m10_1194  [key=0, style=solid];
m10_1186 -> m10_17  [key=2, style=dotted];
m10_1186 -> m10_1187  [key=0, style=solid];
m10_1188 -> m10_17  [key=2, style=dotted];
m10_1188 -> m10_1189  [key=0, style=solid];
m10_1190 -> m10_17  [key=2, style=dotted];
m10_1190 -> m10_1191  [key=0, style=solid];
m10_1191 -> m10_17  [key=2, style=dotted];
m10_1191 -> m10_1192  [key=0, style=solid];
m10_1192 -> m10_17  [key=2, style=dotted];
m10_1192 -> m10_1193  [key=0, style=solid];
m10_1192 -> m10_1153  [key=2, style=dotted];
m10_1192 -> m10_1154  [key=2, style=dotted];
m10_1192 -> m10_1155  [key=2, style=dotted];
m10_1194 -> m10_17  [key=2, style=dotted];
m10_1194 -> m10_1195  [key=0, style=solid];
m10_1183 -> m10_1184  [key=0, style=solid];
m10_1183 -> m10_1183  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1189 -> m10_1190  [key=0, style=solid];
m10_1189 -> m10_1068  [key=2, style=dotted];
m10_1195 -> m10_1182  [color=blue, key=0, style=bold];
m10_119 -> m10_13  [key=2, style=dotted];
m10_119 -> m10_120  [key=0, style=solid];
m10_119 -> m10_116  [key=2, style=dotted];
m10_119 -> m10_121  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_124 -> m10_13  [key=2, style=dotted];
m10_124 -> m10_125  [key=0, style=solid];
m10_124 -> m10_116  [key=2, style=dotted];
m10_124 -> m10_126  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_124 -> m10_409  [key=0, style=solid];
m10_124 -> m10_410  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_1444 -> m10_1445  [key=0, style=solid];
m10_1446 -> m10_13  [key=2, style=dotted];
m10_1446 -> m10_14  [key=2, style=dotted];
m10_1446 -> m10_1447  [key=0, style=solid];
m10_1446 -> m10_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1447 -> m10_18  [key=2, style=dotted];
m10_1447 -> m10_1448  [key=0, style=solid];
m10_1447 -> m10_1449  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1445 -> m10_1446  [key=0, style=solid];
m10_1445 -> m10_1445  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1448 -> m10_1444  [color=blue, key=0, style=bold];
m10_1843 -> m10_1844  [key=0, style=solid];
m10_1845 -> m10_13  [key=2, style=dotted];
m10_1845 -> m10_14  [key=2, style=dotted];
m10_1845 -> m10_1846  [key=0, style=solid];
m10_1845 -> m10_1847  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1845 -> m10_1848  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1845 -> m10_1849  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1845 -> m10_1850  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1845 -> m10_1851  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1845 -> m10_1852  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1845 -> m10_1853  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1845 -> m10_1854  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1855 -> m10_13  [key=2, style=dotted];
m10_1855 -> m10_14  [key=2, style=dotted];
m10_1855 -> m10_1856  [key=0, style=solid];
m10_1855 -> m10_1857  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1855 -> m10_1858  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1855 -> m10_1859  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1855 -> m10_1860  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1855 -> m10_1861  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1855 -> m10_1862  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1855 -> m10_1863  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1855 -> m10_1864  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1865 -> m10_13  [key=2, style=dotted];
m10_1865 -> m10_14  [key=2, style=dotted];
m10_1865 -> m10_1866  [key=0, style=solid];
m10_1865 -> m10_1867  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1865 -> m10_1868  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1865 -> m10_1869  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1865 -> m10_1870  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1865 -> m10_1871  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1865 -> m10_1872  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1865 -> m10_1873  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1865 -> m10_1874  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1875 -> m10_13  [key=2, style=dotted];
m10_1875 -> m10_14  [key=2, style=dotted];
m10_1875 -> m10_1876  [key=0, style=solid];
m10_1875 -> m10_1877  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1875 -> m10_1878  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1875 -> m10_1879  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1875 -> m10_1880  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1875 -> m10_1881  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1875 -> m10_1882  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1875 -> m10_1883  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1875 -> m10_1884  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1885 -> m10_13  [key=2, style=dotted];
m10_1885 -> m10_14  [key=2, style=dotted];
m10_1885 -> m10_1886  [key=0, style=solid];
m10_1885 -> m10_1887  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1885 -> m10_1888  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1885 -> m10_1889  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1885 -> m10_1890  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1885 -> m10_1891  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1885 -> m10_1892  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1885 -> m10_1893  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1885 -> m10_1894  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1847 -> m10_15  [key=2, style=dotted];
m10_1847 -> m10_16  [key=2, style=dotted];
m10_1847 -> m10_1848  [key=0, style=solid];
m10_1848 -> m10_15  [key=2, style=dotted];
m10_1848 -> m10_16  [key=2, style=dotted];
m10_1848 -> m10_1849  [key=0, style=solid];
m10_1851 -> m10_15  [key=2, style=dotted];
m10_1851 -> m10_16  [key=2, style=dotted];
m10_1851 -> m10_1852  [key=0, style=solid];
m10_1854 -> m10_15  [key=2, style=dotted];
m10_1854 -> m10_16  [key=2, style=dotted];
m10_1854 -> m10_1855  [key=0, style=solid];
m10_1857 -> m10_15  [key=2, style=dotted];
m10_1857 -> m10_16  [key=2, style=dotted];
m10_1857 -> m10_1858  [key=0, style=solid];
m10_1858 -> m10_15  [key=2, style=dotted];
m10_1858 -> m10_16  [key=2, style=dotted];
m10_1858 -> m10_1859  [key=0, style=solid];
m10_1861 -> m10_15  [key=2, style=dotted];
m10_1861 -> m10_16  [key=2, style=dotted];
m10_1861 -> m10_1862  [key=0, style=solid];
m10_1864 -> m10_15  [key=2, style=dotted];
m10_1864 -> m10_16  [key=2, style=dotted];
m10_1864 -> m10_1865  [key=0, style=solid];
m10_1867 -> m10_15  [key=2, style=dotted];
m10_1867 -> m10_16  [key=2, style=dotted];
m10_1867 -> m10_1868  [key=0, style=solid];
m10_1868 -> m10_15  [key=2, style=dotted];
m10_1868 -> m10_16  [key=2, style=dotted];
m10_1868 -> m10_1869  [key=0, style=solid];
m10_1871 -> m10_15  [key=2, style=dotted];
m10_1871 -> m10_16  [key=2, style=dotted];
m10_1871 -> m10_1872  [key=0, style=solid];
m10_1874 -> m10_15  [key=2, style=dotted];
m10_1874 -> m10_16  [key=2, style=dotted];
m10_1874 -> m10_1875  [key=0, style=solid];
m10_1877 -> m10_15  [key=2, style=dotted];
m10_1877 -> m10_16  [key=2, style=dotted];
m10_1877 -> m10_1878  [key=0, style=solid];
m10_1884 -> m10_15  [key=2, style=dotted];
m10_1884 -> m10_16  [key=2, style=dotted];
m10_1884 -> m10_1885  [key=0, style=solid];
m10_1887 -> m10_15  [key=2, style=dotted];
m10_1887 -> m10_16  [key=2, style=dotted];
m10_1887 -> m10_1888  [key=0, style=solid];
m10_1894 -> m10_15  [key=2, style=dotted];
m10_1894 -> m10_16  [key=2, style=dotted];
m10_1894 -> m10_1895  [key=0, style=solid];
m10_1849 -> m10_17  [key=2, style=dotted];
m10_1849 -> m10_1850  [key=0, style=solid];
m10_1849 -> m10_1896  [key=2, style=dotted];
m10_1850 -> m10_17  [key=2, style=dotted];
m10_1850 -> m10_1851  [key=0, style=solid];
m10_1852 -> m10_17  [key=2, style=dotted];
m10_1852 -> m10_1853  [key=0, style=solid];
m10_1852 -> m10_1896  [key=2, style=dotted];
m10_1853 -> m10_17  [key=2, style=dotted];
m10_1853 -> m10_1854  [key=0, style=solid];
m10_1859 -> m10_17  [key=2, style=dotted];
m10_1859 -> m10_1860  [key=0, style=solid];
m10_1859 -> m10_1897  [key=2, style=dotted];
m10_1860 -> m10_17  [key=2, style=dotted];
m10_1860 -> m10_1861  [key=0, style=solid];
m10_1862 -> m10_17  [key=2, style=dotted];
m10_1862 -> m10_1863  [key=0, style=solid];
m10_1862 -> m10_1897  [key=2, style=dotted];
m10_1863 -> m10_17  [key=2, style=dotted];
m10_1863 -> m10_1864  [key=0, style=solid];
m10_1869 -> m10_17  [key=2, style=dotted];
m10_1869 -> m10_1870  [key=0, style=solid];
m10_1870 -> m10_17  [key=2, style=dotted];
m10_1870 -> m10_1871  [key=0, style=solid];
m10_1872 -> m10_17  [key=2, style=dotted];
m10_1872 -> m10_1873  [key=0, style=solid];
m10_1873 -> m10_17  [key=2, style=dotted];
m10_1873 -> m10_1874  [key=0, style=solid];
m10_1879 -> m10_17  [key=2, style=dotted];
m10_1879 -> m10_1880  [key=0, style=solid];
m10_1879 -> m10_1897  [key=2, style=dotted];
m10_1880 -> m10_17  [key=2, style=dotted];
m10_1880 -> m10_1881  [key=0, style=solid];
m10_1882 -> m10_17  [key=2, style=dotted];
m10_1882 -> m10_1883  [key=0, style=solid];
m10_1882 -> m10_1897  [key=2, style=dotted];
m10_1883 -> m10_17  [key=2, style=dotted];
m10_1883 -> m10_1884  [key=0, style=solid];
m10_1889 -> m10_17  [key=2, style=dotted];
m10_1889 -> m10_1890  [key=0, style=solid];
m10_1889 -> m10_1896  [key=2, style=dotted];
m10_1890 -> m10_17  [key=2, style=dotted];
m10_1890 -> m10_1891  [key=0, style=solid];
m10_1892 -> m10_17  [key=2, style=dotted];
m10_1892 -> m10_1893  [key=0, style=solid];
m10_1892 -> m10_1896  [key=2, style=dotted];
m10_1893 -> m10_17  [key=2, style=dotted];
m10_1893 -> m10_1894  [key=0, style=solid];
m10_1844 -> m10_1845  [key=0, style=solid];
m10_1844 -> m10_1855  [color=darkseagreen4, key=1, label=json, style=dashed];
m10_1844 -> m10_1865  [color=darkseagreen4, key=1, label=json, style=dashed];
m10_1844 -> m10_1875  [color=darkseagreen4, key=1, label=json, style=dashed];
m10_1844 -> m10_1885  [color=darkseagreen4, key=1, label=json, style=dashed];
m10_1844 -> m10_1844  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1846 -> m10_1847  [key=0, style=solid];
m10_1856 -> m10_1857  [key=0, style=solid];
m10_1866 -> m10_1867  [key=0, style=solid];
m10_1876 -> m10_1877  [key=0, style=solid];
m10_1878 -> m10_1879  [key=0, style=solid];
m10_1878 -> m10_1068  [key=2, style=dotted];
m10_1881 -> m10_1882  [key=0, style=solid];
m10_1881 -> m10_1068  [key=2, style=dotted];
m10_1886 -> m10_1887  [key=0, style=solid];
m10_1888 -> m10_1889  [key=0, style=solid];
m10_1888 -> m10_1898  [key=2, style=dotted];
m10_1891 -> m10_1892  [key=0, style=solid];
m10_1891 -> m10_1898  [key=2, style=dotted];
m10_1895 -> m10_1843  [color=blue, key=0, style=bold];
m10_1379 -> m10_1380  [key=0, style=solid];
m10_1381 -> m10_13  [key=2, style=dotted];
m10_1381 -> m10_14  [key=2, style=dotted];
m10_1381 -> m10_1382  [key=0, style=solid];
m10_1381 -> m10_1383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1381 -> m10_1384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1381 -> m10_1385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1381 -> m10_1386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1382 -> m10_15  [key=2, style=dotted];
m10_1382 -> m10_16  [key=2, style=dotted];
m10_1382 -> m10_1383  [key=0, style=solid];
m10_1385 -> m10_15  [key=2, style=dotted];
m10_1385 -> m10_16  [key=2, style=dotted];
m10_1385 -> m10_1386  [key=0, style=solid];
m10_1383 -> m10_17  [key=2, style=dotted];
m10_1383 -> m10_1384  [key=0, style=solid];
m10_1384 -> m10_17  [key=2, style=dotted];
m10_1384 -> m10_1385  [key=0, style=solid];
m10_1386 -> m10_17  [key=2, style=dotted];
m10_1386 -> m10_1387  [key=0, style=solid];
m10_1380 -> m10_1381  [key=0, style=solid];
m10_1380 -> m10_1380  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1387 -> m10_1379  [color=blue, key=0, style=bold];
m10_978 -> m10_979  [key=0, style=solid];
m10_980 -> m10_13  [key=2, style=dotted];
m10_980 -> m10_981  [key=0, style=solid];
m10_980 -> m10_982  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_983  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_984  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_985  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_986  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_987  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_988  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_989  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_990  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_991  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_992  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_993  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_980 -> m10_994  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_979 -> m10_14  [key=2, style=dotted];
m10_979 -> m10_980  [key=0, style=solid];
m10_981 -> m10_15  [key=2, style=dotted];
m10_981 -> m10_16  [key=2, style=dotted];
m10_981 -> m10_982  [key=0, style=solid];
m10_983 -> m10_15  [key=2, style=dotted];
m10_983 -> m10_16  [key=2, style=dotted];
m10_983 -> m10_984  [key=0, style=solid];
m10_986 -> m10_15  [key=2, style=dotted];
m10_986 -> m10_16  [key=2, style=dotted];
m10_986 -> m10_987  [key=0, style=solid];
m10_989 -> m10_15  [key=2, style=dotted];
m10_989 -> m10_16  [key=2, style=dotted];
m10_989 -> m10_990  [key=0, style=solid];
m10_992 -> m10_15  [key=2, style=dotted];
m10_992 -> m10_16  [key=2, style=dotted];
m10_992 -> m10_993  [key=0, style=solid];
m10_994 -> m10_15  [key=2, style=dotted];
m10_994 -> m10_995  [key=0, style=solid];
m10_994 -> m10_131  [key=2, style=dotted];
m10_982 -> m10_17  [key=2, style=dotted];
m10_982 -> m10_983  [key=0, style=solid];
m10_984 -> m10_17  [key=2, style=dotted];
m10_984 -> m10_985  [key=0, style=solid];
m10_985 -> m10_17  [key=2, style=dotted];
m10_985 -> m10_986  [key=0, style=solid];
m10_987 -> m10_17  [key=2, style=dotted];
m10_987 -> m10_988  [key=0, style=solid];
m10_988 -> m10_17  [key=2, style=dotted];
m10_988 -> m10_989  [key=0, style=solid];
m10_990 -> m10_17  [key=2, style=dotted];
m10_990 -> m10_991  [key=0, style=solid];
m10_991 -> m10_17  [key=2, style=dotted];
m10_991 -> m10_992  [key=0, style=solid];
m10_993 -> m10_17  [key=2, style=dotted];
m10_993 -> m10_994  [key=0, style=solid];
m10_995 -> m10_978  [color=blue, key=0, style=bold];
m10_388 -> m10_389  [key=0, style=solid];
m10_388 -> m10_403  [key=2, style=dotted];
m10_388 -> m10_54  [key=2, style=dotted];
m10_562 -> m10_563  [key=0, style=solid];
m10_562 -> m10_565  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_562 -> m10_566  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_562 -> m10_567  [color=darkseagreen4, key=1, label=json, style=dashed];
m10_563 -> m10_564  [key=0, style=solid];
m10_563 -> m10_566  [color=darkseagreen4, key=1, label=count, style=dashed];
m10_563 -> m10_373  [color=darkorchid, key=3, label="Local variable int count", style=bold];
m10_565 -> m10_567  [key=0, style=solid];
m10_565 -> m10_569  [key=2, style=dotted];
m10_565 -> m10_566  [key=0, style=solid];
m10_565 -> m10_604  [key=2, style=dotted];
m10_566 -> m10_567  [key=0, style=solid];
m10_566 -> m10_570  [key=2, style=dotted];
m10_566 -> m10_565  [key=0, style=solid];
m10_566 -> m10_566  [color=darkseagreen4, key=1, label=count, style=dashed];
m10_564 -> m10_565  [key=0, style=solid];
m10_564 -> m10_566  [key=0, style=solid];
m10_564 -> m10_14  [key=2, style=dotted];
m10_567 -> m10_568  [key=0, style=solid];
m10_567 -> m10_13  [key=2, style=dotted];
m10_567 -> m10_116  [key=2, style=dotted];
m10_567 -> m10_157  [key=2, style=dotted];
m10_567 -> m10_158  [key=2, style=dotted];
m10_567 -> m10_569  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_570  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_571  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_572  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_573  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_574  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_575  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_576  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_577  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_578  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_579  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_580  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_581  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_582  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_583  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_584  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_585  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_586  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_587  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_588  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_589  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_590  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_591  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_592  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_593  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_594  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_595  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_596  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_597  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_598  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_599  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_600  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_601  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_567 -> m10_602  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_568 -> m10_562  [color=blue, key=0, style=bold];
m10_568 -> m10_15  [key=2, style=dotted];
m10_568 -> m10_16  [key=2, style=dotted];
m10_568 -> m10_569  [key=0, style=solid];
m10_366 -> m10_367  [key=0, style=solid];
m10_366 -> m10_398  [key=0, style=solid];
m10_366 -> m10_124  [key=2, style=dotted];
m10_366 -> m10_372  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m10_366 -> m10_373  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m10_366 -> m10_374  [color=darkseagreen4, key=1, label=baseType, style=dashed];
m10_1664 -> m10_1665  [key=0, style=solid];
m10_1666 -> m10_13  [key=2, style=dotted];
m10_1666 -> m10_1667  [key=0, style=solid];
m10_1666 -> m10_116  [key=2, style=dotted];
m10_1666 -> m10_157  [key=2, style=dotted];
m10_1666 -> m10_158  [key=2, style=dotted];
m10_1666 -> m10_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1667 -> m10_18  [key=2, style=dotted];
m10_1667 -> m10_1668  [key=0, style=solid];
m10_1667 -> m10_1669  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1665 -> m10_1666  [key=0, style=solid];
m10_1665 -> m10_1665  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1668 -> m10_1664  [color=blue, key=0, style=bold];
m10_1227 -> m10_1228  [key=0, style=solid];
m10_1229 -> m10_13  [key=2, style=dotted];
m10_1229 -> m10_14  [key=2, style=dotted];
m10_1229 -> m10_1230  [key=0, style=solid];
m10_1229 -> m10_1231  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1229 -> m10_1232  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1229 -> m10_1233  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1229 -> m10_1234  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1229 -> m10_1235  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1229 -> m10_1236  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1229 -> m10_1237  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1229 -> m10_1238  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1229 -> m10_1240  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1229 -> m10_1241  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1231 -> m10_15  [key=2, style=dotted];
m10_1231 -> m10_16  [key=2, style=dotted];
m10_1231 -> m10_1232  [key=0, style=solid];
m10_1233 -> m10_15  [key=2, style=dotted];
m10_1233 -> m10_16  [key=2, style=dotted];
m10_1233 -> m10_1234  [key=0, style=solid];
m10_1240 -> m10_15  [key=2, style=dotted];
m10_1240 -> m10_16  [key=2, style=dotted];
m10_1240 -> m10_1241  [key=0, style=solid];
m10_1232 -> m10_17  [key=2, style=dotted];
m10_1232 -> m10_1233  [key=0, style=solid];
m10_1234 -> m10_17  [key=2, style=dotted];
m10_1234 -> m10_1235  [key=0, style=solid];
m10_1236 -> m10_17  [key=2, style=dotted];
m10_1236 -> m10_1237  [key=0, style=solid];
m10_1237 -> m10_17  [key=2, style=dotted];
m10_1237 -> m10_1238  [key=0, style=solid];
m10_1241 -> m10_17  [key=2, style=dotted];
m10_1241 -> m10_1242  [key=0, style=solid];
m10_1239 -> m10_17  [key=2, style=dotted];
m10_1239 -> m10_1240  [key=0, style=solid];
m10_1239 -> m10_1239  [color=darkseagreen4, key=1, label=dt, style=dashed];
m10_1239 -> m10_1226  [key=2, style=dotted];
m10_1228 -> m10_1229  [key=0, style=solid];
m10_1228 -> m10_1228  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1230 -> m10_1231  [key=0, style=solid];
m10_1230 -> m10_1243  [key=2, style=dotted];
m10_1235 -> m10_1236  [key=0, style=solid];
m10_1235 -> m10_1068  [key=2, style=dotted];
m10_1238 -> m10_1239  [key=0, style=solid];
m10_1242 -> m10_1227  [color=blue, key=0, style=bold];
m10_115 -> m10_163  [key=0, style=solid];
m10_115 -> m10_166  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_115 -> m10_175  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_115 -> m10_177  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_115 -> m10_181  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_115 -> m10_207  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m10_115 -> m10_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m10_115 -> m10_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m10_115 -> m10_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m10_1156 -> m10_1157  [key=0, style=solid];
m10_1158 -> m10_13  [key=2, style=dotted];
m10_1158 -> m10_14  [key=2, style=dotted];
m10_1158 -> m10_1159  [key=0, style=solid];
m10_1158 -> m10_1160  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1158 -> m10_1161  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1158 -> m10_1162  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1158 -> m10_1163  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1158 -> m10_1164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1158 -> m10_1165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1158 -> m10_1166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1158 -> m10_1167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1158 -> m10_1168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1159 -> m10_15  [key=2, style=dotted];
m10_1159 -> m10_16  [key=2, style=dotted];
m10_1159 -> m10_1160  [key=0, style=solid];
m10_1161 -> m10_15  [key=2, style=dotted];
m10_1161 -> m10_16  [key=2, style=dotted];
m10_1161 -> m10_1162  [key=0, style=solid];
m10_1167 -> m10_15  [key=2, style=dotted];
m10_1167 -> m10_16  [key=2, style=dotted];
m10_1167 -> m10_1168  [key=0, style=solid];
m10_1160 -> m10_17  [key=2, style=dotted];
m10_1160 -> m10_1161  [key=0, style=solid];
m10_1162 -> m10_17  [key=2, style=dotted];
m10_1162 -> m10_1163  [key=0, style=solid];
m10_1164 -> m10_17  [key=2, style=dotted];
m10_1164 -> m10_1165  [key=0, style=solid];
m10_1165 -> m10_17  [key=2, style=dotted];
m10_1165 -> m10_1166  [key=0, style=solid];
m10_1166 -> m10_17  [key=2, style=dotted];
m10_1166 -> m10_1167  [key=0, style=solid];
m10_1166 -> m10_1153  [key=2, style=dotted];
m10_1166 -> m10_1154  [key=2, style=dotted];
m10_1166 -> m10_1155  [key=2, style=dotted];
m10_1168 -> m10_17  [key=2, style=dotted];
m10_1168 -> m10_1169  [key=0, style=solid];
m10_1157 -> m10_1158  [key=0, style=solid];
m10_1157 -> m10_1157  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1163 -> m10_1164  [key=0, style=solid];
m10_1163 -> m10_1068  [key=2, style=dotted];
m10_1169 -> m10_1156  [color=blue, key=0, style=bold];
m10_1284 -> m10_1285  [key=0, style=solid];
m10_1285 -> m10_13  [key=2, style=dotted];
m10_1285 -> m10_14  [key=2, style=dotted];
m10_1285 -> m10_1286  [key=0, style=solid];
m10_1285 -> m10_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1286 -> m10_18  [key=2, style=dotted];
m10_1286 -> m10_1287  [key=0, style=solid];
m10_1286 -> m10_1288  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1287 -> m10_1284  [color=blue, key=0, style=bold];
m10_157 -> m10_1971  [key=0, style=solid];
m10_202 -> m10_17  [key=2, style=dotted];
m10_202 -> m10_203  [key=0, style=solid];
m10_1212 -> m10_1213  [key=0, style=solid];
m10_1214 -> m10_13  [key=2, style=dotted];
m10_1214 -> m10_14  [key=2, style=dotted];
m10_1214 -> m10_1215  [key=0, style=solid];
m10_1214 -> m10_1216  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1214 -> m10_1217  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1214 -> m10_1218  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1214 -> m10_1219  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1214 -> m10_1220  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1214 -> m10_1221  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1214 -> m10_1222  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1214 -> m10_1223  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1214 -> m10_1224  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1215 -> m10_15  [key=2, style=dotted];
m10_1215 -> m10_16  [key=2, style=dotted];
m10_1215 -> m10_1216  [key=0, style=solid];
m10_1217 -> m10_15  [key=2, style=dotted];
m10_1217 -> m10_16  [key=2, style=dotted];
m10_1217 -> m10_1218  [key=0, style=solid];
m10_1223 -> m10_15  [key=2, style=dotted];
m10_1223 -> m10_16  [key=2, style=dotted];
m10_1223 -> m10_1224  [key=0, style=solid];
m10_1216 -> m10_17  [key=2, style=dotted];
m10_1216 -> m10_1217  [key=0, style=solid];
m10_1218 -> m10_17  [key=2, style=dotted];
m10_1218 -> m10_1219  [key=0, style=solid];
m10_1220 -> m10_17  [key=2, style=dotted];
m10_1220 -> m10_1221  [key=0, style=solid];
m10_1221 -> m10_17  [key=2, style=dotted];
m10_1221 -> m10_1222  [key=0, style=solid];
m10_1222 -> m10_17  [key=2, style=dotted];
m10_1222 -> m10_1223  [key=0, style=solid];
m10_1222 -> m10_1153  [key=2, style=dotted];
m10_1222 -> m10_1226  [key=2, style=dotted];
m10_1224 -> m10_17  [key=2, style=dotted];
m10_1224 -> m10_1225  [key=0, style=solid];
m10_1213 -> m10_1214  [key=0, style=solid];
m10_1213 -> m10_1213  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1219 -> m10_1220  [key=0, style=solid];
m10_1219 -> m10_1068  [key=2, style=dotted];
m10_1225 -> m10_1212  [color=blue, key=0, style=bold];
m10_570 -> m10_15  [key=2, style=dotted];
m10_570 -> m10_16  [key=2, style=dotted];
m10_570 -> m10_571  [key=0, style=solid];
m10_588 -> m10_15  [key=2, style=dotted];
m10_588 -> m10_16  [key=2, style=dotted];
m10_588 -> m10_589  [key=0, style=solid];
m10_588 -> m10_660  [key=0, style=solid];
m10_199 -> m10_200  [key=0, style=solid];
m10_199 -> m10_199  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m10_248 -> m10_15  [key=2, style=dotted];
m10_248 -> m10_249  [key=0, style=solid];
m10_248 -> m10_131  [key=2, style=dotted];
m10_1899 -> m10_1900  [key=0, style=solid];
m10_1901 -> m10_13  [key=2, style=dotted];
m10_1901 -> m10_1902  [key=0, style=solid];
m10_1901 -> m10_1904  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1922  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1905  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1925  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1907  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1908  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1910  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1928  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1912  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1913  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1915  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1931  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1916  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1934  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1917  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1901 -> m10_1937  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1900 -> m10_14  [key=2, style=dotted];
m10_1900 -> m10_1901  [key=0, style=solid];
m10_1900 -> m10_1920  [key=2, style=dotted];
m10_1900 -> m10_1903  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m10_1900 -> m10_1906  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m10_1900 -> m10_1909  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m10_1900 -> m10_1911  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m10_1900 -> m10_1914  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m10_1900 -> m10_1918  [color=darkseagreen4, key=1, label=toggleReaderError, style=dashed];
m10_1902 -> m10_15  [key=2, style=dotted];
m10_1902 -> m10_16  [key=2, style=dotted];
m10_1902 -> m10_1903  [key=0, style=solid];
m10_1907 -> m10_15  [key=2, style=dotted];
m10_1907 -> m10_16  [key=2, style=dotted];
m10_1907 -> m10_1908  [key=0, style=solid];
m10_1912 -> m10_15  [key=2, style=dotted];
m10_1912 -> m10_16  [key=2, style=dotted];
m10_1912 -> m10_1913  [key=0, style=solid];
m10_1908 -> m10_17  [key=2, style=dotted];
m10_1908 -> m10_1909  [key=0, style=solid];
m10_1913 -> m10_17  [key=2, style=dotted];
m10_1913 -> m10_1914  [key=0, style=solid];
m10_1904 -> m10_18  [key=2, style=dotted];
m10_1904 -> m10_1905  [key=0, style=solid];
m10_1904 -> m10_1921  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1905 -> m10_18  [key=2, style=dotted];
m10_1905 -> m10_1906  [key=0, style=solid];
m10_1905 -> m10_1924  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1910 -> m10_18  [key=2, style=dotted];
m10_1910 -> m10_1911  [key=0, style=solid];
m10_1910 -> m10_1927  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1915 -> m10_18  [key=2, style=dotted];
m10_1915 -> m10_1916  [key=0, style=solid];
m10_1915 -> m10_1930  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1916 -> m10_18  [key=2, style=dotted];
m10_1916 -> m10_1917  [key=0, style=solid];
m10_1916 -> m10_1933  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1917 -> m10_18  [key=2, style=dotted];
m10_1917 -> m10_1918  [key=0, style=solid];
m10_1917 -> m10_1936  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1903 -> m10_1904  [key=0, style=solid];
m10_1906 -> m10_1907  [key=0, style=solid];
m10_1909 -> m10_1910  [key=0, style=solid];
m10_1911 -> m10_1912  [key=0, style=solid];
m10_1914 -> m10_1915  [key=0, style=solid];
m10_1918 -> m10_1919  [key=0, style=solid];
m10_1919 -> m10_1899  [color=blue, key=0, style=bold];
m10_1017 -> m10_1018  [key=0, style=solid];
m10_1019 -> m10_13  [key=2, style=dotted];
m10_1019 -> m10_1020  [key=0, style=solid];
m10_1019 -> m10_1021  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1022  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1023  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1024  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1025  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1026  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1027  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1028  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1029  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1030  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1031  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1032  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1033  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1034  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1035  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1019 -> m10_1036  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m10_1018 -> m10_14  [key=2, style=dotted];
m10_1018 -> m10_1019  [key=0, style=solid];
m10_1020 -> m10_15  [key=2, style=dotted];
m10_1020 -> m10_16  [key=2, style=dotted];
m10_1020 -> m10_1021  [key=0, style=solid];
m10_1034 -> m10_15  [key=2, style=dotted];
m10_1034 -> m10_16  [key=2, style=dotted];
m10_1034 -> m10_1035  [key=0, style=solid];
m10_1036 -> m10_15  [key=2, style=dotted];
m10_1036 -> m10_1037  [key=0, style=solid];
m10_1036 -> m10_131  [key=2, style=dotted];
m10_1021 -> m10_17  [key=2, style=dotted];
m10_1021 -> m10_1022  [key=0, style=solid];
m10_1023 -> m10_17  [key=2, style=dotted];
m10_1023 -> m10_1024  [key=0, style=solid];
m10_1024 -> m10_17  [key=2, style=dotted];
m10_1024 -> m10_1025  [key=0, style=solid];
m10_1025 -> m10_17  [key=2, style=dotted];
m10_1025 -> m10_1026  [key=0, style=solid];
m10_1027 -> m10_17  [key=2, style=dotted];
m10_1027 -> m10_1028  [key=0, style=solid];
m10_1028 -> m10_17  [key=2, style=dotted];
m10_1028 -> m10_1029  [key=0, style=solid];
m10_1029 -> m10_17  [key=2, style=dotted];
m10_1029 -> m10_1030  [key=0, style=solid];
m10_1031 -> m10_17  [key=2, style=dotted];
m10_1031 -> m10_1032  [key=0, style=solid];
m10_1032 -> m10_17  [key=2, style=dotted];
m10_1032 -> m10_1033  [key=0, style=solid];
m10_1033 -> m10_17  [key=2, style=dotted];
m10_1033 -> m10_1034  [key=0, style=solid];
m10_1035 -> m10_17  [key=2, style=dotted];
m10_1035 -> m10_1036  [key=0, style=solid];
m10_1022 -> m10_1023  [key=0, style=solid];
m10_1022 -> m10_451  [key=2, style=dotted];
m10_1026 -> m10_1027  [key=0, style=solid];
m10_1026 -> m10_451  [key=2, style=dotted];
m10_1030 -> m10_1031  [key=0, style=solid];
m10_1030 -> m10_451  [key=2, style=dotted];
m10_1037 -> m10_1017  [color=blue, key=0, style=bold];
m10_229 -> m10_17  [key=2, style=dotted];
m10_229 -> m10_230  [key=0, style=solid];
m10_725 -> m10_726  [key=0, style=solid];
m10_727 -> m10_13  [key=2, style=dotted];
m10_727 -> m10_14  [key=2, style=dotted];
m10_727 -> m10_728  [key=0, style=solid];
m10_729 -> m10_13  [key=2, style=dotted];
m10_729 -> m10_14  [key=2, style=dotted];
m10_729 -> m10_730  [key=0, style=solid];
m10_731 -> m10_13  [key=2, style=dotted];
m10_731 -> m10_14  [key=2, style=dotted];
m10_731 -> m10_732  [key=0, style=solid];
m10_733 -> m10_13  [key=2, style=dotted];
m10_733 -> m10_14  [key=2, style=dotted];
m10_733 -> m10_734  [key=0, style=solid];
m10_735 -> m10_13  [key=2, style=dotted];
m10_735 -> m10_14  [key=2, style=dotted];
m10_735 -> m10_736  [key=0, style=solid];
m10_735 -> m10_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_737 -> m10_13  [key=2, style=dotted];
m10_737 -> m10_14  [key=2, style=dotted];
m10_737 -> m10_738  [key=0, style=solid];
m10_737 -> m10_739  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_737 -> m10_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_740 -> m10_13  [key=2, style=dotted];
m10_740 -> m10_14  [key=2, style=dotted];
m10_740 -> m10_741  [key=0, style=solid];
m10_742 -> m10_13  [key=2, style=dotted];
m10_742 -> m10_14  [key=2, style=dotted];
m10_742 -> m10_743  [key=0, style=solid];
m10_744 -> m10_13  [key=2, style=dotted];
m10_744 -> m10_14  [key=2, style=dotted];
m10_744 -> m10_745  [key=0, style=solid];
m10_744 -> m10_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_728 -> m10_17  [key=2, style=dotted];
m10_728 -> m10_729  [key=0, style=solid];
m10_728 -> m10_747  [key=2, style=dotted];
m10_730 -> m10_17  [key=2, style=dotted];
m10_730 -> m10_731  [key=0, style=solid];
m10_730 -> m10_747  [key=2, style=dotted];
m10_732 -> m10_17  [key=2, style=dotted];
m10_732 -> m10_733  [key=0, style=solid];
m10_732 -> m10_747  [key=2, style=dotted];
m10_734 -> m10_17  [key=2, style=dotted];
m10_734 -> m10_735  [key=0, style=solid];
m10_734 -> m10_747  [key=2, style=dotted];
m10_741 -> m10_17  [key=2, style=dotted];
m10_741 -> m10_742  [key=0, style=solid];
m10_741 -> m10_747  [key=2, style=dotted];
m10_743 -> m10_17  [key=2, style=dotted];
m10_743 -> m10_744  [key=0, style=solid];
m10_743 -> m10_747  [key=2, style=dotted];
m10_736 -> m10_18  [key=2, style=dotted];
m10_736 -> m10_737  [key=0, style=solid];
m10_736 -> m10_748  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_739 -> m10_18  [key=2, style=dotted];
m10_739 -> m10_740  [key=0, style=solid];
m10_739 -> m10_751  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_745 -> m10_18  [key=2, style=dotted];
m10_745 -> m10_746  [key=0, style=solid];
m10_745 -> m10_754  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_726 -> m10_727  [key=0, style=solid];
m10_726 -> m10_682  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.JsonTextReader reader", style=bold];
m10_738 -> m10_739  [key=0, style=solid];
m10_746 -> m10_725  [color=blue, key=0, style=bold];
m10_234 -> m10_15  [key=2, style=dotted];
m10_234 -> m10_235  [key=0, style=solid];
m10_212 -> m10_17  [key=2, style=dotted];
m10_212 -> m10_213  [key=0, style=solid];
m10_216 -> m10_17  [key=2, style=dotted];
m10_216 -> m10_217  [key=0, style=solid];
m10_230 -> m10_17  [key=2, style=dotted];
m10_230 -> m10_231  [key=0, style=solid];
m10_230 -> m10_232  [color=crimson, key=0, style=bold];
m10_231 -> m10_17  [key=2, style=dotted];
m10_231 -> m10_232  [key=0, style=solid];
m10_231 -> m10_233  [key=0, style=solid];
m10_232 -> m10_17  [key=2, style=dotted];
m10_232 -> m10_233  [key=0, style=solid];
m10_232 -> m10_231  [key=0, style=solid];
m10_232 -> m10_234  [key=2, style=dotted];
m10_232 -> m10_232  [color=darkseagreen4, key=1, label=item, style=dashed];
m10_233 -> m10_17  [key=2, style=dotted];
m10_233 -> m10_234  [key=0, style=solid];
m10_233 -> m10_230  [color=blue, key=0, style=bold];
m10_235 -> m10_17  [key=2, style=dotted];
m10_235 -> m10_236  [key=0, style=solid];
m10_236 -> m10_17  [key=2, style=dotted];
m10_236 -> m10_237  [key=0, style=solid];
m10_236 -> m10_230  [key=2, style=dotted];
m10_237 -> m10_17  [key=2, style=dotted];
m10_237 -> m10_238  [key=0, style=solid];
m10_237 -> m10_235  [color=blue, key=0, style=bold];
m10_249 -> m10_198  [color=blue, key=0, style=bold];
m10_163 -> m10_159  [color=blue, key=0, style=bold];
m10_163 -> m10_164  [key=0, style=solid];
m10_163 -> m10_191  [key=2, style=dotted];
m10_163 -> m10_176  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m10_163 -> m10_183  [color=darkseagreen4, key=1, label=extensionDataAttribute, style=dashed];
m10_1348 -> m10_1349  [key=0, style=solid];
m10_1350 -> m10_13  [key=2, style=dotted];
m10_1350 -> m10_14  [key=2, style=dotted];
m10_1350 -> m10_1351  [key=0, style=solid];
m10_1350 -> m10_1353  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1350 -> m10_1355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1350 -> m10_1356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1353 -> m10_15  [key=2, style=dotted];
m10_1353 -> m10_1354  [key=0, style=solid];
m10_1355 -> m10_15  [key=2, style=dotted];
m10_1355 -> m10_16  [key=2, style=dotted];
m10_1355 -> m10_1356  [key=0, style=solid];
m10_1356 -> m10_17  [key=2, style=dotted];
m10_1356 -> m10_1357  [key=0, style=solid];
m10_1356 -> m10_1358  [key=2, style=dotted];
m10_1349 -> m10_1350  [key=0, style=solid];
m10_1349 -> m10_1349  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1351 -> m10_1352  [key=0, style=solid];
m10_1351 -> m10_1354  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_1351 -> m10_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m10_1352 -> m10_1353  [key=0, style=solid];
m10_1352 -> m10_1355  [key=0, style=solid];
m10_1354 -> m10_1352  [key=0, style=solid];
m10_1354 -> m10_1354  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_1357 -> m10_1348  [color=blue, key=0, style=bold];
m10_1767 -> m10_1768  [key=0, style=solid];
m10_1769 -> m10_13  [key=2, style=dotted];
m10_1769 -> m10_14  [key=2, style=dotted];
m10_1769 -> m10_1770  [key=0, style=solid];
m10_1769 -> m10_1771  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1772  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1797  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1773  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1774  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1775  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1776  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1777  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1778  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1779  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1780  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1781  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1782  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1783  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1784  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1785  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1786  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1788  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1789  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1791  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1792  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1793  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1769 -> m10_1794  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1770 -> m10_15  [key=2, style=dotted];
m10_1770 -> m10_16  [key=2, style=dotted];
m10_1770 -> m10_1771  [key=0, style=solid];
m10_1774 -> m10_15  [key=2, style=dotted];
m10_1774 -> m10_16  [key=2, style=dotted];
m10_1774 -> m10_1775  [key=0, style=solid];
m10_1776 -> m10_15  [key=2, style=dotted];
m10_1776 -> m10_16  [key=2, style=dotted];
m10_1776 -> m10_1777  [key=0, style=solid];
m10_1778 -> m10_15  [key=2, style=dotted];
m10_1778 -> m10_16  [key=2, style=dotted];
m10_1778 -> m10_1779  [key=0, style=solid];
m10_1780 -> m10_15  [key=2, style=dotted];
m10_1780 -> m10_16  [key=2, style=dotted];
m10_1780 -> m10_1781  [key=0, style=solid];
m10_1782 -> m10_15  [key=2, style=dotted];
m10_1782 -> m10_16  [key=2, style=dotted];
m10_1782 -> m10_1783  [key=0, style=solid];
m10_1786 -> m10_15  [key=2, style=dotted];
m10_1786 -> m10_16  [key=2, style=dotted];
m10_1786 -> m10_1787  [key=0, style=solid];
m10_1788 -> m10_15  [key=2, style=dotted];
m10_1788 -> m10_16  [key=2, style=dotted];
m10_1788 -> m10_1789  [key=0, style=solid];
m10_1790 -> m10_15  [key=2, style=dotted];
m10_1790 -> m10_16  [key=2, style=dotted];
m10_1790 -> m10_1791  [key=0, style=solid];
m10_1792 -> m10_15  [key=2, style=dotted];
m10_1792 -> m10_16  [key=2, style=dotted];
m10_1792 -> m10_1793  [key=0, style=solid];
m10_1794 -> m10_15  [key=2, style=dotted];
m10_1794 -> m10_1795  [key=0, style=solid];
m10_1794 -> m10_131  [key=2, style=dotted];
m10_1771 -> m10_17  [key=2, style=dotted];
m10_1771 -> m10_1772  [key=0, style=solid];
m10_1773 -> m10_17  [key=2, style=dotted];
m10_1773 -> m10_1774  [key=0, style=solid];
m10_1775 -> m10_17  [key=2, style=dotted];
m10_1775 -> m10_1776  [key=0, style=solid];
m10_1777 -> m10_17  [key=2, style=dotted];
m10_1777 -> m10_1778  [key=0, style=solid];
m10_1779 -> m10_17  [key=2, style=dotted];
m10_1779 -> m10_1780  [key=0, style=solid];
m10_1781 -> m10_17  [key=2, style=dotted];
m10_1781 -> m10_1782  [key=0, style=solid];
m10_1783 -> m10_17  [key=2, style=dotted];
m10_1783 -> m10_1784  [key=0, style=solid];
m10_1785 -> m10_17  [key=2, style=dotted];
m10_1785 -> m10_1786  [key=0, style=solid];
m10_1787 -> m10_17  [key=2, style=dotted];
m10_1787 -> m10_1788  [key=0, style=solid];
m10_1789 -> m10_17  [key=2, style=dotted];
m10_1789 -> m10_1790  [key=0, style=solid];
m10_1791 -> m10_17  [key=2, style=dotted];
m10_1791 -> m10_1792  [key=0, style=solid];
m10_1793 -> m10_17  [key=2, style=dotted];
m10_1793 -> m10_1794  [key=0, style=solid];
m10_1768 -> m10_1769  [key=0, style=solid];
m10_1768 -> m10_1768  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1772 -> m10_1773  [key=0, style=solid];
m10_1772 -> m10_1504  [key=2, style=dotted];
m10_1772 -> m10_1796  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1784 -> m10_1785  [key=0, style=solid];
m10_1784 -> m10_1504  [key=2, style=dotted];
m10_1784 -> m10_1799  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1795 -> m10_1767  [color=blue, key=0, style=bold];
m10_1319 -> m10_1320  [key=0, style=solid];
m10_1321 -> m10_13  [key=2, style=dotted];
m10_1321 -> m10_14  [key=2, style=dotted];
m10_1321 -> m10_1322  [key=0, style=solid];
m10_1321 -> m10_1323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1321 -> m10_1324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1321 -> m10_1325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1321 -> m10_1326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1321 -> m10_1327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1321 -> m10_1328  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1321 -> m10_1330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1321 -> m10_1331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1322 -> m10_15  [key=2, style=dotted];
m10_1322 -> m10_16  [key=2, style=dotted];
m10_1322 -> m10_1323  [key=0, style=solid];
m10_1324 -> m10_15  [key=2, style=dotted];
m10_1324 -> m10_16  [key=2, style=dotted];
m10_1324 -> m10_1325  [key=0, style=solid];
m10_1330 -> m10_15  [key=2, style=dotted];
m10_1330 -> m10_16  [key=2, style=dotted];
m10_1330 -> m10_1331  [key=0, style=solid];
m10_1323 -> m10_17  [key=2, style=dotted];
m10_1323 -> m10_1324  [key=0, style=solid];
m10_1325 -> m10_17  [key=2, style=dotted];
m10_1325 -> m10_1326  [key=0, style=solid];
m10_1327 -> m10_17  [key=2, style=dotted];
m10_1327 -> m10_1328  [key=0, style=solid];
m10_1328 -> m10_17  [key=2, style=dotted];
m10_1328 -> m10_1329  [key=0, style=solid];
m10_1331 -> m10_17  [key=2, style=dotted];
m10_1331 -> m10_1332  [key=0, style=solid];
m10_1329 -> m10_17  [key=2, style=dotted];
m10_1329 -> m10_1330  [key=0, style=solid];
m10_1320 -> m10_1321  [key=0, style=solid];
m10_1320 -> m10_1320  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1326 -> m10_1327  [key=0, style=solid];
m10_1326 -> m10_1329  [color=darkseagreen4, key=1, label=d, style=dashed];
m10_1326 -> m10_747  [key=2, style=dotted];
m10_1332 -> m10_1319  [color=blue, key=0, style=bold];
m10_1491 -> m10_1492  [key=0, style=solid];
m10_1493 -> m10_13  [key=2, style=dotted];
m10_1493 -> m10_14  [key=2, style=dotted];
m10_1493 -> m10_1494  [key=0, style=solid];
m10_1493 -> m10_1495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1493 -> m10_1496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1493 -> m10_1497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1494 -> m10_15  [key=2, style=dotted];
m10_1494 -> m10_16  [key=2, style=dotted];
m10_1494 -> m10_1495  [key=0, style=solid];
m10_1496 -> m10_15  [key=2, style=dotted];
m10_1496 -> m10_16  [key=2, style=dotted];
m10_1496 -> m10_1497  [key=0, style=solid];
m10_1495 -> m10_17  [key=2, style=dotted];
m10_1495 -> m10_1496  [key=0, style=solid];
m10_1497 -> m10_17  [key=2, style=dotted];
m10_1497 -> m10_1498  [key=0, style=solid];
m10_1492 -> m10_1493  [key=0, style=solid];
m10_1492 -> m10_1492  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1498 -> m10_1491  [color=blue, key=0, style=bold];
m10_1959 -> m10_1960  [key=0, style=solid];
m10_1959 -> m10_1962  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m10_1960 -> m10_1961  [key=0, style=solid];
m10_1960 -> m10_1962  [key=0, style=solid];
m10_1962 -> m10_1963  [key=0, style=solid];
m10_1962 -> m10_1965  [key=2, style=dotted];
m10_1961 -> m10_1963  [key=0, style=solid];
m10_1961 -> m10_1964  [key=2, style=dotted];
m10_1963 -> m10_1959  [color=blue, key=0, style=bold];
m10_1971 -> m10_157  [color=blue, key=0, style=bold];
m10_379 -> m10_380  [key=0, style=solid];
m10_379 -> m10_50  [key=2, style=dotted];
m10_379 -> m10_379  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_379 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_379 -> m10_15  [key=2, style=dotted];
m10_379 -> m10_16  [key=2, style=dotted];
m10_383 -> m10_384  [key=0, style=solid];
m10_383 -> m10_50  [key=2, style=dotted];
m10_383 -> m10_383  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_383 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_383 -> m10_17  [key=2, style=dotted];
m10_387 -> m10_388  [key=0, style=solid];
m10_387 -> m10_50  [key=2, style=dotted];
m10_387 -> m10_387  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_387 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_387 -> m10_367  [color=blue, key=0, style=bold];
m10_391 -> m10_392  [key=0, style=solid];
m10_391 -> m10_50  [key=2, style=dotted];
m10_391 -> m10_391  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_391 -> m10_398  [color=darkseagreen4, key=1, label="out System.Collections.Generic.List<Newtonsoft.Json.Serialization.SerializationCallback>", style=dashed];
m10_367 -> m10_368  [key=0, style=solid];
m10_367 -> m10_378  [color=darkseagreen4, key=1, label=currentOnSerializing, style=dashed];
m10_372 -> m10_373  [key=0, style=solid];
m10_372 -> m10_399  [key=2, style=dotted];
m10_372 -> m10_378  [color=darkseagreen4, key=1, label=skipSerializing, style=dashed];
m10_372 -> m10_374  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_372 -> m10_375  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_373 -> m10_374  [key=0, style=solid];
m10_373 -> m10_400  [key=2, style=dotted];
m10_373 -> m10_390  [color=darkseagreen4, key=1, label=skipDeserialized, style=dashed];
m10_373 -> m10_376  [key=0, style=solid];
m10_373 -> m10_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m10_374 -> m10_375  [key=0, style=solid];
m10_374 -> m10_366  [key=0, style=solid];
m10_374 -> m10_401  [key=2, style=dotted];
m10_374 -> m10_377  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_378  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_380  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_381  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_382  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_384  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_385  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_386  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_388  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_389  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_390  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_392  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_393  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_394  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_396  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_397  [color=darkseagreen4, key=1, label=method, style=dashed];
m10_374 -> m10_391  [key=2, style=dotted];
m10_368 -> m10_369  [key=0, style=solid];
m10_368 -> m10_382  [color=darkseagreen4, key=1, label=currentOnSerialized, style=dashed];
m10_368 -> m10_381  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m10_368 -> m10_373  [color=darkseagreen4, key=1, label=valueCount, style=dashed];
m10_368 -> m10_368  [color=darkorchid, key=3, label="Local variable int valueCount", style=bold];
m10_378 -> m10_379  [key=0, style=solid];
m10_378 -> m10_382  [key=0, style=solid];
m10_378 -> m10_402  [key=2, style=dotted];
m10_378 -> m10_378  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m10_378 -> m10_13  [key=2, style=dotted];
m10_378 -> m10_14  [key=2, style=dotted];
m10_378 -> m10_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_378 -> m10_385  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_378 -> m10_386  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_369 -> m10_370  [key=0, style=solid];
m10_369 -> m10_386  [color=darkseagreen4, key=1, label=currentOnDeserializing, style=dashed];
m10_369 -> m10_377  [color=darkseagreen4, key=1, label=sw, style=dashed];
m10_369 -> m10_388  [key=2, style=dotted];
m10_382 -> m10_383  [key=0, style=solid];
m10_382 -> m10_386  [key=0, style=solid];
m10_382 -> m10_402  [key=2, style=dotted];
m10_382 -> m10_382  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m10_382 -> m10_15  [key=2, style=dotted];
m10_382 -> m10_16  [key=2, style=dotted];
m10_370 -> m10_371  [key=0, style=solid];
m10_370 -> m10_390  [color=darkseagreen4, key=1, label=currentOnDeserialized, style=dashed];
m10_370 -> m10_376  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_370 -> m10_389  [key=2, style=dotted];
m10_370 -> m10_374  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_386 -> m10_387  [key=0, style=solid];
m10_386 -> m10_390  [key=0, style=solid];
m10_386 -> m10_402  [key=2, style=dotted];
m10_386 -> m10_386  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m10_386 -> m10_15  [key=2, style=dotted];
m10_386 -> m10_131  [key=2, style=dotted];
m10_371 -> m10_372  [key=0, style=solid];
m10_371 -> m10_394  [color=darkseagreen4, key=1, label=currentOnError, style=dashed];
m10_371 -> m10_390  [key=2, style=dotted];
m10_390 -> m10_391  [key=0, style=solid];
m10_390 -> m10_394  [key=0, style=solid];
m10_390 -> m10_402  [key=2, style=dotted];
m10_390 -> m10_390  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m10_390 -> m10_353  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m10_375 -> m10_376  [key=0, style=solid];
m10_375 -> m10_374  [key=0, style=solid];
m10_375 -> m10_373  [key=0, style=solid];
m10_375 -> m10_375  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_377 -> m10_378  [key=0, style=solid];
m10_377 -> m10_269  [key=2, style=dotted];
m10_377 -> m10_382  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_377 -> m10_386  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_377 -> m10_390  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_377 -> m10_394  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m10_377 -> m10_353  [color=darkorchid, key=3, label="Local variable int j", style=bold];
m10_377 -> m10_393  [key=2, style=dotted];
m10_380 -> m10_381  [key=0, style=solid];
m10_380 -> m10_403  [key=2, style=dotted];
m10_380 -> m10_54  [key=2, style=dotted];
m10_380 -> m10_383  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_380 -> m10_384  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_381 -> m10_382  [key=0, style=solid];
m10_381 -> m10_385  [key=0, style=solid];
m10_381 -> m10_373  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m10_384 -> m10_385  [key=0, style=solid];
m10_384 -> m10_403  [key=2, style=dotted];
m10_384 -> m10_54  [key=2, style=dotted];
m10_384 -> m10_381  [key=0, style=solid];
m10_384 -> m10_384  [color=darkseagreen4, key=1, label=i, style=dashed];
m10_385 -> m10_386  [key=0, style=solid];
m10_385 -> m10_15  [key=2, style=dotted];
m10_385 -> m10_16  [key=2, style=dotted];
m10_376 -> m10_377  [key=0, style=solid];
m10_376 -> m10_378  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m10_376 -> m10_392  [key=2, style=dotted];
m10_709 -> m10_222  [color=darkseagreen4, key=1, label=createEnumerableWrapper, style=dashed];
m10_1656 -> m10_1657  [key=0, style=solid];
m10_1658 -> m10_13  [key=2, style=dotted];
m10_1658 -> m10_1659  [key=0, style=solid];
m10_1658 -> m10_116  [key=2, style=dotted];
m10_1658 -> m10_157  [key=2, style=dotted];
m10_1658 -> m10_158  [key=2, style=dotted];
m10_1658 -> m10_1660  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1658 -> m10_1661  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1658 -> m10_1662  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1659 -> m10_15  [key=2, style=dotted];
m10_1659 -> m10_16  [key=2, style=dotted];
m10_1659 -> m10_1660  [key=0, style=solid];
m10_1662 -> m10_15  [key=2, style=dotted];
m10_1662 -> m10_1663  [key=0, style=solid];
m10_1662 -> m10_131  [key=2, style=dotted];
m10_1660 -> m10_17  [key=2, style=dotted];
m10_1660 -> m10_1661  [key=0, style=solid];
m10_1661 -> m10_17  [key=2, style=dotted];
m10_1661 -> m10_1662  [key=0, style=solid];
m10_1657 -> m10_1658  [key=0, style=solid];
m10_1657 -> m10_1657  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m10_1663 -> m10_1656  [color=blue, key=0, style=bold];
m10_446 -> m10_447  [key=0, style=solid];
m10_446 -> m10_103  [key=2, style=dotted];
m10_451 -> m10_452  [key=0, style=solid];
m10_451 -> m10_453  [key=0, style=solid];
m10_1484 -> m10_1485  [key=0, style=solid];
m10_1485 -> m10_13  [key=2, style=dotted];
m10_1485 -> m10_14  [key=2, style=dotted];
m10_1485 -> m10_1486  [key=0, style=solid];
m10_1485 -> m10_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1486 -> m10_18  [key=2, style=dotted];
m10_1486 -> m10_1487  [key=0, style=solid];
m10_1486 -> m10_1488  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1487 -> m10_1484  [color=blue, key=0, style=bold];
m10_1939 -> m10_1940  [key=0, style=solid];
m10_1948 -> m10_13  [key=2, style=dotted];
m10_1948 -> m10_1949  [key=0, style=solid];
m10_1948 -> m10_1950  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1948 -> m10_1952  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1948 -> m10_1954  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1947 -> m10_14  [key=2, style=dotted];
m10_1947 -> m10_1948  [key=0, style=solid];
m10_1949 -> m10_15  [key=2, style=dotted];
m10_1949 -> m10_16  [key=2, style=dotted];
m10_1949 -> m10_1950  [key=0, style=solid];
m10_1954 -> m10_15  [key=2, style=dotted];
m10_1954 -> m10_16  [key=2, style=dotted];
m10_1954 -> m10_1955  [key=0, style=solid];
m10_1951 -> m10_17  [key=2, style=dotted];
m10_1951 -> m10_1952  [key=0, style=solid];
m10_1953 -> m10_17  [key=2, style=dotted];
m10_1953 -> m10_1954  [key=0, style=solid];
m10_1950 -> m10_1951  [key=0, style=solid];
m10_1950 -> m10_747  [key=2, style=dotted];
m10_1952 -> m10_1953  [key=0, style=solid];
m10_1952 -> m10_747  [key=2, style=dotted];
m10_1946 -> m10_1947  [key=0, style=solid];
m10_1946 -> m10_393  [key=2, style=dotted];
m10_1940 -> m10_1946  [color=darkseagreen4, key=1, label=sw, style=dashed];
m10_1940 -> m10_1941  [key=0, style=solid];
m10_1940 -> m10_388  [key=2, style=dotted];
m10_1945 -> m10_1946  [key=0, style=solid];
m10_1945 -> m10_392  [key=2, style=dotted];
m10_1941 -> m10_1945  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_1941 -> m10_389  [key=2, style=dotted];
m10_1941 -> m10_1942  [key=0, style=solid];
m10_1941 -> m10_1943  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_1941 -> m10_1944  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_1944 -> m10_1945  [key=0, style=solid];
m10_1944 -> m10_1956  [key=2, style=dotted];
m10_1942 -> m10_1943  [key=0, style=solid];
m10_1942 -> m10_390  [key=2, style=dotted];
m10_1943 -> m10_1944  [key=0, style=solid];
m10_1943 -> m10_1956  [key=2, style=dotted];
m10_1955 -> m10_1939  [color=blue, key=0, style=bold];
m10_1097 -> m10_1098  [key=0, style=solid];
m10_1098 -> m10_13  [key=2, style=dotted];
m10_1098 -> m10_14  [key=2, style=dotted];
m10_1098 -> m10_1099  [key=0, style=solid];
m10_1098 -> m10_1102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1099 -> m10_18  [key=2, style=dotted];
m10_1099 -> m10_1100  [key=0, style=solid];
m10_1099 -> m10_1101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m10_1100 -> m10_1097  [color=blue, key=0, style=bold];
m10_1090 -> m10_1091  [key=0, style=solid];
m10_1091 -> m10_13  [key=2, style=dotted];
m10_1091 -> m10_14  [key=2, style=dotted];
m10_1091 -> m10_1092  [key=0, style=solid];
m10_1093 -> m10_17  [key=2, style=dotted];
m10_1093 -> m10_1094  [key=0, style=solid];
m10_1094 -> m10_17  [key=2, style=dotted];
m10_1094 -> m10_1095  [key=0, style=solid];
m10_1095 -> m10_17  [key=2, style=dotted];
m10_1095 -> m10_1096  [key=0, style=solid];
m10_1092 -> m10_1093  [key=0, style=solid];
m10_1092 -> m10_1094  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_1092 -> m10_1095  [color=darkseagreen4, key=1, label=data, style=dashed];
m10_1092 -> m10_975  [key=2, style=dotted];
m10_1096 -> m10_1090  [color=blue, key=0, style=bold];
m10_1994 -> m10_20  [color=green, key=1, label=reader, style=dashed];
m10_2001 -> m10_448  [color=darkseagreen4, key=1, label=total, style=dashed];
m10_2002 -> m10_465  [color=darkseagreen4, key=1, label=total, style=dashed];
m10_1995 -> m10_57  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1997 -> m10_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1998 -> m10_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_1999 -> m10_196  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2009 -> m10_752  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2009 -> m10_749  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2009 -> m10_755  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2010 -> m10_787  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2010 -> m10_790  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2011 -> m10_965  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2012 -> m10_1044  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2021 -> m10_1289  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2022 -> m10_1296  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2023 -> m10_1303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2024 -> m10_1310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2025 -> m10_1317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2026 -> m10_1450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2027 -> m10_1458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2028 -> m10_1489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2029 -> m10_1506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2030 -> m10_1670  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2032 -> m10_1765  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2033 -> m10_1797  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2033 -> m10_1800  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2034 -> m10_1922  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_2034 -> m10_1925  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_2034 -> m10_1928  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_2034 -> m10_1931  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_2034 -> m10_1934  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_2034 -> m10_1937  [color=darkseagreen4, key=1, label=jsonTextReader, style=dashed];
m10_1996 -> m10_94  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_95  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_97  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_99  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_101  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_102  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_104  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_1996 -> m10_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.JsonTextReaderTest", style=dashed];
m10_2000 -> m10_358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2003 -> m10_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2004 -> m10_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2005 -> m10_532  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2006 -> m10_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2007 -> m10_558  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2008 -> m10_711  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2008 -> m10_714  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2008 -> m10_717  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2008 -> m10_720  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2008 -> m10_723  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2013 -> m10_1061  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2014 -> m10_1074  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2015 -> m10_1081  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2016 -> m10_1088  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2017 -> m10_1102  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2018 -> m10_1109  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2019 -> m10_1180  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2020 -> m10_1282  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2031 -> m10_1709  [color=darkseagreen4, key=1, label=reader, style=dashed];
m10_2035 -> m10_1957  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m10_2035 -> m10_1960  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m10_2035 -> m10_1962  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ToggleReaderError", style=dashed];
m11_554 -> m11_556  [key=0, style=solid];
m11_554 -> m11_557  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_558  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_559  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_560  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_561  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_563  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_564  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_565  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_567  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_568  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_569  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_573  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_554 -> m11_495  [color=green, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m11_554 -> m11_548  [color=green, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m11_556 -> m11_557  [key=0, style=solid];
m11_556 -> m11_558  [key=0, style=solid];
m11_557 -> m11_576  [key=0, style=solid];
m11_557 -> m11_518  [key=2, style=dotted];
m11_558 -> m11_559  [key=0, style=solid];
m11_558 -> m11_560  [key=0, style=solid];
m11_559 -> m11_576  [key=0, style=solid];
m11_559 -> m11_577  [key=2, style=dotted];
m11_559 -> m11_578  [key=2, style=dotted];
m11_560 -> m11_561  [key=0, style=solid];
m11_560 -> m11_566  [key=0, style=solid];
m11_561 -> m11_562  [key=0, style=solid];
m11_561 -> m11_563  [key=0, style=solid];
m11_562 -> m11_576  [key=0, style=solid];
m11_562 -> m11_578  [key=2, style=dotted];
m11_562 -> m11_562  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_563 -> m11_564  [key=0, style=solid];
m11_563 -> m11_565  [key=0, style=solid];
m11_564 -> m11_576  [key=0, style=solid];
m11_564 -> m11_578  [key=2, style=dotted];
m11_565 -> m11_576  [key=0, style=solid];
m11_565 -> m11_579  [key=2, style=dotted];
m11_565 -> m11_578  [key=2, style=dotted];
m11_566 -> m11_567  [key=0, style=solid];
m11_566 -> m11_568  [key=0, style=solid];
m11_567 -> m11_576  [key=0, style=solid];
m11_567 -> m11_580  [key=2, style=dotted];
m11_567 -> m11_578  [key=2, style=dotted];
m11_567 -> m11_567  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_568 -> m11_569  [key=0, style=solid];
m11_568 -> m11_573  [key=0, style=solid];
m11_569 -> m11_570  [key=0, style=solid];
m11_569 -> m11_571  [key=0, style=solid];
m11_570 -> m11_576  [key=0, style=solid];
m11_570 -> m11_578  [key=2, style=dotted];
m11_571 -> m11_572  [key=0, style=solid];
m11_571 -> m11_581  [key=2, style=dotted];
m11_573 -> m11_574  [key=0, style=solid];
m11_573 -> m11_575  [key=0, style=solid];
m11_575 -> m11_576  [key=0, style=solid];
m11_575 -> m11_583  [key=2, style=dotted];
m11_575 -> m11_584  [key=2, style=dotted];
m11_572 -> m11_576  [key=0, style=solid];
m11_572 -> m11_582  [key=2, style=dotted];
m11_572 -> m11_578  [key=2, style=dotted];
m11_574 -> m11_576  [key=0, style=solid];
m11_576 -> m11_554  [color=blue, key=0, style=bold];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_109  [color=green, key=3, label="Parameter variable string data", style=bold];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_6  [key=2, style=dotted];
m11_35 -> m11_37  [key=2, style=dotted];
m11_36 -> m11_34  [color=blue, key=0, style=bold];
m11_133 -> m11_134  [key=0, style=solid];
m11_134 -> m11_135  [key=0, style=solid];
m11_134 -> m11_136  [key=2, style=dotted];
m11_134 -> m11_137  [key=2, style=dotted];
m11_135 -> m11_133  [color=blue, key=0, style=bold];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_95  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_96 -> m11_95  [color=blue, key=0, style=bold];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_34  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateProcessingInstruction", style=bold];
m11_109 -> m11_160  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateProcessingInstruction", style=bold];
m11_110 -> m11_109  [color=blue, key=0, style=bold];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_107  [color=green, key=3, label="Parameter variable string internalSubset", style=bold];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_128  [key=2, style=dotted];
m11_157 -> m11_159  [key=2, style=dotted];
m11_158 -> m11_156  [color=blue, key=0, style=bold];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_202  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_203  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_204  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_205  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_206  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_207  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_208  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_209  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_210  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_211  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_212  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_213  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_214  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_215  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_216  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_217  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m11_200 -> m11_254  [color=green, key=3, label="Parameter variable XObject node", style=bold];
m11_201 -> m11_202  [key=0, style=solid];
m11_201 -> m11_203  [key=0, style=solid];
m11_202 -> m11_218  [key=0, style=solid];
m11_202 -> m11_131  [key=2, style=dotted];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_205  [key=0, style=solid];
m11_204 -> m11_218  [key=0, style=solid];
m11_204 -> m11_168  [key=2, style=dotted];
m11_205 -> m11_206  [key=0, style=solid];
m11_205 -> m11_207  [key=0, style=solid];
m11_206 -> m11_218  [key=0, style=solid];
m11_206 -> m11_198  [key=2, style=dotted];
m11_207 -> m11_208  [key=0, style=solid];
m11_207 -> m11_209  [key=0, style=solid];
m11_208 -> m11_218  [key=0, style=solid];
m11_208 -> m11_163  [key=2, style=dotted];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_211  [key=0, style=solid];
m11_210 -> m11_218  [key=0, style=solid];
m11_210 -> m11_193  [key=2, style=dotted];
m11_211 -> m11_212  [key=0, style=solid];
m11_211 -> m11_213  [key=0, style=solid];
m11_212 -> m11_218  [key=0, style=solid];
m11_212 -> m11_195  [key=2, style=dotted];
m11_213 -> m11_214  [key=0, style=solid];
m11_213 -> m11_215  [key=0, style=solid];
m11_214 -> m11_218  [key=0, style=solid];
m11_214 -> m11_179  [key=2, style=dotted];
m11_215 -> m11_216  [key=0, style=solid];
m11_215 -> m11_217  [key=0, style=solid];
m11_216 -> m11_218  [key=0, style=solid];
m11_216 -> m11_128  [key=2, style=dotted];
m11_217 -> m11_218  [key=0, style=solid];
m11_217 -> m11_219  [key=2, style=dotted];
m11_218 -> m11_200  [color=blue, key=0, style=bold];
m11_170 -> m11_171  [key=0, style=solid];
m11_170 -> m11_172  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_170 -> m11_113  [color=green, key=3, label="Parameter variable string namespaceUri", style=bold];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_174  [key=2, style=dotted];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_168  [key=2, style=dotted];
m11_172 -> m11_169  [key=2, style=dotted];
m11_172 -> m11_175  [key=2, style=dotted];
m11_173 -> m11_170  [color=blue, key=0, style=bold];
m11_495 -> m11_523  [key=0, style=solid];
m11_495 -> m11_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_495 -> m11_526  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_495 -> m11_527  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_495 -> m11_528  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_495 -> m11_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_495 -> m11_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_495 -> m11_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_495 -> m11_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_495 -> m11_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_495 -> m11_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_495 -> m11_539  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_495 -> m11_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_495 -> m11_541  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_495 -> m11_542  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_495 -> m11_543  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_495 -> m11_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_495 -> m11_545  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_495 -> m11_546  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_495 -> m11_459  [color=green, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m11_495 -> m11_462  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_495 -> m11_463  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document", style=bold];
m11_495 -> m11_464  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m11_495 -> m11_499  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_523 -> m11_524  [key=0, style=solid];
m11_523 -> m11_525  [key=0, style=solid];
m11_523 -> m11_295  [key=2, style=dotted];
m11_525 -> m11_526  [key=0, style=solid];
m11_525 -> m11_548  [key=2, style=dotted];
m11_525 -> m11_535  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m11_526 -> m11_527  [key=0, style=solid];
m11_526 -> m11_549  [key=2, style=dotted];
m11_526 -> m11_533  [color=darkseagreen4, key=1, label=elementPrefix, style=dashed];
m11_527 -> m11_528  [key=0, style=solid];
m11_527 -> m11_533  [key=0, style=solid];
m11_527 -> m11_550  [key=2, style=dotted];
m11_528 -> m11_529  [key=0, style=solid];
m11_528 -> m11_551  [key=2, style=dotted];
m11_528 -> m11_530  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_528 -> m11_531  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_529 -> m11_530  [key=0, style=solid];
m11_529 -> m11_518  [key=2, style=dotted];
m11_529 -> m11_531  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m11_531 -> m11_532  [key=0, style=solid];
m11_531 -> m11_295  [key=2, style=dotted];
m11_531 -> m11_552  [key=2, style=dotted];
m11_531 -> m11_51  [key=2, style=dotted];
m11_531 -> m11_115  [key=2, style=dotted];
m11_532 -> m11_547  [key=0, style=solid];
m11_532 -> m11_119  [key=2, style=dotted];
m11_533 -> m11_534  [key=0, style=solid];
m11_533 -> m11_553  [key=2, style=dotted];
m11_533 -> m11_538  [color=darkseagreen4, key=1, label=element, style=dashed];
m11_533 -> m11_540  [color=darkseagreen4, key=1, label=element, style=dashed];
m11_533 -> m11_544  [color=darkseagreen4, key=1, label=element, style=dashed];
m11_534 -> m11_535  [key=0, style=solid];
m11_534 -> m11_123  [key=2, style=dotted];
m11_537 -> m11_538  [key=0, style=solid];
m11_537 -> m11_295  [key=2, style=dotted];
m11_537 -> m11_552  [key=2, style=dotted];
m11_537 -> m11_51  [key=2, style=dotted];
m11_537 -> m11_115  [key=2, style=dotted];
m11_537 -> m11_537  [color=darkseagreen4, key=1, label=nameValue, style=dashed];
m11_539 -> m11_540  [key=0, style=solid];
m11_539 -> m11_541  [key=0, style=solid];
m11_539 -> m11_539  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_540 -> m11_547  [key=0, style=solid];
m11_540 -> m11_554  [key=2, style=dotted];
m11_540 -> m11_97  [key=2, style=dotted];
m11_540 -> m11_123  [key=2, style=dotted];
m11_541 -> m11_542  [key=0, style=solid];
m11_541 -> m11_547  [key=0, style=solid];
m11_542 -> m11_543  [key=0, style=solid];
m11_542 -> m11_546  [key=0, style=solid];
m11_543 -> m11_544  [key=0, style=solid];
m11_543 -> m11_286  [key=2, style=dotted];
m11_544 -> m11_545  [key=0, style=solid];
m11_544 -> m11_497  [key=2, style=dotted];
m11_545 -> m11_546  [key=0, style=solid];
m11_545 -> m11_454  [key=2, style=dotted];
m11_546 -> m11_547  [key=0, style=solid];
m11_546 -> m11_555  [key=2, style=dotted];
m11_524 -> m11_547  [key=0, style=solid];
m11_524 -> m11_492  [key=2, style=dotted];
m11_535 -> m11_536  [key=0, style=solid];
m11_535 -> m11_539  [key=0, style=solid];
m11_530 -> m11_531  [key=0, style=solid];
m11_530 -> m11_549  [key=2, style=dotted];
m11_538 -> m11_535  [key=0, style=solid];
m11_538 -> m11_119  [key=2, style=dotted];
m11_536 -> m11_537  [key=0, style=solid];
m11_536 -> m11_549  [key=2, style=dotted];
m11_536 -> m11_536  [color=darkseagreen4, key=1, label=nameValue, style=dashed];
m11_547 -> m11_495  [color=blue, key=0, style=bold];
m11_117 -> m11_118  [key=0, style=solid];
m11_117 -> m11_52  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute", style=bold];
m11_117 -> m11_181  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute", style=bold];
m11_117 -> m11_604  [color=green, key=3, label="Parameter variable string value", style=bold];
m11_117 -> m11_607  [color=green, key=3, label="Parameter variable string namespaceUri", style=bold];
m11_118 -> m11_117  [color=blue, key=0, style=bold];
m11_179 -> m11_231  [key=0, style=solid];
m11_231 -> m11_179  [color=blue, key=0, style=bold];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_103  [color=green, key=3, label="Parameter variable string text", style=bold];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_136  [key=2, style=dotted];
m11_150 -> m11_141  [key=2, style=dotted];
m11_151 -> m11_149  [color=blue, key=0, style=bold];
m11_75 -> m11_76  [key=0, style=solid];
m11_76 -> m11_77  [key=0, style=solid];
m11_77 -> m11_75  [color=blue, key=0, style=bold];
m11_57 -> m11_58  [key=0, style=solid];
m11_58 -> m11_59  [key=0, style=solid];
m11_59 -> m11_57  [color=blue, key=0, style=bold];
m11_332 -> m11_333  [key=0, style=solid];
m11_332 -> m11_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_332 -> m11_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_332 -> m11_337  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_332 -> m11_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_332 -> m11_353  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_332 -> m11_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_332 -> m11_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_332 -> m11_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_332 -> m11_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_332 -> m11_259  [color=green, key=3, label="Parameter variable bool writePropertyName", style=bold];
m11_332 -> m11_393  [color=green, key=3, label="Parameter variable bool writePropertyName", style=bold];
m11_333 -> m11_334  [key=0, style=solid];
m11_333 -> m11_362  [key=2, style=dotted];
m11_333 -> m11_339  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m11_333 -> m11_341  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m11_333 -> m11_344  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m11_335 -> m11_336  [key=0, style=solid];
m11_335 -> m11_344  [key=0, style=solid];
m11_335 -> m11_335  [color=green, key=3, label="Local variable int i", style=bold];
m11_336 -> m11_337  [key=0, style=solid];
m11_336 -> m11_342  [color=darkseagreen4, key=1, label=childNode, style=dashed];
m11_337 -> m11_338  [key=0, style=solid];
m11_337 -> m11_296  [key=2, style=dotted];
m11_337 -> m11_339  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m11_337 -> m11_341  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m11_351 -> m11_344  [key=0, style=solid];
m11_351 -> m11_259  [key=2, style=dotted];
m11_353 -> m11_354  [key=0, style=solid];
m11_353 -> m11_355  [key=0, style=solid];
m11_354 -> m11_355  [key=0, style=solid];
m11_354 -> m11_365  [key=2, style=dotted];
m11_355 -> m11_356  [key=0, style=solid];
m11_355 -> m11_366  [key=2, style=dotted];
m11_358 -> m11_359  [key=0, style=solid];
m11_358 -> m11_259  [key=2, style=dotted];
m11_360 -> m11_344  [key=0, style=solid];
m11_360 -> m11_367  [key=2, style=dotted];
m11_334 -> m11_335  [key=0, style=solid];
m11_334 -> m11_336  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_334 -> m11_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_339 -> m11_340  [key=0, style=solid];
m11_339 -> m11_342  [key=0, style=solid];
m11_339 -> m11_363  [key=2, style=dotted];
m11_341 -> m11_342  [key=0, style=solid];
m11_341 -> m11_364  [key=2, style=dotted];
m11_344 -> m11_345  [key=0, style=solid];
m11_344 -> m11_361  [key=0, style=solid];
m11_343 -> m11_335  [key=0, style=solid];
m11_343 -> m11_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_342 -> m11_343  [key=0, style=solid];
m11_342 -> m11_284  [key=2, style=dotted];
m11_338 -> m11_339  [key=0, style=solid];
m11_340 -> m11_341  [key=0, style=solid];
m11_340 -> m11_283  [key=2, style=dotted];
m11_340 -> m11_342  [color=darkseagreen4, key=1, label=nodes, style=dashed];
m11_345 -> m11_346  [key=0, style=solid];
m11_345 -> m11_345  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m11_345 -> m11_347  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m11_345 -> m11_348  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m11_345 -> m11_351  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m11_345 -> m11_352  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m11_345 -> m11_357  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m11_345 -> m11_358  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m11_346 -> m11_347  [key=0, style=solid];
m11_346 -> m11_323  [color=green, key=3, label="Local variable bool writeArray", style=bold];
m11_347 -> m11_348  [key=0, style=solid];
m11_347 -> m11_349  [key=0, style=solid];
m11_348 -> m11_350  [key=0, style=solid];
m11_348 -> m11_323  [key=2, style=dotted];
m11_352 -> m11_353  [key=0, style=solid];
m11_352 -> m11_352  [color=darkseagreen4, key=1, label=nodeNameGroup, style=dashed];
m11_352 -> m11_354  [color=darkseagreen4, key=1, label=elementNames, style=dashed];
m11_357 -> m11_358  [key=0, style=solid];
m11_357 -> m11_360  [key=0, style=solid];
m11_357 -> m11_357  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_349 -> m11_350  [key=0, style=solid];
m11_350 -> m11_351  [key=0, style=solid];
m11_350 -> m11_352  [key=0, style=solid];
m11_356 -> m11_357  [key=0, style=solid];
m11_356 -> m11_358  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_356 -> m11_359  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_359 -> m11_357  [key=0, style=solid];
m11_359 -> m11_359  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_361 -> m11_332  [color=blue, key=0, style=bold];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_81  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m11_78 -> m11_83  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m11_78 -> m11_85  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m11_78 -> m11_86  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_82  [key=0, style=solid];
m11_79 -> m11_84  [key=0, style=solid];
m11_79 -> m11_86  [key=0, style=solid];
m11_81 -> m11_87  [key=0, style=solid];
m11_81 -> m11_57  [key=2, style=dotted];
m11_83 -> m11_87  [key=0, style=solid];
m11_83 -> m11_69  [key=2, style=dotted];
m11_85 -> m11_87  [key=0, style=solid];
m11_85 -> m11_72  [key=2, style=dotted];
m11_85 -> m11_78  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.Tests.Serialization.JsonSerializerCollectionsTests.TestDictionaryPrivate c1", style=bold];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_75  [key=2, style=dotted];
m11_80 -> m11_81  [key=0, style=solid];
m11_82 -> m11_83  [key=0, style=solid];
m11_84 -> m11_85  [key=0, style=solid];
m11_87 -> m11_78  [color=blue, key=0, style=bold];
m11_69 -> m11_70  [key=0, style=solid];
m11_70 -> m11_71  [key=0, style=solid];
m11_71 -> m11_69  [color=blue, key=0, style=bold];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_8  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateTextNode", style=bold];
m11_97 -> m11_138  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateTextNode", style=bold];
m11_97 -> m11_554  [color=green, key=3, label="Parameter variable string text", style=bold];
m11_98 -> m11_97  [color=blue, key=0, style=bold];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_185 -> m11_123  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_185 -> m11_192  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_188  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m11_186 -> m11_189  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m11_190 -> m11_191  [key=0, style=solid];
m11_190 -> m11_192  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_190  [key=0, style=solid];
m11_188 -> m11_189  [key=0, style=solid];
m11_189 -> m11_191  [key=0, style=solid];
m11_191 -> m11_185  [color=blue, key=0, style=bold];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_105  [color=green, key=3, label="Parameter variable string standalone", style=bold];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_27  [key=2, style=dotted];
m11_25 -> m11_28  [key=2, style=dotted];
m11_26 -> m11_24  [color=blue, key=0, style=bold];
m11_181 -> m11_182  [key=0, style=solid];
m11_181 -> m11_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_181 -> m11_117  [color=green, key=3, label="Parameter variable string value", style=bold];
m11_182 -> m11_183  [key=0, style=solid];
m11_182 -> m11_174  [key=2, style=dotted];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_179  [key=2, style=dotted];
m11_183 -> m11_180  [key=2, style=dotted];
m11_183 -> m11_175  [key=2, style=dotted];
m11_184 -> m11_181  [color=blue, key=0, style=bold];
m11_521 -> m11_672  [key=0, style=solid];
m11_521 -> m11_676  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_677  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_679  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_680  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_682  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_683  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_686  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_688  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_689  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_690  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_521 -> m11_691  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_521 -> m11_692  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_521 -> m11_499  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m11_672 -> m11_673  [key=0, style=solid];
m11_672 -> m11_691  [color=darkseagreen4, key=1, label=name, style=dashed];
m11_676 -> m11_677  [key=0, style=solid];
m11_676 -> m11_691  [key=0, style=solid];
m11_676 -> m11_496  [key=2, style=dotted];
m11_677 -> m11_678  [key=0, style=solid];
m11_677 -> m11_681  [key=0, style=solid];
m11_677 -> m11_684  [key=0, style=solid];
m11_677 -> m11_687  [key=0, style=solid];
m11_677 -> m11_690  [key=0, style=solid];
m11_677 -> m11_518  [key=2, style=dotted];
m11_679 -> m11_680  [key=0, style=solid];
m11_679 -> m11_496  [key=2, style=dotted];
m11_680 -> m11_676  [key=0, style=solid];
m11_680 -> m11_518  [key=2, style=dotted];
m11_680 -> m11_691  [color=darkseagreen4, key=1, label=name, style=dashed];
m11_682 -> m11_683  [key=0, style=solid];
m11_682 -> m11_496  [key=2, style=dotted];
m11_683 -> m11_676  [key=0, style=solid];
m11_683 -> m11_518  [key=2, style=dotted];
m11_683 -> m11_691  [color=darkseagreen4, key=1, label=publicId, style=dashed];
m11_685 -> m11_686  [key=0, style=solid];
m11_685 -> m11_496  [key=2, style=dotted];
m11_686 -> m11_676  [key=0, style=solid];
m11_686 -> m11_518  [key=2, style=dotted];
m11_686 -> m11_691  [color=darkseagreen4, key=1, label=systemId, style=dashed];
m11_688 -> m11_689  [key=0, style=solid];
m11_688 -> m11_496  [key=2, style=dotted];
m11_689 -> m11_676  [key=0, style=solid];
m11_689 -> m11_518  [key=2, style=dotted];
m11_689 -> m11_691  [color=darkseagreen4, key=1, label=internalSubset, style=dashed];
m11_690 -> m11_693  [key=0, style=solid];
m11_690 -> m11_492  [key=2, style=dotted];
m11_691 -> m11_692  [key=0, style=solid];
m11_691 -> m11_107  [key=2, style=dotted];
m11_692 -> m11_693  [key=0, style=solid];
m11_692 -> m11_123  [key=2, style=dotted];
m11_673 -> m11_674  [key=0, style=solid];
m11_673 -> m11_691  [color=darkseagreen4, key=1, label=publicId, style=dashed];
m11_674 -> m11_675  [key=0, style=solid];
m11_674 -> m11_691  [color=darkseagreen4, key=1, label=systemId, style=dashed];
m11_675 -> m11_676  [key=0, style=solid];
m11_675 -> m11_691  [color=darkseagreen4, key=1, label=internalSubset, style=dashed];
m11_678 -> m11_679  [key=0, style=solid];
m11_681 -> m11_682  [key=0, style=solid];
m11_684 -> m11_685  [key=0, style=solid];
m11_687 -> m11_688  [key=0, style=solid];
m11_693 -> m11_521  [color=blue, key=0, style=bold];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_119  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute", style=bold];
m11_61 -> m11_62  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_64  [key=2, style=dotted];
m11_63 -> m11_60  [color=blue, key=0, style=bold];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_29  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDocumentType", style=bold];
m11_107 -> m11_156  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDocumentType", style=bold];
m11_107 -> m11_672  [color=green, key=3, label="Parameter variable string name", style=bold];
m11_107 -> m11_673  [color=green, key=3, label="Parameter variable string publicId", style=bold];
m11_107 -> m11_674  [color=green, key=3, label="Parameter variable string systemId", style=bold];
m11_107 -> m11_675  [color=green, key=3, label="Parameter variable string internalSubset", style=bold];
m11_108 -> m11_107  [color=blue, key=0, style=bold];
m11_519 -> m11_651  [key=0, style=solid];
m11_519 -> m11_655  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_656  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_658  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_659  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_661  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_662  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_665  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_666  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_667  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_519 -> m11_668  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_519 -> m11_669  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_519 -> m11_670  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_519 -> m11_499  [color=green, key=3, label="Parameter variable string propertyName", style=bold];
m11_651 -> m11_652  [key=0, style=solid];
m11_651 -> m11_669  [key=0, style=solid];
m11_655 -> m11_656  [key=0, style=solid];
m11_655 -> m11_667  [key=0, style=solid];
m11_655 -> m11_496  [key=2, style=dotted];
m11_656 -> m11_657  [key=0, style=solid];
m11_656 -> m11_660  [key=0, style=solid];
m11_656 -> m11_663  [key=0, style=solid];
m11_656 -> m11_666  [key=0, style=solid];
m11_656 -> m11_518  [key=2, style=dotted];
m11_658 -> m11_659  [key=0, style=solid];
m11_658 -> m11_496  [key=2, style=dotted];
m11_659 -> m11_655  [key=0, style=solid];
m11_659 -> m11_518  [key=2, style=dotted];
m11_659 -> m11_667  [color=darkseagreen4, key=1, label=version, style=dashed];
m11_661 -> m11_662  [key=0, style=solid];
m11_661 -> m11_496  [key=2, style=dotted];
m11_662 -> m11_655  [key=0, style=solid];
m11_662 -> m11_518  [key=2, style=dotted];
m11_662 -> m11_667  [color=darkseagreen4, key=1, label=encoding, style=dashed];
m11_664 -> m11_665  [key=0, style=solid];
m11_664 -> m11_496  [key=2, style=dotted];
m11_665 -> m11_655  [key=0, style=solid];
m11_665 -> m11_518  [key=2, style=dotted];
m11_665 -> m11_667  [color=darkseagreen4, key=1, label=standalone, style=dashed];
m11_666 -> m11_671  [key=0, style=solid];
m11_666 -> m11_492  [key=2, style=dotted];
m11_667 -> m11_668  [key=0, style=solid];
m11_667 -> m11_105  [key=2, style=dotted];
m11_668 -> m11_671  [key=0, style=solid];
m11_668 -> m11_123  [key=2, style=dotted];
m11_669 -> m11_670  [key=0, style=solid];
m11_669 -> m11_551  [key=2, style=dotted];
m11_669 -> m11_518  [key=2, style=dotted];
m11_669 -> m11_109  [key=2, style=dotted];
m11_670 -> m11_671  [key=0, style=solid];
m11_670 -> m11_123  [key=2, style=dotted];
m11_652 -> m11_653  [key=0, style=solid];
m11_652 -> m11_667  [color=darkseagreen4, key=1, label=version, style=dashed];
m11_653 -> m11_654  [key=0, style=solid];
m11_653 -> m11_667  [color=darkseagreen4, key=1, label=encoding, style=dashed];
m11_654 -> m11_655  [key=0, style=solid];
m11_654 -> m11_667  [color=darkseagreen4, key=1, label=standalone, style=dashed];
m11_657 -> m11_658  [key=0, style=solid];
m11_660 -> m11_661  [key=0, style=solid];
m11_663 -> m11_664  [key=0, style=solid];
m11_671 -> m11_519  [color=blue, key=0, style=bold];
m11_227 -> m11_228  [key=0, style=solid];
m11_227 -> m11_123  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_227 -> m11_192  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m11_228 -> m11_229  [key=0, style=solid];
m11_228 -> m11_230  [key=2, style=dotted];
m11_229 -> m11_227  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_97  [color=green, key=3, label="Parameter variable string text", style=bold];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_6  [key=2, style=dotted];
m11_9 -> m11_11  [key=2, style=dotted];
m11_10 -> m11_8  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_43  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement", style=bold];
m11_113 -> m11_170  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement", style=bold];
m11_113 -> m11_553  [color=green, key=3, label="Parameter variable string qualifiedName", style=bold];
m11_113 -> m11_694  [color=green, key=3, label="Parameter variable string namespaceUri", style=bold];
m11_114 -> m11_113  [color=blue, key=0, style=bold];
m11_152 -> m11_153  [key=0, style=solid];
m11_152 -> m11_105  [color=green, key=3, label="Parameter variable string standalone", style=bold];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_125  [key=2, style=dotted];
m11_153 -> m11_155  [key=2, style=dotted];
m11_154 -> m11_152  [color=blue, key=0, style=bold];
m11_3 -> m11_4  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_6  [key=2, style=dotted];
m11_4 -> m11_7  [key=2, style=dotted];
m11_5 -> m11_3  [color=blue, key=0, style=bold];
m11_20 -> m11_21  [key=0, style=solid];
m11_20 -> m11_103  [color=green, key=3, label="Parameter variable string text", style=bold];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_6  [key=2, style=dotted];
m11_21 -> m11_23  [key=2, style=dotted];
m11_22 -> m11_20  [color=blue, key=0, style=bold];
m11_499 -> m11_500  [key=0, style=solid];
m11_499 -> m11_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_499 -> m11_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_499 -> m11_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_499 -> m11_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_499 -> m11_509  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_499 -> m11_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_499 -> m11_511  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_499 -> m11_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_499 -> m11_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_499 -> m11_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_499 -> m11_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_499 -> m11_497  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m11_499 -> m11_522  [color=green, key=3, label="Parameter variable string propertyName", style=bold];
m11_499 -> m11_702  [color=green, key=3, label="Parameter variable string propertyName", style=bold];
m11_499 -> m11_714  [color=green, key=3, label="Parameter variable string propertyName", style=bold];
m11_499 -> m11_586  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m11_500 -> m11_501  [key=0, style=solid];
m11_500 -> m11_503  [key=0, style=solid];
m11_500 -> m11_505  [key=0, style=solid];
m11_500 -> m11_507  [key=0, style=solid];
m11_500 -> m11_509  [key=0, style=solid];
m11_502 -> m11_517  [key=0, style=solid];
m11_502 -> m11_518  [key=2, style=dotted];
m11_502 -> m11_97  [key=2, style=dotted];
m11_502 -> m11_123  [key=2, style=dotted];
m11_504 -> m11_517  [key=0, style=solid];
m11_504 -> m11_518  [key=2, style=dotted];
m11_504 -> m11_99  [key=2, style=dotted];
m11_504 -> m11_123  [key=2, style=dotted];
m11_506 -> m11_517  [key=0, style=solid];
m11_506 -> m11_518  [key=2, style=dotted];
m11_506 -> m11_101  [key=2, style=dotted];
m11_506 -> m11_123  [key=2, style=dotted];
m11_508 -> m11_517  [key=0, style=solid];
m11_508 -> m11_518  [key=2, style=dotted];
m11_508 -> m11_103  [key=2, style=dotted];
m11_508 -> m11_123  [key=2, style=dotted];
m11_509 -> m11_510  [key=0, style=solid];
m11_509 -> m11_511  [key=0, style=solid];
m11_509 -> m11_295  [key=2, style=dotted];
m11_510 -> m11_517  [key=0, style=solid];
m11_510 -> m11_519  [key=2, style=dotted];
m11_511 -> m11_512  [key=0, style=solid];
m11_511 -> m11_513  [key=0, style=solid];
m11_511 -> m11_520  [key=2, style=dotted];
m11_512 -> m11_517  [key=0, style=solid];
m11_512 -> m11_521  [key=2, style=dotted];
m11_513 -> m11_514  [key=0, style=solid];
m11_513 -> m11_516  [key=0, style=solid];
m11_514 -> m11_515  [key=0, style=solid];
m11_514 -> m11_522  [key=2, style=dotted];
m11_516 -> m11_517  [key=0, style=solid];
m11_516 -> m11_495  [key=2, style=dotted];
m11_501 -> m11_502  [key=0, style=solid];
m11_503 -> m11_504  [key=0, style=solid];
m11_505 -> m11_506  [key=0, style=solid];
m11_507 -> m11_508  [key=0, style=solid];
m11_515 -> m11_517  [key=0, style=solid];
m11_517 -> m11_499  [color=blue, key=0, style=bold];
m11_195 -> m11_196  [key=0, style=solid];
m11_196 -> m11_195  [color=blue, key=0, style=bold];
m11_168 -> m11_232  [key=0, style=solid];
m11_232 -> m11_168  [color=blue, key=0, style=bold];
m11_288 -> m11_289  [key=0, style=solid];
m11_288 -> m11_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_288 -> m11_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_288 -> m11_296  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_289 -> m11_290  [key=0, style=solid];
m11_289 -> m11_294  [key=2, style=dotted];
m11_289 -> m11_291  [color=darkseagreen4, key=1, label=prefix, style=dashed];
m11_291 -> m11_293  [key=0, style=solid];
m11_292 -> m11_293  [key=0, style=solid];
m11_290 -> m11_291  [key=0, style=solid];
m11_290 -> m11_292  [key=0, style=solid];
m11_290 -> m11_295  [key=2, style=dotted];
m11_293 -> m11_288  [color=blue, key=0, style=bold];
m11_128 -> m11_129  [key=0, style=solid];
m11_129 -> m11_130  [key=0, style=solid];
m11_130 -> m11_128  [color=blue, key=0, style=bold];
m11_241 -> m11_242  [key=0, style=solid];
m11_241 -> m11_121  [color=green, key=3, label="Parameter variable string namespaceUri", style=bold];
m11_242 -> m11_243  [key=0, style=solid];
m11_242 -> m11_68  [key=2, style=dotted];
m11_243 -> m11_241  [color=blue, key=0, style=bold];
m11_449 -> m11_739  [key=0, style=solid];
m11_449 -> m11_366  [color=green, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode> c", style=bold];
m11_739 -> m11_740  [key=0, style=solid];
m11_739 -> m11_741  [key=2, style=dotted];
m11_739 -> m11_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_740 -> m11_449  [color=blue, key=0, style=bold];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_20  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateSignificantWhitespace", style=bold];
m11_103 -> m11_149  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateSignificantWhitespace", style=bold];
m11_104 -> m11_103  [color=blue, key=0, style=bold];
m11_192 -> m11_220  [key=0, style=solid];
m11_192 -> m11_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_192 -> m11_185  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_192 -> m11_192  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m11_192 -> m11_227  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_220 -> m11_221  [key=0, style=solid];
m11_220 -> m11_224  [key=2, style=dotted];
m11_222 -> m11_223  [key=0, style=solid];
m11_221 -> m11_222  [key=0, style=solid];
m11_223 -> m11_192  [color=blue, key=0, style=bold];
m11_583 -> m11_0  [color=darkorchid, key=3, label="Field variable XmlDocument _document", style=bold];
m11_323 -> m11_324  [key=0, style=solid];
m11_323 -> m11_259  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node", style=bold];
m11_324 -> m11_325  [key=0, style=solid];
m11_324 -> m11_327  [key=2, style=dotted];
m11_324 -> m11_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_325 -> m11_326  [key=0, style=solid];
m11_325 -> m11_328  [key=2, style=dotted];
m11_326 -> m11_323  [color=blue, key=0, style=bold];
m11_72 -> m11_73  [key=0, style=solid];
m11_73 -> m11_74  [key=0, style=solid];
m11_74 -> m11_72  [color=blue, key=0, style=bold];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_109  [color=green, key=3, label="Parameter variable string data", style=bold];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_163  [key=2, style=dotted];
m11_161 -> m11_164  [key=2, style=dotted];
m11_162 -> m11_160  [color=blue, key=0, style=bold];
m11_296 -> m11_297  [key=0, style=solid];
m11_296 -> m11_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_296 -> m11_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_296 -> m11_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_296 -> m11_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_296 -> m11_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_296 -> m11_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_296 -> m11_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_296 -> m11_259  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_296 -> m11_288  [color=green, key=3, label="method methodReturn string GetPropertyName", style=bold];
m11_296 -> m11_336  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node", style=bold];
m11_296 -> m11_332  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_297 -> m11_298  [key=0, style=solid];
m11_297 -> m11_302  [key=0, style=solid];
m11_297 -> m11_304  [key=0, style=solid];
m11_297 -> m11_306  [key=0, style=solid];
m11_297 -> m11_308  [key=0, style=solid];
m11_297 -> m11_310  [key=0, style=solid];
m11_297 -> m11_312  [key=0, style=solid];
m11_297 -> m11_314  [key=0, style=solid];
m11_297 -> m11_316  [key=0, style=solid];
m11_297 -> m11_318  [key=0, style=solid];
m11_297 -> m11_320  [key=0, style=solid];
m11_299 -> m11_300  [key=0, style=solid];
m11_299 -> m11_301  [key=0, style=solid];
m11_300 -> m11_321  [key=0, style=solid];
m11_301 -> m11_321  [key=0, style=solid];
m11_301 -> m11_288  [key=2, style=dotted];
m11_307 -> m11_321  [key=0, style=solid];
m11_307 -> m11_288  [key=2, style=dotted];
m11_309 -> m11_321  [key=0, style=solid];
m11_309 -> m11_288  [key=2, style=dotted];
m11_311 -> m11_321  [key=0, style=solid];
m11_311 -> m11_288  [key=2, style=dotted];
m11_320 -> m11_321  [key=0, style=solid];
m11_320 -> m11_322  [key=2, style=dotted];
m11_298 -> m11_299  [key=0, style=solid];
m11_302 -> m11_303  [key=0, style=solid];
m11_304 -> m11_305  [key=0, style=solid];
m11_306 -> m11_307  [key=0, style=solid];
m11_308 -> m11_309  [key=0, style=solid];
m11_310 -> m11_311  [key=0, style=solid];
m11_312 -> m11_313  [key=0, style=solid];
m11_314 -> m11_315  [key=0, style=solid];
m11_316 -> m11_317  [key=0, style=solid];
m11_318 -> m11_319  [key=0, style=solid];
m11_303 -> m11_321  [key=0, style=solid];
m11_305 -> m11_321  [key=0, style=solid];
m11_313 -> m11_321  [key=0, style=solid];
m11_315 -> m11_321  [key=0, style=solid];
m11_317 -> m11_321  [key=0, style=solid];
m11_319 -> m11_321  [key=0, style=solid];
m11_321 -> m11_296  [color=blue, key=0, style=bold];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_111  [color=green, key=3, label="Parameter variable string elementName", style=bold];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_168  [key=2, style=dotted];
m11_166 -> m11_169  [key=2, style=dotted];
m11_167 -> m11_165  [color=blue, key=0, style=bold];
m11_459 -> m11_460  [key=0, style=solid];
m11_459 -> m11_465  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_459 -> m11_466  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_459 -> m11_471  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_459 -> m11_472  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_459 -> m11_478  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_459 -> m11_479  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_459 -> m11_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_459 -> m11_483  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_459 -> m11_484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_459 -> m11_485  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_459 -> m11_486  [color=darkorchid, key=3, label="method methodReturn object ReadJson", style=bold];
m11_460 -> m11_461  [key=0, style=solid];
m11_460 -> m11_462  [key=0, style=solid];
m11_465 -> m11_466  [key=0, style=solid];
m11_465 -> m11_471  [key=0, style=solid];
m11_465 -> m11_491  [key=2, style=dotted];
m11_466 -> m11_467  [key=0, style=solid];
m11_466 -> m11_468  [key=0, style=solid];
m11_471 -> m11_472  [key=0, style=solid];
m11_471 -> m11_477  [key=0, style=solid];
m11_471 -> m11_491  [key=2, style=dotted];
m11_472 -> m11_473  [key=0, style=solid];
m11_472 -> m11_474  [key=0, style=solid];
m11_478 -> m11_490  [key=0, style=solid];
m11_478 -> m11_492  [key=2, style=dotted];
m11_479 -> m11_480  [key=0, style=solid];
m11_479 -> m11_481  [key=0, style=solid];
m11_482 -> m11_485  [key=0, style=solid];
m11_482 -> m11_495  [key=2, style=dotted];
m11_483 -> m11_484  [key=0, style=solid];
m11_483 -> m11_496  [key=2, style=dotted];
m11_484 -> m11_485  [key=0, style=solid];
m11_484 -> m11_497  [key=2, style=dotted];
m11_485 -> m11_486  [key=0, style=solid];
m11_485 -> m11_489  [key=0, style=solid];
m11_461 -> m11_490  [key=0, style=solid];
m11_462 -> m11_463  [key=0, style=solid];
m11_462 -> m11_255  [key=2, style=dotted];
m11_462 -> m11_256  [key=2, style=dotted];
m11_462 -> m11_482  [color=darkseagreen4, key=1, label=manager, style=dashed];
m11_462 -> m11_484  [color=darkseagreen4, key=1, label=manager, style=dashed];
m11_463 -> m11_464  [key=0, style=solid];
m11_463 -> m11_477  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_463 -> m11_482  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_463 -> m11_484  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_463 -> m11_486  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_463 -> m11_489  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_464 -> m11_465  [key=0, style=solid];
m11_464 -> m11_477  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m11_464 -> m11_482  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m11_464 -> m11_484  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m11_464 -> m11_463  [color=green, key=3, label="Local variable Newtonsoft.Json.Converters.IXmlNode rootNode", style=bold];
m11_477 -> m11_478  [key=0, style=solid];
m11_477 -> m11_479  [key=0, style=solid];
m11_486 -> m11_487  [key=0, style=solid];
m11_486 -> m11_488  [color=darkseagreen4, key=1, label=element, style=dashed];
m11_489 -> m11_490  [key=0, style=solid];
m11_467 -> m11_490  [key=0, style=solid];
m11_467 -> m11_492  [key=2, style=dotted];
m11_468 -> m11_469  [key=0, style=solid];
m11_468 -> m11_493  [key=2, style=dotted];
m11_469 -> m11_470  [key=0, style=solid];
m11_469 -> m11_131  [key=2, style=dotted];
m11_469 -> m11_477  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_469 -> m11_482  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_469 -> m11_484  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_469 -> m11_486  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_469 -> m11_489  [color=darkseagreen4, key=1, label=document, style=dashed];
m11_470 -> m11_471  [key=0, style=solid];
m11_470 -> m11_477  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m11_470 -> m11_482  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m11_470 -> m11_484  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m11_473 -> m11_490  [key=0, style=solid];
m11_473 -> m11_492  [key=2, style=dotted];
m11_474 -> m11_475  [color=green, key=0, style=solid];
m11_474 -> m11_494  [key=2, style=dotted];
m11_475 -> m11_476  [color=green, key=0, style=solid];
m11_475 -> m11_0  [color=green, key=2, style=dotted];
m11_475 -> m11_477  [color=green, key=1, label=document, style=dashed];
m11_475 -> m11_482  [color=green, key=1, label=document, style=dashed];
m11_475 -> m11_484  [color=green, key=1, label=document, style=dashed];
m11_475 -> m11_486  [color=green, key=1, label=document, style=dashed];
m11_475 -> m11_489  [color=green, key=1, label=document, style=dashed];
m11_476 -> m11_477  [color=green, key=0, style=solid];
m11_476 -> m11_482  [color=green, key=1, label=rootNode, style=dashed];
m11_476 -> m11_484  [color=green, key=1, label=rootNode, style=dashed];
m11_480 -> m11_490  [key=0, style=solid];
m11_480 -> m11_492  [key=2, style=dotted];
m11_481 -> m11_482  [key=0, style=solid];
m11_481 -> m11_483  [key=0, style=solid];
m11_481 -> m11_295  [key=2, style=dotted];
m11_487 -> m11_488  [key=0, style=solid];
m11_487 -> m11_498  [key=2, style=dotted];
m11_488 -> m11_490  [key=0, style=solid];
m11_490 -> m11_459  [color=blue, key=0, style=bold];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_99  [color=green, key=3, label="Parameter variable string data", style=bold];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_136  [key=2, style=dotted];
m11_143 -> m11_145  [key=2, style=dotted];
m11_144 -> m11_142  [color=blue, key=0, style=bold];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_115  [color=green, key=3, label="Parameter variable string value", style=bold];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_179  [key=2, style=dotted];
m11_177 -> m11_180  [key=2, style=dotted];
m11_177 -> m11_177  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_178 -> m11_176  [color=blue, key=0, style=bold];
m11_522 -> m11_585  [key=0, style=solid];
m11_522 -> m11_586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_522 -> m11_587  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_522 -> m11_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_522 -> m11_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_522 -> m11_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_522 -> m11_595  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_522 -> m11_602  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_522 -> m11_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_522 -> m11_499  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_585 -> m11_586  [key=0, style=solid];
m11_585 -> m11_549  [key=2, style=dotted];
m11_586 -> m11_587  [key=0, style=solid];
m11_586 -> m11_553  [key=2, style=dotted];
m11_586 -> m11_590  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m11_586 -> m11_593  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m11_586 -> m11_595  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m11_587 -> m11_588  [key=0, style=solid];
m11_587 -> m11_123  [key=2, style=dotted];
m11_589 -> m11_590  [key=0, style=solid];
m11_589 -> m11_592  [key=0, style=solid];
m11_589 -> m11_496  [key=2, style=dotted];
m11_590 -> m11_591  [key=0, style=solid];
m11_590 -> m11_499  [key=2, style=dotted];
m11_593 -> m11_594  [key=0, style=solid];
m11_593 -> m11_598  [key=2, style=dotted];
m11_595 -> m11_596  [key=0, style=solid];
m11_595 -> m11_599  [key=2, style=dotted];
m11_595 -> m11_600  [key=2, style=dotted];
m11_595 -> m11_601  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_596 -> m11_597  [key=0, style=solid];
m11_596 -> m11_598  [key=2, style=dotted];
m11_588 -> m11_589  [key=0, style=solid];
m11_588 -> m11_591  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_588 -> m11_594  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_588 -> m11_335  [color=green, key=3, label="Local variable int count", style=bold];
m11_591 -> m11_589  [key=0, style=solid];
m11_591 -> m11_591  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_591 -> m11_594  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_594 -> m11_595  [key=0, style=solid];
m11_594 -> m11_597  [key=0, style=solid];
m11_592 -> m11_593  [key=0, style=solid];
m11_592 -> m11_594  [key=0, style=solid];
m11_597 -> m11_522  [color=blue, key=0, style=bold];
m11_125 -> m11_126  [key=0, style=solid];
m11_126 -> m11_127  [key=0, style=solid];
m11_127 -> m11_125  [color=blue, key=0, style=bold];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_60  [color=green, key=3, label="method methodReturn void SetAttributeNode", style=bold];
m11_119 -> m11_117  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute", style=bold];
m11_119 -> m11_233  [color=green, key=3, label="method methodReturn void SetAttributeNode", style=bold];
m11_119 -> m11_531  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute", style=bold];
m11_119 -> m11_537  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute", style=bold];
m11_120 -> m11_119  [color=blue, key=0, style=bold];
m11_163 -> m11_197  [key=0, style=solid];
m11_197 -> m11_163  [color=blue, key=0, style=bold];
m11_146 -> m11_147  [key=0, style=solid];
m11_146 -> m11_101  [color=green, key=3, label="Parameter variable string text", style=bold];
m11_147 -> m11_148  [key=0, style=solid];
m11_147 -> m11_136  [key=2, style=dotted];
m11_147 -> m11_141  [key=2, style=dotted];
m11_148 -> m11_146  [color=blue, key=0, style=bold];
m11_649 -> m11_728  [key=0, style=solid];
m11_649 -> m11_729  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_649 -> m11_732  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_649 -> m11_733  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_649 -> m11_358  [color=green, key=3, label="method methodReturn bool IsNamespaceAttribute", style=bold];
m11_649 -> m11_393  [color=green, key=3, label="method methodReturn bool IsNamespaceAttribute", style=bold];
m11_649 -> m11_616  [color=green, key=3, label="Parameter variable string attributeName", style=bold];
m11_649 -> m11_626  [color=green, key=3, label="Parameter variable string prefix", style=bold];
m11_728 -> m11_729  [key=0, style=solid];
m11_728 -> m11_735  [key=0, style=solid];
m11_728 -> m11_550  [key=2, style=dotted];
m11_729 -> m11_730  [key=0, style=solid];
m11_729 -> m11_732  [key=0, style=solid];
m11_732 -> m11_733  [key=0, style=solid];
m11_732 -> m11_735  [key=0, style=solid];
m11_733 -> m11_734  [key=0, style=solid];
m11_733 -> m11_738  [key=2, style=dotted];
m11_735 -> m11_736  [key=0, style=solid];
m11_735 -> m11_737  [color=darkseagreen4, key=1, label="out string", style=dashed];
m11_730 -> m11_731  [key=0, style=solid];
m11_731 -> m11_737  [key=0, style=solid];
m11_734 -> m11_737  [key=0, style=solid];
m11_736 -> m11_737  [key=0, style=solid];
m11_737 -> m11_649  [color=blue, key=0, style=bold];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_99  [color=green, key=3, label="Parameter variable string data", style=bold];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_6  [key=2, style=dotted];
m11_13 -> m11_15  [key=2, style=dotted];
m11_14 -> m11_12  [color=blue, key=0, style=bold];
m11_193 -> m11_194  [key=0, style=solid];
m11_194 -> m11_193  [color=blue, key=0, style=bold];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_24  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDeclaration", style=bold];
m11_105 -> m11_152  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDeclaration", style=bold];
m11_105 -> m11_652  [color=green, key=3, label="Parameter variable string version", style=bold];
m11_105 -> m11_653  [color=green, key=3, label="Parameter variable string encoding", style=bold];
m11_105 -> m11_654  [color=green, key=3, label="Parameter variable string standalone", style=bold];
m11_106 -> m11_105  [color=blue, key=0, style=bold];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_38  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement", style=bold];
m11_111 -> m11_165  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement", style=bold];
m11_111 -> m11_553  [color=green, key=3, label="Parameter variable string elementName", style=bold];
m11_112 -> m11_111  [color=blue, key=0, style=bold];
m11_219 -> m11_225  [key=0, style=solid];
m11_225 -> m11_226  [key=0, style=solid];
m11_226 -> m11_219  [color=blue, key=0, style=bold];
m11_745 -> m11_746  [key=0, style=solid];
m11_745 -> m11_748  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m11_745 -> m11_358  [color=green, key=3, label="method methodReturn bool CanConvert", style=bold];
m11_745 -> m11_393  [color=green, key=3, label="method methodReturn bool CanConvert", style=bold];
m11_746 -> m11_747  [key=0, style=solid];
m11_746 -> m11_748  [key=0, style=solid];
m11_746 -> m11_491  [key=2, style=dotted];
m11_748 -> m11_749  [key=0, style=solid];
m11_748 -> m11_750  [key=0, style=solid];
m11_748 -> m11_491  [key=2, style=dotted];
m11_747 -> m11_751  [key=0, style=solid];
m11_749 -> m11_751  [key=0, style=solid];
m11_750 -> m11_751  [key=0, style=solid];
m11_751 -> m11_745  [color=blue, key=0, style=bold];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_52 -> m11_117  [color=green, key=3, label="Parameter variable string value", style=bold];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_6  [key=2, style=dotted];
m11_53 -> m11_51  [key=2, style=dotted];
m11_53 -> m11_55  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m11_54 -> m11_55  [key=0, style=solid];
m11_55 -> m11_56  [key=0, style=solid];
m11_56 -> m11_52  [color=blue, key=0, style=bold];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_97  [color=green, key=3, label="Parameter variable string text", style=bold];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_136  [key=2, style=dotted];
m11_139 -> m11_141  [key=2, style=dotted];
m11_140 -> m11_138  [color=blue, key=0, style=bold];
m11_598 -> m11_604  [key=0, style=solid];
m11_598 -> m11_605  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m11_598 -> m11_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m11_598 -> m11_607  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m11_598 -> m11_497  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document", style=bold];
m11_598 -> m11_522  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document", style=bold];
m11_598 -> m11_586  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlElement element", style=bold];
m11_598 -> m11_595  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlElement element", style=bold];
m11_598 -> m11_710  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlElement element", style=bold];
m11_604 -> m11_605  [key=0, style=solid];
m11_604 -> m11_117  [key=2, style=dotted];
m11_604 -> m11_119  [key=2, style=dotted];
m11_604 -> m11_604  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_605 -> m11_606  [key=0, style=solid];
m11_605 -> m11_608  [key=0, style=solid];
m11_606 -> m11_607  [key=0, style=solid];
m11_606 -> m11_608  [key=0, style=solid];
m11_606 -> m11_121  [key=2, style=dotted];
m11_607 -> m11_608  [key=0, style=solid];
m11_607 -> m11_117  [key=2, style=dotted];
m11_607 -> m11_119  [key=2, style=dotted];
m11_607 -> m11_607  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_608 -> m11_598  [color=blue, key=0, style=bold];
m11_742 -> m11_743  [key=0, style=solid];
m11_237 -> m11_238  [key=0, style=solid];
m11_238 -> m11_239  [key=0, style=solid];
m11_238 -> m11_240  [key=2, style=dotted];
m11_239 -> m11_237  [color=blue, key=0, style=bold];
m11_329 -> m11_330  [key=0, style=solid];
m11_330 -> m11_331  [key=0, style=solid];
m11_331 -> m11_329  [color=blue, key=0, style=bold];
m11_457 -> m11_458  [key=0, style=solid];
m11_456 -> m11_457  [key=0, style=solid];
m11_458 -> m11_456  [color=blue, key=0, style=bold];
m11_602 -> m11_603  [key=0, style=solid];
m11_601 -> m11_602  [key=0, style=solid];
m11_603 -> m11_601  [color=blue, key=0, style=bold];
m11_726 -> m11_727  [key=0, style=solid];
m11_725 -> m11_726  [key=0, style=solid];
m11_727 -> m11_725  [color=blue, key=0, style=bold];
m11_743 -> m11_744  [key=0, style=solid];
m11_744 -> m11_742  [color=blue, key=0, style=bold];
m11_131 -> m11_132  [key=0, style=solid];
m11_132 -> m11_131  [color=blue, key=0, style=bold];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_88  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m11_123 -> m11_97  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_123 -> m11_99  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_123 -> m11_101  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_123 -> m11_103  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_123 -> m11_185  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m11_123 -> m11_227  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m11_123 -> m11_533  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_123 -> m11_586  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_123 -> m11_667  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_123 -> m11_669  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_123 -> m11_691  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_124 -> m11_123  [color=blue, key=0, style=bold];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_113  [color=green, key=3, label="Parameter variable string namespaceUri", style=bold];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_41  [key=2, style=dotted];
m11_44 -> m11_42  [key=2, style=dotted];
m11_45 -> m11_43  [color=blue, key=0, style=bold];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_107  [color=green, key=3, label="Parameter variable string internalSubset", style=bold];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_32  [key=2, style=dotted];
m11_30 -> m11_33  [key=2, style=dotted];
m11_31 -> m11_29  [color=blue, key=0, style=bold];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_65  [color=green, key=3, label="method methodReturn string GetPrefixOfNamespace", style=bold];
m11_121 -> m11_241  [color=green, key=3, label="method methodReturn string GetPrefixOfNamespace", style=bold];
m11_122 -> m11_121  [color=blue, key=0, style=bold];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_12  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateCDataSection", style=bold];
m11_99 -> m11_142  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateCDataSection", style=bold];
m11_100 -> m11_99  [color=blue, key=0, style=bold];
m11_198 -> m11_199  [key=0, style=solid];
m11_199 -> m11_198  [color=blue, key=0, style=bold];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_121  [color=green, key=3, label="Parameter variable string namespaceUri", style=bold];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_68  [key=2, style=dotted];
m11_67 -> m11_65  [color=blue, key=0, style=bold];
m11_244 -> m11_245  [key=0, style=solid];
m11_244 -> m11_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_244 -> m11_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_244 -> m11_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_245 -> m11_246  [key=0, style=solid];
m11_245 -> m11_254  [key=2, style=dotted];
m11_245 -> m11_247  [color=darkseagreen4, key=1, label=node, style=dashed];
m11_245 -> m11_250  [color=darkseagreen4, key=1, label=node, style=dashed];
m11_249 -> m11_250  [key=0, style=solid];
m11_249 -> m11_258  [key=2, style=dotted];
m11_250 -> m11_251  [key=0, style=solid];
m11_250 -> m11_259  [key=2, style=dotted];
m11_252 -> m11_253  [key=0, style=solid];
m11_252 -> m11_260  [key=2, style=dotted];
m11_246 -> m11_247  [key=0, style=solid];
m11_246 -> m11_255  [key=2, style=dotted];
m11_246 -> m11_256  [key=2, style=dotted];
m11_246 -> m11_250  [color=darkseagreen4, key=1, label=manager, style=dashed];
m11_247 -> m11_248  [key=0, style=solid];
m11_247 -> m11_257  [key=2, style=dotted];
m11_248 -> m11_249  [key=0, style=solid];
m11_248 -> m11_250  [key=0, style=solid];
m11_251 -> m11_252  [key=0, style=solid];
m11_251 -> m11_253  [key=0, style=solid];
m11_253 -> m11_244  [color=blue, key=0, style=bold];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_111  [color=green, key=3, label="Parameter variable string elementName", style=bold];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_41  [key=2, style=dotted];
m11_39 -> m11_42  [key=2, style=dotted];
m11_40 -> m11_38  [color=blue, key=0, style=bold];
m11_233 -> m11_234  [key=0, style=solid];
m11_233 -> m11_119  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute", style=bold];
m11_234 -> m11_235  [key=0, style=solid];
m11_235 -> m11_236  [key=0, style=solid];
m11_235 -> m11_224  [key=2, style=dotted];
m11_236 -> m11_233  [color=blue, key=0, style=bold];
m11_254 -> m11_261  [key=0, style=solid];
m11_254 -> m11_262  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_254 -> m11_263  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_254 -> m11_264  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_254 -> m11_200  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode WrapXml", style=bold];
m11_254 -> m11_244  [color=green, key=3, label="Parameter variable object value", style=bold];
m11_261 -> m11_262  [key=0, style=solid];
m11_261 -> m11_263  [key=0, style=solid];
m11_262 -> m11_266  [key=0, style=solid];
m11_262 -> m11_200  [key=2, style=dotted];
m11_263 -> m11_264  [key=0, style=solid];
m11_263 -> m11_265  [key=0, style=solid];
m11_264 -> m11_266  [key=0, style=solid];
m11_264 -> m11_75  [key=2, style=dotted];
m11_265 -> m11_266  [key=0, style=solid];
m11_265 -> m11_267  [key=2, style=dotted];
m11_266 -> m11_254  [color=blue, key=0, style=bold];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_101  [color=green, key=3, label="Parameter variable string text", style=bold];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_6  [key=2, style=dotted];
m11_17 -> m11_19  [key=2, style=dotted];
m11_18 -> m11_16  [color=blue, key=0, style=bold];
m11_46 -> m11_47  [key=0, style=solid];
m11_46 -> m11_48  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_46 -> m11_115  [color=green, key=3, label="Parameter variable string value", style=bold];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_6  [key=2, style=dotted];
m11_47 -> m11_51  [key=2, style=dotted];
m11_47 -> m11_49  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m11_48 -> m11_49  [key=0, style=solid];
m11_49 -> m11_50  [key=0, style=solid];
m11_50 -> m11_46  [color=blue, key=0, style=bold];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_16  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateWhitespace", style=bold];
m11_101 -> m11_146  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateWhitespace", style=bold];
m11_102 -> m11_101  [color=blue, key=0, style=bold];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_46  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute", style=bold];
m11_115 -> m11_176  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute", style=bold];
m11_115 -> m11_528  [color=green, key=3, label="Parameter variable string name", style=bold];
m11_115 -> m11_529  [color=green, key=3, label="Parameter variable string value", style=bold];
m11_116 -> m11_115  [color=blue, key=0, style=bold];
m11_553 -> m11_694  [key=0, style=solid];
m11_553 -> m11_695  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_553 -> m11_495  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_553 -> m11_522  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_553 -> m11_526  [color=green, key=3, label="Parameter variable string elementPrefix", style=bold];
m11_553 -> m11_585  [color=green, key=3, label="Parameter variable string elementPrefix", style=bold];
m11_694 -> m11_695  [key=0, style=solid];
m11_694 -> m11_295  [key=2, style=dotted];
m11_694 -> m11_552  [key=2, style=dotted];
m11_695 -> m11_696  [key=0, style=solid];
m11_695 -> m11_295  [key=2, style=dotted];
m11_695 -> m11_113  [key=2, style=dotted];
m11_695 -> m11_111  [key=2, style=dotted];
m11_696 -> m11_697  [key=0, style=solid];
m11_697 -> m11_553  [color=blue, key=0, style=bold];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_92  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_88 -> m11_88  [color=green, key=3, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild", style=bold];
m11_88 -> m11_123  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild", style=bold];
m11_89 -> m11_90  [key=0, style=solid];
m11_92 -> m11_93  [key=0, style=solid];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_94  [key=2, style=dotted];
m11_91 -> m11_92  [key=0, style=solid];
m11_93 -> m11_88  [color=blue, key=0, style=bold];
m11_259 -> m11_368  [key=0, style=solid];
m11_259 -> m11_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_375  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_259 -> m11_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_380  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_259 -> m11_381  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_259 -> m11_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_386  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_390  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_397  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_259 -> m11_399  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_259 -> m11_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_412  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_259 -> m11_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_418  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_421  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_424  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_428  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_432  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_435  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_438  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m11_259 -> m11_446  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_259 -> m11_244  [color=green, key=3, label="Parameter variable Newtonsoft.Json.JsonWriter writer", style=bold];
m11_259 -> m11_245  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node", style=bold];
m11_259 -> m11_246  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_259 -> m11_259  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_259 -> m11_332  [color=green, key=3, label="Parameter variable bool writePropertyName", style=bold];
m11_259 -> m11_358  [color=green, key=3, label="Parameter variable bool writePropertyName", style=bold];
m11_368 -> m11_369  [key=0, style=solid];
m11_368 -> m11_372  [key=0, style=solid];
m11_368 -> m11_398  [key=0, style=solid];
m11_368 -> m11_401  [key=0, style=solid];
m11_368 -> m11_415  [key=0, style=solid];
m11_368 -> m11_429  [key=0, style=solid];
m11_368 -> m11_446  [key=0, style=solid];
m11_371 -> m11_447  [key=0, style=solid];
m11_371 -> m11_332  [key=2, style=dotted];
m11_373 -> m11_374  [key=0, style=solid];
m11_373 -> m11_375  [key=0, style=solid];
m11_373 -> m11_323  [key=2, style=dotted];
m11_373 -> m11_448  [key=2, style=dotted];
m11_373 -> m11_456  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_374 -> m11_447  [key=0, style=solid];
m11_374 -> m11_332  [key=2, style=dotted];
m11_375 -> m11_376  [key=0, style=solid];
m11_375 -> m11_286  [key=2, style=dotted];
m11_376 -> m11_377  [key=0, style=solid];
m11_376 -> m11_381  [key=0, style=solid];
m11_376 -> m11_378  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m11_376 -> m11_379  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m11_380 -> m11_376  [key=0, style=solid];
m11_380 -> m11_287  [key=2, style=dotted];
m11_381 -> m11_382  [key=0, style=solid];
m11_381 -> m11_383  [key=0, style=solid];
m11_382 -> m11_383  [key=0, style=solid];
m11_382 -> m11_296  [key=2, style=dotted];
m11_382 -> m11_365  [key=2, style=dotted];
m11_383 -> m11_384  [key=0, style=solid];
m11_383 -> m11_385  [key=0, style=solid];
m11_383 -> m11_449  [key=2, style=dotted];
m11_383 -> m11_450  [key=2, style=dotted];
m11_384 -> m11_397  [key=0, style=solid];
m11_384 -> m11_451  [key=2, style=dotted];
m11_385 -> m11_386  [key=0, style=solid];
m11_385 -> m11_390  [key=0, style=solid];
m11_385 -> m11_452  [key=2, style=dotted];
m11_386 -> m11_387  [key=0, style=solid];
m11_388 -> m11_397  [key=0, style=solid];
m11_388 -> m11_453  [key=2, style=dotted];
m11_389 -> m11_397  [key=0, style=solid];
m11_389 -> m11_451  [key=2, style=dotted];
m11_390 -> m11_391  [key=0, style=solid];
m11_390 -> m11_258  [key=2, style=dotted];
m11_392 -> m11_393  [key=0, style=solid];
m11_392 -> m11_395  [key=0, style=solid];
m11_392 -> m11_335  [color=green, key=3, label="Local variable int i", style=bold];
m11_393 -> m11_394  [key=0, style=solid];
m11_393 -> m11_259  [key=2, style=dotted];
m11_395 -> m11_396  [key=0, style=solid];
m11_395 -> m11_332  [key=2, style=dotted];
m11_396 -> m11_397  [key=0, style=solid];
m11_396 -> m11_260  [key=2, style=dotted];
m11_397 -> m11_447  [key=0, style=solid];
m11_397 -> m11_454  [key=2, style=dotted];
m11_399 -> m11_400  [key=0, style=solid];
m11_399 -> m11_447  [key=0, style=solid];
m11_400 -> m11_447  [key=0, style=solid];
m11_400 -> m11_455  [key=2, style=dotted];
m11_407 -> m11_408  [key=0, style=solid];
m11_407 -> m11_409  [key=0, style=solid];
m11_409 -> m11_410  [key=0, style=solid];
m11_409 -> m11_412  [key=0, style=solid];
m11_410 -> m11_411  [key=0, style=solid];
m11_410 -> m11_412  [key=0, style=solid];
m11_412 -> m11_413  [key=0, style=solid];
m11_412 -> m11_414  [key=0, style=solid];
m11_413 -> m11_414  [key=0, style=solid];
m11_413 -> m11_296  [key=2, style=dotted];
m11_413 -> m11_365  [key=2, style=dotted];
m11_414 -> m11_447  [key=0, style=solid];
m11_414 -> m11_451  [key=2, style=dotted];
m11_416 -> m11_417  [key=0, style=solid];
m11_416 -> m11_419  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m11_416 -> m11_421  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m11_416 -> m11_422  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m11_416 -> m11_424  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m11_416 -> m11_425  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m11_416 -> m11_427  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m11_417 -> m11_418  [key=0, style=solid];
m11_417 -> m11_296  [key=2, style=dotted];
m11_417 -> m11_365  [key=2, style=dotted];
m11_418 -> m11_419  [key=0, style=solid];
m11_418 -> m11_258  [key=2, style=dotted];
m11_420 -> m11_421  [key=0, style=solid];
m11_420 -> m11_365  [key=2, style=dotted];
m11_421 -> m11_422  [key=0, style=solid];
m11_421 -> m11_451  [key=2, style=dotted];
m11_423 -> m11_424  [key=0, style=solid];
m11_423 -> m11_365  [key=2, style=dotted];
m11_424 -> m11_425  [key=0, style=solid];
m11_424 -> m11_451  [key=2, style=dotted];
m11_426 -> m11_427  [key=0, style=solid];
m11_426 -> m11_365  [key=2, style=dotted];
m11_427 -> m11_428  [key=0, style=solid];
m11_427 -> m11_451  [key=2, style=dotted];
m11_428 -> m11_447  [key=0, style=solid];
m11_428 -> m11_260  [key=2, style=dotted];
m11_430 -> m11_431  [key=0, style=solid];
m11_430 -> m11_433  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m11_430 -> m11_435  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m11_430 -> m11_436  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m11_430 -> m11_438  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m11_430 -> m11_439  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m11_430 -> m11_441  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m11_430 -> m11_442  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m11_430 -> m11_444  [color=darkseagreen4, key=1, label=documentType, style=dashed];
m11_431 -> m11_432  [key=0, style=solid];
m11_431 -> m11_296  [key=2, style=dotted];
m11_431 -> m11_365  [key=2, style=dotted];
m11_432 -> m11_433  [key=0, style=solid];
m11_432 -> m11_258  [key=2, style=dotted];
m11_434 -> m11_435  [key=0, style=solid];
m11_434 -> m11_365  [key=2, style=dotted];
m11_435 -> m11_436  [key=0, style=solid];
m11_435 -> m11_451  [key=2, style=dotted];
m11_437 -> m11_438  [key=0, style=solid];
m11_437 -> m11_365  [key=2, style=dotted];
m11_438 -> m11_439  [key=0, style=solid];
m11_438 -> m11_451  [key=2, style=dotted];
m11_440 -> m11_441  [key=0, style=solid];
m11_440 -> m11_365  [key=2, style=dotted];
m11_441 -> m11_442  [key=0, style=solid];
m11_441 -> m11_451  [key=2, style=dotted];
m11_443 -> m11_444  [key=0, style=solid];
m11_443 -> m11_365  [key=2, style=dotted];
m11_444 -> m11_445  [key=0, style=solid];
m11_444 -> m11_451  [key=2, style=dotted];
m11_445 -> m11_447  [key=0, style=solid];
m11_445 -> m11_260  [key=2, style=dotted];
m11_446 -> m11_447  [key=0, style=solid];
m11_446 -> m11_322  [key=2, style=dotted];
m11_369 -> m11_370  [key=0, style=solid];
m11_372 -> m11_373  [key=0, style=solid];
m11_398 -> m11_399  [key=0, style=solid];
m11_401 -> m11_402  [key=0, style=solid];
m11_415 -> m11_416  [key=0, style=solid];
m11_429 -> m11_430  [key=0, style=solid];
m11_370 -> m11_371  [key=0, style=solid];
m11_377 -> m11_378  [key=0, style=solid];
m11_377 -> m11_376  [key=0, style=solid];
m11_378 -> m11_379  [key=0, style=solid];
m11_378 -> m11_380  [color=darkseagreen4, key=1, label=namespacePrefix, style=dashed];
m11_379 -> m11_380  [key=0, style=solid];
m11_387 -> m11_388  [key=0, style=solid];
m11_387 -> m11_389  [key=0, style=solid];
m11_391 -> m11_392  [key=0, style=solid];
m11_391 -> m11_393  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_391 -> m11_394  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_394 -> m11_392  [key=0, style=solid];
m11_394 -> m11_394  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_402 -> m11_403  [key=0, style=solid];
m11_403 -> m11_404  [key=0, style=solid];
m11_404 -> m11_405  [key=0, style=solid];
m11_405 -> m11_406  [key=0, style=solid];
m11_406 -> m11_407  [key=0, style=solid];
m11_406 -> m11_406  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_408 -> m11_447  [key=0, style=solid];
m11_411 -> m11_447  [key=0, style=solid];
m11_419 -> m11_420  [key=0, style=solid];
m11_419 -> m11_422  [key=0, style=solid];
m11_419 -> m11_295  [key=2, style=dotted];
m11_422 -> m11_423  [key=0, style=solid];
m11_422 -> m11_425  [key=0, style=solid];
m11_422 -> m11_295  [key=2, style=dotted];
m11_425 -> m11_426  [key=0, style=solid];
m11_425 -> m11_428  [key=0, style=solid];
m11_425 -> m11_295  [key=2, style=dotted];
m11_433 -> m11_434  [key=0, style=solid];
m11_433 -> m11_436  [key=0, style=solid];
m11_433 -> m11_295  [key=2, style=dotted];
m11_436 -> m11_437  [key=0, style=solid];
m11_436 -> m11_439  [key=0, style=solid];
m11_436 -> m11_295  [key=2, style=dotted];
m11_439 -> m11_440  [key=0, style=solid];
m11_439 -> m11_442  [key=0, style=solid];
m11_439 -> m11_295  [key=2, style=dotted];
m11_442 -> m11_443  [key=0, style=solid];
m11_442 -> m11_445  [key=0, style=solid];
m11_442 -> m11_295  [key=2, style=dotted];
m11_447 -> m11_259  [color=blue, key=0, style=bold];
m11_257 -> m11_268  [key=0, style=solid];
m11_257 -> m11_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_257 -> m11_278  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_257 -> m11_281  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_257 -> m11_245  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node", style=bold];
m11_257 -> m11_246  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_268 -> m11_269  [key=0, style=solid];
m11_268 -> m11_272  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m11_268 -> m11_274  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m11_268 -> m11_275  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m11_268 -> m11_276  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m11_268 -> m11_277  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m11_269 -> m11_270  [key=0, style=solid];
m11_269 -> m11_257  [color=green, key=3, label="Local variable Newtonsoft.Json.Converters.IXmlNode parent", style=bold];
m11_278 -> m11_279  [key=0, style=solid];
m11_278 -> m11_286  [key=2, style=dotted];
m11_281 -> m11_279  [key=0, style=solid];
m11_281 -> m11_287  [key=2, style=dotted];
m11_272 -> m11_273  [key=0, style=solid];
m11_272 -> m11_274  [key=0, style=solid];
m11_274 -> m11_270  [key=0, style=solid];
m11_274 -> m11_284  [key=2, style=dotted];
m11_275 -> m11_276  [key=0, style=solid];
m11_275 -> m11_282  [key=0, style=solid];
m11_276 -> m11_277  [key=0, style=solid];
m11_276 -> m11_285  [key=2, style=dotted];
m11_277 -> m11_278  [key=0, style=solid];
m11_277 -> m11_282  [key=0, style=solid];
m11_277 -> m11_279  [color=darkseagreen4, key=1, label=parentElement, style=dashed];
m11_270 -> m11_271  [key=0, style=solid];
m11_270 -> m11_275  [key=0, style=solid];
m11_270 -> m11_270  [color=darkseagreen4, key=1, label=parent, style=dashed];
m11_270 -> m11_274  [color=darkseagreen4, key=1, label=parent, style=dashed];
m11_271 -> m11_272  [key=0, style=solid];
m11_271 -> m11_270  [key=0, style=solid];
m11_273 -> m11_274  [key=0, style=solid];
m11_273 -> m11_283  [key=2, style=dotted];
m11_273 -> m11_275  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m11_273 -> m11_276  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m11_273 -> m11_277  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m11_279 -> m11_280  [key=0, style=solid];
m11_279 -> m11_277  [key=0, style=solid];
m11_279 -> m11_281  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m11_280 -> m11_281  [key=0, style=solid];
m11_280 -> m11_279  [key=0, style=solid];
m11_282 -> m11_257  [color=blue, key=0, style=bold];
m11_548 -> m11_609  [key=0, style=solid];
m11_548 -> m11_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_548 -> m11_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_548 -> m11_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_548 -> m11_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_548 -> m11_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_548 -> m11_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_548 -> m11_628  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_548 -> m11_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_548 -> m11_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_548 -> m11_633  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_548 -> m11_636  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_548 -> m11_640  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m11_548 -> m11_646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_548 -> m11_495  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_609 -> m11_610  [key=0, style=solid];
m11_609 -> m11_362  [key=2, style=dotted];
m11_609 -> m11_625  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m11_609 -> m11_639  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m11_609 -> m11_641  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m11_609 -> m11_647  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m11_612 -> m11_613  [key=0, style=solid];
m11_612 -> m11_647  [key=0, style=solid];
m11_612 -> m11_612  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_613 -> m11_614  [key=0, style=solid];
m11_613 -> m11_647  [key=0, style=solid];
m11_613 -> m11_496  [key=2, style=dotted];
m11_614 -> m11_615  [key=0, style=solid];
m11_614 -> m11_644  [key=0, style=solid];
m11_614 -> m11_646  [key=0, style=solid];
m11_616 -> m11_617  [key=0, style=solid];
m11_616 -> m11_518  [key=2, style=dotted];
m11_616 -> m11_618  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_616 -> m11_622  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_623 -> m11_624  [key=0, style=solid];
m11_623 -> m11_496  [key=2, style=dotted];
m11_624 -> m11_625  [key=0, style=solid];
m11_624 -> m11_554  [key=2, style=dotted];
m11_624 -> m11_628  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m11_628 -> m11_613  [key=0, style=solid];
m11_628 -> m11_287  [key=2, style=dotted];
m11_631 -> m11_632  [key=0, style=solid];
m11_631 -> m11_496  [key=2, style=dotted];
m11_632 -> m11_633  [key=0, style=solid];
m11_632 -> m11_518  [key=2, style=dotted];
m11_632 -> m11_641  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m11_633 -> m11_634  [key=0, style=solid];
m11_633 -> m11_294  [key=2, style=dotted];
m11_633 -> m11_641  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m11_636 -> m11_637  [key=0, style=solid];
m11_636 -> m11_638  [key=0, style=solid];
m11_636 -> m11_552  [key=2, style=dotted];
m11_640 -> m11_641  [key=0, style=solid];
m11_640 -> m11_287  [key=2, style=dotted];
m11_646 -> m11_648  [key=0, style=solid];
m11_646 -> m11_492  [key=2, style=dotted];
m11_610 -> m11_611  [key=0, style=solid];
m11_610 -> m11_613  [color=darkseagreen4, key=1, label=finishedAttributes, style=dashed];
m11_610 -> m11_358  [color=green, key=3, label="Local variable bool finishedAttributes", style=bold];
m11_625 -> m11_626  [key=0, style=solid];
m11_625 -> m11_364  [key=2, style=dotted];
m11_639 -> m11_640  [key=0, style=solid];
m11_639 -> m11_364  [key=2, style=dotted];
m11_641 -> m11_613  [key=0, style=solid];
m11_641 -> m11_364  [key=2, style=dotted];
m11_647 -> m11_648  [key=0, style=solid];
m11_611 -> m11_612  [key=0, style=solid];
m11_611 -> m11_613  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
m11_611 -> m11_358  [color=green, key=3, label="Local variable bool finishedElement", style=bold];
m11_615 -> m11_616  [key=0, style=solid];
m11_644 -> m11_645  [key=0, style=solid];
m11_617 -> m11_618  [key=0, style=solid];
m11_617 -> m11_643  [key=0, style=solid];
m11_617 -> m11_295  [key=2, style=dotted];
m11_618 -> m11_619  [key=0, style=solid];
m11_618 -> m11_620  [color=darkseagreen4, key=1, label=firstChar, style=dashed];
m11_622 -> m11_623  [key=0, style=solid];
m11_622 -> m11_551  [key=2, style=dotted];
m11_622 -> m11_622  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_622 -> m11_625  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_622 -> m11_627  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_622 -> m11_630  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_643 -> m11_613  [key=0, style=solid];
m11_619 -> m11_620  [key=0, style=solid];
m11_619 -> m11_554  [color=green, key=3, label="Local variable string attributeValue", style=bold];
m11_620 -> m11_621  [key=0, style=solid];
m11_620 -> m11_629  [key=0, style=solid];
m11_620 -> m11_642  [key=0, style=solid];
m11_621 -> m11_622  [key=0, style=solid];
m11_629 -> m11_630  [key=0, style=solid];
m11_642 -> m11_613  [key=0, style=solid];
m11_627 -> m11_628  [key=0, style=solid];
m11_627 -> m11_613  [key=0, style=solid];
m11_627 -> m11_649  [key=2, style=dotted];
m11_630 -> m11_631  [key=0, style=solid];
m11_630 -> m11_551  [key=2, style=dotted];
m11_630 -> m11_630  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_630 -> m11_641  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m11_626 -> m11_627  [key=0, style=solid];
m11_634 -> m11_635  [key=0, style=solid];
m11_634 -> m11_641  [key=0, style=solid];
m11_635 -> m11_636  [key=0, style=solid];
m11_635 -> m11_637  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_635 -> m11_638  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_637 -> m11_636  [key=0, style=solid];
m11_637 -> m11_650  [key=2, style=dotted];
m11_637 -> m11_637  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_637 -> m11_638  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_638 -> m11_639  [key=0, style=solid];
m11_638 -> m11_640  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m11_638 -> m11_641  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m11_645 -> m11_613  [key=0, style=solid];
m11_648 -> m11_548  [color=blue, key=0, style=bold];
m11_497 -> m11_698  [key=0, style=solid];
m11_497 -> m11_700  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_497 -> m11_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_703  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_704  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_706  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_710  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_497 -> m11_711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m11_497 -> m11_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_714  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_715  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_718  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_722  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_723  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m11_497 -> m11_459  [color=green, key=3, label="Parameter variable Newtonsoft.Json.JsonReader reader", style=bold];
m11_497 -> m11_462  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_497 -> m11_463  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document", style=bold];
m11_497 -> m11_464  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m11_497 -> m11_495  [color=green, key=3, label="Parameter variable XmlNamespaceManager manager", style=bold];
m11_497 -> m11_533  [color=green, key=3, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode", style=bold];
m11_698 -> m11_699  [key=0, style=solid];
m11_698 -> m11_713  [key=0, style=solid];
m11_698 -> m11_717  [key=0, style=solid];
m11_698 -> m11_719  [key=0, style=solid];
m11_698 -> m11_722  [key=0, style=solid];
m11_700 -> m11_701  [key=0, style=solid];
m11_700 -> m11_702  [key=0, style=solid];
m11_702 -> m11_703  [key=0, style=solid];
m11_702 -> m11_518  [key=2, style=dotted];
m11_702 -> m11_707  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m11_702 -> m11_710  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m11_702 -> m11_726  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m11_702 -> m11_712  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m11_703 -> m11_704  [key=0, style=solid];
m11_703 -> m11_496  [key=2, style=dotted];
m11_703 -> m11_703  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_704 -> m11_705  [key=0, style=solid];
m11_704 -> m11_712  [key=0, style=solid];
m11_706 -> m11_707  [key=0, style=solid];
m11_706 -> m11_709  [key=0, style=solid];
m11_706 -> m11_496  [key=2, style=dotted];
m11_707 -> m11_708  [key=0, style=solid];
m11_707 -> m11_499  [key=2, style=dotted];
m11_710 -> m11_711  [key=0, style=solid];
m11_710 -> m11_599  [key=2, style=dotted];
m11_710 -> m11_600  [key=2, style=dotted];
m11_710 -> m11_725  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_711 -> m11_723  [key=0, style=solid];
m11_711 -> m11_598  [key=2, style=dotted];
m11_711 -> m11_711  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m11_712 -> m11_723  [key=0, style=solid];
m11_712 -> m11_499  [key=2, style=dotted];
m11_714 -> m11_715  [key=0, style=solid];
m11_714 -> m11_518  [key=2, style=dotted];
m11_714 -> m11_716  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m11_715 -> m11_716  [key=0, style=solid];
m11_715 -> m11_723  [key=0, style=solid];
m11_715 -> m11_496  [key=2, style=dotted];
m11_716 -> m11_715  [key=0, style=solid];
m11_716 -> m11_499  [key=2, style=dotted];
m11_718 -> m11_723  [key=0, style=solid];
m11_718 -> m11_95  [key=2, style=dotted];
m11_718 -> m11_123  [key=2, style=dotted];
m11_722 -> m11_724  [key=0, style=solid];
m11_722 -> m11_492  [key=2, style=dotted];
m11_723 -> m11_497  [key=0, style=solid];
m11_723 -> m11_724  [key=0, style=solid];
m11_723 -> m11_496  [key=2, style=dotted];
m11_699 -> m11_700  [key=0, style=solid];
m11_713 -> m11_714  [key=0, style=solid];
m11_717 -> m11_718  [key=0, style=solid];
m11_719 -> m11_720  [key=0, style=solid];
m11_719 -> m11_719  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m11_701 -> m11_724  [key=0, style=solid];
m11_701 -> m11_492  [key=2, style=dotted];
m11_705 -> m11_706  [key=0, style=solid];
m11_705 -> m11_708  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_705 -> m11_709  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_705 -> m11_335  [color=green, key=3, label="Local variable int count", style=bold];
m11_708 -> m11_706  [key=0, style=solid];
m11_708 -> m11_708  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_708 -> m11_709  [color=darkseagreen4, key=1, label=count, style=dashed];
m11_709 -> m11_710  [key=0, style=solid];
m11_709 -> m11_723  [key=0, style=solid];
m11_720 -> m11_721  [key=0, style=solid];
m11_721 -> m11_724  [key=0, style=solid];
m11_724 -> m11_497  [color=blue, key=0, style=bold];
m11_752 -> m11_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_35  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_752 -> m11_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m11_753 -> m11_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m11_753 -> m11_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m11_753 -> m11_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m11_754 -> m11_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", style=dashed];
m11_755 -> m11_73  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", style=dashed];
m11_756 -> m11_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m11_756 -> m11_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m11_756 -> m11_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m11_757 -> m11_126  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDeclarationWrapper", style=dashed];
m11_758 -> m11_129  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentTypeWrapper", style=dashed];
m11_759 -> m11_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m11_759 -> m11_190  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m11_760 -> m11_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m11_760 -> m11_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m11_761 -> m11_225  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XObjectWrapper", style=dashed];
m11_762 -> m11_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m11_762 -> m11_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m11_763 -> m11_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_301  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_307  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_337  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_382  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_383  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_393  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_431  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_484  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_516  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_540  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_586  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_590  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_592  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_593  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_707  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_709  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_711  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_712  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_763 -> m11_716  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m11_764 -> m11_457  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m11_765 -> m11_602  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_766 -> m11_726  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m12_111 -> m12_99  [key=2, style=dotted];
m12_111 -> m12_112  [key=0, style=solid];
m12_356 -> m12_357  [key=0, style=solid];
m12_356 -> m12_11  [key=2, style=dotted];
m12_356 -> m12_10  [key=2, style=dotted];
m12_357 -> m12_358  [key=0, style=solid];
m12_357 -> m12_361  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_357 -> m12_357  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_357 -> m12_13  [key=2, style=dotted];
m12_358 -> m12_359  [key=0, style=solid];
m12_358 -> m12_354  [key=2, style=dotted];
m12_358 -> m12_360  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m12_358 -> m12_363  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m12_358 -> m12_306  [key=2, style=dotted];
m12_361 -> m12_362  [key=0, style=solid];
m12_361 -> m12_355  [key=2, style=dotted];
m12_361 -> m12_13  [key=2, style=dotted];
m12_359 -> m12_360  [key=0, style=solid];
m12_359 -> m12_366  [key=2, style=dotted];
m12_359 -> m12_13  [key=2, style=dotted];
m12_359 -> m12_359  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_360 -> m12_361  [key=0, style=solid];
m12_360 -> m12_366  [key=2, style=dotted];
m12_360 -> m12_23  [key=2, style=dotted];
m12_360 -> m12_13  [key=2, style=dotted];
m12_363 -> m12_364  [key=0, style=solid];
m12_363 -> m12_113  [key=2, style=dotted];
m12_362 -> m12_363  [key=0, style=solid];
m12_362 -> m12_51  [key=2, style=dotted];
m12_362 -> m12_366  [key=2, style=dotted];
m12_362 -> m12_23  [key=2, style=dotted];
m12_362 -> m12_350  [color=blue, key=0, style=bold];
m12_364 -> m12_365  [key=0, style=solid];
m12_364 -> m12_135  [key=2, style=dotted];
m12_364 -> m12_364  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_365 -> m12_356  [color=blue, key=0, style=bold];
m12_365 -> m12_8  [key=2, style=dotted];
m12_365 -> m12_366  [key=0, style=solid];
m12_534 -> m12_535  [key=0, style=solid];
m12_534 -> m12_45  [key=2, style=dotted];
m12_534 -> m12_542  [key=2, style=dotted];
m12_534 -> m12_536  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_536 -> m12_80  [key=2, style=dotted];
m12_536 -> m12_537  [key=0, style=solid];
m12_536 -> m12_538  [key=0, style=solid];
m12_536 -> m12_47  [key=2, style=dotted];
m12_535 -> m12_536  [key=0, style=solid];
m12_535 -> m12_539  [key=2, style=dotted];
m12_535 -> m12_517  [key=2, style=dotted];
m12_537 -> m12_537  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_537 -> m12_538  [key=0, style=solid];
m12_537 -> m12_12  [key=2, style=dotted];
m12_537 -> m12_13  [key=2, style=dotted];
m12_537 -> m12_540  [key=0, style=solid];
m12_537 -> m12_543  [key=2, style=dotted];
m12_538 -> m12_534  [color=blue, key=0, style=bold];
m12_538 -> m12_539  [key=0, style=solid];
m12_538 -> m12_222  [key=2, style=dotted];
m12_529 -> m12_530  [key=0, style=solid];
m12_529 -> m12_533  [key=2, style=dotted];
m12_255 -> m12_247  [key=2, style=dotted];
m12_255 -> m12_256  [key=0, style=solid];
m12_450 -> m12_451  [key=0, style=solid];
m12_450 -> m12_458  [key=2, style=dotted];
m12_450 -> m12_459  [key=2, style=dotted];
m12_460 -> m12_460  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m12_460 -> m12_461  [key=0, style=solid];
m12_460 -> m12_81  [key=2, style=dotted];
m12_460 -> m12_11  [key=2, style=dotted];
m12_453 -> m12_13  [key=2, style=dotted];
m12_453 -> m12_454  [key=0, style=solid];
m12_453 -> m12_113  [key=2, style=dotted];
m12_455 -> m12_13  [key=2, style=dotted];
m12_455 -> m12_456  [key=0, style=solid];
m12_455 -> m12_444  [color=blue, key=0, style=bold];
m12_457 -> m12_13  [key=2, style=dotted];
m12_457 -> m12_458  [key=0, style=solid];
m12_459 -> m12_13  [key=2, style=dotted];
m12_459 -> m12_460  [key=0, style=solid];
m12_461 -> m12_13  [key=2, style=dotted];
m12_461 -> m12_462  [key=0, style=solid];
m12_461 -> m12_468  [key=2, style=dotted];
m12_461 -> m12_469  [key=2, style=dotted];
m12_461 -> m12_456  [key=2, style=dotted];
m12_463 -> m12_13  [key=2, style=dotted];
m12_463 -> m12_464  [key=0, style=solid];
m12_463 -> m12_377  [key=2, style=dotted];
m12_463 -> m12_465  [color=darkseagreen4, key=1, label=xmlProduct, style=dashed];
m12_452 -> m12_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_453  [key=0, style=solid];
m12_452 -> m12_455  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_418  [key=2, style=dotted];
m12_452 -> m12_454  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_452 -> m12_366  [key=2, style=dotted];
m12_452 -> m12_23  [key=2, style=dotted];
m12_454 -> m12_81  [key=2, style=dotted];
m12_454 -> m12_11  [key=2, style=dotted];
m12_454 -> m12_455  [key=0, style=solid];
m12_454 -> m12_23  [key=2, style=dotted];
m12_456 -> m12_81  [key=2, style=dotted];
m12_456 -> m12_11  [key=2, style=dotted];
m12_456 -> m12_457  [key=0, style=solid];
m12_458 -> m12_81  [key=2, style=dotted];
m12_458 -> m12_11  [key=2, style=dotted];
m12_458 -> m12_459  [key=0, style=solid];
m12_462 -> m12_81  [key=2, style=dotted];
m12_462 -> m12_83  [key=2, style=dotted];
m12_462 -> m12_463  [key=0, style=solid];
m12_462 -> m12_458  [key=2, style=dotted];
m12_462 -> m12_459  [key=2, style=dotted];
m12_451 -> m12_449  [key=2, style=dotted];
m12_451 -> m12_452  [key=0, style=solid];
m12_451 -> m12_377  [key=2, style=dotted];
m12_451 -> m12_453  [color=darkseagreen4, key=1, label=xmlProduct, style=dashed];
m12_464 -> m12_450  [color=blue, key=0, style=bold];
m12_464 -> m12_465  [key=0, style=solid];
m12_464 -> m12_366  [key=2, style=dotted];
m12_464 -> m12_23  [key=2, style=dotted];
m12_528 -> m12_531  [key=0, style=solid];
m12_528 -> m12_534  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m12_528 -> m12_538  [color=darkseagreen4, key=1, label="System.IO.Stream", style=dashed];
m12_528 -> m12_519  [color=darkorchid, key=3, label="Parameter variable System.IO.Stream json", style=bold];
m12_528 -> m12_520  [color=darkorchid, key=3, label="Parameter variable System.IO.Stream xml", style=bold];
m12_528 -> m12_529  [key=0, style=solid];
m12_531 -> m12_532  [key=0, style=solid];
m12_531 -> m12_65  [key=2, style=dotted];
m12_531 -> m12_533  [color=darkseagreen4, key=1, label=settings, style=dashed];
m12_531 -> m12_12  [key=2, style=dotted];
m12_531 -> m12_13  [key=2, style=dotted];
m12_532 -> m12_533  [key=0, style=solid];
m12_532 -> m12_48  [key=2, style=dotted];
m12_532 -> m12_541  [key=2, style=dotted];
m12_532 -> m12_528  [color=blue, key=0, style=bold];
m12_533 -> m12_534  [key=0, style=solid];
m12_533 -> m12_515  [key=2, style=dotted];
m12_533 -> m12_535  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m12_539 -> m12_540  [key=0, style=solid];
m12_539 -> m12_223  [key=2, style=dotted];
m12_540 -> m12_528  [color=blue, key=0, style=bold];
m12_540 -> m12_541  [key=0, style=solid];
m12_598 -> m12_599  [key=0, style=solid];
m12_598 -> m12_93  [key=2, style=dotted];
m12_600 -> m12_80  [key=2, style=dotted];
m12_600 -> m12_601  [key=0, style=solid];
m12_600 -> m12_122  [key=2, style=dotted];
m12_599 -> m12_600  [key=0, style=solid];
m12_599 -> m12_533  [key=2, style=dotted];
m12_599 -> m12_68  [key=2, style=dotted];
m12_601 -> m12_602  [key=0, style=solid];
m12_601 -> m12_220  [key=2, style=dotted];
m12_601 -> m12_13  [key=2, style=dotted];
m12_601 -> m12_123  [key=2, style=dotted];
m12_602 -> m12_598  [color=blue, key=0, style=bold];
m12_602 -> m12_595  [color=blue, key=0, style=bold];
m12_355 -> m12_13  [key=2, style=dotted];
m12_355 -> m12_356  [key=0, style=solid];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_77  [key=2, style=dotted];
m12_47 -> m12_78  [key=2, style=dotted];
m12_47 -> m12_13  [key=2, style=dotted];
m12_465 -> m12_466  [key=0, style=solid];
m12_465 -> m12_113  [key=2, style=dotted];
m12_466 -> m12_467  [key=0, style=solid];
m12_466 -> m12_23  [key=2, style=dotted];
m12_466 -> m12_449  [key=2, style=dotted];
m12_467 -> m12_460  [color=blue, key=0, style=bold];
m12_467 -> m12_80  [key=2, style=dotted];
m12_467 -> m12_468  [key=0, style=solid];
m12_467 -> m12_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_468 -> m12_469  [key=0, style=solid];
m12_468 -> m12_18  [key=2, style=dotted];
m12_468 -> m12_470  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_268 -> m12_269  [key=0, style=solid];
m12_268 -> m12_270  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_268 -> m12_268  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_517 -> m12_518  [key=0, style=solid];
m12_519 -> m12_80  [key=2, style=dotted];
m12_519 -> m12_520  [key=0, style=solid];
m12_519 -> m12_525  [key=2, style=dotted];
m12_519 -> m12_526  [key=2, style=dotted];
m12_519 -> m12_521  [color=darkseagreen4, key=1, label=ms, style=dashed];
m12_518 -> m12_519  [key=0, style=solid];
m12_518 -> m12_510  [key=2, style=dotted];
m12_520 -> m12_521  [key=0, style=solid];
m12_520 -> m12_76  [key=2, style=dotted];
m12_520 -> m12_490  [key=2, style=dotted];
m12_520 -> m12_13  [key=2, style=dotted];
m12_520 -> m12_527  [key=2, style=dotted];
m12_520 -> m12_522  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_521 -> m12_517  [color=blue, key=0, style=bold];
m12_521 -> m12_522  [key=0, style=solid];
m12_521 -> m12_528  [key=2, style=dotted];
m12_578 -> m12_579  [key=0, style=solid];
m12_578 -> m12_67  [key=2, style=dotted];
m12_580 -> m12_80  [key=2, style=dotted];
m12_580 -> m12_581  [key=0, style=solid];
m12_580 -> m12_111  [key=2, style=dotted];
m12_580 -> m12_582  [color=darkseagreen4, key=1, label=xml1, style=dashed];
m12_579 -> m12_580  [key=0, style=solid];
m12_579 -> m12_583  [key=2, style=dotted];
m12_579 -> m12_584  [key=2, style=dotted];
m12_579 -> m12_23  [key=2, style=dotted];
m12_581 -> m12_582  [key=0, style=solid];
m12_581 -> m12_577  [key=2, style=dotted];
m12_581 -> m12_13  [key=2, style=dotted];
m12_581 -> m12_112  [key=2, style=dotted];
m12_582 -> m12_578  [color=blue, key=0, style=bold];
m12_582 -> m12_583  [key=0, style=solid];
m12_582 -> m12_67  [key=2, style=dotted];
m12_112 -> m12_110  [color=blue, key=0, style=bold];
m12_469 -> m12_465  [color=blue, key=0, style=bold];
m12_547 -> m12_548  [key=0, style=solid];
m12_547 -> m12_547  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m12_549 -> m12_80  [key=2, style=dotted];
m12_549 -> m12_550  [key=0, style=solid];
m12_549 -> m12_94  [key=2, style=dotted];
m12_548 -> m12_549  [key=0, style=solid];
m12_548 -> m12_527  [key=2, style=dotted];
m12_548 -> m12_23  [key=2, style=dotted];
m12_550 -> m12_550  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_550 -> m12_551  [key=0, style=solid];
m12_550 -> m12_481  [key=2, style=dotted];
m12_550 -> m12_13  [key=2, style=dotted];
m12_550 -> m12_51  [key=2, style=dotted];
m12_550 -> m12_552  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m12_551 -> m12_547  [color=blue, key=0, style=bold];
m12_551 -> m12_552  [key=0, style=solid];
m12_551 -> m12_551  [color=darkorchid, key=3, label="Local variable string expectedXaml", style=bold];
m12_249 -> m12_250  [key=0, style=solid];
m12_249 -> m12_255  [key=2, style=dotted];
m12_249 -> m12_251  [color=darkseagreen4, key=1, label=formattedXml, style=dashed];
m12_249 -> m12_253  [color=darkseagreen4, key=1, label=formattedXml, style=dashed];
m12_515 -> m12_511  [color=blue, key=0, style=bold];
m12_511 -> m12_512  [key=0, style=solid];
m12_511 -> m12_23  [key=2, style=dotted];
m12_513 -> m12_80  [key=2, style=dotted];
m12_513 -> m12_514  [key=0, style=solid];
m12_512 -> m12_513  [key=0, style=solid];
m12_512 -> m12_516  [key=2, style=dotted];
m12_512 -> m12_77  [key=2, style=dotted];
m12_512 -> m12_505  [color=blue, key=0, style=bold];
m12_514 -> m12_515  [key=0, style=solid];
m12_514 -> m12_76  [key=2, style=dotted];
m12_514 -> m12_490  [key=2, style=dotted];
m12_514 -> m12_13  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_22  [key=2, style=dotted];
m12_123 -> m12_13  [key=2, style=dotted];
m12_123 -> m12_124  [key=0, style=solid];
m12_67 -> m12_68  [key=0, style=solid];
m12_67 -> m12_13  [key=2, style=dotted];
m12_530 -> m12_80  [key=2, style=dotted];
m12_530 -> m12_531  [key=0, style=solid];
m12_8 -> m12_11  [key=0, style=solid];
m12_8 -> m12_18  [key=2, style=dotted];
m12_8 -> m12_19  [key=2, style=dotted];
m12_412 -> m12_81  [key=2, style=dotted];
m12_412 -> m12_11  [key=2, style=dotted];
m12_412 -> m12_413  [key=0, style=solid];
m12_482 -> m12_483  [key=0, style=solid];
m12_484 -> m12_80  [key=2, style=dotted];
m12_484 -> m12_485  [key=0, style=solid];
m12_484 -> m12_488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_484 -> m12_111  [key=2, style=dotted];
m12_484 -> m12_486  [color=darkseagreen4, key=1, label=d, style=dashed];
m12_483 -> m12_484  [key=0, style=solid];
m12_483 -> m12_449  [key=2, style=dotted];
m12_483 -> m12_485  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_483 -> m12_483  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_485 -> m12_486  [key=0, style=solid];
m12_485 -> m12_18  [key=2, style=dotted];
m12_485 -> m12_487  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_485 -> m12_112  [key=2, style=dotted];
m12_486 -> m12_482  [color=blue, key=0, style=bold];
m12_486 -> m12_487  [key=0, style=solid];
m12_486 -> m12_113  [key=2, style=dotted];
m12_567 -> m12_568  [key=0, style=solid];
m12_567 -> m12_551  [color=darkorchid, key=3, label="Local variable string expectedXaml", style=bold];
m12_569 -> m12_80  [key=2, style=dotted];
m12_569 -> m12_570  [key=0, style=solid];
m12_569 -> m12_554  [color=blue, key=0, style=bold];
m12_568 -> m12_569  [key=0, style=solid];
m12_568 -> m12_533  [key=2, style=dotted];
m12_568 -> m12_23  [key=2, style=dotted];
m12_570 -> m12_571  [key=0, style=solid];
m12_570 -> m12_99  [key=2, style=dotted];
m12_570 -> m12_13  [key=2, style=dotted];
m12_571 -> m12_567  [color=blue, key=0, style=bold];
m12_571 -> m12_572  [key=0, style=solid];
m12_571 -> m12_571  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_124 -> m12_125  [key=0, style=solid];
m12_124 -> m12_13  [key=2, style=dotted];
m12_124 -> m12_77  [key=2, style=dotted];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_127  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_125 -> m12_125  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_125 -> m12_113  [color=blue, key=0, style=bold];
m12_126 -> m12_127  [key=0, style=solid];
m12_126 -> m12_111  [key=2, style=dotted];
m12_126 -> m12_128  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_127 -> m12_128  [key=0, style=solid];
m12_127 -> m12_112  [key=2, style=dotted];
m12_127 -> m12_127  [color=darkorchid, key=3, label="Local variable string input", style=bold];
m12_128 -> m12_129  [key=0, style=solid];
m12_128 -> m12_113  [key=2, style=dotted];
m12_128 -> m12_130  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_128 -> m12_132  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_128 -> m12_8  [key=2, style=dotted];
m12_128 -> m12_141  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_128 -> m12_148  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_128 -> m12_155  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_128 -> m12_162  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_128 -> m12_168  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_128 -> m12_175  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_128 -> m12_182  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_128 -> m12_188  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_128 -> m12_194  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_129  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_129 -> m12_80  [key=2, style=dotted];
m12_129 -> m12_131  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_135  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_136  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_137  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_141  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_142  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_143  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_144  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_148  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_149  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_150  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_151  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_155  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_156  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_157  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_158  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_162  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_163  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_164  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_168  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_169  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_170  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_171  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_175  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_176  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_177  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_178  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_182  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_183  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_184  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_188  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_189  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_190  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_194  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_195  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_196  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_197  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_198  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_199  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_129 -> m12_200  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_130 -> m12_131  [key=0, style=solid];
m12_130 -> m12_23  [key=2, style=dotted];
m12_130 -> m12_129  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo", style=bold];
m12_130 -> m12_132  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_133  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_134  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_138  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_139  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_140  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_145  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_146  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_147  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_152  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_153  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_154  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_159  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_160  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_161  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_165  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_166  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_167  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_172  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_173  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_174  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_179  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_180  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_181  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_185  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_186  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_187  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_191  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_192  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_130 -> m12_193  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_135  [key=2, style=dotted];
m12_132 -> m12_13  [key=2, style=dotted];
m12_131 -> m12_132  [key=0, style=solid];
m12_131 -> m12_135  [key=2, style=dotted];
m12_131 -> m12_13  [key=2, style=dotted];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_136  [key=2, style=dotted];
m12_133 -> m12_13  [key=2, style=dotted];
m12_134 -> m12_124  [color=blue, key=0, style=bold];
m12_134 -> m12_135  [key=0, style=solid];
m12_134 -> m12_13  [key=2, style=dotted];
m12_134 -> m12_82  [key=2, style=dotted];
m12_572 -> m12_573  [key=0, style=solid];
m12_572 -> m12_210  [key=2, style=dotted];
m12_574 -> m12_80  [key=2, style=dotted];
m12_574 -> m12_575  [key=0, style=solid];
m12_574 -> m12_570  [color=blue, key=0, style=bold];
m12_573 -> m12_574  [key=0, style=solid];
m12_573 -> m12_539  [key=2, style=dotted];
m12_573 -> m12_23  [key=2, style=dotted];
m12_575 -> m12_576  [key=0, style=solid];
m12_575 -> m12_577  [key=2, style=dotted];
m12_575 -> m12_13  [key=2, style=dotted];
m12_576 -> m12_572  [color=blue, key=0, style=bold];
m12_576 -> m12_577  [key=0, style=solid];
m12_576 -> m12_581  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m12_576 -> m12_576  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m12_544 -> m12_545  [key=0, style=solid];
m12_544 -> m12_540  [color=blue, key=0, style=bold];
m12_545 -> m12_546  [key=0, style=solid];
m12_545 -> m12_545  [color=darkorchid, key=3, label="Local variable string xaml", style=bold];
m12_546 -> m12_547  [key=0, style=solid];
m12_546 -> m12_92  [key=2, style=dotted];
m12_546 -> m12_93  [key=2, style=dotted];
m12_546 -> m12_548  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_546 -> m12_549  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_552 -> m12_553  [key=0, style=solid];
m12_552 -> m12_23  [key=2, style=dotted];
m12_553 -> m12_544  [color=blue, key=0, style=bold];
m12_553 -> m12_554  [key=0, style=solid];
m12_553 -> m12_533  [key=2, style=dotted];
m12_499 -> m12_500  [key=0, style=solid];
m12_499 -> m12_501  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_499 -> m12_499  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_501 -> m12_80  [key=2, style=dotted];
m12_501 -> m12_502  [key=0, style=solid];
m12_501 -> m12_112  [key=2, style=dotted];
m12_500 -> m12_501  [key=0, style=solid];
m12_500 -> m12_504  [key=2, style=dotted];
m12_500 -> m12_76  [key=2, style=dotted];
m12_500 -> m12_111  [key=2, style=dotted];
m12_500 -> m12_502  [color=darkseagreen4, key=1, label=d, style=dashed];
m12_502 -> m12_503  [key=0, style=solid];
m12_502 -> m12_77  [key=2, style=dotted];
m12_502 -> m12_99  [key=2, style=dotted];
m12_502 -> m12_13  [key=2, style=dotted];
m12_502 -> m12_113  [key=2, style=dotted];
m12_503 -> m12_499  [color=blue, key=0, style=bold];
m12_503 -> m12_504  [key=0, style=solid];
m12_503 -> m12_23  [key=2, style=dotted];
m12_522 -> m12_523  [key=0, style=solid];
m12_522 -> m12_529  [key=2, style=dotted];
m12_522 -> m12_530  [key=2, style=dotted];
m12_523 -> m12_524  [key=0, style=solid];
m12_523 -> m12_23  [key=2, style=dotted];
m12_523 -> m12_527  [key=2, style=dotted];
m12_524 -> m12_518  [color=blue, key=0, style=bold];
m12_524 -> m12_80  [key=2, style=dotted];
m12_524 -> m12_525  [key=0, style=solid];
m12_210 -> m12_211  [key=0, style=solid];
m12_210 -> m12_13  [key=2, style=dotted];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_2  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m12_0 -> m12_4  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m12_0 -> m12_6  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m12_0 -> m12_7  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m12_0 -> m12_50  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m12_2 -> m12_9  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_2 -> m12_5  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_2 -> m12_6  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_2 -> m12_16  [key=2, style=dotted];
m12_2 -> m12_10  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_1 -> m12_8  [key=2, style=dotted];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_15  [key=2, style=dotted];
m12_1 -> m12_12  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_1 -> m12_13  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_3 -> m12_11  [key=2, style=dotted];
m12_3 -> m12_10  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_4 -> m12_11  [key=2, style=dotted];
m12_4 -> m12_10  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_6  [key=0, style=solid];
m12_5 -> m12_13  [key=2, style=dotted];
m12_5 -> m12_12  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_11  [key=0, style=solid];
m12_5 -> m12_17  [key=2, style=dotted];
m12_6 -> m12_11  [key=2, style=dotted];
m12_6 -> m12_10  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_9  [key=0, style=solid];
m12_7 -> m12_0  [color=blue, key=0, style=bold];
m12_7 -> m12_8  [key=0, style=solid];
m12_114 -> m12_115  [key=0, style=solid];
m12_114 -> m12_114  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_115 -> m12_116  [key=0, style=solid];
m12_115 -> m12_115  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m12_115 -> m12_8  [key=2, style=dotted];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_92  [key=2, style=dotted];
m12_116 -> m12_119  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_116 -> m12_9  [key=2, style=dotted];
m12_116 -> m12_118  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_116 -> m12_120  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_116 -> m12_121  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_116 -> m12_122  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_116 -> m12_123  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_116 -> m12_124  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_93  [key=2, style=dotted];
m12_117 -> m12_11  [key=2, style=dotted];
m12_117 -> m12_10  [key=2, style=dotted];
m12_119 -> m12_120  [key=0, style=solid];
m12_119 -> m12_122  [key=2, style=dotted];
m12_119 -> m12_11  [key=2, style=dotted];
m12_119 -> m12_10  [key=2, style=dotted];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_68  [key=2, style=dotted];
m12_118 -> m12_13  [key=2, style=dotted];
m12_120 -> m12_121  [key=0, style=solid];
m12_120 -> m12_123  [key=2, style=dotted];
m12_120 -> m12_13  [key=2, style=dotted];
m12_121 -> m12_114  [color=blue, key=0, style=bold];
m12_121 -> m12_99  [key=2, style=dotted];
m12_121 -> m12_122  [key=0, style=solid];
m12_595 -> m12_596  [key=0, style=solid];
m12_595 -> m12_13  [key=2, style=dotted];
m12_596 -> m12_597  [key=0, style=solid];
m12_596 -> m12_596  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m12_596 -> m12_13  [key=2, style=dotted];
m12_597 -> m12_598  [key=0, style=solid];
m12_597 -> m12_92  [key=2, style=dotted];
m12_597 -> m12_600  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_597 -> m12_590  [color=blue, key=0, style=bold];
m12_180 -> m12_13  [key=2, style=dotted];
m12_180 -> m12_181  [key=0, style=solid];
m12_92 -> m12_13  [key=2, style=dotted];
m12_92 -> m12_93  [key=0, style=solid];
m12_251 -> m12_252  [key=0, style=solid];
m12_251 -> m12_135  [key=2, style=dotted];
m12_254 -> m12_246  [key=2, style=dotted];
m12_254 -> m12_255  [key=0, style=solid];
m12_254 -> m12_245  [color=blue, key=0, style=bold];
m12_256 -> m12_248  [key=2, style=dotted];
m12_256 -> m12_257  [key=0, style=solid];
m12_256 -> m12_261  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m12_256 -> m12_50  [color=darkorchid, key=3, label="Parameter variable XmlNode node", style=bold];
m12_257 -> m12_80  [key=2, style=dotted];
m12_257 -> m12_258  [key=0, style=solid];
m12_257 -> m12_221  [key=2, style=dotted];
m12_253 -> m12_254  [key=0, style=solid];
m12_253 -> m12_245  [key=2, style=dotted];
m12_253 -> m12_23  [key=2, style=dotted];
m12_258 -> m12_259  [key=0, style=solid];
m12_258 -> m12_249  [key=2, style=dotted];
m12_258 -> m12_250  [key=2, style=dotted];
m12_258 -> m12_258  [color=darkseagreen4, key=1, label=settings, style=dashed];
m12_258 -> m12_260  [color=darkseagreen4, key=1, label=settings, style=dashed];
m12_252 -> m12_253  [key=0, style=solid];
m12_252 -> m12_244  [key=2, style=dotted];
m12_252 -> m12_136  [key=2, style=dotted];
m12_259 -> m12_261  [key=2, style=dotted];
m12_259 -> m12_260  [key=0, style=solid];
m12_259 -> m12_264  [key=2, style=dotted];
m12_259 -> m12_262  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_260 -> m12_251  [color=blue, key=0, style=bold];
m12_260 -> m12_261  [key=0, style=solid];
m12_260 -> m12_222  [key=2, style=dotted];
m12_135 -> m12_136  [key=0, style=solid];
m12_135 -> m12_13  [key=2, style=dotted];
m12_136 -> m12_137  [key=0, style=solid];
m12_136 -> m12_81  [key=2, style=dotted];
m12_137 -> m12_138  [key=0, style=solid];
m12_137 -> m12_13  [key=2, style=dotted];
m12_141 -> m12_141  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_141 -> m12_142  [key=0, style=solid];
m12_141 -> m12_13  [key=2, style=dotted];
m12_141 -> m12_143  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_141 -> m12_149  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_142 -> m12_143  [key=0, style=solid];
m12_142 -> m12_81  [key=2, style=dotted];
m12_142 -> m12_111  [key=2, style=dotted];
m12_142 -> m12_144  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_143 -> m12_144  [key=0, style=solid];
m12_143 -> m12_13  [key=2, style=dotted];
m12_143 -> m12_112  [key=2, style=dotted];
m12_144 -> m12_145  [key=0, style=solid];
m12_144 -> m12_13  [key=2, style=dotted];
m12_144 -> m12_146  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m12_148 -> m12_84  [key=2, style=dotted];
m12_148 -> m12_149  [key=0, style=solid];
m12_148 -> m12_13  [key=2, style=dotted];
m12_148 -> m12_23  [key=2, style=dotted];
m12_149 -> m12_150  [key=0, style=solid];
m12_149 -> m12_81  [key=2, style=dotted];
m12_149 -> m12_92  [key=2, style=dotted];
m12_150 -> m12_151  [key=0, style=solid];
m12_150 -> m12_13  [key=2, style=dotted];
m12_150 -> m12_175  [key=2, style=dotted];
m12_150 -> m12_176  [key=2, style=dotted];
m12_151 -> m12_152  [key=0, style=solid];
m12_151 -> m12_13  [key=2, style=dotted];
m12_151 -> m12_93  [key=2, style=dotted];
m12_155 -> m12_84  [key=2, style=dotted];
m12_155 -> m12_156  [key=0, style=solid];
m12_155 -> m12_13  [key=2, style=dotted];
m12_155 -> m12_135  [key=2, style=dotted];
m12_156 -> m12_157  [key=0, style=solid];
m12_156 -> m12_81  [key=2, style=dotted];
m12_156 -> m12_23  [key=2, style=dotted];
m12_157 -> m12_158  [key=0, style=solid];
m12_157 -> m12_13  [key=2, style=dotted];
m12_157 -> m12_178  [key=2, style=dotted];
m12_157 -> m12_170  [color=darkseagreen4, key=1, label=cDataSection, style=dashed];
m12_158 -> m12_159  [key=0, style=solid];
m12_158 -> m12_13  [key=2, style=dotted];
m12_158 -> m12_113  [key=2, style=dotted];
m12_158 -> m12_160  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_162 -> m12_84  [key=2, style=dotted];
m12_162 -> m12_163  [key=0, style=solid];
m12_162 -> m12_13  [key=2, style=dotted];
m12_162 -> m12_180  [key=2, style=dotted];
m12_162 -> m12_181  [key=2, style=dotted];
m12_163 -> m12_164  [key=0, style=solid];
m12_163 -> m12_81  [key=2, style=dotted];
m12_163 -> m12_180  [key=2, style=dotted];
m12_163 -> m12_165  [color=darkseagreen4, key=1, label=aa, style=dashed];
m12_164 -> m12_165  [key=0, style=solid];
m12_164 -> m12_13  [key=2, style=dotted];
m12_168 -> m12_84  [key=2, style=dotted];
m12_168 -> m12_169  [key=0, style=solid];
m12_168 -> m12_13  [key=2, style=dotted];
m12_168 -> m12_181  [key=2, style=dotted];
m12_169 -> m12_170  [key=0, style=solid];
m12_169 -> m12_81  [key=2, style=dotted];
m12_169 -> m12_182  [key=2, style=dotted];
m12_170 -> m12_171  [key=0, style=solid];
m12_170 -> m12_13  [key=2, style=dotted];
m12_170 -> m12_182  [key=2, style=dotted];
m12_171 -> m12_172  [key=0, style=solid];
m12_171 -> m12_13  [key=2, style=dotted];
m12_171 -> m12_182  [key=2, style=dotted];
m12_175 -> m12_176  [key=0, style=solid];
m12_175 -> m12_13  [key=2, style=dotted];
m12_176 -> m12_177  [key=0, style=solid];
m12_176 -> m12_81  [key=2, style=dotted];
m12_177 -> m12_178  [key=0, style=solid];
m12_177 -> m12_13  [key=2, style=dotted];
m12_178 -> m12_179  [key=0, style=solid];
m12_178 -> m12_13  [key=2, style=dotted];
m12_182 -> m12_183  [key=0, style=solid];
m12_182 -> m12_13  [key=2, style=dotted];
m12_183 -> m12_184  [key=0, style=solid];
m12_183 -> m12_81  [key=2, style=dotted];
m12_184 -> m12_185  [key=0, style=solid];
m12_184 -> m12_13  [key=2, style=dotted];
m12_184 -> m12_111  [key=2, style=dotted];
m12_188 -> m12_189  [key=0, style=solid];
m12_188 -> m12_13  [key=2, style=dotted];
m12_188 -> m12_188  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_189 -> m12_190  [key=0, style=solid];
m12_189 -> m12_81  [key=2, style=dotted];
m12_189 -> m12_23  [key=2, style=dotted];
m12_190 -> m12_191  [key=0, style=solid];
m12_190 -> m12_13  [key=2, style=dotted];
m12_190 -> m12_135  [key=2, style=dotted];
m12_194 -> m12_195  [key=0, style=solid];
m12_194 -> m12_13  [key=2, style=dotted];
m12_195 -> m12_196  [color=red, key=0, style=solid];
m12_195 -> m12_81  [key=2, style=dotted];
m12_196 -> m12_197  [color=red, key=0, style=solid];
m12_196 -> m12_13  [key=2, style=dotted];
m12_196 -> m12_199  [color=red, key=1, label=xml, style=dashed];
m12_196 -> m12_203  [color=red, key=1, label=xml, style=dashed];
m12_196 -> m12_204  [color=red, key=1, label=xml, style=dashed];
m12_196 -> m12_208  [color=red, key=1, label=xml, style=dashed];
m12_196 -> m12_196  [color=red, key=3, label="Local variable string xml", style=bold];
m12_197 -> m12_198  [color=red, key=0, style=solid];
m12_197 -> m12_13  [key=2, style=dotted];
m12_197 -> m12_201  [color=red, key=1, label=expected, style=dashed];
m12_197 -> m12_206  [color=red, key=1, label=expected, style=dashed];
m12_197 -> m12_197  [color=red, key=3, label="Local variable string expected", style=bold];
m12_198 -> m12_198  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_198 -> m12_199  [key=0, style=solid];
m12_198 -> m12_81  [key=2, style=dotted];
m12_198 -> m12_111  [key=2, style=dotted];
m12_198 -> m12_200  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m12_199 -> m12_200  [key=0, style=solid];
m12_199 -> m12_13  [key=2, style=dotted];
m12_199 -> m12_112  [key=2, style=dotted];
m12_200 -> m12_201  [key=0, style=solid];
m12_200 -> m12_13  [key=2, style=dotted];
m12_200 -> m12_113  [key=2, style=dotted];
m12_200 -> m12_202  [color=darkseagreen4, key=1, label=json1, style=dashed];
m12_138 -> m12_13  [key=2, style=dotted];
m12_138 -> m12_139  [key=0, style=solid];
m12_138 -> m12_111  [key=2, style=dotted];
m12_138 -> m12_153  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_138 -> m12_157  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_138 -> m12_161  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_138 -> m12_162  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_138 -> m12_163  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_138 -> m12_166  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_138 -> m12_171  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_139 -> m12_13  [key=2, style=dotted];
m12_139 -> m12_140  [key=0, style=solid];
m12_140 -> m12_141  [key=0, style=solid];
m12_140 -> m12_13  [key=2, style=dotted];
m12_140 -> m12_82  [key=2, style=dotted];
m12_140 -> m12_135  [key=2, style=dotted];
m12_145 -> m12_13  [key=2, style=dotted];
m12_145 -> m12_146  [key=0, style=solid];
m12_146 -> m12_13  [key=2, style=dotted];
m12_146 -> m12_147  [key=0, style=solid];
m12_146 -> m12_113  [key=2, style=dotted];
m12_146 -> m12_148  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_147 -> m12_148  [key=0, style=solid];
m12_147 -> m12_13  [key=2, style=dotted];
m12_147 -> m12_82  [key=2, style=dotted];
m12_147 -> m12_135  [key=2, style=dotted];
m12_152 -> m12_13  [key=2, style=dotted];
m12_152 -> m12_153  [key=0, style=solid];
m12_152 -> m12_23  [key=2, style=dotted];
m12_153 -> m12_13  [key=2, style=dotted];
m12_153 -> m12_153  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_153 -> m12_154  [key=0, style=solid];
m12_153 -> m12_177  [key=2, style=dotted];
m12_153 -> m12_169  [color=darkseagreen4, key=1, label=instruction, style=dashed];
m12_154 -> m12_155  [key=0, style=solid];
m12_154 -> m12_13  [key=2, style=dotted];
m12_154 -> m12_82  [key=2, style=dotted];
m12_154 -> m12_113  [key=2, style=dotted];
m12_154 -> m12_156  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_159 -> m12_13  [key=2, style=dotted];
m12_159 -> m12_160  [key=0, style=solid];
m12_159 -> m12_135  [key=2, style=dotted];
m12_160 -> m12_13  [key=2, style=dotted];
m12_160 -> m12_161  [key=0, style=solid];
m12_160 -> m12_23  [key=2, style=dotted];
m12_161 -> m12_162  [key=0, style=solid];
m12_161 -> m12_13  [key=2, style=dotted];
m12_161 -> m12_82  [key=2, style=dotted];
m12_161 -> m12_179  [key=2, style=dotted];
m12_161 -> m12_165  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_161 -> m12_168  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_161 -> m12_169  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_161 -> m12_170  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_161 -> m12_171  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_161 -> m12_172  [color=darkseagreen4, key=1, label=element, style=dashed];
m12_165 -> m12_13  [key=2, style=dotted];
m12_165 -> m12_166  [key=0, style=solid];
m12_165 -> m12_181  [key=2, style=dotted];
m12_166 -> m12_13  [key=2, style=dotted];
m12_166 -> m12_167  [key=0, style=solid];
m12_166 -> m12_180  [key=2, style=dotted];
m12_166 -> m12_168  [color=darkseagreen4, key=1, label=aa, style=dashed];
m12_167 -> m12_168  [key=0, style=solid];
m12_167 -> m12_13  [key=2, style=dotted];
m12_167 -> m12_82  [key=2, style=dotted];
m12_172 -> m12_13  [key=2, style=dotted];
m12_172 -> m12_173  [key=0, style=solid];
m12_172 -> m12_113  [key=2, style=dotted];
m12_173 -> m12_13  [key=2, style=dotted];
m12_173 -> m12_174  [key=0, style=solid];
m12_173 -> m12_23  [key=2, style=dotted];
m12_174 -> m12_175  [key=0, style=solid];
m12_174 -> m12_13  [key=2, style=dotted];
m12_174 -> m12_82  [key=2, style=dotted];
m12_174 -> m12_137  [color=blue, key=0, style=bold];
m12_179 -> m12_13  [key=2, style=dotted];
m12_179 -> m12_180  [key=0, style=solid];
m12_181 -> m12_182  [key=0, style=solid];
m12_181 -> m12_13  [key=2, style=dotted];
m12_181 -> m12_82  [key=2, style=dotted];
m12_185 -> m12_13  [key=2, style=dotted];
m12_185 -> m12_186  [key=0, style=solid];
m12_185 -> m12_194  [key=2, style=dotted];
m12_186 -> m12_13  [key=2, style=dotted];
m12_186 -> m12_187  [key=0, style=solid];
m12_186 -> m12_186  [color=darkseagreen4, key=1, label=fragement, style=dashed];
m12_187 -> m12_188  [key=0, style=solid];
m12_187 -> m12_13  [key=2, style=dotted];
m12_187 -> m12_82  [key=2, style=dotted];
m12_187 -> m12_113  [key=2, style=dotted];
m12_187 -> m12_189  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_187 -> m12_191  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_191 -> m12_13  [key=2, style=dotted];
m12_191 -> m12_192  [key=0, style=solid];
m12_191 -> m12_135  [key=2, style=dotted];
m12_192 -> m12_13  [key=2, style=dotted];
m12_192 -> m12_193  [key=0, style=solid];
m12_192 -> m12_136  [key=2, style=dotted];
m12_193 -> m12_194  [key=0, style=solid];
m12_193 -> m12_13  [key=2, style=dotted];
m12_193 -> m12_82  [key=2, style=dotted];
m12_193 -> m12_183  [color=blue, key=0, style=bold];
m12_201 -> m12_126  [color=blue, key=0, style=bold];
m12_201 -> m12_202  [key=0, style=solid];
m12_201 -> m12_23  [key=2, style=dotted];
m12_504 -> m12_498  [color=blue, key=0, style=bold];
m12_392 -> m12_393  [key=0, style=solid];
m12_392 -> m12_9  [key=2, style=dotted];
m12_392 -> m12_394  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_392 -> m12_395  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_392 -> m12_396  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_392 -> m12_397  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_392 -> m12_398  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_392 -> m12_399  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_392 -> m12_400  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_393 -> m12_394  [key=0, style=solid];
m12_393 -> m12_395  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_393 -> m12_393  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_393 -> m12_11  [key=2, style=dotted];
m12_393 -> m12_10  [key=2, style=dotted];
m12_394 -> m12_395  [key=0, style=solid];
m12_394 -> m12_111  [key=2, style=dotted];
m12_394 -> m12_396  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_394 -> m12_13  [key=2, style=dotted];
m12_395 -> m12_396  [key=0, style=solid];
m12_395 -> m12_112  [key=2, style=dotted];
m12_395 -> m12_11  [key=2, style=dotted];
m12_395 -> m12_10  [key=2, style=dotted];
m12_396 -> m12_397  [key=0, style=solid];
m12_396 -> m12_113  [key=2, style=dotted];
m12_396 -> m12_398  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_396 -> m12_399  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_396 -> m12_13  [key=2, style=dotted];
m12_397 -> m12_398  [key=0, style=solid];
m12_397 -> m12_306  [key=2, style=dotted];
m12_398 -> m12_399  [key=0, style=solid];
m12_398 -> m12_23  [key=2, style=dotted];
m12_398 -> m12_13  [key=2, style=dotted];
m12_399 -> m12_400  [key=0, style=solid];
m12_399 -> m12_24  [key=2, style=dotted];
m12_399 -> m12_13  [key=2, style=dotted];
m12_400 -> m12_401  [key=0, style=solid];
m12_400 -> m12_23  [key=2, style=dotted];
m12_400 -> m12_13  [key=2, style=dotted];
m12_401 -> m12_392  [color=blue, key=0, style=bold];
m12_401 -> m12_389  [color=blue, key=0, style=bold];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_51  [key=2, style=dotted];
m12_223 -> m12_221  [color=blue, key=0, style=bold];
m12_266 -> m12_267  [key=0, style=solid];
m12_266 -> m12_268  [key=2, style=dotted];
m12_265 -> m12_266  [key=0, style=solid];
m12_265 -> m12_80  [key=2, style=dotted];
m12_265 -> m12_24  [key=2, style=dotted];
m12_419 -> m12_420  [key=0, style=solid];
m12_422 -> m12_13  [key=2, style=dotted];
m12_422 -> m12_423  [key=0, style=solid];
m12_422 -> m12_434  [key=2, style=dotted];
m12_422 -> m12_435  [key=2, style=dotted];
m12_424 -> m12_13  [key=2, style=dotted];
m12_424 -> m12_425  [key=0, style=solid];
m12_424 -> m12_65  [key=2, style=dotted];
m12_424 -> m12_436  [key=2, style=dotted];
m12_424 -> m12_426  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_426 -> m12_13  [key=2, style=dotted];
m12_426 -> m12_427  [key=0, style=solid];
m12_426 -> m12_27  [key=2, style=dotted];
m12_426 -> m12_430  [color=darkseagreen4, key=1, label=node, style=dashed];
m12_428 -> m12_13  [key=2, style=dotted];
m12_428 -> m12_429  [key=0, style=solid];
m12_428 -> m12_428  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_430 -> m12_13  [key=2, style=dotted];
m12_430 -> m12_431  [key=0, style=solid];
m12_430 -> m12_0  [key=2, style=dotted];
m12_430 -> m12_432  [color=darkseagreen4, key=1, label=xmlJson, style=dashed];
m12_432 -> m12_13  [key=2, style=dotted];
m12_432 -> m12_432  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_432 -> m12_433  [key=0, style=solid];
m12_432 -> m12_23  [key=2, style=dotted];
m12_423 -> m12_81  [key=2, style=dotted];
m12_423 -> m12_11  [key=2, style=dotted];
m12_423 -> m12_424  [key=0, style=solid];
m12_423 -> m12_435  [key=2, style=dotted];
m12_425 -> m12_81  [key=2, style=dotted];
m12_425 -> m12_11  [key=2, style=dotted];
m12_425 -> m12_426  [key=0, style=solid];
m12_425 -> m12_23  [key=2, style=dotted];
m12_427 -> m12_81  [key=2, style=dotted];
m12_427 -> m12_11  [key=2, style=dotted];
m12_427 -> m12_428  [key=0, style=solid];
m12_427 -> m12_256  [key=2, style=dotted];
m12_427 -> m12_429  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_429 -> m12_81  [key=2, style=dotted];
m12_429 -> m12_11  [key=2, style=dotted];
m12_429 -> m12_430  [key=0, style=solid];
m12_429 -> m12_23  [key=2, style=dotted];
m12_431 -> m12_81  [key=2, style=dotted];
m12_431 -> m12_83  [key=2, style=dotted];
m12_431 -> m12_432  [key=0, style=solid];
m12_431 -> m12_431  [color=darkorchid, key=3, label="Local variable string expectedXmlJson", style=bold];
m12_421 -> m12_422  [key=0, style=solid];
m12_421 -> m12_424  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m12_421 -> m12_426  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_421 -> m12_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_421 -> m12_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_421 -> m12_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_421 -> m12_423  [color=darkseagreen4, key=1, label=circularDictionary, style=dashed];
m12_421 -> m12_425  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_421 -> m12_427  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_421 -> m12_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_421 -> m12_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_421 -> m12_418  [key=2, style=dotted];
m12_421 -> m12_434  [key=2, style=dotted];
m12_420 -> m12_421  [key=0, style=solid];
m12_420 -> m12_417  [key=2, style=dotted];
m12_433 -> m12_419  [color=blue, key=0, style=bold];
m12_433 -> m12_420  [color=blue, key=0, style=bold];
m12_293 -> m12_294  [key=0, style=solid];
m12_296 -> m12_9  [key=2, style=dotted];
m12_296 -> m12_297  [key=0, style=solid];
m12_296 -> m12_298  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_296 -> m12_299  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_296 -> m12_300  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_296 -> m12_301  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_296 -> m12_302  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_296 -> m12_303  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_296 -> m12_304  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_296 -> m12_294  [color=blue, key=0, style=bold];
m12_295 -> m12_8  [key=2, style=dotted];
m12_295 -> m12_296  [key=0, style=solid];
m12_295 -> m12_210  [key=2, style=dotted];
m12_297 -> m12_11  [key=2, style=dotted];
m12_297 -> m12_10  [key=2, style=dotted];
m12_297 -> m12_298  [key=0, style=solid];
m12_298 -> m12_13  [key=2, style=dotted];
m12_298 -> m12_299  [key=0, style=solid];
m12_298 -> m12_293  [key=2, style=dotted];
m12_298 -> m12_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_299 -> m12_11  [key=2, style=dotted];
m12_299 -> m12_10  [key=2, style=dotted];
m12_299 -> m12_300  [key=0, style=solid];
m12_299 -> m12_297  [color=blue, key=0, style=bold];
m12_300 -> m12_13  [key=2, style=dotted];
m12_300 -> m12_301  [key=0, style=solid];
m12_301 -> m12_302  [key=0, style=solid];
m12_301 -> m12_306  [key=2, style=dotted];
m12_301 -> m12_210  [key=2, style=dotted];
m12_302 -> m12_13  [key=2, style=dotted];
m12_302 -> m12_303  [key=0, style=solid];
m12_302 -> m12_300  [color=blue, key=0, style=bold];
m12_303 -> m12_13  [key=2, style=dotted];
m12_303 -> m12_304  [key=0, style=solid];
m12_304 -> m12_13  [key=2, style=dotted];
m12_304 -> m12_305  [key=0, style=solid];
m12_304 -> m12_304  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m12_294 -> m12_295  [key=0, style=solid];
m12_294 -> m12_294  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_305 -> m12_293  [color=blue, key=0, style=bold];
m12_305 -> m12_306  [key=0, style=solid];
m12_305 -> m12_24  [key=2, style=dotted];
m12_305 -> m12_307  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m12_305 -> m12_308  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m12_219 -> m12_212  [color=blue, key=0, style=bold];
m12_584 -> m12_575  [color=blue, key=0, style=bold];
m12_590 -> m12_591  [key=0, style=solid];
m12_590 -> m12_23  [key=2, style=dotted];
m12_592 -> m12_80  [key=2, style=dotted];
m12_592 -> m12_593  [key=0, style=solid];
m12_592 -> m12_585  [color=blue, key=0, style=bold];
m12_591 -> m12_592  [key=0, style=solid];
m12_591 -> m12_449  [key=2, style=dotted];
m12_591 -> m12_51  [key=2, style=dotted];
m12_591 -> m12_23  [key=2, style=dotted];
m12_593 -> m12_594  [key=0, style=solid];
m12_593 -> m12_220  [key=2, style=dotted];
m12_593 -> m12_595  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m12_593 -> m12_596  [color=darkseagreen4, key=1, label=bytes, style=dashed];
m12_594 -> m12_13  [key=2, style=dotted];
m12_594 -> m12_595  [key=0, style=solid];
m12_221 -> m12_222  [key=0, style=solid];
m12_222 -> m12_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_222 -> m12_95  [key=2, style=dotted];
m12_222 -> m12_223  [key=0, style=solid];
m12_489 -> m12_490  [key=0, style=solid];
m12_489 -> m12_487  [color=blue, key=0, style=bold];
m12_490 -> m12_491  [key=0, style=solid];
m12_490 -> m12_492  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_490 -> m12_490  [color=darkorchid, key=3, label="Local variable string arrayXml", style=bold];
m12_491 -> m12_492  [key=0, style=solid];
m12_491 -> m12_111  [key=2, style=dotted];
m12_491 -> m12_493  [color=darkseagreen4, key=1, label=d, style=dashed];
m12_492 -> m12_493  [key=0, style=solid];
m12_492 -> m12_112  [key=2, style=dotted];
m12_492 -> m12_449  [key=2, style=dotted];
m12_493 -> m12_494  [key=0, style=solid];
m12_493 -> m12_113  [key=2, style=dotted];
m12_493 -> m12_495  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_493 -> m12_80  [key=2, style=dotted];
m12_493 -> m12_497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_494 -> m12_495  [key=0, style=solid];
m12_494 -> m12_23  [key=2, style=dotted];
m12_494 -> m12_95  [key=2, style=dotted];
m12_494 -> m12_496  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_495 -> m12_496  [key=0, style=solid];
m12_495 -> m12_210  [key=2, style=dotted];
m12_495 -> m12_491  [color=blue, key=0, style=bold];
m12_496 -> m12_497  [key=0, style=solid];
m12_496 -> m12_211  [key=2, style=dotted];
m12_496 -> m12_23  [key=2, style=dotted];
m12_497 -> m12_489  [color=blue, key=0, style=bold];
m12_497 -> m12_498  [key=0, style=solid];
m12_497 -> m12_99  [key=2, style=dotted];
m12_250 -> m12_251  [key=0, style=solid];
m12_250 -> m12_135  [key=2, style=dotted];
m12_122 -> m12_13  [key=2, style=dotted];
m12_122 -> m12_123  [key=0, style=solid];
m12_281 -> m12_282  [key=0, style=solid];
m12_281 -> m12_24  [key=2, style=dotted];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_10  [key=2, style=dotted];
m12_65 -> m12_11  [key=2, style=dotted];
m12_417 -> m12_418  [key=0, style=solid];
m12_417 -> m12_419  [key=2, style=dotted];
m12_417 -> m12_23  [key=2, style=dotted];
m12_323 -> m12_324  [key=0, style=solid];
m12_113 -> m12_114  [key=0, style=solid];
m12_505 -> m12_506  [key=0, style=solid];
m12_507 -> m12_80  [key=2, style=dotted];
m12_507 -> m12_508  [key=0, style=solid];
m12_507 -> m12_514  [key=2, style=dotted];
m12_507 -> m12_509  [color=darkseagreen4, key=1, label=obj, style=dashed];
m12_506 -> m12_507  [key=0, style=solid];
m12_506 -> m12_510  [key=2, style=dotted];
m12_506 -> m12_513  [key=2, style=dotted];
m12_508 -> m12_509  [key=0, style=solid];
m12_508 -> m12_77  [key=2, style=dotted];
m12_508 -> m12_99  [key=2, style=dotted];
m12_508 -> m12_13  [key=2, style=dotted];
m12_508 -> m12_65  [key=2, style=dotted];
m12_508 -> m12_48  [key=2, style=dotted];
m12_508 -> m12_515  [key=2, style=dotted];
m12_508 -> m12_510  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m12_509 -> m12_505  [color=blue, key=0, style=bold];
m12_509 -> m12_510  [key=0, style=solid];
m12_509 -> m12_516  [key=2, style=dotted];
m12_94 -> m12_94  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_94 -> m12_85  [color=blue, key=0, style=bold];
m12_479 -> m12_480  [key=0, style=solid];
m12_479 -> m12_481  [key=2, style=dotted];
m12_275 -> m12_276  [key=0, style=solid];
m12_275 -> m12_9  [key=2, style=dotted];
m12_276 -> m12_277  [key=0, style=solid];
m12_276 -> m12_278  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m12_276 -> m12_276  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_276 -> m12_283  [key=2, style=dotted];
m12_277 -> m12_278  [key=0, style=solid];
m12_277 -> m12_111  [key=2, style=dotted];
m12_277 -> m12_279  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_277 -> m12_282  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_277 -> m12_13  [key=2, style=dotted];
m12_278 -> m12_279  [key=0, style=solid];
m12_278 -> m12_112  [key=2, style=dotted];
m12_278 -> m12_261  [key=2, style=dotted];
m12_279 -> m12_280  [key=0, style=solid];
m12_279 -> m12_113  [key=2, style=dotted];
m12_279 -> m12_281  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_279 -> m12_269  [color=blue, key=0, style=bold];
m12_282 -> m12_283  [key=0, style=solid];
m12_282 -> m12_23  [key=2, style=dotted];
m12_280 -> m12_281  [key=0, style=solid];
m12_280 -> m12_135  [key=2, style=dotted];
m12_283 -> m12_275  [color=blue, key=0, style=bold];
m12_213 -> m12_214  [key=0, style=solid];
m12_213 -> m12_81  [key=2, style=dotted];
m12_213 -> m12_11  [key=2, style=dotted];
m12_214 -> m12_213  [color=blue, key=0, style=bold];
m12_214 -> m12_215  [key=0, style=solid];
m12_214 -> m12_13  [key=2, style=dotted];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_13  [key=2, style=dotted];
m12_22 -> m12_19  [color=blue, key=0, style=bold];
m12_307 -> m12_308  [key=0, style=solid];
m12_307 -> m12_23  [key=2, style=dotted];
m12_310 -> m12_9  [key=2, style=dotted];
m12_310 -> m12_311  [key=0, style=solid];
m12_310 -> m12_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_314  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_315  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_316  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_317  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_318  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_319  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_320  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_310 -> m12_23  [key=2, style=dotted];
m12_309 -> m12_8  [key=2, style=dotted];
m12_309 -> m12_310  [key=0, style=solid];
m12_309 -> m12_313  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_309 -> m12_316  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_309 -> m12_318  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_316 -> m12_84  [key=2, style=dotted];
m12_316 -> m12_13  [key=2, style=dotted];
m12_316 -> m12_317  [key=0, style=solid];
m12_316 -> m12_113  [key=2, style=dotted];
m12_316 -> m12_318  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m12_311 -> m12_81  [key=2, style=dotted];
m12_311 -> m12_11  [key=2, style=dotted];
m12_311 -> m12_312  [key=0, style=solid];
m12_311 -> m12_303  [color=blue, key=0, style=bold];
m12_312 -> m12_13  [key=2, style=dotted];
m12_312 -> m12_313  [key=0, style=solid];
m12_313 -> m12_13  [key=2, style=dotted];
m12_313 -> m12_314  [key=0, style=solid];
m12_313 -> m12_315  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m12_314 -> m12_81  [key=2, style=dotted];
m12_314 -> m12_11  [key=2, style=dotted];
m12_314 -> m12_315  [key=0, style=solid];
m12_314 -> m12_111  [key=2, style=dotted];
m12_314 -> m12_316  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m12_315 -> m12_13  [key=2, style=dotted];
m12_315 -> m12_316  [key=0, style=solid];
m12_315 -> m12_112  [key=2, style=dotted];
m12_317 -> m12_318  [key=0, style=solid];
m12_317 -> m12_323  [key=2, style=dotted];
m12_317 -> m12_317  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_318 -> m12_13  [key=2, style=dotted];
m12_318 -> m12_319  [key=0, style=solid];
m12_318 -> m12_23  [key=2, style=dotted];
m12_319 -> m12_13  [key=2, style=dotted];
m12_319 -> m12_320  [key=0, style=solid];
m12_319 -> m12_321  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m12_320 -> m12_13  [key=2, style=dotted];
m12_320 -> m12_321  [key=0, style=solid];
m12_320 -> m12_111  [key=2, style=dotted];
m12_320 -> m12_322  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m12_321 -> m12_13  [key=2, style=dotted];
m12_321 -> m12_322  [key=0, style=solid];
m12_321 -> m12_112  [key=2, style=dotted];
m12_308 -> m12_309  [key=0, style=solid];
m12_308 -> m12_294  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_308 -> m12_113  [key=2, style=dotted];
m12_308 -> m12_310  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_322 -> m12_307  [color=blue, key=0, style=bold];
m12_322 -> m12_323  [key=0, style=solid];
m12_322 -> m12_113  [key=2, style=dotted];
m12_322 -> m12_324  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m12_435 -> m12_449  [key=2, style=dotted];
m12_435 -> m12_436  [key=0, style=solid];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_27  [color=darkorchid, key=3, label="method methodReturn XmlNode DeserializeXmlNode", style=bold];
m12_24 -> m12_234  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_24 -> m12_246  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_24 -> m12_271  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_24 -> m12_279  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_24 -> m12_285  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_24 -> m12_304  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_24 -> m12_396  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_24 -> m12_406  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_24 -> m12_415  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_24 -> m12_438  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_27  [key=2, style=dotted];
m12_26 -> m12_24  [color=blue, key=0, style=bold];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_64  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_26 -> m12_74  [key=2, style=dotted];
m12_26 -> m12_75  [key=2, style=dotted];
m12_26 -> m12_76  [key=2, style=dotted];
m12_26 -> m12_77  [key=2, style=dotted];
m12_26 -> m12_78  [key=2, style=dotted];
m12_26 -> m12_79  [key=2, style=dotted];
m12_26 -> m12_438  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_26 -> m12_460  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_26 -> m12_474  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_203 -> m12_204  [key=0, style=solid];
m12_203 -> m12_211  [key=2, style=dotted];
m12_203 -> m12_23  [key=2, style=dotted];
m12_203 -> m12_218  [key=2, style=dotted];
m12_203 -> m12_212  [color=darkseagreen4, key=1, label=data, style=dashed];
m12_204 -> m12_205  [key=0, style=solid];
m12_204 -> m12_92  [key=2, style=dotted];
m12_204 -> m12_219  [key=2, style=dotted];
m12_204 -> m12_75  [key=2, style=dotted];
m12_208 -> m12_209  [key=0, style=solid];
m12_208 -> m12_212  [key=2, style=dotted];
m12_208 -> m12_23  [key=2, style=dotted];
m12_208 -> m12_81  [key=2, style=dotted];
m12_206 -> m12_207  [key=0, style=solid];
m12_206 -> m12_23  [key=2, style=dotted];
m12_206 -> m12_81  [key=2, style=dotted];
m12_202 -> m12_203  [key=0, style=solid];
m12_202 -> m12_210  [key=2, style=dotted];
m12_205 -> m12_206  [key=0, style=solid];
m12_205 -> m12_93  [key=2, style=dotted];
m12_205 -> m12_207  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_205 -> m12_80  [key=2, style=dotted];
m12_205 -> m12_208  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_205 -> m12_209  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_205 -> m12_210  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_205 -> m12_211  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_205 -> m12_213  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_205 -> m12_214  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_205 -> m12_215  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_205 -> m12_216  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_207 -> m12_208  [key=0, style=solid];
m12_207 -> m12_94  [key=2, style=dotted];
m12_207 -> m12_13  [key=2, style=dotted];
m12_209 -> m12_195  [color=blue, key=0, style=bold];
m12_209 -> m12_210  [key=0, style=solid];
m12_209 -> m12_13  [key=2, style=dotted];
m12_562 -> m12_563  [key=0, style=solid];
m12_562 -> m12_264  [key=2, style=dotted];
m12_562 -> m12_566  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_564 -> m12_80  [key=2, style=dotted];
m12_564 -> m12_565  [key=0, style=solid];
m12_564 -> m12_265  [key=2, style=dotted];
m12_563 -> m12_564  [key=0, style=solid];
m12_563 -> m12_533  [key=2, style=dotted];
m12_563 -> m12_221  [key=2, style=dotted];
m12_563 -> m12_222  [key=2, style=dotted];
m12_563 -> m12_565  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_565 -> m12_566  [key=0, style=solid];
m12_565 -> m12_490  [key=2, style=dotted];
m12_565 -> m12_13  [key=2, style=dotted];
m12_565 -> m12_481  [key=2, style=dotted];
m12_566 -> m12_562  [color=blue, key=0, style=bold];
m12_566 -> m12_567  [key=0, style=solid];
m12_566 -> m12_266  [key=2, style=dotted];
m12_566 -> m12_568  [color=darkseagreen4, key=1, label=xaml2, style=dashed];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_23  [key=2, style=dotted];
m12_261 -> m12_262  [key=0, style=solid];
m12_261 -> m12_265  [key=2, style=dotted];
m12_262 -> m12_263  [color=green, key=0, style=solid];
m12_262 -> m12_266  [key=2, style=dotted];
m12_263 -> m12_256  [color=blue, key=0, style=bold];
m12_263 -> m12_264  [color=green, key=0, style=solid];
m12_263 -> m12_23  [color=green, key=2, style=dotted];
m12_263 -> m12_265  [color=green, key=1, label=s, style=dashed];
m12_16 -> m12_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_18  [key=2, style=dotted];
m12_543 -> m12_537  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_543 -> m12_544  [key=0, style=solid];
m12_543 -> m12_481  [key=2, style=dotted];
m12_543 -> m12_13  [key=2, style=dotted];
m12_211 -> m12_225  [key=0, style=solid];
m12_211 -> m12_226  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_211 -> m12_227  [color=darkseagreen4, key=1, label=XmlDocument, style=dashed];
m12_211 -> m12_202  [color=darkorchid, key=3, label="Parameter variable XmlDocument doc", style=bold];
m12_211 -> m12_495  [color=darkorchid, key=3, label="Parameter variable XmlDocument doc", style=bold];
m12_211 -> m12_369  [color=darkorchid, key=3, label="Parameter variable bool indent", style=bold];
m12_211 -> m12_212  [key=0, style=solid];
m12_211 -> m12_220  [key=2, style=dotted];
m12_225 -> m12_226  [key=0, style=solid];
m12_225 -> m12_220  [key=2, style=dotted];
m12_225 -> m12_228  [color=darkseagreen4, key=1, label=builder, style=dashed];
m12_225 -> m12_219  [key=2, style=dotted];
m12_225 -> m12_75  [key=2, style=dotted];
m12_226 -> m12_227  [key=0, style=solid];
m12_226 -> m12_213  [key=2, style=dotted];
m12_226 -> m12_221  [key=2, style=dotted];
m12_226 -> m12_222  [key=2, style=dotted];
m12_226 -> m12_80  [key=2, style=dotted];
m12_226 -> m12_228  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_226 -> m12_229  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_226 -> m12_230  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_226 -> m12_231  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_226 -> m12_232  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_227 -> m12_228  [key=0, style=solid];
m12_227 -> m12_223  [key=2, style=dotted];
m12_227 -> m12_81  [key=2, style=dotted];
m12_228 -> m12_229  [key=0, style=solid];
m12_228 -> m12_224  [key=2, style=dotted];
m12_228 -> m12_13  [key=2, style=dotted];
m12_229 -> m12_211  [color=blue, key=0, style=bold];
m12_229 -> m12_230  [key=0, style=solid];
m12_229 -> m12_81  [key=2, style=dotted];
m12_386 -> m12_387  [key=0, style=solid];
m12_387 -> m12_388  [key=0, style=solid];
m12_387 -> m12_111  [key=2, style=dotted];
m12_387 -> m12_389  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_387 -> m12_306  [key=2, style=dotted];
m12_388 -> m12_389  [key=0, style=solid];
m12_388 -> m12_112  [key=2, style=dotted];
m12_388 -> m12_386  [color=blue, key=0, style=bold];
m12_389 -> m12_390  [key=0, style=solid];
m12_389 -> m12_113  [key=2, style=dotted];
m12_390 -> m12_391  [key=0, style=solid];
m12_390 -> m12_23  [key=2, style=dotted];
m12_390 -> m12_390  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_391 -> m12_386  [color=blue, key=0, style=bold];
m12_391 -> m12_8  [key=2, style=dotted];
m12_391 -> m12_392  [key=0, style=solid];
m12_444 -> m12_445  [key=0, style=solid];
m12_444 -> m12_81  [key=2, style=dotted];
m12_444 -> m12_11  [key=2, style=dotted];
m12_445 -> m12_446  [key=0, style=solid];
m12_445 -> m12_456  [key=2, style=dotted];
m12_445 -> m12_447  [color=darkseagreen4, key=1, label=product, style=dashed];
m12_445 -> m12_448  [color=darkseagreen4, key=1, label=product, style=dashed];
m12_445 -> m12_449  [color=darkseagreen4, key=1, label=product, style=dashed];
m12_445 -> m12_450  [color=darkseagreen4, key=1, label=product, style=dashed];
m12_445 -> m12_13  [key=2, style=dotted];
m12_445 -> m12_445  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_446 -> m12_447  [key=0, style=solid];
m12_446 -> m12_81  [key=2, style=dotted];
m12_446 -> m12_83  [key=2, style=dotted];
m12_447 -> m12_448  [key=0, style=solid];
m12_447 -> m12_457  [key=2, style=dotted];
m12_447 -> m12_13  [key=2, style=dotted];
m12_448 -> m12_449  [key=0, style=solid];
m12_448 -> m12_434  [color=blue, key=0, style=bold];
m12_449 -> m12_450  [key=0, style=solid];
m12_48 -> m12_49  [key=0, style=solid];
m12_48 -> m12_81  [key=2, style=dotted];
m12_20 -> m12_23  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_267 -> m12_268  [key=0, style=solid];
m12_267 -> m12_262  [color=blue, key=0, style=bold];
m12_269 -> m12_270  [key=0, style=solid];
m12_269 -> m12_111  [key=2, style=dotted];
m12_269 -> m12_271  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_269 -> m12_273  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_270 -> m12_271  [key=0, style=solid];
m12_270 -> m12_112  [key=2, style=dotted];
m12_270 -> m12_280  [key=2, style=dotted];
m12_271 -> m12_272  [key=0, style=solid];
m12_271 -> m12_113  [key=2, style=dotted];
m12_271 -> m12_281  [key=2, style=dotted];
m12_271 -> m12_282  [key=2, style=dotted];
m12_273 -> m12_274  [key=0, style=solid];
m12_273 -> m12_23  [key=2, style=dotted];
m12_273 -> m12_276  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m12_272 -> m12_273  [key=0, style=solid];
m12_272 -> m12_24  [key=2, style=dotted];
m12_272 -> m12_8  [key=2, style=dotted];
m12_272 -> m12_275  [color=darkseagreen4, key=1, label=o, style=dashed];
m12_274 -> m12_267  [color=blue, key=0, style=bold];
m12_274 -> m12_275  [key=0, style=solid];
m12_324 -> m12_325  [key=0, style=solid];
m12_324 -> m12_23  [key=2, style=dotted];
m12_325 -> m12_326  [key=0, style=solid];
m12_325 -> m12_327  [color=darkseagreen4, key=1, label=arrayXml, style=dashed];
m12_325 -> m12_325  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_326 -> m12_327  [key=0, style=solid];
m12_326 -> m12_111  [key=2, style=dotted];
m12_326 -> m12_328  [color=darkseagreen4, key=1, label=arrayDoc, style=dashed];
m12_326 -> m12_8  [key=2, style=dotted];
m12_327 -> m12_328  [key=0, style=solid];
m12_327 -> m12_112  [key=2, style=dotted];
m12_327 -> m12_9  [key=2, style=dotted];
m12_327 -> m12_329  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_327 -> m12_330  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_327 -> m12_331  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_327 -> m12_332  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_327 -> m12_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_328 -> m12_329  [key=0, style=solid];
m12_328 -> m12_113  [key=2, style=dotted];
m12_328 -> m12_330  [color=darkseagreen4, key=1, label=arrayJsonText, style=dashed];
m12_328 -> m12_11  [key=2, style=dotted];
m12_328 -> m12_10  [key=2, style=dotted];
m12_329 -> m12_330  [key=0, style=solid];
m12_329 -> m12_13  [key=2, style=dotted];
m12_329 -> m12_303  [color=darkorchid, key=3, label="Parameter variable XmlDocument doc", style=bold];
m12_330 -> m12_331  [key=0, style=solid];
m12_330 -> m12_23  [key=2, style=dotted];
m12_330 -> m12_11  [key=2, style=dotted];
m12_330 -> m12_10  [key=2, style=dotted];
m12_331 -> m12_312  [color=blue, key=0, style=bold];
m12_331 -> m12_13  [key=2, style=dotted];
m12_331 -> m12_332  [key=0, style=solid];
m12_247 -> m12_248  [key=0, style=solid];
m12_247 -> m12_24  [key=2, style=dotted];
m12_247 -> m12_249  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_81  [key=2, style=dotted];
m12_367 -> m12_368  [key=0, style=solid];
m12_367 -> m12_11  [key=2, style=dotted];
m12_367 -> m12_10  [key=2, style=dotted];
m12_368 -> m12_369  [key=0, style=solid];
m12_368 -> m12_371  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_368 -> m12_375  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_368 -> m12_357  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_368 -> m12_13  [key=2, style=dotted];
m12_369 -> m12_370  [key=0, style=solid];
m12_369 -> m12_377  [key=2, style=dotted];
m12_369 -> m12_374  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m12_369 -> m12_11  [key=2, style=dotted];
m12_369 -> m12_10  [key=2, style=dotted];
m12_371 -> m12_372  [key=0, style=solid];
m12_371 -> m12_378  [key=2, style=dotted];
m12_371 -> m12_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_371 -> m12_18  [key=2, style=dotted];
m12_375 -> m12_376  [key=0, style=solid];
m12_375 -> m12_23  [key=2, style=dotted];
m12_375 -> m12_373  [color=blue, key=0, style=bold];
m12_370 -> m12_371  [key=0, style=solid];
m12_370 -> m12_366  [key=2, style=dotted];
m12_370 -> m12_23  [key=2, style=dotted];
m12_370 -> m12_13  [key=2, style=dotted];
m12_374 -> m12_375  [key=0, style=solid];
m12_374 -> m12_113  [key=2, style=dotted];
m12_374 -> m12_306  [key=2, style=dotted];
m12_372 -> m12_373  [key=0, style=solid];
m12_372 -> m12_51  [key=2, style=dotted];
m12_372 -> m12_366  [key=2, style=dotted];
m12_372 -> m12_135  [key=2, style=dotted];
m12_372 -> m12_363  [color=blue, key=0, style=bold];
m12_373 -> m12_374  [key=0, style=solid];
m12_373 -> m12_51  [key=2, style=dotted];
m12_373 -> m12_366  [key=2, style=dotted];
m12_373 -> m12_23  [key=2, style=dotted];
m12_376 -> m12_367  [color=blue, key=0, style=bold];
m12_376 -> m12_377  [key=0, style=solid];
m12_66 -> m12_66  [color=darkorchid, key=3, label="Local variable string arrayXml", style=bold];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_13  [key=2, style=dotted];
m12_437 -> m12_438  [key=0, style=solid];
m12_437 -> m12_13  [key=2, style=dotted];
m12_438 -> m12_439  [key=0, style=solid];
m12_438 -> m12_442  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_438 -> m12_438  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_438 -> m12_81  [key=2, style=dotted];
m12_438 -> m12_11  [key=2, style=dotted];
m12_439 -> m12_440  [key=0, style=solid];
m12_439 -> m12_336  [key=2, style=dotted];
m12_439 -> m12_441  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_439 -> m12_13  [key=2, style=dotted];
m12_440 -> m12_437  [color=blue, key=0, style=bold];
m12_440 -> m12_81  [key=2, style=dotted];
m12_440 -> m12_11  [key=2, style=dotted];
m12_440 -> m12_441  [key=0, style=solid];
m12_402 -> m12_403  [key=0, style=solid];
m12_403 -> m12_404  [key=0, style=solid];
m12_403 -> m12_405  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_403 -> m12_403  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_403 -> m12_417  [key=2, style=dotted];
m12_404 -> m12_405  [key=0, style=solid];
m12_404 -> m12_111  [key=2, style=dotted];
m12_404 -> m12_406  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_410  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_407  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_409  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_411  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_413  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_415  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_408  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_412  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_414  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_404 -> m12_418  [key=2, style=dotted];
m12_405 -> m12_406  [key=0, style=solid];
m12_405 -> m12_112  [key=2, style=dotted];
m12_405 -> m12_13  [key=2, style=dotted];
m12_406 -> m12_407  [key=0, style=solid];
m12_406 -> m12_113  [key=2, style=dotted];
m12_406 -> m12_81  [key=2, style=dotted];
m12_406 -> m12_11  [key=2, style=dotted];
m12_410 -> m12_411  [key=0, style=solid];
m12_410 -> m12_23  [key=2, style=dotted];
m12_410 -> m12_81  [key=2, style=dotted];
m12_410 -> m12_11  [key=2, style=dotted];
m12_407 -> m12_408  [key=0, style=solid];
m12_407 -> m12_412  [key=2, style=dotted];
m12_407 -> m12_413  [key=2, style=dotted];
m12_407 -> m12_407  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_407 -> m12_409  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_407 -> m12_13  [key=2, style=dotted];
m12_408 -> m12_409  [key=0, style=solid];
m12_408 -> m12_23  [key=2, style=dotted];
m12_408 -> m12_81  [key=2, style=dotted];
m12_408 -> m12_11  [key=2, style=dotted];
m12_409 -> m12_410  [key=0, style=solid];
m12_409 -> m12_24  [key=2, style=dotted];
m12_409 -> m12_13  [key=2, style=dotted];
m12_411 -> m12_402  [color=blue, key=0, style=bold];
m12_411 -> m12_13  [key=2, style=dotted];
m12_411 -> m12_411  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_411 -> m12_412  [key=0, style=solid];
m12_554 -> m12_555  [key=0, style=solid];
m12_554 -> m12_80  [key=2, style=dotted];
m12_555 -> m12_556  [key=0, style=solid];
m12_555 -> m12_557  [color=darkseagreen4, key=1, label=xaml, style=dashed];
m12_555 -> m12_545  [color=darkorchid, key=3, label="Local variable string xaml", style=bold];
m12_555 -> m12_481  [key=2, style=dotted];
m12_555 -> m12_13  [key=2, style=dotted];
m12_556 -> m12_557  [key=0, style=solid];
m12_556 -> m12_111  [key=2, style=dotted];
m12_556 -> m12_558  [color=darkseagreen4, key=1, label=document, style=dashed];
m12_556 -> m12_552  [color=blue, key=0, style=bold];
m12_557 -> m12_558  [key=0, style=solid];
m12_557 -> m12_112  [key=2, style=dotted];
m12_558 -> m12_559  [key=0, style=solid];
m12_558 -> m12_113  [key=2, style=dotted];
m12_558 -> m12_560  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_558 -> m12_561  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_558 -> m12_558  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_558 -> m12_539  [key=2, style=dotted];
m12_559 -> m12_560  [key=0, style=solid];
m12_559 -> m12_547  [color=darkorchid, key=3, label="Local variable string expectedJson", style=bold];
m12_559 -> m12_80  [key=2, style=dotted];
m12_560 -> m12_561  [key=0, style=solid];
m12_560 -> m12_23  [key=2, style=dotted];
m12_560 -> m12_481  [key=2, style=dotted];
m12_560 -> m12_13  [key=2, style=dotted];
m12_561 -> m12_562  [key=0, style=solid];
m12_561 -> m12_210  [key=2, style=dotted];
m12_561 -> m12_564  [color=darkseagreen4, key=1, label=node, style=dashed];
m12_561 -> m12_557  [color=blue, key=0, style=bold];
m12_414 -> m12_415  [key=0, style=solid];
m12_414 -> m12_81  [key=2, style=dotted];
m12_414 -> m12_83  [key=2, style=dotted];
m12_415 -> m12_416  [key=0, style=solid];
m12_415 -> m12_415  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_415 -> m12_13  [key=2, style=dotted];
m12_416 -> m12_417  [key=0, style=solid];
m12_416 -> m12_24  [key=2, style=dotted];
m12_416 -> m12_402  [color=blue, key=0, style=bold];
m12_418 -> m12_414  [color=blue, key=0, style=bold];
m12_378 -> m12_8  [key=2, style=dotted];
m12_378 -> m12_379  [key=0, style=solid];
m12_284 -> m12_285  [key=0, style=solid];
m12_287 -> m12_23  [key=2, style=dotted];
m12_287 -> m12_288  [key=0, style=solid];
m12_287 -> m12_289  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m12_287 -> m12_287  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_286 -> m12_287  [key=0, style=solid];
m12_286 -> m12_8  [key=2, style=dotted];
m12_286 -> m12_288  [color=darkseagreen4, key=1, label=newDoc, style=dashed];
m12_286 -> m12_24  [key=2, style=dotted];
m12_288 -> m12_289  [key=0, style=solid];
m12_288 -> m12_9  [key=2, style=dotted];
m12_288 -> m12_23  [key=2, style=dotted];
m12_289 -> m12_24  [key=2, style=dotted];
m12_289 -> m12_290  [key=0, style=solid];
m12_289 -> m12_291  [color=darkseagreen4, key=1, label=c, style=dashed];
m12_289 -> m12_284  [color=blue, key=0, style=bold];
m12_285 -> m12_286  [key=0, style=solid];
m12_285 -> m12_285  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m12_290 -> m12_291  [key=0, style=solid];
m12_290 -> m12_13  [key=2, style=dotted];
m12_291 -> m12_292  [key=0, style=solid];
m12_291 -> m12_13  [key=2, style=dotted];
m12_291 -> m12_293  [key=2, style=dotted];
m12_291 -> m12_294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_292 -> m12_284  [color=blue, key=0, style=bold];
m12_292 -> m12_290  [color=blue, key=0, style=bold];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_13  [key=2, style=dotted];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_80  [key=2, style=dotted];
m12_70 -> m12_81  [key=2, style=dotted];
m12_70 -> m12_82  [key=2, style=dotted];
m12_70 -> m12_83  [key=2, style=dotted];
m12_70 -> m12_77  [key=2, style=dotted];
m12_70 -> m12_78  [key=2, style=dotted];
m12_70 -> m12_13  [key=2, style=dotted];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_84  [key=2, style=dotted];
m12_71 -> m12_78  [color=darkseagreen4, key=1, label=x, style=dashed];
m12_71 -> m12_10  [key=2, style=dotted];
m12_71 -> m12_83  [key=2, style=dotted];
m12_71 -> m12_85  [color=darkorchid, key=3, label="Property variable System.DateTimeOffset Date", style=bold];
m12_72 -> m12_73  [key=0, style=solid];
m12_72 -> m12_64  [key=2, style=dotted];
m12_72 -> m12_13  [key=2, style=dotted];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_23  [key=2, style=dotted];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_65  [key=2, style=dotted];
m12_73 -> m12_48  [key=2, style=dotted];
m12_73 -> m12_66  [key=2, style=dotted];
m12_73 -> m12_76  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m12_73 -> m12_25  [color=blue, key=0, style=bold];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_67  [key=2, style=dotted];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_68  [key=2, style=dotted];
m12_79 -> m12_69  [color=blue, key=0, style=bold];
m12_15 -> m12_21  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_8  [key=2, style=dotted];
m12_21 -> m12_24  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_9  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_340 -> m12_341  [key=0, style=solid];
m12_340 -> m12_9  [key=2, style=dotted];
m12_340 -> m12_342  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_340 -> m12_343  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_340 -> m12_344  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_340 -> m12_345  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_340 -> m12_348  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_341 -> m12_342  [key=0, style=solid];
m12_341 -> m12_345  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_341 -> m12_333  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_341 -> m12_11  [key=2, style=dotted];
m12_341 -> m12_10  [key=2, style=dotted];
m12_342 -> m12_343  [key=0, style=solid];
m12_342 -> m12_336  [key=2, style=dotted];
m12_342 -> m12_344  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_342 -> m12_13  [key=2, style=dotted];
m12_343 -> m12_340  [color=blue, key=0, style=bold];
m12_343 -> m12_11  [key=2, style=dotted];
m12_343 -> m12_10  [key=2, style=dotted];
m12_343 -> m12_344  [key=0, style=solid];
m12_332 -> m12_18  [key=2, style=dotted];
m12_332 -> m12_333  [key=0, style=solid];
m12_332 -> m12_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_333 -> m12_324  [color=blue, key=0, style=bold];
m12_333 -> m12_334  [key=0, style=solid];
m12_333 -> m12_338  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_333 -> m12_333  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_366 -> m12_9  [key=2, style=dotted];
m12_366 -> m12_367  [key=0, style=solid];
m12_366 -> m12_368  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_366 -> m12_369  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_366 -> m12_370  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_366 -> m12_371  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_366 -> m12_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_438  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_437  [key=0, style=solid];
m12_436 -> m12_439  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_441  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_418  [key=2, style=dotted];
m12_436 -> m12_440  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_442  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_436 -> m12_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_577 -> m12_578  [key=0, style=solid];
m12_577 -> m12_92  [key=2, style=dotted];
m12_583 -> m12_584  [key=0, style=solid];
m12_583 -> m12_23  [key=2, style=dotted];
m12_27 -> m12_80  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_27 -> m12_30  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_32  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_27 -> m12_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_27 -> m12_34  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_27 -> m12_37  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_38  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_42  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_43  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_44  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_45  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_46  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_47  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_48  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_49  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_50  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_51  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_52  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_53  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_54  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_55  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_56  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_57  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_58  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_59  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_60  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_61  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_62  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_63  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_27 -> m12_26  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m12_27 -> m12_24  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_27 -> m12_424  [color=darkorchid, key=3, label="Parameter variable string json", style=bold];
m12_27 -> m12_25  [color=darkorchid, key=3, label="Parameter variable string deserializeRootElementName", style=bold];
m12_64 -> m12_80  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_84  [key=2, style=dotted];
m12_64 -> m12_66  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_64 -> m12_67  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_64 -> m12_68  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_64 -> m12_69  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_64 -> m12_70  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_64 -> m12_71  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_64 -> m12_72  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m12_28 -> m12_27  [color=darkorchid, key=3, label="Local variable Newtonsoft.Json.IJsonLineInfo lineInfo", style=bold];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_31  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_28 -> m12_35  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_28 -> m12_39  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_28 -> m12_40  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_28 -> m12_41  [color=darkseagreen4, key=1, label=lineInfo, style=dashed];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_81  [key=2, style=dotted];
m12_29 -> m12_45  [key=2, style=dotted];
m12_29 -> m12_46  [key=2, style=dotted];
m12_29 -> m12_34  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_13  [key=2, style=dotted];
m12_30 -> m12_47  [key=2, style=dotted];
m12_32 -> m12_33  [key=0, style=solid];
m12_32 -> m12_81  [key=2, style=dotted];
m12_32 -> m12_34  [key=0, style=solid];
m12_33 -> m12_34  [key=0, style=solid];
m12_33 -> m12_13  [key=2, style=dotted];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_13  [key=2, style=dotted];
m12_34 -> m12_49  [key=2, style=dotted];
m12_34 -> m12_50  [key=2, style=dotted];
m12_34 -> m12_43  [color=darkseagreen4, key=1, label=node, style=dashed];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_81  [key=2, style=dotted];
m12_36 -> m12_45  [key=2, style=dotted];
m12_36 -> m12_46  [key=2, style=dotted];
m12_36 -> m12_38  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_13  [key=2, style=dotted];
m12_37 -> m12_47  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_76  [key=2, style=dotted];
m12_38 -> m12_13  [key=2, style=dotted];
m12_38 -> m12_49  [key=2, style=dotted];
m12_38 -> m12_50  [key=2, style=dotted];
m12_38 -> m12_40  [color=darkseagreen4, key=1, label=d, style=dashed];
m12_38 -> m12_41  [color=darkseagreen4, key=1, label=d, style=dashed];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_81  [key=2, style=dotted];
m12_42 -> m12_23  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_13  [key=2, style=dotted];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_13  [key=2, style=dotted];
m12_44 -> m12_27  [color=blue, key=0, style=bold];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_13  [key=2, style=dotted];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_13  [key=2, style=dotted];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_13  [key=2, style=dotted];
m12_50 -> m12_27  [color=darkorchid, key=3, label="Local variable XmlNode node", style=bold];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_81  [key=2, style=dotted];
m12_51 -> m12_56  [color=darkorchid, key=3, label="Property variable decimal Number", style=bold];
m12_52 -> m12_53  [key=0, style=solid];
m12_52 -> m12_13  [key=2, style=dotted];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_13  [key=2, style=dotted];
m12_53 -> m12_53  [color=darkorchid, key=3, label="Local variable decimal d", style=bold];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_81  [key=2, style=dotted];
m12_54 -> m12_63  [key=2, style=dotted];
m12_54 -> m12_61  [color=darkseagreen4, key=1, label=x, style=dashed];
m12_55 -> m12_56  [key=0, style=solid];
m12_55 -> m12_13  [key=2, style=dotted];
m12_55 -> m12_64  [key=2, style=dotted];
m12_56 -> m12_56  [color=darkorchid, key=3, label="Local variable decimal d", style=bold];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_13  [key=2, style=dotted];
m12_56 -> m12_65  [key=2, style=dotted];
m12_56 -> m12_48  [key=2, style=dotted];
m12_56 -> m12_66  [key=2, style=dotted];
m12_56 -> m12_59  [color=darkseagreen4, key=1, label=doc1, style=dashed];
m12_57 -> m12_58  [key=0, style=solid];
m12_57 -> m12_81  [key=2, style=dotted];
m12_57 -> m12_51  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_13  [key=2, style=dotted];
m12_58 -> m12_23  [key=2, style=dotted];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_13  [key=2, style=dotted];
m12_59 -> m12_67  [key=2, style=dotted];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_81  [key=2, style=dotted];
m12_60 -> m12_11  [key=2, style=dotted];
m12_60 -> m12_68  [key=2, style=dotted];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_13  [key=2, style=dotted];
m12_61 -> m12_23  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_81  [key=2, style=dotted];
m12_62 -> m12_83  [key=2, style=dotted];
m12_62 -> m12_52  [color=blue, key=0, style=bold];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_10  [key=2, style=dotted];
m12_68 -> m12_11  [key=2, style=dotted];
m12_31 -> m12_32  [key=0, style=solid];
m12_31 -> m12_13  [key=2, style=dotted];
m12_31 -> m12_82  [key=2, style=dotted];
m12_31 -> m12_48  [key=2, style=dotted];
m12_31 -> m12_33  [color=darkseagreen4, key=1, label=converter, style=dashed];
m12_31 -> m12_34  [color=darkseagreen4, key=1, label=converter, style=dashed];
m12_31 -> m12_38  [color=darkseagreen4, key=1, label=converter, style=dashed];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_13  [key=2, style=dotted];
m12_35 -> m12_82  [key=2, style=dotted];
m12_35 -> m12_42  [color=darkseagreen4, key=1, label=xmlText, style=dashed];
m12_39 -> m12_13  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_82  [key=2, style=dotted];
m12_39 -> m12_51  [key=2, style=dotted];
m12_39 -> m12_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m12_39 -> m12_42  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m12_40 -> m12_13  [key=2, style=dotted];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_42  [key=0, style=solid];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_13  [key=2, style=dotted];
m12_41 -> m12_41  [color=darkseagreen4, key=1, label=linqXmlText, style=dashed];
m12_17 -> m12_14  [color=blue, key=0, style=bold];
m12_413 -> m12_13  [key=2, style=dotted];
m12_413 -> m12_414  [key=0, style=solid];
m12_379 -> m12_9  [key=2, style=dotted];
m12_379 -> m12_380  [key=0, style=solid];
m12_379 -> m12_381  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_379 -> m12_382  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_379 -> m12_383  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_379 -> m12_384  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_379 -> m12_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_384 -> m12_18  [key=2, style=dotted];
m12_384 -> m12_385  [key=0, style=solid];
m12_384 -> m12_386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_384 -> m12_51  [key=2, style=dotted];
m12_384 -> m12_23  [key=2, style=dotted];
m12_380 -> m12_11  [key=2, style=dotted];
m12_380 -> m12_10  [key=2, style=dotted];
m12_380 -> m12_381  [key=0, style=solid];
m12_380 -> m12_383  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_380 -> m12_380  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_381 -> m12_13  [key=2, style=dotted];
m12_381 -> m12_382  [key=0, style=solid];
m12_381 -> m12_354  [key=2, style=dotted];
m12_382 -> m12_11  [key=2, style=dotted];
m12_382 -> m12_10  [key=2, style=dotted];
m12_382 -> m12_383  [key=0, style=solid];
m12_382 -> m12_23  [key=2, style=dotted];
m12_383 -> m12_13  [key=2, style=dotted];
m12_383 -> m12_384  [key=0, style=solid];
m12_383 -> m12_355  [key=2, style=dotted];
m12_377 -> m12_378  [key=0, style=solid];
m12_377 -> m12_338  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_385 -> m12_376  [color=blue, key=0, style=bold];
m12_385 -> m12_379  [color=blue, key=0, style=bold];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_21  [key=2, style=dotted];
m12_234 -> m12_235  [key=0, style=solid];
m12_234 -> m12_113  [key=2, style=dotted];
m12_234 -> m12_236  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_234 -> m12_237  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_234 -> m12_240  [color=darkseagreen4, key=1, label=jsonText, style=dashed];
m12_238 -> m12_247  [key=2, style=dotted];
m12_238 -> m12_239  [key=0, style=solid];
m12_238 -> m12_23  [key=2, style=dotted];
m12_237 -> m12_246  [key=2, style=dotted];
m12_237 -> m12_238  [key=0, style=solid];
m12_237 -> m12_24  [key=2, style=dotted];
m12_237 -> m12_241  [color=darkseagreen4, key=1, label=deserializedDoc, style=dashed];
m12_239 -> m12_248  [key=2, style=dotted];
m12_239 -> m12_240  [key=0, style=solid];
m12_239 -> m12_135  [key=2, style=dotted];
m12_240 -> m12_80  [key=2, style=dotted];
m12_240 -> m12_241  [key=0, style=solid];
m12_240 -> m12_135  [key=2, style=dotted];
m12_236 -> m12_237  [key=0, style=solid];
m12_236 -> m12_245  [key=2, style=dotted];
m12_236 -> m12_23  [key=2, style=dotted];
m12_241 -> m12_242  [key=0, style=solid];
m12_241 -> m12_249  [key=2, style=dotted];
m12_241 -> m12_250  [key=2, style=dotted];
m12_241 -> m12_244  [key=2, style=dotted];
m12_235 -> m12_236  [key=0, style=solid];
m12_235 -> m12_244  [key=2, style=dotted];
m12_235 -> m12_235  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_242 -> m12_13  [key=2, style=dotted];
m12_242 -> m12_243  [key=0, style=solid];
m12_242 -> m12_136  [key=2, style=dotted];
m12_243 -> m12_234  [color=blue, key=0, style=bold];
m12_243 -> m12_230  [color=blue, key=0, style=bold];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_20  [key=2, style=dotted];
m12_510 -> m12_511  [key=0, style=solid];
m12_510 -> m12_517  [key=2, style=dotted];
m12_347 -> m12_348  [key=0, style=solid];
m12_348 -> m12_349  [key=0, style=solid];
m12_348 -> m12_351  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_348 -> m12_348  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_348 -> m12_323  [key=2, style=dotted];
m12_349 -> m12_350  [key=0, style=solid];
m12_349 -> m12_354  [key=2, style=dotted];
m12_349 -> m12_347  [color=blue, key=0, style=bold];
m12_351 -> m12_352  [key=0, style=solid];
m12_351 -> m12_355  [key=2, style=dotted];
m12_351 -> m12_351  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_350 -> m12_351  [key=0, style=solid];
m12_350 -> m12_23  [key=2, style=dotted];
m12_352 -> m12_353  [key=0, style=solid];
m12_352 -> m12_51  [key=2, style=dotted];
m12_352 -> m12_23  [key=2, style=dotted];
m12_352 -> m12_8  [key=2, style=dotted];
m12_353 -> m12_347  [color=blue, key=0, style=bold];
m12_353 -> m12_9  [key=2, style=dotted];
m12_353 -> m12_354  [key=0, style=solid];
m12_353 -> m12_355  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_353 -> m12_356  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_353 -> m12_357  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_353 -> m12_358  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_353 -> m12_359  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_353 -> m12_360  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_353 -> m12_361  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_434 -> m12_435  [key=0, style=solid];
m12_441 -> m12_13  [key=2, style=dotted];
m12_441 -> m12_442  [key=0, style=solid];
m12_443 -> m12_13  [key=2, style=dotted];
m12_443 -> m12_444  [key=0, style=solid];
m12_443 -> m12_441  [color=blue, key=0, style=bold];
m12_442 -> m12_81  [key=2, style=dotted];
m12_442 -> m12_11  [key=2, style=dotted];
m12_442 -> m12_443  [key=0, style=solid];
m12_442 -> m12_24  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_111  [key=2, style=dotted];
m12_96 -> m12_98  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_112  [key=2, style=dotted];
m12_97 -> m12_99  [key=2, style=dotted];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_113  [key=2, style=dotted];
m12_98 -> m12_96  [color=blue, key=0, style=bold];
m12_99 -> m12_100  [key=0, style=solid];
m12_99 -> m12_23  [key=2, style=dotted];
m12_100 -> m12_101  [key=0, style=solid];
m12_100 -> m12_111  [key=2, style=dotted];
m12_100 -> m12_102  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_112  [key=2, style=dotted];
m12_101 -> m12_101  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_102 -> m12_103  [key=0, style=solid];
m12_102 -> m12_113  [key=2, style=dotted];
m12_102 -> m12_8  [key=2, style=dotted];
m12_103 -> m12_104  [key=0, style=solid];
m12_103 -> m12_23  [key=2, style=dotted];
m12_103 -> m12_9  [key=2, style=dotted];
m12_103 -> m12_103  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_103 -> m12_105  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_103 -> m12_106  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_103 -> m12_107  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_103 -> m12_108  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_103 -> m12_111  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_104 -> m12_105  [key=0, style=solid];
m12_104 -> m12_92  [key=2, style=dotted];
m12_104 -> m12_11  [key=2, style=dotted];
m12_104 -> m12_10  [key=2, style=dotted];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_93  [key=2, style=dotted];
m12_105 -> m12_13  [key=2, style=dotted];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_23  [key=2, style=dotted];
m12_106 -> m12_11  [key=2, style=dotted];
m12_106 -> m12_10  [key=2, style=dotted];
m12_107 -> m12_108  [key=0, style=solid];
m12_107 -> m12_92  [key=2, style=dotted];
m12_107 -> m12_13  [key=2, style=dotted];
m12_108 -> m12_109  [key=0, style=solid];
m12_108 -> m12_93  [key=2, style=dotted];
m12_108 -> m12_95  [key=2, style=dotted];
m12_108 -> m12_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_109 -> m12_110  [key=0, style=solid];
m12_109 -> m12_23  [key=2, style=dotted];
m12_109 -> m12_100  [color=blue, key=0, style=bold];
m12_110 -> m12_95  [color=blue, key=0, style=bold];
m12_110 -> m12_111  [key=0, style=solid];
m12_541 -> m12_542  [key=0, style=solid];
m12_541 -> m12_545  [key=2, style=dotted];
m12_541 -> m12_546  [key=2, style=dotted];
m12_585 -> m12_586  [key=0, style=solid];
m12_586 -> m12_587  [key=0, style=solid];
m12_586 -> m12_593  [key=2, style=dotted];
m12_586 -> m12_92  [key=2, style=dotted];
m12_586 -> m12_589  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_586 -> m12_590  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_586 -> m12_591  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_586 -> m12_533  [key=2, style=dotted];
m12_587 -> m12_588  [key=0, style=solid];
m12_587 -> m12_594  [key=2, style=dotted];
m12_587 -> m12_80  [key=2, style=dotted];
m12_589 -> m12_590  [key=0, style=solid];
m12_589 -> m12_23  [key=2, style=dotted];
m12_589 -> m12_585  [color=blue, key=0, style=bold];
m12_588 -> m12_589  [key=0, style=solid];
m12_588 -> m12_68  [key=2, style=dotted];
m12_588 -> m12_590  [color=darkseagreen4, key=1, label=w2, style=dashed];
m12_588 -> m12_591  [color=darkseagreen4, key=1, label=w2, style=dashed];
m12_588 -> m12_220  [key=2, style=dotted];
m12_588 -> m12_13  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_23  [key=2, style=dotted];
m12_14 -> m12_0  [color=blue, key=0, style=bold];
m12_14 -> m12_15  [key=0, style=solid];
m12_215 -> m12_216  [key=0, style=solid];
m12_215 -> m12_81  [key=2, style=dotted];
m12_215 -> m12_83  [key=2, style=dotted];
m12_215 -> m12_220  [key=2, style=dotted];
m12_215 -> m12_218  [color=darkseagreen4, key=1, label=builder, style=dashed];
m12_216 -> m12_217  [key=0, style=solid];
m12_216 -> m12_13  [key=2, style=dotted];
m12_216 -> m12_213  [key=2, style=dotted];
m12_216 -> m12_221  [key=2, style=dotted];
m12_216 -> m12_222  [key=2, style=dotted];
m12_212 -> m12_213  [key=0, style=solid];
m12_212 -> m12_13  [key=2, style=dotted];
m12_212 -> m12_215  [key=0, style=solid];
m12_212 -> m12_216  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_212 -> m12_217  [color=darkseagreen4, key=1, label=XDocument, style=dashed];
m12_212 -> m12_207  [color=darkorchid, key=3, label="Parameter variable XDocument doc", style=bold];
m12_217 -> m12_202  [color=blue, key=0, style=bold];
m12_217 -> m12_218  [key=0, style=solid];
m12_217 -> m12_223  [key=2, style=dotted];
m12_354 -> m12_11  [key=2, style=dotted];
m12_354 -> m12_10  [key=2, style=dotted];
m12_354 -> m12_355  [key=0, style=solid];
m12_338 -> m12_339  [key=0, style=solid];
m12_338 -> m12_210  [key=2, style=dotted];
m12_338 -> m12_338  [color=darkorchid, key=3, label="Local variable string json", style=bold];
m12_337 -> m12_338  [key=0, style=solid];
m12_339 -> m12_337  [color=blue, key=0, style=bold];
m12_339 -> m12_8  [key=2, style=dotted];
m12_339 -> m12_340  [key=0, style=solid];
m12_339 -> m12_339  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_345 -> m12_346  [key=0, style=solid];
m12_345 -> m12_94  [key=2, style=dotted];
m12_345 -> m12_18  [key=2, style=dotted];
m12_345 -> m12_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_344 -> m12_345  [key=0, style=solid];
m12_344 -> m12_13  [key=2, style=dotted];
m12_346 -> m12_344  [color=blue, key=0, style=bold];
m12_346 -> m12_337  [color=blue, key=0, style=bold];
m12_19 -> m12_20  [key=0, style=solid];
m12_230 -> m12_231  [key=0, style=solid];
m12_230 -> m12_13  [key=2, style=dotted];
m12_231 -> m12_232  [key=0, style=solid];
m12_231 -> m12_13  [key=2, style=dotted];
m12_231 -> m12_233  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_231 -> m12_231  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_232 -> m12_233  [key=0, style=solid];
m12_232 -> m12_220  [key=2, style=dotted];
m12_232 -> m12_111  [key=2, style=dotted];
m12_232 -> m12_234  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_232 -> m12_238  [color=darkseagreen4, key=1, label=doc, style=dashed];
m12_471 -> m12_472  [key=0, style=solid];
m12_471 -> m12_12  [key=2, style=dotted];
m12_471 -> m12_46  [key=2, style=dotted];
m12_471 -> m12_222  [key=2, style=dotted];
m12_471 -> m12_474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_471 -> m12_475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_488 -> m12_489  [key=0, style=solid];
m12_488 -> m12_490  [key=2, style=dotted];
m12_488 -> m12_482  [color=blue, key=0, style=bold];
m12_224 -> m12_225  [key=0, style=solid];
m12_233 -> m12_224  [color=blue, key=0, style=bold];
m12_233 -> m12_234  [key=0, style=solid];
m12_233 -> m12_112  [key=2, style=dotted];
m12_470 -> m12_471  [key=0, style=solid];
m12_472 -> m12_470  [color=blue, key=0, style=bold];
m12_472 -> m12_473  [key=0, style=solid];
m12_472 -> m12_264  [key=2, style=dotted];
m12_472 -> m12_477  [color=darkseagreen4, key=1, label=sw, style=dashed];
m12_478 -> m12_479  [key=0, style=solid];
m12_478 -> m12_470  [color=blue, key=0, style=bold];
m12_480 -> m12_478  [color=blue, key=0, style=bold];
m12_487 -> m12_488  [key=0, style=solid];
m12_487 -> m12_23  [key=2, style=dotted];
m12_498 -> m12_496  [color=blue, key=0, style=bold];
m12_498 -> m12_499  [key=0, style=solid];
m12_335 -> m12_336  [key=0, style=solid];
m12_335 -> m12_323  [key=2, style=dotted];
m12_335 -> m12_332  [color=blue, key=0, style=bold];
m12_334 -> m12_335  [key=0, style=solid];
m12_334 -> m12_336  [key=2, style=dotted];
m12_334 -> m12_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_336 -> m12_334  [color=blue, key=0, style=bold];
m12_248 -> m12_249  [key=0, style=solid];
m12_248 -> m12_253  [color=darkseagreen4, key=1, label=expected, style=dashed];
m12_248 -> m12_248  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_246 -> m12_247  [key=0, style=solid];
m12_246 -> m12_246  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m12_306 -> m12_307  [key=0, style=solid];
m12_306 -> m12_306  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_85 -> m12_86  [key=0, style=solid];
m12_88 -> m12_9  [key=2, style=dotted];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_90  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_88 -> m12_91  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_88 -> m12_92  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_88 -> m12_93  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_88 -> m12_97  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_88 -> m12_23  [key=2, style=dotted];
m12_87 -> m12_8  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_87 -> m12_92  [key=2, style=dotted];
m12_87 -> m12_93  [key=2, style=dotted];
m12_87 -> m12_89  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_89 -> m12_11  [key=2, style=dotted];
m12_89 -> m12_10  [key=2, style=dotted];
m12_89 -> m12_90  [key=0, style=solid];
m12_89 -> m12_94  [key=2, style=dotted];
m12_90 -> m12_13  [key=2, style=dotted];
m12_90 -> m12_91  [key=0, style=solid];
m12_90 -> m12_51  [key=2, style=dotted];
m12_90 -> m12_23  [key=2, style=dotted];
m12_91 -> m12_11  [key=2, style=dotted];
m12_91 -> m12_10  [key=2, style=dotted];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_85  [color=blue, key=0, style=bold];
m12_93 -> m12_95  [key=2, style=dotted];
m12_93 -> m12_94  [key=0, style=solid];
m12_93 -> m12_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_86 -> m12_87  [key=0, style=solid];
m12_86 -> m12_86  [color=darkorchid, key=3, label="Local variable string xml", style=bold];
m12_264 -> m12_265  [key=0, style=solid];
m12_264 -> m12_247  [key=2, style=dotted];
m12_264 -> m12_246  [key=2, style=dotted];
m12_264 -> m12_248  [key=2, style=dotted];
m12_473 -> m12_474  [key=0, style=solid];
m12_473 -> m12_221  [key=2, style=dotted];
m12_473 -> m12_222  [key=2, style=dotted];
m12_473 -> m12_475  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_473 -> m12_476  [color=darkseagreen4, key=1, label=writer, style=dashed];
m12_475 -> m12_80  [key=2, style=dotted];
m12_475 -> m12_476  [key=0, style=solid];
m12_475 -> m12_479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_475 -> m12_474  [key=0, style=solid];
m12_475 -> m12_480  [key=2, style=dotted];
m12_474 -> m12_475  [key=0, style=solid];
m12_474 -> m12_474  [color=darkorchid, key=3, label="Local variable string jsonText", style=bold];
m12_474 -> m12_449  [key=2, style=dotted];
m12_474 -> m12_476  [key=0, style=solid];
m12_474 -> m12_479  [key=2, style=dotted];
m12_476 -> m12_476  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m12_476 -> m12_477  [key=0, style=solid];
m12_476 -> m12_18  [key=2, style=dotted];
m12_476 -> m12_478  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_476 -> m12_481  [key=2, style=dotted];
m12_477 -> m12_473  [color=blue, key=0, style=bold];
m12_477 -> m12_478  [key=0, style=solid];
m12_477 -> m12_266  [key=2, style=dotted];
m12_218 -> m12_219  [key=0, style=solid];
m12_218 -> m12_224  [key=2, style=dotted];
m12_603 -> m12_604  [key=0, style=solid];
m12_603 -> m12_21  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_604 -> m12_605  [key=0, style=solid];
m12_604 -> m12_606  [color=darkseagreen4, key=1, label=xmlString, style=dashed];
m12_604 -> m12_596  [color=darkorchid, key=3, label="Local variable string xmlString", style=bold];
m12_604 -> m12_97  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_605 -> m12_606  [key=0, style=solid];
m12_605 -> m12_111  [key=2, style=dotted];
m12_605 -> m12_607  [color=darkseagreen4, key=1, label=xml, style=dashed];
m12_606 -> m12_607  [key=0, style=solid];
m12_606 -> m12_112  [key=2, style=dotted];
m12_606 -> m12_335  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_607 -> m12_608  [key=0, style=solid];
m12_607 -> m12_113  [key=2, style=dotted];
m12_607 -> m12_348  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_608 -> m12_609  [key=0, style=solid];
m12_608 -> m12_68  [key=2, style=dotted];
m12_608 -> m12_374  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_609 -> m12_610  [key=0, style=solid];
m12_609 -> m12_23  [key=2, style=dotted];
m12_609 -> m12_387  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_610 -> m12_603  [color=blue, key=0, style=bold];
m12_610 -> m12_471  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_542 -> m12_80  [key=2, style=dotted];
m12_542 -> m12_543  [key=0, style=solid];
m12_245 -> m12_246  [key=0, style=solid];
m12_525 -> m12_526  [key=0, style=solid];
m12_525 -> m12_12  [key=2, style=dotted];
m12_525 -> m12_13  [key=2, style=dotted];
m12_526 -> m12_522  [color=blue, key=0, style=bold];
m12_611 -> m12_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_249  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_272  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_279  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_281  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_370  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_427  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_430  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_452  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.XmlNodeConverterTest", style=dashed];
m12_611 -> m12_479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_612 -> m12_338  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_612 -> m12_488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_613 -> m12_345  [color=darkseagreen4, key=1, label=json, style=dashed];
m12_613 -> m12_497  [color=darkseagreen4, key=1, label=reader, style=dashed];
m12_614 -> m12_442  [color=darkseagreen4, key=1, label=json, style=dashed];
}
