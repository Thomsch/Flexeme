digraph  {
n50 [label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest", span=""];
n0 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", span="49-49", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()"];
n1 [label="return FileName + '' - '' + TestCaseDescription + '' - '' + TestDescription;", span="51-51", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()"];
n2 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", span="49-49", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()"];
n3 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", span="59-59", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)"];
n4 [label="JsonSchema s = JsonSchema.Read(jsonSchemaSpecTest.Schema.CreateReader())", span="61-61", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)"];
n6 [label="bool v = jsonSchemaSpecTest.Data.IsValid(s, out errorMessages)", span="64-64", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)"];
n8 [label="Assert.AreEqual(jsonSchemaSpecTest.IsValid, v, jsonSchemaSpecTest.TestCaseDescription + '' - '' + jsonSchemaSpecTest.TestDescription + '' - errors: '' + string.Join('', '', errorMessages))", span="67-67", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)"];
n5 [label="IList<string> errorMessages", span="63-63", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)"];
n10 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1649-1649", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()"];
n11 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", span="269-269", cluster="Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)"];
n7 [label="errorMessages = errorMessages ?? new List<string>()", span="65-65", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)"];
n12 [label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", span="79-79", cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)"];
n13 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n9 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", span="59-59", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)"];
n14 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)"];
n15 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual"];
n16 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", span="70-70", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n17 [label="IList<JsonSchemaSpecTest> specTests = new List<JsonSchemaSpecTest>()", span="72-72", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n18 [label="string baseDirectory = AppDomain.CurrentDomain.BaseDirectory", span="75-75", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n33 [label="jsonSchemaSpecTest.TestNumber = specTests.Count + 1", span="100-100", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n34 [label="specTests.Add(jsonSchemaSpecTest)", span="102-102", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n35 [label="specTests = specTests.Where(s => s.FileName != ''dependencies.json''\r\n                                             && s.TestCaseDescription != ''multiple disallow subschema''\r\n                                             && s.TestCaseDescription != ''types from separate schemas are merged''\r\n                                             && s.TestCaseDescription != ''when types includes a schema it should fully validate the schema''\r\n                                             && s.TestCaseDescription != ''types can include schemas'').ToList()", span="107-111", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n19 [label="string baseTestPath = Path.Combine(baseDirectory, ''Schema'', ''Specs'')", span="76-76", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n20 [label="string[] testFiles = Directory.GetFiles(baseTestPath, ''*.json'', SearchOption.AllDirectories)", span="78-78", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n38 [label="Entry System.IO.Path.Combine(string, string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string, string)"];
n21 [label=testFiles, span="81-81", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n39 [label="Entry System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", span="0-0", cluster="System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)"];
n22 [label="string testJson = System.IO.File.ReadAllText(testFile)", span="83-83", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n27 [label="jsonSchemaSpecTest.FileName = Path.GetFileName(testFile)", span="93-93", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n23 [label="JArray a = JArray.Parse(testJson)", span="85-85", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n40 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)"];
n24 [label=a, span="87-87", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n41 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)"];
n25 [label="testCase[''tests'']", span="89-89", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n28 [label="jsonSchemaSpecTest.TestCaseDescription = (string)testCase[''description'']", span="94-94", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n29 [label="jsonSchemaSpecTest.Schema = (JObject)testCase[''schema'']", span="95-95", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n26 [label="JsonSchemaSpecTest jsonSchemaSpecTest = new JsonSchemaSpecTest()", span="91-91", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n30 [label="jsonSchemaSpecTest.TestDescription = (string)test[''description'']", span="97-97", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n31 [label="jsonSchemaSpecTest.Data = test[''data'']", span="98-98", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n32 [label="jsonSchemaSpecTest.IsValid = (bool)test[''valid'']", span="99-99", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n42 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.JsonSchemaSpecTest()", span="39-39", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.JsonSchemaSpecTest()"];
n43 [label="Entry System.IO.Path.GetFileName(string)", span="0-0", cluster="System.IO.Path.GetFileName(string)"];
n44 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
n36 [label="return specTests;", span="113-113", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n45 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n46 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
n47 [label="Entry lambda expression", span="107-111", cluster="lambda expression"];
n37 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", span="70-70", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()"];
n48 [label="s.FileName != ''dependencies.json''\r\n                                             && s.TestCaseDescription != ''multiple disallow subschema''\r\n                                             && s.TestCaseDescription != ''types from separate schemas are merged''\r\n                                             && s.TestCaseDescription != ''when types includes a schema it should fully validate the schema''\r\n                                             && s.TestCaseDescription != ''types can include schemas''", span="107-111", cluster="lambda expression"];
n49 [label="Exit lambda expression", span="107-111", cluster="lambda expression"];
d527 [label="propertyName.StartsWith(''@'', StringComparison.Ordinal)", span="1351-1351", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", color=green, community=0];
d495 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1342-1342", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d526 [label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1349-1349", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d528 [label="string attributeName = propertyName.Substring(1)", span="1353-1353", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d533 [label="IXmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="1366-1366", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d550 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)"];
d482 [label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1278-1278", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d497 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1671-1671", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d516 [label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1336-1336", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d548 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1499-1499", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d553 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1662-1662", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)"];
d547 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1342-1342", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d554 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1409-1409", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d523 [label="string.IsNullOrEmpty(propertyName)", span="1344-1344", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d525 [label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1347-1347", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d529 [label="string attributeValue = reader.Value.ToString()", span="1354-1354", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d531 [label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                    ? document.CreateAttribute(attributeName, manager.LookupNamespace(attributePrefix), attributeValue)\r\n                    : document.CreateAttribute(attributeName, attributeValue)", span="1358-1360", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d532 [label="((IXmlElement)currentNode).SetAttributeNode(attribute)", span="1362-1362", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d534 [label="currentNode.AppendChild(element)", span="1368-1368", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d537 [label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                        ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix), nameValue.Value)\r\n                        : document.CreateAttribute(nameValue.Key, nameValue.Value)", span="1375-1377", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d539 [label="reader.TokenType == JsonToken.String\r\n                    || reader.TokenType == JsonToken.Integer\r\n                    || reader.TokenType == JsonToken.Float\r\n                    || reader.TokenType == JsonToken.Boolean\r\n                    || reader.TokenType == JsonToken.Date", span="1382-1386", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d540 [label="element.AppendChild(document.CreateTextNode(ConvertTokenToXmlValue(reader)))", span="1388-1388", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d541 [label="reader.TokenType == JsonToken.Null", span="1390-1390", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d542 [label="reader.TokenType != JsonToken.EndObject", span="1397-1397", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d543 [label="manager.PushScope()", span="1399-1399", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d544 [label="DeserializeNode(reader, document, manager, element)", span="1400-1400", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d545 [label="manager.PopScope()", span="1401-1401", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d546 [label="manager.RemoveNamespace(string.Empty, manager.DefaultNamespace)", span="1404-1404", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d459 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d499 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1299-1299", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d463 [label="IXmlDocument document = null", span="1242-1242", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d464 [label="IXmlNode rootNode = null", span="1243-1243", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d462 [label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1241-1241", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d549 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="94-94", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)"];
d115 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="340-340", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)"];
d551 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
d530 [label="string attributePrefix = MiscellaneousUtils.GetPrefix(attributeName)", span="1356-1356", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d763 [label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
d123 [label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="376-376", cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d538 [label="element.SetAttributeNode(attribute)", span="1379-1379", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d728 [label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="1733-1733", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d469 [label="document = new XDocumentWrapper(d)", span="1252-1252", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d470 [label="rootNode = document", span="1253-1253", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d475 [label="document = new XmlDocumentWrapper(d)", span="1263-1263", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d476 [label="rootNode = document", span="1264-1264", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d481 [label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1274-1274", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d485 [label="objectType == typeof(XElement)", span="1287-1287", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d484 [label="DeserializeNode(reader, document, manager, rootNode)", span="1283-1283", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d598 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1483-1483", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)"];
d723 [label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="1721-1721", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d724 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1671-1671", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d698 [label="reader.TokenType", span="1675-1675", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d700 [label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1678-1678", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d702 [label="string propertyName = reader.Value.ToString()", span="1681-1681", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d703 [label="reader.Read()", span="1682-1682", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d704 [label="reader.TokenType == JsonToken.StartArray", span="1684-1684", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d706 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1687-1687", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d707 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1689-1689", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d710 [label="IXmlElement arrayElement = currentNode.ChildNodes.OfType<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1695-1695", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d711 [label="AddJsonArrayAttribute(arrayElement, document)", span="1696-1696", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d712 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1701-1701", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d714 [label="string constructorName = reader.Value.ToString()", span="1705-1705", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d715 [label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="1707-1707", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d716 [label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="1709-1709", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d718 [label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="1713-1713", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d722 [label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="1719-1719", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d513 [label="reader.TokenType == JsonToken.StartArray", span="1327-1327", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d517 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1299-1299", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d648 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1499-1499", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d609 [label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1501-1501", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d612 [label="reader.TokenType != JsonToken.String\r\n                && reader.TokenType != JsonToken.Null\r\n                && reader.TokenType != JsonToken.Boolean\r\n                && reader.TokenType != JsonToken.Integer\r\n                && reader.TokenType != JsonToken.Float\r\n                && reader.TokenType != JsonToken.Date\r\n                && reader.TokenType != JsonToken.StartConstructor", span="1506-1512", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d613 [label="!finishedAttributes && !finishedElement && reader.Read()", span="1515-1515", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d614 [label="reader.TokenType", span="1517-1517", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d616 [label="string attributeName = reader.Value.ToString()", span="1520-1520", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d623 [label="reader.Read()", span="1531-1531", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d624 [label="attributeValue = ConvertTokenToXmlValue(reader)", span="1532-1532", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d628 [label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1538-1538", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d631 [label="reader.Read()", span="1543-1543", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d632 [label="attributeValue = reader.Value.ToString()", span="1544-1544", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d633 [label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1548-1548", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d636 [label="manager.LookupNamespace(''json'' + i) != null", span="1553-1553", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d640 [label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1560-1560", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d646 [label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="1581-1581", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d111 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="338-338", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)"];
d113 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="339-339", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)"];
d586 [label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1460-1460", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d697 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1662-1662", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)"];
d694 [label="string ns = string.IsNullOrEmpty(elementPrefix) ? manager.DefaultNamespace : manager.LookupNamespace(elementPrefix)", span="1664-1664", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)"];
d695 [label="IXmlElement element = (!string.IsNullOrEmpty(ns)) ? document.CreateElement(elementName, ns) : document.CreateElement(elementName)", span="1666-1666", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)"];
d522 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1456-1456", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d585 [label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1458-1458", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d524 [label="throw new JsonSerializationException(''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1345-1345", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d97 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="331-331", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)"];
d576 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1409-1409", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d619 [label="string attributeValue", span="1525-1525", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d556 [label="reader.TokenType == JsonToken.String", span="1411-1411", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d557 [label="return reader.Value.ToString();", span="1413-1413", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d558 [label="reader.TokenType == JsonToken.Integer", span="1415-1415", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d559 [label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1417-1417", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d560 [label="reader.TokenType == JsonToken.Float", span="1419-1419", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d561 [label="reader.Value is decimal", span="1421-1421", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d562 [label="return XmlConvert.ToString((decimal)reader.Value);", span="1422-1422", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d563 [label="reader.Value is float", span="1423-1423", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d564 [label="return XmlConvert.ToString((float)reader.Value);", span="1424-1424", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d565 [label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1426-1426", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d566 [label="reader.TokenType == JsonToken.Boolean", span="1428-1428", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d567 [label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1430-1430", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d568 [label="reader.TokenType == JsonToken.Date", span="1432-1432", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d569 [label="reader.Value is DateTimeOffset", span="1435-1435", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d570 [label="return XmlConvert.ToString((DateTimeOffset)reader.Value);", span="1436-1436", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d571 [label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1439-1439", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d573 [label="reader.TokenType == JsonToken.Null", span="1446-1446", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d575 [label="throw JsonSerializationException.Create(reader, ''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1452-1452", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d295 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d535 [label=attributeNameValues, span="1371-1371", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d518 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()"];
d119 [label="Entry Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="363-363", cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d552 [label="Entry Unk.LookupNamespace", span="", cluster="Unk.LookupNamespace"];
d51 [label="Entry Unk.CreateAttribute", span="", cluster="Unk.CreateAttribute"];
d536 [label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1373-1373", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)"];
d286 [label="Entry Unk.PushScope", span="", cluster="Unk.PushScope"];
d454 [label="Entry Unk.PopScope", span="", cluster="Unk.PopScope"];
d555 [label="Entry Unk.RemoveNamespace", span="", cluster="Unk.RemoveNamespace"];
d490 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1236-1236", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d460 [label="reader.TokenType == JsonToken.Null", span="1238-1238", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d465 [label="typeof(XObject).IsAssignableFrom(objectType)", span="1246-1246", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d466 [label="objectType != typeof(XDocument) && objectType != typeof(XElement)", span="1248-1248", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d471 [label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1257-1257", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d472 [label="objectType != typeof(XmlDocument)", span="1259-1259", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d478 [label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1269-1269", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d479 [label="reader.TokenType != JsonToken.StartObject", span="1271-1271", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d483 [label="reader.Read()", span="1282-1282", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d486 [label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1289-1289", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d521 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1627-1627", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d519 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1589-1589", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d590 [label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1467-1467", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d500 [label=propertyName, span="1301-1301", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d502 [label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1304-1304", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d504 [label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1307-1307", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d506 [label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1310-1310", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d508 [label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1313-1313", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d509 [label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1317-1317", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d510 [label="CreateInstruction(reader, document, currentNode, propertyName)", span="1319-1319", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d511 [label="string.Equals(propertyName, ''!DOCTYPE'', StringComparison.OrdinalIgnoreCase)", span="1321-1321", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d512 [label="CreateDocumentType(reader, document, currentNode)", span="1323-1323", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d514 [label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1330-1330", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d477 [label="document == null || rootNode == null", span="1268-1268", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d489 [label="return document.WrappedNode;", span="1296-1296", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d255 [label="Entry XmlNamespaceManager.cstr", span="", cluster="XmlNamespaceManager.cstr"];
d256 [label="Entry NameTable.cstr", span="", cluster="NameTable.cstr"];
d46 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="105-105", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)"];
d116 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="340-340", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)"];
d176 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="529-529", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)"];
d622 [label="attributeName = attributeName.Substring(1)", span="1530-1530", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d630 [label="attributeName = attributeName.Substring(1)", span="1542-1542", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d669 [label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1622-1622", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d245 [label="IXmlNode node = WrapXml(value)", span="908-908", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d247 [label="PushParentNamespaces(node, manager)", span="911-911", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d248 [label="!OmitRootObject", span="913-913", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d250 [label="SerializeNode(writer, node, manager, !OmitRootObject)", span="916-916", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d251 [label="!OmitRootObject", span="918-918", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d301 [label="return ''@'' + ResolveFullName(node, manager);", span="988-988", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d307 [label="return ResolveFullName(node, manager);", span="994-994", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d309 [label="return ''?'' + ResolveFullName(node, manager);", span="996-996", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d311 [label="return ''!'' + ResolveFullName(node, manager);", span="998-998", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d337 [label="string nodeName = GetPropertyName(childNode, manager)", span="1029-1029", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d348 [label="writeArray = IsArray(groupedNodes[0])", span="1050-1050", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d351 [label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="1059-1059", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d358 [label="SerializeNode(writer, groupedNodes[i], manager, false)", span="1072-1072", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d371 [label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="1086-1086", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d373 [label="IsArray(node) && node.ChildNodes.All(n => n.LocalName == node.LocalName) && node.ChildNodes.Count > 0", span="1089-1089", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d374 [label="SerializeGroupedNodes(writer, node, manager, false)", span="1091-1091", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d382 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1111-1111", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d383 [label="!ValueAttributes(node.Attributes).Any() && node.ChildNodes.Count == 1\r\n                            && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="1113-1114", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d393 [label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1135-1135", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d395 [label="SerializeGroupedNodes(writer, node, manager, true)", span="1138-1138", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d413 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1167-1167", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d417 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1172-1172", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d431 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1195-1195", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d592 [label=WriteArrayAttribute, span="1471-1471", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d593 [label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1473-1473", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d594 [label="count == 1 && WriteArrayAttribute", span="1476-1476", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d596 [label="AddJsonArrayAttribute(arrayElement, document)", span="1479-1479", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d627 [label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1536-1536", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d709 [label="count == 1 && WriteArrayAttribute", span="1693-1693", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d88 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="310-310", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d124 [label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="376-376", cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d185 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="551-551", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d227 [label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="764-764", cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d587 [label="currentNode.AppendChild(nestedArrayElement)", span="1462-1462", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d668 [label="currentNode.AppendChild(declaration)", span="1618-1618", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d670 [label="currentNode.AppendChild(instruction)", span="1623-1623", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d692 [label="currentNode.AppendChild(documentType)", span="1659-1659", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d99 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="332-332", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)"];
d101 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="333-333", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)"];
d103 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="334-334", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)"];
d667 [label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1617-1617", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d691 [label="IXmlNode documentType = document.CreateXmlDocumentType(name, publicId, systemId, internalSubset)", span="1658-1658", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d95 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="330-330", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)"];
d649 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1731-1731", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d729 [label="attributeName.Length == 5", span="1735-1735", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d735 [label="prefix = null", span="1746-1746", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d468 [label="XDocument d = new XDocument()", span="1251-1251", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d131 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="460-460", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)"];
d474 [label="XmlDocument d = new XmlDocument()", span="1262-1262", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d0 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="49-49", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)"];
d608 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1483-1483", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)"];
d604 [label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1485-1485", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)"];
d605 [label="element is XElementWrapper", span="1489-1489", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)"];
d606 [label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1491-1491", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)"];
d607 [label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1493-1493", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)"];
d595 [label="IXmlElement arrayElement = nestedArrayElement.ChildNodes.OfType<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1478-1478", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d496 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="365-365", cluster="Newtonsoft.Json.JsonReader.Read()"];
d701 [label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", span="1679-1679", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d721 [label="return;", span="1717-1717", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d699 [label="JsonToken.PropertyName", span="1677-1677", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d713 [label="JsonToken.StartConstructor", span="1704-1704", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d717 [label="JsonToken.Comment", span="1712-1712", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d719 [label="JsonToken.EndObject", span="1715-1715", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d726 [label="n.LocalName == propertyName", span="1695-1695", cluster="lambda expression"];
d705 [label="int count = 0", span="1686-1686", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d708 [label="count++", span="1690-1690", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d599 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()"];
d600 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
d725 [label="Entry lambda expression", span="1695-1695", cluster="lambda expression"];
d492 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)"];
d515 [label="return;", span="1331-1331", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d647 [label="return attributeNameValues;", span="1586-1586", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d610 [label="bool finishedAttributes = false", span="1502-1502", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d362 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()"];
d625 [label="attributeNameValues.Add(attributeName, attributeValue)", span="1533-1533", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d639 [label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1559-1559", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d641 [label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1563-1563", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d611 [label="bool finishedElement = false", span="1503-1503", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d643 [label="finishedAttributes = true", span="1573-1573", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d642 [label="finishedAttributes = true", span="1566-1566", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d645 [label="finishedElement = true", span="1578-1578", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d615 [label="JsonToken.PropertyName", span="1519-1519", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d644 [label="JsonToken.EndObject", span="1577-1577", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d617 [label="!string.IsNullOrEmpty(attributeName)", span="1522-1522", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d618 [label="char firstChar = attributeName[0]", span="1524-1524", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d287 [label="Entry Unk.AddNamespace", span="", cluster="Unk.AddNamespace"];
d634 [label="jsonPrefix == null", span="1549-1549", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d294 [label="Entry Unk.LookupPrefix", span="", cluster="Unk.LookupPrefix"];
d635 [label="int? i = null", span="1552-1552", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d637 [label="i = i.GetValueOrDefault() + 1", span="1555-1555", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d638 [label="jsonPrefix = ''json'' + i", span="1557-1557", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d38 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="95-95", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)"];
d112 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="338-338", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)"];
d165 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="518-518", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)"];
d43 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="100-100", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)"];
d114 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="339-339", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)"];
d170 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="523-523", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)"];
d696 [label="return element;", span="1668-1668", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)"];
d597 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1456-1456", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d589 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1465-1465", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d602 [label="n.LocalName == propertyName", span="1478-1478", cluster="lambda expression"];
d8 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="60-60", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)"];
d98 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="331-331", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)"];
d138 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="483-483", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)"];
d572 [label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1441-1441", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d574 [label="return null;", span="1448-1448", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)"];
d620 [label=firstChar, span="1527-1527", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d577 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)"];
d578 [label="Entry Unk.ToString", span="", cluster="Unk.ToString"];
d579 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)"];
d580 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)"];
d581 [label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDateTime(object, System.IFormatProvider)"];
d583 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)"];
d584 [label="Entry Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)", span="82-82", cluster="Newtonsoft.Json.JsonSerializationException.Create(Newtonsoft.Json.JsonReader, string)"];
d290 [label="!string.IsNullOrEmpty(prefix)", span="974-974", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d419 [label="!string.IsNullOrEmpty(declaration.Version)", span="1175-1175", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d422 [label="!string.IsNullOrEmpty(declaration.Encoding)", span="1180-1180", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d425 [label="!string.IsNullOrEmpty(declaration.Standalone)", span="1185-1185", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d433 [label="!string.IsNullOrEmpty(documentType.Name)", span="1198-1198", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d436 [label="!string.IsNullOrEmpty(documentType.Public)", span="1203-1203", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d439 [label="!string.IsNullOrEmpty(documentType.System)", span="1208-1208", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d442 [label="!string.IsNullOrEmpty(documentType.InternalSubset)", span="1213-1213", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d656 [label="reader.Value.ToString()", span="1598-1598", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d659 [label="version = reader.Value.ToString()", span="1602-1602", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d662 [label="encoding = reader.Value.ToString()", span="1606-1606", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d665 [label="standalone = reader.Value.ToString()", span="1610-1610", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d677 [label="reader.Value.ToString()", span="1635-1635", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d680 [label="name = reader.Value.ToString()", span="1639-1639", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d683 [label="publicId = reader.Value.ToString()", span="1643-1643", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d686 [label="systemId = reader.Value.ToString()", span="1647-1647", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d689 [label="internalSubset = reader.Value.ToString()", span="1651-1651", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d60 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d120 [label="Exit Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="363-363", cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d233 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="827-827", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d117 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="341-341", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)"];
d47 [label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="107-107", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)"];
d53 [label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceUri))", span="115-115", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)"];
d278 [label="manager.PushScope()", span="958-958", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d375 [label="manager.PushScope()", span="1095-1095", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d397 [label="manager.PopScope()", span="1143-1143", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d461 [label="return null;", span="1239-1239", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d467 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1249-1249", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d473 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1260-1260", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d480 [label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1272-1272", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d488 [label="return element;", span="1292-1292", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d491 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
d487 [label="element.Remove()", span="1290-1290", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)"];
d693 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)", span="1627-1627", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d672 [label="string name = null", span="1629-1629", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d676 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1633-1633", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d679 [label="reader.Read()", span="1638-1638", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d682 [label="reader.Read()", span="1642-1642", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d685 [label="reader.Read()", span="1646-1646", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d688 [label="reader.Read()", span="1650-1650", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d690 [label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1654-1654", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d671 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1589-1589", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d651 [label="propertyName == DeclarationName", span="1591-1591", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d655 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1596-1596", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d658 [label="reader.Read()", span="1601-1601", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d661 [label="reader.Read()", span="1605-1605", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d664 [label="reader.Read()", span="1609-1609", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d666 [label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1613-1613", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d591 [label="count++", span="1468-1468", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d501 [label=TextName, span="1303-1303", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d503 [label=CDataName, span="1306-1306", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d505 [label=WhitespaceName, span="1309-1309", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d507 [label=SignificantWhitespaceName, span="1312-1312", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)"];
d520 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)"];
d246 [label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="910-910", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d50 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="105-105", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)"];
d48 [label="attribute.Value = value", span="108-108", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)"];
d178 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="529-529", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)"];
d177 [label="return new XAttributeWrapper(new XAttribute(name, value));", span="531-531", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)"];
d621 [label="'@'", span="1529-1529", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d629 [label="'$'", span="1541-1541", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d109 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="337-337", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)"];
d244 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="906-906", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d257 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="936-936", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d259 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1080-1080", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d254 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="922-922", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)"];
d249 [label="writer.WriteStartObject()", span="914-914", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d252 [label="writer.WriteEndObject()", span="919-919", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d253 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="906-906", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)"];
d296 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="980-980", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d299 [label="node.NamespaceUri == JsonNamespaceUri", span="985-985", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d321 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="980-980", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d288 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="968-968", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d306 [label="XmlNodeType.Element", span="993-993", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d308 [label="XmlNodeType.ProcessingInstruction", span="995-995", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d310 [label="XmlNodeType.DocumentType", span="997-997", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d332 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1021-1021", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d336 [label="IXmlNode childNode = node.ChildNodes[i]", span="1028-1028", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d338 [label="List<IXmlNode> nodes", span="1031-1031", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d339 [label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="1032-1032", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d341 [label="nodesGroupedByName.Add(nodeName, nodes)", span="1035-1035", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d345 [label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="1045-1045", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d347 [label="groupedNodes.Count == 1", span="1048-1048", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d350 [label="!writeArray", span="1057-1057", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d323 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1012-1012", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)"];
d344 [label=nodesGroupedByName, span="1043-1043", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d357 [label="i < groupedNodes.Count", span="1070-1070", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d356 [label="int i = 0", span="1070-1070", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d745 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1763-1763", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)"];
d359 [label="i++", span="1070-1070", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d370 [label="XmlNodeType.DocumentFragment", span="1085-1085", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d447 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1080-1080", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d372 [label="XmlNodeType.Element", span="1088-1088", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d448 [label="Entry Unk.All", span="", cluster="Unk.All"];
d456 [label="Entry lambda expression", span="1089-1089", cluster="lambda expression"];
d381 [label=writePropertyName, span="1110-1110", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d365 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)"];
d384 [label="writer.WriteValue(node.ChildNodes[0].Value)", span="1117-1117", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d385 [label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="1119-1119", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d449 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1750-1750", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)"];
d450 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
d392 [label="i < node.Attributes.Count", span="1133-1133", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d391 [label="int i = 0", span="1133-1133", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d394 [label="i++", span="1133-1133", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d396 [label="writer.WriteEndObject()", span="1140-1140", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d412 [label=writePropertyName, span="1166-1166", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d414 [label="writer.WriteValue(node.Value)", span="1168-1168", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d416 [label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1171-1171", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d418 [label="writer.WriteStartObject()", span="1173-1173", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d430 [label="IXmlDocumentType documentType = (IXmlDocumentType)node", span="1194-1194", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d432 [label="writer.WriteStartObject()", span="1196-1196", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d588 [label="int count = 0", span="1464-1464", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d626 [label="string namespacePrefix", span="1535-1535", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)"];
d93 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="310-310", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d89 [label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper) newChild", span="312-312", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d92 [label="return newChild;", span="316-316", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d191 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="551-551", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d192 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="710-710", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d186 [label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="553-553", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d190 [label="return base.AppendChild(newChild);", span="561-561", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d229 [label="Exit Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="764-764", cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d228 [label="throw new InvalidOperationException();", span="766-766", cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d12 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="65-65", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)"];
d100 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="332-332", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)"];
d142 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="488-488", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)"];
d16 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="70-70", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)"];
d102 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="333-333", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)"];
d146 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="493-493", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)"];
d20 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="75-75", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)"];
d104 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="334-334", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)"];
d149 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="498-498", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)"];
d652 [label="string version = null", span="1593-1593", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d653 [label="string encoding = null", span="1594-1594", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d654 [label="string standalone = null", span="1595-1595", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d105 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="335-335", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)"];
d673 [label="string publicId = null", span="1630-1630", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d674 [label="string systemId = null", span="1631-1631", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d675 [label="string internalSubset = null", span="1632-1632", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d107 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="336-336", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)"];
d3 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="55-55", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)"];
d96 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="330-330", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)"];
d133 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="478-478", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)"];
d737 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1731-1731", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d732 [label="attributeName[5] == ':'", span="1740-1740", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d733 [label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="1742-1742", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d730 [label="prefix = string.Empty", span="1737-1737", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d736 [label="return false;", span="1747-1747", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d493 [label="Entry XDocument.cstr", span="", cluster="XDocument.cstr"];
d132 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="460-460", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)"];
d202 [label="return new XDocumentWrapper((XDocument)node);", span="691-691", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d494 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr"];
d2 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="49-49", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)"];
d1 [label="_document = document", span="52-52", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)"];
d121 [label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="364-364", cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)"];
d601 [label="Entry lambda expression", span="1478-1478", cluster="lambda expression"];
d720 [label="JsonToken.EndArray", span="1716-1716", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)"];
d766 [label=propertyName, span=""];
d727 [label="Exit lambda expression", span="1695-1695", cluster="lambda expression"];
d335 [label="i < node.ChildNodes.Count", span="1026-1026", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d333 [label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="1024-1024", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d364 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
d281 [label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="962-962", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d380 [label="manager.AddNamespace(namespacePrefix, namespaceUri)", span="1106-1106", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d289 [label="string prefix = (node.NamespaceUri == null || (node.LocalName == ''xmlns'' && node.NamespaceUri == ''http://www.w3.org/2000/xmlns/''))\r\n                ? null\r\n                : manager.LookupPrefix(node.NamespaceUri)", span="970-972", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d650 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()"];
d40 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="95-95", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)"];
d39 [label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="97-97", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)"];
d167 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="518-518", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)"];
d166 [label="return new XElementWrapper(new XElement(elementName));", span="520-520", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)"];
d45 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="100-100", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)"];
d44 [label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceUri));", span="102-102", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)"];
d173 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="523-523", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)"];
d171 [label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="525-525", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)"];
d172 [label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceUri)));", span="526-526", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)"];
d765 [label=string, span=""];
d603 [label="Exit lambda expression", span="1478-1478", cluster="lambda expression"];
d10 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="60-60", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)"];
d9 [label="return new XmlNodeWrapper(_document.CreateTextNode(text));", span="62-62", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)"];
d140 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="483-483", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)"];
d139 [label="return new XObjectWrapper(new XText(text));", span="485-485", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)"];
d582 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="60-60", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)"];
d291 [label="return prefix + '':'' + node.LocalName;", span="975-975", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d292 [label="return node.LocalName;", span="977-977", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d420 [label="writer.WritePropertyName(''@version'')", span="1177-1177", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d421 [label="writer.WriteValue(declaration.Version)", span="1178-1178", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d423 [label="writer.WritePropertyName(''@encoding'')", span="1182-1182", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d424 [label="writer.WriteValue(declaration.Encoding)", span="1183-1183", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d426 [label="writer.WritePropertyName(''@standalone'')", span="1187-1187", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d428 [label="writer.WriteEndObject()", span="1191-1191", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d434 [label="writer.WritePropertyName(''@name'')", span="1200-1200", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d435 [label="writer.WriteValue(documentType.Name)", span="1201-1201", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d437 [label="writer.WritePropertyName(''@public'')", span="1205-1205", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d438 [label="writer.WriteValue(documentType.Public)", span="1206-1206", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d440 [label="writer.WritePropertyName(''@system'')", span="1210-1210", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d441 [label="writer.WriteValue(documentType.System)", span="1211-1211", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d443 [label="writer.WritePropertyName(''@internalSubset'')", span="1215-1215", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d445 [label="writer.WriteEndObject()", span="1219-1219", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d657 [label="''@version''", span="1600-1600", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d660 [label="''@encoding''", span="1604-1604", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d663 [label="''@standalone''", span="1608-1608", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)"];
d678 [label="''@name''", span="1637-1637", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d681 [label="''@public''", span="1641-1641", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d684 [label="''@system''", span="1645-1645", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d687 [label="''@internalSubset''", span="1649-1649", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateDocumentType(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode)"];
d63 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="143-143", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d61 [label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="145-145", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d236 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="827-827", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d234 [label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="829-829", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d52 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="113-113", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)"];
d118 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="341-341", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)"];
d181 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="534-534", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)"];
d752 [label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span=""];
d6 [label="Entry XmlNodeWrapper.cstr", span="", cluster="XmlNodeWrapper.cstr"];
d49 [label="return attribute;", span="110-110", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)"];
d54 [label="attribute.Value = value", span="116-116", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)"];
d55 [label="return attribute;", span="118-118", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)"];
d277 [label=parentElements, span="956-956", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d279 [label="parentElement.Attributes", span="959-959", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d376 [label="node.Attributes", span="1097-1097", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d388 [label="writer.WriteNull()", span="1125-1125", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d389 [label="writer.WriteValue(string.Empty)", span="1127-1127", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d746 [label="typeof(XObject).IsAssignableFrom(valueType)", span="1766-1766", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)"];
d748 [label="typeof(XmlNode).IsAssignableFrom(valueType)", span="1770-1770", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)"];
d498 [label="Entry Unk.Remove", span="", cluster="Unk.Remove"];
d179 [label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="782-782", cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)"];
d180 [label="Entry XAttribute.cstr", span="", cluster="XAttribute.cstr"];
d34 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="90-90", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)"];
d110 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="337-337", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)"];
d160 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="513-513", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)"];
d269 [label="IXmlNode parent = node", span="940-940", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d282 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="936-936", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d268 [label="List<IXmlNode> parentElements = null", span="938-938", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d368 [label="node.NodeType", span="1082-1082", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d457 [label="n.LocalName == node.LocalName", span="1089-1089", cluster="lambda expression"];
d386 [label="IXmlElement element = (IXmlElement)node", span="1121-1121", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d390 [label="writer.WriteStartObject()", span="1131-1131", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d399 [label=writePropertyName, span="1148-1148", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d400 [label="writer.WriteComment(node.Value)", span="1149-1149", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d407 [label="node.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1157-1157", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d409 [label="node.NamespaceUri == JsonNamespaceUri", span="1160-1160", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d410 [label="node.LocalName == ''Array''", span="1162-1162", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d427 [label="writer.WriteValue(declaration.Standalone)", span="1188-1188", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d444 [label="writer.WriteValue(documentType.InternalSubset)", span="1216-1216", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d446 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1222-1222", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d200 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="688-688", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d266 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="922-922", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)"];
d261 [label="value is XObject", span="925-925", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)"];
d262 [label="return XContainerWrapper.WrapNode((XObject)value);", span="926-926", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)"];
d263 [label="value is XmlNode", span="929-929", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)"];
d264 [label="return new XmlNodeWrapper((XmlNode)value);", span="930-930", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)"];
d258 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()"];
d260 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()"];
d297 [label="node.NodeType", span="982-982", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d300 [label="return ''$'' + node.LocalName;", span="986-986", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d320 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="1008-1008", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d298 [label="XmlNodeType.Attribute", span="984-984", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d303 [label="return CDataName;", span="990-990", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d305 [label="return CommentName;", span="992-992", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d313 [label="return DeclarationName;", span="1000-1000", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d315 [label="return SignificantWhitespaceName;", span="1002-1002", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d317 [label="return TextName;", span="1004-1004", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d319 [label="return WhitespaceName;", span="1006-1006", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d293 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="968-968", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d361 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="1021-1021", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d353 [label=writePropertyName, span="1065-1065", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d354 [label="writer.WritePropertyName(elementNames)", span="1066-1066", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d355 [label="writer.WriteStartArray()", span="1068-1068", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d360 [label="writer.WriteEndArray()", span="1075-1075", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d334 [label="int i = 0", span="1026-1026", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d342 [label="nodes.Add(childNode)", span="1038-1038", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d340 [label="nodes = new List<IXmlNode>()", span="1034-1034", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d363 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)"];
d346 [label="bool writeArray", span="1046-1046", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d352 [label="string elementNames = nodeNameGroup.Key", span="1063-1063", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d349 [label="writeArray = true", span="1054-1054", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d326 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="1012-1012", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)"];
d324 [label="IXmlNode jsonArrayAttribute = (node.Attributes != null)\r\n                ? node.Attributes.SingleOrDefault(a => a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri)\r\n                : null", span="1014-1016", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)"];
d751 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1763-1763", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)"];
d369 [label="XmlNodeType.Document", span="1084-1084", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d408 [label="return;", span="1158-1158", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d411 [label="return;", span="1163-1163", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d458 [label="Exit lambda expression", span="1089-1089", cluster="lambda expression"];
d451 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="810-810", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)"];
d452 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="50-50", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)"];
d740 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1750-1750", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)"];
d739 [label="return c.Where(a => a.NamespaceUri != JsonNamespaceUri);", span="1752-1752", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)"];
d366 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()"];
d415 [label="XmlNodeType.XmlDeclaration", span="1170-1170", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d429 [label="XmlNodeType.DocumentType", span="1193-1193", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d90 [label="_node.AppendChild(xmlNodeWrapper._node)", span="313-313", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d91 [label="_childNodes = null", span="314-314", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d189 [label="return declarationWrapper;", span="557-557", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d223 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="710-710", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d220 [label="Container.Add(newChild.WrappedNode)", span="712-712", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d222 [label="return newChild;", span="715-715", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d187 [label="declarationWrapper != null", span="554-554", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d188 [label="Document.Declaration = declarationWrapper.Declaration", span="556-556", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d759 [label="Newtonsoft.Json.Converters.XDocumentWrapper", span=""];
d230 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()"];
d14 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="65-65", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)"];
d13 [label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="67-67", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)"];
d144 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="488-488", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)"];
d143 [label="return new XObjectWrapper(new XCData(data));", span="490-490", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)"];
d18 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="70-70", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)"];
d17 [label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="72-72", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)"];
d148 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="493-493", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)"];
d147 [label="return new XObjectWrapper(new XText(text));", span="495-495", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)"];
d22 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="75-75", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)"];
d21 [label="return new XmlNodeWrapper(_document.CreateSignificantWhitespace(text));", span="77-77", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)"];
d151 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="498-498", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)"];
d150 [label="return new XObjectWrapper(new XText(text));", span="500-500", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)"];
d24 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="80-80", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)"];
d106 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="335-335", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)"];
d152 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="503-503", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)"];
d29 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="85-85", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)"];
d108 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)", span="336-336", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDocumentType(string, string, string, string)"];
d156 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="508-508", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)"];
d5 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="55-55", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)"];
d4 [label="return new XmlNodeWrapper(_document.CreateComment(data));", span="57-57", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)"];
d135 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="478-478", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)"];
d134 [label="return new XObjectWrapper(new XComment(text));", span="480-480", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)"];
d731 [label="return true;", span="1738-1738", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d734 [label="return true;", span="1743-1743", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)"];
d738 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
d201 [label="node is XDocument", span="690-690", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d218 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="688-688", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d65 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)"];
d122 [label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="364-364", cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)"];
d241 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="854-854", cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)"];
d343 [label="i++", span="1026-1026", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d280 [label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="961-961", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d378 [label="string namespacePrefix = (attribute.LocalName != ''xmlns'')\r\n                                    ? attribute.LocalName\r\n                                    : string.Empty", span="1101-1103", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d379 [label="string namespaceUri = attribute.Value", span="1104-1104", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d41 [label="Entry XmlElementWrapper.cstr", span="", cluster="XmlElementWrapper.cstr"];
d42 [label="Entry Unk.CreateElement", span="", cluster="Unk.CreateElement"];
d168 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="822-822", cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)"];
d169 [label="Entry XElement.cstr", span="", cluster="XElement.cstr"];
d174 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="103-103", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)"];
d175 [label="Entry Unk.Get", span="", cluster="Unk.Get"];
d11 [label="Entry Unk.CreateTextNode", span="", cluster="Unk.CreateTextNode"];
d136 [label="Entry XObjectWrapper.cstr", span="", cluster="XObjectWrapper.cstr"];
d141 [label="Entry XText.cstr", span="", cluster="XText.cstr"];
d62 [label="_element.SetAttributeNode((XmlAttribute)xmlAttributeWrapper.WrappedNode)", span="147-147", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d235 [label="Element.Add(wrapper.WrappedNode)", span="830-830", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)"];
d56 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="113-113", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)"];
d184 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="534-534", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)"];
d182 [label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="536-536", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)"];
d183 [label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceUri), value));", span="537-537", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)"];
d25 [label="return new XmlDeclarationWrapper(_document.CreateXmlDeclaration(version, encoding, standalone));", span="82-82", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)"];
d30 [label="return new XmlDocumentTypeWrapper(_document.CreateDocumentType(name, publicId, systemId, null));", span="87-87", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)"];
d35 [label="return new XmlNodeWrapper(_document.CreateProcessingInstruction(target, data));", span="92-92", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)"];
d276 [label="parentElements.Reverse()", span="954-954", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d273 [label="parentElements = new List<IXmlNode>()", span="946-946", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d377 [label="attribute.NamespaceUri == ''http://www.w3.org/2000/xmlns/''", span="1099-1099", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d387 [label="element.IsEmpty", span="1124-1124", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d453 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="772-772", cluster="Newtonsoft.Json.JsonWriter.WriteNull()"];
d747 [label="return true;", span="1767-1767", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)"];
d749 [label="return true;", span="1771-1771", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)"];
d750 [label="return false;", span="1774-1774", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)"];
d214 [label="return new XAttributeWrapper((XAttribute)node);", span="703-703", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d231 [label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="782-782", cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)"];
d36 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="90-90", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)"];
d162 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="513-513", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)"];
d161 [label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="515-515", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)"];
d270 [label="(parent = parent.ParentNode) != null", span="941-941", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d275 [label="parentElements != null", span="952-952", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d272 [label="parentElements == null", span="945-945", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d274 [label="parentElements.Add(parent)", span="948-948", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d398 [label="XmlNodeType.Comment", span="1147-1147", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d401 [label="XmlNodeType.Attribute", span="1151-1151", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d764 [label="Newtonsoft.Json.Converters.IXmlNode", span=""];
d455 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1237-1237", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)"];
d406 [label="XmlNodeType.SignificantWhitespace", span="1156-1156", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d322 [label="Entry JsonSerializationException.cstr", span="", cluster="JsonSerializationException.cstr"];
d203 [label="node is XElement", span="692-692", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d204 [label="return new XElementWrapper((XElement)node);", span="693-693", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d205 [label="node is XContainer", span="694-694", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d206 [label="return new XContainerWrapper((XContainer)node);", span="695-695", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d207 [label="node is XProcessingInstruction", span="696-696", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d208 [label="return new XProcessingInstructionWrapper((XProcessingInstruction)node);", span="697-697", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d209 [label="node is XText", span="698-698", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d210 [label="return new XTextWrapper((XText)node);", span="699-699", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d211 [label="node is XComment", span="700-700", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d212 [label="return new XCommentWrapper((XComment)node);", span="701-701", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d213 [label="node is XAttribute", span="702-702", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d215 [label="node is XDocumentType", span="704-704", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d216 [label="return new XDocumentTypeWrapper((XDocumentType)node);", span="705-705", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d217 [label="return new XObjectWrapper(node);", span="707-707", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)"];
d265 [label="throw new ArgumentException(''Value must be an XML object.'', ''value'');", span="933-933", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)"];
d75 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="230-230", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)"];
d302 [label="XmlNodeType.CDATA", span="989-989", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d304 [label="XmlNodeType.Comment", span="991-991", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d312 [label="XmlNodeType.XmlDeclaration", span="999-999", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d314 [label="XmlNodeType.SignificantWhitespace", span="1001-1001", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d316 [label="XmlNodeType.Text", span="1003-1003", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d318 [label="XmlNodeType.Whitespace", span="1005-1005", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d367 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()"];
d284 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
d283 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
d325 [label="return (jsonArrayAttribute != null && XmlConvert.ToBoolean(jsonArrayAttribute.Value));", span="1018-1018", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)"];
d327 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault"];
d329 [label="Entry lambda expression", span="1015-1015", cluster="lambda expression"];
d741 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
d742 [label="Entry lambda expression", span="1752-1752", cluster="lambda expression"];
d756 [label="Newtonsoft.Json.Converters.XmlNodeWrapper", span=""];
d94 [label="Entry Unk.AppendChild", span="", cluster="Unk.AppendChild"];
d760 [label="Newtonsoft.Json.Converters.XContainerWrapper", span=""];
d221 [label="_childNodes = null", span="713-713", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)"];
d224 [label="Entry Unk.Add", span="", cluster="Unk.Add"];
d15 [label="Entry Unk.CreateCDataSection", span="", cluster="Unk.CreateCDataSection"];
d145 [label="Entry XCData.cstr", span="", cluster="XCData.cstr"];
d19 [label="Entry Unk.CreateWhitespace", span="", cluster="Unk.CreateWhitespace"];
d23 [label="Entry Unk.CreateSignificantWhitespace", span="", cluster="Unk.CreateSignificantWhitespace"];
d26 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="80-80", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)"];
d154 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="503-503", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)"];
d153 [label="return new XDeclarationWrapper(new XDeclaration(version, encoding, standalone));", span="505-505", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)"];
d31 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="85-85", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDocumentType(string, string, string, string)"];
d158 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)", span="508-508", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)"];
d157 [label="return new XDocumentTypeWrapper(new XDocumentType(name, publicId, systemId, internalSubset));", span="510-510", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDocumentType(string, string, string, string)"];
d7 [label="Entry Unk.CreateComment", span="", cluster="Unk.CreateComment"];
d137 [label="Entry XComment.cstr", span="", cluster="XComment.cstr"];
d67 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="150-150", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)"];
d66 [label="return _element.GetPrefixOfNamespace(namespaceUri);", span="152-152", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)"];
d243 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="854-854", cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)"];
d242 [label="return Element.GetPrefixOfNamespace(namespaceUri);", span="856-856", cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)"];
d232 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="822-822", cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)"];
d753 [label="Newtonsoft.Json.Converters.XmlElementWrapper", span=""];
d64 [label="Entry Unk.SetAttributeNode", span="", cluster="Unk.SetAttributeNode"];
d762 [label="Newtonsoft.Json.Converters.XElementWrapper", span=""];
d27 [label="Entry XmlDeclarationWrapper.cstr", span="", cluster="XmlDeclarationWrapper.cstr"];
d28 [label="Entry Unk.CreateXmlDeclaration", span="", cluster="Unk.CreateXmlDeclaration"];
d32 [label="Entry XmlDocumentTypeWrapper.cstr", span="", cluster="XmlDocumentTypeWrapper.cstr"];
d33 [label="Entry Unk.CreateDocumentType", span="", cluster="Unk.CreateDocumentType"];
d37 [label="Entry Unk.CreateProcessingInstruction", span="", cluster="Unk.CreateProcessingInstruction"];
d285 [label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0", cluster="System.Collections.Generic.List<T>.Reverse()"];
d163 [label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="633-633", cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)"];
d164 [label="Entry XProcessingInstruction.cstr", span="", cluster="XProcessingInstruction.cstr"];
d271 [label="parent.NodeType == XmlNodeType.Element", span="943-943", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)"];
d402 [label="XmlNodeType.Text", span="1152-1152", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d405 [label="XmlNodeType.Whitespace", span="1155-1155", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d198 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="659-659", cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)"];
d193 [label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="573-573", cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)"];
d195 [label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="603-603", cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)"];
d128 [label="Entry Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="421-421", cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)"];
d219 [label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="723-723", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)"];
d267 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
d77 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="230-230", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)"];
d86 [label="return new XmlNodeWrapper(node);", span="274-274", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d76 [label="_node = node", span="232-232", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)"];
d328 [label="Entry Unk.ToBoolean", span="", cluster="Unk.ToBoolean"];
d331 [label="Exit lambda expression", span="1015-1015", cluster="lambda expression"];
d330 [label="a.LocalName == ''Array'' && a.NamespaceUri == JsonNamespaceUri", span="1015-1015", cluster="lambda expression"];
d744 [label="Exit lambda expression", span="1752-1752", cluster="lambda expression"];
d743 [label="a.NamespaceUri != JsonNamespaceUri", span="1752-1752", cluster="lambda expression"];
d125 [label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="388-388", cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)"];
d155 [label="Entry XDeclaration.cstr", span="", cluster="XDeclaration.cstr"];
d159 [label="Entry XDocumentType.cstr", span="", cluster="XDocumentType.cstr"];
d68 [label="Entry Unk.GetPrefixOfNamespace", span="", cluster="Unk.GetPrefixOfNamespace"];
d58 [label="_element = element", span="140-140", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)"];
d197 [label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="633-633", cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)"];
d403 [label="XmlNodeType.CDATA", span="1153-1153", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d404 [label="XmlNodeType.ProcessingInstruction", span="1154-1154", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)"];
d199 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="659-659", cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)"];
d194 [label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="573-573", cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)"];
d196 [label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="603-603", cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)"];
d130 [label="Exit Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)", span="421-421", cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)"];
d129 [label="_documentType = documentType", span="424-424", cluster="Newtonsoft.Json.Converters.XDocumentTypeWrapper.XDocumentTypeWrapper(XDocumentType)"];
d226 [label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="723-723", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)"];
d225 [label="_xmlObject = xmlObject", span="725-725", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)"];
d78 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="263-263", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d79 [label="node.NodeType", span="265-265", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d87 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="263-263", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d127 [label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="388-388", cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)"];
d126 [label="Declaration = declaration", span="391-391", cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)"];
d57 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)"];
d59 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="137-137", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)"];
d758 [label="Newtonsoft.Json.Converters.XDocumentTypeWrapper", span=""];
d761 [label="Newtonsoft.Json.Converters.XObjectWrapper", span=""];
d81 [label="return new XmlElementWrapper((XmlElement) node);", span="268-268", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d83 [label="return new XmlDeclarationWrapper((XmlDeclaration) node);", span="270-270", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d85 [label="return new XmlDocumentTypeWrapper((XmlDocumentType) node);", span="272-272", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d80 [label="XmlNodeType.Element", span="267-267", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d82 [label="XmlNodeType.XmlDeclaration", span="269-269", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d84 [label="XmlNodeType.DocumentType", span="271-271", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)"];
d757 [label="Newtonsoft.Json.Converters.XDeclarationWrapper", span=""];
d69 [label="Entry Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="165-165", cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)"];
d72 [label="Entry Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193", cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)"];
d71 [label="Exit Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="165-165", cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)"];
d70 [label="_declaration = declaration", span="168-168", cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)"];
d74 [label="Exit Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)", span="193-193", cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)"];
d73 [label="_documentType = documentType", span="196-196", cluster="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper.XmlDocumentTypeWrapper(XmlDocumentType)"];
d754 [label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span=""];
d755 [label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper", span=""];
n50 -> n1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n4  [key=0, style=solid];
n3 -> n6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest"];
n3 -> n8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest"];
n4 -> n5  [key=0, style=solid];
n4 -> n10  [key=2, style=dotted];
n4 -> n11  [key=2, style=dotted];
n4 -> n6  [key=1, style=dashed, color=darkseagreen4, label=s];
n6 -> n7  [key=0, style=solid];
n6 -> n12  [key=2, style=dotted];
n6 -> n8  [key=1, style=dashed, color=darkseagreen4, label=v];
n8 -> n9  [key=0, style=solid];
n8 -> n14  [key=2, style=dotted];
n8 -> n15  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n13  [key=2, style=dotted];
n7 -> n7  [key=1, style=dashed, color=darkseagreen4, label=errorMessages];
n9 -> n3  [key=0, style=bold, color=blue];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n13  [key=2, style=dotted];
n17 -> n33  [key=1, style=dashed, color=darkseagreen4, label=specTests];
n17 -> n34  [key=1, style=dashed, color=darkseagreen4, label=specTests];
n17 -> n35  [key=1, style=dashed, color=darkseagreen4, label=specTests];
n18 -> n19  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n34 -> n25  [key=0, style=solid];
n34 -> n44  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n45  [key=2, style=dotted];
n35 -> n46  [key=2, style=dotted];
n35 -> n35  [key=1, style=dashed, color=darkseagreen4, label=specTests];
n35 -> n47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n19 -> n20  [key=0, style=solid];
n19 -> n38  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n39  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n35  [key=0, style=solid];
n21 -> n27  [key=1, style=dashed, color=darkseagreen4, label=testFile];
n22 -> n23  [key=0, style=solid];
n22 -> n40  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n43  [key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n41  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n21  [key=0, style=solid];
n24 -> n28  [key=1, style=dashed, color=darkseagreen4, label=testCase];
n24 -> n29  [key=1, style=dashed, color=darkseagreen4, label=testCase];
n25 -> n26  [key=0, style=solid];
n25 -> n24  [key=0, style=solid];
n25 -> n30  [key=1, style=dashed, color=darkseagreen4, label=test];
n25 -> n31  [key=1, style=dashed, color=darkseagreen4, label=test];
n25 -> n32  [key=1, style=dashed, color=darkseagreen4, label=test];
n28 -> n29  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n42  [key=2, style=dotted];
n26 -> n28  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
n26 -> n29  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
n26 -> n30  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
n26 -> n31  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
n26 -> n32  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
n26 -> n33  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
n26 -> n34  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
n30 -> n31  [key=0, style=solid];
n31 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n47 -> n48  [key=0, style=solid];
n37 -> n16  [key=0, style=bold, color=blue];
n48 -> n49  [key=0, style=solid];
n49 -> n47  [key=0, style=bold, color=blue];
d527 -> d528  [key=0, style=solid, color=green];
d527 -> d533  [key=0, style=solid, color=green];
d527 -> d550  [key=2, style=dotted, color=green];
d495 -> d527  [key=1, style=dashed, color=green, label=string];
d495 -> d523  [key=0, style=solid];
d495 -> d525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d495 -> d526  [key=1, style=dashed, color=darkseagreen4, label=string];
d495 -> d528  [key=1, style=dashed, color=darkseagreen4, label=string];
d495 -> d529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d495 -> d531  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d495 -> d532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d495 -> d533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d495 -> d534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d495 -> d537  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d495 -> d539  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d495 -> d540  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d495 -> d541  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d495 -> d542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d495 -> d543  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d495 -> d544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d495 -> d545  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d495 -> d546  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d495 -> d459  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
d495 -> d499  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d495 -> d463  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document"];
d495 -> d464  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode"];
d495 -> d462  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d526 -> d527  [key=0, style=solid, color=green];
d526 -> d549  [key=2, style=dotted];
d526 -> d533  [key=1, style=dashed, color=darkseagreen4, label=elementPrefix];
d528 -> d529  [key=0, style=solid];
d528 -> d551  [key=2, style=dotted];
d528 -> d530  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d528 -> d531  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d533 -> d534  [key=0, style=solid];
d533 -> d553  [key=2, style=dotted];
d533 -> d538  [key=1, style=dashed, color=darkseagreen4, label=element];
d533 -> d540  [key=1, style=dashed, color=darkseagreen4, label=element];
d533 -> d544  [key=1, style=dashed, color=darkseagreen4, label=element];
d482 -> d495  [key=2, style=dotted];
d482 -> d485  [key=0, style=solid];
d497 -> d495  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d497 -> d533  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode"];
d497 -> d698  [key=0, style=solid];
d497 -> d700  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d497 -> d702  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d703  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d704  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d706  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d707  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d710  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d497 -> d711  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d497 -> d712  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d714  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d715  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d716  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d718  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d722  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d723  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d497 -> d459  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
d497 -> d463  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document"];
d497 -> d462  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d497 -> d464  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode"];
d516 -> d495  [key=2, style=dotted];
d516 -> d517  [key=0, style=solid];
d548 -> d495  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d548 -> d609  [key=0, style=solid];
d548 -> d612  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d548 -> d613  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d548 -> d614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d548 -> d616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d548 -> d623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d548 -> d624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d548 -> d628  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d548 -> d631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d548 -> d632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d548 -> d633  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d548 -> d636  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d548 -> d640  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d548 -> d646  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d553 -> d495  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d553 -> d526  [key=3, color=darkorchid, style=bold, label="Parameter variable string elementPrefix"];
d553 -> d694  [key=0, style=solid];
d553 -> d695  [key=1, style=dashed, color=darkseagreen4, label=string];
d553 -> d522  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d553 -> d585  [key=3, color=darkorchid, style=bold, label="Parameter variable string elementPrefix"];
d547 -> d495  [key=0, style=bold, color=blue];
d554 -> d495  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
d554 -> d548  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonReader reader"];
d554 -> d556  [key=0, style=solid];
d554 -> d557  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d558  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d559  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d560  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d561  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d564  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d565  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d566  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d567  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d568  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d569  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d570  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d573  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d554 -> d575  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d523 -> d524  [key=0, style=solid];
d523 -> d525  [key=0, style=solid];
d523 -> d295  [key=2, style=dotted];
d525 -> d526  [key=0, style=solid];
d525 -> d548  [key=2, style=dotted];
d525 -> d535  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
d529 -> d530  [key=0, style=solid];
d529 -> d518  [key=2, style=dotted];
d529 -> d531  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
d531 -> d532  [key=0, style=solid];
d531 -> d295  [key=2, style=dotted];
d531 -> d552  [key=2, style=dotted];
d531 -> d51  [key=2, style=dotted];
d531 -> d115  [key=2, style=dotted];
d532 -> d547  [key=0, style=solid];
d532 -> d119  [key=2, style=dotted];
d534 -> d535  [key=0, style=solid];
d534 -> d123  [key=2, style=dotted];
d537 -> d537  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
d537 -> d538  [key=0, style=solid];
d537 -> d295  [key=2, style=dotted];
d537 -> d552  [key=2, style=dotted];
d537 -> d51  [key=2, style=dotted];
d537 -> d115  [key=2, style=dotted];
d539 -> d540  [key=0, style=solid];
d539 -> d541  [key=0, style=solid];
d540 -> d547  [key=0, style=solid];
d540 -> d554  [key=2, style=dotted];
d540 -> d97  [key=2, style=dotted];
d540 -> d123  [key=2, style=dotted];
d541 -> d547  [key=0, style=solid];
d541 -> d542  [key=0, style=solid];
d542 -> d543  [key=0, style=solid];
d542 -> d546  [key=0, style=solid];
d543 -> d544  [key=0, style=solid];
d543 -> d286  [key=2, style=dotted];
d544 -> d497  [key=2, style=dotted];
d544 -> d545  [key=0, style=solid];
d545 -> d546  [key=0, style=solid];
d545 -> d454  [key=2, style=dotted];
d546 -> d547  [key=0, style=solid];
d546 -> d555  [key=2, style=dotted];
d459 -> d482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d459 -> d460  [key=0, style=solid];
d459 -> d465  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d459 -> d466  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d459 -> d471  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d459 -> d472  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d459 -> d478  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d459 -> d479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d459 -> d483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d459 -> d484  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d459 -> d485  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d459 -> d486  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
d499 -> d497  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode"];
d499 -> d516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d499 -> d500  [key=0, style=solid];
d499 -> d502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d499 -> d504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d499 -> d506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d499 -> d508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d499 -> d509  [key=1, style=dashed, color=darkseagreen4, label=string];
d499 -> d510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d499 -> d511  [key=1, style=dashed, color=darkseagreen4, label=string];
d499 -> d512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d499 -> d513  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d499 -> d514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d499 -> d522  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
d499 -> d702  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
d499 -> d714  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
d499 -> d586  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode"];
d463 -> d482  [key=1, style=dashed, color=darkseagreen4, label=document];
d463 -> d464  [key=0, style=solid];
d463 -> d477  [key=1, style=dashed, color=darkseagreen4, label=document];
d463 -> d484  [key=1, style=dashed, color=darkseagreen4, label=document];
d463 -> d486  [key=1, style=dashed, color=darkseagreen4, label=document];
d463 -> d489  [key=1, style=dashed, color=darkseagreen4, label=document];
d464 -> d482  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
d464 -> d463  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Converters.IXmlNode rootNode"];
d464 -> d465  [key=0, style=solid];
d464 -> d477  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
d464 -> d484  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
d462 -> d482  [key=1, style=dashed, color=darkseagreen4, label=manager];
d462 -> d463  [key=0, style=solid];
d462 -> d255  [key=2, style=dotted];
d462 -> d256  [key=2, style=dotted];
d462 -> d484  [key=1, style=dashed, color=darkseagreen4, label=manager];
d115 -> d528  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
d115 -> d529  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d115 -> d116  [key=0, style=solid];
d115 -> d46  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute"];
d115 -> d176  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute"];
d530 -> d531  [key=0, style=solid];
d530 -> d549  [key=2, style=dotted];
d763 -> d533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d516  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d540  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d337  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d348  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d484  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d590  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d592  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d593  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d594  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d596  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d624  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d707  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d709  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d711  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d712  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d763 -> d716  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
d123 -> d533  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d123 -> d124  [key=0, style=solid];
d123 -> d88  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild"];
d123 -> d185  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild"];
d123 -> d227  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild"];
d123 -> d97  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d123 -> d99  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d123 -> d101  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d123 -> d103  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d123 -> d586  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d123 -> d667  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d123 -> d669  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d123 -> d691  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d123 -> d95  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d538 -> d535  [key=0, style=solid];
d538 -> d119  [key=2, style=dotted];
d728 -> d550  [key=2, style=dotted];
d728 -> d729  [key=0, style=solid];
d728 -> d735  [key=0, style=solid];
d469 -> d482  [key=1, style=dashed, color=darkseagreen4, label=document];
d469 -> d470  [key=0, style=solid];
d469 -> d131  [key=2, style=dotted];
d469 -> d477  [key=1, style=dashed, color=darkseagreen4, label=document];
d469 -> d484  [key=1, style=dashed, color=darkseagreen4, label=document];
d469 -> d486  [key=1, style=dashed, color=darkseagreen4, label=document];
d469 -> d489  [key=1, style=dashed, color=darkseagreen4, label=document];
d470 -> d482  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
d470 -> d471  [key=0, style=solid];
d470 -> d477  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
d470 -> d484  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
d475 -> d482  [key=1, style=dashed, color=darkseagreen4, label=document];
d475 -> d476  [key=0, style=solid];
d475 -> d0  [key=2, style=dotted];
d475 -> d477  [key=1, style=dashed, color=darkseagreen4, label=document];
d475 -> d484  [key=1, style=dashed, color=darkseagreen4, label=document];
d475 -> d486  [key=1, style=dashed, color=darkseagreen4, label=document];
d475 -> d489  [key=1, style=dashed, color=darkseagreen4, label=document];
d476 -> d482  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
d476 -> d477  [key=0, style=solid];
d476 -> d484  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
d481 -> d482  [key=0, style=solid];
d481 -> d483  [key=0, style=solid];
d481 -> d295  [key=2, style=dotted];
d485 -> d486  [key=0, style=solid];
d485 -> d489  [key=0, style=solid];
d484 -> d497  [key=2, style=dotted];
d484 -> d485  [key=0, style=solid];
d598 -> d497  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document"];
d598 -> d604  [key=0, style=solid];
d598 -> d605  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
d598 -> d606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
d598 -> d607  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
d598 -> d586  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlElement element"];
d598 -> d595  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlElement element"];
d598 -> d710  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlElement element"];
d598 -> d522  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlDocument document"];
d723 -> d497  [key=0, style=solid];
d723 -> d724  [key=0, style=solid];
d723 -> d496  [key=2, style=dotted];
d724 -> d497  [key=0, style=bold, color=blue];
d698 -> d699  [key=0, style=solid];
d698 -> d713  [key=0, style=solid];
d698 -> d717  [key=0, style=solid];
d698 -> d719  [key=0, style=solid];
d698 -> d722  [key=0, style=solid];
d700 -> d701  [key=0, style=solid];
d700 -> d702  [key=0, style=solid];
d702 -> d703  [key=0, style=solid];
d702 -> d518  [key=2, style=dotted];
d702 -> d707  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
d702 -> d710  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
d702 -> d726  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
d702 -> d712  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
d703 -> d704  [key=0, style=solid];
d703 -> d496  [key=2, style=dotted];
d704 -> d705  [key=0, style=solid];
d704 -> d712  [key=0, style=solid];
d706 -> d707  [key=0, style=solid];
d706 -> d709  [key=0, style=solid];
d706 -> d496  [key=2, style=dotted];
d707 -> d499  [key=2, style=dotted];
d707 -> d708  [key=0, style=solid];
d710 -> d711  [key=0, style=solid];
d710 -> d599  [key=2, style=dotted];
d710 -> d600  [key=2, style=dotted];
d710 -> d725  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d711 -> d598  [key=2, style=dotted];
d711 -> d723  [key=0, style=solid];
d712 -> d499  [key=2, style=dotted];
d712 -> d723  [key=0, style=solid];
d714 -> d715  [key=0, style=solid];
d714 -> d518  [key=2, style=dotted];
d714 -> d716  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
d715 -> d723  [key=0, style=solid];
d715 -> d716  [key=0, style=solid];
d715 -> d496  [key=2, style=dotted];
d716 -> d499  [key=2, style=dotted];
d716 -> d715  [key=0, style=solid];
d718 -> d123  [key=2, style=dotted];
d718 -> d723  [key=0, style=solid];
d718 -> d95  [key=2, style=dotted];
d722 -> d724  [key=0, style=solid];
d722 -> d492  [key=2, style=dotted];
d513 -> d516  [key=0, style=solid];
d513 -> d514  [key=0, style=solid];
d517 -> d499  [key=0, style=bold, color=blue];
d648 -> d548  [key=0, style=bold, color=blue];
d609 -> d610  [key=0, style=solid];
d609 -> d362  [key=2, style=dotted];
d609 -> d625  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
d609 -> d639  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
d609 -> d641  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
d609 -> d647  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
d612 -> d613  [key=0, style=solid];
d612 -> d647  [key=0, style=solid];
d613 -> d614  [key=0, style=solid];
d613 -> d647  [key=0, style=solid];
d613 -> d496  [key=2, style=dotted];
d614 -> d615  [key=0, style=solid];
d614 -> d644  [key=0, style=solid];
d614 -> d646  [key=0, style=solid];
d616 -> d617  [key=0, style=solid];
d616 -> d518  [key=2, style=dotted];
d616 -> d618  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d616 -> d622  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d623 -> d624  [key=0, style=solid];
d623 -> d496  [key=2, style=dotted];
d624 -> d554  [key=2, style=dotted];
d624 -> d625  [key=0, style=solid];
d624 -> d628  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
d628 -> d613  [key=0, style=solid];
d628 -> d287  [key=2, style=dotted];
d631 -> d632  [key=0, style=solid];
d631 -> d496  [key=2, style=dotted];
d632 -> d633  [key=0, style=solid];
d632 -> d518  [key=2, style=dotted];
d632 -> d641  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
d633 -> d634  [key=0, style=solid];
d633 -> d294  [key=2, style=dotted];
d633 -> d641  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
d636 -> d637  [key=0, style=solid];
d636 -> d638  [key=0, style=solid];
d636 -> d552  [key=2, style=dotted];
d640 -> d641  [key=0, style=solid];
d640 -> d287  [key=2, style=dotted];
d646 -> d648  [key=0, style=solid];
d646 -> d492  [key=2, style=dotted];
d111 -> d553  [key=3, color=darkorchid, style=bold, label="Parameter variable string elementName"];
d111 -> d112  [key=0, style=solid];
d111 -> d38  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement"];
d111 -> d165  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement"];
d113 -> d553  [key=3, color=darkorchid, style=bold, label="Parameter variable string qualifiedName"];
d113 -> d114  [key=0, style=solid];
d113 -> d43  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement"];
d113 -> d170  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlElement CreateElement"];
d113 -> d694  [key=3, color=darkorchid, style=bold, label="Parameter variable string namespaceUri"];
d586 -> d553  [key=2, style=dotted];
d586 -> d587  [key=0, style=solid];
d586 -> d590  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
d586 -> d593  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
d586 -> d595  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
d697 -> d553  [key=0, style=bold, color=blue];
d694 -> d695  [key=0, style=solid];
d694 -> d295  [key=2, style=dotted];
d694 -> d552  [key=2, style=dotted];
d695 -> d111  [key=2, style=dotted];
d695 -> d113  [key=2, style=dotted];
d695 -> d696  [key=0, style=solid];
d695 -> d295  [key=2, style=dotted];
d522 -> d499  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d522 -> d586  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d522 -> d585  [key=0, style=solid];
d522 -> d587  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d522 -> d589  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d522 -> d590  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d522 -> d593  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d522 -> d595  [key=1, style=dashed, color=darkseagreen4, label=string];
d522 -> d602  [key=1, style=dashed, color=darkseagreen4, label=string];
d522 -> d596  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d585 -> d549  [key=2, style=dotted];
d585 -> d586  [key=0, style=solid];
d524 -> d547  [key=0, style=solid];
d524 -> d492  [key=2, style=dotted];
d97 -> d554  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
d97 -> d98  [key=0, style=solid];
d97 -> d8  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateTextNode"];
d97 -> d138  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateTextNode"];
d576 -> d554  [key=0, style=bold, color=blue];
d619 -> d554  [key=3, color=darkorchid, style=bold, label="Local variable string attributeValue"];
d619 -> d620  [key=0, style=solid];
d556 -> d557  [key=0, style=solid];
d556 -> d558  [key=0, style=solid];
d557 -> d576  [key=0, style=solid];
d557 -> d518  [key=2, style=dotted];
d558 -> d559  [key=0, style=solid];
d558 -> d560  [key=0, style=solid];
d559 -> d576  [key=0, style=solid];
d559 -> d577  [key=2, style=dotted];
d559 -> d578  [key=2, style=dotted];
d560 -> d561  [key=0, style=solid];
d560 -> d566  [key=0, style=solid];
d561 -> d562  [key=0, style=solid];
d561 -> d563  [key=0, style=solid];
d562 -> d576  [key=0, style=solid];
d562 -> d578  [key=2, style=dotted];
d563 -> d564  [key=0, style=solid];
d563 -> d565  [key=0, style=solid];
d564 -> d576  [key=0, style=solid];
d564 -> d578  [key=2, style=dotted];
d565 -> d576  [key=0, style=solid];
d565 -> d579  [key=2, style=dotted];
d565 -> d578  [key=2, style=dotted];
d566 -> d567  [key=0, style=solid];
d566 -> d568  [key=0, style=solid];
d567 -> d576  [key=0, style=solid];
d567 -> d580  [key=2, style=dotted];
d567 -> d578  [key=2, style=dotted];
d568 -> d569  [key=0, style=solid];
d568 -> d573  [key=0, style=solid];
d569 -> d570  [key=0, style=solid];
d569 -> d571  [key=0, style=solid];
d570 -> d576  [key=0, style=solid];
d570 -> d578  [key=2, style=dotted];
d571 -> d572  [key=0, style=solid];
d571 -> d581  [key=2, style=dotted];
d573 -> d574  [key=0, style=solid];
d573 -> d575  [key=0, style=solid];
d575 -> d576  [key=0, style=solid];
d575 -> d583  [key=2, style=dotted];
d575 -> d584  [key=2, style=dotted];
d535 -> d539  [key=0, style=solid];
d535 -> d536  [key=0, style=solid];
d119 -> d531  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute"];
d119 -> d537  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute"];
d119 -> d120  [key=0, style=solid];
d119 -> d60  [key=3, color=darkorchid, style=bold, label="method methodReturn void SetAttributeNode"];
d119 -> d233  [key=3, color=darkorchid, style=bold, label="method methodReturn void SetAttributeNode"];
d119 -> d117  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute"];
d536 -> d537  [key=0, style=solid];
d536 -> d549  [key=2, style=dotted];
d536 -> d536  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
d490 -> d459  [key=0, style=bold, color=blue];
d460 -> d462  [key=0, style=solid];
d460 -> d461  [key=0, style=solid];
d465 -> d466  [key=0, style=solid];
d465 -> d471  [key=0, style=solid];
d465 -> d491  [key=2, style=dotted];
d466 -> d467  [key=0, style=solid];
d466 -> d468  [key=0, style=solid];
d471 -> d472  [key=0, style=solid];
d471 -> d477  [key=0, style=solid];
d471 -> d491  [key=2, style=dotted];
d472 -> d473  [key=0, style=solid];
d472 -> d474  [key=0, style=solid];
d478 -> d490  [key=0, style=solid];
d478 -> d492  [key=2, style=dotted];
d479 -> d481  [key=0, style=solid];
d479 -> d480  [key=0, style=solid];
d483 -> d484  [key=0, style=solid];
d483 -> d496  [key=2, style=dotted];
d486 -> d487  [key=0, style=solid];
d486 -> d488  [key=1, style=dashed, color=darkseagreen4, label=element];
d521 -> d499  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode currentNode"];
d521 -> d672  [key=0, style=solid];
d521 -> d676  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d677  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d679  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d680  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d682  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d683  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d685  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d686  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d688  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d689  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d690  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d521 -> d691  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d521 -> d692  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d519 -> d499  [key=3, color=darkorchid, style=bold, label="Parameter variable string propertyName"];
d519 -> d651  [key=0, style=solid];
d519 -> d655  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d656  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d658  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d659  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d661  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d662  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d664  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d665  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d666  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d667  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
d519 -> d668  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d519 -> d669  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
d519 -> d670  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d590 -> d499  [key=2, style=dotted];
d590 -> d591  [key=0, style=solid];
d500 -> d501  [key=0, style=solid];
d500 -> d503  [key=0, style=solid];
d500 -> d505  [key=0, style=solid];
d500 -> d507  [key=0, style=solid];
d500 -> d509  [key=0, style=solid];
d502 -> d123  [key=2, style=dotted];
d502 -> d517  [key=0, style=solid];
d502 -> d97  [key=2, style=dotted];
d502 -> d518  [key=2, style=dotted];
d504 -> d123  [key=2, style=dotted];
d504 -> d517  [key=0, style=solid];
d504 -> d518  [key=2, style=dotted];
d504 -> d99  [key=2, style=dotted];
d506 -> d123  [key=2, style=dotted];
d506 -> d517  [key=0, style=solid];
d506 -> d518  [key=2, style=dotted];
d506 -> d101  [key=2, style=dotted];
d508 -> d123  [key=2, style=dotted];
d508 -> d517  [key=0, style=solid];
d508 -> d518  [key=2, style=dotted];
d508 -> d103  [key=2, style=dotted];
d509 -> d295  [key=2, style=dotted];
d509 -> d510  [key=0, style=solid];
d509 -> d511  [key=0, style=solid];
d510 -> d517  [key=0, style=solid];
d510 -> d519  [key=2, style=dotted];
d511 -> d513  [key=0, style=solid];
d511 -> d512  [key=0, style=solid];
d511 -> d520  [key=2, style=dotted];
d512 -> d517  [key=0, style=solid];
d512 -> d521  [key=2, style=dotted];
d514 -> d522  [key=2, style=dotted];
d514 -> d515  [key=0, style=solid];
d477 -> d478  [key=0, style=solid];
d477 -> d479  [key=0, style=solid];
d489 -> d490  [key=0, style=solid];
d46 -> d115  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d46 -> d47  [key=0, style=solid];
d46 -> d48  [key=1, style=dashed, color=darkseagreen4, label=string];
d116 -> d115  [key=0, style=bold, color=blue];
d176 -> d115  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d176 -> d177  [key=0, style=solid];
d622 -> d551  [key=2, style=dotted];
d622 -> d623  [key=0, style=solid];
d622 -> d622  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d622 -> d625  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d622 -> d627  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d622 -> d630  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d630 -> d551  [key=2, style=dotted];
d630 -> d631  [key=0, style=solid];
d630 -> d630  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d630 -> d641  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
d669 -> d551  [key=2, style=dotted];
d669 -> d518  [key=2, style=dotted];
d669 -> d670  [key=0, style=solid];
d669 -> d109  [key=2, style=dotted];
d245 -> d246  [key=0, style=solid];
d245 -> d254  [key=2, style=dotted];
d245 -> d247  [key=1, style=dashed, color=darkseagreen4, label=node];
d245 -> d250  [key=1, style=dashed, color=darkseagreen4, label=node];
d247 -> d248  [key=0, style=solid];
d247 -> d257  [key=2, style=dotted];
d248 -> d249  [key=0, style=solid];
d248 -> d250  [key=0, style=solid];
d250 -> d251  [key=0, style=solid];
d250 -> d259  [key=2, style=dotted];
d251 -> d252  [key=0, style=solid];
d251 -> d253  [key=0, style=solid];
d301 -> d321  [key=0, style=solid];
d301 -> d288  [key=2, style=dotted];
d307 -> d321  [key=0, style=solid];
d307 -> d288  [key=2, style=dotted];
d309 -> d321  [key=0, style=solid];
d309 -> d288  [key=2, style=dotted];
d311 -> d321  [key=0, style=solid];
d311 -> d288  [key=2, style=dotted];
d337 -> d338  [key=0, style=solid];
d337 -> d296  [key=2, style=dotted];
d337 -> d339  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
d337 -> d341  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
d348 -> d350  [key=0, style=solid];
d348 -> d323  [key=2, style=dotted];
d351 -> d344  [key=0, style=solid];
d351 -> d259  [key=2, style=dotted];
d358 -> d359  [key=0, style=solid];
d358 -> d259  [key=2, style=dotted];
d371 -> d447  [key=0, style=solid];
d371 -> d332  [key=2, style=dotted];
d373 -> d374  [key=0, style=solid];
d373 -> d375  [key=0, style=solid];
d373 -> d323  [key=2, style=dotted];
d373 -> d448  [key=2, style=dotted];
d373 -> d456  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d374 -> d447  [key=0, style=solid];
d374 -> d332  [key=2, style=dotted];
d382 -> d383  [key=0, style=solid];
d382 -> d296  [key=2, style=dotted];
d382 -> d365  [key=2, style=dotted];
d383 -> d384  [key=0, style=solid];
d383 -> d385  [key=0, style=solid];
d383 -> d449  [key=2, style=dotted];
d383 -> d450  [key=2, style=dotted];
d393 -> d394  [key=0, style=solid];
d393 -> d259  [key=2, style=dotted];
d395 -> d396  [key=0, style=solid];
d395 -> d332  [key=2, style=dotted];
d413 -> d414  [key=0, style=solid];
d413 -> d296  [key=2, style=dotted];
d413 -> d365  [key=2, style=dotted];
d417 -> d418  [key=0, style=solid];
d417 -> d296  [key=2, style=dotted];
d417 -> d365  [key=2, style=dotted];
d431 -> d432  [key=0, style=solid];
d431 -> d296  [key=2, style=dotted];
d431 -> d365  [key=2, style=dotted];
d592 -> d593  [key=0, style=solid];
d592 -> d594  [key=0, style=solid];
d593 -> d598  [key=2, style=dotted];
d593 -> d594  [key=0, style=solid];
d594 -> d595  [key=0, style=solid];
d594 -> d597  [key=0, style=solid];
d596 -> d598  [key=2, style=dotted];
d596 -> d597  [key=0, style=solid];
d627 -> d613  [key=0, style=solid];
d627 -> d628  [key=0, style=solid];
d627 -> d649  [key=2, style=dotted];
d709 -> d723  [key=0, style=solid];
d709 -> d710  [key=0, style=solid];
d88 -> d123  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d88 -> d88  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild"];
d88 -> d89  [key=0, style=solid];
d88 -> d92  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d124 -> d123  [key=0, style=bold, color=blue];
d185 -> d123  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d185 -> d186  [key=0, style=solid];
d185 -> d190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d185 -> d192  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild"];
d227 -> d123  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d227 -> d228  [key=0, style=solid];
d227 -> d192  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild"];
d587 -> d123  [key=2, style=dotted];
d587 -> d588  [key=0, style=solid];
d668 -> d123  [key=2, style=dotted];
d668 -> d671  [key=0, style=solid];
d670 -> d123  [key=2, style=dotted];
d670 -> d671  [key=0, style=solid];
d692 -> d123  [key=2, style=dotted];
d692 -> d693  [key=0, style=solid];
d99 -> d100  [key=0, style=solid];
d99 -> d12  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateCDataSection"];
d99 -> d142  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateCDataSection"];
d101 -> d102  [key=0, style=solid];
d101 -> d16  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateWhitespace"];
d101 -> d146  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateWhitespace"];
d103 -> d104  [key=0, style=solid];
d103 -> d20  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateSignificantWhitespace"];
d103 -> d149  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateSignificantWhitespace"];
d667 -> d668  [key=0, style=solid];
d667 -> d105  [key=2, style=dotted];
d691 -> d692  [key=0, style=solid];
d691 -> d107  [key=2, style=dotted];
d95 -> d96  [key=0, style=solid];
d95 -> d3  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateComment"];
d95 -> d133  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateComment"];
d649 -> d728  [key=0, style=solid];
d649 -> d616  [key=3, color=darkorchid, style=bold, label="Parameter variable string attributeName"];
d649 -> d358  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNamespaceAttribute"];
d649 -> d393  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsNamespaceAttribute"];
d649 -> d729  [key=1, style=dashed, color=darkseagreen4, label=string];
d649 -> d732  [key=1, style=dashed, color=darkseagreen4, label=string];
d649 -> d733  [key=1, style=dashed, color=darkseagreen4, label=string];
d649 -> d626  [key=3, color=darkorchid, style=bold, label="Parameter variable string prefix"];
d729 -> d730  [key=0, style=solid];
d729 -> d732  [key=0, style=solid];
d735 -> d736  [key=0, style=solid];
d735 -> d737  [key=1, style=dashed, color=darkseagreen4, label="out string"];
d468 -> d469  [key=0, style=solid];
d468 -> d493  [key=2, style=dotted];
d131 -> d132  [key=0, style=solid];
d474 -> d475  [key=0, style=solid];
d474 -> d494  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d608 -> d598  [key=0, style=bold, color=blue];
d604 -> d119  [key=2, style=dotted];
d604 -> d605  [key=0, style=solid];
d604 -> d117  [key=2, style=dotted];
d605 -> d608  [key=0, style=solid];
d605 -> d606  [key=0, style=solid];
d606 -> d608  [key=0, style=solid];
d606 -> d607  [key=0, style=solid];
d606 -> d121  [key=2, style=dotted];
d607 -> d119  [key=2, style=dotted];
d607 -> d608  [key=0, style=solid];
d607 -> d117  [key=2, style=dotted];
d595 -> d596  [key=0, style=solid];
d595 -> d599  [key=2, style=dotted];
d595 -> d600  [key=2, style=dotted];
d595 -> d601  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d701 -> d724  [key=0, style=solid];
d701 -> d492  [key=2, style=dotted];
d721 -> d724  [key=0, style=solid];
d699 -> d700  [key=0, style=solid];
d713 -> d714  [key=0, style=solid];
d717 -> d718  [key=0, style=solid];
d719 -> d720  [key=0, style=solid];
d726 -> d727  [key=0, style=solid];
d705 -> d706  [key=0, style=solid];
d705 -> d709  [key=1, style=dashed, color=darkseagreen4, label=count];
d705 -> d708  [key=1, style=dashed, color=darkseagreen4, label=count];
d705 -> d335  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
d708 -> d706  [key=0, style=solid];
d708 -> d709  [key=1, style=dashed, color=darkseagreen4, label=count];
d708 -> d708  [key=1, style=dashed, color=darkseagreen4, label=count];
d725 -> d726  [key=0, style=solid];
d515 -> d517  [key=0, style=solid];
d647 -> d648  [key=0, style=solid];
d610 -> d613  [key=1, style=dashed, color=darkseagreen4, label=finishedAttributes];
d610 -> d358  [key=3, color=darkorchid, style=bold, label="Local variable bool finishedAttributes"];
d610 -> d611  [key=0, style=solid];
d625 -> d626  [key=0, style=solid];
d625 -> d364  [key=2, style=dotted];
d639 -> d640  [key=0, style=solid];
d639 -> d364  [key=2, style=dotted];
d641 -> d613  [key=0, style=solid];
d641 -> d364  [key=2, style=dotted];
d611 -> d612  [key=0, style=solid];
d611 -> d613  [key=1, style=dashed, color=darkseagreen4, label=finishedElement];
d611 -> d358  [key=3, color=darkorchid, style=bold, label="Local variable bool finishedElement"];
d643 -> d613  [key=0, style=solid];
d642 -> d613  [key=0, style=solid];
d645 -> d613  [key=0, style=solid];
d615 -> d616  [key=0, style=solid];
d644 -> d645  [key=0, style=solid];
d617 -> d295  [key=2, style=dotted];
d617 -> d643  [key=0, style=solid];
d617 -> d618  [key=0, style=solid];
d618 -> d619  [key=0, style=solid];
d618 -> d620  [key=1, style=dashed, color=darkseagreen4, label=firstChar];
d634 -> d641  [key=0, style=solid];
d634 -> d635  [key=0, style=solid];
d635 -> d636  [key=0, style=solid];
d635 -> d637  [key=1, style=dashed, color=darkseagreen4, label=i];
d635 -> d638  [key=1, style=dashed, color=darkseagreen4, label=i];
d637 -> d636  [key=0, style=solid];
d637 -> d637  [key=1, style=dashed, color=darkseagreen4, label=i];
d637 -> d650  [key=2, style=dotted];
d637 -> d638  [key=1, style=dashed, color=darkseagreen4, label=i];
d638 -> d640  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
d638 -> d639  [key=0, style=solid];
d638 -> d641  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
d38 -> d111  [key=3, color=darkorchid, style=bold, label="Parameter variable string elementName"];
d38 -> d39  [key=0, style=solid];
d112 -> d111  [key=0, style=bold, color=blue];
d165 -> d111  [key=3, color=darkorchid, style=bold, label="Parameter variable string elementName"];
d165 -> d166  [key=0, style=solid];
d43 -> d113  [key=3, color=darkorchid, style=bold, label="Parameter variable string namespaceUri"];
d43 -> d44  [key=0, style=solid];
d114 -> d113  [key=0, style=bold, color=blue];
d170 -> d113  [key=3, color=darkorchid, style=bold, label="Parameter variable string namespaceUri"];
d170 -> d171  [key=0, style=solid];
d170 -> d172  [key=1, style=dashed, color=darkseagreen4, label=string];
d696 -> d697  [key=0, style=solid];
d597 -> d522  [key=0, style=bold, color=blue];
d589 -> d590  [key=0, style=solid];
d589 -> d592  [key=0, style=solid];
d589 -> d496  [key=2, style=dotted];
d602 -> d603  [key=0, style=solid];
d8 -> d97  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
d8 -> d9  [key=0, style=solid];
d98 -> d97  [key=0, style=bold, color=blue];
d138 -> d97  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
d138 -> d139  [key=0, style=solid];
d572 -> d576  [key=0, style=solid];
d572 -> d582  [key=2, style=dotted];
d572 -> d578  [key=2, style=dotted];
d574 -> d576  [key=0, style=solid];
d620 -> d642  [key=0, style=solid];
d620 -> d621  [key=0, style=solid];
d620 -> d629  [key=0, style=solid];
d583 -> d0  [key=3, color=darkorchid, style=bold, label="Field variable XmlDocument _document"];
d290 -> d295  [key=2, style=dotted];
d290 -> d291  [key=0, style=solid];
d290 -> d292  [key=0, style=solid];
d419 -> d295  [key=2, style=dotted];
d419 -> d420  [key=0, style=solid];
d419 -> d422  [key=0, style=solid];
d422 -> d295  [key=2, style=dotted];
d422 -> d423  [key=0, style=solid];
d422 -> d425  [key=0, style=solid];
d425 -> d295  [key=2, style=dotted];
d425 -> d426  [key=0, style=solid];
d425 -> d428  [key=0, style=solid];
d433 -> d295  [key=2, style=dotted];
d433 -> d434  [key=0, style=solid];
d433 -> d436  [key=0, style=solid];
d436 -> d295  [key=2, style=dotted];
d436 -> d437  [key=0, style=solid];
d436 -> d439  [key=0, style=solid];
d439 -> d295  [key=2, style=dotted];
d439 -> d440  [key=0, style=solid];
d439 -> d442  [key=0, style=solid];
d442 -> d295  [key=2, style=dotted];
d442 -> d443  [key=0, style=solid];
d442 -> d445  [key=0, style=solid];
d656 -> d518  [key=2, style=dotted];
d656 -> d657  [key=0, style=solid];
d656 -> d660  [key=0, style=solid];
d656 -> d663  [key=0, style=solid];
d656 -> d666  [key=0, style=solid];
d659 -> d518  [key=2, style=dotted];
d659 -> d667  [key=1, style=dashed, color=darkseagreen4, label=version];
d659 -> d655  [key=0, style=solid];
d662 -> d518  [key=2, style=dotted];
d662 -> d667  [key=1, style=dashed, color=darkseagreen4, label=encoding];
d662 -> d655  [key=0, style=solid];
d665 -> d518  [key=2, style=dotted];
d665 -> d667  [key=1, style=dashed, color=darkseagreen4, label=standalone];
d665 -> d655  [key=0, style=solid];
d677 -> d518  [key=2, style=dotted];
d677 -> d678  [key=0, style=solid];
d677 -> d681  [key=0, style=solid];
d677 -> d684  [key=0, style=solid];
d677 -> d687  [key=0, style=solid];
d677 -> d690  [key=0, style=solid];
d680 -> d518  [key=2, style=dotted];
d680 -> d691  [key=1, style=dashed, color=darkseagreen4, label=name];
d680 -> d676  [key=0, style=solid];
d683 -> d518  [key=2, style=dotted];
d683 -> d691  [key=1, style=dashed, color=darkseagreen4, label=publicId];
d683 -> d676  [key=0, style=solid];
d686 -> d518  [key=2, style=dotted];
d686 -> d691  [key=1, style=dashed, color=darkseagreen4, label=systemId];
d686 -> d676  [key=0, style=solid];
d689 -> d518  [key=2, style=dotted];
d689 -> d691  [key=1, style=dashed, color=darkseagreen4, label=internalSubset];
d689 -> d676  [key=0, style=solid];
d60 -> d119  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute"];
d60 -> d61  [key=0, style=solid];
d120 -> d119  [key=0, style=bold, color=blue];
d233 -> d119  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode attribute"];
d233 -> d234  [key=0, style=solid];
d117 -> d604  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d117 -> d607  [key=3, color=darkorchid, style=bold, label="Parameter variable string namespaceUri"];
d117 -> d118  [key=0, style=solid];
d117 -> d52  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute"];
d117 -> d181  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateAttribute"];
d47 -> d51  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d47 -> d6  [key=2, style=dotted];
d47 -> d49  [key=1, style=dashed, color=darkseagreen4, label=attribute];
d53 -> d51  [key=2, style=dotted];
d53 -> d54  [key=0, style=solid];
d53 -> d6  [key=2, style=dotted];
d53 -> d55  [key=1, style=dashed, color=darkseagreen4, label=attribute];
d278 -> d286  [key=2, style=dotted];
d278 -> d279  [key=0, style=solid];
d375 -> d286  [key=2, style=dotted];
d375 -> d376  [key=0, style=solid];
d397 -> d454  [key=2, style=dotted];
d397 -> d447  [key=0, style=solid];
d461 -> d490  [key=0, style=solid];
d467 -> d490  [key=0, style=solid];
d467 -> d492  [key=2, style=dotted];
d473 -> d490  [key=0, style=solid];
d473 -> d492  [key=2, style=dotted];
d480 -> d490  [key=0, style=solid];
d480 -> d492  [key=2, style=dotted];
d488 -> d490  [key=0, style=solid];
d487 -> d488  [key=0, style=solid];
d487 -> d498  [key=2, style=dotted];
d693 -> d521  [key=0, style=bold, color=blue];
d672 -> d691  [key=1, style=dashed, color=darkseagreen4, label=name];
d672 -> d673  [key=0, style=solid];
d676 -> d691  [key=0, style=solid];
d676 -> d496  [key=2, style=dotted];
d676 -> d677  [key=0, style=solid];
d679 -> d496  [key=2, style=dotted];
d679 -> d680  [key=0, style=solid];
d682 -> d496  [key=2, style=dotted];
d682 -> d683  [key=0, style=solid];
d685 -> d496  [key=2, style=dotted];
d685 -> d686  [key=0, style=solid];
d688 -> d496  [key=2, style=dotted];
d688 -> d689  [key=0, style=solid];
d690 -> d492  [key=2, style=dotted];
d690 -> d693  [key=0, style=solid];
d671 -> d519  [key=0, style=bold, color=blue];
d651 -> d669  [key=0, style=solid];
d651 -> d652  [key=0, style=solid];
d655 -> d667  [key=0, style=solid];
d655 -> d496  [key=2, style=dotted];
d655 -> d656  [key=0, style=solid];
d658 -> d496  [key=2, style=dotted];
d658 -> d659  [key=0, style=solid];
d661 -> d496  [key=2, style=dotted];
d661 -> d662  [key=0, style=solid];
d664 -> d496  [key=2, style=dotted];
d664 -> d665  [key=0, style=solid];
d666 -> d492  [key=2, style=dotted];
d666 -> d671  [key=0, style=solid];
d591 -> d594  [key=1, style=dashed, color=darkseagreen4, label=count];
d591 -> d589  [key=0, style=solid];
d591 -> d591  [key=1, style=dashed, color=darkseagreen4, label=count];
d501 -> d502  [key=0, style=solid];
d503 -> d504  [key=0, style=solid];
d505 -> d506  [key=0, style=solid];
d507 -> d508  [key=0, style=solid];
d246 -> d255  [key=2, style=dotted];
d246 -> d256  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d246 -> d250  [key=1, style=dashed, color=darkseagreen4, label=manager];
d50 -> d46  [key=0, style=bold, color=blue];
d48 -> d49  [key=0, style=solid];
d178 -> d176  [key=0, style=bold, color=blue];
d177 -> d178  [key=0, style=solid];
d177 -> d179  [key=2, style=dotted];
d177 -> d180  [key=2, style=dotted];
d621 -> d622  [key=0, style=solid];
d629 -> d630  [key=0, style=solid];
d109 -> d110  [key=0, style=solid];
d109 -> d34  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateProcessingInstruction"];
d109 -> d160  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateProcessingInstruction"];
d244 -> d245  [key=0, style=solid];
d244 -> d250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d244 -> d249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d244 -> d252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d257 -> d245  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node"];
d257 -> d278  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d257 -> d246  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d257 -> d268  [key=0, style=solid];
d257 -> d269  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d257 -> d281  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d259 -> d245  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node"];
d259 -> d358  [key=3, color=darkorchid, style=bold, label="Parameter variable bool writePropertyName"];
d259 -> d371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d413  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d375  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d259 -> d397  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d259 -> d246  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d259 -> d244  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.JsonWriter writer"];
d259 -> d259  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d259 -> d368  [key=0, style=solid];
d259 -> d457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d380  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d259 -> d381  [key=1, style=dashed, color=darkseagreen4, label=bool];
d259 -> d384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d388  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d389  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d396  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d399  [key=1, style=dashed, color=darkseagreen4, label=bool];
d259 -> d400  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d412  [key=1, style=dashed, color=darkseagreen4, label=bool];
d259 -> d414  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d416  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d418  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d420  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d421  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d423  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d424  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d426  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d427  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d428  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d432  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d434  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d435  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d438  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d443  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d444  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d445  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d259 -> d446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d259 -> d332  [key=3, color=darkorchid, style=bold, label="Parameter variable bool writePropertyName"];
d254 -> d244  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
d254 -> d261  [key=0, style=solid];
d254 -> d262  [key=1, style=dashed, color=darkseagreen4, label=object];
d254 -> d263  [key=1, style=dashed, color=darkseagreen4, label=object];
d254 -> d264  [key=1, style=dashed, color=darkseagreen4, label=object];
d254 -> d200  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode WrapXml"];
d249 -> d250  [key=0, style=solid];
d249 -> d258  [key=2, style=dotted];
d252 -> d253  [key=0, style=solid];
d252 -> d260  [key=2, style=dotted];
d253 -> d244  [key=0, style=bold, color=blue];
d296 -> d301  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d296 -> d307  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d296 -> d309  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d296 -> d311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d296 -> d259  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d296 -> d297  [key=0, style=solid];
d296 -> d299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d296 -> d300  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d296 -> d320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d296 -> d288  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetPropertyName"];
d296 -> d336  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node"];
d296 -> d332  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d299 -> d301  [key=0, style=solid];
d299 -> d300  [key=0, style=solid];
d321 -> d296  [key=0, style=bold, color=blue];
d288 -> d296  [key=3, color=darkorchid, style=bold, label="Parameter variable XmlNamespaceManager manager"];
d288 -> d289  [key=0, style=solid];
d288 -> d291  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d288 -> d292  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d306 -> d307  [key=0, style=solid];
d308 -> d309  [key=0, style=solid];
d310 -> d311  [key=0, style=solid];
d332 -> d337  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
d332 -> d351  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d332 -> d358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d332 -> d393  [key=3, color=darkorchid, style=bold, label="Parameter variable bool writePropertyName"];
d332 -> d259  [key=3, color=darkorchid, style=bold, label="Parameter variable bool writePropertyName"];
d332 -> d333  [key=0, style=solid];
d332 -> d335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d332 -> d336  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d332 -> d353  [key=1, style=dashed, color=darkseagreen4, label=bool];
d332 -> d354  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d332 -> d355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d332 -> d360  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
d336 -> d337  [key=0, style=solid];
d336 -> d342  [key=1, style=dashed, color=darkseagreen4, label=childNode];
d338 -> d339  [key=0, style=solid];
d339 -> d340  [key=0, style=solid];
d339 -> d342  [key=0, style=solid];
d339 -> d363  [key=2, style=dotted];
d341 -> d342  [key=0, style=solid];
d341 -> d364  [key=2, style=dotted];
d345 -> d348  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
d345 -> d351  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
d345 -> d358  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
d345 -> d345  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
d345 -> d346  [key=0, style=solid];
d345 -> d347  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
d345 -> d352  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
d345 -> d357  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
d347 -> d348  [key=0, style=solid];
d347 -> d349  [key=0, style=solid];
d350 -> d351  [key=0, style=solid];
d350 -> d352  [key=0, style=solid];
d323 -> d259  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode node"];
d323 -> d324  [key=0, style=solid];
d344 -> d345  [key=0, style=solid];
d344 -> d361  [key=0, style=solid];
d357 -> d358  [key=0, style=solid];
d357 -> d360  [key=0, style=solid];
d357 -> d335  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d356 -> d358  [key=1, style=dashed, color=darkseagreen4, label=i];
d356 -> d357  [key=0, style=solid];
d356 -> d359  [key=1, style=dashed, color=darkseagreen4, label=i];
d745 -> d358  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvert"];
d745 -> d393  [key=3, color=darkorchid, style=bold, label="method methodReturn bool CanConvert"];
d745 -> d746  [key=0, style=solid];
d745 -> d748  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
d359 -> d357  [key=0, style=solid];
d359 -> d359  [key=1, style=dashed, color=darkseagreen4, label=i];
d370 -> d371  [key=0, style=solid];
d447 -> d259  [key=0, style=bold, color=blue];
d372 -> d373  [key=0, style=solid];
d456 -> d457  [key=0, style=solid];
d381 -> d382  [key=0, style=solid];
d381 -> d383  [key=0, style=solid];
d384 -> d397  [key=0, style=solid];
d384 -> d451  [key=2, style=dotted];
d385 -> d386  [key=0, style=solid];
d385 -> d390  [key=0, style=solid];
d385 -> d452  [key=2, style=dotted];
d449 -> d739  [key=0, style=solid];
d449 -> d366  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode> c"];
d392 -> d393  [key=0, style=solid];
d392 -> d395  [key=0, style=solid];
d392 -> d335  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d391 -> d393  [key=1, style=dashed, color=darkseagreen4, label=i];
d391 -> d392  [key=0, style=solid];
d391 -> d394  [key=1, style=dashed, color=darkseagreen4, label=i];
d394 -> d392  [key=0, style=solid];
d394 -> d394  [key=1, style=dashed, color=darkseagreen4, label=i];
d396 -> d397  [key=0, style=solid];
d396 -> d260  [key=2, style=dotted];
d412 -> d413  [key=0, style=solid];
d412 -> d414  [key=0, style=solid];
d414 -> d447  [key=0, style=solid];
d414 -> d451  [key=2, style=dotted];
d416 -> d417  [key=0, style=solid];
d416 -> d419  [key=1, style=dashed, color=darkseagreen4, label=declaration];
d416 -> d422  [key=1, style=dashed, color=darkseagreen4, label=declaration];
d416 -> d425  [key=1, style=dashed, color=darkseagreen4, label=declaration];
d416 -> d421  [key=1, style=dashed, color=darkseagreen4, label=declaration];
d416 -> d424  [key=1, style=dashed, color=darkseagreen4, label=declaration];
d416 -> d427  [key=1, style=dashed, color=darkseagreen4, label=declaration];
d418 -> d419  [key=0, style=solid];
d418 -> d258  [key=2, style=dotted];
d430 -> d431  [key=0, style=solid];
d430 -> d433  [key=1, style=dashed, color=darkseagreen4, label=documentType];
d430 -> d436  [key=1, style=dashed, color=darkseagreen4, label=documentType];
d430 -> d439  [key=1, style=dashed, color=darkseagreen4, label=documentType];
d430 -> d442  [key=1, style=dashed, color=darkseagreen4, label=documentType];
d430 -> d435  [key=1, style=dashed, color=darkseagreen4, label=documentType];
d430 -> d438  [key=1, style=dashed, color=darkseagreen4, label=documentType];
d430 -> d441  [key=1, style=dashed, color=darkseagreen4, label=documentType];
d430 -> d444  [key=1, style=dashed, color=darkseagreen4, label=documentType];
d432 -> d433  [key=0, style=solid];
d432 -> d258  [key=2, style=dotted];
d588 -> d594  [key=1, style=dashed, color=darkseagreen4, label=count];
d588 -> d589  [key=0, style=solid];
d588 -> d591  [key=1, style=dashed, color=darkseagreen4, label=count];
d588 -> d335  [key=3, color=darkorchid, style=bold, label="Local variable int count"];
d626 -> d627  [key=0, style=solid];
d93 -> d88  [key=0, style=bold, color=blue];
d89 -> d90  [key=0, style=solid];
d92 -> d93  [key=0, style=solid];
d191 -> d185  [key=0, style=bold, color=blue];
d192 -> d185  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d192 -> d227  [key=3, color=darkorchid, style=bold, label="Parameter variable Newtonsoft.Json.Converters.IXmlNode newChild"];
d192 -> d192  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode AppendChild"];
d192 -> d220  [key=0, style=solid];
d192 -> d222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d186 -> d187  [key=0, style=solid];
d186 -> d188  [key=1, style=dashed, color=darkseagreen4, label=declarationWrapper];
d186 -> d189  [key=1, style=dashed, color=darkseagreen4, label=declarationWrapper];
d190 -> d191  [key=0, style=solid];
d190 -> d192  [key=2, style=dotted];
d229 -> d227  [key=0, style=bold, color=blue];
d228 -> d229  [key=0, style=solid];
d228 -> d230  [key=2, style=dotted];
d12 -> d99  [key=3, color=darkorchid, style=bold, label="Parameter variable string data"];
d12 -> d13  [key=0, style=solid];
d100 -> d99  [key=0, style=bold, color=blue];
d142 -> d99  [key=3, color=darkorchid, style=bold, label="Parameter variable string data"];
d142 -> d143  [key=0, style=solid];
d16 -> d101  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
d16 -> d17  [key=0, style=solid];
d102 -> d101  [key=0, style=bold, color=blue];
d146 -> d101  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
d146 -> d147  [key=0, style=solid];
d20 -> d103  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
d20 -> d21  [key=0, style=solid];
d104 -> d103  [key=0, style=bold, color=blue];
d149 -> d103  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
d149 -> d150  [key=0, style=solid];
d652 -> d667  [key=1, style=dashed, color=darkseagreen4, label=version];
d652 -> d653  [key=0, style=solid];
d653 -> d667  [key=1, style=dashed, color=darkseagreen4, label=encoding];
d653 -> d654  [key=0, style=solid];
d654 -> d667  [key=1, style=dashed, color=darkseagreen4, label=standalone];
d654 -> d655  [key=0, style=solid];
d105 -> d652  [key=3, color=darkorchid, style=bold, label="Parameter variable string version"];
d105 -> d653  [key=3, color=darkorchid, style=bold, label="Parameter variable string encoding"];
d105 -> d654  [key=3, color=darkorchid, style=bold, label="Parameter variable string standalone"];
d105 -> d106  [key=0, style=solid];
d105 -> d24  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDeclaration"];
d105 -> d152  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDeclaration"];
d673 -> d691  [key=1, style=dashed, color=darkseagreen4, label=publicId];
d673 -> d674  [key=0, style=solid];
d674 -> d691  [key=1, style=dashed, color=darkseagreen4, label=systemId];
d674 -> d675  [key=0, style=solid];
d675 -> d691  [key=1, style=dashed, color=darkseagreen4, label=internalSubset];
d675 -> d676  [key=0, style=solid];
d107 -> d672  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
d107 -> d673  [key=3, color=darkorchid, style=bold, label="Parameter variable string publicId"];
d107 -> d674  [key=3, color=darkorchid, style=bold, label="Parameter variable string systemId"];
d107 -> d675  [key=3, color=darkorchid, style=bold, label="Parameter variable string internalSubset"];
d107 -> d108  [key=0, style=solid];
d107 -> d29  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDocumentType"];
d107 -> d156  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Converters.IXmlNode CreateXmlDocumentType"];
d3 -> d95  [key=3, color=darkorchid, style=bold, label="Parameter variable string data"];
d3 -> d4  [key=0, style=solid];
d96 -> d95  [key=0, style=bold, color=blue];
d133 -> d95  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
d133 -> d134  [key=0, style=solid];
d737 -> d649  [key=0, style=bold, color=blue];
d732 -> d735  [key=0, style=solid];
d732 -> d733  [key=0, style=solid];
d733 -> d734  [key=0, style=solid];
d733 -> d738  [key=2, style=dotted];
d730 -> d731  [key=0, style=solid];
d736 -> d737  [key=0, style=solid];
d132 -> d131  [key=0, style=bold, color=blue];
d202 -> d131  [key=2, style=dotted];
d202 -> d218  [key=0, style=solid];
d2 -> d0  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid];
d121 -> d122  [key=0, style=solid];
d121 -> d65  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetPrefixOfNamespace"];
d121 -> d241  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetPrefixOfNamespace"];
d601 -> d602  [key=0, style=solid];
d720 -> d721  [key=0, style=solid];
d766 -> d726  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
d727 -> d725  [key=0, style=bold, color=blue];
d335 -> d336  [key=0, style=solid];
d335 -> d344  [key=0, style=solid];
d335 -> d335  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d333 -> d362  [key=2, style=dotted];
d333 -> d339  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
d333 -> d341  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
d333 -> d344  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
d333 -> d334  [key=0, style=solid];
d281 -> d287  [key=2, style=dotted];
d281 -> d279  [key=0, style=solid];
d380 -> d287  [key=2, style=dotted];
d380 -> d376  [key=0, style=solid];
d289 -> d294  [key=2, style=dotted];
d289 -> d290  [key=0, style=solid];
d289 -> d291  [key=1, style=dashed, color=darkseagreen4, label=prefix];
d40 -> d38  [key=0, style=bold, color=blue];
d39 -> d40  [key=0, style=solid];
d39 -> d41  [key=2, style=dotted];
d39 -> d42  [key=2, style=dotted];
d167 -> d165  [key=0, style=bold, color=blue];
d166 -> d167  [key=0, style=solid];
d166 -> d168  [key=2, style=dotted];
d166 -> d169  [key=2, style=dotted];
d45 -> d43  [key=0, style=bold, color=blue];
d44 -> d45  [key=0, style=solid];
d44 -> d41  [key=2, style=dotted];
d44 -> d42  [key=2, style=dotted];
d173 -> d170  [key=0, style=bold, color=blue];
d171 -> d172  [key=0, style=solid];
d171 -> d174  [key=2, style=dotted];
d172 -> d173  [key=0, style=solid];
d172 -> d168  [key=2, style=dotted];
d172 -> d169  [key=2, style=dotted];
d172 -> d175  [key=2, style=dotted];
d765 -> d602  [key=1, style=dashed, color=darkseagreen4, label=string];
d603 -> d601  [key=0, style=bold, color=blue];
d10 -> d8  [key=0, style=bold, color=blue];
d9 -> d10  [key=0, style=solid];
d9 -> d6  [key=2, style=dotted];
d9 -> d11  [key=2, style=dotted];
d140 -> d138  [key=0, style=bold, color=blue];
d139 -> d140  [key=0, style=solid];
d139 -> d136  [key=2, style=dotted];
d139 -> d141  [key=2, style=dotted];
d291 -> d293  [key=0, style=solid];
d292 -> d293  [key=0, style=solid];
d420 -> d365  [key=2, style=dotted];
d420 -> d421  [key=0, style=solid];
d421 -> d422  [key=0, style=solid];
d421 -> d451  [key=2, style=dotted];
d423 -> d365  [key=2, style=dotted];
d423 -> d424  [key=0, style=solid];
d424 -> d425  [key=0, style=solid];
d424 -> d451  [key=2, style=dotted];
d426 -> d365  [key=2, style=dotted];
d426 -> d427  [key=0, style=solid];
d428 -> d447  [key=0, style=solid];
d428 -> d260  [key=2, style=dotted];
d434 -> d365  [key=2, style=dotted];
d434 -> d435  [key=0, style=solid];
d435 -> d436  [key=0, style=solid];
d435 -> d451  [key=2, style=dotted];
d437 -> d365  [key=2, style=dotted];
d437 -> d438  [key=0, style=solid];
d438 -> d439  [key=0, style=solid];
d438 -> d451  [key=2, style=dotted];
d440 -> d365  [key=2, style=dotted];
d440 -> d441  [key=0, style=solid];
d441 -> d442  [key=0, style=solid];
d441 -> d451  [key=2, style=dotted];
d443 -> d365  [key=2, style=dotted];
d443 -> d444  [key=0, style=solid];
d445 -> d447  [key=0, style=solid];
d445 -> d260  [key=2, style=dotted];
d657 -> d658  [key=0, style=solid];
d660 -> d661  [key=0, style=solid];
d663 -> d664  [key=0, style=solid];
d678 -> d679  [key=0, style=solid];
d681 -> d682  [key=0, style=solid];
d684 -> d685  [key=0, style=solid];
d687 -> d688  [key=0, style=solid];
d63 -> d60  [key=0, style=bold, color=blue];
d61 -> d62  [key=0, style=solid];
d236 -> d233  [key=0, style=bold, color=blue];
d234 -> d235  [key=0, style=solid];
d52 -> d117  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d52 -> d53  [key=0, style=solid];
d52 -> d54  [key=1, style=dashed, color=darkseagreen4, label=string];
d118 -> d117  [key=0, style=bold, color=blue];
d181 -> d117  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d181 -> d182  [key=0, style=solid];
d181 -> d183  [key=1, style=dashed, color=darkseagreen4, label=string];
d752 -> d47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d53  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d752 -> d35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
d49 -> d50  [key=0, style=solid];
d54 -> d55  [key=0, style=solid];
d55 -> d56  [key=0, style=solid];
d277 -> d278  [key=0, style=solid];
d277 -> d282  [key=0, style=solid];
d277 -> d279  [key=1, style=dashed, color=darkseagreen4, label=parentElement];
d279 -> d281  [key=1, style=dashed, color=darkseagreen4, label=attribute];
d279 -> d277  [key=0, style=solid];
d279 -> d280  [key=0, style=solid];
d376 -> d381  [key=0, style=solid];
d376 -> d377  [key=0, style=solid];
d376 -> d378  [key=1, style=dashed, color=darkseagreen4, label=attribute];
d376 -> d379  [key=1, style=dashed, color=darkseagreen4, label=attribute];
d388 -> d397  [key=0, style=solid];
d388 -> d453  [key=2, style=dotted];
d389 -> d397  [key=0, style=solid];
d389 -> d451  [key=2, style=dotted];
d746 -> d491  [key=2, style=dotted];
d746 -> d747  [key=0, style=solid];
d746 -> d748  [key=0, style=solid];
d748 -> d491  [key=2, style=dotted];
d748 -> d749  [key=0, style=solid];
d748 -> d750  [key=0, style=solid];
d179 -> d231  [key=0, style=solid];
d34 -> d109  [key=3, color=darkorchid, style=bold, label="Parameter variable string data"];
d34 -> d35  [key=0, style=solid];
d110 -> d109  [key=0, style=bold, color=blue];
d160 -> d109  [key=3, color=darkorchid, style=bold, label="Parameter variable string data"];
d160 -> d161  [key=0, style=solid];
d269 -> d257  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Converters.IXmlNode parent"];
d269 -> d270  [key=0, style=solid];
d282 -> d257  [key=0, style=bold, color=blue];
d268 -> d277  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
d268 -> d269  [key=0, style=solid];
d268 -> d272  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
d268 -> d274  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
d268 -> d275  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
d268 -> d276  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
d368 -> d372  [key=0, style=solid];
d368 -> d369  [key=0, style=solid];
d368 -> d398  [key=0, style=solid];
d368 -> d401  [key=0, style=solid];
d368 -> d415  [key=0, style=solid];
d368 -> d429  [key=0, style=solid];
d368 -> d446  [key=0, style=solid];
d457 -> d458  [key=0, style=solid];
d386 -> d387  [key=0, style=solid];
d390 -> d391  [key=0, style=solid];
d390 -> d258  [key=2, style=dotted];
d399 -> d447  [key=0, style=solid];
d399 -> d400  [key=0, style=solid];
d400 -> d447  [key=0, style=solid];
d400 -> d455  [key=2, style=dotted];
d407 -> d408  [key=0, style=solid];
d407 -> d409  [key=0, style=solid];
d409 -> d412  [key=0, style=solid];
d409 -> d410  [key=0, style=solid];
d410 -> d412  [key=0, style=solid];
d410 -> d411  [key=0, style=solid];
d427 -> d428  [key=0, style=solid];
d427 -> d451  [key=2, style=dotted];
d444 -> d445  [key=0, style=solid];
d444 -> d451  [key=2, style=dotted];
d446 -> d447  [key=0, style=solid];
d446 -> d322  [key=2, style=dotted];
d200 -> d254  [key=3, color=darkorchid, style=bold, label="Parameter variable XObject node"];
d200 -> d202  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d201  [key=0, style=solid];
d200 -> d203  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d204  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d205  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d206  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d207  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d208  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d209  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d210  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d211  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d212  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d213  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d214  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d215  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d216  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d200 -> d217  [key=1, style=dashed, color=darkseagreen4, label=XObject];
d266 -> d254  [key=0, style=bold, color=blue];
d261 -> d262  [key=0, style=solid];
d261 -> d263  [key=0, style=solid];
d262 -> d200  [key=2, style=dotted];
d262 -> d266  [key=0, style=solid];
d263 -> d264  [key=0, style=solid];
d263 -> d265  [key=0, style=solid];
d264 -> d266  [key=0, style=solid];
d264 -> d75  [key=2, style=dotted];
d297 -> d306  [key=0, style=solid];
d297 -> d308  [key=0, style=solid];
d297 -> d310  [key=0, style=solid];
d297 -> d298  [key=0, style=solid];
d297 -> d302  [key=0, style=solid];
d297 -> d304  [key=0, style=solid];
d297 -> d312  [key=0, style=solid];
d297 -> d314  [key=0, style=solid];
d297 -> d316  [key=0, style=solid];
d297 -> d318  [key=0, style=solid];
d297 -> d320  [key=0, style=solid];
d300 -> d321  [key=0, style=solid];
d320 -> d321  [key=0, style=solid];
d320 -> d322  [key=2, style=dotted];
d298 -> d299  [key=0, style=solid];
d303 -> d321  [key=0, style=solid];
d305 -> d321  [key=0, style=solid];
d313 -> d321  [key=0, style=solid];
d315 -> d321  [key=0, style=solid];
d317 -> d321  [key=0, style=solid];
d319 -> d321  [key=0, style=solid];
d293 -> d288  [key=0, style=bold, color=blue];
d361 -> d332  [key=0, style=bold, color=blue];
d353 -> d354  [key=0, style=solid];
d353 -> d355  [key=0, style=solid];
d354 -> d365  [key=2, style=dotted];
d354 -> d355  [key=0, style=solid];
d355 -> d356  [key=0, style=solid];
d355 -> d366  [key=2, style=dotted];
d360 -> d344  [key=0, style=solid];
d360 -> d367  [key=2, style=dotted];
d334 -> d336  [key=1, style=dashed, color=darkseagreen4, label=i];
d334 -> d335  [key=0, style=solid];
d334 -> d343  [key=1, style=dashed, color=darkseagreen4, label=i];
d342 -> d343  [key=0, style=solid];
d342 -> d284  [key=2, style=dotted];
d340 -> d341  [key=0, style=solid];
d340 -> d342  [key=1, style=dashed, color=darkseagreen4, label=nodes];
d340 -> d283  [key=2, style=dotted];
d346 -> d347  [key=0, style=solid];
d346 -> d323  [key=3, color=darkorchid, style=bold, label="Local variable bool writeArray"];
d352 -> d353  [key=0, style=solid];
d352 -> d354  [key=1, style=dashed, color=darkseagreen4, label=elementNames];
d352 -> d352  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
d349 -> d350  [key=0, style=solid];
d326 -> d323  [key=0, style=bold, color=blue];
d324 -> d325  [key=0, style=solid];
d324 -> d327  [key=2, style=dotted];
d324 -> d329  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d751 -> d745  [key=0, style=bold, color=blue];
d369 -> d370  [key=0, style=solid];
d408 -> d447  [key=0, style=solid];
d411 -> d447  [key=0, style=solid];
d458 -> d456  [key=0, style=bold, color=blue];
d740 -> d449  [key=0, style=bold, color=blue];
d739 -> d740  [key=0, style=solid];
d739 -> d741  [key=2, style=dotted];
d739 -> d742  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d415 -> d416  [key=0, style=solid];
d429 -> d430  [key=0, style=solid];
d90 -> d91  [key=0, style=solid];
d90 -> d94  [key=2, style=dotted];
d91 -> d92  [key=0, style=solid];
d189 -> d191  [key=0, style=solid];
d223 -> d192  [key=0, style=bold, color=blue];
d220 -> d221  [key=0, style=solid];
d220 -> d224  [key=2, style=dotted];
d222 -> d223  [key=0, style=solid];
d187 -> d190  [key=0, style=solid];
d187 -> d188  [key=0, style=solid];
d188 -> d189  [key=0, style=solid];
d759 -> d190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentWrapper"];
d759 -> d188  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentWrapper"];
d14 -> d12  [key=0, style=bold, color=blue];
d13 -> d6  [key=2, style=dotted];
d13 -> d14  [key=0, style=solid];
d13 -> d15  [key=2, style=dotted];
d144 -> d142  [key=0, style=bold, color=blue];
d143 -> d144  [key=0, style=solid];
d143 -> d136  [key=2, style=dotted];
d143 -> d145  [key=2, style=dotted];
d18 -> d16  [key=0, style=bold, color=blue];
d17 -> d6  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d17 -> d19  [key=2, style=dotted];
d148 -> d146  [key=0, style=bold, color=blue];
d147 -> d148  [key=0, style=solid];
d147 -> d136  [key=2, style=dotted];
d147 -> d141  [key=2, style=dotted];
d22 -> d20  [key=0, style=bold, color=blue];
d21 -> d6  [key=2, style=dotted];
d21 -> d22  [key=0, style=solid];
d21 -> d23  [key=2, style=dotted];
d151 -> d149  [key=0, style=bold, color=blue];
d150 -> d151  [key=0, style=solid];
d150 -> d136  [key=2, style=dotted];
d150 -> d141  [key=2, style=dotted];
d24 -> d105  [key=3, color=darkorchid, style=bold, label="Parameter variable string standalone"];
d24 -> d25  [key=0, style=solid];
d106 -> d105  [key=0, style=bold, color=blue];
d152 -> d105  [key=3, color=darkorchid, style=bold, label="Parameter variable string standalone"];
d152 -> d153  [key=0, style=solid];
d29 -> d107  [key=3, color=darkorchid, style=bold, label="Parameter variable string internalSubset"];
d29 -> d30  [key=0, style=solid];
d108 -> d107  [key=0, style=bold, color=blue];
d156 -> d107  [key=3, color=darkorchid, style=bold, label="Parameter variable string internalSubset"];
d156 -> d157  [key=0, style=solid];
d5 -> d3  [key=0, style=bold, color=blue];
d4 -> d6  [key=2, style=dotted];
d4 -> d5  [key=0, style=solid];
d4 -> d7  [key=2, style=dotted];
d135 -> d133  [key=0, style=bold, color=blue];
d134 -> d135  [key=0, style=solid];
d134 -> d136  [key=2, style=dotted];
d134 -> d137  [key=2, style=dotted];
d731 -> d737  [key=0, style=solid];
d734 -> d737  [key=0, style=solid];
d201 -> d202  [key=0, style=solid];
d201 -> d203  [key=0, style=solid];
d218 -> d200  [key=0, style=bold, color=blue];
d65 -> d121  [key=3, color=darkorchid, style=bold, label="Parameter variable string namespaceUri"];
d65 -> d66  [key=0, style=solid];
d122 -> d121  [key=0, style=bold, color=blue];
d241 -> d121  [key=3, color=darkorchid, style=bold, label="Parameter variable string namespaceUri"];
d241 -> d242  [key=0, style=solid];
d343 -> d335  [key=0, style=solid];
d343 -> d343  [key=1, style=dashed, color=darkseagreen4, label=i];
d280 -> d281  [key=0, style=solid];
d280 -> d279  [key=0, style=solid];
d378 -> d380  [key=1, style=dashed, color=darkseagreen4, label=namespacePrefix];
d378 -> d379  [key=0, style=solid];
d379 -> d380  [key=0, style=solid];
d168 -> d232  [key=0, style=solid];
d62 -> d63  [key=0, style=solid];
d62 -> d64  [key=2, style=dotted];
d235 -> d236  [key=0, style=solid];
d235 -> d224  [key=2, style=dotted];
d56 -> d52  [key=0, style=bold, color=blue];
d184 -> d181  [key=0, style=bold, color=blue];
d182 -> d174  [key=2, style=dotted];
d182 -> d183  [key=0, style=solid];
d183 -> d179  [key=2, style=dotted];
d183 -> d180  [key=2, style=dotted];
d183 -> d175  [key=2, style=dotted];
d183 -> d184  [key=0, style=solid];
d25 -> d26  [key=0, style=solid];
d25 -> d27  [key=2, style=dotted];
d25 -> d28  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d30 -> d32  [key=2, style=dotted];
d30 -> d33  [key=2, style=dotted];
d35 -> d6  [key=2, style=dotted];
d35 -> d36  [key=0, style=solid];
d35 -> d37  [key=2, style=dotted];
d276 -> d277  [key=0, style=solid];
d276 -> d285  [key=2, style=dotted];
d273 -> d277  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
d273 -> d276  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
d273 -> d274  [key=0, style=solid];
d273 -> d283  [key=2, style=dotted];
d273 -> d275  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
d377 -> d376  [key=0, style=solid];
d377 -> d378  [key=0, style=solid];
d387 -> d388  [key=0, style=solid];
d387 -> d389  [key=0, style=solid];
d747 -> d751  [key=0, style=solid];
d749 -> d751  [key=0, style=solid];
d750 -> d751  [key=0, style=solid];
d214 -> d179  [key=2, style=dotted];
d214 -> d218  [key=0, style=solid];
d231 -> d179  [key=0, style=bold, color=blue];
d36 -> d34  [key=0, style=bold, color=blue];
d162 -> d160  [key=0, style=bold, color=blue];
d161 -> d162  [key=0, style=solid];
d161 -> d163  [key=2, style=dotted];
d161 -> d164  [key=2, style=dotted];
d270 -> d270  [key=1, style=dashed, color=darkseagreen4, label=parent];
d270 -> d271  [key=0, style=solid];
d270 -> d275  [key=0, style=solid];
d270 -> d274  [key=1, style=dashed, color=darkseagreen4, label=parent];
d275 -> d282  [key=0, style=solid];
d275 -> d276  [key=0, style=solid];
d272 -> d273  [key=0, style=solid];
d272 -> d274  [key=0, style=solid];
d274 -> d270  [key=0, style=solid];
d274 -> d284  [key=2, style=dotted];
d398 -> d399  [key=0, style=solid];
d401 -> d402  [key=0, style=solid];
d764 -> d457  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
d406 -> d407  [key=0, style=solid];
d203 -> d204  [key=0, style=solid];
d203 -> d205  [key=0, style=solid];
d204 -> d218  [key=0, style=solid];
d204 -> d168  [key=2, style=dotted];
d205 -> d206  [key=0, style=solid];
d205 -> d207  [key=0, style=solid];
d206 -> d218  [key=0, style=solid];
d206 -> d198  [key=2, style=dotted];
d207 -> d208  [key=0, style=solid];
d207 -> d209  [key=0, style=solid];
d208 -> d218  [key=0, style=solid];
d208 -> d163  [key=2, style=dotted];
d209 -> d210  [key=0, style=solid];
d209 -> d211  [key=0, style=solid];
d210 -> d218  [key=0, style=solid];
d210 -> d193  [key=2, style=dotted];
d211 -> d212  [key=0, style=solid];
d211 -> d213  [key=0, style=solid];
d212 -> d218  [key=0, style=solid];
d212 -> d195  [key=2, style=dotted];
d213 -> d214  [key=0, style=solid];
d213 -> d215  [key=0, style=solid];
d215 -> d216  [key=0, style=solid];
d215 -> d217  [key=0, style=solid];
d216 -> d218  [key=0, style=solid];
d216 -> d128  [key=2, style=dotted];
d217 -> d218  [key=0, style=solid];
d217 -> d219  [key=2, style=dotted];
d265 -> d266  [key=0, style=solid];
d265 -> d267  [key=2, style=dotted];
d75 -> d76  [key=0, style=solid];
d302 -> d303  [key=0, style=solid];
d304 -> d305  [key=0, style=solid];
d312 -> d313  [key=0, style=solid];
d314 -> d315  [key=0, style=solid];
d316 -> d317  [key=0, style=solid];
d318 -> d319  [key=0, style=solid];
d325 -> d326  [key=0, style=solid];
d325 -> d328  [key=2, style=dotted];
d329 -> d330  [key=0, style=solid];
d742 -> d743  [key=0, style=solid];
d756 -> d90  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
d756 -> d91  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
d756 -> d76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
d760 -> d220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XContainerWrapper"];
d760 -> d221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XContainerWrapper"];
d221 -> d222  [key=0, style=solid];
d26 -> d24  [key=0, style=bold, color=blue];
d154 -> d152  [key=0, style=bold, color=blue];
d153 -> d154  [key=0, style=solid];
d153 -> d125  [key=2, style=dotted];
d153 -> d155  [key=2, style=dotted];
d31 -> d29  [key=0, style=bold, color=blue];
d158 -> d156  [key=0, style=bold, color=blue];
d157 -> d158  [key=0, style=solid];
d157 -> d128  [key=2, style=dotted];
d157 -> d159  [key=2, style=dotted];
d67 -> d65  [key=0, style=bold, color=blue];
d66 -> d67  [key=0, style=solid];
d66 -> d68  [key=2, style=dotted];
d243 -> d241  [key=0, style=bold, color=blue];
d242 -> d243  [key=0, style=solid];
d242 -> d68  [key=2, style=dotted];
d232 -> d168  [key=0, style=bold, color=blue];
d753 -> d62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
d753 -> d66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
d753 -> d58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
d762 -> d235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
d762 -> d242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
d163 -> d197  [key=0, style=solid];
d271 -> d270  [key=0, style=solid];
d271 -> d272  [key=0, style=solid];
d402 -> d403  [key=0, style=solid];
d405 -> d406  [key=0, style=solid];
d198 -> d199  [key=0, style=solid];
d193 -> d194  [key=0, style=solid];
d195 -> d196  [key=0, style=solid];
d128 -> d129  [key=0, style=solid];
d219 -> d225  [key=0, style=solid];
d77 -> d75  [key=0, style=bold, color=blue];
d86 -> d75  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d76 -> d77  [key=0, style=solid];
d331 -> d329  [key=0, style=bold, color=blue];
d330 -> d331  [key=0, style=solid];
d744 -> d742  [key=0, style=bold, color=blue];
d743 -> d744  [key=0, style=solid];
d125 -> d126  [key=0, style=solid];
d58 -> d59  [key=0, style=solid];
d197 -> d163  [key=0, style=bold, color=blue];
d403 -> d404  [key=0, style=solid];
d404 -> d405  [key=0, style=solid];
d199 -> d198  [key=0, style=bold, color=blue];
d194 -> d193  [key=0, style=bold, color=blue];
d196 -> d195  [key=0, style=bold, color=blue];
d130 -> d128  [key=0, style=bold, color=blue];
d129 -> d130  [key=0, style=solid];
d226 -> d219  [key=0, style=bold, color=blue];
d225 -> d226  [key=0, style=solid];
d78 -> d86  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
d78 -> d79  [key=0, style=solid];
d78 -> d81  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
d78 -> d83  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
d78 -> d85  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
d79 -> d86  [key=0, style=solid];
d79 -> d80  [key=0, style=solid];
d79 -> d82  [key=0, style=solid];
d79 -> d84  [key=0, style=solid];
d87 -> d78  [key=0, style=bold, color=blue];
d127 -> d125  [key=0, style=bold, color=blue];
d126 -> d127  [key=0, style=solid];
d57 -> d58  [key=0, style=solid];
d59 -> d57  [key=0, style=bold, color=blue];
d758 -> d129  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentTypeWrapper"];
d761 -> d225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XObjectWrapper"];
d81 -> d87  [key=0, style=solid];
d81 -> d57  [key=2, style=dotted];
d83 -> d87  [key=0, style=solid];
d83 -> d69  [key=2, style=dotted];
d85 -> d87  [key=0, style=solid];
d85 -> d72  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d82 -> d83  [key=0, style=solid];
d84 -> d85  [key=0, style=solid];
d757 -> d126  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDeclarationWrapper"];
d69 -> d70  [key=0, style=solid];
d72 -> d73  [key=0, style=solid];
d71 -> d69  [key=0, style=bold, color=blue];
d70 -> d71  [key=0, style=solid];
d74 -> d72  [key=0, style=bold, color=blue];
d73 -> d74  [key=0, style=solid];
d754 -> d70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDeclarationWrapper"];
d755 -> d73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentTypeWrapper"];
}
