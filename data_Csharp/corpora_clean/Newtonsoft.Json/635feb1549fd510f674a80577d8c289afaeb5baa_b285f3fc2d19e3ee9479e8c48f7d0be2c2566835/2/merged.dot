digraph  {
m0_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="BsonObjectId.cs"];
m0_8 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="BsonObjectId.cs"];
m0_7 [label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="31-31", cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="BsonObjectId.cs"];
m0_0 [label="Entry Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", span="45-45", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs"];
m0_1 [label="ValidationUtils.ArgumentNotNull(value, nameof(value))", span="47-47", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs"];
m0_2 [label="value.Length != 12", span="48-48", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs"];
m0_3 [label="throw new ArgumentException(''An ObjectId must be 12 bytes'', nameof(value));", span="50-50", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs"];
m0_4 [label="Value = value", span="53-53", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs"];
m0_5 [label="Exit Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", span="45-45", cluster="Newtonsoft.Json.Bson.BsonObjectId.BsonObjectId(byte[])", file="BsonObjectId.cs"];
m0_9 [label="Newtonsoft.Json.Bson.BsonObjectId", span="", file="BsonObjectId.cs"];
m1_22 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="BsonWriter.cs"];
m1_5 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="BsonWriter.cs"];
m1_6 [label="User user = new User()", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="BsonWriter.cs"];
m1_7 [label="user.UserName = (string)reader.Value", span="50-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="BsonWriter.cs"];
m1_8 [label="return user;", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="BsonWriter.cs"];
m1_9 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="BsonWriter.cs"];
m1_11 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", file="BsonWriter.cs"];
m1_12 [label="return objectType == typeof(User);", span="57-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", file="BsonWriter.cs"];
m1_13 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.CanConvert(System.Type)", file="BsonWriter.cs"];
m1_20 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="BsonWriter.cs"];
m1_14 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", file="BsonWriter.cs"];
m1_15 [label="User user = new User\r\n            {\r\n                UserName = @''domain\username''\r\n            }", span="72-75", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", file="BsonWriter.cs"];
m1_16 [label="string json = JsonConvert.SerializeObject(user, Formatting.Indented)", span="77-77", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", file="BsonWriter.cs"];
m1_17 [label="Console.WriteLine(json)", span="79-79", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", file="BsonWriter.cs"];
m1_18 [label="Assert.AreEqual(@''''''domain\\username'''''', json)", span="83-83", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", file="BsonWriter.cs"];
m1_19 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.Example()", file="BsonWriter.cs"];
m1_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="40-40", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BsonWriter.cs"];
m1_1 [label="User user = (User)value", span="42-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BsonWriter.cs"];
m1_2 [label="writer.WriteValue(user.UserName)", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BsonWriter.cs"];
m1_3 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="40-40", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.UserConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="BsonWriter.cs"];
m1_10 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.User.User()", span="62-62", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonConverterAttributeClass.User.User()", file="BsonWriter.cs"];
m1_21 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="BsonWriter.cs"];
m1_4 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="BsonWriter.cs"];
m2_8 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="DefaultValueHandlingTests.cs"];
m2_12 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DefaultValueHandlingTests.cs"];
m2_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", span="38-38", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="DefaultValueHandlingTests.cs"];
m2_1 [label="string xml = @''<?xml version='1.0' standalone='no'?>\r\n            <root>\r\n              <person id='1'>\r\n              <name>Alan</name>\r\n              <url>http://www.google.com</url>\r\n              </person>\r\n              <person id='2'>\r\n              <name>Louis</name>\r\n              <url>http://www.yahoo.com</url>\r\n              </person>\r\n            </root>''", span="41-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="DefaultValueHandlingTests.cs"];
m2_2 [label="XmlDocument doc = new XmlDocument()", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="DefaultValueHandlingTests.cs"];
m2_3 [label="doc.LoadXml(xml)", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="DefaultValueHandlingTests.cs"];
m2_4 [label="string json = JsonConvert.SerializeXmlNode(doc)", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="DefaultValueHandlingTests.cs"];
m2_5 [label="Console.WriteLine(json)", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="DefaultValueHandlingTests.cs"];
m2_6 [label="Assert.AreEqual(@''{''''?xml'''':{''''@version'''':''''1.0'''',''''@standalone'''':''''no''''},''''root'''':{''''person'''':[{''''@id'''':''''1'''',''''name'''':''''Alan'''',''''url'''':''''http://www.google.com''''},{''''@id'''':''''2'''',''''name'''':''''Louis'''',''''url'''':''''http://www.yahoo.com''''}]}}'', json)", span="81-81", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="DefaultValueHandlingTests.cs"];
m2_7 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", span="38-38", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Xml.ConvertXmlToJson.Example()", file="DefaultValueHandlingTests.cs"];
m2_10 [label="Entry Unk.SerializeXmlNode", span="", cluster="Unk.SerializeXmlNode", file="DefaultValueHandlingTests.cs"];
m2_11 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="DefaultValueHandlingTests.cs"];
m2_9 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="DefaultValueHandlingTests.cs"];
m3_11 [label="Entry Unk.creator", span="", cluster="Unk.creator", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_81 [label="Entry System.TimeSpan.TimeSpan()", span="0-0", cluster="System.TimeSpan.TimeSpan()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_47 [label="Entry Unk.>", span="", cluster="Unk.>", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_101 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_56 [label="Entry Unk.setter", span="", cluster="Unk.setter", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_18 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_129 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", span="221-221", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_132 [label="MethodCall<object, object> call = DynamicReflectionDelegateFactory.Instance.CreateMethodCall<object>(methodInfo)", span="227-227", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_130 [label="MethodInfo methodInfo = typeof(DynamicReflectionDelegateFactoryTests).GetMethod(nameof(StructMethod), new[] { typeof(TestStruct) })", span="223-223", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_131 [label="Assert.IsNotNull(methodInfo)", span="225-225", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_133 [label="object result = call(null, new TestStruct(123))", span="229-229", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_134 [label="Assert.IsNotNull(result)", span="230-230", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_135 [label="TestStruct s = (TestStruct)result", span="232-232", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_136 [label="Assert.AreEqual(246, s.Value)", span="233-233", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_137 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", span="221-221", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStructMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_12 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_31 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", span="81-81", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_36 [label="Assert.IsNotNull(o)", span="89-89", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_37 [label="Assert.AreEqual(''Input'', o.Input)", span="90-90", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_38 [label="Assert.AreEqual(true, o.B1)", span="91-91", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_39 [label="Assert.AreEqual(false, o.B2)", span="92-92", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_35 [label="OutAndRefTestClass o = (OutAndRefTestClass)creator(args)", span="88-88", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_33 [label="var creator = DynamicReflectionDelegateFactory.Instance.CreateParameterizedConstructor(constructor)", span="85-85", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_34 [label="object[] args = new object[] { ''Input'', true, null }", span="87-87", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_32 [label="ConstructorInfo constructor = typeof(OutAndRefTestClass).GetConstructors().Single(c => c.GetParameters().Count() == 3)", span="83-83", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_40 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", span="81-81", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndRefBoolAndRefBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_9 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_91 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", span="160-160", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_94 [label="MethodCall<object, object> call = DynamicReflectionDelegateFactory.Instance.CreateMethodCall<object>(castMethodInfo)", span="166-166", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_92 [label="MethodInfo castMethodInfo = typeof(JsonSerializerTest.DictionaryKey).GetMethod(''op_Implicit'', new[] { typeof(string) })", span="162-162", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_93 [label="Assert.IsNotNull(castMethodInfo)", span="164-164", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_95 [label="object result = call(null, ''First!'')", span="168-168", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_96 [label="Assert.IsNotNull(result)", span="169-169", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_97 [label="JsonSerializerTest.DictionaryKey key = (JsonSerializerTest.DictionaryKey)result", span="171-171", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_98 [label="Assert.AreEqual(''First!'', key.Value)", span="172-172", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_99 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", span="160-160", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateStaticMethodCall()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_90 [label="Entry System.Version.Version(string)", span="0-0", cluster="System.Version.Version(string)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_82 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", span="147-147", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_83 [label="ExceptionAssert.Throws<InvalidCastException>(() =>\r\n            {\r\n                Movie m = new Movie();\r\n\r\n                Action<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(typeof(Movie).GetProperty(''Name''));\r\n\r\n                setter(m, new Version(''1.1.1.1''));\r\n            }, ''Unable to cast object of type 'System.Version' to type 'System.String'.'')", span="149-156", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", color=green, community=0, file="DynamicReflectionDelegateFactoryTests.cs"];
m3_84 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", span="147-147", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectValue()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_5 [label="Console.WriteLine(jsonIgnoreNullValues)", span="71-71", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_6 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Nigal Newborn'''',\r\n  ''''Age'''': 1\r\n}'', jsonIgnoreNullValues)", span="78-81", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_4 [label="string jsonIgnoreNullValues = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", span="66-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_2 [label="string jsonIncludeNullValues = JsonConvert.SerializeObject(person, Formatting.Indented)", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_3 [label="Console.WriteLine(jsonIncludeNullValues)", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_1 [label="Person person = new Person\r\n            {\r\n                Name = ''Nigal Newborn'',\r\n                Age = 1\r\n            }", span="50-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_7 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.NullValueHandlingIgnore.Example()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_113 [label="Entry Unk.call", span="", cluster="Unk.call", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_100 [label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0", cluster="System.Type.GetMethod(string, System.Type[])", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_10 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_44 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateGetWithBadObjectTarget()", span="96-96", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateGetWithBadObjectTarget()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_45 [label="ExceptionAssert.Throws<InvalidCastException>(() =>\r\n            {\r\n                Person p = new Person();\r\n                p.Name = ''Hi'';\r\n\r\n                Func<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateGet<object>(typeof(Movie).GetProperty(''Name''));\r\n\r\n                setter(p);\r\n            }, ''Unable to cast object of type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' to type 'Newtonsoft.Json.Tests.TestObjects.Movie'.'')", span="98-106", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateGetWithBadObjectTarget()", color=green, community=0, file="DynamicReflectionDelegateFactoryTests.cs"];
m3_46 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateGetWithBadObjectTarget()", span="96-96", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateGetWithBadObjectTarget()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_8 [label="Entry System.Type.GetConstructors()", span="0-0", cluster="System.Type.GetConstructors()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_17 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_123 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct.TestStruct(int)", span="207-207", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct.TestStruct(int)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_124 [label="Value = i", span="209-209", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct.TestStruct(int)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_125 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct.TestStruct(int)", span="207-207", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct.TestStruct(int)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_112 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_122 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_70 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadTarget()", span="130-130", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadTarget()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_71 [label="ExceptionAssert.Throws<InvalidCastException>(() =>\r\n            {\r\n                object structTest = new StructTest();\r\n\r\n                Action<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(typeof(StructTest).GetProperty(''StringProperty''));\r\n\r\n                setter(structTest, ''Hi'');\r\n\r\n                Assert.AreEqual(''Hi'', ((StructTest)structTest).StringProperty);\r\n\r\n                setter(new TimeSpan(), ''Hi'');\r\n            }, ''Specified cast is not valid.'')", span="132-143", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadTarget()", color=green, community=0, file="DynamicReflectionDelegateFactoryTests.cs"];
m3_72 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadTarget()", span="130-130", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadTarget()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_13 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_102 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", span="176-176", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_105 [label="var call = DynamicReflectionDelegateFactory.Instance.CreateGet<Person>(namePropertyInfo)", span="182-182", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_103 [label="PropertyInfo namePropertyInfo = typeof(Person).GetProperty(nameof(Person.Name))", span="178-178", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_104 [label="Assert.IsNotNull(namePropertyInfo)", span="180-180", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_106 [label="Person p = new Person()", span="184-184", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_108 [label="object result = call(p)", span="187-187", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_107 [label="p.Name = ''Name!''", span="185-185", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_109 [label="Assert.IsNotNull(result)", span="188-188", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_110 [label="Assert.AreEqual(''Name!'', (string)result)", span="190-190", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_111 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", span="176-176", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreatePropertyGetter()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_126 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", span="215-215", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_127 [label="return new TestStruct(s.Value + s.Value);", span="217-217", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_128 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", span="215-215", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.StructMethod(Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_57 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", span="110-110", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_58 [label="ExceptionAssert.Throws<InvalidCastException>(() =>\r\n            {\r\n                Person p = new Person();\r\n                Movie m = new Movie();\r\n\r\n                Action<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(typeof(Movie).GetProperty(''Name''));\r\n\r\n                setter(m, ''Hi'');\r\n\r\n                Assert.AreEqual(m.Name, ''Hi'');\r\n\r\n                setter(p, ''Hi'');\r\n\r\n                Assert.AreEqual(p.Name, ''Hi'');\r\n            }, ''Unable to cast object of type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' to type 'Newtonsoft.Json.Tests.TestObjects.Movie'.'')", span="112-126", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", color=green, community=0, file="DynamicReflectionDelegateFactoryTests.cs"];
m3_59 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", span="110-110", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.CreateSetWithBadObjectTarget()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_54 [label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_80 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_55 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_41 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_48 [label="Entry lambda expression", span="98-106", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_60 [label="Entry lambda expression", span="112-126", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_73 [label="Entry lambda expression", span="132-143", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_85 [label="Entry lambda expression", span="149-156", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_51 [label="Func<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateGet<object>(typeof(Movie).GetProperty(''Name''))", span="103-103", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_63 [label="Action<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(typeof(Movie).GetProperty(''Name''))", span="117-117", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_75 [label="Action<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(typeof(StructTest).GetProperty(''StringProperty''))", span="136-136", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_87 [label="Action<object, object> setter = DynamicReflectionDelegateFactory.Instance.CreateSet<object>(typeof(Movie).GetProperty(''Name''))", span="153-153", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_53 [label="Exit lambda expression", span="98-106", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_49 [label="Person p = new Person()", span="100-100", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_68 [label="Exit lambda expression", span="112-126", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_61 [label="Person p = new Person()", span="114-114", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_79 [label="Exit lambda expression", span="132-143", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_74 [label="object structTest = new StructTest()", span="134-134", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_89 [label="Exit lambda expression", span="149-156", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_86 [label="Movie m = new Movie()", span="151-151", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_50 [label="p.Name = ''Hi''", span="101-101", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_52 [label="setter(p)", span="105-105", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_62 [label="Movie m = new Movie()", span="115-115", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_64 [label="setter(m, ''Hi'')", span="119-119", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_66 [label="setter(p, ''Hi'')", span="123-123", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_76 [label="setter(structTest, ''Hi'')", span="138-138", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_78 [label="setter(new TimeSpan(), ''Hi'')", span="142-142", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_88 [label="setter(m, new Version(''1.1.1.1''))", span="155-155", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_67 [label="Assert.AreEqual(p.Name, ''Hi'')", span="125-125", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_77 [label="Assert.AreEqual(''Hi'', ((StructTest)structTest).StringProperty)", span="140-140", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_65 [label="Assert.AreEqual(m.Name, ''Hi'')", span="121-121", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_14 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_28 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_16 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_15 [label="c.GetParameters().Count() == 1", span="56-56", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_30 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_29 [label="c.GetParameters().Count() == 2", span="69-69", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_42 [label="c.GetParameters().Count() == 3", span="83-83", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_43 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_69 [label="Entry Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.Movie.Movie()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_19 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", span="67-67", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_24 [label="Assert.IsNotNull(o)", span="75-75", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_25 [label="Assert.AreEqual(''Input'', o.Input)", span="76-76", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_26 [label="Assert.AreEqual(true, o.B1)", span="77-77", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_23 [label="OutAndRefTestClass o = (OutAndRefTestClass)creator(args)", span="74-74", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_21 [label="var creator = DynamicReflectionDelegateFactory.Instance.CreateParameterizedConstructor(constructor)", span="71-71", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_22 [label="object[] args = new object[] { ''Input'', false }", span="73-73", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_20 [label="ConstructorInfo constructor = typeof(OutAndRefTestClass).GetConstructors().Single(c => c.GetParameters().Count() == 2)", span="69-69", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_27 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", span="67-67", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorWithRefStringAndOutBool()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_114 [label="Entry Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", span="194-194", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_115 [label="Func<object> creator1 = DynamicReflectionDelegateFactory.Instance.CreateDefaultConstructor<object>(typeof(MyStruct))", span="196-196", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_118 [label="Func<MyStruct> creator2 = DynamicReflectionDelegateFactory.Instance.CreateDefaultConstructor<MyStruct>(typeof(MyStruct))", span="200-200", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_116 [label="MyStruct myStruct1 = (MyStruct)creator1.Invoke()", span="197-197", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_117 [label="Assert.AreEqual(0, myStruct1.IntProperty)", span="198-198", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_119 [label="MyStruct myStruct2 = creator2.Invoke()", span="201-201", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_120 [label="Assert.AreEqual(0, myStruct2.IntProperty)", span="202-202", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_121 [label="Exit Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", span="194-194", cluster="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.ConstructorStruct()", file="DynamicReflectionDelegateFactoryTests.cs"];
m3_138 [label="out Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct", span="", file="DynamicReflectionDelegateFactoryTests.cs"];
m4_0 [label="Entry Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", span="34-34", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="ErrorContext.cs"];
m4_1 [label="OriginalObject = originalObject", span="36-36", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="ErrorContext.cs"];
m4_2 [label="Member = member", span="37-37", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="ErrorContext.cs"];
m4_3 [label="Error = error", span="38-38", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="ErrorContext.cs"];
m4_4 [label="Path = path", span="39-39", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="ErrorContext.cs"];
m4_5 [label="Exit Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", span="34-34", cluster="Newtonsoft.Json.Serialization.ErrorContext.ErrorContext(object, object, string, System.Exception)", file="ErrorContext.cs"];
m4_6 [label="Newtonsoft.Json.Serialization.ErrorContext", span="", file="ErrorContext.cs"];
m5_0 [label="Entry Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorEventArgs(object, Newtonsoft.Json.Serialization.ErrorContext)", span="51-51", cluster="Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorEventArgs(object, Newtonsoft.Json.Serialization.ErrorContext)", file="ErrorEventArgs.cs"];
m5_1 [label="CurrentObject = currentObject", span="53-53", cluster="Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorEventArgs(object, Newtonsoft.Json.Serialization.ErrorContext)", file="ErrorEventArgs.cs"];
m5_2 [label="ErrorContext = errorContext", span="54-54", cluster="Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorEventArgs(object, Newtonsoft.Json.Serialization.ErrorContext)", file="ErrorEventArgs.cs"];
m5_3 [label="Exit Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorEventArgs(object, Newtonsoft.Json.Serialization.ErrorContext)", span="51-51", cluster="Newtonsoft.Json.Serialization.ErrorEventArgs.ErrorEventArgs(object, Newtonsoft.Json.Serialization.ErrorContext)", file="ErrorEventArgs.cs"];
m5_4 [label="Newtonsoft.Json.Serialization.ErrorEventArgs", span="", file="ErrorEventArgs.cs"];
m7_17 [label="Entry object.ReferenceEquals(object, object)", span="0-0", cluster="object.ReferenceEquals(object, object)", file="JPath.cs"];
m7_10 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JPath.cs"];
m7_18 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JPath.cs"];
m7_11 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JPath.cs"];
m7_16 [label="Entry System.Console.WriteLine(bool)", span="0-0", cluster="System.Console.WriteLine(bool)", file="JPath.cs"];
m7_19 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JPath.cs"];
m7_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", span="43-43", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_1 [label="JObject o1 = new JObject\r\n            {\r\n                { ''String'', ''A string!'' },\r\n                { ''Items'', new JArray(1, 2) }\r\n            }", span="46-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_2 [label="Console.WriteLine(o1.ToString())", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_3 [label="JObject o2 = (JObject)o1.DeepClone()", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_5 [label="Console.WriteLine(JToken.DeepEquals(o1, o2))", span="72-72", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_6 [label="Console.WriteLine(Object.ReferenceEquals(o1, o2))", span="75-75", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_7 [label="Assert.IsTrue(JToken.DeepEquals(o1, o2))", span="79-79", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_8 [label="Assert.IsFalse(Object.ReferenceEquals(o1, o2))", span="80-80", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_4 [label="Console.WriteLine(o2.ToString())", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_9 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", span="43-43", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.Clone.Example()", file="JPath.cs"];
m7_13 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JPath.cs"];
m7_14 [label="Entry Newtonsoft.Json.Linq.JToken.DeepClone()", span="2082-2082", cluster="Newtonsoft.Json.Linq.JToken.DeepClone()", file="JPath.cs"];
m7_12 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JPath.cs"];
m7_15 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JPath.cs"];
m8_49 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonArrayContract.cs"];
m8_52 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", span="118-118", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type)", file="JsonArrayContract.cs"];
m8_48 [label="Entry System.Type.GetArrayRank()", span="0-0", cluster="System.Type.GetArrayRank()", file="JsonArrayContract.cs"];
m8_50 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonArrayContract.cs"];
m8_53 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="340-340", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JsonArrayContract.cs"];
m8_47 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="JsonArrayContract.cs"];
m8_57 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="269-269", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_58 [label="_genericWrapperCreator == null", span="271-271", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_66 [label="return (IWrappedCollection)_genericWrapperCreator(list);", span="291-291", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_59 [label="_genericWrapperType = typeof(CollectionWrapper<>).MakeGenericType(CollectionItemType)", span="273-273", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_60 [label="Type constructorArgument", span="275-275", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_61 [label="ReflectionUtils.InheritsGenericDefinition(_genericCollectionDefinitionType, typeof(List<>))\r\n                    || _genericCollectionDefinitionType.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="277-278", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_62 [label="constructorArgument = typeof(ICollection<>).MakeGenericType(CollectionItemType)", span="280-280", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_63 [label="constructorArgument = _genericCollectionDefinitionType", span="284-284", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_64 [label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { constructorArgument })", span="287-287", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_65 [label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(genericWrapperConstructor)", span="288-288", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_67 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="269-269", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs"];
m8_79 [label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3038-3038", cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", file="JsonArrayContract.cs"];
m8_69 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="73-73", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="JsonArrayContract.cs"];
m8_70 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonArrayContract.cs"];
m8_51 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="JsonArrayContract.cs"];
m8_71 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="294-294", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_72 [label="_genericTemporaryCollectionCreator == null", span="296-296", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_73 [label="Type collectionItemType = (IsMultidimensionalArray || CollectionItemType == null)\r\n                    ? typeof(object)\r\n                    : CollectionItemType", span="299-301", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_76 [label="return (IList)_genericTemporaryCollectionCreator();", span="307-307", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_74 [label="Type temporaryListType = typeof(List<>).MakeGenericType(collectionItemType)", span="303-303", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_75 [label="_genericTemporaryCollectionCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryListType)", span="304-304", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_77 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", span="294-294", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateTemporaryCollection()", file="JsonArrayContract.cs"];
m8_68 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JsonArrayContract.cs"];
m8_54 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonArrayContract.cs"];
m8_46 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="386-386", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonArrayContract.cs"];
m8_55 [label="Entry System.Type.IsGenericType()", span="153-153", cluster="System.Type.IsGenericType()", file="JsonArrayContract.cs"];
m8_56 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="JsonArrayContract.cs"];
m8_78 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="JsonArrayContract.cs"];
m8_0 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_1 [label="ContractType = JsonContractType.Array", span="120-120", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_11 [label="typeof(IList).IsAssignableFrom(underlyingType)", span="135-135", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_12 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="137-137", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_14 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(underlyingType)", span="143-143", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_15 [label="underlyingType == typeof(IList)", span="146-146", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_18 [label="_parameterizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(underlyingType, CollectionItemType)", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_19 [label="IsReadOnlyOrFixedSize = ReflectionUtils.InheritsGenericDefinition(underlyingType, typeof(ReadOnlyCollection<>))", span="156-156", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_21 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="159-159", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_23 [label="ReflectionUtils.IsGenericDefinition(underlyingType, typeof(ICollection<>))\r\n                    || ReflectionUtils.IsGenericDefinition(underlyingType, typeof(IList<>))", span="163-164", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_25 [label="_parameterizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(underlyingType, CollectionItemType)", span="176-176", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_28 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IEnumerable<>), out tempCollectionType)", span="202-202", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_32 [label="_parameterizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(underlyingType, CollectionItemType)", span="211-211", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_33 [label="underlyingType.IsGenericType() && underlyingType.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="217-217", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_2 [label="IsArray = CreatedType.IsArray", span="121-121", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_3 [label="bool canDeserialize", span="123-123", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_4 [label="Type tempCollectionType", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_5 [label=IsArray, span="126-126", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_6 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_7 [label="IsReadOnlyOrFixedSize = true", span="129-129", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_8 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_9 [label="canDeserialize = true", span="132-132", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_10 [label="IsMultidimensionalArray = (IsArray && UnderlyingType.GetArrayRank() > 1)", span="133-133", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_44 [label="CanDeserialize = canDeserialize", span="241-241", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_13 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="139-139", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_16 [label="CreatedType = typeof(List<object>)", span="148-148", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_17 [label="CollectionItemType != null", span="151-151", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_20 [label="canDeserialize = true", span="157-157", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_22 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="161-161", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_24 [label="CreatedType = typeof(List<>).MakeGenericType(CollectionItemType)", span="166-166", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_26 [label="canDeserialize = true", span="177-177", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_27 [label="ShouldCreateWrapper = true", span="178-178", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_29 [label="CollectionItemType = tempCollectionType.GetGenericArguments()[0]", span="204-204", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_42 [label="canDeserialize = false", span="237-237", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_34 [label="_genericCollectionDefinitionType = tempCollectionType", span="219-219", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_30 [label="ReflectionUtils.IsGenericDefinition(UnderlyingType, typeof(IEnumerable<>))", span="206-206", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_31 [label="CreatedType = typeof(List<>).MakeGenericType(CollectionItemType)", span="208-208", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_38 [label="_genericCollectionDefinitionType = typeof(List<>).MakeGenericType(CollectionItemType)", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_35 [label="IsReadOnlyOrFixedSize = false", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_36 [label="ShouldCreateWrapper = false", span="222-222", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_37 [label="canDeserialize = true", span="223-223", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_39 [label="IsReadOnlyOrFixedSize = true", span="229-229", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_40 [label="ShouldCreateWrapper = true", span="230-230", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_41 [label="canDeserialize = HasParameterizedCreatorInternal", span="231-231", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_43 [label="ShouldCreateWrapper = true", span="238-238", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_45 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="117-117", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs"];
m8_80 [label="Newtonsoft.Json.Serialization.JsonArrayContract", span="", file="JsonArrayContract.cs"];
m9_2207 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonContract.cs"];
m9_1317 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonContract.cs"];
m9_3676 [label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonContract.cs"];
m9_1965 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4396-4396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonContract.cs"];
m9_1966 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4398-4398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonContract.cs"];
m9_1967 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4396-4396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonContract.cs"];
m9_518 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonContract.cs"];
m9_519 [label="_stringValue = stringValue", span="1131-1131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonContract.cs"];
m9_520 [label="_intValue = intValue", span="1132-1132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonContract.cs"];
m9_521 [label="_person1 = p1", span="1133-1133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonContract.cs"];
m9_522 [label="_person2 = p2", span="1134-1134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonContract.cs"];
m9_523 [label="_person3 = p3", span="1135-1135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonContract.cs"];
m9_524 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonContract.cs"];
m9_592 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_593 [label="string s = null", span="1262-1262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_594 [label="var v = new JValue(s)", span="1263-1263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_595 [label="var o = JObject.FromObject(new { title = v })", span="1264-1264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_596 [label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1266-1269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_598 [label="Assert.AreEqual(null, v.Value)", span="1273-1273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_599 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="1274-1274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_597 [label="string output = o.ToString()", span="1271-1271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_600 [label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1276-1278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_601 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1260-1260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonContract.cs"];
m9_84 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="255-255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_85 [label="RequiredPropertyTestClass c1 = new RequiredPropertyTestClass()", span="257-257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_86 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="259-261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_87 [label="RequiredPropertyTestClass c2 = new RequiredPropertyTestClass\r\n            {\r\n                Name = ''Name!''\r\n            }", span="263-266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_88 [label="string json = JsonConvert.SerializeObject(c2)", span="268-268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_89 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_90 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="272-274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_91 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}''),\r\n                ''Required property 'Name' expects a value but got null. Path '', line 1, position 13.'')", span="276-278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_92 [label="RequiredPropertyTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':''''Name!''''}'')", span="280-280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_93 [label="Assert.AreEqual(''Name!'', c3.Name)", span="282-282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_94 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="255-255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonContract.cs"];
m9_625 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1290-1290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonContract.cs"];
m9_1480 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3167-3167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonContract.cs"];
m9_1481 [label="_name = name", span="3169-3169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonContract.cs"];
m9_1482 [label="Age = age", span="3170-3170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonContract.cs"];
m9_1483 [label="Rank = rank", span="3171-3171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonContract.cs"];
m9_1484 [label="Title = title", span="3172-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonContract.cs"];
m9_1485 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3167-3167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonContract.cs"];
m9_1923 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4251-4251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonContract.cs"];
m9_985 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonContract.cs"];
m9_3157 [label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="304-304", cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonContract.cs"];
m9_2208 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JsonContract.cs"];
m9_676 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="676-676", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonContract.cs"];
m9_375 [label="Entry System.Globalization.CultureInfo.ToString()", span="0-0", cluster="System.Globalization.CultureInfo.ToString()", file="JsonContract.cs"];
m9_2052 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonContract.cs"];
m9_668 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="485-485", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonContract.cs"];
m9_2226 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="807-807", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonContract.cs"];
m9_3666 [label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35", cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonContract.cs"];
m9_3938 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9097-9097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3939 [label="return objectType == typeof(System.Net.Mail.Attachment);", span="9099-9099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3940 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9097-9097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_633 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1343-1343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_634 [label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1345-1345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_635 [label="var json = JsonConvert.SerializeObject(original)", span="1346-1346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_636 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1347-1347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_637 [label="Assert.AreEqual(expectedJson, json)", span="1348-1348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_638 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1343-1343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_1123 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonContract.cs"];
m9_1567 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonContract.cs"];
m9_1568 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3403-3403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonContract.cs"];
m9_1569 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3405-3405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonContract.cs"];
m9_1570 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3407-3407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonContract.cs"];
m9_1571 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="3408-3408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonContract.cs"];
m9_1572 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3409-3409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonContract.cs"];
m9_1573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3401-3401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonContract.cs"];
m9_300 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonContract.cs"];
m9_1070 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonContract.cs"];
m9_1071 [label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2299-2299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonContract.cs"];
m9_1072 [label="string json = JsonConvert.SerializeObject(date)", span="2301-2301", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonContract.cs"];
m9_1073 [label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2302-2302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonContract.cs"];
m9_1074 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonContract.cs"];
m9_753 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonContract.cs"];
m9_376 [label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonContract.cs"];
m9_789 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonContract.cs"];
m9_1870 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4078-4078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonContract.cs"];
m9_1871 [label=initial, span="4080-4080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonContract.cs"];
m9_1872 [label="Add(pair.Key, pair.Value)", span="4082-4082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonContract.cs"];
m9_1873 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4078-4078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonContract.cs"];
m9_2262 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5078-5078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonContract.cs"];
m9_2263 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 14.'')", span="5080-5095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonContract.cs"];
m9_2264 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5078-5078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonContract.cs"];
m9_726 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonContract.cs"];
m9_553 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1171-1171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_554 [label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="1173-1176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_555 [label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="1177-1180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_556 [label="p1.Spouse = p2", span="1182-1182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_557 [label="p2.Spouse = p1", span="1183-1183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_558 [label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="1185-1185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_559 [label="obj._parent = obj", span="1186-1186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_561 [label="string json = JsonConvert.SerializeObject(obj, settings)", span="1194-1194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_564 [label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="1224-1224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_565 [label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="1225-1225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_566 [label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="1226-1226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_567 [label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="1227-1227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_568 [label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="1228-1228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_560 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="1188-1192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_562 [label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="1196-1220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_563 [label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="1222-1222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_569 [label="Assert.AreEqual(obj2._person1, obj2._person3)", span="1229-1229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_570 [label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="1230-1230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_571 [label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="1231-1231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_572 [label="Assert.AreEqual(obj2._parent, obj2)", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_573 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1171-1171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonContract.cs"];
m9_974 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="755-755", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonContract.cs"];
m9_1702 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="188-188", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonContract.cs"];
m9_1162 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2454-2454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonContract.cs"];
m9_1163 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2456-2456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonContract.cs"];
m9_1164 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2457-2457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonContract.cs"];
m9_1168 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2467-2467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonContract.cs"];
m9_1169 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2468-2468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonContract.cs"];
m9_1165 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2459-2462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonContract.cs"];
m9_1166 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2463-2463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonContract.cs"];
m9_1167 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2465-2465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonContract.cs"];
m9_1170 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2454-2454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonContract.cs"];
m9_1606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3464-3464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonContract.cs"];
m9_1607 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3466-3466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonContract.cs"];
m9_1608 [label="Assert.AreEqual(3, l.Count)", span="3467-3467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonContract.cs"];
m9_1609 [label="Assert.AreEqual(3.3m, l[0])", span="3469-3469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonContract.cs"];
m9_1610 [label="Assert.AreEqual(null, l[1])", span="3470-3470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonContract.cs"];
m9_1611 [label="Assert.AreEqual(1.1m, l[2])", span="3471-3471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonContract.cs"];
m9_1612 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3464-3464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonContract.cs"];
m9_2890 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6608-6608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonContract.cs"];
m9_2891 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="6610-6610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonContract.cs"];
m9_2892 [label="string json = JsonConvert.SerializeObject(d1)", span="6612-6612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonContract.cs"];
m9_2894 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6616-6616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonContract.cs"];
m9_2895 [label="Assert.AreEqual(d1[0], d2[0])", span="6617-6617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonContract.cs"];
m9_2893 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="6614-6614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonContract.cs"];
m9_2896 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="6608-6608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonContract.cs"];
m9_1547 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3333-3333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonContract.cs"];
m9_1548 [label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3335-3338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonContract.cs"];
m9_1549 [label="string json = JsonConvert.SerializeObject(value)", span="3340-3340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonContract.cs"];
m9_1550 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3342-3342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonContract.cs"];
m9_1551 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3333-3333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonContract.cs"];
m9_2413 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5405-5405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonContract.cs"];
m9_2414 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5407-5407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonContract.cs"];
m9_2415 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5408-5408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonContract.cs"];
m9_2416 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5405-5405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonContract.cs"];
m9_1318 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2752-2752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1319 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="2754-2754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1320 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="2756-2756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1328 [label="Assert.AreEqual(json, after)", span="2767-2767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1321 [label="Assert.AreEqual(''Before!'', aa.Before)", span="2758-2758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1322 [label="Assert.AreEqual(''After!'', aa.After)", span="2759-2759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1323 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="2760-2760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1324 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="2761-2761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1325 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="2762-2762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1326 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="2763-2763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1327 [label="string after = JsonConvert.SerializeObject(aa)", span="2765-2765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1329 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="2752-2752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonContract.cs"];
m9_1586 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3436-3436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonContract.cs"];
m9_1587 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3438-3438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonContract.cs"];
m9_1588 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<TestObjects.Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3440-3440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonContract.cs"];
m9_1589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3436-3436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonContract.cs"];
m9_3128 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7093-7093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonContract.cs"];
m9_3885 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="8952-8952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonContract.cs"];
m9_275 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="JsonContract.cs"];
m9_3006 [label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonContract.cs"];
m9_1187 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="JsonContract.cs"];
m9_1545 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonContract.cs"];
m9_2053 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonContract.cs"];
m9_2487 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="5536-5536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonContract.cs"];
m9_877 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="349-349", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonContract.cs"];
m9_2582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5785-5785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonContract.cs"];
m9_2583 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="5787-5792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonContract.cs"];
m9_2584 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="5794-5794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonContract.cs"];
m9_2585 [label="Assert.AreEqual(40, p.Age)", span="5795-5795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonContract.cs"];
m9_2586 [label="Assert.AreEqual(44.4, p.Height)", span="5796-5796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonContract.cs"];
m9_2587 [label="Assert.AreEqual(4m, p.Price)", span="5797-5797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonContract.cs"];
m9_2588 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="5785-5785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonContract.cs"];
m9_2276 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5099-5099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2277 [label="var reference = new Dictionary<string, object>()", span="5101-5101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2278 [label="reference.Add(''$ref'', null)", span="5102-5102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2279 [label="reference.Add(''$id'', null)", span="5103-5103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2280 [label="reference.Add(''blah'', ''blah!'')", span="5104-5104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2284 [label="child.Add(''Father'', reference)", span="5109-5109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2281 [label="var child = new Dictionary<string, object>()", span="5106-5106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2282 [label="child.Add(''_id'', 2)", span="5107-5107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2283 [label="child.Add(''Name'', ''Isabell'')", span="5108-5108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2285 [label="string json = JsonConvert.SerializeObject(child)", span="5111-5111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2286 [label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5113-5113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2287 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5115-5115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2288 [label="Assert.AreEqual(3, result.Count)", span="5117-5117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2289 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5118-5118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2290 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5119-5119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_2291 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5099-5099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonContract.cs"];
m9_3915 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9063-9063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3916 [label="return objectType == typeof(System.Net.Mail.MailAddress);", span="9065-9065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3917 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9063-9063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_992 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2151-2151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonContract.cs"];
m9_993 [label="string json = JsonConvert.SerializeObject(null)", span="2153-2153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonContract.cs"];
m9_994 [label="Assert.AreEqual(''null'', json)", span="2154-2154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonContract.cs"];
m9_995 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2151-2151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonContract.cs"];
m9_3737 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8618-8618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonContract.cs"];
m9_3738 [label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="8620-8620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonContract.cs"];
m9_3739 [label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="8621-8621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonContract.cs"];
m9_3740 [label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="8622-8625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonContract.cs"];
m9_3741 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="8618-8618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonContract.cs"];
m9_3113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7035-7035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3114 [label="Product product = new Product()", span="7037-7037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3115 [label="product.Name = ''Apple''", span="7038-7038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3116 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="7039-7039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3117 [label="product.Price = 3.99M", span="7040-7040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3118 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="7041-7041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3119 [label="string json = JsonConvert.SerializeObject(product)", span="7043-7043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3120 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7051-7056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3121 [label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="7057-7066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3122 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7074-7074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3123 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7076-7081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3124 [label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7083-7090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_3125 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7035-7035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonContract.cs"];
m9_1309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2739-2739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonContract.cs"];
m9_1310 [label="JaggedArray aa = new JaggedArray()", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonContract.cs"];
m9_1311 [label="aa.Before = ''Before!''", span="2742-2742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonContract.cs"];
m9_1312 [label="aa.After = ''After!''", span="2743-2743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonContract.cs"];
m9_1313 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="2744-2744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonContract.cs"];
m9_1314 [label="string json = JsonConvert.SerializeObject(aa)", span="2746-2746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonContract.cs"];
m9_1315 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="2748-2748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonContract.cs"];
m9_1316 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="2739-2739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonContract.cs"];
m9_3744 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8630-8630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonContract.cs"];
m9_3745 [label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}'';\r\n                JsonConvert.DeserializeObject<JObject>(content);\r\n            }, ''Can not add property time to Newtonsoft.Json.Linq.JObject. Property with the same name already exists on object.'')", span="8632-8636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonContract.cs"];
m9_3746 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="8630-8630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonContract.cs"];
m9_2316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5181-5181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonContract.cs"];
m9_2317 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5183-5183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonContract.cs"];
m9_2318 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5185-5185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonContract.cs"];
m9_2319 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5186-5186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonContract.cs"];
m9_2320 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5188-5188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonContract.cs"];
m9_2321 [label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5190-5193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonContract.cs"];
m9_2322 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5195-5196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonContract.cs"];
m9_2323 [label="Assert.AreEqual(2, newDictionary.Count)", span="5198-5198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonContract.cs"];
m9_2324 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5181-5181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonContract.cs"];
m9_604 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonContract.cs"];
m9_2811 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonContract.cs"];
m9_1188 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JsonContract.cs"];
m9_1855 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4052-4052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonContract.cs"];
m9_1856 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="4054-4054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonContract.cs"];
m9_1857 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="4056-4056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonContract.cs"];
m9_1858 [label="Assert.AreEqual(3, dic.Count)", span="4058-4058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonContract.cs"];
m9_1859 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="4059-4059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonContract.cs"];
m9_1860 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="4060-4060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonContract.cs"];
m9_1861 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="4061-4061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonContract.cs"];
m9_1862 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4052-4052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonContract.cs"];
m9_220 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="627-627", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonContract.cs"];
m9_2821 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6458-6458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonContract.cs"];
m9_2822 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="6460-6460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonContract.cs"];
m9_2823 [label="Uri uri = new Uri(input)", span="6461-6461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonContract.cs"];
m9_2824 [label="string json = JsonConvert.SerializeObject(uri)", span="6462-6462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonContract.cs"];
m9_2826 [label="Assert.AreEqual(uri, output)", span="6465-6465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonContract.cs"];
m9_2825 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6463-6463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonContract.cs"];
m9_2827 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6458-6458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonContract.cs"];
m9_1069 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JsonContract.cs"];
m9_1973 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4406-4406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonContract.cs"];
m9_1974 [label="return _innerDictionary.TryGetValue(key, out value);", span="4408-4408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonContract.cs"];
m9_1975 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4406-4406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonContract.cs"];
m9_2734 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6250-6250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonContract.cs"];
m9_2735 [label="return _readonlyString;", span="6252-6252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonContract.cs"];
m9_2736 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6250-6250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonContract.cs"];
m9_2056 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonContract.cs"];
m9_105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonContract.cs"];
m9_106 [label="Name = name", span="289-289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonContract.cs"];
m9_107 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="287-287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonContract.cs"];
m9_3961 [label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0", cluster="System.Text.Encoding.GetEncoding(string)", file="JsonContract.cs"];
m9_2904 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6634-6634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonContract.cs"];
m9_2905 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="6636-6636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonContract.cs"];
m9_2906 [label="string json = JsonConvert.SerializeObject(d1)", span="6638-6638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonContract.cs"];
m9_2908 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6642-6642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonContract.cs"];
m9_2909 [label="Assert.AreEqual(d1[0], d2[0])", span="6643-6643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonContract.cs"];
m9_2907 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="6640-6640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonContract.cs"];
m9_2910 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="6634-6634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonContract.cs"];
m9_3847 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8877-8877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonContract.cs"];
m9_3848 [label="ConstantTestClass c1 = new ConstantTestClass()", span="8879-8879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonContract.cs"];
m9_3849 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="8881-8881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonContract.cs"];
m9_3850 [label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="8883-8885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonContract.cs"];
m9_3851 [label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="8887-8887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonContract.cs"];
m9_3852 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="8877-8877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonContract.cs"];
m9_1828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3963-3963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonContract.cs"];
m9_1829 [label="_dict1.Add(item.Key, item)", span="3965-3965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonContract.cs"];
m9_1830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="3963-3963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonContract.cs"];
m9_3488 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8009-8009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonContract.cs"];
m9_3489 [label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="8011-8011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonContract.cs"];
m9_3490 [label="string json = JsonConvert.SerializeObject(tuple)", span="8012-8012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonContract.cs"];
m9_3491 [label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="8013-8013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonContract.cs"];
m9_3492 [label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="8015-8015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonContract.cs"];
m9_3493 [label="Assert.AreEqual(500, tuple2.Item1)", span="8016-8016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonContract.cs"];
m9_3494 [label="Assert.AreEqual(20, tuple2.Item2)", span="8017-8017", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonContract.cs"];
m9_3495 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8009-8009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonContract.cs"];
m9_3141 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7108-7108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3142 [label="return objectType == typeof(Color);", span="7110-7110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3143 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7108-7108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_2443 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonContract.cs"];
m9_667 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonContract.cs"];
m9_1899 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4214-4214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonContract.cs"];
m9_1901 [label="C2 = c2", span="4216-4216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonContract.cs"];
m9_1902 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4214-4214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonContract.cs"];
m9_2551 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5724-5724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonContract.cs"];
m9_2552 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="5726-5726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonContract.cs"];
m9_2553 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="5727-5727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonContract.cs"];
m9_2554 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="5724-5724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonContract.cs"];
m9_3447 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7851-7851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonContract.cs"];
m9_3448 [label="IgnoreSerializableAttribute = false", span="7853-7853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonContract.cs"];
m9_3449 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="7851-7851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonContract.cs"];
m9_183 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="538-538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonContract.cs"];
m9_184 [label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="540-546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonContract.cs"];
m9_185 [label="Assert.IsNull(otc.Value1)", span="547-547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonContract.cs"];
m9_186 [label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="548-548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonContract.cs"];
m9_187 [label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="549-549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonContract.cs"];
m9_188 [label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="550-550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonContract.cs"];
m9_189 [label="Assert.IsNull(otc.Value5)", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonContract.cs"];
m9_190 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="538-538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonContract.cs"];
m9_130 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="228-228", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonContract.cs"];
m9_1552 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonContract.cs"];
m9_2453 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5491-5491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonContract.cs"];
m9_2454 [label="string json = ''{Amount:123456789876543.21}''", span="5493-5493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonContract.cs"];
m9_2455 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5494-5494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonContract.cs"];
m9_2456 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5495-5495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonContract.cs"];
m9_2458 [label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5499-5499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonContract.cs"];
m9_2457 [label="JsonSerializer serializer = new JsonSerializer()", span="5497-5497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonContract.cs"];
m9_2459 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5500-5500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonContract.cs"];
m9_2460 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5491-5491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonContract.cs"];
m9_2386 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5356-5356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2387 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5358-5361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2388 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5363-5363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2389 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5365-5365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2390 [label="reader.DateParseHandling = DateParseHandling.None", span="5366-5366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2392 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5370-5370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2391 [label="JsonSerializer serializer = new JsonSerializer()", span="5368-5368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2393 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5372-5372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2394 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5373-5373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2395 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5356-5356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonContract.cs"];
m9_2625 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5917-5917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonContract.cs"];
m9_2626 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="5919-5919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonContract.cs"];
m9_2627 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="5920-5920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonContract.cs"];
m9_2628 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="5917-5917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonContract.cs"];
m9_696 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1529-1529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonContract.cs"];
m9_697 [label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1531-1537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonContract.cs"];
m9_698 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1539-1539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonContract.cs"];
m9_699 [label="baseWith.Virtual = ''Virtual2!''", span="1540-1540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonContract.cs"];
m9_700 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1541-1541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonContract.cs"];
m9_701 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonContract.cs"];
m9_702 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1544-1544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonContract.cs"];
m9_703 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1546-1553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonContract.cs"];
m9_704 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1529-1529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonContract.cs"];
m9_2488 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5524-5524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonContract.cs"];
m9_3522 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8079-8079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonContract.cs"];
m9_3523 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8081-8081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonContract.cs"];
m9_3524 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8083-8083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonContract.cs"];
m9_3526 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8087-8087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonContract.cs"];
m9_3525 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8085-8085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonContract.cs"];
m9_3527 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8079-8079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonContract.cs"];
m9_612 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1285-1285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonContract.cs"];
m9_446 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1010-1010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_447 [label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="1012-1012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_448 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1014-1014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_449 [label="serializerProxy.Binder = customBinder", span="1015-1015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_450 [label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1016-1016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_451 [label="serializerProxy.CheckAdditionalContent = true", span="1018-1018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_452 [label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="1019-1019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_453 [label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1021-1021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_454 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="1022-1022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_455 [label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="1025-1025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_456 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="1026-1026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_458 [label="serializerProxy.ContractResolver = resolver", span="1030-1030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_459 [label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="1031-1031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_460 [label="serializerProxy.Converters.Add(new StringEnumConverter())", span="1033-1033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_461 [label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="1034-1034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_462 [label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="1036-1036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_463 [label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="1037-1037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_464 [label="serializerProxy.EqualityComparer = EqualityComparer<object>.Default", span="1039-1039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_465 [label="Assert.AreEqual(EqualityComparer<object>.Default, serializerProxy.EqualityComparer)", span="1040-1040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_466 [label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1042-1042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_467 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="1043-1043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_468 [label="serializerProxy.DateFormatString = ''yyyy''", span="1045-1045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_469 [label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="1046-1046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_470 [label="serializerProxy.DateParseHandling = DateParseHandling.None", span="1048-1048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_471 [label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="1049-1049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_472 [label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1051-1051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_473 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="1052-1052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_474 [label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1054-1054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_475 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="1055-1055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_476 [label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="1057-1057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_477 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="1058-1058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_478 [label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="1060-1060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_479 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_480 [label="serializerProxy.Formatting = Formatting.Indented", span="1063-1063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_481 [label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="1064-1064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_482 [label="serializerProxy.MaxDepth = 9001", span="1066-1066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_483 [label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="1067-1067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_484 [label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="1069-1069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_485 [label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_486 [label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="1072-1072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_487 [label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_488 [label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1075-1075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_489 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="1076-1076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_490 [label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1078-1078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_491 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_492 [label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1081-1081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_493 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="1082-1082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_495 [label="serializerProxy.ReferenceResolver = referenceResolver", span="1085-1085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_496 [label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="1086-1086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_497 [label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1088-1088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_498 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="1089-1089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_500 [label="serializerProxy.TraceWriter = traceWriter", span="1092-1092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_501 [label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_502 [label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1096-1096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_503 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_504 [label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="1100-1100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_505 [label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="1101-1101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_457 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1029-1029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_494 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1084-1084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_499 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_506 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1010-1010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonContract.cs"];
m9_2929 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6685-6685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonContract.cs"];
m9_2930 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="6687-6692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonContract.cs"];
m9_2931 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6694-6694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonContract.cs"];
m9_2932 [label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="6696-6700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonContract.cs"];
m9_2933 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="6685-6685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonContract.cs"];
m9_1040 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonContract.cs"];
m9_2949 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonContract.cs"];
m9_2599 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5815-5815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonContract.cs"];
m9_2600 [label="MultiIndexSuper e = new MultiIndexSuper()", span="5817-5817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonContract.cs"];
m9_2601 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="5819-5819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonContract.cs"];
m9_2602 [label="Assert.AreEqual(@''{}'', json)", span="5821-5821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonContract.cs"];
m9_2603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="5815-5815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonContract.cs"];
m9_1926 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4304-4304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1927 [label="dictionary == null", span="4306-4306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1929 [label=dictionary, span="4311-4311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1928 [label="throw new ArgumentNullException(''dictionary'');", span="4308-4308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1930 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="4313-4313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1931 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4304-4304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_168 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="462-462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonContract.cs"];
m9_2703 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6164-6164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonContract.cs"];
m9_2704 [label="throw new NotImplementedException();", span="6166-6166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonContract.cs"];
m9_2705 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6164-6164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonContract.cs"];
m9_3535 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8112-8112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonContract.cs"];
m9_3536 [label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8114-8114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonContract.cs"];
m9_3537 [label="string json = JsonConvert.SerializeObject(p)", span="8116-8116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonContract.cs"];
m9_3541 [label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8124-8127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonContract.cs"];
m9_3538 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8118-8118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonContract.cs"];
m9_3539 [label="DefaultContractResolver r = new DefaultContractResolver()", span="8121-8121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonContract.cs"];
m9_3540 [label="r.IgnoreSerializableAttribute = false", span="8122-8122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonContract.cs"];
m9_3542 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8129-8129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonContract.cs"];
m9_3543 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8112-8112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonContract.cs"];
m9_1279 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2666-2666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonContract.cs"];
m9_1280 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2668-2673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonContract.cs"];
m9_1281 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2675-2675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonContract.cs"];
m9_1282 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="2677-2677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonContract.cs"];
m9_1283 [label="Assert.AreEqual(null, c.MiddleName)", span="2678-2678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonContract.cs"];
m9_1284 [label="Assert.AreEqual(null, c.LastName)", span="2679-2679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonContract.cs"];
m9_1285 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="2666-2666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonContract.cs"];
m9_3237 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7292-7292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonContract.cs"];
m9_3238 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7294-7298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonContract.cs"];
m9_3239 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7300-7300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonContract.cs"];
m9_3240 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7302-7305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonContract.cs"];
m9_3241 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7307-7307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonContract.cs"];
m9_3242 [label="Assert.AreEqual(2, dic2.Count)", span="7309-7309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonContract.cs"];
m9_3243 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7310-7310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonContract.cs"];
m9_3244 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7311-7311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonContract.cs"];
m9_3245 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7292-7292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonContract.cs"];
m9_3136 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JsonContract.cs"];
m9_3389 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7677-7677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonContract.cs"];
m9_3390 [label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="7679-7683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonContract.cs"];
m9_3391 [label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="7685-7688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonContract.cs"];
m9_3392 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="7677-7677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonContract.cs"];
m9_2242 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5047-5047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2243 [label="throw new NotImplementedException();", span="5049-5049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2244 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5047-5047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_1764 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonContract.cs"];
m9_3369 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JsonContract.cs"];
m9_1294 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="JsonContract.cs"];
m9_3306 [label="Entry Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Event1.Event1()", file="JsonContract.cs"];
m9_1641 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3518-3518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonContract.cs"];
m9_1642 [label="string json = @''[]''", span="3520-3520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonContract.cs"];
m9_1643 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3522-3526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonContract.cs"];
m9_1644 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3518-3518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonContract.cs"];
m9_1131 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonContract.cs"];
m9_716 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonContract.cs"];
m9_1942 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonContract.cs"];
m9_1990 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4454-4454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonContract.cs"];
m9_1991 [label="_stringValue = stringValue", span="4456-4456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonContract.cs"];
m9_1992 [label="_intValue = intValue", span="4457-4457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonContract.cs"];
m9_1993 [label="_dateTimeOffsetValue = dateTimeOffset", span="4458-4458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonContract.cs"];
m9_1994 [label="_personValue = personValue", span="4459-4459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonContract.cs"];
m9_1995 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4460-4460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonContract.cs"];
m9_1996 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", span="4454-4454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Person)", file="JsonContract.cs"];
m9_626 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_627 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1336-1336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_628 [label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1337-1337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_629 [label="Assert.IsNotNull(deserialized.foo)", span="1338-1338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_630 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1339-1339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_631 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_755 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="229-229", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonContract.cs"];
m9_1933 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4348-4348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonContract.cs"];
m9_1934 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4350-4350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonContract.cs"];
m9_1935 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4348-4348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonContract.cs"];
m9_2303 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5149-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonContract.cs"];
m9_2304 [label="string json = @''{'value':9.9}''", span="5151-5151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonContract.cs"];
m9_2305 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5153-5157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonContract.cs"];
m9_2306 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5159-5159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonContract.cs"];
m9_2307 [label="Assert.AreEqual(9.9m, dic[''value''])", span="5160-5160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonContract.cs"];
m9_2308 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5149-5149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonContract.cs"];
m9_2445 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5477-5477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonContract.cs"];
m9_2446 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5479-5479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonContract.cs"];
m9_2447 [label="Assert.AreEqual(123456789876543.21m, d)", span="5480-5480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonContract.cs"];
m9_2448 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5477-5477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonContract.cs"];
m9_2651 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="5992-5992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonContract.cs"];
m9_40 [label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToUpper(System.Globalization.CultureInfo)", file="JsonContract.cs"];
m9_49 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonContract.cs"];
m9_2180 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4930-4930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2181 [label="XNodeTestObject testObject = new XNodeTestObject()", span="4932-4932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2182 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="4933-4933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2183 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="4934-4934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2184 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4936-4936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2188 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="4952-4952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2189 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="4953-4953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2185 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="4937-4948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2186 [label="StringAssert.AreEqual(expected, json)", span="4949-4949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2187 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="4951-4951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2190 [label="Assert.IsNull(newTestObject.Element.Parent)", span="4955-4955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_2191 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="4930-4930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonContract.cs"];
m9_835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1798-1798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonContract.cs"];
m9_836 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="1800-1800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonContract.cs"];
m9_837 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="1802-1802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonContract.cs"];
m9_838 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="1804-1804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonContract.cs"];
m9_839 [label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="1805-1807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonContract.cs"];
m9_840 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="1798-1798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonContract.cs"];
m9_1939 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4358-4358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonContract.cs"];
m9_1940 [label="_innerDictionary.Clear()", span="4360-4360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonContract.cs"];
m9_1941 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4358-4358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonContract.cs"];
m9_639 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1295-1295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonContract.cs"];
m9_826 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonContract.cs"];
m9_2604 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="5824-5824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonContract.cs"];
m9_2644 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JsonContract.cs"];
m9_1189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2506-2506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1190 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2508-2508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1191 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2509-2509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1192 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2510-2510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1193 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2512-2512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1194 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2513-2513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1195 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2515-2515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1196 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2517-2517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1197 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2518-2518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1198 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2506-2506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonContract.cs"];
m9_1703 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3621-3621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonContract.cs"];
m9_1704 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3623-3634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonContract.cs"];
m9_1705 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="3621-3621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonContract.cs"];
m9_2494 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5579-5579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonContract.cs"];
m9_2495 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="5579-5579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonContract.cs"];
m9_2122 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4897-4897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2169 [label="BB_field1 = g", span="4900-4900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2170 [label="BB_field2 = g", span="4901-4901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2171 [label="BB_property1 = g", span="4902-4902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2172 [label="BB_property2 = g", span="4903-4903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2173 [label="BB_property3 = g", span="4904-4904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2174 [label="BB_property4 = g", span="4905-4905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2175 [label="BB_property5 = g", span="4906-4906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2176 [label="BB_property6 = g", span="4907-4907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2177 [label="BB_property7 = g", span="4908-4908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2178 [label="BB_property8 = g", span="4909-4909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_2179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="4897-4897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonContract.cs"];
m9_684 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1404-1404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonContract.cs"];
m9_685 [label="var strings = dictionaryKey.Split(' ')", span="1406-1406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonContract.cs"];
m9_686 [label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1407-1407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonContract.cs"];
m9_687 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1404-1404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonContract.cs"];
m9_3158 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7150-7150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3159 [label="MemoryStream ms = new MemoryStream()", span="7152-7152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3160 [label="BsonWriter writer = new BsonWriter(ms)", span="7153-7153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3164 [label="byte[] data = ms.ToArray()", span="7158-7158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3161 [label="writer.WriteStartArray()", span="7154-7154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3162 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7155-7155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3163 [label="writer.WriteEndArray()", span="7156-7156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3165 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7159-7162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3166 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7164-7164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3167 [label="JValue v = (JValue)a[0]", span="7165-7165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3169 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7168-7170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3168 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7167-7167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_3170 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7150-7150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonContract.cs"];
m9_157 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonContract.cs"];
m9_1213 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2539-2539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonContract.cs"];
m9_1214 [label="string json", span="2541-2541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonContract.cs"];
m9_1215 [label="json = JsonConvert.SerializeObject((int?)null)", span="2543-2543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonContract.cs"];
m9_1216 [label="Assert.AreEqual(''null'', json)", span="2544-2544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonContract.cs"];
m9_1217 [label="json = JsonConvert.SerializeObject((int?)1)", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonContract.cs"];
m9_1218 [label="Assert.AreEqual(''1'', json)", span="2547-2547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonContract.cs"];
m9_1219 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2539-2539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonContract.cs"];
m9_1553 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3346-3346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1554 [label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3348-3356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1555 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3358-3358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1556 [label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3360-3372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1557 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3346-3346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1847 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="3957-3957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonContract.cs"];
m9_2477 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="JsonContract.cs"];
m9_2616 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5885-5885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonContract.cs"];
m9_2617 [label="B = 2", span="5887-5887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonContract.cs"];
m9_2618 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="5885-5885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonContract.cs"];
m9_2022 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonContract.cs"];
m9_3601 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8289-8289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonContract.cs"];
m9_3602 [label="string json = @''{''''something_else'''':''''my value''''}''", span="8291-8291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonContract.cs"];
m9_3603 [label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8292-8292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonContract.cs"];
m9_3604 [label="Assert.AreEqual(''my value'', foo.Bar)", span="8293-8293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonContract.cs"];
m9_3605 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8289-8289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonContract.cs"];
m9_2061 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4589-4589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2062 [label="Person person = new Person()", span="4591-4591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2063 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4592-4592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2064 [label="person.LastModified = person.BirthDate", span="4593-4593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2065 [label="person.Department = ''Department!''", span="4594-4594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2066 [label="person.Name = ''Name!''", span="4595-4595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2070 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4605-4605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2067 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4597-4597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2068 [label="string dateTimeOffsetText", span="4598-4598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2076 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4636-4636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2069 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="4600-4600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2072 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4608-4631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2071 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="4607-4607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2073 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4633-4633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2074 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4634-4634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2075 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4635-4635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2077 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4637-4637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2078 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4638-4638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2079 [label="Assert.AreEqual(null, o2._nullableInt)", span="4639-4639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2080 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="4589-4589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonContract.cs"];
m9_2911 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6647-6647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_2912 [label="Bb b = new Bb()", span="6649-6649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_2913 [label="b.no = true", span="6650-6650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_2914 [label="Aa a = b", span="6651-6651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_2916 [label="string json = JsonConvert.SerializeObject(b)", span="6654-6654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_2915 [label="a.no = int.MaxValue", span="6652-6652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_2917 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="6656-6656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_2918 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="6658-6658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_2919 [label="Assert.AreEqual(true, b2.no)", span="6660-6660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_2920 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="6647-6647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonContract.cs"];
m9_1270 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2640-2640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonContract.cs"];
m9_1271 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="2642-2648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonContract.cs"];
m9_1272 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2650-2650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonContract.cs"];
m9_1273 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="2652-2657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonContract.cs"];
m9_1274 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2659-2659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonContract.cs"];
m9_1275 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="2661-2661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonContract.cs"];
m9_1276 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="2662-2662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonContract.cs"];
m9_1277 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="2640-2640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonContract.cs"];
m9_751 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JsonContract.cs"];
m9_2664 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6069-6069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonContract.cs"];
m9_2665 [label="Title = title", span="6071-6071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonContract.cs"];
m9_2666 [label="Categories = new List<string>()", span="6072-6072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonContract.cs"];
m9_2667 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6069-6069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonContract.cs"];
m9_1212 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonContract.cs"];
m9_2812 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonContract.cs"];
m9_3172 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonContract.cs"];
m9_257 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonContract.cs"];
m9_1874 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4122-4122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonContract.cs"];
m9_1875 [label="B value = new B()", span="4124-4124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonContract.cs"];
m9_1876 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4125-4125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonContract.cs"];
m9_1877 [label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4127-4132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonContract.cs"];
m9_1878 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4122-4122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonContract.cs"];
m9_1445 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3067-3067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonContract.cs"];
m9_1446 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3069-3069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonContract.cs"];
m9_1447 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3071-3077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonContract.cs"];
m9_1448 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3067-3067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonContract.cs"];
m9_3979 [label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="9242-9242", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonContract.cs"];
m9_3980 [label="Value = value", span="9244-9244", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonContract.cs"];
m9_3981 [label="Constructor = ''Public Paramatized''", span="9245-9245", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonContract.cs"];
m9_3982 [label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="9242-9242", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonContract.cs"];
m9_3865 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="8923-8923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonContract.cs"];
m9_3866 [label="BaseProperty = baseProperty", span="8925-8925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonContract.cs"];
m9_3867 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="8923-8923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonContract.cs"];
m9_1286 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2683-2683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_1287 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="2687-2692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_1288 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2694-2694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_1289 [label="Assert.Fail()", span="2695-2695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_1290 [label=JsonSerializationException, span="2697-2697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_1291 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="2699-2699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_1292 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="2683-2683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_2217 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="5012-5012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonContract.cs"];
m9_3466 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7935-7935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonContract.cs"];
m9_3467 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7937-7941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonContract.cs"];
m9_3468 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ'')\r\n            })", span="7943-7947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonContract.cs"];
m9_3469 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="7949-7952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonContract.cs"];
m9_3470 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="7935-7935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonContract.cs"];
m9_12 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonContract.cs"];
m9_2241 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonContract.cs"];
m9_3873 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8940-8940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3874 [label="throw new NotImplementedException();", span="8942-8942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3875 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8940-8940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_1936 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4353-4353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonContract.cs"];
m9_1937 [label="_innerDictionary.Add(key, value)", span="4355-4355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonContract.cs"];
m9_1938 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4353-4353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonContract.cs"];
m9_442 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JsonContract.cs"];
m9_670 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonContract.cs"];
m9_681 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1399-1399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonContract.cs"];
m9_682 [label="return _name + '' '' + _number;", span="1401-1401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonContract.cs"];
m9_683 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1399-1399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonContract.cs"];
m9_1976 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonContract.cs"];
m9_1750 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3727-3727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1751 [label="Foo f = new Foo()", span="3729-3729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1752 [label="f.Bars.Add(new Bar { Id = 0 })", span="3730-3730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1753 [label="f.Bars.Add(new Bar { Id = 1 })", span="3731-3731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1754 [label="f.Bars.Add(new Bar { Id = 2 })", span="3732-3732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1755 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="3734-3734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1756 [label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="3735-3741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1757 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="3743-3743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1758 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="3744-3744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1759 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="3745-3745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1760 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="3746-3746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1761 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="3747-3747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_1762 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="3727-3727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonContract.cs"];
m9_2029 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4486-4486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2030 [label="info.AddValue(''stringValue'', _stringValue)", span="4488-4488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2031 [label="info.AddValue(''intValue'', _intValue)", span="4489-4489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2032 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4490-4490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2033 [label="info.AddValue(''personValue'', _personValue)", span="4491-4491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2034 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4492-4492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2035 [label="info.AddValue(''nullableInt'', null)", span="4493-4493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2036 [label="info.AddValue(''booleanValue'', _booleanValue)", span="4495-4495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2037 [label="info.AddValue(''byteValue'', _byteValue)", span="4496-4496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2038 [label="info.AddValue(''charValue'', _charValue)", span="4497-4497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2039 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4498-4498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2040 [label="info.AddValue(''decimalValue'', _decimalValue)", span="4499-4499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2041 [label="info.AddValue(''shortValue'', _shortValue)", span="4500-4500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2042 [label="info.AddValue(''longValue'', _longValue)", span="4501-4501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2043 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4502-4502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2044 [label="info.AddValue(''floatValue'', _floatValue)", span="4503-4503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2045 [label="info.AddValue(''ushortValue'', _ushortValue)", span="4504-4504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2046 [label="info.AddValue(''uintValue'', _uintValue)", span="4505-4505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2047 [label="info.AddValue(''ulongValue'', _ulongValue)", span="4506-4506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2048 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4486-4486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2758 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6346-6346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonContract.cs"];
m9_2759 [label="Exceptions = new List<Exception>()", span="6348-6348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonContract.cs"];
m9_2760 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6346-6346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonContract.cs"];
m9_1255 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2618-2618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1256 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="2620-2620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1257 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="2621-2621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1259 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="2624-2624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1258 [label="string json = JsonConvert.SerializeObject(typeClass)", span="2623-2623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1260 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2626-2626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1261 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="2627-2627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1262 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="2629-2629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1263 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="2630-2630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1265 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="2633-2633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1264 [label="json = JsonConvert.SerializeObject(typeClass)", span="2632-2632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1266 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="2635-2635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1267 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="2636-2636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_1268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="2618-2618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonContract.cs"];
m9_3175 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonContract.cs"];
m9_3725 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8590-8590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonContract.cs"];
m9_3726 [label="throw new InvalidCastException();", span="8592-8592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonContract.cs"];
m9_3727 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="8590-8590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonContract.cs"];
m9_3476 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7976-7976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3477 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7978-7982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3478 [label="StringWriter sw = new StringWriter()", span="7984-7984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3481 [label="serializer.Serialize(jsonWriter, dates)", span="7993-7993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3479 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="7985-7985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3485 [label="string json = sw.ToString()", span="7999-7999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3480 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = new CultureInfo(''en-NZ''),\r\n                Formatting = Formatting.Indented\r\n            })", span="7987-7992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3482 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="7995-7995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3483 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="7996-7996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3484 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="7997-7997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3486 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8001-8004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_3487 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="7976-7976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonContract.cs"];
m9_1620 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3485-3485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonContract.cs"];
m9_1621 [label="string json = @''[]''", span="3487-3487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonContract.cs"];
m9_1622 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3489-3491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonContract.cs"];
m9_1623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3485-3485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonContract.cs"];
m9_19 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonContract.cs"];
m9_370 [label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="36-36", cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonContract.cs"];
m9_2684 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6112-6112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2685 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6114-6114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2686 [label="c1.Categories.Add(''one'', 1)", span="6115-6115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2687 [label="c1.Categories.Add(''two'', 2)", span="6116-6116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2688 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6118-6118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2691 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6128-6128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2692 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6129-6129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2689 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6119-6125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2690 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6127-6127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2693 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="6130-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2694 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="6131-6131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_2695 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6112-6112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonContract.cs"];
m9_377 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonContract.cs"];
m9_675 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonContract.cs"];
m9_142 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", span="332-332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", file="JsonContract.cs"];
m9_2123 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4760-4760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2124 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="4762-4772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2125 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4774-4774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2126 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4775-4775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2127 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4776-4776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2128 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4777-4777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2129 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4778-4778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2130 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4779-4779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2131 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4780-4780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2132 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="4781-4781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2133 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="4783-4803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2134 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4805-4805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2135 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4806-4806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2136 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4807-4807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2137 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4808-4808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2138 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4809-4809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2139 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4810-4810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2140 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4811-4811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2141 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4812-4812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2142 [label="Assert.AreEqual(4, myB.BB_field1)", span="4814-4814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2143 [label="Assert.AreEqual(4, myB.BB_field2)", span="4815-4815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2144 [label="Assert.AreEqual(3, myB.BB_property1)", span="4816-4816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2145 [label="Assert.AreEqual(3, myB.BB_property2)", span="4817-4817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2146 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4818-4818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2147 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="4819-4819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2148 [label="Assert.AreEqual(0, myB.BB_property5)", span="4820-4820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2149 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4821-4821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2150 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4822-4822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2151 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="4823-4823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2152 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="4760-4760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2489 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5562-5562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonContract.cs"];
m9_2490 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="5562-5562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonContract.cs"];
m9_576 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1237-1237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonContract.cs"];
m9_577 [label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1239-1239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonContract.cs"];
m9_578 [label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1241-1241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonContract.cs"];
m9_579 [label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1243-1243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonContract.cs"];
m9_580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1237-1237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonContract.cs"];
m9_170 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonContract.cs"];
m9_3127 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonContract.cs"];
m9_3713 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8570-8570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonContract.cs"];
m9_3714 [label="return Value;", span="8572-8572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonContract.cs"];
m9_3715 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="8570-8570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonContract.cs"];
m9_1375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2905-2905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonContract.cs"];
m9_1376 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="2907-2912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonContract.cs"];
m9_1377 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="2914-2914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonContract.cs"];
m9_1378 [label="Assert.IsNotNull(o)", span="2915-2915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonContract.cs"];
m9_1379 [label="Assert.AreEqual(''firstName'', o.firstName)", span="2917-2917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonContract.cs"];
m9_1380 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="2918-2918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonContract.cs"];
m9_1381 [label="Assert.AreEqual(''LastName'', o.LastName)", span="2919-2919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonContract.cs"];
m9_1382 [label="Assert.AreEqual(''lastName'', o.lastName)", span="2920-2920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonContract.cs"];
m9_1383 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="2905-2905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonContract.cs"];
m9_1180 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonContract.cs"];
m9_1425 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3026-3026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1426 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3028-3028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1427 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3029-3029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1428 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3030-3030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1429 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3031-3031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1430 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3032-3032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1431 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3034-3034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1433 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3045-3045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1432 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3036-3043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1434 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3047-3051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1435 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3026-3026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1016 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2186-2186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonContract.cs"];
m9_1017 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2188-2188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonContract.cs"];
m9_1018 [label="JsonSerializer s = new JsonSerializer()", span="2190-2190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonContract.cs"];
m9_1020 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2193-2193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonContract.cs"];
m9_1019 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2191-2191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonContract.cs"];
m9_1021 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonContract.cs"];
m9_1022 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="2197-2197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonContract.cs"];
m9_1023 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2186-2186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonContract.cs"];
m9_2055 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonContract.cs"];
m9_3951 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="9132-9132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3952 [label="return typeof(Encoding).IsAssignableFrom(objectType);", span="9134-9134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3953 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="9132-9132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_28 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonContract.cs"];
m9_29 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'');\r\n            }, ''Required property 'Bars' expects a value but got null. Path '', line 1, position 9.'')", span="139-142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonContract.cs"];
m9_30 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="137-137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonContract.cs"];
m9_1132 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonContract.cs"];
m9_3633 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8403-8403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonContract.cs"];
m9_3634 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8405-8420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonContract.cs"];
m9_3635 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8422-8427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonContract.cs"];
m9_3636 [label="Assert.AreEqual(2, people.Count)", span="8429-8429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonContract.cs"];
m9_3637 [label="PersonReference john = people[0]", span="8431-8431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonContract.cs"];
m9_3638 [label="PersonReference jane = people[1]", span="8432-8432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonContract.cs"];
m9_3639 [label="Assert.AreEqual(john, jane.Spouse)", span="8434-8434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonContract.cs"];
m9_3640 [label="Assert.AreEqual(jane, john.Spouse)", span="8435-8435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonContract.cs"];
m9_3641 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="8403-8403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonContract.cs"];
m9_674 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonContract.cs"];
m9_574 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonContract.cs"];
m9_248 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonContract.cs"];
m9_938 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonContract.cs"];
m9_961 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2094-2094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_962 [label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2096-2104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_963 [label="string json = JsonConvert.SerializeObject(anonymous)", span="2106-2106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_965 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2109-2109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_964 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2107-2107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_966 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2110-2110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_967 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2111-2111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_968 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_969 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2113-2113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_970 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2114-2114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_971 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2115-2115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_972 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2116-2116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_973 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2094-2094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonContract.cs"];
m9_2296 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5138-5138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonContract.cs"];
m9_2297 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5140-5140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonContract.cs"];
m9_2298 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5142-5142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonContract.cs"];
m9_2299 [label="Assert.AreEqual(''First'', cc.First)", span="5143-5143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonContract.cs"];
m9_2300 [label="Assert.AreEqual(2, cc.Second)", span="5144-5144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonContract.cs"];
m9_2301 [label="Assert.AreEqual(null, cc.Ignored)", span="5145-5145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonContract.cs"];
m9_2302 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5138-5138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonContract.cs"];
m9_3356 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7615-7615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3357 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="7617-7617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3358 [label="Assert.AreEqual(1, uris.Count)", span="7618-7618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3359 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="7619-7619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3360 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="7621-7621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3361 [label="Assert.IsNotNull(uri)", span="7622-7622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3362 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="7624-7624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3363 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="7625-7625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3364 [label="Assert.AreEqual(i1, i2)", span="7626-7626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3365 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="7628-7628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3366 [label="Assert.IsNotNull(uri)", span="7629-7629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3367 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="7630-7630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_3368 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="7615-7615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonContract.cs"];
m9_50 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="198-198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonContract.cs"];
m9_51 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="200-202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonContract.cs"];
m9_52 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 2.'')", span="204-206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonContract.cs"];
m9_53 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="208-210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonContract.cs"];
m9_54 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="212-214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonContract.cs"];
m9_55 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="216-218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonContract.cs"];
m9_56 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="220-222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonContract.cs"];
m9_57 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="198-198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonContract.cs"];
m9_2752 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6324-6324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonContract.cs"];
m9_2753 [label="DerivedType d = new DerivedType()", span="6326-6326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonContract.cs"];
m9_2754 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6327-6327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonContract.cs"];
m9_2755 [label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6329-6338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonContract.cs"];
m9_2756 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6324-6324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonContract.cs"];
m9_2761 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6354-6354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2762 [label="ClassWithException classWithException = new ClassWithException()", span="6356-6356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2763 [label="throw new Exception(''Test Exception'');", span="6359-6359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2765 [label="classWithException.Exceptions.Add(ex)", span="6363-6363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2766 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="6365-6365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2769 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6369-6369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2764 [label=Exception, span="6361-6361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2767 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6366-6366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2768 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6367-6367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2770 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6371-6371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2771 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6372-6372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_2772 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6354-6354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonContract.cs"];
m9_3496 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonContract.cs"];
m9_3307 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="181-181", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonContract.cs"];
m9_2218 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="5035-5035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonContract.cs"];
m9_2373 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5282-5282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonContract.cs"];
m9_141 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", span="320-320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", file="JsonContract.cs"];
m9_24 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonContract.cs"];
m9_2195 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4961-4961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2196 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="4963-4963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2197 [label="XmlDocument document = new XmlDocument()", span="4964-4964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2199 [label="testObject.Document = document", span="4966-4966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2200 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="4968-4968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2204 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="4977-4977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2198 [label="document.LoadXml(''<root>hehe, root</root>'')", span="4965-4965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2201 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="4969-4973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2202 [label="StringAssert.AreEqual(expected, json)", span="4974-4974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2203 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="4976-4976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_2205 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="4961-4961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonContract.cs"];
m9_1955 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4378-4378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonContract.cs"];
m9_1956 [label="return _innerDictionary.GetEnumerator();", span="4380-4380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonContract.cs"];
m9_1957 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4378-4378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonContract.cs"];
m9_3284 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7408-7408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonContract.cs"];
m9_3285 [label="var json = Serialize(obj)", span="7411-7411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonContract.cs"];
m9_3286 [label="return Deserialize<T>(json);", span="7412-7412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonContract.cs"];
m9_3287 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="7408-7408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonContract.cs"];
m9_2478 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5542-5542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonContract.cs"];
m9_2479 [label="VectorParent obj = new VectorParent()", span="5544-5544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonContract.cs"];
m9_2480 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonContract.cs"];
m9_2481 [label="string str = JsonConvert.SerializeObject(obj)", span="5547-5547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonContract.cs"];
m9_2482 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="5549-5549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonContract.cs"];
m9_2483 [label="Assert.AreEqual(1, obj.Position.X)", span="5551-5551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonContract.cs"];
m9_2484 [label="Assert.AreEqual(2, obj.Position.Y)", span="5552-5552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonContract.cs"];
m9_2485 [label="Assert.AreEqual(3, obj.Position.Z)", span="5553-5553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonContract.cs"];
m9_2486 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="5542-5542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonContract.cs"];
m9_1489 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3197-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonContract.cs"];
m9_1490 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3199-3199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonContract.cs"];
m9_1491 [label="c.NotIncluded = ''Hi''", span="3200-3200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonContract.cs"];
m9_1492 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3201-3201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonContract.cs"];
m9_1493 [label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3203-3208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonContract.cs"];
m9_1494 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3210-3210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonContract.cs"];
m9_1495 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3211-3211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonContract.cs"];
m9_1496 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3197-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonContract.cs"];
m9_3038 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6906-6906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonContract.cs"];
m9_3039 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="6908-6908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonContract.cs"];
m9_3040 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="6906-6906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonContract.cs"];
m9_1082 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonContract.cs"];
m9_3090 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonContract.cs"];
m9_2726 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6229-6229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonContract.cs"];
m9_2727 [label="_privateString = privateString", span="6231-6231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonContract.cs"];
m9_2728 [label="_readonlyString = readonlyString", span="6232-6232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonContract.cs"];
m9_2729 [label="_internalString = internalString", span="6233-6233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonContract.cs"];
m9_2730 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6229-6229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonContract.cs"];
m9_2635 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="5934-5934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonContract.cs"];
m9_1880 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4144-4144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonContract.cs"];
m9_1881 [label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4146-4147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonContract.cs"];
m9_1882 [label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4149-4156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonContract.cs"];
m9_1883 [label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4157-4160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonContract.cs"];
m9_1884 [label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4162-4162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonContract.cs"];
m9_1885 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4144-4144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonContract.cs"];
m9_3450 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7883-7883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonContract.cs"];
m9_3451 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="7885-7885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonContract.cs"];
m9_3452 [label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="7887-7887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonContract.cs"];
m9_3453 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="7889-7889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonContract.cs"];
m9_3454 [label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="7891-7891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonContract.cs"];
m9_3455 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="7893-7893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonContract.cs"];
m9_3456 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="7894-7894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonContract.cs"];
m9_3457 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="7883-7883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonContract.cs"];
m9_3992 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9307-9307", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonContract.cs"];
m9_2865 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9296-9296", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonContract.cs"];
m9_3993 [label="z = 3", span="9309-9309", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonContract.cs"];
m9_3994 [label="Exit Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="9307-9307", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonContract.cs"];
m9_1061 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonContract.cs"];
m9_689 [label="Entry System.Convert.ToInt32(string)", span="0-0", cluster="System.Convert.ToInt32(string)", file="JsonContract.cs"];
m9_1116 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2374-2374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonContract.cs"];
m9_1117 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2376-2376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonContract.cs"];
m9_1118 [label="string json = JsonConvert.SerializeObject(c1)", span="2378-2378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonContract.cs"];
m9_1119 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2379-2379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonContract.cs"];
m9_1120 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2381-2381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonContract.cs"];
m9_1121 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2383-2383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonContract.cs"];
m9_1122 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2374-2374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonContract.cs"];
m9_124 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonContract.cs"];
m9_125 [label="type == typeof(Version)", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonContract.cs"];
m9_127 [label="return base.ResolveContract(type);", span="339-339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonContract.cs"];
m9_126 [label="throw new Exception(''Error!'');", span="337-337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonContract.cs"];
m9_128 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonContract.cs"];
m9_302 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonContract.cs"];
m9_771 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonContract.cs"];
m9_1437 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3055-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1438 [label="string json = ''{}''", span="3057-3057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1439 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3059-3059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1440 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3060-3060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1441 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3061-3061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1442 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3062-3062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1443 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3063-3063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_1444 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3055-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_3091 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonContract.cs"];
m9_3112 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonContract.cs"];
m9_3288 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7415-7415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonContract.cs"];
m9_3290 [label="var stringWriter = new StringWriter()", span="7418-7418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonContract.cs"];
m9_3293 [label="serializer.Serialize(stringWriter, obj)", span="7424-7424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonContract.cs"];
m9_3291 [label="var serializer = new JsonSerializer()", span="7419-7419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonContract.cs"];
m9_3294 [label="return stringWriter.ToString();", span="7426-7426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonContract.cs"];
m9_3292 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7420-7423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonContract.cs"];
m9_3295 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="7415-7415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonContract.cs"];
m9_2541 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="5690-5690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonContract.cs"];
m9_2979 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6779-6779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_2980 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="6781-6789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_2981 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="6791-6791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_2982 [label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="6793-6803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_2983 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="6805-6805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_2984 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="6807-6807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_2985 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="6808-6808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_2986 [label="byte[] bytes = (byte[])actual.Payload", span="6809-6809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_2987 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="6810-6810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_2988 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="6779-6779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonContract.cs"];
m9_240 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="692-692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonContract.cs"];
m9_241 [label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="694-699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonContract.cs"];
m9_242 [label="var json = JsonConvert.SerializeObject(input)", span="701-701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonContract.cs"];
m9_244 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="704-704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonContract.cs"];
m9_245 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="705-705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonContract.cs"];
m9_246 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonContract.cs"];
m9_243 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="702-702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonContract.cs"];
m9_247 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="692-692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonContract.cs"];
m9_3323 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7542-7542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3324 [label="string json = ''{one:1}{}''", span="7544-7544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3325 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="7546-7546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3327 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7548-7548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3332 [label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="7555-7555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3326 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="7547-7547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3330 [label="settings.CheckAdditionalContent = true", span="7553-7553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3331 [label="s = JsonSerializer.Create(settings)", span="7554-7554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3328 [label="Assert.IsNotNull(o)", span="7550-7550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3329 [label="Assert.AreEqual(1, o[''one''])", span="7551-7551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_3333 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="7542-7542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonContract.cs"];
m9_2113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4727-4727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2114 [label="AA myA = new AA(2)", span="4729-4729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2115 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="4730-4730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2116 [label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="4731-4737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2117 [label="BB myB = new BB(3, 4)", span="4739-4739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2118 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="4740-4740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2119 [label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="4741-4755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_2120 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="4727-4727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonContract.cs"];
m9_3590 [label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="45-45", cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonContract.cs"];
m9_3707 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8560-8560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonContract.cs"];
m9_3708 [label="throw new InvalidCastException();", span="8562-8562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonContract.cs"];
m9_3709 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="8560-8560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonContract.cs"];
m9_834 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonContract.cs"];
m9_3962 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9146-9146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3963 [label="throw new NotImplementedException();", span="9148-9148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3964 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9146-9146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1302-1302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonContract.cs"];
m9_2696 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonContract.cs"];
m9_2531 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5678-5678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonContract.cs"];
m9_2532 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="5680-5686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonContract.cs"];
m9_2533 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="5678-5678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonContract.cs"];
m9_3050 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6918-6918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonContract.cs"];
m9_3051 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="6920-6920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonContract.cs"];
m9_3052 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="6918-6918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonContract.cs"];
m9_538 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="JsonContract.cs"];
m9_1330 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2771-2771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonContract.cs"];
m9_1331 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="2773-2808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonContract.cs"];
m9_1332 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="2810-2810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonContract.cs"];
m9_1333 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="2771-2771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonContract.cs"];
m9_2697 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6154-6154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonContract.cs"];
m9_2698 [label="throw new NotImplementedException();", span="6156-6156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonContract.cs"];
m9_2699 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6154-6154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonContract.cs"];
m9_1816 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3927-3927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1817 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="3929-3929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1818 [label="Assert.IsNotNull(d)", span="3931-3931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1819 [label="Assert.IsNotNull(d.Dictionary)", span="3932-3932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1820 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="3933-3933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1821 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="3934-3934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1822 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="3935-3935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1823 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="3936-3936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1824 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="3937-3937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1825 [label="Assert.AreEqual(1, d.List.Count)", span="3938-3938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1826 [label="Assert.AreEqual(''existing'', d.List[0])", span="3939-3939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_1827 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="3927-3927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonContract.cs"];
m9_2060 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonContract.cs"];
m9_798 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonContract.cs"];
m9_277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="764-764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_278 [label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="766-775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_279 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="776-776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_287 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="784-784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_280 [label="Assert.AreEqual(3, o.Count)", span="777-777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_281 [label="Assert.AreEqual(true, (bool)o[''A''])", span="778-778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_282 [label="Assert.AreEqual(false, (bool)o[''B''])", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_283 [label="Assert.AreEqual(3, o[''C''].Count())", span="780-780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_284 [label="Assert.AreEqual(JTokenType.Comment, o[''C''][0].Type)", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_285 [label="Assert.AreEqual(1, (int)o[''C''][1])", span="782-782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_286 [label="Assert.AreEqual(JTokenType.Comment, o[''C''][2].Type)", span="783-783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_288 [label="json = @''{/* Test */}''", span="786-786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_289 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="787-787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_291 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="789-789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_290 [label="Assert.AreEqual(0, o.Count)", span="788-788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_292 [label="json = @''{''''A'''': true/* Test */}''", span="791-791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_293 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_296 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="795-795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_294 [label="Assert.AreEqual(1, o.Count)", span="793-793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_295 [label="Assert.AreEqual(true, (bool)o[''A''])", span="794-794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_297 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="764-764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonContract.cs"];
m9_1648 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3531-3531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonContract.cs"];
m9_1649 [label="string json = @''[]''", span="3533-3533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonContract.cs"];
m9_1650 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3535-3541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonContract.cs"];
m9_1651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3531-3531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonContract.cs"];
m9_2542 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonContract.cs"];
m9_237 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonContract.cs"];
m9_238 [label="Message = message", span="687-687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonContract.cs"];
m9_239 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="685-685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonContract.cs"];
m9_3171 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonContract.cs"];
m9_774 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1682-1682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_775 [label="Product product = new Product()", span="1684-1684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_776 [label="product.Name = ''Apple''", span="1686-1686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_777 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="1687-1687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_778 [label="product.Price = 3.99M", span="1688-1688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_779 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="1689-1689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_780 [label="string output = JsonConvert.SerializeObject(product)", span="1691-1691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_781 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="1703-1703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_782 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="1705-1705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_783 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="1706-1706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_784 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="1707-1707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_785 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="1708-1708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_786 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_787 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="1710-1710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_788 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="1682-1682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonContract.cs"];
m9_3680 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8514-8514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3681 [label="conversionType == typeof(object)", span="8516-8516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3683 [label="conversionType == typeof(int)", span="8520-8520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3685 [label="conversionType == typeof(long)", span="8524-8524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3687 [label="conversionType == typeof(string)", span="8528-8528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3682 [label="return this;", span="8518-8518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3684 [label="return (int)Value;", span="8522-8522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3686 [label="return (long)Value;", span="8526-8526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3688 [label="return Value.ToString(CultureInfo.InvariantCulture);", span="8530-8530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3689 [label="throw new InvalidCastException();", span="8532-8532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_3690 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="8514-8514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonContract.cs"];
m9_2422 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5438-5438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2423 [label="dynamic expando = new ExpandoObject()", span="5440-5440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2424 [label="expando.Int = 1", span="5441-5441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2425 [label="expando.Decimal = 99.9d", span="5442-5442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2426 [label="expando.Complex = new ExpandoObject()", span="5443-5443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2427 [label="expando.Complex.String = ''I am a string''", span="5444-5444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2428 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5445-5445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2429 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5447-5447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2433 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5460-5460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2435 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5463-5463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2439 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5469-5469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2441 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5472-5472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2430 [label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5448-5455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2431 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5457-5457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2432 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5459-5459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2434 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5462-5462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2436 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5465-5465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2437 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5466-5466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2438 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5468-5468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2440 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5471-5471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_2442 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5438-5438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonContract.cs"];
m9_525 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1138-1138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_526 [label="_serializationInfo = info", span="1140-1140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_527 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1138-1138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_3695 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8540-8540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonContract.cs"];
m9_3696 [label="throw new InvalidCastException();", span="8542-8542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonContract.cs"];
m9_3697 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="8540-8540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonContract.cs"];
m9_1227 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonContract.cs"];
m9_1691 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3595-3595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonContract.cs"];
m9_1692 [label="string json = @''{''''Name'''':''''''''}''", span="3597-3597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonContract.cs"];
m9_1693 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="3599-3599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonContract.cs"];
m9_1694 [label="Assert.AreEqual('''', p.Name)", span="3600-3600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonContract.cs"];
m9_1695 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="3595-3595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonContract.cs"];
m9_3322 [label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonContract.cs"];
m9_3743 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="8505-8505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonContract.cs"];
m9_2575 [label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="9270-9270", cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonContract.cs"];
m9_41 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonContract.cs"];
m9_42 [label="var person = new\r\n            {\r\n                Name = ''James'',\r\n                Age = 1,\r\n                RoleNames = new Dictionary<string, bool>\r\n                {\r\n                    { ''IsAdmin'', true },\r\n                    { ''IsModerator'', false }\r\n                }\r\n            }", span="171-180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonContract.cs"];
m9_43 [label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DictionaryKeyContractResolver()\r\n            })", span="182-185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonContract.cs"];
m9_44 [label="Assert.AreEqual(@''{\r\n  ''''NAME'''': ''''James'''',\r\n  ''''AGE'''': 1,\r\n  ''''ROLENAMES'''': {\r\n    ''''IsAdmin'''': true,\r\n    ''''IsModerator'''': false\r\n  }\r\n}'', json)", span="187-194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonContract.cs"];
m9_45 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="169-169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonContract.cs"];
m9_129 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonContract.cs"];
m9_3344 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7597-7597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonContract.cs"];
m9_3345 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object.'')", span="7599-7611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonContract.cs"];
m9_3346 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="7597-7597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonContract.cs"];
m9_3283 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonContract.cs"];
m9_3806 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8762-8762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonContract.cs"];
m9_3807 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8764-8764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonContract.cs"];
m9_3808 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8765-8765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonContract.cs"];
m9_3810 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8773-8776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonContract.cs"];
m9_3813 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8784-8784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonContract.cs"];
m9_3809 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8766-8771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonContract.cs"];
m9_3812 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8782-8782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonContract.cs"];
m9_3811 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8778-8780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonContract.cs"];
m9_3814 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="8762-8762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonContract.cs"];
m9_1739 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3700-3700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_1740 [label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="3702-3708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_1741 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="3710-3710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_1744 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="3720-3720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_1742 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="3712-3717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_1743 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="3719-3719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_1745 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="3721-3721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_1746 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="3722-3722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_1747 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="3723-3723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_1748 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="3700-3700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonContract.cs"];
m9_152 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="405-405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonContract.cs"];
m9_2957 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6739-6739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonContract.cs"];
m9_2958 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Error reading integer. Unexpected token: Boolean. Path 'PreProperty', line 2, position 22.'')", span="6741-6749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonContract.cs"];
m9_2959 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="6739-6739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonContract.cs"];
m9_83 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="787-787", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonContract.cs"];
m9_550 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonContract.cs"];
m9_2530 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="5610-5610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonContract.cs"];
m9_3665 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="85-85", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonContract.cs"];
m9_1946 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonContract.cs"];
m9_2026 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonContract.cs"];
m9_3321 [label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonContract.cs"];
m9_3947 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonContract.cs"];
m9_918 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="JsonContract.cs"];
m9_3824 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8814-8814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonContract.cs"];
m9_3825 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8816-8816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonContract.cs"];
m9_3826 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8817-8817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonContract.cs"];
m9_3828 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8825-8828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonContract.cs"];
m9_3831 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8836-8836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonContract.cs"];
m9_3827 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="8818-8823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonContract.cs"];
m9_3830 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8834-8834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonContract.cs"];
m9_3829 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8830-8832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonContract.cs"];
m9_3832 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="8814-8814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonContract.cs"];
m9_920 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonContract.cs"];
m9_921 [label="string json = @''[''''vvv\jvvv'''']''", span="2016-2016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonContract.cs"];
m9_922 [label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2018-2018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonContract.cs"];
m9_923 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2014-2014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonContract.cs"];
m9_552 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonContract.cs"];
m9_1143 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonContract.cs"];
m9_3013 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonContract.cs"];
m9_1406 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2986-2986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonContract.cs"];
m9_1407 [label="SubKlass i = new SubKlass(''my subprop'')", span="2988-2988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonContract.cs"];
m9_1408 [label="i.SuperProp = ''overrided superprop''", span="2989-2989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonContract.cs"];
m9_1409 [label="string json = JsonConvert.SerializeObject(i)", span="2991-2991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonContract.cs"];
m9_1410 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="2992-2992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonContract.cs"];
m9_1411 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="2994-2994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonContract.cs"];
m9_1412 [label="string newJson = JsonConvert.SerializeObject(ii)", span="2996-2996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonContract.cs"];
m9_1413 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="2997-2997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonContract.cs"];
m9_1414 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="2986-2986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonContract.cs"];
m9_3264 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7365-7365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonContract.cs"];
m9_3265 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7367-7371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonContract.cs"];
m9_3266 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7373-7376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonContract.cs"];
m9_3267 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7378-7381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonContract.cs"];
m9_3268 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7383-7383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonContract.cs"];
m9_3269 [label="Assert.AreEqual(2, dic2.Count)", span="7385-7385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonContract.cs"];
m9_3270 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7386-7386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonContract.cs"];
m9_3271 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7387-7387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonContract.cs"];
m9_3272 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7365-7365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonContract.cs"];
m9_618 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1325-1325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_619 [label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1327-1327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_620 [label="var json = JsonConvert.SerializeObject(original)", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_621 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1329-1329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_622 [label="Assert.AreEqual(expectedJson, json)", span="1330-1330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1325-1325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonContract.cs"];
m9_945 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonContract.cs"];
m9_2774 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6377-6377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2775 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6379-6379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2776 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6380-6380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2779 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6391-6391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2780 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6392-6392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2781 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6393-6393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2782 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6394-6394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2783 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6395-6395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2777 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6382-6388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2778 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6390-6390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_2784 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6377-6377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonContract.cs"];
m9_3624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8365-8365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3625 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="8367-8382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3626 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8384-8391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3627 [label="Assert.AreEqual(2, people.Count)", span="8393-8393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3628 [label="PersonReference john = people[0]", span="8395-8395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3629 [label="PersonReference jane = people[1]", span="8396-8396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3630 [label="Assert.AreEqual(john, jane.Spouse)", span="8398-8398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3631 [label="Assert.AreEqual(jane, john.Spouse)", span="8399-8399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3632 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="8365-8365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_1627 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3496-3496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonContract.cs"];
m9_1628 [label="string json = @''[]''", span="3498-3498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonContract.cs"];
m9_1629 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3500-3502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonContract.cs"];
m9_1630 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3496-3496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonContract.cs"];
m9_847 [label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonContract.cs"];
m9_3420 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7775-7775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonContract.cs"];
m9_3421 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="7777-7780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonContract.cs"];
m9_3422 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="7782-7782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonContract.cs"];
m9_3423 [label="Assert.AreEqual(1, l[0])", span="7784-7784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonContract.cs"];
m9_3424 [label="Assert.AreEqual(null, l[1])", span="7785-7785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonContract.cs"];
m9_3425 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="7775-7775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonContract.cs"];
m9_3918 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9068-9068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3919 [label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9070-9070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3920 [label="messageJObject == null", span="9071-9071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3922 [label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="9076-9076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3925 [label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="9080-9081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3921 [label="return null;", span="9073-9073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3923 [label="JToken displayNameToken", span="9078-9078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3926 [label="return new System.Net.Mail.MailAddress(address, displayName);", span="9083-9083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3927 [label="return new System.Net.Mail.MailAddress(address);", span="9086-9086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3924 [label="string displayName", span="9079-9079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3928 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9068-9068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3972 [label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="9199-9199", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonContract.cs"];
m9_3973 [label="Value = value", span="9201-9201", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonContract.cs"];
m9_3974 [label="Constructor = ''Public Paramatized''", span="9202-9202", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonContract.cs"];
m9_3975 [label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="9199-9199", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonContract.cs"];
m9_1669 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3561-3561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonContract.cs"];
m9_1670 [label="string json = @''{}''", span="3563-3563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonContract.cs"];
m9_1671 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3567-3567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonContract.cs"];
m9_1672 [label="Assert.Fail()", span="3568-3568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonContract.cs"];
m9_1673 [label=JsonSerializationException, span="3570-3570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonContract.cs"];
m9_1674 [label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="3572-3574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonContract.cs"];
m9_1675 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="3561-3561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonContract.cs"];
m9_378 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="909-909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_379 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="911-911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_380 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_381 [label="settings.Binder = customBinder", span="914-914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_382 [label="Assert.AreEqual(customBinder, settings.Binder)", span="915-915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_383 [label="settings.CheckAdditionalContent = true", span="917-917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_384 [label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="918-918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_385 [label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_386 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="921-921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_387 [label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="924-924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_388 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="925-925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_390 [label="settings.ContractResolver = resolver", span="929-929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_391 [label="Assert.AreEqual(resolver, settings.ContractResolver)", span="930-930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_392 [label="settings.Converters.Add(new StringEnumConverter())", span="932-932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_393 [label="Assert.AreEqual(1, settings.Converters.Count)", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_394 [label="settings.Culture = new CultureInfo(''en-nz'')", span="935-935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_395 [label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="936-936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_396 [label="settings.EqualityComparer = EqualityComparer<object>.Default", span="938-938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_397 [label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="939-939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_398 [label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="941-941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_399 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="942-942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_400 [label="settings.DateFormatString = ''yyyy''", span="944-944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_401 [label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="945-945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_402 [label="settings.DateParseHandling = DateParseHandling.None", span="947-947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_403 [label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_404 [label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="950-950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_405 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_406 [label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="953-953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_407 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_408 [label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_409 [label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_410 [label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_411 [label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="960-960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_412 [label="settings.Formatting = Formatting.Indented", span="962-962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_413 [label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_414 [label="settings.MaxDepth = 9001", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_415 [label="Assert.AreEqual(9001, settings.MaxDepth)", span="966-966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_416 [label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_417 [label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="969-969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_418 [label="settings.NullValueHandling = NullValueHandling.Ignore", span="971-971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_419 [label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="972-972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_420 [label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="974-974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_421 [label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="975-975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_422 [label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="977-977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_423 [label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="978-978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_424 [label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="980-980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_425 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_427 [label="settings.ReferenceResolver = referenceResolver", span="985-985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_428 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="986-986", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_429 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="988-988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_430 [label="settings.ReferenceResolverProvider = () => referenceResolver", span="990-990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_431 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="991-991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_432 [label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="993-993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_433 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="994-994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_435 [label="settings.TraceWriter = traceWriter", span="997-997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_436 [label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="998-998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_437 [label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1001-1001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_438 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="1002-1002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_439 [label="settings.TypeNameHandling = TypeNameHandling.All", span="1005-1005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_440 [label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="1006-1006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_389 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="928-928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_426 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="983-983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_434 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_441 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="909-909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonContract.cs"];
m9_665 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1393-1393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonContract.cs"];
m9_678 [label="_name = name", span="1395-1395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonContract.cs"];
m9_679 [label="_number = number", span="1396-1396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonContract.cs"];
m9_680 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1393-1393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonContract.cs"];
m9_2499 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5590-5590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonContract.cs"];
m9_2500 [label="var derived = new Derived(''meh'', ''woo'')", span="5592-5592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonContract.cs"];
m9_2501 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="5594-5598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonContract.cs"];
m9_2502 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="5600-5600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonContract.cs"];
m9_2503 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="5602-5602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonContract.cs"];
m9_2504 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="5604-5604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonContract.cs"];
m9_2505 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="5605-5605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonContract.cs"];
m9_2506 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="5590-5590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonContract.cs"];
m9_1655 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3545-3545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonContract.cs"];
m9_1656 [label="string json = @''new Constructor(123)''", span="3547-3547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonContract.cs"];
m9_1657 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 16.'')", span="3549-3549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonContract.cs"];
m9_1658 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="3545-3545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonContract.cs"];
m9_2027 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonContract.cs"];
m9_249 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="710-710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonContract.cs"];
m9_250 [label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="712-717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonContract.cs"];
m9_251 [label="var json = JsonConvert.SerializeObject(input)", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonContract.cs"];
m9_253 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="722-722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonContract.cs"];
m9_254 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="723-723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonContract.cs"];
m9_255 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonContract.cs"];
m9_252 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonContract.cs"];
m9_256 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="710-710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonContract.cs"];
m9_1199 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonContract.cs"];
m9_2474 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5530-5530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonContract.cs"];
m9_2475 [label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="5532-5532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonContract.cs"];
m9_2476 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5530-5530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonContract.cs"];
m9_3946 [label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0", cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonContract.cs"];
m9_669 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonContract.cs"];
m9_3596 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8279-8279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonContract.cs"];
m9_3597 [label="bar == null", span="8281-8281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonContract.cs"];
m9_3599 [label="Bar = bar", span="8284-8284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonContract.cs"];
m9_3598 [label="throw new ArgumentNullException(''bar'');", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonContract.cs"];
m9_3600 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8279-8279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonContract.cs"];
m9_3701 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8550-8550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonContract.cs"];
m9_3702 [label="throw new InvalidCastException();", span="8552-8552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonContract.cs"];
m9_3703 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="8550-8550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonContract.cs"];
m9_3394 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7696-7696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonContract.cs"];
m9_3395 [label="m_Item1 = item1", span="7698-7698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonContract.cs"];
m9_3396 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="7696-7696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonContract.cs"];
m9_2725 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6149-6149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonContract.cs"];
m9_2680 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6104-6104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonContract.cs"];
m9_2681 [label="Title = title", span="6106-6106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonContract.cs"];
m9_2682 [label="Categories = new Dictionary<string, int>()", span="6107-6107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonContract.cs"];
m9_2683 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6104-6104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonContract.cs"];
m9_3465 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="7897-7897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonContract.cs"];
m9_2466 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5512-5512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonContract.cs"];
m9_2467 [label="string json = ''{'Value':123456789876543.21}''", span="5514-5514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonContract.cs"];
m9_2468 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5515-5515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonContract.cs"];
m9_2469 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5516-5516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonContract.cs"];
m9_2471 [label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5520-5520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonContract.cs"];
m9_2470 [label="JsonSerializer serializer = new JsonSerializer()", span="5518-5518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonContract.cs"];
m9_2472 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5521-5521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonContract.cs"];
m9_2473 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5512-5512", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonContract.cs"];
m9_2731 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6236-6236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonContract.cs"];
m9_2732 [label="_readonlyString = ''default!''", span="6238-6238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonContract.cs"];
m9_2733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6236-6236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonContract.cs"];
m9_673 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonContract.cs"];
m9_2020 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonContract.cs"];
m9_895 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonContract.cs"];
m9_1090 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2333-2333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonContract.cs"];
m9_1091 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2335-2335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonContract.cs"];
m9_1092 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2337-2337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonContract.cs"];
m9_1095 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="2343-2343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonContract.cs"];
m9_1093 [label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2338-2340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonContract.cs"];
m9_1094 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2342-2342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonContract.cs"];
m9_1096 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2333-2333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonContract.cs"];
m9_590 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonContract.cs"];
m9_3426 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7790-7790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3427 [label="var tuple = new MyTuple<int>(500)", span="7792-7792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3428 [label="var json = JsonConvert.SerializeObject(tuple)", span="7793-7793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3429 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7794-7794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3431 [label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="7798-7798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3430 [label="MyTuple<int> obj = null", span="7796-7796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3432 [label="doStuff()", span="7801-7801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3433 [label="Assert.AreEqual(500, obj.Item1)", span="7802-7802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3434 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="7790-7790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_1997 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4463-4463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_1998 [label="_stringValue = info.GetString(''stringValue'')", span="4465-4465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_1999 [label="_intValue = info.GetInt32(''intValue'')", span="4466-4466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2000 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4467-4467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2001 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4468-4468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2002 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4469-4469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2003 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4470-4470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2004 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4472-4472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2005 [label="_byteValue = info.GetByte(''byteValue'')", span="4473-4473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2006 [label="_charValue = info.GetChar(''charValue'')", span="4474-4474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2007 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4475-4475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2008 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4476-4476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2009 [label="_shortValue = info.GetInt16(''shortValue'')", span="4477-4477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2010 [label="_longValue = info.GetInt64(''longValue'')", span="4478-4478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2011 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4479-4479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2012 [label="_floatValue = info.GetSingle(''floatValue'')", span="4480-4480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2013 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4481-4481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2014 [label="_uintValue = info.GetUInt32(''uintValue'')", span="4482-4482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2015 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4483-4483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2016 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4463-4463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_509 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1106-1106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonContract.cs"];
m9_510 [label="Ratio ratio = new Ratio(2, 1)", span="1108-1108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonContract.cs"];
m9_511 [label="string json = JsonConvert.SerializeObject(ratio)", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonContract.cs"];
m9_514 [label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1115-1115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonContract.cs"];
m9_512 [label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1111-1111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonContract.cs"];
m9_513 [label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1113-1113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonContract.cs"];
m9_515 [label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1116-1116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonContract.cs"];
m9_516 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1106-1106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonContract.cs"];
m9_2990 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6814-6814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonContract.cs"];
m9_2991 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6816-6816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonContract.cs"];
m9_2992 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6817-6817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonContract.cs"];
m9_2993 [label="Assert.AreEqual('''', dict[''k1''])", span="6819-6819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonContract.cs"];
m9_2994 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="6820-6820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonContract.cs"];
m9_2995 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="6814-6814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonContract.cs"];
m9_2709 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonContract.cs"];
m9_2710 [label="throw new NotImplementedException();", span="6186-6186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonContract.cs"];
m9_2711 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonContract.cs"];
m9_3273 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7391-7391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonContract.cs"];
m9_3274 [label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7393-7393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonContract.cs"];
m9_3275 [label="Assert.AreEqual('''', s)", span="7394-7394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonContract.cs"];
m9_3276 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7391-7391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonContract.cs"];
m9_1060 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonContract.cs"];
m9_3384 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7665-7665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonContract.cs"];
m9_3385 [label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                    )", span="7667-7670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonContract.cs"];
m9_3386 [label="Assert.AreEqual(123, result.Key)", span="7672-7672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonContract.cs"];
m9_3387 [label="Assert.AreEqual(''test value'', result.Value)", span="7673-7673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonContract.cs"];
m9_3388 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="7665-7665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonContract.cs"];
m9_48 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="151-151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="JsonContract.cs"];
m9_1924 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4300-4300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonContract.cs"];
m9_1925 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4300-4300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonContract.cs"];
m9_2797 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JsonContract.cs"];
m9_791 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1732-1732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonContract.cs"];
m9_792 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1734-1734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonContract.cs"];
m9_793 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="1736-1736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonContract.cs"];
m9_794 [label="Assert.AreEqual(''Orange'', p.Name)", span="1738-1738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonContract.cs"];
m9_795 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="1739-1739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonContract.cs"];
m9_796 [label="Assert.AreEqual(3.99m, p.Price)", span="1740-1740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonContract.cs"];
m9_797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="1732-1732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonContract.cs"];
m9_1345 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2823-2823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonContract.cs"];
m9_1346 [label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="2825-2831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonContract.cs"];
m9_1347 [label="return person;", span="2832-2832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonContract.cs"];
m9_1348 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="2823-2823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonContract.cs"];
m9_605 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonContract.cs"];
m9_853 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonContract.cs"];
m9_3622 [label="Entry Size.cstr", span="", cluster="Size.cstr", file="JsonContract.cs"];
m9_1399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2970-2970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonContract.cs"];
m9_1400 [label="string json = ''{ 'testProperty1': 'value' }''", span="2974-2974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonContract.cs"];
m9_1401 [label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="2975-2975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonContract.cs"];
m9_1402 [label="Assert.Fail()", span="2977-2977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonContract.cs"];
m9_1403 [label=JsonSerializationException, span="2979-2979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonContract.cs"];
m9_1404 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="2981-2981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonContract.cs"];
m9_1405 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="2970-2970", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonContract.cs"];
m9_2845 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="874-874", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonContract.cs"];
m9_266 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="669-669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonContract.cs"];
m9_1302 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2721-2721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonContract.cs"];
m9_1303 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="2725-2727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonContract.cs"];
m9_1304 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonContract.cs"];
m9_1305 [label="Assert.Fail()", span="2730-2730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonContract.cs"];
m9_1306 [label=JsonSerializationException, span="2732-2732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonContract.cs"];
m9_1307 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="2734-2734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonContract.cs"];
m9_1308 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="2721-2721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonContract.cs"];
m9_3929 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="433-433", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonContract.cs"];
m9_1295 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2704-2704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_1296 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="2706-2717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_1297 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="2704-2704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonContract.cs"];
m9_3377 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="7645-7645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3378 [label="return true;", span="7647-7647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3379 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="7645-7645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_602 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonContract.cs"];
m9_2510 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5626-5626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2511 [label="info.AddValue(''Name'', _name)", span="5628-5628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2512 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5626-5626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_3731 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8600-8600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonContract.cs"];
m9_3732 [label="throw new InvalidCastException();", span="8602-8602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonContract.cs"];
m9_3733 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="8600-8600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonContract.cs"];
m9_1729 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonContract.cs"];
m9_2215 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="5000-5000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonContract.cs"];
m9_773 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonContract.cs"];
m9_3435 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="JsonContract.cs"];
m9_3691 [label="Entry System.InvalidCastException.InvalidCastException()", span="0-0", cluster="System.InvalidCastException.InvalidCastException()", file="JsonContract.cs"];
m9_3104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7020-7020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonContract.cs"];
m9_3105 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="7022-7022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonContract.cs"];
m9_3106 [label="person.Name = ''John Doe''", span="7023-7023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonContract.cs"];
m9_3107 [label="person.Age = 25", span="7024-7024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonContract.cs"];
m9_3108 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="7026-7026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonContract.cs"];
m9_3110 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="7029-7029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonContract.cs"];
m9_3109 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="7027-7027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonContract.cs"];
m9_3111 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7020-7020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonContract.cs"];
m9_3976 [label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="9236-9236", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonContract.cs"];
m9_3977 [label="Constructor = ''NonPublic''", span="9238-9238", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonContract.cs"];
m9_3978 [label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="9236-9236", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonContract.cs"];
m9_1519 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3272-3272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_1520 [label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3274-3283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_1521 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3285-3285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_1522 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3287-3287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_1523 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3288-3288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_1524 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3289-3289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_1525 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3290-3290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_1526 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3291-3291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_1527 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3292-3292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_1528 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3272-3272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonContract.cs"];
m9_763 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonContract.cs"];
m9_764 [label="Store store = new Store()", span="1669-1669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonContract.cs"];
m9_765 [label="string jsonText = JsonConvert.SerializeObject(store)", span="1671-1671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonContract.cs"];
m9_767 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="1675-1675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonContract.cs"];
m9_768 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="1676-1676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonContract.cs"];
m9_766 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="1673-1673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonContract.cs"];
m9_769 [label="Console.WriteLine(jsonText)", span="1678-1678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonContract.cs"];
m9_770 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="1667-1667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonContract.cs"];
m9_2194 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonContract.cs"];
m9_3514 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8064-8064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonContract.cs"];
m9_3515 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8064-8064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonContract.cs"];
m9_3301 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7444-7444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonContract.cs"];
m9_3302 [label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="7446-7456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonContract.cs"];
m9_3303 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="7458-7458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonContract.cs"];
m9_3304 [label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="7469-7483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonContract.cs"];
m9_3305 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="7444-7444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonContract.cs"];
m9_2560 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5739-5739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonContract.cs"];
m9_2561 [label="MultipleParamatrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParamatrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="5741-5741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonContract.cs"];
m9_2562 [label="Assert.AreEqual(''Public Paramatized 2'', c.Constructor)", span="5742-5742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonContract.cs"];
m9_2563 [label="Assert.AreEqual(''value!'', c.Value)", span="5743-5743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonContract.cs"];
m9_2564 [label="Assert.AreEqual(1, c.Age)", span="5744-5744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonContract.cs"];
m9_2565 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", span="5739-5739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParamatrizedConstructorsJsonConstructorTest()", file="JsonContract.cs"];
m9_1024 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2201-2201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1025 [label="ClassWithArray wibble = new ClassWithArray()", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1026 [label="wibble.Foo = ''hello''", span="2204-2204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1027 [label="wibble.Bar.Add(1)", span="2205-2205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1028 [label="wibble.Bar.Add(2)", span="2206-2206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1029 [label="wibble.Bar.Add(3)", span="2207-2207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1030 [label="string json = JsonConvert.SerializeObject(wibble)", span="2208-2208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1031 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2210-2210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1032 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2211-2211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1033 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2213-2213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1034 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2214-2214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1035 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2215-2215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1036 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2216-2216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1037 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2217-2217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1038 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2218-2218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_1039 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2201-2201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonContract.cs"];
m9_2081 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4643-4643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2082 [label="Person person = new Person()", span="4645-4645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2083 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="4646-4646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2084 [label="person.LastModified = person.BirthDate", span="4647-4647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2085 [label="person.Department = ''Department!''", span="4648-4648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2086 [label="person.Name = ''Name!''", span="4649-4649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2090 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="4659-4659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2087 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="4651-4651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2088 [label="string dateTimeOffsetText", span="4652-4652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2096 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="4693-4693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2089 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="4654-4654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2092 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="4665-4688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2091 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="4661-4664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2093 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="4690-4690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2094 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="4691-4691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2095 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="4692-4692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2097 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="4694-4694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2098 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="4695-4695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2099 [label="Assert.AreEqual(null, o2._nullableInt)", span="4696-4696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_2100 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="4643-4643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonContract.cs"];
m9_3460 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7908-7908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonContract.cs"];
m9_3461 [label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="7910-7917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonContract.cs"];
m9_3462 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="7919-7922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonContract.cs"];
m9_3463 [label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="7924-7931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonContract.cs"];
m9_3464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="7908-7908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonContract.cs"];
m9_3969 [label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="9194-9194", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonContract.cs"];
m9_3970 [label="Constructor = ''NonPublic''", span="9196-9196", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonContract.cs"];
m9_3971 [label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="9194-9194", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonContract.cs"];
m9_1171 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2472-2472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1172 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2474-2474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1173 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2475-2475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1177 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2482-2482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1178 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2483-2483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1174 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2477-2477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1175 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1176 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2480-2480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2472-2472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_2971 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6765-6765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonContract.cs"];
m9_2972 [label="string json = @''{''''Id'''':null}''", span="6767-6767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonContract.cs"];
m9_2973 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6768-6768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonContract.cs"];
m9_2974 [label="Assert.AreEqual(null, c.Id)", span="6770-6770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonContract.cs"];
m9_2975 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="6772-6772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonContract.cs"];
m9_2976 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="6773-6773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonContract.cs"];
m9_2977 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="6775-6775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonContract.cs"];
m9_2978 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="6765-6765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonContract.cs"];
m9_1415 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonContract.cs"];
m9_2809 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonContract.cs"];
m9_1559 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3376-3376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1560 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3378-3390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1561 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3392-3392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1562 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3394-3394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1563 [label="Assert.AreEqual(2, content.Children.Count)", span="3395-3395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1564 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3396-3396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1565 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonContract.cs"];
m9_1566 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3376-3376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonContract.cs"];
m9_756 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonContract.cs"];
m9_750 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="JsonContract.cs"];
m9_3909 [label="Entry lambda expression", span="9050-9057", cluster="lambda expression", file="JsonContract.cs"];
m9_25 [label="Entry lambda expression", span="130-133", cluster="lambda expression", file="JsonContract.cs"];
m9_26 [label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="132-132", cluster="lambda expression", file="JsonContract.cs"];
m9_27 [label="Exit lambda expression", span="130-133", cluster="lambda expression", file="JsonContract.cs"];
m9_31 [label="Entry lambda expression", span="139-142", cluster="lambda expression", file="JsonContract.cs"];
m9_32 [label="JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'')", span="141-141", cluster="lambda expression", file="JsonContract.cs"];
m9_33 [label="Exit lambda expression", span="139-142", cluster="lambda expression", file="JsonContract.cs"];
m9_58 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="JsonContract.cs"];
m9_61 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="JsonContract.cs"];
m9_64 [label="Entry lambda expression", span="209-209", cluster="lambda expression", file="JsonContract.cs"];
m9_67 [label="Entry lambda expression", span="213-213", cluster="lambda expression", file="JsonContract.cs"];
m9_70 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="JsonContract.cs"];
m9_73 [label="Entry lambda expression", span="221-221", cluster="lambda expression", file="JsonContract.cs"];
m9_59 [label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="201-201", cluster="lambda expression", file="JsonContract.cs"];
m9_60 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="JsonContract.cs"];
m9_62 [label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="205-205", cluster="lambda expression", file="JsonContract.cs"];
m9_63 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="JsonContract.cs"];
m9_65 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="209-209", cluster="lambda expression", file="JsonContract.cs"];
m9_66 [label="Exit lambda expression", span="209-209", cluster="lambda expression", file="JsonContract.cs"];
m9_68 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="213-213", cluster="lambda expression", file="JsonContract.cs"];
m9_69 [label="Exit lambda expression", span="213-213", cluster="lambda expression", file="JsonContract.cs"];
m9_71 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="217-217", cluster="lambda expression", file="JsonContract.cs"];
m9_72 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="JsonContract.cs"];
m9_74 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="221-221", cluster="lambda expression", file="JsonContract.cs"];
m9_75 [label="Exit lambda expression", span="221-221", cluster="lambda expression", file="JsonContract.cs"];
m9_97 [label="JsonConvert.SerializeObject(c1)", span="260-260", cluster="lambda expression", file="JsonContract.cs"];
m9_96 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="JsonContract.cs"];
m9_99 [label="Entry lambda expression", span="273-273", cluster="lambda expression", file="JsonContract.cs"];
m9_102 [label="Entry lambda expression", span="277-277", cluster="lambda expression", file="JsonContract.cs"];
m9_98 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="JsonContract.cs"];
m9_100 [label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}'')", span="273-273", cluster="lambda expression", file="JsonContract.cs"];
m9_101 [label="Exit lambda expression", span="273-273", cluster="lambda expression", file="JsonContract.cs"];
m9_103 [label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="277-277", cluster="lambda expression", file="JsonContract.cs"];
m9_104 [label="Exit lambda expression", span="277-277", cluster="lambda expression", file="JsonContract.cs"];
m9_119 [label="JsonConvert.SerializeObject(c1)", span="302-302", cluster="lambda expression", file="JsonContract.cs"];
m9_118 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="JsonContract.cs"];
m9_121 [label="Entry lambda expression", span="312-312", cluster="lambda expression", file="JsonContract.cs"];
m9_120 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="JsonContract.cs"];
m9_122 [label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="312-312", cluster="lambda expression", file="JsonContract.cs"];
m9_123 [label="Exit lambda expression", span="312-312", cluster="lambda expression", file="JsonContract.cs"];
m9_198 [label="a.ErrorContext.Handled = true", span="583-583", cluster="lambda expression", file="JsonContract.cs"];
m9_197 [label="Entry lambda expression", span="583-583", cluster="lambda expression", file="JsonContract.cs"];
m9_199 [label="Exit lambda expression", span="583-583", cluster="lambda expression", file="JsonContract.cs"];
m9_444 [label=referenceResolver, span="990-990", cluster="lambda expression", file="JsonContract.cs"];
m9_443 [label="Entry lambda expression", span="990-990", cluster="lambda expression", file="JsonContract.cs"];
m9_445 [label="Exit lambda expression", span="990-990", cluster="lambda expression", file="JsonContract.cs"];
m9_757 [label="Entry lambda expression", span="1647-1647", cluster="lambda expression", file="JsonContract.cs"];
m9_760 [label="Entry lambda expression", span="1650-1650", cluster="lambda expression", file="JsonContract.cs"];
m9_758 [label="p.Name", span="1647-1647", cluster="lambda expression", file="JsonContract.cs"];
m9_759 [label="Exit lambda expression", span="1647-1647", cluster="lambda expression", file="JsonContract.cs"];
m9_761 [label="p.Name", span="1650-1650", cluster="lambda expression", file="JsonContract.cs"];
m9_762 [label="Exit lambda expression", span="1650-1650", cluster="lambda expression", file="JsonContract.cs"];
m9_892 [label="Entry lambda expression", span="1973-1973", cluster="lambda expression", file="JsonContract.cs"];
m9_893 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="1973-1973", cluster="lambda expression", file="JsonContract.cs"];
m9_894 [label="Exit lambda expression", span="1973-1973", cluster="lambda expression", file="JsonContract.cs"];
m9_925 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="2018-2018", cluster="lambda expression", file="JsonContract.cs"];
m9_924 [label="Entry lambda expression", span="2018-2018", cluster="lambda expression", file="JsonContract.cs"];
m9_926 [label="Exit lambda expression", span="2018-2018", cluster="lambda expression", file="JsonContract.cs"];
m9_1203 [label="Entry lambda expression", span="2524-2528", cluster="lambda expression", file="JsonContract.cs"];
m9_1204 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2526-2526", cluster="lambda expression", file="JsonContract.cs"];
m9_1205 [label="JsonConvert.SerializeObject(c)", span="2527-2527", cluster="lambda expression", file="JsonContract.cs"];
m9_1206 [label="Exit lambda expression", span="2524-2528", cluster="lambda expression", file="JsonContract.cs"];
m9_1298 [label="Entry lambda expression", span="2706-2717", cluster="lambda expression", file="JsonContract.cs"];
m9_1299 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="2708-2714", cluster="lambda expression", file="JsonContract.cs"];
m9_1300 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="2716-2716", cluster="lambda expression", file="JsonContract.cs"];
m9_1301 [label="Exit lambda expression", span="2706-2717", cluster="lambda expression", file="JsonContract.cs"];
m9_1343 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="2820-2820", cluster="lambda expression", file="JsonContract.cs"];
m9_1342 [label="Entry lambda expression", span="2820-2820", cluster="lambda expression", file="JsonContract.cs"];
m9_1344 [label="Exit lambda expression", span="2820-2820", cluster="lambda expression", file="JsonContract.cs"];
m9_1449 [label="Entry lambda expression", span="3071-3077", cluster="lambda expression", file="JsonContract.cs"];
m9_1450 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3073-3073", cluster="lambda expression", file="JsonContract.cs"];
m9_1451 [label="o.ReferenceLoopHandlingErrorProperty = o", span="3074-3074", cluster="lambda expression", file="JsonContract.cs"];
m9_1452 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3076-3076", cluster="lambda expression", file="JsonContract.cs"];
m9_1453 [label="Exit lambda expression", span="3071-3077", cluster="lambda expression", file="JsonContract.cs"];
m9_1591 [label="JsonConvert.DeserializeObject<TestObjects.Event>(json)", span="3440-3440", cluster="lambda expression", file="JsonContract.cs"];
m9_1590 [label="Entry lambda expression", span="3440-3440", cluster="lambda expression", file="JsonContract.cs"];
m9_1592 [label="Exit lambda expression", span="3440-3440", cluster="lambda expression", file="JsonContract.cs"];
m9_1618 [label="JsonConvert.DeserializeObject<Person>(json)", span="3479-3479", cluster="lambda expression", file="JsonContract.cs"];
m9_1617 [label="Entry lambda expression", span="3479-3479", cluster="lambda expression", file="JsonContract.cs"];
m9_1619 [label="Exit lambda expression", span="3479-3479", cluster="lambda expression", file="JsonContract.cs"];
m9_1625 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3489-3489", cluster="lambda expression", file="JsonContract.cs"];
m9_1624 [label="Entry lambda expression", span="3489-3489", cluster="lambda expression", file="JsonContract.cs"];
m9_1626 [label="Exit lambda expression", span="3489-3489", cluster="lambda expression", file="JsonContract.cs"];
m9_1632 [label="JsonConvert.DeserializeObject<Exception>(json)", span="3500-3500", cluster="lambda expression", file="JsonContract.cs"];
m9_1631 [label="Entry lambda expression", span="3500-3500", cluster="lambda expression", file="JsonContract.cs"];
m9_1633 [label="Exit lambda expression", span="3500-3500", cluster="lambda expression", file="JsonContract.cs"];
m9_1639 [label="JsonConvert.DeserializeObject<double>(json)", span="3511-3511", cluster="lambda expression", file="JsonContract.cs"];
m9_1638 [label="Entry lambda expression", span="3511-3511", cluster="lambda expression", file="JsonContract.cs"];
m9_1640 [label="Exit lambda expression", span="3511-3511", cluster="lambda expression", file="JsonContract.cs"];
m9_1646 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3523-3523", cluster="lambda expression", file="JsonContract.cs"];
m9_1645 [label="Entry lambda expression", span="3523-3523", cluster="lambda expression", file="JsonContract.cs"];
m9_1647 [label="Exit lambda expression", span="3523-3523", cluster="lambda expression", file="JsonContract.cs"];
m9_1653 [label="JsonConvert.DeserializeObject<JObject>(json)", span="3536-3536", cluster="lambda expression", file="JsonContract.cs"];
m9_1652 [label="Entry lambda expression", span="3536-3536", cluster="lambda expression", file="JsonContract.cs"];
m9_1654 [label="Exit lambda expression", span="3536-3536", cluster="lambda expression", file="JsonContract.cs"];
m9_1660 [label="JsonConvert.DeserializeObject<Person>(json)", span="3549-3549", cluster="lambda expression", file="JsonContract.cs"];
m9_1659 [label="Entry lambda expression", span="3549-3549", cluster="lambda expression", file="JsonContract.cs"];
m9_1661 [label="Exit lambda expression", span="3549-3549", cluster="lambda expression", file="JsonContract.cs"];
m9_1667 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="3557-3557", cluster="lambda expression", file="JsonContract.cs"];
m9_1666 [label="Entry lambda expression", span="3557-3557", cluster="lambda expression", file="JsonContract.cs"];
m9_1668 [label="Exit lambda expression", span="3557-3557", cluster="lambda expression", file="JsonContract.cs"];
m9_1681 [label="JsonConvert.PopulateObject(json, new Person())", span="3583-3583", cluster="lambda expression", file="JsonContract.cs"];
m9_1680 [label="Entry lambda expression", span="3583-3583", cluster="lambda expression", file="JsonContract.cs"];
m9_1682 [label="Exit lambda expression", span="3583-3583", cluster="lambda expression", file="JsonContract.cs"];
m9_1689 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="3591-3591", cluster="lambda expression", file="JsonContract.cs"];
m9_1688 [label="Entry lambda expression", span="3591-3591", cluster="lambda expression", file="JsonContract.cs"];
m9_1690 [label="Exit lambda expression", span="3591-3591", cluster="lambda expression", file="JsonContract.cs"];
m9_1699 [label="Entry lambda expression", span="3606-3617", cluster="lambda expression", file="JsonContract.cs"];
m9_1700 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3608-3616", cluster="lambda expression", file="JsonContract.cs"];
m9_1701 [label="Exit lambda expression", span="3606-3617", cluster="lambda expression", file="JsonContract.cs"];
m9_1706 [label="Entry lambda expression", span="3623-3634", cluster="lambda expression", file="JsonContract.cs"];
m9_1707 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3625-3633", cluster="lambda expression", file="JsonContract.cs"];
m9_1708 [label="Exit lambda expression", span="3623-3634", cluster="lambda expression", file="JsonContract.cs"];
m9_1712 [label="Entry lambda expression", span="3640-3651", cluster="lambda expression", file="JsonContract.cs"];
m9_1713 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3642-3650", cluster="lambda expression", file="JsonContract.cs"];
m9_1714 [label="Exit lambda expression", span="3640-3651", cluster="lambda expression", file="JsonContract.cs"];
m9_1718 [label="Entry lambda expression", span="3657-3668", cluster="lambda expression", file="JsonContract.cs"];
m9_1719 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="3659-3667", cluster="lambda expression", file="JsonContract.cs"];
m9_1720 [label="Exit lambda expression", span="3657-3668", cluster="lambda expression", file="JsonContract.cs"];
m9_1831 [label="Entry lambda expression", span="3976-3976", cluster="lambda expression", file="JsonContract.cs"];
m9_1832 [label="x.Id == id", span="3976-3976", cluster="lambda expression", file="JsonContract.cs"];
m9_1833 [label="Exit lambda expression", span="3976-3976", cluster="lambda expression", file="JsonContract.cs"];
m9_1868 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4069-4073", cluster="lambda expression", file="JsonContract.cs"];
m9_1867 [label="Entry lambda expression", span="4069-4073", cluster="lambda expression", file="JsonContract.cs"];
m9_1869 [label="Exit lambda expression", span="4069-4073", cluster="lambda expression", file="JsonContract.cs"];
m9_2260 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5074-5074", cluster="lambda expression", file="JsonContract.cs"];
m9_2259 [label="Entry lambda expression", span="5074-5074", cluster="lambda expression", file="JsonContract.cs"];
m9_2261 [label="Exit lambda expression", span="5074-5074", cluster="lambda expression", file="JsonContract.cs"];
m9_2265 [label="Entry lambda expression", span="5080-5095", cluster="lambda expression", file="JsonContract.cs"];
m9_2266 [label="var reference = new Dictionary<string, object>()", span="5084-5084", cluster="lambda expression", file="JsonContract.cs"];
m9_2267 [label="reference.Add(''$ref'', 1)", span="5085-5085", cluster="lambda expression", file="JsonContract.cs"];
m9_2268 [label="reference.Add(''$id'', 1)", span="5086-5086", cluster="lambda expression", file="JsonContract.cs"];
m9_2272 [label="child.Add(''Father'', reference)", span="5091-5091", cluster="lambda expression", file="JsonContract.cs"];
m9_2269 [label="var child = new Dictionary<string, object>()", span="5088-5088", cluster="lambda expression", file="JsonContract.cs"];
m9_2270 [label="child.Add(''_id'', 2)", span="5089-5089", cluster="lambda expression", file="JsonContract.cs"];
m9_2271 [label="child.Add(''Name'', ''Isabell'')", span="5090-5090", cluster="lambda expression", file="JsonContract.cs"];
m9_2273 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5093-5093", cluster="lambda expression", file="JsonContract.cs"];
m9_2274 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5094-5094", cluster="lambda expression", file="JsonContract.cs"];
m9_2275 [label="Exit lambda expression", span="5080-5095", cluster="lambda expression", file="JsonContract.cs"];
m9_2376 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5316-5316", cluster="lambda expression", file="JsonContract.cs"];
m9_2375 [label="Entry lambda expression", span="5316-5316", cluster="lambda expression", file="JsonContract.cs"];
m9_2377 [label="Exit lambda expression", span="5316-5316", cluster="lambda expression", file="JsonContract.cs"];
m9_2592 [label="Entry lambda expression", span="5803-5803", cluster="lambda expression", file="JsonContract.cs"];
m9_2593 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="5803-5803", cluster="lambda expression", file="JsonContract.cs"];
m9_2594 [label="Exit lambda expression", span="5803-5803", cluster="lambda expression", file="JsonContract.cs"];
m9_2927 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="6673-6673", cluster="lambda expression", file="JsonContract.cs"];
m9_2926 [label="Entry lambda expression", span="6673-6673", cluster="lambda expression", file="JsonContract.cs"];
m9_2928 [label="Exit lambda expression", span="6673-6673", cluster="lambda expression", file="JsonContract.cs"];
m9_2941 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="6712-6712", cluster="lambda expression", file="JsonContract.cs"];
m9_2940 [label="Entry lambda expression", span="6712-6712", cluster="lambda expression", file="JsonContract.cs"];
m9_2942 [label="Exit lambda expression", span="6712-6712", cluster="lambda expression", file="JsonContract.cs"];
m9_2960 [label="Entry lambda expression", span="6741-6749", cluster="lambda expression", file="JsonContract.cs"];
m9_2961 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="6743-6746", cluster="lambda expression", file="JsonContract.cs"];
m9_2962 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6748-6748", cluster="lambda expression", file="JsonContract.cs"];
m9_2963 [label="Exit lambda expression", span="6741-6749", cluster="lambda expression", file="JsonContract.cs"];
m9_2967 [label="Entry lambda expression", span="6755-6761", cluster="lambda expression", file="JsonContract.cs"];
m9_2968 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="6757-6758", cluster="lambda expression", file="JsonContract.cs"];
m9_2969 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="6760-6760", cluster="lambda expression", file="JsonContract.cs"];
m9_2970 [label="Exit lambda expression", span="6755-6761", cluster="lambda expression", file="JsonContract.cs"];
m9_3041 [label="Entry lambda expression", span="6908-6908", cluster="lambda expression", file="JsonContract.cs"];
m9_3042 [label="JsonConvert.DeserializeObject<double>('''')", span="6908-6908", cluster="lambda expression", file="JsonContract.cs"];
m9_3043 [label="Exit lambda expression", span="6908-6908", cluster="lambda expression", file="JsonContract.cs"];
m9_3047 [label="Entry lambda expression", span="6914-6914", cluster="lambda expression", file="JsonContract.cs"];
m9_3048 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="6914-6914", cluster="lambda expression", file="JsonContract.cs"];
m9_3049 [label="Exit lambda expression", span="6914-6914", cluster="lambda expression", file="JsonContract.cs"];
m9_3053 [label="Entry lambda expression", span="6920-6920", cluster="lambda expression", file="JsonContract.cs"];
m9_3054 [label="JsonConvert.DeserializeObject<int>('''')", span="6920-6920", cluster="lambda expression", file="JsonContract.cs"];
m9_3055 [label="Exit lambda expression", span="6920-6920", cluster="lambda expression", file="JsonContract.cs"];
m9_3063 [label="Entry lambda expression", span="6934-6934", cluster="lambda expression", file="JsonContract.cs"];
m9_3064 [label="JsonConvert.DeserializeObject<double>(null)", span="6934-6934", cluster="lambda expression", file="JsonContract.cs"];
m9_3065 [label="Exit lambda expression", span="6934-6934", cluster="lambda expression", file="JsonContract.cs"];
m9_3069 [label="Entry lambda expression", span="6945-6945", cluster="lambda expression", file="JsonContract.cs"];
m9_3070 [label="JsonConvert.DeserializeObject(null)", span="6945-6945", cluster="lambda expression", file="JsonContract.cs"];
m9_3071 [label="Exit lambda expression", span="6945-6945", cluster="lambda expression", file="JsonContract.cs"];
m9_3190 [label="errors.Add(e.ErrorContext.Error.Message)", span="7181-7181", cluster="lambda expression", file="JsonContract.cs"];
m9_3191 [label="e.ErrorContext.Handled = true", span="7182-7182", cluster="lambda expression", file="JsonContract.cs"];
m9_3189 [label="Entry lambda expression", span="7179-7183", cluster="lambda expression", file="JsonContract.cs"];
m9_3192 [label="Exit lambda expression", span="7179-7183", cluster="lambda expression", file="JsonContract.cs"];
m9_3205 [label="errors.Add(e.ErrorContext.Error.Message)", span="7206-7206", cluster="lambda expression", file="JsonContract.cs"];
m9_3206 [label="e.ErrorContext.Handled = true", span="7207-7207", cluster="lambda expression", file="JsonContract.cs"];
m9_3204 [label="Entry lambda expression", span="7204-7208", cluster="lambda expression", file="JsonContract.cs"];
m9_3207 [label="Exit lambda expression", span="7204-7208", cluster="lambda expression", file="JsonContract.cs"];
m9_3220 [label="errors.Add(e.ErrorContext.Error.Message)", span="7229-7229", cluster="lambda expression", file="JsonContract.cs"];
m9_3221 [label="e.ErrorContext.Handled = true", span="7230-7230", cluster="lambda expression", file="JsonContract.cs"];
m9_3219 [label="Entry lambda expression", span="7227-7231", cluster="lambda expression", file="JsonContract.cs"];
m9_3222 [label="Exit lambda expression", span="7227-7231", cluster="lambda expression", file="JsonContract.cs"];
m9_3335 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="7555-7555", cluster="lambda expression", file="JsonContract.cs"];
m9_3334 [label="Entry lambda expression", span="7555-7555", cluster="lambda expression", file="JsonContract.cs"];
m9_3336 [label="Exit lambda expression", span="7555-7555", cluster="lambda expression", file="JsonContract.cs"];
m9_3347 [label="Entry lambda expression", span="7599-7611", cluster="lambda expression", file="JsonContract.cs"];
m9_3348 [label="string json = ''[{},1]''", span="7601-7601", cluster="lambda expression", file="JsonContract.cs"];
m9_3349 [label="JsonSerializer serializer = new JsonSerializer()", span="7603-7603", cluster="lambda expression", file="JsonContract.cs"];
m9_3351 [label="var reader = new JsonTextReader(new StringReader(json))", span="7606-7606", cluster="lambda expression", file="JsonContract.cs"];
m9_3350 [label="serializer.CheckAdditionalContent = true", span="7604-7604", cluster="lambda expression", file="JsonContract.cs"];
m9_3354 [label="serializer.Deserialize(reader, typeof(MyType))", span="7610-7610", cluster="lambda expression", file="JsonContract.cs"];
m9_3352 [label="reader.Read()", span="7607-7607", cluster="lambda expression", file="JsonContract.cs"];
m9_3353 [label="reader.Read()", span="7608-7608", cluster="lambda expression", file="JsonContract.cs"];
m9_3355 [label="Exit lambda expression", span="7599-7611", cluster="lambda expression", file="JsonContract.cs"];
m9_3437 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="7798-7798", cluster="lambda expression", file="JsonContract.cs"];
m9_3436 [label="Entry lambda expression", span="7798-7798", cluster="lambda expression", file="JsonContract.cs"];
m9_3438 [label="Exit lambda expression", span="7798-7798", cluster="lambda expression", file="JsonContract.cs"];
m9_3511 [label="Entry lambda expression", span="8058-8058", cluster="lambda expression", file="JsonContract.cs"];
m9_3512 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="8058-8058", cluster="lambda expression", file="JsonContract.cs"];
m9_3513 [label="Exit lambda expression", span="8058-8058", cluster="lambda expression", file="JsonContract.cs"];
m9_3519 [label="Entry lambda expression", span="8073-8073", cluster="lambda expression", file="JsonContract.cs"];
m9_3520 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8073-8073", cluster="lambda expression", file="JsonContract.cs"];
m9_3521 [label="Exit lambda expression", span="8073-8073", cluster="lambda expression", file="JsonContract.cs"];
m9_3529 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8087-8087", cluster="lambda expression", file="JsonContract.cs"];
m9_3528 [label="Entry lambda expression", span="8087-8087", cluster="lambda expression", file="JsonContract.cs"];
m9_3530 [label="Exit lambda expression", span="8087-8087", cluster="lambda expression", file="JsonContract.cs"];
m9_3642 [label="Entry lambda expression", span="8424-8424", cluster="lambda expression", file="JsonContract.cs"];
m9_3643 [label="new IdReferenceResolver()", span="8424-8424", cluster="lambda expression", file="JsonContract.cs"];
m9_3644 [label="Exit lambda expression", span="8424-8424", cluster="lambda expression", file="JsonContract.cs"];
m9_3747 [label="Entry lambda expression", span="8632-8636", cluster="lambda expression", file="JsonContract.cs"];
m9_3748 [label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="8634-8634", cluster="lambda expression", file="JsonContract.cs"];
m9_3749 [label="JsonConvert.DeserializeObject<JObject>(content)", span="8635-8635", cluster="lambda expression", file="JsonContract.cs"];
m9_3750 [label="Exit lambda expression", span="8632-8636", cluster="lambda expression", file="JsonContract.cs"];
m9_3882 [label="Entry lambda expression", span="8959-8959", cluster="lambda expression", file="JsonContract.cs"];
m9_3883 [label="JsonConvert.SerializeObject(new ErroringTestClass())", span="8959-8959", cluster="lambda expression", file="JsonContract.cs"];
m9_3884 [label="Exit lambda expression", span="8959-8959", cluster="lambda expression", file="JsonContract.cs"];
m9_3889 [label="Entry lambda expression", span="8965-8965", cluster="lambda expression", file="JsonContract.cs"];
m9_3890 [label="JsonConvert.DeserializeObject<string>(''020474068'')", span="8965-8965", cluster="lambda expression", file="JsonContract.cs"];
m9_3891 [label="Exit lambda expression", span="8965-8965", cluster="lambda expression", file="JsonContract.cs"];
m9_3910 [label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="9052-9056", cluster="lambda expression", file="JsonContract.cs"];
m9_3911 [label="Exit lambda expression", span="9050-9057", cluster="lambda expression", file="JsonContract.cs"];
m9_221 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonContract.cs"];
m9_3400 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7724-7724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonContract.cs"];
m9_3401 [label="string json", span="7726-7726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonContract.cs"];
m9_3402 [label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="7727-7727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonContract.cs"];
m9_3403 [label="json = JsonConvert.SerializeObject(d)", span="7729-7729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonContract.cs"];
m9_3404 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="7732-7732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonContract.cs"];
m9_3405 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="7735-7735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonContract.cs"];
m9_3406 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="7738-7738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonContract.cs"];
m9_3407 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="7724-7724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonContract.cs"];
m9_3751 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8640-8640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonContract.cs"];
m9_3752 [label="string originalUri = ''https://test.com?m=a%2bb''", span="8642-8642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonContract.cs"];
m9_3753 [label="Uri uriWithPlus = new Uri(originalUri)", span="8644-8644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonContract.cs"];
m9_3756 [label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="8650-8650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonContract.cs"];
m9_3754 [label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="8646-8646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonContract.cs"];
m9_3755 [label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="8648-8648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonContract.cs"];
m9_3757 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="8640-8640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonContract.cs"];
m9_1181 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2487-2487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonContract.cs"];
m9_1182 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2489-2489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonContract.cs"];
m9_1183 [label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2491-2495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonContract.cs"];
m9_1184 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2497-2497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonContract.cs"];
m9_1185 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2499-2502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonContract.cs"];
m9_1186 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2487-2487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonContract.cs"];
m9_3516 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8071-8071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonContract.cs"];
m9_3517 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8073-8073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonContract.cs"];
m9_3518 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8071-8071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonContract.cs"];
m9_82 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="59-59", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonContract.cs"];
m9_276 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonContract.cs"];
m9_1709 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3638-3638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonContract.cs"];
m9_1710 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="3640-3651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonContract.cs"];
m9_1711 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="3638-3638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonContract.cs"];
m9_192 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonContract.cs"];
m9_193 [label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="576-579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonContract.cs"];
m9_194 [label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="581-584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonContract.cs"];
m9_195 [label="Assert.AreEqual(0, l.ChildId)", span="586-586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonContract.cs"];
m9_196 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonContract.cs"];
m9_200 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="592-592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonContract.cs"];
m9_201 [label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="594-594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonContract.cs"];
m9_202 [label="Assert.AreEqual(2, s.Count)", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonContract.cs"];
m9_203 [label="Assert.AreEqual(''1'', s[0])", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonContract.cs"];
m9_204 [label="Assert.AreEqual(''2'', s[1])", span="597-597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonContract.cs"];
m9_205 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="592-592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonContract.cs"];
m9_1786 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3800-3800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1787 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="3802-3852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1788 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="3854-3854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1789 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="3857-3857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1790 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="3860-3860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1791 [label=results, span="3861-3861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1793 [label="searchResults.Add(searchResult)", span="3864-3864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1794 [label="Assert.AreEqual(2, searchResults.Count)", span="3875-3875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1795 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="3876-3876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1796 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="3877-3877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1792 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="3863-3863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_1797 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="3800-3800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonContract.cs"];
m9_648 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_649 [label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_650 [label="var i = 0", span="1368-1368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_652 [label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1370-1370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_658 [label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1377-1377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_651 [label="i < 800", span="1368-1368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_653 [label="i++", span="1368-1368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_654 [label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1372-1372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_655 [label="var jsonSerializer = JsonSerializer.Create(settings)", span="1373-1373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_656 [label="var ms = new MemoryStream()", span="1374-1374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_662 [label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1383-1383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_657 [label="var streamWriter = new StreamWriter(ms)", span="1376-1376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_660 [label="ms.Seek(0, SeekOrigin.Begin)", span="1380-1380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_659 [label="streamWriter.Flush()", span="1378-1378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_661 [label="var stopWatch = Stopwatch.StartNew()", span="1382-1382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_663 [label="stopWatch.Stop()", span="1384-1384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonContract.cs"];
m9_1954 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonContract.cs"];
m9_1334 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2814-2814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonContract.cs"];
m9_1335 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="2816-2816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonContract.cs"];
m9_1336 [label="testClass.co = new Co()", span="2817-2817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonContract.cs"];
m9_1337 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="2818-2818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonContract.cs"];
m9_1338 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass)); }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="2820-2820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonContract.cs"];
m9_1339 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="2814-2814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonContract.cs"];
m9_20 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JsonContract.cs"];
m9_2105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4713-4713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonContract.cs"];
m9_2106 [label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="4715-4717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonContract.cs"];
m9_2107 [label="Assert.AreEqual(2, kvPairs.Count)", span="4719-4719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonContract.cs"];
m9_2108 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="4720-4720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonContract.cs"];
m9_2109 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="4721-4721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonContract.cs"];
m9_2110 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="4722-4722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonContract.cs"];
m9_2111 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="4723-4723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonContract.cs"];
m9_2112 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="4713-4713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonContract.cs"];
m9_3380 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7658-7658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonContract.cs"];
m9_3381 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="7660-7660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonContract.cs"];
m9_3382 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="7661-7661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonContract.cs"];
m9_3383 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="7658-7658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonContract.cs"];
m9_3710 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8565-8565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonContract.cs"];
m9_3711 [label="return (short)Value;", span="8567-8567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonContract.cs"];
m9_3712 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="8565-8565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonContract.cs"];
m9_1900 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4225-4225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonContract.cs"];
m9_1903 [label="C1 = c1", span="4227-4227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonContract.cs"];
m9_1904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4225-4225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonContract.cs"];
m9_591 [label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0", cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonContract.cs"];
m9_3060 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6931-6931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonContract.cs"];
m9_3061 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6933-6938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonContract.cs"];
m9_3062 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="6931-6931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonContract.cs"];
m9_1763 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonContract.cs"];
m9_1772 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3765-3765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1773 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="3767-3767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1774 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="3768-3768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1775 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="3769-3769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1776 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3771-3771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1777 [label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}'', json)", span="3773-3776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1778 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="3765-3765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_508 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="59-59", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2059 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonContract.cs"];
m9_3987 [label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="9262-9262", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonContract.cs"];
m9_3988 [label="Value = value", span="9264-9264", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonContract.cs"];
m9_3989 [label="Age = age", span="9265-9265", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonContract.cs"];
m9_3990 [label="Constructor = ''Public Paramatized 2''", span="9266-9266", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonContract.cs"];
m9_3991 [label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", span="9262-9262", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string, int)", file="JsonContract.cs"];
m9_303 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonContract.cs"];
m9_304 [label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="806-806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonContract.cs"];
m9_305 [label="Assert.AreEqual(null, o.A)", span="807-807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonContract.cs"];
m9_306 [label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonContract.cs"];
m9_307 [label="Assert.AreEqual(true, o.A)", span="810-810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonContract.cs"];
m9_308 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="804-804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonContract.cs"];
m9_1084 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2318-2318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonContract.cs"];
m9_1085 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2320-2320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonContract.cs"];
m9_1086 [label="Assert.AreEqual(@''1'', json)", span="2321-2321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonContract.cs"];
m9_1087 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2323-2323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonContract.cs"];
m9_1088 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2324-2324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonContract.cs"];
m9_1089 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2318-2318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonContract.cs"];
m9_3022 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6876-6876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3023 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="6878-6878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3024 [label="Assert.IsNull(v)", span="6879-6879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3025 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="6881-6881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3026 [label="Assert.IsNull(v)", span="6882-6882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3027 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="6884-6884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3028 [label="Assert.IsNull(v)", span="6885-6885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3029 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="6887-6887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3030 [label="Assert.IsNull(v)", span="6888-6888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3031 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="6890-6890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3032 [label="Assert.IsNull(v)", span="6891-6891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3033 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="6893-6893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3034 [label="Assert.IsNull(v)", span="6894-6894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3035 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="6896-6896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3036 [label="Assert.IsNull(v)", span="6897-6897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_3037 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="6876-6876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonContract.cs"];
m9_1738 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonContract.cs"];
m9_3561 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8188-8188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonContract.cs"];
m9_3562 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8190-8196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonContract.cs"];
m9_3563 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8198-8198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonContract.cs"];
m9_3564 [label="Assert.IsNull(c2.MyNullableBool)", span="8199-8199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonContract.cs"];
m9_3565 [label="Assert.IsNull(c2.MyNullableInteger)", span="8200-8200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonContract.cs"];
m9_3566 [label="Assert.IsNull(c2.MyNullableDateTime)", span="8201-8201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonContract.cs"];
m9_3567 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8202-8202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonContract.cs"];
m9_3568 [label="Assert.IsNull(c2.MyNullableDecimal)", span="8203-8203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonContract.cs"];
m9_3569 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8188-8188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonContract.cs"];
m9_2943 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6717-6717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2944 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="6719-6719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2945 [label="string json = JsonConvert.SerializeObject(widget)", span="6721-6721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2946 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="6723-6723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2947 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="6717-6717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_1052 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2273-2273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonContract.cs"];
m9_1053 [label="Stack<object> s = new Stack<object>()", span="2275-2275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonContract.cs"];
m9_1054 [label="s.Push(1)", span="2276-2276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonContract.cs"];
m9_1055 [label="s.Push(2)", span="2277-2277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonContract.cs"];
m9_1056 [label="s.Push(3)", span="2278-2278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonContract.cs"];
m9_1057 [label="string json = JsonConvert.SerializeObject(s)", span="2280-2280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonContract.cs"];
m9_1058 [label="Assert.AreEqual(''[3,2,1]'', json)", span="2281-2281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonContract.cs"];
m9_1059 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2273-2273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonContract.cs"];
m9_927 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2022-2022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_928 [label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2024-2032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_929 [label="MemoryStream ms = new MemoryStream()", span="2034-2034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_931 [label="s.WriteObject(ms, testDates)", span="2036-2036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_935 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2042-2042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_930 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2035-2035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_932 [label="ms.Seek(0, SeekOrigin.Begin)", span="2037-2037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_933 [label="StreamReader sr = new StreamReader(ms)", span="2038-2038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_934 [label="string expected = sr.ReadToEnd()", span="2040-2040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_936 [label="Assert.AreEqual(expected, result)", span="2043-2043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_937 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2022-2022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonContract.cs"];
m9_1278 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonContract.cs"];
m9_1486 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3190-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonContract.cs"];
m9_1487 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3192-3192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonContract.cs"];
m9_1488 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3190-3190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonContract.cs"];
m9_2828 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6469-6469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2829 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6471-6471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2830 [label="JsonSerializer serializer = new JsonSerializer()", span="6473-6473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2835 [label="serializer.Serialize(bsonWriter, test)", span="6480-6480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2831 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="6474-6474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2840 [label="TestObject newObject = (TestObject)serializer.Deserialize(bsonReader)", span="6490-6490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2832 [label="byte[] objectBytes", span="6476-6476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2833 [label="MemoryStream bsonStream = new MemoryStream()", span="6477-6477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2834 [label="JsonWriter bsonWriter = new JsonTextWriter(new StreamWriter(bsonStream))", span="6478-6478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2837 [label="objectBytes = bsonStream.ToArray()", span="6483-6483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2836 [label="bsonWriter.Flush()", span="6481-6481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2838 [label="MemoryStream bsonStream = new MemoryStream(objectBytes)", span="6486-6486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2839 [label="JsonReader bsonReader = new JsonTextReader(new StreamReader(bsonStream))", span="6487-6487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2841 [label="Assert.AreEqual(''Test'', newObject.Name)", span="6492-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2842 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6493-6493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_2843 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6469-6469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonContract.cs"];
m9_906 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonContract.cs"];
m9_1341 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonContract.cs"];
m9_2192 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="4914-4914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonContract.cs"];
m9_1943 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4363-4363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonContract.cs"];
m9_1944 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4365-4365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonContract.cs"];
m9_1945 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4363-4363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonContract.cs"];
m9_848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1823-1823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonContract.cs"];
m9_849 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="1825-1825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonContract.cs"];
m9_850 [label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="1827-1827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonContract.cs"];
m9_851 [label="Assert.AreEqual(c.Field, ''Field'')", span="1829-1829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonContract.cs"];
m9_852 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="1823-1823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonContract.cs"];
m9_13 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonContract.cs"];
m9_1848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="3950-3950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonContract.cs"];
m9_108 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="297-297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_109 [label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="299-299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_110 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="301-303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_111 [label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="305-305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_112 [label="string json = JsonConvert.SerializeObject(c2)", span="307-307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_113 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="309-309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_114 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="311-313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_115 [label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="315-315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_116 [label="Assert.AreEqual(''Name!'', c3.Name)", span="317-317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_117 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="297-297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonContract.cs"];
m9_3177 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7174-7174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3178 [label="string json = ''{}''", span="7176-7176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3179 [label="IList<string> errors = new List<string>()", span="7177-7177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3181 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7185-7188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3180 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7179-7183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3183 [label="Assert.AreEqual(4, errors.Count)", span="7191-7191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3184 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7192-7192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3185 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7193-7193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3186 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7194-7194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3187 [label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7195-7195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3182 [label="Assert.IsNotNull(o)", span="7190-7190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3188 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7174-7174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonContract.cs"];
m9_3667 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="121-121", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonContract.cs"];
m9_235 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonContract.cs"];
m9_236 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="680-680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonContract.cs"];
m9_2866 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6543-6543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2867 [label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="6545-6545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2868 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6547-6550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2871 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6553-6556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2873 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6564-6572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2869 [label="StaticTestClass.y = 2", span="6551-6551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2870 [label="StaticTestClass.z = 3", span="6552-6552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2872 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6558-6562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2874 [label="Assert.AreEqual(-1, c2.x)", span="6574-6574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2875 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6575-6575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2876 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6576-6576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2877 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="6543-6543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonContract.cs"];
m9_2715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6194-6194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonContract.cs"];
m9_2716 [label="throw new NotImplementedException();", span="6196-6196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonContract.cs"];
m9_2717 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6194-6194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonContract.cs"];
m9_3904 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="8996-8996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonContract.cs"];
m9_3014 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonContract.cs"];
m9_3126 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonContract.cs"];
m9_3742 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="8611-8611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonContract.cs"];
m9_1235 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="798-798", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonContract.cs"];
m9_1359 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonContract.cs"];
m9_705 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1482-1482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonContract.cs"];
m9_1153 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2433-2433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonContract.cs"];
m9_1154 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2435-2435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonContract.cs"];
m9_1155 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2436-2436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonContract.cs"];
m9_1156 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2438-2441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonContract.cs"];
m9_1157 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2442-2442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonContract.cs"];
m9_1158 [label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2444-2447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonContract.cs"];
m9_1159 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2449-2449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonContract.cs"];
m9_1160 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2450-2450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonContract.cs"];
m9_1161 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2433-2433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonContract.cs"];
m9_3544 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8134-8134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3545 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8136-8140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3546 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8142-8142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3550 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8147-8147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3547 [label="Assert.AreEqual(float.NaN, floats[0])", span="8143-8143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3548 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8144-8144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3549 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8145-8145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3551 [label="Assert.AreEqual(float.NaN, doubles[0])", span="8148-8148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3552 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8149-8149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3553 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8150-8150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_3554 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8134-8134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonContract.cs"];
m9_1969 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4401-4401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonContract.cs"];
m9_1970 [label="return _innerDictionary.Remove(key);", span="4403-4403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonContract.cs"];
m9_1971 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4401-4401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonContract.cs"];
m9_301 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="151-151", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonContract.cs"];
m9_2576 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5773-5773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonContract.cs"];
m9_2577 [label="ComplexItem i = new ComplexItem()", span="5775-5775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonContract.cs"];
m9_2578 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="5777-5777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonContract.cs"];
m9_2579 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="5779-5781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonContract.cs"];
m9_2580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="5773-5773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonContract.cs"];
m9_672 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="JsonContract.cs"];
m9_1634 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3507-3507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonContract.cs"];
m9_1635 [label="string json = @''[]''", span="3509-3509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonContract.cs"];
m9_1636 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Double' because the type requires a JSON primitive value (e.g. string, number, boolean, null) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON primitive value (e.g. string, number, boolean, null) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3511-3513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonContract.cs"];
m9_1637 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3507-3507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonContract.cs"];
m9_3092 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6994-6994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3093 [label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6996-7002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3094 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7004-7004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3095 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7005-7005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3096 [label="Assert.AreEqual(''Pre'', c.PreField)", span="7006-7006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3097 [label="Assert.AreEqual(''Post'', c.PostField)", span="7007-7007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3098 [label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="7009-7011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3099 [label="Assert.AreEqual(null, c2.DateTimeField)", span="7013-7013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3100 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="7014-7014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3101 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="7015-7015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3102 [label="Assert.AreEqual(''Post'', c2.PostField)", span="7016-7016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_3103 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="6994-6994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonContract.cs"];
m9_206 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="603-603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_207 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="605-605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_208 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="606-606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_212 [label="serializer.Populate(reader, l)", span="612-612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_215 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="617-617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_209 [label="JsonSerializer serializer = new JsonSerializer()", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_210 [label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="609-609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_211 [label="IList<object> l = new List<object>()", span="611-611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_213 [label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="614-614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_214 [label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="615-615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_216 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="603-603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonContract.cs"];
m9_861 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonContract.cs"];
m9_2228 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5024-5024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2229 [label="throw new NotImplementedException();", span="5026-5026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2230 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5024-5024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_1921 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4262-4262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonContract.cs"];
m9_3879 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8957-8957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonContract.cs"];
m9_3880 [label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="8959-8959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonContract.cs"];
m9_3881 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="8957-8957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonContract.cs"];
m9_191 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonContract.cs"];
m9_2989 [label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonContract.cs"];
m9_3935 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9089-9089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3936 [label="throw new NotImplementedException();", span="9091-9091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3937 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9089-9089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_1133 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2400-2400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonContract.cs"];
m9_1134 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2402-2402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonContract.cs"];
m9_1135 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2403-2403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonContract.cs"];
m9_1139 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2410-2410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonContract.cs"];
m9_1140 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2411-2411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonContract.cs"];
m9_1136 [label="string json = JsonConvert.SerializeObject(m1)", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonContract.cs"];
m9_1137 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2406-2406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonContract.cs"];
m9_1138 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2408-2408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonContract.cs"];
m9_1141 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2400-2400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonContract.cs"];
m9_3734 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8605-8605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonContract.cs"];
m9_3735 [label="throw new InvalidCastException();", span="8607-8607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonContract.cs"];
m9_3736 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="8605-8605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonContract.cs"];
m9_1947 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4368-4368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonContract.cs"];
m9_1948 [label="return _innerDictionary.ContainsKey(key);", span="4370-4370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonContract.cs"];
m9_1949 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4368-4368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonContract.cs"];
m9_374 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonContract.cs"];
m9_2219 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5014-5014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2220 [label="Pos p = (Pos)value", span="5016-5016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2222 [label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="5019-5019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2223 [label="writer.WriteNull()", span="5021-5021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2221 [label="p != null", span="5018-5018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2224 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5014-5014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_517 [label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonContract.cs"];
m9_2934 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="6677-6677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonContract.cs"];
m9_3140 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="JsonContract.cs"];
m9_372 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="38-38", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonContract.cs"];
m9_2935 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1559-1559", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonContract.cs"];
m9_1613 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3475-3475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonContract.cs"];
m9_1614 [label="string json = @''[]''", span="3477-3477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonContract.cs"];
m9_1615 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3479-3481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonContract.cs"];
m9_1616 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3475-3475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonContract.cs"];
m9_2374 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonContract.cs"];
m9_223 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="632-632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonContract.cs"];
m9_224 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonContract.cs"];
m9_225 [label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonContract.cs"];
m9_226 [label="Assert.AreEqual(true, childClass.IsTransient)", span="637-637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonContract.cs"];
m9_227 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="632-632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonContract.cs"];
m9_3193 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7199-7199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3194 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7201-7201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3195 [label="IList<string> errors = new List<string>()", span="7202-7202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3197 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7210-7213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3196 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7204-7208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3199 [label="Assert.AreEqual(3, errors.Count)", span="7216-7216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3200 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7217-7217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3201 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7218-7218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3202 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7219-7219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3198 [label="Assert.IsNotNull(o)", span="7215-7215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_3203 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7199-7199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonContract.cs"];
m9_939 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonContract.cs"];
m9_537 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonContract.cs"];
m9_3277 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7399-7399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonContract.cs"];
m9_3278 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7401-7401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonContract.cs"];
m9_3279 [label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7402-7402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonContract.cs"];
m9_3280 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="7404-7404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonContract.cs"];
m9_3281 [label="Assert.AreEqual(0, objDeserialized.Age)", span="7405-7405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonContract.cs"];
m9_3282 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7399-7399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonContract.cs"];
m9_1601 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonContract.cs"];
m9_1812 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3913-3913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonContract.cs"];
m9_1813 [label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="3915-3918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonContract.cs"];
m9_1814 [label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="3919-3922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonContract.cs"];
m9_1815 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="3913-3913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonContract.cs"];
m9_2566 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5748-5748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonContract.cs"];
m9_2567 [label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="5750-5753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonContract.cs"];
m9_2568 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="5755-5755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonContract.cs"];
m9_2569 [label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="5757-5763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonContract.cs"];
m9_2570 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="5765-5765", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonContract.cs"];
m9_2571 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="5767-5767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonContract.cs"];
m9_2572 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="5768-5768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonContract.cs"];
m9_2573 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="5769-5769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonContract.cs"];
m9_2574 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="5748-5748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonContract.cs"];
m9_2101 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="4705-4705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonContract.cs"];
m9_2102 [label="Key = k", span="4707-4707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonContract.cs"];
m9_2103 [label="Value = v", span="4708-4708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonContract.cs"];
m9_2104 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="4705-4705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonContract.cs"];
m9_2950 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6727-6727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2951 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="6729-6729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2952 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="6731-6731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2953 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="6733-6733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2954 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="6734-6734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2955 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="6735-6735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2956 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="6727-6727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonContract.cs"];
m9_2921 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonContract.cs"];
m9_2813 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonContract.cs"];
m9_1144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2415-2415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonContract.cs"];
m9_1145 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2417-2417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonContract.cs"];
m9_1146 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2418-2418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonContract.cs"];
m9_1150 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2428-2428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonContract.cs"];
m9_1151 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2429-2429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonContract.cs"];
m9_1147 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2420-2423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonContract.cs"];
m9_1148 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2424-2424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonContract.cs"];
m9_1149 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2426-2426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonContract.cs"];
m9_1152 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2415-2415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonContract.cs"];
m9_3015 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6864-6864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonContract.cs"];
m9_3016 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="6866-6866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonContract.cs"];
m9_3017 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="6867-6867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonContract.cs"];
m9_3019 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="6870-6870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonContract.cs"];
m9_3018 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="6869-6869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonContract.cs"];
m9_3020 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="6872-6872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonContract.cs"];
m9_3021 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="6864-6864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonContract.cs"];
m9_2315 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5165-5165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonContract.cs"];
m9_754 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonContract.cs"];
m9_706 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1639-1639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_737 [label="MemoryStream ms = new MemoryStream()", span="1641-1641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_738 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="1642-1642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_739 [label="s.WriteObject(ms, o)", span="1643-1643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_743 [label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="1649-1649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_740 [label="var data = ms.ToArray()", span="1645-1645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_741 [label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="1646-1646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_742 [label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="1647-1647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_745 [label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="1656-1656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_746 [label=dataContractJson, span="1657-1657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_744 [label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="1650-1650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_747 [label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="1659-1659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_748 [label="return jsonNetJson.ToString();", span="1662-1662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_749 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="1639-1639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonContract.cs"];
m9_3815 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8789-8789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonContract.cs"];
m9_3816 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="8791-8791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonContract.cs"];
m9_3817 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="8792-8792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonContract.cs"];
m9_3819 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8799-8802", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonContract.cs"];
m9_3822 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8810-8810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonContract.cs"];
m9_3818 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8793-8797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonContract.cs"];
m9_3821 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="8808-8808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonContract.cs"];
m9_3820 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="8804-8806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonContract.cs"];
m9_3823 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="8789-8789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonContract.cs"];
m9_3208 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7223-7223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_3209 [label="IList<string> errors = new List<string>()", span="7225-7225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_3210 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7227-7231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_3213 [label="Assert.AreEqual(3, errors.Count)", span="7244-7244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_3214 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7245-7245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_3215 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7246-7246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_3216 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7247-7247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_3211 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7233-7237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_3212 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7239-7242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_3217 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7223-7223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonContract.cs"];
m9_996 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2158-2158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_997 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2160-2160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_998 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2161-2161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_999 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2162-2162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_1000 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2164-2164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_1001 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2165-2165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_1002 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2166-2166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_1003 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2167-2167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_1004 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2168-2168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_1005 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2158-2158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonContract.cs"];
m9_154 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonContract.cs"];
m9_155 [label="this.Sections = new HashSet<FaqSection>()", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonContract.cs"];
m9_156 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonContract.cs"];
m9_2360 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="700-700", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonContract.cs"];
m9_677 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonContract.cs"];
m9_1207 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonContract.cs"];
m9_2057 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonContract.cs"];
m9_3446 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="JsonContract.cs"];
m9_228 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonContract.cs"];
m9_47 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonContract.cs"];
m9_2019 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonContract.cs"];
m9_952 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2078-2078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonContract.cs"];
m9_953 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2080-2080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonContract.cs"];
m9_954 [label="values.Add(-5, 6)", span="2081-2081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonContract.cs"];
m9_955 [label="values.Add(int.MinValue, int.MaxValue)", span="2082-2082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonContract.cs"];
m9_956 [label="string json = JsonConvert.SerializeObject(values)", span="2084-2084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonContract.cs"];
m9_959 [label="CollectionAssert.AreEqual(values, newValues)", span="2090-2090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonContract.cs"];
m9_957 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2086-2086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonContract.cs"];
m9_958 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2088-2088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonContract.cs"];
m9_960 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2078-2078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonContract.cs"];
m9_2245 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5052-5052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_2246 [label="return objectType == typeof(PosDouble);", span="5054-5054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_2247 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5052-5052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_2345 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonContract.cs"];
m9_3312 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="7487-7487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonContract.cs"];
m9_3645 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8440-8440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3646 [label="var consoleWriter = new ConsoleWriter()", span="8442-8442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3647 [label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="8445-8449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3648 [label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="8455-8455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3653 [label="dict2.Add(consoleWriter, ''Console'')", span="8466-8466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3659 [label="dict3.Add(''Console'', consoleWriter)", span="8481-8481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3650 [label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="8458-8458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3654 [label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="8468-8468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3656 [label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="8473-8473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3660 [label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="8483-8483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3662 [label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="8488-8488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3649 [label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="8456-8456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3651 [label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="8459-8459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3652 [label="var dict2 = new Dictionary<IMyInterface, string>()", span="8465-8465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3655 [label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="8469-8471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3657 [label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="8474-8474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3658 [label="var dict3 = new Dictionary<string, IMyInterface>()", span="8480-8480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3661 [label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="8484-8486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3663 [label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="8489-8489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_3664 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="8440-8440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonContract.cs"];
m9_1798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3881-3881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1799 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="3883-3883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1800 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="3884-3884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1806 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="3892-3892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1801 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3886-3886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1802 [label="wagePerson.Department = ''McDees''", span="3887-3887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1803 [label="wagePerson.HourlyWage = 12.50m", span="3888-3888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1804 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="3889-3889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1805 [label="wagePerson.Name = ''Jim Bob''", span="3890-3890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1809 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="3905-3905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1807 [label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="3893-3902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1808 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="3904-3904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1810 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="3881-3881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonContract.cs"];
m9_1373 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1200 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2522-2522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonContract.cs"];
m9_1201 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2524-2528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonContract.cs"];
m9_1202 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2522-2522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonContract.cs"];
m9_1863 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4065-4065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonContract.cs"];
m9_1864 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4067-4067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonContract.cs"];
m9_1865 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4069-4073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonContract.cs"];
m9_1866 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4065-4065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonContract.cs"];
m9_3876 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="8945-8945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3877 [label="throw new NotImplementedException();", span="8947-8947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3878 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="8945-8945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_868 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1932-1932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonContract.cs"];
m9_869 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="1934-1943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonContract.cs"];
m9_870 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="1945-1945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonContract.cs"];
m9_871 [label="Assert.AreEqual(4, o.Children().Count())", span="1946-1946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonContract.cs"];
m9_872 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="1948-1948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonContract.cs"];
m9_873 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="1949-1949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonContract.cs"];
m9_874 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="1950-1950", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonContract.cs"];
m9_875 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="1932-1932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonContract.cs"];
m9_3458 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="717-717", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonContract.cs"];
m9_267 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="746-746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonContract.cs"];
m9_268 [label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="748-753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonContract.cs"];
m9_269 [label="var json = JsonConvert.SerializeObject(input)", span="755-755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonContract.cs"];
m9_271 [label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonContract.cs"];
m9_272 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="759-759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonContract.cs"];
m9_273 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="760-760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonContract.cs"];
m9_270 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="756-756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonContract.cs"];
m9_274 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="746-746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonContract.cs"];
m9_1972 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonContract.cs"];
m9_2550 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9179-9179", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonContract.cs"];
m9_3967 [label="Value = val", span="9181-9181", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonContract.cs"];
m9_3968 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="9179-9179", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonContract.cs"];
m9_1416 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3001-3001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonContract.cs"];
m9_1417 [label="SubKlass i = new SubKlass(''my subprop'')", span="3003-3003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonContract.cs"];
m9_1418 [label="i.SuperProp = ''overrided superprop''", span="3004-3004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonContract.cs"];
m9_1419 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3006-3009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonContract.cs"];
m9_1420 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3011-3011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonContract.cs"];
m9_1421 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3013-3016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonContract.cs"];
m9_1422 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3018-3021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonContract.cs"];
m9_1423 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3022-3022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonContract.cs"];
m9_1424 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3001-3001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonContract.cs"];
m9_2023 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonContract.cs"];
m9_3408 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7744-7744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonContract.cs"];
m9_3409 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="7746-7748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonContract.cs"];
m9_3410 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="7750-7750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonContract.cs"];
m9_3411 [label="BigInteger nineQuindecillion = l[0]", span="7752-7752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonContract.cs"];
m9_3412 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="7755-7755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonContract.cs"];
m9_3413 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="7744-7744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonContract.cs"];
m9_3072 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6953-6953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonContract.cs"];
m9_3073 [label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="6955-6956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonContract.cs"];
m9_3074 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="6958-6958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonContract.cs"];
m9_3075 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="6959-6959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonContract.cs"];
m9_3076 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="6953-6953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonContract.cs"];
m9_3218 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonContract.cs"];
m9_309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="814-814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_310 [label="JsonSerializer serializer = new JsonSerializer()", span="816-816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_311 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="818-818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_312 [label="serializer.Binder = customBinder", span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_313 [label="Assert.AreEqual(customBinder, serializer.Binder)", span="820-820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_314 [label="serializer.CheckAdditionalContent = true", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_315 [label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="823-823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_316 [label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="825-825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_317 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="826-826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_318 [label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="829-829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_319 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="830-830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_321 [label="serializer.ContractResolver = resolver", span="834-834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_322 [label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="835-835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_323 [label="serializer.Converters.Add(new StringEnumConverter())", span="837-837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_324 [label="Assert.AreEqual(1, serializer.Converters.Count)", span="838-838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_325 [label="serializer.Culture = new CultureInfo(''en-nz'')", span="840-840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_326 [label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="841-841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_327 [label="serializer.EqualityComparer = EqualityComparer<object>.Default", span="843-843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_328 [label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="844-844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_329 [label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="846-846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_330 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="847-847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_331 [label="serializer.DateFormatString = ''yyyy''", span="849-849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_332 [label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="850-850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_333 [label="serializer.DateParseHandling = DateParseHandling.None", span="852-852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_334 [label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="853-853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_335 [label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="855-855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_336 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="856-856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_337 [label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="858-858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_338 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="859-859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_339 [label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_340 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="862-862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_341 [label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="864-864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_342 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_343 [label="serializer.Formatting = Formatting.Indented", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_344 [label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="868-868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_345 [label="serializer.MaxDepth = 9001", span="870-870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_346 [label="Assert.AreEqual(9001, serializer.MaxDepth)", span="871-871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_347 [label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="873-873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_348 [label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="874-874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_349 [label="serializer.NullValueHandling = NullValueHandling.Ignore", span="876-876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_350 [label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="877-877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_351 [label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="879-879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_352 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="880-880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_353 [label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="882-882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_354 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="883-883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_355 [label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="885-885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_356 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="886-886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_358 [label="serializer.ReferenceResolver = referenceResolver", span="889-889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_359 [label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="890-890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_360 [label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="892-892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_361 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="893-893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_363 [label="serializer.TraceWriter = traceWriter", span="896-896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_364 [label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="897-897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_365 [label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_366 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="901-901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_367 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="904-904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_368 [label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_320 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="833-833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_357 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_362 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="895-895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_369 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="814-814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonContract.cs"];
m9_536 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonContract.cs"];
m9_2534 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5697-5697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonContract.cs"];
m9_2535 [label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="5699-5703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonContract.cs"];
m9_2536 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="5705-5705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonContract.cs"];
m9_2539 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="5710-5710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonContract.cs"];
m9_2537 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="5707-5707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonContract.cs"];
m9_2538 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="5709-5709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonContract.cs"];
m9_2540 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="5697-5697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonContract.cs"];
m9_2581 [label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="9282-9282", cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonContract.cs"];
m9_2507 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5614-5614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2508 [label="_name = info.GetString(''Name'')", span="5616-5616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_2509 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="5614-5614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_1779 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3780-3780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1780 [label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Person'''': 2\r\n}''", span="3784-3788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1781 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="3790-3790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1782 [label="Assert.Fail()", span="3791-3791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1783 [label=JsonSerializationException, span="3793-3793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1784 [label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Person']'''))", span="3795-3795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_1785 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="3780-3780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonContract.cs"];
m9_3471 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7956-7956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonContract.cs"];
m9_3472 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="7958-7962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonContract.cs"];
m9_3473 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="7964-7967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonContract.cs"];
m9_3474 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="7969-7972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonContract.cs"];
m9_3475 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="7956-7956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonContract.cs"];
m9_2555 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5731-5731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonContract.cs"];
m9_2556 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="5733-5733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonContract.cs"];
m9_2557 [label="Assert.AreEqual(''Public Paramatized'', c.Constructor)", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonContract.cs"];
m9_2558 [label="Assert.AreEqual(''value!'', c.Value)", span="5735-5735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonContract.cs"];
m9_2559 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="5731-5731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonContract.cs"];
m9_3704 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8555-8555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonContract.cs"];
m9_3705 [label="throw new InvalidCastException();", span="8557-8557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonContract.cs"];
m9_3706 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="8555-8555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonContract.cs"];
m9_3886 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8963-8963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonContract.cs"];
m9_3887 [label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="8965-8965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonContract.cs"];
m9_3888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="8963-8963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonContract.cs"];
m9_896 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1978-1978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonContract.cs"];
m9_897 [label="string json = @''[''''PRE\u003cPOST'''']''", span="1980-1980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonContract.cs"];
m9_898 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="1982-1982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonContract.cs"];
m9_899 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="1983-1983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonContract.cs"];
m9_900 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="1985-1985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonContract.cs"];
m9_902 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="1988-1988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonContract.cs"];
m9_901 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="1987-1987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonContract.cs"];
m9_903 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="1978-1978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonContract.cs"];
m9_991 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonContract.cs"];
m9_3677 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8509-8509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonContract.cs"];
m9_3678 [label="return TypeCode.Object;", span="8511-8511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonContract.cs"];
m9_3679 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="8509-8509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonContract.cs"];
m9_2025 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonContract.cs"];
m9_2227 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="781-781", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonContract.cs"];
m9_2658 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6048-6048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonContract.cs"];
m9_2659 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="6050-6054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonContract.cs"];
m9_2660 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6056-6056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonContract.cs"];
m9_2661 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="6058-6061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonContract.cs"];
m9_2662 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6048-6048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonContract.cs"];
m9_3370 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7635-7635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3371 [label="writer.WriteValue(''X'')", span="7637-7637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7635-7635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2853 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6506-6506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2854 [label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6508-6508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2855 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6510-6513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2858 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6516-6519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2860 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6527-6535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2856 [label="StaticTestClass.y = 2", span="6514-6514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2857 [label="StaticTestClass.z = 3", span="6515-6515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2859 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6521-6525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2861 [label="Assert.AreEqual(-1, c2.x)", span="6537-6537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2862 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="6538-6538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2863 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="6539-6539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_2864 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6506-6506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonContract.cs"];
m9_217 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonContract.cs"];
m9_10 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonContract.cs"];
m9_15 [label="Bars = new List<string>()", span="119-119", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonContract.cs"];
m9_16 [label="bars != null", span="120-120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonContract.cs"];
m9_17 [label="Bars.AddRange(bars)", span="122-122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonContract.cs"];
m9_18 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonContract.cs"];
m9_690 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1434-1434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonContract.cs"];
m9_691 [label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1436-1441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonContract.cs"];
m9_692 [label="string result = JsonConvert.SerializeObject(cc)", span="1443-1443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonContract.cs"];
m9_693 [label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1444-1444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonContract.cs"];
m9_694 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1434-1434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonContract.cs"];
m9_799 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1744-1744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_800 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="1746-1746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_801 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="1747-1747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_802 [label="testDictionary[''date''] = dateValue", span="1748-1748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_811 [label="Assert.AreEqual(dateValue, deserializedDate)", span="1764-1764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_803 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="1750-1750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_806 [label="serializer.WriteObject(ms, testDictionary)", span="1755-1755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_804 [label="MemoryStream ms = new MemoryStream()", span="1753-1753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_809 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="1761-1761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_805 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="1754-1754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_807 [label="byte[] data = ms.ToArray()", span="1757-1757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_808 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="1758-1758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_810 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="1762-1762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="1744-1744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonContract.cs"];
m9_1958 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonContract.cs"];
m9_2706 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6169-6169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonContract.cs"];
m9_2707 [label="throw new NotImplementedException();", span="6171-6171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonContract.cs"];
m9_2708 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6169-6169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonContract.cs"];
m9_828 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="311-311", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonContract.cs"];
m9_827 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JsonContract.cs"];
m9_1977 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4411-4411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonContract.cs"];
m9_1978 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4413-4413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonContract.cs"];
m9_1979 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4411-4411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonContract.cs"];
m9_551 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonContract.cs"];
m9_575 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonContract.cs"];
m9_1504 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3235-3235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1505 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3237-3254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1506 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3256-3257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1507 [label="Assert.AreEqual(''Name!'', c.Name)", span="3259-3259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1508 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="3260-3260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1509 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3261-3261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1510 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3262-3262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1511 [label="Assert.AreEqual(4, c.Collection.Count)", span="3263-3263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1512 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3264-3264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1513 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3265-3265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1514 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3266-3266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1515 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3267-3267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1516 [label="Assert.IsNotNull(c.Random)", span="3268-3268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_1517 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3235-3235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonContract.cs"];
m9_2049 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonContract.cs"];
m9_3854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8892-8892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonContract.cs"];
m9_3855 [label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="8894-8894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonContract.cs"];
m9_3856 [label="var serializerSettings = new JsonSerializerSettings()", span="8896-8896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonContract.cs"];
m9_3857 [label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="8897-8897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonContract.cs"];
m9_3858 [label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="8899-8899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonContract.cs"];
m9_3859 [label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="8901-8901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonContract.cs"];
m9_3860 [label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="8902-8902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonContract.cs"];
m9_3861 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="8892-8892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonContract.cs"];
m9_1220 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2551-2551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonContract.cs"];
m9_1221 [label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="2553-2558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonContract.cs"];
m9_1222 [label="string json", span="2560-2560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonContract.cs"];
m9_1223 [label="json = JsonConvert.SerializeObject(personRaw)", span="2562-2562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonContract.cs"];
m9_1224 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonContract.cs"];
m9_1225 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="2551-2551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonContract.cs"];
m9_919 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonContract.cs"];
m9_3397 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="7712-7712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonContract.cs"];
m9_3398 [label="m_Item1 = item1", span="7714-7714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonContract.cs"];
m9_3399 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="7712-7712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonContract.cs"];
m9_727 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1613-1613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_728 [label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1615-1621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_729 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1623-1623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_730 [label="baseWith.Virtual = ''Virtual2!''", span="1624-1624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_731 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1625-1625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_732 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1626-1626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_733 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1628-1628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_734 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="1630-1636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_735 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="1613-1613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_2235 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5037-5037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2236 [label="PosDouble p = (PosDouble)value", span="5039-5039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2238 [label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="5042-5042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2239 [label="writer.WriteNull()", span="5044-5044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2237 [label="p != null", span="5041-5041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2240 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5037-5037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_1951 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4373-4373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonContract.cs"];
m9_1952 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4375-4375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonContract.cs"];
m9_1953 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4373-4373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonContract.cs"];
m9_3868 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="8931-8931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonContract.cs"];
m9_3869 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="8931-8931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonContract.cs"];
m9_3930 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1695-1695", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonContract.cs"];
m9_1436 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonContract.cs"];
m9_3313 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7503-7503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonContract.cs"];
m9_3314 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7505-7511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonContract.cs"];
m9_3315 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="7519-7519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonContract.cs"];
m9_3316 [label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7520-7523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonContract.cs"];
m9_3317 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="7525-7531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonContract.cs"];
m9_3318 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="7533-7533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonContract.cs"];
m9_3319 [label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="7534-7537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonContract.cs"];
m9_3320 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="7503-7503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonContract.cs"];
m9_3955 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9137-9137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3956 [label="var encodingName = serializer.Deserialize<string>(reader)", span="9139-9139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3957 [label="encodingName == null", span="9140-9140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3959 [label="return Encoding.GetEncoding(encodingName);", span="9143-9143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3958 [label="return null;", span="9141-9141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3960 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9137-9137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_717 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1583-1583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonContract.cs"];
m9_718 [label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1585-1591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonContract.cs"];
m9_719 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1593-1593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonContract.cs"];
m9_720 [label="baseWith.Virtual = ''Virtual2!''", span="1594-1594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonContract.cs"];
m9_721 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1595-1595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonContract.cs"];
m9_722 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1596-1596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonContract.cs"];
m9_723 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="1598-1598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonContract.cs"];
m9_724 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="1600-1609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonContract.cs"];
m9_725 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="1583-1583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonContract.cs"];
m9_2309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5169-5169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonContract.cs"];
m9_2310 [label="return Value;", span="5171-5171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonContract.cs"];
m9_2311 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5169-5169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonContract.cs"];
m9_2399 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5377-5377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonContract.cs"];
m9_2400 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5379-5379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonContract.cs"];
m9_2401 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5380-5380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonContract.cs"];
m9_2402 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5377-5377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonContract.cs"];
m9_2605 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5851-5851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonContract.cs"];
m9_2606 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="5853-5862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonContract.cs"];
m9_2607 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="5864-5864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonContract.cs"];
m9_2608 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="5866-5866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonContract.cs"];
m9_2609 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="5867-5867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonContract.cs"];
m9_2610 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="5868-5868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonContract.cs"];
m9_2611 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="5851-5851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonContract.cs"];
m9_2156 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="4849-4849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonContract.cs"];
m9_2157 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="4849-4849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonContract.cs"];
m9_1581 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3426-3426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonContract.cs"];
m9_1582 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="3428-3428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonContract.cs"];
m9_1583 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3430-3430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonContract.cs"];
m9_1584 [label="Assert.AreEqual(null, c.DateTimeField)", span="3431-3431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonContract.cs"];
m9_1585 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3426-3426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonContract.cs"];
m9_603 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="377-377", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonContract.cs"];
m9_2810 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1649-1649", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonContract.cs"];
m9_3506 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8050-8050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonContract.cs"];
m9_3507 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8050-8050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonContract.cs"];
m9_373 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonContract.cs"];
m9_3373 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="819-819", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonContract.cs"];
m9_940 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2047-2047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonContract.cs"];
m9_941 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2049-2055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonContract.cs"];
m9_942 [label="string result = JsonConvert.SerializeObject(testDates)", span="2057-2057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonContract.cs"];
m9_943 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2058-2058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonContract.cs"];
m9_944 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2047-2047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonContract.cs"];
m9_46 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonContract.cs"];
m9_3044 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6912-6912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonContract.cs"];
m9_3045 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="6914-6914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonContract.cs"];
m9_3046 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="6912-6912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonContract.cs"];
m9_3289 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7429-7429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonContract.cs"];
m9_3296 [label="var jsonReader = new JsonTextReader(new StringReader(json))", span="7432-7432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonContract.cs"];
m9_3297 [label="var serializer = new JsonSerializer()", span="7433-7433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonContract.cs"];
m9_3299 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="7439-7439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonContract.cs"];
m9_3298 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="7434-7437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonContract.cs"];
m9_3300 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="7429-7429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonContract.cs"];
m9_14 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonContract.cs"];
m9_2996 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6824-6824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_2997 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="6826-6830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_2998 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="6832-6832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_2999 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6834-6834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_3000 [label="Assert.AreEqual(null, e.NullableEnum)", span="6836-6836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_3001 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="6838-6842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_3002 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="6844-6844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_3003 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="6846-6846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_3004 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="6848-6848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_3005 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="6824-6824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonContract.cs"];
m9_2849 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6499-6499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonContract.cs"];
m9_2850 [label="return new ReflectionValueProvider(member);", span="6501-6501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonContract.cs"];
m9_2851 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6499-6499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonContract.cs"];
m9_947 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2062-2062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonContract.cs"];
m9_948 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2064-2070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonContract.cs"];
m9_949 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2072-2072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonContract.cs"];
m9_950 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2073-2073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonContract.cs"];
m9_951 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2062-2062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonContract.cs"];
m9_2848 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonContract.cs"];
m9_3669 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8494-8494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonContract.cs"];
m9_3670 [label="ParticipantEntity product = new ParticipantEntity()", span="8496-8496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonContract.cs"];
m9_3671 [label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="8497-8497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonContract.cs"];
m9_3672 [label="string json = JsonConvert.SerializeObject(product)", span="8498-8498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonContract.cs"];
m9_3673 [label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="8500-8500", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonContract.cs"];
m9_3674 [label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="8501-8501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonContract.cs"];
m9_3675 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="8494-8494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonContract.cs"];
m9_2155 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonContract.cs"];
m9_632 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonContract.cs"];
m9_1062 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2285-2285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonContract.cs"];
m9_1063 [label="var obj = new { Formatting = ''test'' }", span="2287-2287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonContract.cs"];
m9_1064 [label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2289-2289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonContract.cs"];
m9_1065 [label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2290-2290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonContract.cs"];
m9_1066 [label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2292-2292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonContract.cs"];
m9_1067 [label="Assert.AreNotEqual(indented, none)", span="2293-2293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonContract.cs"];
m9_1068 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2285-2285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonContract.cs"];
m9_3174 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonContract.cs"];
m9_3586 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8238-8238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonContract.cs"];
m9_3587 [label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8240-8247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonContract.cs"];
m9_3588 [label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8249-8256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonContract.cs"];
m9_3589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8238-8238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonContract.cs"];
m9_169 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonContract.cs"];
m9_888 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonContract.cs"];
m9_2964 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6753-6753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonContract.cs"];
m9_2965 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="6755-6761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonContract.cs"];
m9_2966 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="6753-6753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonContract.cs"];
m9_2589 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5801-5801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonContract.cs"];
m9_2590 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="5803-5803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonContract.cs"];
m9_2591 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="5801-5801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonContract.cs"];
m9_1981 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4418-4418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonContract.cs"];
m9_1982 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4420-4420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonContract.cs"];
m9_1983 [label="modelStateDictionary.Add(''key'', ''value'')", span="4421-4421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonContract.cs"];
m9_1984 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4423-4423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonContract.cs"];
m9_1985 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4425-4425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonContract.cs"];
m9_1986 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4427-4427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonContract.cs"];
m9_1987 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4428-4428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonContract.cs"];
m9_1988 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4429-4429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonContract.cs"];
m9_1989 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4418-4418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonContract.cs"];
m9_3954 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonContract.cs"];
m9_3862 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="8907-8907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonContract.cs"];
m9_3863 [label="DerivedProperty = derivedProperty", span="8910-8910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonContract.cs"];
m9_3864 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="8907-8907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonContract.cs"];
m9_2154 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="473-473", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonContract.cs"];
m9_3176 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1849-1849", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonContract.cs"];
m9_3374 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7640-7640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3375 [label="return ''X'';", span="7642-7642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3376 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7640-7640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_1098 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2327-2327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonContract.cs"];
m9_2636 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5963-5963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonContract.cs"];
m9_2637 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5965-5969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonContract.cs"];
m9_2638 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="5971-5971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonContract.cs"];
m9_2640 [label="serializer.WriteObject(ms, cc)", span="5974-5974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonContract.cs"];
m9_2639 [label="MemoryStream ms = new MemoryStream()", span="5973-5973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonContract.cs"];
m9_2641 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="5976-5976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonContract.cs"];
m9_2642 [label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="5978-5978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonContract.cs"];
m9_2643 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="5963-5963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonContract.cs"];
m9_2645 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="JsonContract.cs"];
m9_1097 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonContract.cs"];
m9_2646 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6005-6005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonContract.cs"];
m9_2647 [label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6007-6011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonContract.cs"];
m9_2648 [label="string result = JsonConvert.SerializeObject(cc)", span="6013-6013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonContract.cs"];
m9_2649 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6014-6014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonContract.cs"];
m9_2650 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6005-6005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonContract.cs"];
m9_3777 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8693-8693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3778 [label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="8695-8695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3779 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8697-8697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3781 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8699-8703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3786 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8713-8717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3791 [label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="8724-8728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3780 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8698-8698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3782 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8705-8705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3785 [label="Assert.AreEqual(dt, dt1)", span="8711-8711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3790 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8722-8722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3784 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8709-8709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3783 [label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="8707-8707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3787 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8718-8718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3788 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8720-8720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3789 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8721-8721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3792 [label="v = (JValue)JToken.ReadFrom(reader)", span="8729-8729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3793 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8731-8731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3794 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8732-8732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3795 [label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="8733-8733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="8693-8693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonContract.cs"];
m9_3905 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9008-9008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonContract.cs"];
m9_3906 [label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="9010-9048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonContract.cs"];
m9_3907 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 15.'')", span="9050-9058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonContract.cs"];
m9_3908 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9008-9008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonContract.cs"];
m9_581 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonContract.cs"];
m9_1721 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3672-3672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonContract.cs"];
m9_1722 [label="List<String> strings = new List<String>()", span="3674-3674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonContract.cs"];
m9_1723 [label="strings.Add(''str_1'')", span="3676-3676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonContract.cs"];
m9_1724 [label="strings.Add(''str_2'')", span="3677-3677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonContract.cs"];
m9_1725 [label="strings.Add(''str_3'')", span="3678-3678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonContract.cs"];
m9_1726 [label="string json = JsonConvert.SerializeObject(strings)", span="3680-3680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonContract.cs"];
m9_1727 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="3681-3681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonContract.cs"];
m9_1728 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="3672-3672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonContract.cs"];
m9_1730 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3685-3685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonContract.cs"];
m9_1731 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="3687-3687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonContract.cs"];
m9_1732 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="3688-3688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonContract.cs"];
m9_1733 [label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="3689-3692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonContract.cs"];
m9_1734 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="3694-3694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonContract.cs"];
m9_1735 [label="Assert.AreEqual(''String!'', c2.A)", span="3695-3695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonContract.cs"];
m9_1736 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="3696-3696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonContract.cs"];
m9_1737 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="3685-3685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonContract.cs"];
m9_218 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonContract.cs"];
m9_3007 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6852-6852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonContract.cs"];
m9_3008 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="6854-6854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonContract.cs"];
m9_3009 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="6856-6856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonContract.cs"];
m9_3010 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="6858-6858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonContract.cs"];
m9_3011 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="6860-6860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonContract.cs"];
m9_3012 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="6852-6852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonContract.cs"];
m9_182 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonContract.cs"];
m9_3223 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7251-7251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3224 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7253-7262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3225 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7264-7264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3226 [label="Assert.IsNotNull(c2)", span="7266-7266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3227 [label="Assert.AreEqual(2, c2.Data.Count)", span="7267-7267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3228 [label="Assert.AreEqual(''one'', c2.Data[0])", span="7268-7268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3229 [label="Assert.AreEqual(''two'', c2.Data[1])", span="7269-7269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3230 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7251-7251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3077 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6964-6964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3078 [label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6966-6972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3079 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="6974-6974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3080 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="6975-6975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3081 [label="Assert.AreEqual(''Pre'', c.PreField)", span="6976-6976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3082 [label="Assert.AreEqual(''Post'', c.PostField)", span="6977-6977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3083 [label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="6979-6985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3084 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="6987-6987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3085 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="6988-6988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3086 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="6989-6989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3087 [label="Assert.AreEqual(''Post'', c2.PostField)", span="6990-6990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_3088 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="6964-6964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonContract.cs"];
m9_140 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="JsonContract.cs"];
m9_1099 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2347-2347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonContract.cs"];
m9_1100 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2349-2349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonContract.cs"];
m9_1101 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2351-2351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonContract.cs"];
m9_1102 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2353-2353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonContract.cs"];
m9_1103 [label="Assert.AreEqual(0, c.IgnoredField)", span="2355-2355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonContract.cs"];
m9_1104 [label="Assert.AreEqual(99, c.Field)", span="2356-2356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonContract.cs"];
m9_1105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2347-2347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonContract.cs"];
m9_2397 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonContract.cs"];
m9_2718 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6201-6201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonContract.cs"];
m9_2719 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6203-6208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonContract.cs"];
m9_2720 [label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6210-6213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonContract.cs"];
m9_2721 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6215-6219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonContract.cs"];
m9_2722 [label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6221-6224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonContract.cs"];
m9_2723 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6201-6201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonContract.cs"];
m9_2612 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5873-5873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonContract.cs"];
m9_2613 [label="this.A = A", span="5875-5875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonContract.cs"];
m9_2614 [label="B = 2", span="5876-5876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonContract.cs"];
m9_2615 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="5873-5873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonContract.cs"];
m9_0 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonContract.cs"];
m9_1 [label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="100-100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonContract.cs"];
m9_2 [label="string json = JsonConvert.SerializeObject(foo1)", span="101-101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonContract.cs"];
m9_5 [label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="106-106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonContract.cs"];
m9_6 [label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="107-107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonContract.cs"];
m9_7 [label="Assert.AreEqual(foo1.Bars[1], foo2.Bars[1])", span="108-108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonContract.cs"];
m9_8 [label="Assert.AreEqual(foo1.Bars[2], foo2.Bars[2])", span="109-109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonContract.cs"];
m9_3 [label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="103-103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", color=red, community=0, file="JsonContract.cs"];
m9_4 [label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="105-105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonContract.cs"];
m9_9 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="98-98", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonContract.cs"];
m9_1676 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3579-3579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonContract.cs"];
m9_1677 [label="string json = @''[]''", span="3581-3581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonContract.cs"];
m9_1678 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '', line 1, position 1.'')", span="3583-3583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonContract.cs"];
m9_1679 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="3579-3579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonContract.cs"];
m9_144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonContract.cs"];
m9_145 [label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="419-419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonContract.cs"];
m9_146 [label="c.UpdatedBy_Id = Guid.NewGuid()", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonContract.cs"];
m9_147 [label="string json = JsonConvert.SerializeObject(c)", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonContract.cs"];
m9_148 [label="Assert.AreEqual(''{}'', json)", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonContract.cs"];
m9_149 [label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="426-426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonContract.cs"];
m9_150 [label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="428-428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonContract.cs"];
m9_151 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonContract.cs"];
m9_2051 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonContract.cs"];
m9_3255 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7342-7342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonContract.cs"];
m9_3256 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7344-7348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonContract.cs"];
m9_3257 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7350-7350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonContract.cs"];
m9_3258 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7352-7355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonContract.cs"];
m9_3259 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7357-7357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonContract.cs"];
m9_3260 [label="Assert.AreEqual(2, dic2.Count)", span="7359-7359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonContract.cs"];
m9_3261 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7360-7360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonContract.cs"];
m9_3262 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7361-7361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonContract.cs"];
m9_3263 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7342-7342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonContract.cs"];
m9_1574 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3413-3413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonContract.cs"];
m9_1575 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3415-3415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonContract.cs"];
m9_1576 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3417-3417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonContract.cs"];
m9_1577 [label="Assert.AreEqual(2, values.Count)", span="3419-3419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonContract.cs"];
m9_1578 [label="Assert.AreEqual(''value1'', values[''key1''])", span="3420-3420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonContract.cs"];
m9_1579 [label="Assert.AreEqual(''value2'', values[''key2''])", span="3421-3421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonContract.cs"];
m9_1580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3413-3413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonContract.cs"];
m9_1834 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3988-3988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonContract.cs"];
m9_1835 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="3990-3990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonContract.cs"];
m9_1836 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="3988-3988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonContract.cs"];
m9_2808 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonContract.cs"];
m9_3758 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8654-8654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3759 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8656-8656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3760 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8657-8657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3762 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8663-8663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3765 [label="Assert.AreEqual(dt, dt1)", span="8669-8669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3770 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="8679-8679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3761 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8658-8661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3766 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8671-8674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3771 [label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8681-8684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3764 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="8667-8667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3763 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8665-8665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3767 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8675-8675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3768 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8677-8677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3769 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="8678-8678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3772 [label="v = (JValue)JToken.ReadFrom(reader)", span="8685-8685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3773 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="8687-8687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3774 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="8688-8688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3775 [label="Assert.AreEqual(''abc'', v.Value)", span="8689-8689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_3776 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="8654-8654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonContract.cs"];
m9_2461 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5504-5504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonContract.cs"];
m9_2462 [label="string json = ''[123456789876543.21]''", span="5506-5506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonContract.cs"];
m9_2463 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5507-5507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonContract.cs"];
m9_2464 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="5508-5508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonContract.cs"];
m9_2465 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5504-5504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonContract.cs"];
m9_3870 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8935-8935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3871 [label="throw new NotImplementedException();", span="8937-8937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3872 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8935-8935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_1602 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3456-3456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonContract.cs"];
m9_1603 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3458-3458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonContract.cs"];
m9_1604 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3460-3460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonContract.cs"];
m9_1605 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3456-3456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonContract.cs"];
m9_1811 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.PersonPropertyClass.PersonPropertyClass()", file="JsonContract.cs"];
m9_1124 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2387-2387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1125 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2389-2389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1126 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2391-2391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1127 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2392-2392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1128 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2394-2394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1129 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2396-2396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_1130 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2387-2387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonContract.cs"];
m9_3439 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7833-7833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3440 [label="var tuple = Tuple.Create(500)", span="7835-7835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3441 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7836-7839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3442 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="7840-7840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3443 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="7842-7845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3444 [label="Assert.AreEqual(500, obj.Item1)", span="7846-7846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_3445 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="7833-7833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonContract.cs"];
m9_2058 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonContract.cs"];
m9_1236 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2580-2580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1237 [label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="2582-2591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1238 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="2593-2593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1239 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="2595-2595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1240 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="2597-2597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1241 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="2599-2599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1242 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1243 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="2601-2601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1244 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="2602-2602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1245 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="2603-2603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1246 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="2604-2604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1247 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="2605-2605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1248 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="2580-2580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonContract.cs"];
m9_1106 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonContract.cs"];
m9_1715 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3655-3655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonContract.cs"];
m9_1716 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="3657-3668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonContract.cs"];
m9_1717 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="3655-3655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonContract.cs"];
m9_2737 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6257-6257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonContract.cs"];
m9_2738 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6259-6259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonContract.cs"];
m9_2739 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6261-6261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonContract.cs"];
m9_2740 [label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6262-6266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonContract.cs"];
m9_2741 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6268-6268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonContract.cs"];
m9_2742 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6269-6269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonContract.cs"];
m9_2743 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6257-6257", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonContract.cs"];
m9_3497 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8027-8027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonContract.cs"];
m9_3498 [label="StringWriter sw = new StringWriter()", span="8029-8029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonContract.cs"];
m9_3499 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8030-8030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonContract.cs"];
m9_3503 [label="string json = sw.ToString()", span="8041-8041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonContract.cs"];
m9_3500 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="8032-8036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonContract.cs"];
m9_3501 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8037-8037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonContract.cs"];
m9_3502 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8039-8039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonContract.cs"];
m9_3504 [label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8043-8045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonContract.cs"];
m9_3505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8027-8027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonContract.cs"];
m9_2054 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonContract.cs"];
m9_2421 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5418-5418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonContract.cs"];
m9_1662 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3553-3553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonContract.cs"];
m9_1663 [label="string json = @''[new Constructor(123)]''", span="3555-3555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonContract.cs"];
m9_1664 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Person'. Path '[0]', line 1, position 17.'')", span="3557-3557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonContract.cs"];
m9_1665 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="3553-3553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonContract.cs"];
m9_1749 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonContract.cs"];
m9_3089 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonContract.cs"];
m9_583 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1247-1247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonContract.cs"];
m9_584 [label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1249-1249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonContract.cs"];
m9_585 [label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1251-1251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonContract.cs"];
m9_586 [label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1253-1253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonContract.cs"];
m9_587 [label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1255-1255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonContract.cs"];
m9_588 [label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1256-1256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonContract.cs"];
m9_589 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1247-1247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonContract.cs"];
m9_1465 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3134-3134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1466 [label="OptInClass optInClass = new OptInClass()", span="3136-3136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1467 [label="optInClass.Age = 26", span="3137-3137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1468 [label="optInClass.Name = ''James NK''", span="3138-3138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1469 [label="optInClass.NotIncluded = ''Poor me :(''", span="3139-3139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1470 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3141-3141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1471 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3143-3146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1472 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3148-3152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1473 [label="Assert.AreEqual(26, newOptInClass.Age)", span="3153-3153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1474 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3154-3154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1475 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3155-3155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_1476 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3134-3134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonContract.cs"];
m9_37 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonContract.cs"];
m9_38 [label="return propertyName.ToUpper(CultureInfo.InvariantCulture);", span="163-163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonContract.cs"];
m9_39 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="158-158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonContract.cs"];
m9_905 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonContract.cs"];
m9_1351 [label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="2838-2842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonContract.cs"];
m9_1350 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2836-2836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonContract.cs"];
m9_1352 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="2844-2844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonContract.cs"];
m9_1353 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="2847-2847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonContract.cs"];
m9_1354 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="2850-2850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonContract.cs"];
m9_1355 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="2853-2853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonContract.cs"];
m9_1356 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="2854-2854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonContract.cs"];
m9_1357 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="2855-2855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonContract.cs"];
m9_1358 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="2836-2836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonContract.cs"];
m9_1051 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonContract.cs"];
m9_813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1768-1768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_814 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="1770-1770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_815 [label="executorObject.serverClassName = ''BanSubs''", span="1771-1771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_816 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="1772-1772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_817 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="1773-1773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_818 [label="string output = JsonConvert.SerializeObject(executorObject)", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_820 [label="Assert.AreNotSame(executorObject, executorObject2)", span="1779-1779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_819 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="1777-1777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_821 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="1780-1780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_822 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="1781-1781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_823 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="1782-1782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_824 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="1783-1783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_825 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="1768-1768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonContract.cs"];
m9_21 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonContract.cs"];
m9_22 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'');\r\n            }, ''Required property 'RequiredProperty' expects a value but got null. Path '', line 1, position 21.'')", span="130-133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonContract.cs"];
m9_23 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="128-128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonContract.cs"];
m9_2021 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonContract.cs"];
m9_2724 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6141-6141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonContract.cs"];
m9_613 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1317-1317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonContract.cs"];
m9_614 [label="var json = @''{''''foo'''':''''value''''}''", span="1319-1319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonContract.cs"];
m9_615 [label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1320-1320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonContract.cs"];
m9_616 [label="Assert.AreEqual(''value'', deserialized.foo)", span="1321-1321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonContract.cs"];
m9_617 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1317-1317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonContract.cs"];
m9_752 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonContract.cs"];
m9_2785 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonContract.cs"];
m9_3129 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7095-7095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3130 [label="Color color = (Color)value", span="7097-7097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3132 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7100-7100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3131 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7098-7098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3133 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7095-7095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3728 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8595-8595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonContract.cs"];
m9_3729 [label="throw new InvalidCastException();", span="8597-8597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonContract.cs"];
m9_3730 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="8595-8595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonContract.cs"];
m9_2028 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonContract.cs"];
m9_153 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JsonContract.cs"];
m9_2378 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5331-5331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonContract.cs"];
m9_2379 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5333-5336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonContract.cs"];
m9_2380 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5338-5338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonContract.cs"];
m9_2381 [label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5340-5342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonContract.cs"];
m9_2382 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5344-5344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonContract.cs"];
m9_2383 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5346-5346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonContract.cs"];
m9_2384 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5331-5331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonContract.cs"];
m9_772 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="728-728", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonContract.cs"];
m9_1387 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonContract.cs"];
m9_1388 [label="string json = ''{ 'testProperty1': 'value' }''", span="2939-2939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonContract.cs"];
m9_1389 [label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="2941-2944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonContract.cs"];
m9_1392 [label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="2948-2951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonContract.cs"];
m9_1390 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2945-2945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonContract.cs"];
m9_1391 [label="Assert.AreEqual(21, c.TestProperty2)", span="2946-2946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonContract.cs"];
m9_1393 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="2952-2952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonContract.cs"];
m9_1394 [label="Assert.AreEqual(21, c.TestProperty2)", span="2953-2953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonContract.cs"];
m9_1395 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="2937-2937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonContract.cs"];
m9_1349 [label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonContract.cs"];
m9_2206 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="4922-4922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonContract.cs"];
m9_3623 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonContract.cs"];
m9_2543 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="129-129", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonContract.cs"];
m9_2595 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5807-5807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonContract.cs"];
m9_2596 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="5809-5809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonContract.cs"];
m9_2597 [label="Assert.IsNull(dateTime)", span="5811-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonContract.cs"];
m9_2598 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="5807-5807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonContract.cs"];
m9_3308 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7494-7494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonContract.cs"];
m9_3309 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="7496-7496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonContract.cs"];
m9_3310 [label="Assert.AreEqual(@''{}'', json)", span="7497-7497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonContract.cs"];
m9_3311 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="7494-7494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonContract.cs"];
m9_2897 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6621-6621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonContract.cs"];
m9_2898 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="6623-6623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonContract.cs"];
m9_2899 [label="string json = JsonConvert.SerializeObject(d1)", span="6625-6625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonContract.cs"];
m9_2901 [label="Assert.AreEqual(d1.Count, d2.Count)", span="6629-6629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonContract.cs"];
m9_2902 [label="Assert.AreEqual(d1[0], d2[0])", span="6630-6630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonContract.cs"];
m9_2900 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="6627-6627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonContract.cs"];
m9_2903 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="6621-6621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonContract.cs"];
m9_3508 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8056-8056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonContract.cs"];
m9_3509 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="8058-8058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonContract.cs"];
m9_3510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8056-8056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonContract.cs"];
m9_507 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonContract.cs"];
m9_2024 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonContract.cs"];
m9_3414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7760-7760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonContract.cs"];
m9_3415 [label="string json = @''[\r\n        900\r\n      ]''", span="7762-7764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonContract.cs"];
m9_3416 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="7766-7766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonContract.cs"];
m9_3417 [label="int i = l[0]", span="7768-7768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonContract.cs"];
m9_3418 [label="Assert.AreEqual(900, i)", span="7771-7771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonContract.cs"];
m9_3419 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="7760-7760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonContract.cs"];
m9_606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1308-1308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonContract.cs"];
m9_607 [label="var original = new Foo1 { foo = ''value'' }", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonContract.cs"];
m9_608 [label="var json = JsonConvert.SerializeObject(original)", span="1311-1311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonContract.cs"];
m9_609 [label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1312-1312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonContract.cs"];
m9_610 [label="Assert.AreEqual(expectedJson, json)", span="1313-1313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonContract.cs"];
m9_611 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1308-1308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonContract.cs"];
m9_2403 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5384-5384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_2404 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5386-5389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_2405 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5391-5391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_2406 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5393-5393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_2407 [label="JsonSerializer serializer = new JsonSerializer()", span="5395-5395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_2409 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5398-5398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_2408 [label="serializer.DateParseHandling = DateParseHandling.None", span="5396-5396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_2410 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5400-5400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_2411 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5401-5401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_2412 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5384-5384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonContract.cs"];
m9_371 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonContract.cs"];
m9_539 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1154-1154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_540 [label="_serializationInfo == null", span="1156-1156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_541 [label="return;", span="1157-1157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_542 [label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1159-1159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_543 [label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1160-1160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_544 [label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1161-1161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_545 [label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1162-1162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_546 [label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1163-1163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_547 [label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1164-1164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_548 [label="_serializationInfo = null", span="1166-1166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1154-1154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_1228 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2567-2567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonContract.cs"];
m9_1229 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="2569-2569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonContract.cs"];
m9_1230 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="2571-2571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonContract.cs"];
m9_1231 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="2573-2573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonContract.cs"];
m9_1232 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="2574-2574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonContract.cs"];
m9_1233 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="2575-2575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonContract.cs"];
m9_1234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="2567-2567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonContract.cs"];
m9_1950 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonContract.cs"];
m9_2121 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4853-4853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2158 [label="AA_field1 = f", span="4855-4855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2159 [label="AA_field2 = f", span="4856-4856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2160 [label="AA_property1 = f", span="4857-4857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2161 [label="AA_property2 = f", span="4858-4858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2162 [label="AA_property3 = f", span="4859-4859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2163 [label="AA_property4 = f", span="4860-4860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2164 [label="AA_property5 = f", span="4861-4861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2165 [label="AA_property6 = f", span="4862-4862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2166 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="4853-4853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonContract.cs"];
m9_2325 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5202-5202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonContract.cs"];
m9_2326 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5204-5204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonContract.cs"];
m9_2327 [label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5206-5210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonContract.cs"];
m9_2328 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5202-5202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonContract.cs"];
m9_2444 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonContract.cs"];
m9_3231 [label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonContract.cs"];
m9_3948 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9115-9115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3949 [label="throw new NotImplementedException();", span="9117-9117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9115-9115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_1107 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonContract.cs"];
m9_1108 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2362-2362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonContract.cs"];
m9_1109 [label="string json = JsonConvert.SerializeObject(c)", span="2364-2364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonContract.cs"];
m9_1110 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2366-2366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonContract.cs"];
m9_1111 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="2368-2368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonContract.cs"];
m9_1112 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2369-2369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonContract.cs"];
m9_1113 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2370-2370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonContract.cs"];
m9_1114 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2360-2360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonContract.cs"];
m9_2361 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5288-5288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2362 [label="string classRef = typeof(StringDictionary).FullName", span="5290-5290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2363 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5292-5300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2371 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 32.'')", span="5316-5316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2364 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5302-5302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2365 [label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5305-5305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2366 [label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5307-5307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2367 [label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5309-5309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2368 [label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5310-5310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2369 [label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5311-5311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2370 [label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5312-5312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_2372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5288-5288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonContract.cs"];
m9_1886 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4167-4167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1887 [label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4169-4172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1888 [label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4174-4177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1889 [label="c1.C2 = c2", span="4179-4179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1890 [label="c2.C1 = c1", span="4180-4180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1891 [label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4182-4186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1892 [label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4188-4193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1893 [label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4195-4201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1894 [label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4203-4203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1895 [label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4204-4204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1896 [label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4205-4205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1897 [label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4206-4206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1898 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4167-4167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonContract.cs"];
m9_1075 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2306-2306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonContract.cs"];
m9_1076 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2308-2308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonContract.cs"];
m9_1077 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2310-2310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonContract.cs"];
m9_1080 [label="Assert.AreEqual(guid, c.GuidField)", span="2314-2314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonContract.cs"];
m9_1078 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2311-2311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonContract.cs"];
m9_1079 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2313-2313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonContract.cs"];
m9_1081 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2306-2306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonContract.cs"];
m9_3914 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="9130-9130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonContract.cs"];
m9_2491 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5566-5566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonContract.cs"];
m9_2492 [label="IDoWork = doWork", span="5569-5569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonContract.cs"];
m9_2493 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="5566-5566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonContract.cs"];
m9_2948 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonContract.cs"];
m9_2657 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="5998-5998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonContract.cs"];
m9_3066 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6942-6942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonContract.cs"];
m9_3067 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new [] { \r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="6944-6949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonContract.cs"];
m9_3068 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="6942-6942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonContract.cs"];
m9_987 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2144-2144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonContract.cs"];
m9_988 [label="string json = JsonConvert.SerializeObject(new object())", span="2146-2146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonContract.cs"];
m9_989 [label="Assert.AreEqual(''{}'', json)", span="2147-2147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonContract.cs"];
m9_990 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2144-2144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonContract.cs"];
m9_1477 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3114-3114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonContract.cs"];
m9_2193 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonContract.cs"];
m9_1142 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonContract.cs"];
m9_2312 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5174-5174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonContract.cs"];
m9_2313 [label="return new DictionaryKey() { Value = value };", span="5176-5176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonContract.cs"];
m9_2314 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5174-5174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonContract.cs"];
m9_2630 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5941-5941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonContract.cs"];
m9_2631 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="5943-5947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonContract.cs"];
m9_2632 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="5949-5949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonContract.cs"];
m9_2633 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="5956-5959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonContract.cs"];
m9_2634 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="5941-5941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonContract.cs"];
m9_2629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="5904-5904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonContract.cs"];
m9_1384 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="2925-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonContract.cs"];
m9_1385 [label="TestProperty1 = testProperty1", span="2927-2927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonContract.cs"];
m9_1386 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="2925-2925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonContract.cs"];
m9_2846 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonContract.cs"];
m9_1558 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonContract.cs"];
m9_1922 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonContract.cs"];
m9_2153 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonContract.cs"];
m9_2852 [label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43", cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="JsonContract.cs"];
m9_3173 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="265-265", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonContract.cs"];
m9_1041 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2222-2222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_1042 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2224-2224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_1043 [label="string expected = null", span="2226-2226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_1045 [label="StringAssert.AreEqual(expected, json)", span="2262-2262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_1046 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2264-2264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_1044 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2228-2243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_1047 [label="Assert.AreEqual(''string'', c.String)", span="2265-2265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_1048 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="2266-2266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_1049 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2268-2268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_1050 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2222-2222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonContract.cs"];
m9_2349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5265-5265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2350 [label="JsonSerializer serializer1 = new JsonSerializer()", span="5267-5267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2351 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5268-5268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2352 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5269-5269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2355 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5275-5275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2353 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5271-5271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2354 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5273-5273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2356 [label="Assert.AreEqual(2, z.Length)", span="5276-5276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2357 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5277-5277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2358 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5278-5278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_2359 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5265-5265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonContract.cs"];
m9_1529 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3296-3296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonContract.cs"];
m9_1530 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3298-3308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonContract.cs"];
m9_1531 [label="JObject o = JObject.Parse(json)", span="3310-3310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonContract.cs"];
m9_1532 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3312-3312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonContract.cs"];
m9_1533 [label="Assert.IsNotNull(s)", span="3313-3313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonContract.cs"];
m9_1534 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3315-3315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonContract.cs"];
m9_1535 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3316-3316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonContract.cs"];
m9_1536 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3317-3317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonContract.cs"];
m9_1537 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3296-3296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonContract.cs"];
m9_171 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="502-502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_172 [label="FaqItemProxy c = new FaqItemProxy()", span="504-504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_173 [label="c.FaqId = 1", span="505-505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_174 [label="c.Sections.Add(new FaqSection())", span="506-506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_175 [label="c.IsProxy = true", span="507-507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_176 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="509-509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_177 [label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="511-519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_178 [label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="521-521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_179 [label="Assert.AreEqual(1, c2.FaqId)", span="523-523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_180 [label="Assert.AreEqual(1, c2.Sections.Count)", span="524-524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_181 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="502-502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonContract.cs"];
m9_2879 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6581-6581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_2880 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="6583-6583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_2881 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="6587-6587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_2882 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="6589-6589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_2883 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="6590-6590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_2884 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="6592-6592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_2885 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="6594-6594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_2886 [label="Assert.AreEqual(1.5m, c.Quantity)", span="6596-6596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_2887 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="6597-6597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_2888 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="6581-6581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonContract.cs"];
m9_1360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2858-2858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1361 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="2860-2860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1362 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="2861-2866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1363 [label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="2867-2870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1364 [label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="2871-2874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1365 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="2876-2876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1369 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="2899-2899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1370 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="2900-2900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1371 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="2901-2901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1366 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="2878-2894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1367 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="2896-2896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1368 [label="Assert.IsNotNull(deserializedObject)", span="2897-2897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_1372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="2858-2858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonContract.cs"];
m9_2814 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6447-6447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonContract.cs"];
m9_2815 [label="string input = ''http://test.com/%22foo+bar%22''", span="6449-6449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonContract.cs"];
m9_2816 [label="Uri uri = new Uri(input)", span="6450-6450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonContract.cs"];
m9_2817 [label="string json = JsonConvert.SerializeObject(uri)", span="6451-6451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonContract.cs"];
m9_2819 [label="Assert.AreEqual(uri, output)", span="6454-6454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonContract.cs"];
m9_2818 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6452-6452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonContract.cs"];
m9_2820 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6447-6447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonContract.cs"];
m9_3913 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="9095-9095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonContract.cs"];
m9_3716 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8575-8575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonContract.cs"];
m9_3717 [label="return (long)Value;", span="8577-8577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonContract.cs"];
m9_3718 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="8575-8575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonContract.cs"];
m9_2216 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="5006-5006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonContract.cs"];
m9_1454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3081-3081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1455 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3083-3099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1456 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3101-3101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1458 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3104-3104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1457 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3102-3102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1459 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3105-3105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1460 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3106-3106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1461 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="3107-3107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1462 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3108-3108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1463 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3109-3109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_1464 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3081-3081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonContract.cs"];
m9_2513 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5654-5654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2514 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="5656-5656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2515 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5657-5657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2516 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="5658-5658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2520 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="5665-5665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2517 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="5660-5660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2518 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="5661-5661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2519 [label="barWithNull.Foo2 = null", span="5662-5662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2524 [label="s = JsonConvert.SerializeObject(barWithNull)", span="5671-5671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2521 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="5666-5666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2522 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5667-5667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2523 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="5668-5668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2525 [label="deserialized = deserialize(s)", span="5672-5672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2526 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="5673-5673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2527 [label="Assert.AreEqual(deserialized.Foo2, null)", span="5674-5674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_2528 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="5654-5654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonContract.cs"];
m9_1269 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonContract.cs"];
m9_3615 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8349-8349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonContract.cs"];
m9_3616 [label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n                )", span="8351-8353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonContract.cs"];
m9_3617 [label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="8355-8355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonContract.cs"];
m9_3618 [label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="8357-8357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonContract.cs"];
m9_3619 [label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="8359-8359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonContract.cs"];
m9_3620 [label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="8360-8360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonContract.cs"];
m9_3621 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="8349-8349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonContract.cs"];
m9_1250 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2609-2609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonContract.cs"];
m9_1251 [label="string json = @''{''''Height'''':1}''", span="2611-2611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonContract.cs"];
m9_1252 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="2613-2613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonContract.cs"];
m9_1253 [label="Assert.AreEqual(1, c.Height)", span="2614-2614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonContract.cs"];
m9_1254 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="2609-2609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonContract.cs"];
m9_298 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonContract.cs"];
m9_299 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonContract.cs"];
m9_3892 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8969-8969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonContract.cs"];
m9_3893 [label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="8971-8974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonContract.cs"];
m9_3894 [label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="8976-8976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonContract.cs"];
m9_3895 [label="Assert.AreEqual(''base'', d.BaseProperty)", span="8978-8978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonContract.cs"];
m9_3896 [label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="8979-8979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonContract.cs"];
m9_3897 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="8969-8969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonContract.cs"];
m9_2544 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5714-5714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonContract.cs"];
m9_2545 [label="var data = new DecimalTest(decimal.MinValue)", span="5716-5716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonContract.cs"];
m9_2546 [label="var json = JsonConvert.SerializeObject(data)", span="5717-5717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonContract.cs"];
m9_2547 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="5718-5718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonContract.cs"];
m9_2548 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="5720-5720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonContract.cs"];
m9_2549 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="5714-5714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonContract.cs"];
m9_2209 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4982-4982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonContract.cs"];
m9_2210 [label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="4984-4988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonContract.cs"];
m9_2211 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="4990-4990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonContract.cs"];
m9_2212 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="4991-4991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonContract.cs"];
m9_2213 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="4982-4982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonContract.cs"];
m9_2712 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6189-6189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonContract.cs"];
m9_2713 [label="throw new NotImplementedException();", span="6191-6191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonContract.cs"];
m9_2714 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6189-6189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonContract.cs"];
m9_1932 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonContract.cs"];
m9_2798 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6428-6428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_2799 [label="object o = new { p = 1 }", span="6431-6431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_2800 [label="var json = JObject.FromObject(o)", span="6433-6433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_2801 [label="var sw = new StringWriter()", span="6435-6435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_2803 [label="jw.WriteToken(json.CreateReader())", span="6438-6438", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_2802 [label="var jw = new JsonTextWriter(sw)", span="6436-6436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_2805 [label="string result = sw.ToString()", span="6441-6441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_2804 [label="jw.Flush()", span="6439-6439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_2806 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6442-6442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_2807 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6428-6428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonContract.cs"];
m9_3134 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="JsonContract.cs"];
m9_3965 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="9175-9175", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonContract.cs"];
m9_3966 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="9175-9175", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonContract.cs"];
m9_2214 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="4994-4994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonContract.cs"];
m9_1374 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonContract.cs"];
m9_2346 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5258-5258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonContract.cs"];
m9_2347 [label="Prop1 = new byte[0]", span="5260-5260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonContract.cs"];
m9_2348 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5258-5258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonContract.cs"];
m9_3912 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="9061-9061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonContract.cs"];
m9_3853 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="8870-8870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonContract.cs"];
m9_1478 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3163-3163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonContract.cs"];
m9_1479 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3163-3163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonContract.cs"];
m9_2017 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonContract.cs"];
m9_695 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1424-1424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonContract.cs"];
m9_3934 [label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonContract.cs"];
m9_1968 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonContract.cs"];
m9_1959 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4383-4383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1960 [label="dictionary == null", span="4385-4385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1962 [label=dictionary, span="4390-4390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1961 [label="return;", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1963 [label="this[entry.Key] = entry.Value", span="4392-4392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_1964 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4383-4383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonContract.cs"];
m9_95 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonContract.cs"];
m9_2417 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5427-5427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonContract.cs"];
m9_2418 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5429-5429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonContract.cs"];
m9_2419 [label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5431-5433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonContract.cs"];
m9_2420 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5427-5427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonContract.cs"];
m9_1683 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="924-924", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonContract.cs"];
m9_3931 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="465-465", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonContract.cs"];
m9_1006 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2172-2172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_1007 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2174-2174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_1008 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2175-2175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_1009 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2176-2176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_1010 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2178-2178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_1011 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2179-2179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_1012 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2180-2180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_1013 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2181-2181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_1014 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2182-2182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_1015 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2172-2172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonContract.cs"];
m9_854 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1833-1833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonContract.cs"];
m9_855 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="1835-1835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonContract.cs"];
m9_856 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="1837-1837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonContract.cs"];
m9_857 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="1839-1839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonContract.cs"];
m9_858 [label="Assert.AreEqual(0, c.IgnoredField)", span="1841-1841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonContract.cs"];
m9_859 [label="Assert.AreEqual(99, c.Field)", span="1842-1842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonContract.cs"];
m9_860 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="1833-1833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonContract.cs"];
m9_131 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="344-344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonContract.cs"];
m9_132 [label="Version v = new Version(1, 2, 3, 4)", span="346-346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonContract.cs"];
m9_133 [label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="348-360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonContract.cs"];
m9_134 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="362-365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonContract.cs"];
m9_135 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="367-369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonContract.cs"];
m9_136 [label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="371-393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonContract.cs"];
m9_137 [label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="395-398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonContract.cs"];
m9_138 [label="Assert.AreEqual(''Name!'', c2.Name)", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonContract.cs"];
m9_139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="344-344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonContract.cs"];
m9_1546 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonContract.cs"];
m9_2329 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5214-5214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonContract.cs"];
m9_2330 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5216-5220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonContract.cs"];
m9_2331 [label="Assert.AreEqual(3, d.Length)", span="5222-5222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonContract.cs"];
m9_2332 [label="Assert.AreEqual(2.4, d[0])", span="5223-5223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonContract.cs"];
m9_2333 [label="Assert.AreEqual(4.3, d[1])", span="5224-5224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonContract.cs"];
m9_2334 [label="Assert.AreEqual(null, d[2])", span="5225-5225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonContract.cs"];
m9_2335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5214-5214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonContract.cs"];
m9_640 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1352-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_641 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1354-1354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_642 [label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1355-1355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_643 [label="Assert.IsNotNull(deserialized.foo2)", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_644 [label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1357-1357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_645 [label="Assert.IsNotNull(deserialized.foo)", span="1358-1358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_646 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1359-1359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_647 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1352-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonContract.cs"];
m9_907 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1992-1992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_908 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="1994-1994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_909 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="1997-1997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_910 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="1998-1998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_912 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2002-2002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_913 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2004-2004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_911 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2001-2001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_916 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2009-2009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_915 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2007-2007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_914 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="2006-2006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_917 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="1992-1992", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonContract.cs"];
m9_2385 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5322-5322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonContract.cs"];
m9_1518 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonContract.cs"];
m9_2398 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="688-688", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonContract.cs"];
m9_2529 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="5633-5633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonContract.cs"];
m9_3722 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8585-8585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonContract.cs"];
m9_3723 [label="throw new InvalidCastException();", span="8587-8587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonContract.cs"];
m9_3724 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="8585-8585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonContract.cs"];
m9_1293 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="JsonContract.cs"];
m9_889 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1971-1971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_890 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="1973-1973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_891 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="1971-1971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_1115 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonContract.cs"];
m9_671 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="831-831", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonContract.cs"];
m9_1083 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonContract.cs"];
m9_3983 [label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="9255-9255", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonContract.cs"];
m9_3984 [label="Value = value", span="9257-9257", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonContract.cs"];
m9_3985 [label="Constructor = ''Public Paramatized 1''", span="9258-9258", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonContract.cs"];
m9_3986 [label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", span="9255-9255", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor.MultipleParamatrizedConstructorsJsonConstructor(string)", file="JsonContract.cs"];
m9_3137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7103-7103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3138 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7105-7105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3139 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7103-7103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_143 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonContract.cs"];
m9_707 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1557-1557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_708 [label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1559-1565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_709 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_710 [label="baseWith.Virtual = ''Virtual2!''", span="1568-1568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_711 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1569-1569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_712 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1570-1570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_713 [label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_714 [label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="1574-1579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_715 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="1557-1557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonContract.cs"];
m9_2844 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonContract.cs"];
m9_3833 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8840-8840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3834 [label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="8842-8842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3835 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8843-8843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3837 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="8849-8849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3840 [label="Assert.AreEqual(dt, dt1)", span="8855-8855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3845 [label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="8866-8866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3836 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="8844-8847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3841 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="8857-8861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3839 [label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="8853-8853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3838 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="8851-8851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3842 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="8862-8862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3843 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="8864-8864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3844 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="8865-8865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_3846 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="8840-8840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonContract.cs"];
m9_2496 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="5583-5583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonContract.cs"];
m9_2497 [label="IDontWork = dontWork", span="5585-5585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonContract.cs"];
m9_2498 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="5583-5583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonContract.cs"];
m9_3531 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8097-8097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonContract.cs"];
m9_3532 [label="this.First = first", span="8100-8100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonContract.cs"];
m9_3533 [label="this.Second = second", span="8101-8101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonContract.cs"];
m9_3534 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8097-8097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonContract.cs"];
m9_3941 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9102-9102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3942 [label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="9104-9104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3943 [label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="9106-9111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3944 [label="return attachment;", span="9112-9112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_3945 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9102-9102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonContract.cs"];
m9_2786 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6399-6399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2787 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6401-6408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2788 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6409-6409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2791 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6420-6420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2792 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6421-6421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2793 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6422-6422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2794 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6423-6423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2795 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6424-6424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2789 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6411-6417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2790 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6419-6419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6399-6399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonContract.cs"];
m9_2167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="4893-4893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonContract.cs"];
m9_2168 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="4893-4893", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonContract.cs"];
m9_2292 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5130-5130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonContract.cs"];
m9_2293 [label="First = first", span="5132-5132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonContract.cs"];
m9_2294 [label="Second = second", span="5133-5133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonContract.cs"];
m9_2295 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5130-5130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonContract.cs"];
m9_76 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="238-238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonContract.cs"];
m9_77 [label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonContract.cs"];
m9_78 [label="Assert.AreEqual(EnumA.ValueA, e1)", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonContract.cs"];
m9_79 [label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="243-243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonContract.cs"];
m9_80 [label="Assert.AreEqual(EnumA.ValueA, e2)", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonContract.cs"];
m9_81 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="238-238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonContract.cs"];
m9_2018 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonContract.cs"];
m9_666 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="JsonContract.cs"];
m9_2700 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6159-6159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonContract.cs"];
m9_2701 [label="throw new NotImplementedException();", span="6161-6161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonContract.cs"];
m9_2702 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6159-6159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonContract.cs"];
m9_2668 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6077-6077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2669 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6079-6079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2670 [label="c1.Categories.Add(''one'')", span="6080-6080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2671 [label="c1.Categories.Add(''two'')", span="6081-6081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2672 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6083-6083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2675 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6093-6093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2676 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6094-6094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2673 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6084-6090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2674 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6092-6092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2677 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="6095-6095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2678 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="6096-6096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_2679 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6077-6077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonContract.cs"];
m9_219 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonContract.cs"];
m9_2773 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JsonContract.cs"];
m9_1497 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3216-3216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonContract.cs"];
m9_1498 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3218-3223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonContract.cs"];
m9_1499 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3225-3227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonContract.cs"];
m9_1500 [label="Assert.AreEqual(''Name!'', c.Name)", span="3229-3229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonContract.cs"];
m9_1501 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="3230-3230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonContract.cs"];
m9_1502 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3231-3231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonContract.cs"];
m9_1503 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3216-3216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonContract.cs"];
m9_1593 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3444-3444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonContract.cs"];
m9_1594 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3446-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonContract.cs"];
m9_1595 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3448-3448", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonContract.cs"];
m9_1596 [label="JArray a = (JArray)setOnly.GetValue()", span="3449-3449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonContract.cs"];
m9_1597 [label="Assert.AreEqual(5, a.Count)", span="3450-3450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonContract.cs"];
m9_1598 [label="Assert.AreEqual(1, (int)a[0])", span="3451-3451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonContract.cs"];
m9_1599 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3452-3452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonContract.cs"];
m9_1600 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3444-3444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonContract.cs"];
m9_2225 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JsonContract.cs"];
m9_3606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8297-8297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3607 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8299-8303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3608 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8305-8309", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3609 [label="john.Spouse = jane", span="8311-8311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3610 [label="jane.Spouse = john", span="8312-8312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3611 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8314-8318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3612 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8320-8327", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3613 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="8329-8344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_3614 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8297-8297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonContract.cs"];
m9_1905 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4238-4238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonContract.cs"];
m9_1906 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="4240-4240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonContract.cs"];
m9_1907 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4241-4241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonContract.cs"];
m9_1908 [label="Assert.AreEqual(123L, item.Value)", span="4243-4243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonContract.cs"];
m9_1909 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4238-4238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonContract.cs"];
m9_3578 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonContract.cs"];
m9_1684 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3587-3587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonContract.cs"];
m9_1685 [label="string json = @''{}''", span="3589-3589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonContract.cs"];
m9_1686 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Person]'. Path '', line 1, position 2.'')", span="3591-3591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonContract.cs"];
m9_1687 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="3587-3587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonContract.cs"];
m9_3898 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8984-8984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonContract.cs"];
m9_3899 [label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="8986-8989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonContract.cs"];
m9_3900 [label="string output = JsonConvert.SerializeObject(instance)", span="8990-8990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonContract.cs"];
m9_3901 [label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="8991-8991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonContract.cs"];
m9_3902 [label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="8993-8993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonContract.cs"];
m9_3903 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="8984-8984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonContract.cs"];
m9_2889 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonContract.cs"];
m9_688 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="JsonContract.cs"];
m9_3459 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonContract.cs"];
m9_3692 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8535-8535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonContract.cs"];
m9_3693 [label="throw new InvalidCastException();", span="8537-8537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonContract.cs"];
m9_3694 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="8535-8535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonContract.cs"];
m9_1910 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4270-4270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1911 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4272-4272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1912 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4273-4273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1913 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4274-4274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1914 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4275-4275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1917 [label="serializer.WriteObject(ms, c)", span="4281-4281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1915 [label="MemoryStream ms = new MemoryStream()", span="4277-4277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1916 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4278-4280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1918 [label="byte[] jsonBytes = ms.ToArray()", span="4283-4283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1919 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4284-4284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_1920 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4270-4270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonContract.cs"];
m9_3579 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8226-8226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonContract.cs"];
m9_3580 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8228-8228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonContract.cs"];
m9_3581 [label="var settings = new JsonSerializerSettings()", span="8229-8229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonContract.cs"];
m9_3583 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8231-8231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonContract.cs"];
m9_3582 [label="var serialiser = JsonSerializer.Create(settings)", span="8230-8230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonContract.cs"];
m9_3584 [label="Assert.AreEqual(1234567890.123456m, d)", span="8233-8233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonContract.cs"];
m9_3585 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8226-8226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonContract.cs"];
m9_790 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonContract.cs"];
m9_2757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6299-6299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonContract.cs"];
m9_829 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1788-1788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonContract.cs"];
m9_830 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="1790-1790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonContract.cs"];
m9_831 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="1792-1792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonContract.cs"];
m9_832 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="1794-1794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonContract.cs"];
m9_833 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="1788-1788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonContract.cs"];
m9_1765 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonContract.cs"];
m9_1766 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="3753-3753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonContract.cs"];
m9_1767 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="3754-3754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonContract.cs"];
m9_1768 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="3755-3755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonContract.cs"];
m9_1769 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="3757-3757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonContract.cs"];
m9_1770 [label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="3758-3761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonContract.cs"];
m9_1771 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="3751-3751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonContract.cs"];
m9_2449 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5484-5484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonContract.cs"];
m9_2450 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5486-5486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonContract.cs"];
m9_2451 [label="Assert.AreEqual(123456789876543.21m, d)", span="5487-5487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonContract.cs"];
m9_2452 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5484-5484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonContract.cs"];
m9_2231 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="JsonContract.cs"];
m9_3797 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8737-8737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonContract.cs"];
m9_3798 [label="DateTime dt = new DateTime(2000, 12, 22)", span="8739-8739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonContract.cs"];
m9_3799 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="8740-8740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonContract.cs"];
m9_3801 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="8747-8750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonContract.cs"];
m9_3804 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="8758-8758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonContract.cs"];
m9_3800 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="8741-8745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonContract.cs"];
m9_3803 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="8756-8756", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonContract.cs"];
m9_3802 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="8752-8754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonContract.cs"];
m9_3805 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="8737-8737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonContract.cs"];
m9_1396 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="2958-2958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonContract.cs"];
m9_1397 [label="TestProperty1 = testProperty1", span="2960-2960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonContract.cs"];
m9_1398 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="2958-2958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonContract.cs"];
m9_2050 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonContract.cs"];
m9_222 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonContract.cs"];
m9_2336 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5230-5230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonContract.cs"];
m9_2337 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5232-5237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonContract.cs"];
m9_2338 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5239-5243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonContract.cs"];
m9_2339 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5245-5245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonContract.cs"];
m9_2340 [label="Assert.AreEqual(3, d.Count)", span="5247-5247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonContract.cs"];
m9_2341 [label="Assert.IsTrue(d.Contains(''One''))", span="5248-5248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonContract.cs"];
m9_2342 [label="Assert.IsTrue(d.Contains(''2''))", span="5249-5249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonContract.cs"];
m9_2343 [label="Assert.IsTrue(d.Contains(''III''))", span="5250-5250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonContract.cs"];
m9_2344 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5230-5230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonContract.cs"];
m9_986 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="775-775", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonContract.cs"];
m9_876 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="249-249", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonContract.cs"];
m9_1538 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3321-3321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonContract.cs"];
m9_1539 [label="Uri uri = new Uri(''http://codeplex.com'')", span="3323-3323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonContract.cs"];
m9_1540 [label="string json = JsonConvert.SerializeObject(uri)", span="3324-3324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonContract.cs"];
m9_1541 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3326-3326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonContract.cs"];
m9_1543 [label="Assert.AreEqual(uri, newUri)", span="3329-3329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonContract.cs"];
m9_1542 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3328-3328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonContract.cs"];
m9_1544 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3321-3321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonContract.cs"];
m9_2248 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5059-5059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2249 [label="var reference = new Dictionary<string, object>()", span="5063-5063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2250 [label="reference.Add(''$ref'', ''Persons'')", span="5064-5064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2251 [label="reference.Add(''$id'', 1)", span="5065-5065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2255 [label="child.Add(''Father'', reference)", span="5070-5070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2252 [label="var child = new Dictionary<string, object>()", span="5067-5067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2253 [label="child.Add(''_id'', 2)", span="5068-5068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2254 [label="child.Add(''Name'', ''Isabell'')", span="5069-5069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2256 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5072-5072", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2257 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 11.'')", span="5074-5074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_2258 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5059-5059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonContract.cs"];
m9_34 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="153-153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonContract.cs"];
m9_35 [label="return dictionaryKey;", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonContract.cs"];
m9_36 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="153-153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonContract.cs"];
m9_3932 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonContract.cs"];
m9_3232 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7273-7273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3233 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7275-7283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3234 [label="string json = JsonConvert.SerializeObject(c)", span="7285-7285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3235 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7287-7287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonContract.cs"];
m9_3236 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7273-7273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonContract.cs"];
m9_234 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="645-645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonContract.cs"];
m9_2922 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6664-6664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonContract.cs"];
m9_2923 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="6666-6671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonContract.cs"];
m9_2924 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json); }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 7.'')", span="6673-6673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonContract.cs"];
m9_2925 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="6664-6664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonContract.cs"];
m9_3698 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8545-8545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonContract.cs"];
m9_3699 [label="throw new InvalidCastException();", span="8547-8547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonContract.cs"];
m9_3700 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="8545-8545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonContract.cs"];
m9_1340 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonContract.cs"];
m9_582 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="103-103", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonContract.cs"];
m9_1249 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonContract.cs"];
m9_3570 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8209-8209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonContract.cs"];
m9_3571 [label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8211-8211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonContract.cs"];
m9_3572 [label="string json = JsonConvert.SerializeObject(s1)", span="8213-8213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonContract.cs"];
m9_3574 [label="Assert.AreEqual(s1.Count, s2.Count)", span="8217-8217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonContract.cs"];
m9_3575 [label=s1, span="8218-8218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonContract.cs"];
m9_3573 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8215-8215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonContract.cs"];
m9_3576 [label="Assert.IsTrue(s2.Contains(s))", span="8220-8220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonContract.cs"];
m9_3577 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8209-8209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonContract.cs"];
m9_1879 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4104-4104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonContract.cs"];
m9_946 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonContract.cs"];
m9_862 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1846-1846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonContract.cs"];
m9_863 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="1848-1925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonContract.cs"];
m9_864 [label="object o = JsonConvert.DeserializeObject(json)", span="1926-1926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonContract.cs"];
m9_865 [label="string s = string.Empty", span="1927-1927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonContract.cs"];
m9_866 [label="s += s", span="1928-1928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonContract.cs"];
m9_867 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="1846-1846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonContract.cs"];
m9_2232 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5029-5029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_2233 [label="return objectType == typeof(Pos);", span="5031-5031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_2234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5029-5029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonContract.cs"];
m9_3719 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8580-8580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonContract.cs"];
m9_3720 [label="throw new InvalidCastException();", span="8582-8582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonContract.cs"];
m9_3721 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="8580-8580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonContract.cs"];
m9_2396 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5349-5349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonContract.cs"];
m9_3135 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="JsonContract.cs"];
m9_2878 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6497-6497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonContract.cs"];
m9_1849 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4042-4042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonContract.cs"];
m9_1850 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="4044-4044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonContract.cs"];
m9_1851 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="4045-4045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonContract.cs"];
m9_1852 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="4047-4047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonContract.cs"];
m9_1853 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="4048-4048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonContract.cs"];
m9_1854 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4042-4042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonContract.cs"];
m9_3555 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8154-8154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonContract.cs"];
m9_3556 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8156-8164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonContract.cs"];
m9_3557 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8166-8166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonContract.cs"];
m9_3558 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8168-8171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonContract.cs"];
m9_3559 [label="Assert.AreEqual(expected, actual)", span="8173-8173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonContract.cs"];
m9_3560 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8154-8154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonContract.cs"];
m9_3246 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7315-7315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonContract.cs"];
m9_3247 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7317-7321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonContract.cs"];
m9_3248 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7323-7326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonContract.cs"];
m9_3249 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7328-7331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonContract.cs"];
m9_3250 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7333-7333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonContract.cs"];
m9_3251 [label="Assert.AreEqual(2, dic2.Count)", span="7335-7335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonContract.cs"];
m9_3252 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonContract.cs"];
m9_3253 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7337-7337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonContract.cs"];
m9_3254 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7315-7315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonContract.cs"];
m9_2663 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="6038-6038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonContract.cs"];
m9_2847 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="664-664", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonContract.cs"];
m9_3144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7121-7121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3145 [label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7123-7123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3146 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7125-7125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3152 [label="values.Add(foo)", span="7136-7136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3153 [label="Assert.AreEqual(2, values.Count)", span="7139-7139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3154 [label="Assert.AreEqual(''bar'', values[0].Name)", span="7140-7140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3155 [label="Assert.AreEqual(''baz'', values[1].Name)", span="7141-7141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3147 [label="reader.SupportMultipleContent = true", span="7126-7126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3149 [label="!reader.Read()", span="7130-7130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3151 [label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7134-7134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3148 [label=true, span="7128-7128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3150 [label="JsonSerializer serializer = new JsonSerializer()", span="7133-7133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_3156 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7121-7121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonContract.cs"];
m9_841 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1812-1812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonContract.cs"];
m9_842 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="1814-1814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonContract.cs"];
m9_843 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="1816-1816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonContract.cs"];
m9_844 [label="Assert.AreEqual(c.Field, ''Field'')", span="1818-1818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonContract.cs"];
m9_845 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="1819-1819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonContract.cs"];
m9_846 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="1812-1812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonContract.cs"];
m9_975 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2120-2120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_976 [label="DateTime d = new DateTime(2000, 1, 1)", span="2122-2122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_977 [label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2124-2128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_983 [label="Assert.AreEqual(d, anonymous.DateValue)", span="2140-2140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_978 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2130-2130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_980 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2136-2136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_982 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2139-2139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_979 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2131-2134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_981 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2137-2137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_984 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2120-2120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonContract.cs"];
m9_2619 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5895-5895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonContract.cs"];
m9_2620 [label="string json = @''{A:''''Test''''}''", span="5897-5897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonContract.cs"];
m9_2621 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="5899-5899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonContract.cs"];
m9_2622 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="5900-5900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonContract.cs"];
m9_2623 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="5901-5901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonContract.cs"];
m9_2624 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="5895-5895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonContract.cs"];
m9_736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1521-1521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonContract.cs"];
m9_158 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="478-478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_159 [label="FaqItem c = new FaqItem()", span="480-480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_160 [label="c.FaqId = 1", span="481-481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_161 [label="c.Sections.Add(new FaqSection())", span="482-482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_162 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="484-484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_163 [label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="486-493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_164 [label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="495-495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_165 [label="Assert.AreEqual(1, c2.FaqId)", span="497-497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_166 [label="Assert.AreEqual(1, c2.Sections.Count)", span="498-498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_167 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="478-478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonContract.cs"];
m9_3337 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7560-7560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonContract.cs"];
m9_3338 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="7562-7586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonContract.cs"];
m9_3339 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="7588-7588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonContract.cs"];
m9_3340 [label="Assert.IsNotNull(exception)", span="7589-7589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonContract.cs"];
m9_3341 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="7590-7590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonContract.cs"];
m9_3342 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="7592-7592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonContract.cs"];
m9_3343 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="7560-7560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonContract.cs"];
m9_3393 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonContract.cs"];
m9_258 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonContract.cs"];
m9_259 [label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="730-735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonContract.cs"];
m9_260 [label="var json = JsonConvert.SerializeObject(input)", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonContract.cs"];
m9_262 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="740-740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonContract.cs"];
m9_263 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="741-741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonContract.cs"];
m9_264 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="742-742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonContract.cs"];
m9_261 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="738-738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonContract.cs"];
m9_265 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="728-728", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonContract.cs"];
m9_1226 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonContract.cs"];
m9_1837 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4005-4005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_1838 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="4007-4007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_1839 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="4009-4009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_1840 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="4010-4010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_1841 [label="g.MyProperty = ''some value''", span="4012-4012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_1842 [label="string json = g.ToJson()", span="4014-4014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_1843 [label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="4016-4030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_1844 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="4032-4032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_1845 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="4033-4033", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_1846 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4005-4005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonContract.cs"];
m9_11 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonContract.cs"];
m9_3933 [label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonContract.cs"];
m9_528 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1143-1143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_529 [label="info.AddValue(''stringValue'', _stringValue)", span="1145-1145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_530 [label="info.AddValue(''intValue'', _intValue)", span="1146-1146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_531 [label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_532 [label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1148-1148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_533 [label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1149-1149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_534 [label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1150-1150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_535 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1143-1143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonContract.cs"];
m9_1208 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2532-2532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonContract.cs"];
m9_1209 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2534-2534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonContract.cs"];
m9_1210 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2535-2535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonContract.cs"];
m9_1211 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2532-2532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonContract.cs"];
m9_3591 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonContract.cs"];
m9_3592 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8264-8264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonContract.cs"];
m9_3593 [label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8266-8266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonContract.cs"];
m9_3594 [label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8268-8270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonContract.cs"];
m9_3595 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8262-8262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonContract.cs"];
m9_229 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="651-651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonContract.cs"];
m9_230 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="653-653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonContract.cs"];
m9_231 [label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="655-655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonContract.cs"];
m9_232 [label="Assert.AreEqual(true, childClass.IsTransient)", span="656-656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonContract.cs"];
m9_233 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="651-651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonContract.cs"];
m9_1696 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3604-3604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonContract.cs"];
m9_1697 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(NETFX_CORE || PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="3606-3617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonContract.cs"];
m9_1698 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="3604-3604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonContract.cs"];
m9_1980 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonContract.cs"];
m9_878 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1954-1954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_879 [label="JsonPropertyClass test = new JsonPropertyClass()", span="1956-1956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_880 [label="test.Pie = ''Delicious''", span="1957-1957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_881 [label="test.SweetCakesCount = int.MaxValue", span="1958-1958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_882 [label="string jsonText = JsonConvert.SerializeObject(test)", span="1960-1960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_885 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="1966-1966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_886 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="1967-1967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_883 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="1962-1962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_884 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="1964-1964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_887 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="1954-1954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonContract.cs"];
m9_3056 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6924-6924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonContract.cs"];
m9_3057 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="6926-6926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonContract.cs"];
m9_3058 [label="Assert.IsNull(b)", span="6927-6927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonContract.cs"];
m9_3059 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="6924-6924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonContract.cs"];
m9_2652 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6018-6018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonContract.cs"];
m9_2653 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6020-6024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonContract.cs"];
m9_2654 [label="string result = JsonConvert.SerializeObject(cc)", span="6026-6026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonContract.cs"];
m9_2655 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6027-6027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonContract.cs"];
m9_2656 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6018-6018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonContract.cs"];
m9_2936 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6704-6704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonContract.cs"];
m9_2937 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="6706-6710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonContract.cs"];
m9_2938 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 15.'')", span="6712-6712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonContract.cs"];
m9_2939 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="6704-6704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonContract.cs"];
m9_904 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonContract.cs"];
m9_3668 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonContract.cs"];
m9_2744 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6279-6279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonContract.cs"];
m9_2745 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6281-6281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonContract.cs"];
m9_2746 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6283-6283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonContract.cs"];
m9_2747 [label="Assert.AreEqual(3, r.Departures.Count())", span="6284-6284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonContract.cs"];
m9_2748 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6285-6285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonContract.cs"];
m9_2749 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6286-6286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonContract.cs"];
m9_2750 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="6287-6287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonContract.cs"];
m9_2751 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6279-6279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonContract.cs"];
m9_3995 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", span="", file="JsonContract.cs"];
m9_3996 [label=c1, span="", file="JsonContract.cs"];
m9_3997 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span="", file="JsonContract.cs"];
m9_3998 [label=c1, span="", file="JsonContract.cs"];
m9_3999 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span="", file="JsonContract.cs"];
m9_4000 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span="", file="JsonContract.cs"];
m9_4001 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse", span="", file="JsonContract.cs"];
m9_4002 [label=referenceResolver, span="", file="JsonContract.cs"];
m9_4003 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span="", file="JsonContract.cs"];
m9_4004 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span="", file="JsonContract.cs"];
m9_4005 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="JsonContract.cs"];
m9_4006 [label=json, span="", file="JsonContract.cs"];
m9_4007 [label=strFromTest, span="", file="JsonContract.cs"];
m9_4008 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass", span="", file="JsonContract.cs"];
m9_4009 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass", span="", file="JsonContract.cs"];
m9_4010 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonContract.cs"];
m9_4011 [label=json, span="", file="JsonContract.cs"];
m9_4012 [label=json, span="", file="JsonContract.cs"];
m9_4013 [label=json, span="", file="JsonContract.cs"];
m9_4014 [label=json, span="", file="JsonContract.cs"];
m9_4015 [label=json, span="", file="JsonContract.cs"];
m9_4016 [label=json, span="", file="JsonContract.cs"];
m9_4017 [label=json, span="", file="JsonContract.cs"];
m9_4018 [label=json, span="", file="JsonContract.cs"];
m9_4019 [label=json, span="", file="JsonContract.cs"];
m9_4020 [label=json, span="", file="JsonContract.cs"];
m9_4021 [label=json, span="", file="JsonContract.cs"];
m9_4022 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="JsonContract.cs"];
m9_4023 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="JsonContract.cs"];
m9_4024 [label=json, span="", file="JsonContract.cs"];
m9_4025 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="JsonContract.cs"];
m9_4026 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span="", file="JsonContract.cs"];
m9_4027 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span="", file="JsonContract.cs"];
m9_4028 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="JsonContract.cs"];
m9_4029 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="JsonContract.cs"];
m9_4030 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span="", file="JsonContract.cs"];
m9_4031 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="JsonContract.cs"];
m9_4032 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="JsonContract.cs"];
m9_4033 [label=json, span="", file="JsonContract.cs"];
m9_4034 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span="", file="JsonContract.cs"];
m9_4035 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span="", file="JsonContract.cs"];
m9_4036 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span="", file="JsonContract.cs"];
m9_4037 [label=json, span="", file="JsonContract.cs"];
m9_4038 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span="", file="JsonContract.cs"];
m9_4039 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="JsonContract.cs"];
m9_4040 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span="", file="JsonContract.cs"];
m9_4041 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonContract.cs"];
m9_4042 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonContract.cs"];
m9_4043 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span="", file="JsonContract.cs"];
m9_4044 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span="", file="JsonContract.cs"];
m9_4045 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="JsonContract.cs"];
m9_4046 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="JsonContract.cs"];
m9_4047 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="JsonContract.cs"];
m9_4048 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="JsonContract.cs"];
m9_4049 [label=json, span="", file="JsonContract.cs"];
m9_4050 [label=json, span="", file="JsonContract.cs"];
m9_4051 [label=errors, span="", file="JsonContract.cs"];
m9_4052 [label=errors, span="", file="JsonContract.cs"];
m9_4053 [label=errors, span="", file="JsonContract.cs"];
m9_4054 [label=json, span="", file="JsonContract.cs"];
m9_4055 [label=s, span="", file="JsonContract.cs"];
m9_4056 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="JsonContract.cs"];
m9_4057 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span="", file="JsonContract.cs"];
m9_4058 [label=json, span="", file="JsonContract.cs"];
m9_4059 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver", span="", file="JsonContract.cs"];
m9_4060 [label=json, span="", file="JsonContract.cs"];
m9_4061 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span="", file="JsonContract.cs"];
m9_4062 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span="", file="JsonContract.cs"];
m9_4063 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span="", file="JsonContract.cs"];
m9_4064 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType", span="", file="JsonContract.cs"];
m9_4065 [label=JsonMessage, span="", file="JsonContract.cs"];
m9_4066 [label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span="", file="JsonContract.cs"];
m9_4067 [label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor", span="", file="JsonContract.cs"];
m9_4068 [label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor", span="", file="JsonContract.cs"];
m9_4069 [label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor", span="", file="JsonContract.cs"];
m10_6 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonConverterAttribute.cs"];
m10_7 [label="Entry Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type, params object[])", span="73-73", cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type, params object[])", file="JsonConverterAttribute.cs"];
m10_8 [label="ConverterParameters = converterParameters", span="76-76", cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type, params object[])", file="JsonConverterAttribute.cs"];
m10_9 [label="Exit Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type, params object[])", span="73-73", cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type, params object[])", file="JsonConverterAttribute.cs"];
m10_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonConverterAttribute.cs"];
m10_0 [label="Entry Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", span="58-58", cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="JsonConverterAttribute.cs"];
m10_1 [label="converterType == null", span="60-60", cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="JsonConverterAttribute.cs"];
m10_2 [label="throw new ArgumentNullException(nameof(converterType));", span="62-62", cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="JsonConverterAttribute.cs"];
m10_3 [label="_converterType = converterType", span="65-65", cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="JsonConverterAttribute.cs"];
m10_4 [label="Exit Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", span="58-58", cluster="Newtonsoft.Json.JsonConverterAttribute.JsonConverterAttribute(System.Type)", file="JsonConverterAttribute.cs"];
m10_10 [label="Newtonsoft.Json.JsonConverterAttribute", span="", file="JsonConverterAttribute.cs"];
m11_18 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="JsonConvertTest.cs"];
m11_19 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonConvertTest.cs"];
m11_16 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JsonConvertTest.cs"];
m11_15 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="JsonConvertTest.cs"];
m11_13 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonConvertTest.cs"];
m11_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", span="48-48", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_1 [label="string json = @''{\r\n              'channel': {\r\n                'title': 'James Newton-King',\r\n                'link': 'http://james.newtonking.com',\r\n                'description': 'James Newton-King\'s blog.',\r\n                'item': [\r\n                  {\r\n                    'title': 'Json.NET 1.3 + New license + Now on CodePlex',\r\n                    'description': 'Annoucing the release of Json.NET 1.3, the MIT license and the source on CodePlex',\r\n                    'link': 'http://james.newtonking.com/projects/json-net.aspx',\r\n                    'category': [\r\n                      'Json.NET',\r\n                      'CodePlex'\r\n                    ]\r\n                  },\r\n                  {\r\n                    'title': 'LINQ to JSON beta',\r\n                    'description': 'Annoucing LINQ to JSON',\r\n                    'link': 'http://james.newtonking.com/projects/json-net.aspx',\r\n                    'category': [\r\n                      'Json.NET',\r\n                      'LINQ'\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            }''", span="51-77", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_2 [label="JObject rss = JObject.Parse(json)", span="79-79", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_3 [label="string rssTitle = (string)rss[''channel''][''title'']", span="81-81", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_5 [label="string itemTitle = (string)rss[''channel''][''item''][0][''title'']", span="86-86", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_7 [label="JArray categories = (JArray)rss[''channel''][''item''][0][''category'']", span="91-91", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_4 [label="Console.WriteLine(rssTitle)", span="83-83", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_6 [label="Console.WriteLine(itemTitle)", span="88-88", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_8 [label="Console.WriteLine(categories)", span="93-93", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_9 [label="string[] categoriesText = categories.Select(c => (string)c).ToArray()", span="99-99", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_10 [label="Console.WriteLine(string.Join('', '', categoriesText))", span="101-101", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_11 [label="Assert.AreEqual(''Json.NET, CodePlex'', string.Join('', '', categoriesText))", span="105-105", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_12 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", span="48-48", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJson.Example()", file="JsonConvertTest.cs"];
m11_17 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="JsonConvertTest.cs"];
m11_20 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="JsonConvertTest.cs"];
m11_21 [label="(string)c", span="99-99", cluster="lambda expression", file="JsonConvertTest.cs"];
m11_22 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="JsonConvertTest.cs"];
m11_14 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonConvertTest.cs"];
m12_24 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonDictionaryContract.cs"];
m12_22 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", span="412-412", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDictionaryKeyValueTypes(System.Type, out System.Type, out System.Type)", file="JsonDictionaryContract.cs"];
m12_23 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", span="125-125", cluster="Newtonsoft.Json.Utilities.CollectionUtils.ResolveEnumerableCollectionConstructor(System.Type, System.Type, System.Type)", file="JsonDictionaryContract.cs"];
m12_25 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="208-208", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m12_26 [label="_genericWrapperCreator == null", span="210-210", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m12_30 [label="return (IWrappedDictionary)_genericWrapperCreator(dictionary);", span="218-218", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m12_27 [label="_genericWrapperType = typeof(DictionaryWrapper<,>).MakeGenericType(DictionaryKeyType, DictionaryValueType)", span="212-212", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m12_28 [label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { _genericCollectionDefinitionType })", span="214-214", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m12_29 [label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateParameterizedConstructor(genericWrapperConstructor)", span="215-215", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m12_31 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="208-208", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonDictionaryContract.cs"];
m12_18 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="298-298", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonDictionaryContract.cs"];
m12_0 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_1 [label="ContractType = JsonContractType.Dictionary", span="118-118", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_4 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(IDictionary<,>), out _genericCollectionDefinitionType)", span="123-123", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_2 [label="Type keyType", span="120-120", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_3 [label="Type valueType", span="121-121", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_5 [label="keyType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="125-125", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_9 [label="ReflectionUtils.GetDictionaryKeyValueTypes(UnderlyingType, out keyType, out valueType)", span="153-153", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_6 [label="valueType = _genericCollectionDefinitionType.GetGenericArguments()[1]", span="126-126", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_8 [label="CreatedType = typeof(Dictionary<,>).MakeGenericType(keyType, valueType)", span="130-130", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_12 [label="keyType != null && valueType != null", span="161-161", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_13 [label="_parameterizedConstructor = CollectionUtils.ResolveEnumerableCollectionConstructor(\r\n                    CreatedType,\r\n                    typeof(KeyValuePair<,>).MakeGenericType(keyType, valueType),\r\n                    typeof(IDictionary<,>).MakeGenericType(keyType, valueType))", span="163-166", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_15 [label="DictionaryKeyType = keyType", span="179-179", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_7 [label="ReflectionUtils.IsGenericDefinition(UnderlyingType, typeof(IDictionary<,>))", span="128-128", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_16 [label="DictionaryValueType = valueType", span="180-180", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_10 [label="UnderlyingType == typeof(IDictionary)", span="155-155", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_11 [label="CreatedType = typeof(Dictionary<object, object>)", span="157-157", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_14 [label="ShouldCreateWrapper = !typeof(IDictionary).IsAssignableFrom(CreatedType)", span="177-177", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_17 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="115-115", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="JsonDictionaryContract.cs"];
m12_21 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="JsonDictionaryContract.cs"];
m12_33 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="73-73", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="JsonDictionaryContract.cs"];
m12_34 [label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="31-31", cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonDictionaryContract.cs"];
m12_19 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="JsonDictionaryContract.cs"];
m12_32 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JsonDictionaryContract.cs"];
m12_20 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", span="281-281", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsGenericDefinition(System.Type, System.Type)", file="JsonDictionaryContract.cs"];
m12_35 [label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m12_36 [label="_genericTemporaryDictionaryCreator == null", span="223-223", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m12_37 [label="Type temporaryDictionaryType = typeof(Dictionary<,>).MakeGenericType(DictionaryKeyType ?? typeof(object), DictionaryValueType ?? typeof(object))", span="225-225", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m12_39 [label="return (IDictionary)_genericTemporaryDictionaryCreator();", span="230-230", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m12_38 [label="_genericTemporaryDictionaryCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(temporaryDictionaryType)", span="227-227", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m12_40 [label="Exit Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", span="221-221", cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateTemporaryDictionary()", file="JsonDictionaryContract.cs"];
m12_41 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="JsonDictionaryContract.cs"];
m12_42 [label="Entry Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", span="3038-3038", cluster="Newtonsoft.Json.Serialization.Func<TResult>.Invoke()", file="JsonDictionaryContract.cs"];
m12_43 [label="Newtonsoft.Json.Serialization.JsonDictionaryContract", span="", file="JsonDictionaryContract.cs"];
m14_4 [label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="46-46", cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="JsonObjectContract.cs"];
m14_0 [label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs"];
m14_1 [label="ContractType = JsonContractType.Object", span="165-165", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs"];
m14_2 [label="Properties = new JsonPropertyCollection(UnderlyingType)", span="167-167", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs"];
m14_3 [label="Exit Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="162-162", cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="JsonObjectContract.cs"];
m14_5 [label="Newtonsoft.Json.Serialization.JsonObjectContract", span="", file="JsonObjectContract.cs"];
m15_29 [label="Entry Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", span="38-38", cluster="Newtonsoft.Json.IJsonLineInfo.HasLineInfo()", file="JsonReaderException.cs"];
m15_15 [label="return Create(reader as IJsonLineInfo, reader.Path, message, ex);", span="115-115", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonReaderException.cs"];
m15_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonDynamic.Example()", span="39-39", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonDynamic.Example()", file="JsonReaderException.cs"];
m15_1 [label="string json = @''[\r\n              {\r\n                'Title': 'Json.NET is awesome!',\r\n                'Author': {\r\n                  'Name': 'James Newton-King',\r\n                  'Twitter': '@JamesNK',\r\n                  'Picture': '/jamesnk.png'\r\n                },\r\n                'Date': '2013-01-23T19:30:00',\r\n                'BodyHtml': '&lt;h3&gt;Title!&lt;/h3&gt;\r\n&lt;p&gt;Content!&lt;/p&gt;'\r\n              }\r\n            ]''", span="42-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonDynamic.Example()", color=red, community=0, file="JsonReaderException.cs"];
m15_2 [label="dynamic blogPosts = JArray.Parse(json)", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonDynamic.Example()", file="JsonReaderException.cs"];
m15_3 [label="dynamic blogPost = blogPosts[0]", span="57-57", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonDynamic.Example()", file="JsonReaderException.cs"];
m15_4 [label="string title = blogPost.Title", span="59-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonDynamic.Example()", file="JsonReaderException.cs"];
m15_6 [label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", span="100-100", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs"];
m15_8 [label="LineNumber = lineNumber", span="104-104", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs", color=green, community=0];
m15_5 [label="Console.WriteLine(title)", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.QueryJsonDynamic.Example()", file="JsonReaderException.cs"];
m15_10 [label="Exit Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", span="100-100", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs"];
m15_7 [label="Path = path", span="103-103", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs", color=green, community=0];
m15_9 [label="LinePosition = linePosition", span="105-105", cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, string, int, int)", file="JsonReaderException.cs", color=green, community=0];
m15_11 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", span="108-108", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string)", file="JsonReaderException.cs"];
m15_12 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="144-144", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonReaderException.cs"];
m15_13 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonReaderException.cs"];
m15_14 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonReaderException.cs"];
m15_28 [label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonReaderException.cs"];
m15_17 [label="Entry Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="118-118", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_26 [label="return new JsonReaderException(message, ex, path, lineNumber, linePosition);", span="135-135", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_18 [label="message = JsonPosition.FormatMessage(lineInfo, path, message)", span="120-120", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_22 [label="lineNumber = lineInfo.LineNumber", span="126-126", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_23 [label="linePosition = lineInfo.LinePosition", span="127-127", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_24 [label="lineNumber = 0", span="131-131", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_25 [label="linePosition = 0", span="132-132", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_21 [label="lineInfo != null && lineInfo.HasLineInfo()", span="124-124", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_19 [label="int lineNumber", span="122-122", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_20 [label="int linePosition", span="123-123", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_27 [label="Exit Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", span="118-118", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.IJsonLineInfo, string, string, System.Exception)", file="JsonReaderException.cs"];
m15_16 [label="Exit Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", span="113-113", cluster="Newtonsoft.Json.JsonReaderException.Create(Newtonsoft.Json.JsonReader, string, System.Exception)", file="JsonReaderException.cs"];
m15_30 [label="Newtonsoft.Json.JsonReaderException", span="", file="JsonReaderException.cs"];
m16_6 [label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", span="104-104", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs"];
m16_7 [label="Path = path", span="107-107", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs"];
m16_8 [label="LineNumber = lineNumber", span="108-108", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs"];
m16_9 [label="LinePosition = linePosition", span="109-109", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs"];
m16_10 [label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", span="104-104", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception, string, int, int)", file="JsonSchemaException.cs"];
m16_2 [label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", span="74-74", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", file="JsonSchemaException.cs"];
m16_3 [label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", span="74-74", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string)", file="JsonSchemaException.cs"];
m16_0 [label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", span="65-65", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", file="JsonSchemaException.cs"];
m16_1 [label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", span="65-65", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException()", file="JsonSchemaException.cs"];
m16_4 [label="Entry Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", span="85-85", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", file="JsonSchemaException.cs"];
m16_5 [label="Exit Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", span="85-85", cluster="Newtonsoft.Json.Schema.JsonSchemaException.JsonSchemaException(string, System.Exception)", file="JsonSchemaException.cs"];
m16_11 [label="Newtonsoft.Json.Schema.JsonSchemaException", span="", file="JsonSchemaException.cs"];
m17_16 [label="Entry Newtonsoft.Json.Tests.LinqToSql.PersonRole.PersonRole()", span="447-447", cluster="Newtonsoft.Json.Tests.LinqToSql.PersonRole.PersonRole()", file="JsonSchemaGenerator.cs"];
m17_19 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSchemaGenerator.cs"];
m17_15 [label="Entry Newtonsoft.Json.Tests.LinqToSql.Person.Person()", span="134-134", cluster="Newtonsoft.Json.Tests.LinqToSql.Person.Person()", file="JsonSchemaGenerator.cs"];
m17_18 [label="Entry Newtonsoft.Json.Tests.LinqToSql.Department.Department()", span="633-633", cluster="Newtonsoft.Json.Tests.LinqToSql.Department.Department()", file="JsonSchemaGenerator.cs"];
m17_42 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSchemaGenerator.cs"];
m17_43 [label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", span="323-323", cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(object)", file="JsonSchemaGenerator.cs"];
m17_14 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonSchemaGenerator.cs"];
m17_44 [label="Entry System.Type.GetProperty(string)", span="0-0", cluster="System.Type.GetProperty(string)", file="JsonSchemaGenerator.cs"];
m17_21 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSchemaGenerator.cs"];
m17_0 [label="Entry Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", span="43-43", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_1 [label="Role role = new Role()", span="45-45", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_2 [label="role.Name = ''Role1''", span="46-46", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_3 [label="role.RoleId = new Guid(''67EA92B7-4BD3-4718-BD75-3C7EDF800B34'')", span="47-47", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_8 [label="person.PersonRoles.Add(new PersonRole\r\n            {\r\n                PersonRoleId = new Guid(''B012DD41-71DF-4839-B8D5-D1333FB886BC''),\r\n                Role = role\r\n            })", span="53-57", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_4 [label="Person person = new Person()", span="49-49", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_5 [label="person.FirstName = ''FirstName!''", span="50-50", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_6 [label="person.LastName = ''LastName!''", span="51-51", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_7 [label="person.PersonId = new Guid(''7AA027AA-C995-4986-908D-999D8063599F'')", span="52-52", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_9 [label="person.Department = new Department\r\n            {\r\n                DepartmentId = new Guid(''08F68BF9-929B-4434-BC47-C9489D22112B''),\r\n                Name = ''Name!''\r\n            }", span="59-63", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_10 [label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="65-65", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_11 [label="StringAssert.AreEqual(@''{\r\n  ''''first_name'''': ''''FirstName!'''',\r\n  ''''LastName'''': ''''LastName!'''',\r\n  ''''PersonId'''': ''''7aa027aa-c995-4986-908d-999d8063599f'''',\r\n  ''''DepartmentId'''': ''''08f68bf9-929b-4434-bc47-c9489d22112b'''',\r\n  ''''PersonRoles'''': [\r\n    {\r\n      ''''PersonId'''': ''''7aa027aa-c995-4986-908d-999d8063599f'''',\r\n      ''''RoleId'''': ''''67ea92b7-4bd3-4718-bd75-3c7edf800b34'''',\r\n      ''''PersonRoleId'''': ''''b012dd41-71df-4839-b8d5-d1333fb886bc'''',\r\n      ''''Role'''': {\r\n        ''''Name'''': ''''Role1'''',\r\n        ''''RoleId'''': ''''t5LqZ9NLGEe9dTx+34ALNA==''''\r\n      }\r\n    }\r\n  ],\r\n  ''''Department'''': {\r\n    ''''DepartmentId'''': ''''08f68bf9-929b-4434-bc47-c9489d22112b'''',\r\n    ''''Name'''': ''''!emaN''''\r\n  }\r\n}'', json)", span="67-87", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", color=red, community=0, file="JsonSchemaGenerator.cs"];
m17_12 [label="Exit Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", span="43-43", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Serialize()", file="JsonSchemaGenerator.cs"];
m17_22 [label="Entry Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", span="91-91", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_23 [label="string json = @''{\r\n  ''''first_name'''': ''''FirstName!'''',\r\n  ''''LastName'''': ''''LastName!'''',\r\n  ''''PersonId'''': ''''7aa027aa-c995-4986-908d-999d8063599f'''',\r\n  ''''PersonRoles'''': [\r\n    {\r\n      ''''PersonId'''': ''''7aa027aa-c995-4986-908d-999d8063599f'''',\r\n      ''''RoleId'''': ''''67ea92b7-4bd3-4718-bd75-3c7edf800b34'''',\r\n      ''''PersonRoleId'''': ''''b012dd41-71df-4839-b8d5-d1333fb886bc'''',\r\n      ''''Role'''': {\r\n        ''''Name'''': ''''Role1'''',\r\n        ''''RoleId'''': ''''t5LqZ9NLGEe9dTx+34ALNA==''''\r\n      }\r\n    }\r\n  ],\r\n  ''''Department'''': {\r\n    ''''DepartmentId'''': ''''08f68bf9-929b-4434-bc47-c9489d22112b'''',\r\n    ''''Name'''': ''''!emaN''''\r\n  }\r\n}''", span="93-112", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_24 [label="Person person = JsonConvert.DeserializeObject<Person>(json)", span="114-114", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_25 [label="Assert.IsNotNull(person)", span="115-115", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_26 [label="Assert.AreEqual(new Guid(''7AA027AA-C995-4986-908D-999D8063599F''), person.PersonId)", span="117-117", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_27 [label="Assert.AreEqual(''FirstName!'', person.FirstName)", span="118-118", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_28 [label="Assert.AreEqual(''LastName!'', person.LastName)", span="119-119", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_29 [label="Assert.AreEqual(1, person.PersonRoles.Count)", span="120-120", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_30 [label="Assert.AreEqual(person.PersonId, person.PersonRoles[0].PersonId)", span="121-121", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_31 [label="Assert.AreEqual(new Guid(''67EA92B7-4BD3-4718-BD75-3C7EDF800B34''), person.PersonRoles[0].RoleId)", span="122-122", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_32 [label="Assert.IsNotNull(person.PersonRoles[0].Role)", span="123-123", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_33 [label="Assert.AreEqual(1, person.PersonRoles[0].Role.PersonRoles.Count)", span="124-124", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_34 [label="Assert.AreEqual(''Name!'', person.Department.Name)", span="126-126", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_35 [label="TableAttribute tableAttribute = JsonTypeReflector.GetAttribute<TableAttribute>(typeof(Person))", span="128-128", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_36 [label="Assert.AreEqual('''', tableAttribute.Name)", span="129-129", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_37 [label="ColumnAttribute columnAttribute = JsonTypeReflector.GetAttribute<ColumnAttribute>(typeof(Person).GetProperty(''FirstName''))", span="131-131", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_38 [label="Assert.AreEqual(''_FirstName'', columnAttribute.Storage)", span="132-132", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_39 [label="Exit Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", span="91-91", cluster="Newtonsoft.Json.Tests.LinqToSql.LinqToSqlClassesSerializationTests.Deserialize()", file="JsonSchemaGenerator.cs"];
m17_17 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JsonSchemaGenerator.cs"];
m17_40 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSchemaGenerator.cs"];
m17_41 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSchemaGenerator.cs"];
m17_20 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="606-606", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaGenerator.cs"];
m17_13 [label="Entry Newtonsoft.Json.Tests.LinqToSql.Role.Role()", span="327-327", cluster="Newtonsoft.Json.Tests.LinqToSql.Role.Role()", file="JsonSchemaGenerator.cs"];
m18_11 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="58-58", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_29 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JsonSchemaNode.cs"];
m18_9 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSchemaNode.cs"];
m18_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", file="JsonSchemaNode.cs"];
m18_1 [label="DateTime mayanEndOfTheWorld = new DateTime(2012, 12, 21)", span="40-40", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", file="JsonSchemaNode.cs", color=green, community=0];
m18_2 [label="string jsonIsoDate = JsonConvert.SerializeObject(mayanEndOfTheWorld)", span="42-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", file="JsonSchemaNode.cs", color=green, community=0];
m18_3 [label="Console.WriteLine(jsonIsoDate)", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", file="JsonSchemaNode.cs", color=green, community=0];
m18_4 [label="string jsonMsDate = JsonConvert.SerializeObject(mayanEndOfTheWorld, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="47-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", file="JsonSchemaNode.cs"];
m18_5 [label="Console.WriteLine(jsonMsDate)", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", file="JsonSchemaNode.cs"];
m18_6 [label="Assert.IsNotNull(jsonMsDate)", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", file="JsonSchemaNode.cs"];
m18_31 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="JsonSchemaNode.cs"];
m18_12 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSchemaNode.cs"];
m18_13 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSchemaNode.cs"];
m18_14 [label="PatternProperties = new Dictionary<string, JsonSchemaNode>(source.PatternProperties)", span="62-62", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_15 [label="Items = new List<JsonSchemaNode>(source.Items)", span="63-63", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_16 [label="AdditionalProperties = source.AdditionalProperties", span="64-64", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_17 [label="AdditionalItems = source.AdditionalItems", span="65-65", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_18 [label="Id = GetId(Schemas)", span="67-67", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_19 [label="Exit Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", span="58-58", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.JsonSchemaNode(Newtonsoft.Json.Schema.JsonSchemaNode, Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_24 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", span="70-70", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_25 [label="return new JsonSchemaNode(this, schema);", span="72-72", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_26 [label="Exit Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", span="70-70", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.Combine(Newtonsoft.Json.Schema.JsonSchema)", file="JsonSchemaNode.cs"];
m18_7 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.SerializeDateFormatHandling.Example()", file="JsonSchemaNode.cs"];
m18_10 [label="Entry Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", span="75-75", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaNode.cs"];
m18_8 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonSchemaNode.cs"];
m18_20 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="1164-1164", cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="JsonSchemaNode.cs"];
m18_32 [label="Entry string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="string.Join<T>(string, System.Collections.Generic.IEnumerable<T>)", file="JsonSchemaNode.cs"];
m18_30 [label="Entry Unk.OrderBy", span="", cluster="Unk.OrderBy", file="JsonSchemaNode.cs"];
m18_23 [label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="JsonSchemaNode.cs"];
m18_27 [label="return string.Join(''-'', schemata.Select(s => s.InternalId).OrderBy(id => id, StringComparer.Ordinal)\r\n#if !HAVE_STRING_JOIN_WITH_ENUMERABLE\r\n                    .ToArray()\r\n#endif\r\n                );", span="77-81", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaNode.cs"];
m18_28 [label="Exit Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", span="75-75", cluster="Newtonsoft.Json.Schema.JsonSchemaNode.GetId(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Schema.JsonSchema>)", file="JsonSchemaNode.cs"];
m18_36 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="JsonSchemaNode.cs"];
m18_33 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="JsonSchemaNode.cs"];
m18_34 [label="s.InternalId", span="77-77", cluster="lambda expression", file="JsonSchemaNode.cs"];
m18_35 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="JsonSchemaNode.cs"];
m18_37 [label=id, span="77-77", cluster="lambda expression", file="JsonSchemaNode.cs"];
m18_38 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="JsonSchemaNode.cs"];
m18_22 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="JsonSchemaNode.cs"];
m18_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="817-817", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSchemaNode.cs"];
m18_39 [label="Newtonsoft.Json.Schema.JsonSchemaNode", span="", file="JsonSchemaNode.cs"];
m19_13 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSchemaSpecTests.cs"];
m19_14 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="JsonSchemaSpecTests.cs"];
m19_15 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSchemaSpecTests.cs"];
m19_47 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="JsonSchemaSpecTests.cs"];
m19_16 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", span="74-74", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_17 [label="IList<JsonSchemaSpecTest> specTests = new List<JsonSchemaSpecTest>()", span="76-76", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_18 [label="string baseDirectory = AppDomain.CurrentDomain.BaseDirectory", span="79-79", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_33 [label="jsonSchemaSpecTest.TestNumber = specTests.Count + 1", span="104-104", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_34 [label="specTests.Add(jsonSchemaSpecTest)", span="106-106", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_35 [label="specTests = specTests.Where(s => s.FileName != ''dependencies.json''\r\n                                             && s.TestCaseDescription != ''multiple disallow subschema''\r\n                                             && s.TestCaseDescription != ''types from separate schemas are merged''\r\n                                             && s.TestCaseDescription != ''when types includes a schema it should fully validate the schema''\r\n                                             && s.TestCaseDescription != ''types can include schemas'').ToList()", span="111-115", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_19 [label="string baseTestPath = Path.Combine(baseDirectory, Path.Combine(''Schema'', ''Specs''))", span="80-80", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_20 [label="string[] testFiles = Directory.GetFiles(baseTestPath, ''*.json'', SearchOption.AllDirectories)", span="82-82", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_21 [label=testFiles, span="85-85", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_22 [label="string testJson = System.IO.File.ReadAllText(testFile)", span="87-87", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_27 [label="jsonSchemaSpecTest.FileName = Path.GetFileName(testFile)", span="97-97", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_23 [label="JArray a = JArray.Parse(testJson)", span="89-89", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_24 [label=a, span="91-91", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_25 [label="testCase[''tests'']", span="93-93", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_28 [label="jsonSchemaSpecTest.TestCaseDescription = (string)testCase[''description'']", span="98-98", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_29 [label="jsonSchemaSpecTest.Schema = (JObject)testCase[''schema'']", span="99-99", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_26 [label="JsonSchemaSpecTest jsonSchemaSpecTest = new JsonSchemaSpecTest()", span="95-95", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_30 [label="jsonSchemaSpecTest.TestDescription = (string)test[''description'']", span="101-101", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_31 [label="jsonSchemaSpecTest.Data = test[''data'']", span="102-102", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_32 [label="jsonSchemaSpecTest.IsValid = (bool)test[''valid'']", span="103-103", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_36 [label="return specTests;", span="117-117", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_37 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", span="74-74", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.GetSpecTestDetails()", file="JsonSchemaSpecTests.cs"];
m19_44 [label="Entry System.IO.Path.GetFileName(string)", span="0-0", cluster="System.IO.Path.GetFileName(string)", file="JsonSchemaSpecTests.cs"];
m19_3 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", span="63-63", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs"];
m19_4 [label="JsonSchema s = JsonSchema.Read(jsonSchemaSpecTest.Schema.CreateReader())", span="65-65", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs"];
m19_6 [label="bool v = jsonSchemaSpecTest.Data.IsValid(s, out e)", span="68-68", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs"];
m19_8 [label="Assert.AreEqual(jsonSchemaSpecTest.IsValid, v, jsonSchemaSpecTest.TestCaseDescription + '' - '' + jsonSchemaSpecTest.TestDescription + '' - errors: '' + string.Join('', '', errorMessages))", span="71-71", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs"];
m19_5 [label="IList<string> e", span="67-67", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs"];
m19_7 [label="string[] errorMessages = ((e != null) ? e.ToArray() : null) ?? new string[0]", span="69-69", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs"];
m19_9 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", span="63-63", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTests.SpecTest(Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest)", file="JsonSchemaSpecTests.cs"];
m19_10 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1886-1886", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSchemaSpecTests.cs"];
m19_11 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", span="269-269", cluster="Newtonsoft.Json.Schema.JsonSchema.Read(Newtonsoft.Json.JsonReader)", file="JsonSchemaSpecTests.cs"];
m19_46 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="JsonSchemaSpecTests.cs"];
m19_48 [label="Entry lambda expression", span="111-115", cluster="lambda expression", file="JsonSchemaSpecTests.cs"];
m19_49 [label="s.FileName != ''dependencies.json''\r\n                                             && s.TestCaseDescription != ''multiple disallow subschema''\r\n                                             && s.TestCaseDescription != ''types from separate schemas are merged''\r\n                                             && s.TestCaseDescription != ''when types includes a schema it should fully validate the schema''\r\n                                             && s.TestCaseDescription != ''types can include schemas''", span="111-115", cluster="lambda expression", file="JsonSchemaSpecTests.cs"];
m19_50 [label="Exit lambda expression", span="111-115", cluster="lambda expression", file="JsonSchemaSpecTests.cs"];
m19_43 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.JsonSchemaSpecTest()", span="43-43", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.JsonSchemaSpecTest()", file="JsonSchemaSpecTests.cs"];
m19_39 [label="Entry System.IO.Path.Combine(string, string)", span="0-0", cluster="System.IO.Path.Combine(string, string)", file="JsonSchemaSpecTests.cs"];
m19_45 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSchemaSpecTests.cs"];
m19_12 [label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", span="79-79", cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema, out System.Collections.Generic.IList<string>)", file="JsonSchemaSpecTests.cs"];
m19_42 [label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="157-157", cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonSchemaSpecTests.cs"];
m19_0 [label="Entry Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", span="53-53", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", file="JsonSchemaSpecTests.cs"];
m19_1 [label="return FileName + '' - '' + TestCaseDescription + '' - '' + TestDescription;", span="55-55", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", file="JsonSchemaSpecTests.cs"];
m19_2 [label="Exit Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", span="53-53", cluster="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest.ToString()", file="JsonSchemaSpecTests.cs"];
m19_38 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSchemaSpecTests.cs"];
m19_41 [label="Entry System.IO.File.ReadAllText(string)", span="0-0", cluster="System.IO.File.ReadAllText(string)", file="JsonSchemaSpecTests.cs"];
m19_40 [label="Entry System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", span="0-0", cluster="System.IO.Directory.GetFiles(string, string, System.IO.SearchOption)", file="JsonSchemaSpecTests.cs"];
m19_51 [label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest", span="", file="JsonSchemaSpecTests.cs"];
m20_8 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="429-429", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_3 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="420-420", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_4 [label="DefaultContext = new StreamingContext()", span="422-422", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_5 [label="DefaultCulture = CultureInfo.InvariantCulture", span="423-423", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_6 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="420-420", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_9 [label="Converters = new List<JsonConverter>()", span="431-431", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_10 [label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="429-429", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs"];
m20_7 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext()", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext()", file="JsonSerializerSettings.cs"];
m20_0 [label="Entry lambda expression", span="238-238", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m20_1 [label=value, span="238-238", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m20_2 [label="Exit lambda expression", span="238-238", cluster="lambda expression", file="JsonSerializerSettings.cs"];
m20_11 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerSettings.cs"];
m20_12 [label="Newtonsoft.Json.JsonSerializerSettings", span="", file="JsonSerializerSettings.cs"];
m21_2415 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="JsonSerializerTest.cs"];
m21_1525 [label="Entry Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JaggedArray.JaggedArray()", file="JsonSerializerTest.cs"];
m21_4064 [label="Entry Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ParticipantEntity.ParticipantEntity()", file="JsonSerializerTest.cs"];
m21_2173 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4859-4859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m21_2174 [label="return ((IDictionary<string, T>)_innerDictionary).Remove(item);", span="4861-4861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m21_2175 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", span="4859-4859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m21_730 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m21_731 [label="_stringValue = stringValue", span="1587-1587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m21_732 [label="_intValue = intValue", span="1588-1588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m21_733 [label="_person1 = p1", span="1589-1589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m21_734 [label="_person2 = p2", span="1590-1590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m21_735 [label="_person3 = p3", span="1591-1591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m21_736 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", span="1585-1585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(string, int, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference, Newtonsoft.Json.Tests.TestObjects.PersonReference)", file="JsonSerializerTest.cs"];
m21_803 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1718-1718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_804 [label="string s = null", span="1720-1720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_805 [label="var v = new JValue(s)", span="1721-1721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_806 [label="var o = JObject.FromObject(new { title = v })", span="1722-1722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_807 [label="JObject oo = new JObject\r\n            {\r\n                { ''title'', v }\r\n            }", span="1724-1727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_809 [label="Assert.AreEqual(null, v.Value)", span="1731-1731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_810 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="1732-1732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_808 [label="string output = o.ToString()", span="1729-1729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_811 [label="StringAssert.AreEqual(@''{\r\n  ''''title'''': null\r\n}'', output)", span="1734-1736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", span="1718-1718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EmbedJValueStringInNewJObject()", file="JsonSerializerTest.cs"];
m21_250 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="612-612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_251 [label="RequiredPropertyTestClass c1 = new RequiredPropertyTestClass()", span="614-614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_252 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="616-618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_253 [label="RequiredPropertyTestClass c2 = new RequiredPropertyTestClass\r\n            {\r\n                Name = ''Name!''\r\n            }", span="620-623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_254 [label="string json = JsonConvert.SerializeObject(c2)", span="625-625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_255 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="627-627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_256 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="629-631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_257 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}''),\r\n                ''Required property 'Name' expects a value but got null. Path '', line 1, position 13.'')", span="633-635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_258 [label="RequiredPropertyTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':''''Name!''''}'')", span="637-637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_259 [label="Assert.AreEqual(''Name!'', c3.Name)", span="639-639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_260 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", span="612-612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTest()", file="JsonSerializerTest.cs"];
m21_836 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", span="1748-1748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Bar1.Bar1()", file="JsonSerializerTest.cs"];
m21_1687 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3625-3625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m21_1688 [label="_name = name", span="3627-3627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m21_1689 [label="Age = age", span="3628-3628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m21_1690 [label="Rank = rank", span="3629-3629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m21_1691 [label="Title = title", span="3630-3630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m21_1692 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", span="3625-3625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers(string, int, int, string)", file="JsonSerializerTest.cs"];
m21_2130 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", span="4714-4714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Human.Human()", file="JsonSerializerTest.cs"];
m21_18 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerTest.cs"];
m21_1194 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="JsonSerializerTest.cs"];
m21_641 [label="Entry Unk.ReferenceResolverProvider", span="", cluster="Unk.ReferenceResolverProvider", file="JsonSerializerTest.cs"];
m21_3612 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", span="8187-8187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs"];
m21_3613 [label="string json = @''{one:1} // This is just a comment\r\n/* This is just a comment\r\nover multiple\r\nlines.*/\r\n\r\n// This is just another comment. But here comes an empty object.\r\n{}''", span="8189-8195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs"];
m21_3614 [label="JsonSerializerSettings settings = new JsonSerializerSettings { CheckAdditionalContent = true }", span="8197-8197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs"];
m21_3616 [label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 7, position 0.'')", span="8199-8199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs"];
m21_3615 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="8198-8198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs"];
m21_3617 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", span="8187-8187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentCommentsThenAnotherObject()", file="JsonSerializerTest.cs"];
m21_15 [label="Entry System.IO.File.OpenRead(string)", span="0-0", cluster="System.IO.File.OpenRead(string)", file="JsonSerializerTest.cs"];
m21_2416 [label="Entry Unk.LoadXml", span="", cluster="Unk.LoadXml", file="JsonSerializerTest.cs"];
m21_886 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="826-826", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="JsonSerializerTest.cs"];
m21_564 [label="Entry System.Globalization.CultureInfo.ToString()", span="0-0", cluster="System.Globalization.CultureInfo.ToString()", file="JsonSerializerTest.cs"];
m21_2260 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, System.DateTime)", file="JsonSerializerTest.cs"];
m21_879 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="574-574", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m21_2434 [label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="917-917", cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonSerializerTest.cs"];
m21_3205 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", span="7314-7314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3206 [label="NullableGuid ng = new NullableGuid {Id = Guid.Empty}", span="7316-7316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3207 [label="NullableGuidCountingJsonTextWriter writer = new NullableGuidCountingJsonTextWriter(new StreamWriter(Stream.Null))", span="7317-7317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3209 [label="serializer.Serialize(writer, ng)", span="7319-7319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3213 [label="serializer.Serialize(writer, ng)", span="7323-7323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3208 [label="JsonSerializer serializer = JsonSerializer.Create()", span="7318-7318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3210 [label="Assert.AreEqual(1, writer.NullableGuidCount)", span="7320-7320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3214 [label="Assert.AreEqual(2, writer.NullableGuidCount)", span="7324-7324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3212 [label="serializer.TraceWriter = traceWriter", span="7322-7322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3211 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="7321-7321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_3215 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", span="7314-7314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableGuidCustomWriterOverridesNullableGuid()", file="JsonSerializerTest.cs"];
m21_4054 [label="Entry Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", span="35-35", cluster="Newtonsoft.Json.JsonConverterCollection.JsonConverterCollection()", file="JsonSerializerTest.cs"];
m21_4333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9967-9967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_4334 [label="return objectType == typeof(System.Net.Mail.Attachment);", span="9969-9969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_4335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", span="9967-9967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_844 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1801-1801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_845 [label="var original = new Foo1<Bar1> { foo = new Bar1 { bar = ''value'' }, foo2 = new Bar1 { bar = ''value2'' } }", span="1803-1803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_846 [label="var json = JsonConvert.SerializeObject(original)", span="1804-1804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_847 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1805-1805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_848 [label="Assert.AreEqual(expectedJson, json)", span="1806-1806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_849 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", span="1801-1801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_1332 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConverterPrecedenceClass.ConverterPrecedenceClass(string)", file="JsonSerializerTest.cs"];
m21_1774 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3859-3859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m21_1775 [label="string json = @''{''''Operation'''':''''1'''',''''RoleName'''':''''Admin'''',''''Direction'''':''''0''''}''", span="3861-3861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m21_1776 [label="RoleTransfer r = JsonConvert.DeserializeObject<RoleTransfer>(json)", span="3863-3863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m21_1777 [label="Assert.AreEqual(RoleTransferOperation.Second, r.Operation)", span="3865-3865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m21_1778 [label="Assert.AreEqual(''Admin'', r.RoleName)", span="3866-3866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m21_1779 [label="Assert.AreEqual(RoleTransferDirection.First, r.Direction)", span="3867-3867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m21_1780 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", span="3859-3859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoleTransferTest()", file="JsonSerializerTest.cs"];
m21_480 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="404-404", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonSerializerTest.cs"];
m21_1279 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2753-2753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m21_1280 [label="var date = new DateTime(2001, 4, 4, 0, 0, 0, DateTimeKind.Utc)", span="2755-2755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m21_1281 [label="string json = JsonConvert.SerializeObject(date)", span="2757-2757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m21_1282 [label="Assert.AreEqual(@''''''2001-04-04T00:00:00Z'''''', json)", span="2758-2758", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m21_1283 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", span="2753-2753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTimeZone()", file="JsonSerializerTest.cs"];
m21_963 [label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0", cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonSerializerTest.cs"];
m21_565 [label="Entry Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.IdReferenceResolver.IdReferenceResolver()", file="JsonSerializerTest.cs"];
m21_999 [label="Entry Newtonsoft.Json.Tests.TestObjects.Product.Product()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Product.Product()", file="JsonSerializerTest.cs"];
m21_2077 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4541-4541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m21_2078 [label=initial, span="4543-4543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m21_2079 [label="Add(pair.Key, pair.Value)", span="4545-4545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m21_2080 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="4541-4541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor.DictionaryWithNoDefaultConstructor(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JsonSerializerTest.cs"];
m21_2470 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5549-5549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m21_2471 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                //Additional text found in JSON string after finishing deserializing object.\r\n                //Test 1\r\n                var reference = new Dictionary<string, object>();\r\n                reference.Add(''$ref'', 1);\r\n                reference.Add(''$id'', 1);\r\n\r\n                var child = new Dictionary<string, object>();\r\n                child.Add(''_id'', 2);\r\n                child.Add(''Name'', ''Isabell'');\r\n                child.Add(''Father'', reference);\r\n\r\n                var json = JsonConvert.SerializeObject(child, Formatting.Indented);\r\n                JsonConvert.DeserializeObject<Dictionary<string, object>>(json);\r\n            }, ''JSON reference $ref property must have a string or null value. Path 'Father.$ref', line 5, position 13.'')", span="5551-5566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m21_2472 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", span="5549-5549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefBadType()", file="JsonSerializerTest.cs"];
m21_936 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", span="1961-1961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewProperties.SubWithContractNewProperties()", file="JsonSerializerTest.cs"];
m21_765 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1629-1629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_766 [label="var p1 = new PersonReference\r\n            {\r\n                Name = ''John Smith''\r\n            }", span="1631-1634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_767 [label="var p2 = new PersonReference\r\n            {\r\n                Name = ''Mary Sue'',\r\n            }", span="1635-1638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_768 [label="p1.Spouse = p2", span="1640-1640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_769 [label="p2.Spouse = p1", span="1641-1641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_770 [label="var obj = new PreserveReferencesCallbackTestObject(''string!'', 42, p1, p2, p1)", span="1643-1643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_771 [label="obj._parent = obj", span="1644-1644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_773 [label="string json = JsonConvert.SerializeObject(obj, settings)", span="1652-1652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_776 [label="Assert.AreEqual(obj._stringValue, obj2._stringValue)", span="1682-1682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_777 [label="Assert.AreEqual(obj._intValue, obj2._intValue)", span="1683-1683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_778 [label="Assert.AreEqual(obj._person1.Name, obj2._person1.Name)", span="1684-1684", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_779 [label="Assert.AreEqual(obj._person2.Name, obj2._person2.Name)", span="1685-1685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_780 [label="Assert.AreEqual(obj._person3.Name, obj2._person3.Name)", span="1686-1686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_772 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            }", span="1646-1650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_774 [label="StringAssert.AreEqual(json, @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''stringValue'''': ''''string!'''',\r\n  ''''intValue'''': 42,\r\n  ''''person1'''': {\r\n    ''''$id'''': ''''2'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''3'''',\r\n      ''''Name'''': ''''Mary Sue'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''2''''\r\n      }\r\n    }\r\n  },\r\n  ''''person2'''': {\r\n    ''''$ref'''': ''''3''''\r\n  },\r\n  ''''person3'''': {\r\n    ''''$ref'''': ''''2''''\r\n  },\r\n  ''''parent'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'')", span="1654-1678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_775 [label="PreserveReferencesCallbackTestObject obj2 = JsonConvert.DeserializeObject<PreserveReferencesCallbackTestObject>(json)", span="1680-1680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_781 [label="Assert.AreEqual(obj2._person1, obj2._person3)", span="1687-1687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_782 [label="Assert.AreEqual(obj2._person1.Spouse, obj2._person2)", span="1688-1688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_783 [label="Assert.AreEqual(obj2._person2.Spouse, obj2._person1)", span="1689-1689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_784 [label="Assert.AreEqual(obj2._parent, obj2)", span="1690-1690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_785 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", span="1629-1629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTest()", file="JsonSerializerTest.cs"];
m21_1183 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", span="719-719", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T)", file="JsonSerializerTest.cs"];
m21_1909 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="149-149", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonSerializerTest.cs"];
m21_1371 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2910-2910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1372 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2912-2912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1373 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2913-2913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1377 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2923-2923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1378 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2924-2924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1374 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.IsoDateFormat,\r\n            })", span="2915-2918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1375 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2919-2919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1376 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2921-2921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1379 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", span="2910-2910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3922-3922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m21_1814 [label="List<decimal?> l = JsonConvert.DeserializeObject<List<decimal?>>(''[ 3.3, null, 1.1 ] '')", span="3924-3924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m21_1815 [label="Assert.AreEqual(3, l.Count)", span="3925-3925", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m21_1816 [label="Assert.AreEqual(3.3m, l[0])", span="3927-3927", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m21_1817 [label="Assert.AreEqual(null, l[1])", span="3928-3928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m21_1818 [label="Assert.AreEqual(1.1m, l[2])", span="3929-3929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m21_1819 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", span="3922-3922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableListWithNulls()", file="JsonSerializerTest.cs"];
m21_3967 [label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs"];
m21_3097 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="7076-7076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m21_3098 [label="IList<decimal> d1 = new List<decimal> { 1.1m }", span="7078-7078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m21_3099 [label="string json = JsonConvert.SerializeObject(d1)", span="7080-7080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m21_3101 [label="Assert.AreEqual(d1.Count, d2.Count)", span="7084-7084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m21_3102 [label="Assert.AreEqual(d1[0], d2[0])", span="7085-7085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m21_3100 [label="IList<decimal> d2 = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="7082-7082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m21_3103 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", span="7076-7076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDecimal()", file="JsonSerializerTest.cs"];
m21_1754 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3791-3791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m21_1755 [label="var value = new\r\n            {\r\n                bar = new JObject(new JProperty(''baz'', 13))\r\n            }", span="3793-3796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m21_1756 [label="string json = JsonConvert.SerializeObject(value)", span="3798-3798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m21_1757 [label="Assert.AreEqual(@''{''''bar'''':{''''baz'''':13}}'', json)", span="3800-3800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m21_1758 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", span="3791-3791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousPlusLinqToSql()", file="JsonSerializerTest.cs"];
m21_2620 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5874-5874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m21_2621 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''\\/Date(946663200000+0600)\\/\''}'')", span="5876-5876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m21_2622 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5877-5877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m21_2623 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", span="5874-5874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactMsAjax()", file="JsonSerializerTest.cs"];
m21_1526 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3207-3207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1527 [label="string json = @''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}''", span="3209-3209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1528 [label="JaggedArray aa = JsonConvert.DeserializeObject<JaggedArray>(json)", span="3211-3211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1536 [label="Assert.AreEqual(json, after)", span="3222-3222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1529 [label="Assert.AreEqual(''Before!'', aa.Before)", span="3213-3213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1530 [label="Assert.AreEqual(''After!'', aa.After)", span="3214-3214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1531 [label="Assert.AreEqual(4, aa.Coordinates.Length)", span="3215-3215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1532 [label="Assert.AreEqual(2, aa.Coordinates[0].Length)", span="3216-3216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1533 [label="Assert.AreEqual(1, aa.Coordinates[0][0])", span="3217-3217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1534 [label="Assert.AreEqual(2, aa.Coordinates[1][1])", span="3218-3218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1535 [label="string after = JsonConvert.SerializeObject(aa)", span="3220-3220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1537 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", span="3207-3207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1793 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3894-3894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m21_1794 [label="string json = @''{''''sublocation'''':''''AlertEmailSender.Program.Main'''',''''userId'''':0,''''type'''':0,''''summary'''':''''Loading settings variables'''',''''details'''':null,''''stackTrace'''':''''   at System.Environment.GetStackTrace(Exception e, Boolean needFileInfo)\r\n   at System.Environment.get_StackTrace()\r\n   at mr.Logging.Event..ctor(String summary) in C:\\Projects\\MRUtils\\Logging\\Event.vb:line 71\r\n   at AlertEmailSender.Program.Main(String[] args) in C:\\Projects\\AlertEmailSender\\AlertEmailSender\\Program.cs:line 25'''',''''tag'''':null,''''time'''':''''\/Date(1249591032026-0400)\/''''}''", span="3896-3896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m21_1795 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Event>(json); }, @''Unable to find a constructor to use for type Newtonsoft.Json.Tests.TestObjects.Events.Event. A class should either have a default constructor, one constructor with arguments or a constructor marked with the JsonConstructor attribute. Path 'sublocation', line 1, position 15.'')", span="3898-3898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m21_1796 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", span="3894-3894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FailWhenClassWithNoDefaultConstructorHasMultipleConstructorsWithArguments()", file="JsonSerializerTest.cs"];
m21_3375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", span="7660-7660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.MetroColorConverter()", file="JsonSerializerTest.cs"];
m21_4280 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", span="9826-9826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringTestClass.ErroringTestClass()", file="JsonSerializerTest.cs"];
m21_442 [label="Entry System.Linq.Enumerable.Range(int, int)", span="0-0", cluster="System.Linq.Enumerable.Range(int, int)", file="JsonSerializerTest.cs"];
m21_3253 [label="Entry Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WithEnums.WithEnums()", file="JsonSerializerTest.cs"];
m21_1396 [label="Entry System.Convert.ToDateTime(string)", span="0-0", cluster="System.Convert.ToDateTime(string)", file="JsonSerializerTest.cs"];
m21_1752 [label="Entry System.Uri.Uri(string)", span="0-0", cluster="System.Uri.Uri(string)", file="JsonSerializerTest.cs"];
m21_2261 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, decimal)", file="JsonSerializerTest.cs"];
m21_2694 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", span="6005-6005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.VectorParent.VectorParent()", file="JsonSerializerTest.cs"];
m21_1086 [label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="357-357", cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonSerializerTest.cs"];
m21_2789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6253-6253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m21_2790 [label="string json = @''{\r\n  'Name': 'James Hughes',\r\n  'Age': '40',\r\n  'Height': '44.4',\r\n  'Price': '4'\r\n}''", span="6255-6260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m21_2791 [label="DeserializeStringConvert p = JsonConvert.DeserializeObject<DeserializeStringConvert>(json)", span="6262-6262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m21_2792 [label="Assert.AreEqual(40, p.Age)", span="6263-6263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m21_2793 [label="Assert.AreEqual(44.4, p.Height)", span="6264-6264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m21_2794 [label="Assert.AreEqual(4m, p.Price)", span="6265-6265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m21_2795 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", span="6253-6253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStringEnglish()", file="JsonSerializerTest.cs"];
m21_3596 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", span="8156-8156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs"];
m21_3597 [label="string json = ''{one:1} // This is just a comment''", span="8158-8158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs"];
m21_3598 [label="JsonSerializerSettings settings = new JsonSerializerSettings {CheckAdditionalContent = true}", span="8160-8160", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs"];
m21_3600 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8162-8162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs"];
m21_3599 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="8161-8161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs"];
m21_3601 [label="Assert.IsNotNull(o)", span="8164-8164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs"];
m21_3602 [label="Assert.AreEqual(1, o[''one''])", span="8165-8165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs"];
m21_3603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", span="8156-8156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustComment()", file="JsonSerializerTest.cs"];
m21_2484 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5570-5570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2485 [label="var reference = new Dictionary<string, object>()", span="5572-5572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2486 [label="reference.Add(''$ref'', null)", span="5573-5573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2487 [label="reference.Add(''$id'', null)", span="5574-5574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2488 [label="reference.Add(''blah'', ''blah!'')", span="5575-5575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2492 [label="child.Add(''Father'', reference)", span="5580-5580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2489 [label="var child = new Dictionary<string, object>()", span="5577-5577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2490 [label="child.Add(''_id'', 2)", span="5578-5578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2491 [label="child.Add(''Name'', ''Isabell'')", span="5579-5579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2493 [label="string json = JsonConvert.SerializeObject(child)", span="5582-5582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2494 [label="Assert.AreEqual(@''{''''_id'''':2,''''Name'''':''''Isabell'''',''''Father'''':{''''$ref'''':null,''''$id'''':null,''''blah'''':''''blah!''''}}'', json)", span="5584-5584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2495 [label="Dictionary<string, object> result = JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5586-5586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2496 [label="Assert.AreEqual(3, result.Count)", span="5588-5588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2497 [label="Assert.AreEqual(1, ((JObject)result[''Father'']).Count)", span="5589-5589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2498 [label="Assert.AreEqual(''blah!'', (string)((JObject)result[''Father''])[''blah''])", span="5590-5590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_2499 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", span="5570-5570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefNull()", file="JsonSerializerTest.cs"];
m21_4310 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9933-9933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_4311 [label="return objectType == typeof(System.Net.Mail.MailAddress);", span="9935-9935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_4312 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", span="9933-9933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_1201 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2607-2607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m21_1202 [label="string json = JsonConvert.SerializeObject(null)", span="2609-2609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m21_1203 [label="Assert.AreEqual(''null'', json)", span="2610-2610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m21_1204 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", span="2607-2607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNull()", file="JsonSerializerTest.cs"];
m21_4125 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9458-9458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m21_4126 [label="var c = new TestClassConvertable { Id = new ConvertibleId { Value = 1 }, X = 2 }", span="9460-9460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m21_4127 [label="var s = JsonConvert.SerializeObject(c, Formatting.Indented)", span="9461-9461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m21_4128 [label="StringAssert.AreEqual(@''{\r\n  ''''Id'''': ''''1'''',\r\n  ''''X'''': 2\r\n}'', s)", span="9462-9465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m21_4129 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", span="9458-9458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleIdTest()", file="JsonSerializerTest.cs"];
m21_3360 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7602-7602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m21_3361 [label="Product product = new Product()", span="7604-7604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_3362 [label="product.Name = ''Apple''", span="7605-7605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_3363 [label="product.ExpiryDate = new DateTime(2012, 4, 1)", span="7606-7606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_3364 [label="product.Price = 3.99M", span="7607-7607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_3365 [label="product.Sizes = new[] { ''Small'', ''Medium'', ''Large'' }", span="7608-7608", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_3366 [label="string json = JsonConvert.SerializeObject(product)", span="7610-7610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m21_3367 [label="string metroJson = JsonConvert.SerializeObject(product, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7618-7623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m21_3368 [label="StringAssert.AreEqual(@''{\r\n  '''':::NAME:::'''': '''':::APPLE:::'''',\r\n  '''':::EXPIRYDATE:::'''': ''''2012-04-01T00:00:00'''',\r\n  '''':::PRICE:::'''': 3.99,\r\n  '''':::SIZES:::'''': [\r\n    '''':::SMALL:::'''',\r\n    '''':::MEDIUM:::'''',\r\n    '''':::LARGE:::''''\r\n  ]\r\n}'', metroJson)", span="7624-7633", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m21_3369 [label="Color[] colors = new[] { Color.Blue, Color.Red, Color.Yellow, Color.Green, Color.Black, Color.Brown }", span="7641-7641", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m21_3370 [label="string json2 = JsonConvert.SerializeObject(colors, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new MetroPropertyNameResolver(),\r\n                Converters = { new MetroStringConverter(), new MetroColorConverter() },\r\n                Formatting = Formatting.Indented\r\n            })", span="7643-7648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m21_3371 [label="StringAssert.AreEqual(@''[\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::GRAY:::'''',\r\n  '''':::BLACK:::'''',\r\n  '''':::GRAY:::''''\r\n]'', json2)", span="7650-7657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m21_3372 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", span="7602-7602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroBlogPost()", file="JsonSerializerTest.cs"];
m21_370 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs"];
m21_371 [label="Dictionary<string, string> d = JsonConvert.DeserializeObject<Dictionary<string, string>>(''{\''Test1\'':false}'')", span="966-966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs"];
m21_372 [label="Assert.AreEqual(1, d.Count)", span="967-967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs"];
m21_373 [label="Assert.AreEqual(''false'', d[''Test1''])", span="968-968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs"];
m21_374 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", span="964-964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolAsStringInDictionary()", file="JsonSerializerTest.cs"];
m21_1517 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3194-3194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1518 [label="JaggedArray aa = new JaggedArray()", span="3196-3196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1519 [label="aa.Before = ''Before!''", span="3197-3197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1520 [label="aa.After = ''After!''", span="3198-3198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1521 [label="aa.Coordinates = new[] { new[] { 1, 1 }, new[] { 1, 2 }, new[] { 2, 1 }, new[] { 2, 2 } }", span="3199-3199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1522 [label="string json = JsonConvert.SerializeObject(aa)", span="3201-3201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1523 [label="Assert.AreEqual(@''{''''Before'''':''''Before!'''',''''Coordinates'''':[[1,1],[1,2],[2,1],[2,2]],''''After'''':''''After!''''}'', json)", span="3203-3203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_1524 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", span="3194-3194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJaggedArray()", file="JsonSerializerTest.cs"];
m21_4132 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9470-9470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m21_4133 [label="string content = @''{''''result'''':{''''time'''':1408188592,''''time'''':1408188593},''''error'''':null,''''id'''':''''1''''}''", span="9472-9472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m21_4134 [label="JObject o = JsonConvert.DeserializeObject<JObject>(content)", span="9473-9473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m21_4135 [label="int time = (int)o[''result''][''time'']", span="9474-9474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m21_4136 [label="Assert.AreEqual(1408188593, time)", span="9476-9476", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m21_4137 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", span="9470-9470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DuplicatePropertiesInNestedObject()", file="JsonSerializerTest.cs"];
m21_4 [label="reader.CloseInput = false", span="112-112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_2524 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5650-5650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m21_2525 [label="Dictionary<DictionaryKey, string> dictionary = new Dictionary<DictionaryKey, string>()", span="5652-5652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m21_2526 [label="dictionary.Add(new DictionaryKey() { Value = ''First!'' }, ''First'')", span="5654-5654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m21_2527 [label="dictionary.Add(new DictionaryKey() { Value = ''Second!'' }, ''Second'')", span="5655-5655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m21_2528 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="5657-5657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m21_2529 [label="StringAssert.AreEqual(@''{\r\n  ''''First!'''': ''''First'''',\r\n  ''''Second!'''': ''''Second''''\r\n}'', json)", span="5659-5662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m21_2530 [label="Dictionary<DictionaryKey, string> newDictionary =\r\n                JsonConvert.DeserializeObject<Dictionary<DictionaryKey, string>>(json)", span="5664-5665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m21_2531 [label="Assert.AreEqual(2, newDictionary.Count)", span="5667-5667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m21_2532 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", span="5650-5650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeDictionaryKey()", file="JsonSerializerTest.cs"];
m21_815 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonSerializerTest.cs"];
m21_3018 [label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="495-495", cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m21_1397 [label="Entry System.DateTime.ToUniversalTime()", span="0-0", cluster="System.DateTime.ToUniversalTime()", file="JsonSerializerTest.cs"];
m21_2062 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4515-4515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2063 [label="string json = ''{key1:'value1',key2:'value2',key3:'value3'}''", span="4517-4517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2064 [label="var dic = JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json)", span="4519-4519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2065 [label="Assert.AreEqual(3, dic.Count)", span="4521-4521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2066 [label="Assert.AreEqual(''value1'', dic[''key1''])", span="4522-4522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2067 [label="Assert.AreEqual(''value2'', dic[''key2''])", span="4523-4523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2068 [label="Assert.AreEqual(''value3'', dic[''key3''])", span="4524-4524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2069 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", span="4515-4515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_387 [label="Entry Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", span="775-775", cluster="Newtonsoft.Json.JsonSerializer.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerTest.cs"];
m21_3028 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6926-6926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m21_3029 [label="string input = @''http://tes/?a=b\\c&d=e\''", span="6928-6928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m21_3030 [label="Uri uri = new Uri(input)", span="6929-6929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m21_3031 [label="string json = JsonConvert.SerializeObject(uri)", span="6930-6930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m21_3033 [label="Assert.AreEqual(uri, output)", span="6933-6933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m21_3032 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6931-6931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m21_3034 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", span="6926-6926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithSlashes()", file="JsonSerializerTest.cs"];
m21_1278 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="JsonSerializerTest.cs"];
m21_2181 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4869-4869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m21_2182 [label="return _innerDictionary.TryGetValue(key, out value);", span="4871-4871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m21_2183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", span="4869-4869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.TryGetValue(string, out T)", file="JsonSerializerTest.cs"];
m21_2941 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6718-6718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m21_2942 [label="return _readonlyString;", span="6720-6720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m21_2943 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", span="6718-6718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.UseValue()", file="JsonSerializerTest.cs"];
m21_2264 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, sbyte)", file="JsonSerializerTest.cs"];
m21_271 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="644-644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs"];
m21_272 [label="Name = name", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs"];
m21_273 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", span="644-644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass.RequiredPropertyConstructorTestClass(string)", file="JsonSerializerTest.cs"];
m21_4355 [label="Entry System.Text.Encoding.GetEncoding(string)", span="0-0", cluster="System.Text.Encoding.GetEncoding(string)", file="JsonSerializerTest.cs"];
m21_3111 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7102-7102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m21_3112 [label="IList<byte[]> d1 = new List<byte[]> { null }", span="7104-7104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m21_3113 [label="string json = JsonConvert.SerializeObject(d1)", span="7106-7106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m21_3115 [label="Assert.AreEqual(d1.Count, d2.Count)", span="7110-7110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m21_3116 [label="Assert.AreEqual(d1[0], d2[0])", span="7111-7111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m21_3114 [label="IList<byte[]> d2 = JsonConvert.DeserializeObject<IList<byte[]>>(json)", span="7108-7108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m21_3117 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", span="7102-7102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixByteArray()", file="JsonSerializerTest.cs"];
m21_4234 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9717-9717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m21_4235 [label="ConstantTestClass c1 = new ConstantTestClass()", span="9719-9719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m21_4236 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="9721-9721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m21_4237 [label="StringAssert.AreEqual(@''{\r\n  ''''MY_CONSTANT'''': ''''.''''\r\n}'', json)", span="9723-9725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m21_4238 [label="JsonConvert.DeserializeObject<ConstantTestClass>(json)", span="9727-9727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m21_4239 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", span="9717-9717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeConstantProperty()", file="JsonSerializerTest.cs"];
m21_14 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="103-103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_2035 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4420-4420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m21_2036 [label="_dict1.Add(item.Key, item)", span="4422-4422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m21_2037 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", span="4420-4420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.Add(T)", file="JsonSerializerTest.cs"];
m21_3804 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8683-8683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m21_3805 [label="Tuple<int, int> tuple = Tuple.Create(500, 20)", span="8685-8685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m21_3806 [label="string json = JsonConvert.SerializeObject(tuple)", span="8686-8686", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m21_3807 [label="Assert.AreEqual(@''{''''Item1'''':500,''''Item2'''':20}'', json)", span="8687-8687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m21_3808 [label="Tuple<int, int> tuple2 = JsonConvert.DeserializeObject<Tuple<int, int>>(json)", span="8689-8689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m21_3809 [label="Assert.AreEqual(500, tuple2.Item1)", span="8690-8690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m21_3810 [label="Assert.AreEqual(20, tuple2.Item2)", span="8691-8691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m21_3811 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", span="8683-8683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeTuple()", file="JsonSerializerTest.cs"];
m21_3388 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7675-7675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_3389 [label="return objectType == typeof(Color);", span="7677-7677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_3390 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", span="7675-7675", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_2650 [label="Entry System.Dynamic.ExpandoObject.ExpandoObject()", span="0-0", cluster="System.Dynamic.ExpandoObject.ExpandoObject()", file="JsonSerializerTest.cs"];
m21_878 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs"];
m21_2106 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4677-4677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs"];
m21_2108 [label="C2 = c2", span="4679-4679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs"];
m21_2109 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", span="4677-4677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1.CircularConstructor1(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2)", file="JsonSerializerTest.cs"];
m21_2758 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6192-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2759 [label="NonPublicConstructorWithJsonConstructor c = JsonConvert.DeserializeObject<NonPublicConstructorWithJsonConstructor>(''{}'')", span="6194-6194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2760 [label="Assert.AreEqual(''NonPublic'', c.Constructor)", span="6195-6195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2761 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", span="6192-6192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonPublicConstructorWithJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_3522 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="JsonSerializerTest.cs"];
m21_3757 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8540-8540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m21_3758 [label="IgnoreSerializableAttribute = false", span="8542-8542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m21_3759 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", span="8540-8540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver.SerializableContractResolver()", file="JsonSerializerTest.cs"];
m21_348 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m21_349 [label="NullTestClass otc = JsonConvert.DeserializeObject<NullTestClass>(@''{\r\n    ''''Value1'''': null,\r\n    ''''Value2'''': null,\r\n    ''''Value3'''': null,\r\n    ''''Value4'''': null,\r\n    ''''Value5'''': null\r\n}'')", span="902-908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m21_350 [label="Assert.IsNull(otc.Value1)", span="909-909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m21_351 [label="Assert.AreEqual(JTokenType.Null, otc.Value2.Type)", span="910-910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m21_352 [label="Assert.AreEqual(JTokenType.Raw, otc.Value3.Type)", span="911-911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m21_353 [label="Assert.AreEqual(JTokenType.Null, otc.Value4.Type)", span="912-912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m21_354 [label="Assert.IsNull(otc.Value5)", span="913-913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m21_355 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", span="900-900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullToJTokenProperty()", file="JsonSerializerTest.cs"];
m21_296 [label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="165-165", cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m21_1759 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="316-316", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonSerializerTest.cs"];
m21_2140 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="JsonSerializerTest.cs"];
m21_2660 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5960-5960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m21_2661 [label="string json = ''{Amount:123456789876543.21}''", span="5962-5962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m21_2662 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5963-5963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m21_2663 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5964-5964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m21_2665 [label="Invoice i = serializer.Deserialize<Invoice>(reader)", span="5968-5968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m21_2664 [label="JsonSerializer serializer = new JsonSerializer()", span="5966-5966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m21_2666 [label="Assert.AreEqual(123456789876543.21m, i.Amount)", span="5969-5969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m21_2667 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", span="5960-5960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalPropertyExact()", file="JsonSerializerTest.cs"];
m21_2594 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5825-5825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m21_2595 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            })", span="5827-5830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m21_2596 [label="Assert.AreEqual(''{\''Offset\'':\''2000-01-01T00:00:00+06:00\''}'', serializeObject)", span="5832-5832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m21_2597 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5834-5834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2598 [label="reader.DateParseHandling = DateParseHandling.None", span="5835-5835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2600 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5839-5839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m21_2599 [label="JsonSerializer serializer = new JsonSerializer()", span="5837-5837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m21_2601 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5841-5841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m21_2602 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5842-5842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m21_2603 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", span="5825-5825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetIso()", file="JsonSerializerTest.cs"];
m21_2832 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6385-6385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m21_2833 [label="string json = JsonConvert.SerializeObject(new EnumerableArrayPropertyClass())", span="6387-6387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m21_2834 [label="JsonConvert.DeserializeObject<EnumerableArrayPropertyClass>(json)", span="6388-6388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m21_2835 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", span="6385-6385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SkipPopulatingArrayPropertyClass()", file="JsonSerializerTest.cs"];
m21_906 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1985-1985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_907 [label="BaseWithContract baseWith = new SubWithoutContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="1987-1993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_908 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="1995-1995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_909 [label="baseWith.Virtual = ''Virtual2!''", span="1996-1996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_910 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="1997-1997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_911 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="1998-1998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_912 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="2000-2000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_913 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="2002-2009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_914 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", span="1985-1985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_2695 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", span="5993-5993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.Vector()", file="JsonSerializerTest.cs"];
m21_3838 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8753-8753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m21_3839 [label="string json = @''[999999999999999999999999999999999999999999999999]''", span="8755-8755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m21_3840 [label="IList<BigInteger> l = JsonConvert.DeserializeObject<IList<BigInteger>>(json)", span="8757-8757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m21_3842 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<IList<long>>(json), ''Error converting value 999999999999999999999999999999999999999999999999 to type 'System.Int64'. Path '[0]', line 1, position 49.'')", span="8761-8761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m21_3841 [label="Assert.AreEqual(BigInteger.Parse(''999999999999999999999999999999999999999999999999''), l[0])", span="8759-8759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m21_3843 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", span="8753-8753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadTooLargeInteger()", file="JsonSerializerTest.cs"];
m21_823 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", span="1743-1743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1.Foo1()", file="JsonSerializerTest.cs"];
m21_645 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1439-1439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_646 [label="JsonSerializerProxy serializerProxy = new JsonSerializerProxy(new JsonSerializerInternalReader(new JsonSerializer()))", span="1441-1441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_647 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1443-1443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_648 [label="serializerProxy.Binder = customBinder", span="1445-1445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_649 [label="Assert.AreEqual(customBinder, serializerProxy.Binder)", span="1446-1446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_650 [label="Assert.IsInstanceOf(typeof(SerializationBinderAdapter), serializerProxy.SerializationBinder)", span="1449-1449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_651 [label="serializerProxy.SerializationBinder = customBinder", span="1451-1451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_652 [label="Assert.AreEqual(customBinder, serializerProxy.SerializationBinder)", span="1452-1452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_653 [label="ExceptionAssert.Throws<InvalidOperationException>(() =>\r\n            {\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                var serializationBinder = serializerProxy.Binder;\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n                serializationBinder.ToString();\r\n            }, ''Cannot get SerializationBinder because an ISerializationBinder was previously set.'')", span="1454-1460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_654 [label="serializerProxy.CheckAdditionalContent = true", span="1462-1462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_655 [label="Assert.AreEqual(true, serializerProxy.CheckAdditionalContent)", span="1463-1463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_656 [label="serializerProxy.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1465-1465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_657 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializerProxy.ConstructorHandling)", span="1466-1466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_658 [label="serializerProxy.Context = new StreamingContext(StreamingContextStates.Other)", span="1469-1469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_659 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializerProxy.Context)", span="1470-1470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_661 [label="serializerProxy.ContractResolver = resolver", span="1474-1474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_662 [label="Assert.AreEqual(resolver, serializerProxy.ContractResolver)", span="1475-1475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_663 [label="serializerProxy.Converters.Add(new StringEnumConverter())", span="1477-1477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_664 [label="Assert.AreEqual(1, serializerProxy.Converters.Count)", span="1478-1478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_665 [label="serializerProxy.Culture = new CultureInfo(''en-nz'')", span="1480-1480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_666 [label="Assert.AreEqual(''en-NZ'', serializerProxy.Culture.ToString())", span="1481-1481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_667 [label="serializerProxy.EqualityComparer = EqualityComparer<object>.Default", span="1483-1483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_668 [label="Assert.AreEqual(EqualityComparer<object>.Default, serializerProxy.EqualityComparer)", span="1484-1484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_669 [label="serializerProxy.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1486-1486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_670 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializerProxy.DateFormatHandling)", span="1487-1487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_671 [label="serializerProxy.DateFormatString = ''yyyy''", span="1489-1489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_672 [label="Assert.AreEqual(''yyyy'', serializerProxy.DateFormatString)", span="1490-1490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_673 [label="serializerProxy.DateParseHandling = DateParseHandling.None", span="1492-1492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_674 [label="Assert.AreEqual(DateParseHandling.None, serializerProxy.DateParseHandling)", span="1493-1493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_675 [label="serializerProxy.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1495-1495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_676 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializerProxy.DateTimeZoneHandling)", span="1496-1496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_677 [label="serializerProxy.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1498-1498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_678 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializerProxy.DefaultValueHandling)", span="1499-1499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_679 [label="serializerProxy.FloatFormatHandling = FloatFormatHandling.Symbol", span="1501-1501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_680 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializerProxy.FloatFormatHandling)", span="1502-1502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_681 [label="serializerProxy.FloatParseHandling = FloatParseHandling.Decimal", span="1504-1504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_682 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializerProxy.FloatParseHandling)", span="1505-1505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_683 [label="serializerProxy.Formatting = Formatting.Indented", span="1507-1507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_684 [label="Assert.AreEqual(Formatting.Indented, serializerProxy.Formatting)", span="1508-1508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_685 [label="serializerProxy.MaxDepth = 9001", span="1510-1510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_686 [label="Assert.AreEqual(9001, serializerProxy.MaxDepth)", span="1511-1511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_687 [label="serializerProxy.MissingMemberHandling = MissingMemberHandling.Error", span="1513-1513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_688 [label="Assert.AreEqual(MissingMemberHandling.Error, serializerProxy.MissingMemberHandling)", span="1514-1514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_689 [label="serializerProxy.NullValueHandling = NullValueHandling.Ignore", span="1516-1516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_690 [label="Assert.AreEqual(NullValueHandling.Ignore, serializerProxy.NullValueHandling)", span="1517-1517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_691 [label="serializerProxy.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1519-1519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_692 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializerProxy.ObjectCreationHandling)", span="1520-1520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_693 [label="serializerProxy.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1522-1522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_694 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializerProxy.PreserveReferencesHandling)", span="1523-1523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_695 [label="serializerProxy.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1525-1525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_696 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializerProxy.ReferenceLoopHandling)", span="1526-1526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_698 [label="serializerProxy.ReferenceResolver = referenceResolver", span="1529-1529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_699 [label="Assert.AreEqual(referenceResolver, serializerProxy.ReferenceResolver)", span="1530-1530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_700 [label="serializerProxy.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1532-1532", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_701 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializerProxy.StringEscapeHandling)", span="1533-1533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_703 [label="serializerProxy.TraceWriter = traceWriter", span="1536-1536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_704 [label="Assert.AreEqual(traceWriter, serializerProxy.TraceWriter)", span="1537-1537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_705 [label="serializerProxy.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1541-1541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_706 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializerProxy.TypeNameAssemblyFormat)", span="1542-1542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_707 [label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializerProxy.TypeNameAssemblyFormatHandling)", span="1545-1545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_708 [label="serializerProxy.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1547-1547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_709 [label="Assert.AreEqual(FormatterAssemblyStyle.Simple, serializerProxy.TypeNameAssemblyFormat)", span="1549-1549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_710 [label="serializerProxy.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1553-1553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_711 [label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializerProxy.TypeNameAssemblyFormatHandling)", span="1554-1554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_712 [label="serializerProxy.TypeNameHandling = TypeNameHandling.All", span="1556-1556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_713 [label="Assert.AreEqual(TypeNameHandling.All, serializerProxy.TypeNameHandling)", span="1557-1557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_660 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1473-1473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_697 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1528-1528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_702 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1535-1535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_714 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", span="1439-1439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProxyProperties()", file="JsonSerializerTest.cs"];
m21_3155 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7220-7220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m21_3156 [label="ConvertableIntTestClass c = new ConvertableIntTestClass\r\n            {\r\n                Integer = new ConvertibleInt(1),\r\n                NullableInteger1 = new ConvertibleInt(2),\r\n                NullableInteger2 = null\r\n            }", span="7222-7227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m21_3157 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="7229-7229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m21_3158 [label="StringAssert.AreEqual(@''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}'', json)", span="7231-7235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m21_3159 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", span="7220-7220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeIConvertible()", file="JsonSerializerTest.cs"];
m21_4366 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", span="10034-10034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs"];
m21_4367 [label="JsonObjectContract c = (JsonObjectContract)DefaultContractResolver.Instance.ResolveContract(typeof(ChildClassWithProtectedOverridePlusJsonProperty))", span="10036-10036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs"];
m21_4368 [label="Assert.AreEqual(1, c.Properties.Count)", span="10037-10037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs"];
m21_4369 [label="var propertyValue = ''test''", span="10039-10039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs"];
m21_4370 [label="var testJson = @''{ 'MyProperty' : ''' + propertyValue + ''' }''", span="10040-10040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs"];
m21_4372 [label="Assert.AreEqual(propertyValue, testObject.GetPropertyValue(), ''MyProperty should be populated'')", span="10044-10044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs"];
m21_4371 [label="var testObject = JsonConvert.DeserializeObject<ChildClassWithProtectedOverridePlusJsonProperty>(testJson)", span="10042-10042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs"];
m21_4373 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", span="10034-10034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassWithProtectedOverridePlusJsonProperty_Serialize()", file="JsonSerializerTest.cs"];
m21_1249 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithArray.ClassWithArray()", file="JsonSerializerTest.cs"];
m21_3175 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId.WidgetId()", file="JsonSerializerTest.cs"];
m21_2806 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6283-6283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m21_2807 [label="MultiIndexSuper e = new MultiIndexSuper()", span="6285-6285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m21_2808 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="6287-6287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m21_2809 [label="Assert.AreEqual(@''{}'', json)", span="6289-6289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m21_2810 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", span="6283-6283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuperTest()", file="JsonSerializerTest.cs"];
m21_2133 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4767-4767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2134 [label="dictionary == null", span="4769-4769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2135 [label="throw new ArgumentNullException(nameof(dictionary));", span="4771-4771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2136 [label=dictionary, span="4774-4774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2137 [label="_innerDictionary.Add(entry.Key, entry.Value)", span="4776-4776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2138 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4767-4767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_334 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", span="824-824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqSection.FaqSection()", file="JsonSerializerTest.cs"];
m21_2910 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6632-6632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs"];
m21_2911 [label="throw new NotImplementedException();", span="6634-6634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs"];
m21_2912 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", span="6632-6632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Contains(object)", file="JsonSerializerTest.cs"];
m21_3851 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8786-8786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m21_3852 [label="Pair<string, int> p = new Pair<string, int>(''One'', 2)", span="8788-8788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m21_3853 [label="string json = JsonConvert.SerializeObject(p)", span="8790-8790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m21_3857 [label="json = JsonConvert.SerializeObject(p, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = r\r\n            })", span="8798-8801", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m21_3854 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8792-8792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m21_3855 [label="DefaultContractResolver r = new DefaultContractResolver()", span="8795-8795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m21_3856 [label="r.IgnoreSerializableAttribute = false", span="8796-8796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m21_3858 [label="Assert.AreEqual(@''{''''First'''':''''One'''',''''Second'''':2}'', json)", span="8803-8803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m21_3859 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", span="8786-8786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithSerializableAndDataContract()", file="JsonSerializerTest.cs"];
m21_1488 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3121-3121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m21_1489 [label="string json = @''{\r\n  ''''FirstName'''': ''''I can't be null bro!'''',\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3123-3128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m21_1490 [label="RequiredMembersClass c = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3130-3130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m21_1491 [label="Assert.AreEqual(''I can't be null bro!'', c.FirstName)", span="3132-3132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m21_1492 [label="Assert.AreEqual(null, c.MiddleName)", span="3133-3133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m21_1493 [label="Assert.AreEqual(null, c.LastName)", span="3134-3134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m21_1494 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", span="3121-3121", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassWithNullValues()", file="JsonSerializerTest.cs"];
m21_3483 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7861-7861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m21_3484 [label="IDictionary<DateTimeOffset, int> dic1 = new Dictionary<DateTimeOffset, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7863-7867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m21_3485 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7869-7869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m21_3486 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12+00:00'''': 1,\r\n  ''''2013-12-12T12:12:12+00:00'''': 2\r\n}'', json)", span="7871-7874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m21_3487 [label="IDictionary<DateTimeOffset, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset, int>>(json)", span="7876-7876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m21_3488 [label="Assert.AreEqual(2, dic2.Count)", span="7878-7878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m21_3489 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7879-7879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m21_3490 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7880-7880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m21_3491 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", span="7861-7861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_Iso()", file="JsonSerializerTest.cs"];
m21_3383 [label="Entry Unk.WriteValue", span="", cluster="Unk.WriteValue", file="JsonSerializerTest.cs"];
m21_3699 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8366-8366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m21_3700 [label="string json =\r\n                JsonConvert.SerializeObject(new KeyValuePair<int, string>(123, ''test value''), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new CamelCasePropertyNamesContractResolver()\r\n                })", span="8368-8372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m21_3701 [label="StringAssert.AreEqual(@''{\r\n  ''''key'''': 123,\r\n  ''''value'''': ''''test value''''\r\n}'', json)", span="8374-8377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m21_3702 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", span="8366-8366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeKeyValuePairConverterWithCamelCase()", file="JsonSerializerTest.cs"];
m21_2450 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5518-5518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2451 [label="throw new NotImplementedException();", span="5520-5520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2452 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5518-5518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_1971 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bar.Bar()", file="JsonSerializerTest.cs"];
m21_3679 [label="Entry System.Uri.Uri(string, System.UriKind)", span="0-0", cluster="System.Uri.Uri(string, System.UriKind)", file="JsonSerializerTest.cs"];
m21_1502 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="JsonSerializerTest.cs"];
m21_1848 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3976-3976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m21_1849 [label="string json = @''[]''", span="3978-3978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m21_1850 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => { JsonConvert.DeserializeObject<DynamicDictionary>(json); },\r\n                @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.Linq.DynamicDictionary' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3980-3984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m21_1851 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", span="3976-3976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDynamic()", file="JsonSerializerTest.cs"];
m21_1340 [label="Entry Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ArgumentConverterPrecedenceClassConverter.ArgumentConverterPrecedenceClassConverter()", file="JsonSerializerTest.cs"];
m21_926 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", span="1952-1952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualProperties.SubWithoutContractVirtualProperties()", file="JsonSerializerTest.cs"];
m21_2150 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Clear()", file="JsonSerializerTest.cs"];
m21_837 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1792-1792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_838 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1794-1794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_839 [label="var deserialized = JsonConvert.DeserializeObject<FooBar1>(json)", span="1795-1795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_840 [label="Assert.IsNotNull(deserialized.foo)", span="1796-1796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_841 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1797-1797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_842 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", span="1792-1792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_965 [label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="248-248", cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonSerializerTest.cs"];
m21_2141 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4811-4811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m21_2142 [label="((IDictionary<string, T>)_innerDictionary).Add(item)", span="4813-4813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m21_2143 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", span="4811-4811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m21_2511 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5620-5620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m21_2512 [label="string json = @''{'value':9.9}''", span="5622-5622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m21_2513 [label="var dic = JsonConvert.DeserializeObject<IDictionary<string, object>>(\r\n                json, new JsonSerializerSettings\r\n                {\r\n                    FloatParseHandling = FloatParseHandling.Decimal\r\n                })", span="5624-5628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m21_2514 [label="Assert.AreEqual(typeof(decimal), dic[''value''].GetType())", span="5630-5630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m21_2515 [label="Assert.AreEqual(9.9m, dic[''value''])", span="5631-5631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m21_2516 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", span="5620-5620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFloatAsDecimal()", file="JsonSerializerTest.cs"];
m21_2652 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5946-5946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m21_2653 [label="decimal d = JsonConvert.DeserializeObject<decimal>(''123456789876543.21'')", span="5948-5948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m21_2654 [label="Assert.AreEqual(123456789876543.21m, d)", span="5949-5949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m21_2655 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", span="5946-5946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalExact()", file="JsonSerializerTest.cs"];
m21_2858 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", span="6460-6460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObject.ChildObject()", file="JsonSerializerTest.cs"];
m21_203 [label="Entry string.ToUpper(System.Globalization.CultureInfo)", span="0-0", cluster="string.ToUpper(System.Globalization.CultureInfo)", file="JsonSerializerTest.cs"];
m21_211 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="618-618", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m21_2388 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5393-5393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2389 [label="XNodeTestObject testObject = new XNodeTestObject()", span="5395-5395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2390 [label="testObject.Document = XDocument.Parse(''<root>hehe, root</root>'')", span="5396-5396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2391 [label="testObject.Element = XElement.Parse(@''<fifth xmlns:json=''''http://json.org'''' json:Awesome=''''true''''>element</fifth>'')", span="5397-5397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2392 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5399-5399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2396 [label="Assert.AreEqual(testObject.Document.ToString(), newTestObject.Document.ToString())", span="5415-5415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2397 [label="Assert.AreEqual(testObject.Element.ToString(), newTestObject.Element.ToString())", span="5416-5416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2393 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  },\r\n  ''''Element'''': {\r\n    ''''fifth'''': {\r\n      ''''@xmlns:json'''': ''''http://json.org'''',\r\n      ''''@json:Awesome'''': ''''true'''',\r\n      ''''#text'''': ''''element''''\r\n    }\r\n  }\r\n}''", span="5400-5411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2394 [label="StringAssert.AreEqual(expected, json)", span="5412-5412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2395 [label="XNodeTestObject newTestObject = JsonConvert.DeserializeObject<XNodeTestObject>(json)", span="5414-5414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2398 [label="Assert.IsNull(newTestObject.Element.Parent)", span="5418-5418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_2399 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", span="5393-5393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXNodeProperties()", file="JsonSerializerTest.cs"];
m21_1044 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2254-2254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1045 [label="string value = @''{''''Name'''':''''Orange'''', ''''Hash'''':{''''ExpiryDate'''':''''01/24/2010 12:00:00'''',''''UntypedArray'''':[''''01/24/2010 12:00:00'''']}}''", span="2256-2256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1046 [label="TypedSubHashtable p = JsonConvert.DeserializeObject(value, typeof(TypedSubHashtable)) as TypedSubHashtable", span="2258-2258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1047 [label="Assert.AreEqual(''01/24/2010 12:00:00'', p.Hash[''ExpiryDate''].ToString())", span="2260-2260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1048 [label="StringAssert.AreEqual(@''[\r\n  ''''01/24/2010 12:00:00''''\r\n]'', p.Hash[''UntypedArray''].ToString())", span="2261-2263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1049 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", span="2254-2254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedHashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_2147 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4821-4821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m21_2148 [label="_innerDictionary.Clear()", span="4823-4823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m21_2149 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", span="4821-4821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Clear()", file="JsonSerializerTest.cs"];
m21_850 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", span="1753-1753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Foo1<T>.Foo1()", file="JsonSerializerTest.cs"];
m21_1036 [label="Entry Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.MethodExecutorObject.MethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_2811 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", span="6292-6292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultiIndexSuper.MultiIndexSuper()", file="JsonSerializerTest.cs"];
m21_2851 [label="Entry DataContractSerializer.cstr", span="", cluster="DataContractSerializer.cstr", file="JsonSerializerTest.cs"];
m21_1398 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2962-2962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1399 [label="ClassAndMemberConverterClass c1 = new ClassAndMemberConverterClass()", span="2964-2964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1400 [label="c1.DefaultConverter = new ConverterPrecedenceClass(''DefaultConverterValue'')", span="2965-2965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1401 [label="c1.MemberConverter = new ConverterPrecedenceClass(''MemberConverterValue'')", span="2966-2966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1402 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2968-2968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1403 [label="Assert.AreEqual(@''{''''DefaultConverter'''':[''''Class'''',''''DefaultConverterValue''''],''''MemberConverter'''':[''''Member'''',''''MemberConverterValue'''']}'', json)", span="2969-2969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1404 [label="ClassAndMemberConverterClass c2 = JsonConvert.DeserializeObject<ClassAndMemberConverterClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2971-2971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1405 [label="Assert.AreEqual(''DefaultConverterValue'', c2.DefaultConverter.TestValue)", span="2973-2973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1406 [label="Assert.AreEqual(''MemberConverterValue'', c2.MemberConverter.TestValue)", span="2974-2974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1407 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", span="2962-2962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverClassAndArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1910 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="4079-4079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m21_1911 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error setting value to 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="4081-4092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m21_1912 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", span="4079-4079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertySetError()", file="JsonSerializerTest.cs"];
m21_2701 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="6048-6048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs"];
m21_2702 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", span="6048-6048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base()", file="JsonSerializerTest.cs"];
m21_2330 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5360-5360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2377 [label="BB_field1 = g", span="5363-5363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2378 [label="BB_field2 = g", span="5364-5364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2379 [label="BB_property1 = g", span="5365-5365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2380 [label="BB_property2 = g", span="5366-5366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2381 [label="BB_property3 = g", span="5367-5367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2382 [label="BB_property4 = g", span="5368-5368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2383 [label="BB_property5 = g", span="5369-5369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2384 [label="BB_property6 = g", span="5370-5370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2385 [label="BB_property7 = g", span="5371-5371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2386 [label="BB_property8 = g", span="5372-5372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_2387 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", span="5360-5360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB(int, int)", file="JsonSerializerTest.cs"];
m21_894 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1860-1860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m21_895 [label="var strings = dictionaryKey.Split(' ')", span="1862-1862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m21_896 [label="return new DictionaryKeyCast(strings[0], Convert.ToInt32(strings[1]));", span="1863-1863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m21_897 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", span="1860-1860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast(string)", file="JsonSerializerTest.cs"];
m21_3404 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7719-7719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3405 [label="MemoryStream ms = new MemoryStream()", span="7721-7721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3406 [label="BsonWriter writer = new BsonWriter(ms)", span="7722-7722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3410 [label="byte[] data = ms.ToArray()", span="7727-7727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3407 [label="writer.WriteStartArray()", span="7723-7723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3408 [label="writer.WriteValue(''2000-01-02T03:04:05+06:00'')", span="7724-7724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3409 [label="writer.WriteEndArray()", span="7725-7725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3411 [label="BsonReader reader = new BsonReader(new MemoryStream(data))\r\n            {\r\n                ReadRootValueAsArray = true\r\n            }", span="7728-7731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3412 [label="JArray a = (JArray)JArray.ReadFrom(reader)", span="7733-7733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3413 [label="JValue v = (JValue)a[0]", span="7734-7734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3415 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-01-02T03:04:05+06:00''''\r\n]'', a.ToString())", span="7737-7739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3414 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="7736-7736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_3416 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", span="7719-7719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TokenFromBson()", file="JsonSerializerTest.cs"];
m21_323 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="JsonSerializerTest.cs"];
m21_1422 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2995-2995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m21_1423 [label="string json", span="2997-2997", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m21_1424 [label="json = JsonConvert.SerializeObject((int?)null)", span="2999-2999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m21_1425 [label="Assert.AreEqual(''null'', json)", span="3000-3000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m21_1426 [label="json = JsonConvert.SerializeObject((int?)1)", span="3002-3002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m21_1427 [label="Assert.AreEqual(''1'', json)", span="3003-3003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m21_1428 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", span="2995-2995", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullable()", file="JsonSerializerTest.cs"];
m21_1760 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3804-3804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1761 [label="Content content = new Content\r\n            {\r\n                Text = ''Blah, blah, blah'',\r\n                Children = new List<Content>\r\n                {\r\n                    new Content { Text = ''First'' },\r\n                    new Content { Text = ''Second'' }\r\n                }\r\n            }", span="3806-3814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1762 [label="string json = JsonConvert.SerializeObject(content, Formatting.Indented)", span="3816-3816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1763 [label="StringAssert.AreEqual(@''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}'', json)", span="3818-3830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1764 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", span="3804-3804", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_2054 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", span="4414-4414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ThisGenericTest()", file="JsonSerializerTest.cs"];
m21_2684 [label="Entry string.Format(string, object, object, object)", span="0-0", cluster="string.Format(string, object, object, object)", file="JsonSerializerTest.cs"];
m21_2823 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6353-6353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs"];
m21_2824 [label="B = 2", span="6355-6355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs"];
m21_2825 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", span="6353-6353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor.DTOWithoutParameterisedConstructor()", file="JsonSerializerTest.cs"];
m21_3131 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7159-7159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs"];
m21_3132 [label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  },\r\n  ''''Pie'''': null\r\n}''", span="7161-7168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs"];
m21_3133 [label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7169-7172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs"];
m21_3134 [label="Assert.IsNotNull(value.EncryptedPassword)", span="7174-7174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs"];
m21_3135 [label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7175-7175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs"];
m21_3136 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", span="7159-7159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_ExtraProperty()", file="JsonSerializerTest.cs"];
m21_2230 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt16(string)", file="JsonSerializerTest.cs"];
m21_3917 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8965-8965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m21_3918 [label="string json = @''{''''something_else'''':''''my value''''}''", span="8967-8967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m21_3919 [label="var foo = JsonConvert.DeserializeObject<FooConstructor>(json)", span="8968-8968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m21_3920 [label="Assert.AreEqual(''my value'', foo.Bar)", span="8969-8969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m21_3921 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", span="8965-8965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeWithConstructor()", file="JsonSerializerTest.cs"];
m21_2269 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="5052-5052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2270 [label="Person person = new Person()", span="5054-5054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2271 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="5055-5055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2272 [label="person.LastModified = person.BirthDate", span="5056-5056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2273 [label="person.Department = ''Department!''", span="5057-5057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2274 [label="person.Name = ''Name!''", span="5058-5058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2278 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="5068-5068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2275 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="5060-5060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2276 [label="string dateTimeOffsetText", span="5061-5061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2284 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5099-5099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2277 [label="dateTimeOffsetText = @''2000-12-20T22:59:59+02:00''", span="5063-5063", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2280 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''2000-01-01T01:01:01Z'''',\r\n    ''''LastModified'''': ''''2000-01-01T01:01:01Z''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''0001-01-01T00:00:00Z'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="5071-5094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2279 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="5070-5070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2281 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5096-5096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2282 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="5097-5097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2283 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5098-5098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2285 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5100-5100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2286 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="5101-5101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2287 [label="Assert.AreEqual(null, o2._nullableInt)", span="5102-5102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_2288 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", span="5052-5052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_IsoDate()", file="JsonSerializerTest.cs"];
m21_3137 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7179-7179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_3138 [label="Bb b = new Bb()", span="7181-7181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_3139 [label="b.no = true", span="7182-7182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_3140 [label="Aa a = b", span="7183-7183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_3142 [label="string json = JsonConvert.SerializeObject(b)", span="7186-7186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_3141 [label="a.no = int.MaxValue", span="7184-7184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_3143 [label="Assert.AreEqual(@''{''''no'''':true}'', json)", span="7188-7188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_3144 [label="Bb b2 = JsonConvert.DeserializeObject<Bb>(json)", span="7190-7190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_3145 [label="Assert.AreEqual(true, b2.no)", span="7192-7192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_3146 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", span="7179-7179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInheritanceHierarchyWithDuplicateProperty()", file="JsonSerializerTest.cs"];
m21_1479 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3095-3095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m21_1480 [label="RequiredMembersClass c = new RequiredMembersClass()\r\n            {\r\n                BirthDate = new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc),\r\n                FirstName = ''Bob'',\r\n                LastName = ''Smith'',\r\n                MiddleName = ''Cosmo''\r\n            }", span="3097-3103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m21_1481 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3105-3105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m21_1482 [label="StringAssert.AreEqual(@''{\r\n  ''''FirstName'''': ''''Bob'''',\r\n  ''''MiddleName'''': ''''Cosmo'''',\r\n  ''''LastName'''': ''''Smith'''',\r\n  ''''BirthDate'''': ''''2000-12-20T10:55:55Z''''\r\n}'', json)", span="3107-3112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m21_1483 [label="RequiredMembersClass c2 = JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3114-3114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m21_1484 [label="Assert.AreEqual(''Bob'', c2.FirstName)", span="3116-3116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m21_1485 [label="Assert.AreEqual(new DateTime(2000, 12, 20, 10, 55, 55, DateTimeKind.Utc), c2.BirthDate)", span="3117-3117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m21_1486 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", span="3095-3095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m21_961 [label="Entry Unk.WriteObject", span="", cluster="Unk.WriteObject", file="JsonSerializerTest.cs"];
m21_2871 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6537-6537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m21_2872 [label="Title = title", span="6539-6539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m21_2873 [label="Categories = new List<string>()", span="6540-6540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m21_2874 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", span="6537-6537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty.NonDefaultConstructorWithReadOnlyCollectionProperty(string)", file="JsonSerializerTest.cs"];
m21_1421 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GenericImpl.GenericImpl()", file="JsonSerializerTest.cs"];
m21_3019 [label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="172-172", cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonSerializerTest.cs"];
m21_3418 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", span="143-143", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteStartArray()", file="JsonSerializerTest.cs"];
m21_424 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", span="1034-1034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyVirtual<T>.ResponseWithNewGenericPropertyVirtual()", file="JsonSerializerTest.cs"];
m21_2081 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4585-4585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m21_2082 [label="B value = new B()", span="4587-4587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m21_2083 [label="string json = JsonConvert.SerializeObject(value, Formatting.Indented)", span="4588-4588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m21_2084 [label="StringAssert.AreEqual(@''{\r\n  ''''B2'''': null,\r\n  ''''A1'''': null,\r\n  ''''B3'''': null,\r\n  ''''A2'''': null\r\n}'', json)", span="4590-4595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m21_2085 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", span="4585-4585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonPublicBaseJsonProperties()", file="JsonSerializerTest.cs"];
m21_1652 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3525-3525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m21_1653 [label="string classRef = typeof(JsonPropertyWithHandlingValues).FullName", span="3527-3527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m21_1654 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues();\r\n                o.ReferenceLoopHandlingErrorProperty = o;\r\n\r\n                JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore });\r\n            }, ''Self referencing loop detected for property 'ReferenceLoopHandlingErrorProperty' with type ''' + classRef + '''. Path ''.'')", span="3529-3535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m21_1655 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", span="3525-3525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyWithHandlingValues_ReferenceLoopError()", file="JsonSerializerTest.cs"];
m21_4392 [label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="10151-10151", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4393 [label="Value = value", span="10153-10153", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4394 [label="Constructor = ''Public Parameterized''", span="10154-10154", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4395 [label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", span="10151-10151", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4260 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9797-9797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonSerializerTest.cs"];
m21_4261 [label="BaseProperty = baseProperty", span="9799-9799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonSerializerTest.cs"];
m21_4262 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", span="9797-9797", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType.BaseConstructorType(string)", file="JsonSerializerTest.cs"];
m21_1495 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3138-3138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_1496 [label="string json = @''{\r\n  ''''FirstName'''': null,\r\n  ''''MiddleName'''': null,\r\n  ''''LastName'''': null,\r\n  ''''BirthDate'''': ''''\/Date(977309755000)\/''''\r\n}''", span="3142-3147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_1497 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3149-3149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_1498 [label="Assert.Fail()", span="3150-3150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_1499 [label=JsonSerializationException, span="3152-3152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_1500 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'FirstName' expects a value but got null. Path ''''))", span="3154-3154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_1501 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", span="3138-3138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_2425 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", span="5475-5475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.PosConverter()", file="JsonSerializerTest.cs"];
m21_3776 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8601-8601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m21_3777 [label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8603-8603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m21_3778 [label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8604-8604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m21_3779 [label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8605-8605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m21_3781 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture\r\n            })", span="8613-8617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m21_3780 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8607-8611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m21_3782 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8619-8622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m21_3783 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", span="8601-8601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatString()", file="JsonSerializerTest.cs"];
m21_42 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="328-328", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonSerializerTest.cs"];
m21_2449 [label="Entry string.Format(System.IFormatProvider, string, object, object)", span="0-0", cluster="string.Format(System.IFormatProvider, string, object, object)", file="JsonSerializerTest.cs"];
m21_184 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="483-483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs"];
m21_185 [label="string json = JsonConvert.SerializeObject(new Binding_DisallowNull(), new JsonSerializerSettings\r\n            {\r\n                NullValueHandling = NullValueHandling.Ignore\r\n            })", span="485-488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs"];
m21_186 [label="Assert.AreEqual(''{}'', json)", span="489-489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs"];
m21_187 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", span="483-483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull_NullValueHandlingIgnore()", file="JsonSerializerTest.cs"];
m21_69 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", span="179-179", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertDateTimeToJavaScriptTicks(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs"];
m21_4268 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9814-9814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4269 [label="throw new NotImplementedException();", span="9816-9816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4270 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9814-9814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2144 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4816-4816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m21_2145 [label="_innerDictionary.Add(key, value)", span="4818-4818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m21_2146 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", span="4816-4816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Add(string, T)", file="JsonSerializerTest.cs"];
m21_881 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonSerializerTest.cs"];
m21_891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1855-1855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs"];
m21_892 [label="return _name + '' '' + _number;", span="1857-1857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs"];
m21_893 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", span="1855-1855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.ToString()", file="JsonSerializerTest.cs"];
m21_2184 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="JsonSerializerTest.cs"];
m21_1957 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4185-4185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1958 [label="Foo f = new Foo()", span="4187-4187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1959 [label="f.Bars.Add(new Bar { Id = 0 })", span="4188-4188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1960 [label="f.Bars.Add(new Bar { Id = 1 })", span="4189-4189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1961 [label="f.Bars.Add(new Bar { Id = 2 })", span="4190-4190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1962 [label="string json = JsonConvert.SerializeObject(f, Formatting.Indented)", span="4192-4192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1963 [label="StringAssert.AreEqual(@''{\r\n  ''''Bars'''': [\r\n    0,\r\n    1,\r\n    2\r\n  ]\r\n}'', json)", span="4193-4199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1964 [label="Foo newFoo = JsonConvert.DeserializeObject<Foo>(json)", span="4201-4201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1965 [label="Assert.AreEqual(3, newFoo.Bars.Count)", span="4202-4202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1966 [label="Assert.AreEqual(0, newFoo.Bars[0].Id)", span="4203-4203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1967 [label="Assert.AreEqual(1, newFoo.Bars[1].Id)", span="4204-4204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1968 [label="Assert.AreEqual(2, newFoo.Bars[2].Id)", span="4205-4205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_1969 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", span="4185-4185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeListWithJsonConverter()", file="JsonSerializerTest.cs"];
m21_2237 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4949-4949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2238 [label="info.AddValue(''stringValue'', _stringValue)", span="4951-4951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2239 [label="info.AddValue(''intValue'', _intValue)", span="4952-4952", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2240 [label="info.AddValue(''dateTimeOffsetValue'', _dateTimeOffsetValue)", span="4953-4953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2241 [label="info.AddValue(''personValue'', _personValue)", span="4954-4954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2242 [label="info.AddValue(''nullPersonValue'', _nullPersonValue)", span="4955-4955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2243 [label="info.AddValue(''nullableInt'', null)", span="4956-4956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2244 [label="info.AddValue(''booleanValue'', _booleanValue)", span="4958-4958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2245 [label="info.AddValue(''byteValue'', _byteValue)", span="4959-4959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2246 [label="info.AddValue(''charValue'', _charValue)", span="4960-4960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2247 [label="info.AddValue(''dateTimeValue'', _dateTimeValue)", span="4961-4961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2248 [label="info.AddValue(''decimalValue'', _decimalValue)", span="4962-4962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2249 [label="info.AddValue(''shortValue'', _shortValue)", span="4963-4963", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2250 [label="info.AddValue(''longValue'', _longValue)", span="4964-4964", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2251 [label="info.AddValue(''sbyteValue'', _sbyteValue)", span="4965-4965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2252 [label="info.AddValue(''floatValue'', _floatValue)", span="4966-4966", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2253 [label="info.AddValue(''ushortValue'', _ushortValue)", span="4967-4967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2254 [label="info.AddValue(''uintValue'', _uintValue)", span="4968-4968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2255 [label="info.AddValue(''ulongValue'', _ulongValue)", span="4969-4969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2256 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4949-4949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2965 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6814-6814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m21_2966 [label="Exceptions = new List<Exception>()", span="6816-6816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m21_2967 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", span="6814-6814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException.ClassWithException()", file="JsonSerializerTest.cs"];
m21_1464 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="3073-3073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1465 [label="string boolRef = typeof(bool).AssemblyQualifiedName", span="3075-3075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1466 [label="TypeClass typeClass = new TypeClass { TypeProperty = typeof(bool) }", span="3076-3076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1468 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + boolRef + @''''''}'', json)", span="3079-3079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1467 [label="string json = JsonConvert.SerializeObject(typeClass)", span="3078-3078", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1469 [label="TypeClass typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="3081-3081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1470 [label="Assert.AreEqual(typeof(bool), typeClass2.TypeProperty)", span="3082-3082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1471 [label="string jsonSerializerTestRef = typeof(JsonSerializerTest).AssemblyQualifiedName", span="3084-3084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1472 [label="typeClass = new TypeClass { TypeProperty = typeof(JsonSerializerTest) }", span="3085-3085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1474 [label="Assert.AreEqual(@''{''''TypeProperty'''':'''''' + jsonSerializerTestRef + @''''''}'', json)", span="3088-3088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1473 [label="json = JsonConvert.SerializeObject(typeClass)", span="3087-3087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1475 [label="typeClass2 = JsonConvert.DeserializeObject<TypeClass>(json)", span="3090-3090", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1476 [label="Assert.AreEqual(typeof(JsonSerializerTest), typeClass2.TypeProperty)", span="3091-3091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_1477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", span="3073-3073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTypeProperty()", file="JsonSerializerTest.cs"];
m21_3421 [label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125", cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="JsonSerializerTest.cs"];
m21_89 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs"];
m21_90 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['']''),\r\n                @''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 3.'')", span="310-312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs"];
m21_91 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_EmptyString()", file="JsonSerializerTest.cs"];
m21_4113 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9430-9430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4114 [label="throw new InvalidCastException();", span="9432-9432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4115 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", span="9430-9430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_3789 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8646-8646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3790 [label="CultureInfo culture = new CultureInfo(''en-NZ'')", span="8648-8648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3791 [label="culture.DateTimeFormat.AMDesignator = ''a.m.''", span="8649-8649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3792 [label="culture.DateTimeFormat.PMDesignator = ''p.m.''", span="8650-8650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3796 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                DateFormatString = ''yyyy tt'',\r\n                Culture = culture,\r\n                Formatting = Formatting.Indented\r\n            })", span="8661-8666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3793 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8652-8656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3794 [label="StringWriter sw = new StringWriter()", span="8658-8658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3797 [label="serializer.Serialize(jsonWriter, dates)", span="8667-8667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3795 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8659-8659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3801 [label="string json = sw.ToString()", span="8673-8673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3798 [label="Assert.IsNull(jsonWriter.DateFormatString)", span="8669-8669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3799 [label="Assert.AreEqual(CultureInfo.InvariantCulture, jsonWriter.Culture)", span="8670-8670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3800 [label="Assert.AreEqual(Formatting.None, jsonWriter.Formatting)", span="8671-8671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3802 [label="StringAssert.AreEqual(@''[\r\n  ''''2000 p.m.'''',\r\n  ''''2000 p.m.''''\r\n]'', json)", span="8675-8678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_3803 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", span="8646-8646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerDateFormatString()", file="JsonSerializerTest.cs"];
m21_1827 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3943-3943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m21_1828 [label="string json = @''[]''", span="3945-3945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m21_1829 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, string>>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3947-3949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m21_1830 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", span="3943-3943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDictionary()", file="JsonSerializerTest.cs"];
m21_3 [label="reader.SupportMultipleContent = true", span="111-111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_147 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerTest.cs"];
m21_558 [label="Entry Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", span="50-50", cluster="Newtonsoft.Json.Serialization.DefaultSerializationBinder.DefaultSerializationBinder()", file="JsonSerializerTest.cs"];
m21_2891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6580-6580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2892 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c1 = new NonDefaultConstructorWithReadOnlyDictionaryProperty(''blah'')", span="6582-6582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2893 [label="c1.Categories.Add(''one'', 1)", span="6583-6583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2894 [label="c1.Categories.Add(''two'', 2)", span="6584-6584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2895 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6586-6586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2898 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6596-6596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2899 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6597-6597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2896 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2\r\n  }\r\n}'', json)", span="6587-6593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2897 [label="NonDefaultConstructorWithReadOnlyDictionaryProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyDictionaryProperty>(json)", span="6595-6595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2900 [label="Assert.AreEqual(1, c2.Categories[''one''])", span="6598-6598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2901 [label="Assert.AreEqual(2, c2.Categories[''two''])", span="6599-6599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_2902 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", span="6580-6580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryPropertyTest()", file="JsonSerializerTest.cs"];
m21_3640 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", span="8259-8259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3641 [label="string json = @''{ ''''MyProperty'''':{''''Key'''':''''Value''''}} A bunch of junk at the end of the json''", span="8261-8261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3642 [label="JsonSerializer serializer = new JsonSerializer()", span="8263-8263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3643 [label="var reader = new JsonTextReader(new StringReader(json))", span="8265-8265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3644 [label="MyType mt = (MyType)serializer.Deserialize(reader, typeof(MyType))", span="8267-8267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3645 [label="Assert.AreEqual(1, mt.MyProperty.Count)", span="8268-8268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3646 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", span="8259-8259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinishCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_566 [label="Entry Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", span="29-29", cluster="Newtonsoft.Json.Serialization.MemoryTraceWriter.MemoryTraceWriter()", file="JsonSerializerTest.cs"];
m21_17 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs"];
m21_308 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", span="692-692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.IgnoredPropertiesContractResolver()", file="JsonSerializerTest.cs"];
m21_3968 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="9145-9145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3969 [label="string str = value as string", span="9147-9147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3971 [label="return base.ConvertFrom(context, culture, value);", span="9150-9150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3975 [label="culture == null", span="9157-9157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3982 [label="numArray[i] = (int)converter.ConvertFromString(context, culture, strArray[i])", span="9166-9166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3970 [label="str == null", span="9148-9148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3972 [label="string str2 = str.Trim()", span="9152-9152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3973 [label="str2.Length == 0", span="9153-9153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3977 [label="string[] strArray = str2.Split(',')", span="9161-9161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3974 [label="return null;", span="9155-9155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3976 [label="culture = CultureInfo.CurrentCulture", span="9159-9159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3978 [label="int[] numArray = new int[strArray.Length]", span="9162-9162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3979 [label="TypeConverter converter = TypeDescriptor.GetConverter(typeof(int))", span="9163-9163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3981 [label="i < numArray.Length", span="9164-9164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3984 [label="numArray.Length == 2", span="9168-9168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3985 [label="return new TypeConverterSize(numArray[0], numArray[1]);", span="9170-9170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3980 [label="int i = 0", span="9164-9164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3983 [label="i++", span="9164-9164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3986 [label="throw new ArgumentException(''Bad format.'');", span="9173-9173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3987 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="9145-9145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_2331 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5223-5223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2332 [label="AA myA = JsonConvert.DeserializeObject<AA>(\r\n                @''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_field2'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2\r\n}'')", span="5225-5235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2333 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5237-5237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2334 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5238-5238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2335 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5239-5239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2336 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5240-5240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2337 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5241-5241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2338 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5242-5242", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2339 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5243-5243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2340 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myA))", span="5244-5244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2341 [label="BB myB = JsonConvert.DeserializeObject<BB>(\r\n                @''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''AA_field2'''': 3,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2,\r\n  ''''AA_property5'''': 2,\r\n  ''''AA_property6'''': 2,\r\n  ''''BB_property1'''': 3,\r\n  ''''BB_property2'''': 3,\r\n  ''''BB_property3'''': 3,\r\n  ''''BB_property4'''': 3,\r\n  ''''BB_property5'''': 3,\r\n  ''''BB_property6'''': 3,\r\n  ''''BB_property7'''': 3,\r\n  ''''BB_property8'''': 3\r\n}'')", span="5246-5266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2342 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5268-5268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2343 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetField(''AA_field2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5269-5269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2344 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property1'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5270-5270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2345 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property2'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5271-5271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2346 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property3'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5272-5272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2347 [label="Assert.AreEqual(2, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5273-5273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2348 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property5'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5274-5274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2349 [label="Assert.AreEqual(0, ReflectionUtils.GetMemberValue(typeof(AA).GetProperty(''AA_property6'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5275-5275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2350 [label="Assert.AreEqual(4, myB.BB_field1)", span="5277-5277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2351 [label="Assert.AreEqual(4, myB.BB_field2)", span="5278-5278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2352 [label="Assert.AreEqual(3, myB.BB_property1)", span="5279-5279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2353 [label="Assert.AreEqual(3, myB.BB_property2)", span="5280-5280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2354 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property3'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5281-5281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2355 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property4'', BindingFlags.Instance | BindingFlags.NonPublic), myB))", span="5282-5282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2356 [label="Assert.AreEqual(0, myB.BB_property5)", span="5283-5283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2357 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property6'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5284-5284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2358 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property7'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5285-5285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2359 [label="Assert.AreEqual(3, ReflectionUtils.GetMemberValue(typeof(BB).GetProperty(''BB_property8'', BindingFlags.Instance | BindingFlags.Public), myB))", span="5286-5286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2360 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", span="5223-5223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2696 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="6031-6031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs"];
m21_2697 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", span="6031-6031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived()", file="JsonSerializerTest.cs"];
m21_4396 [label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", span="10164-10164", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4397 [label="Value = value", span="10166-10166", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4398 [label="Constructor = ''Public Parameterized 1''", span="10167-10167", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4399 [label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", span="10164-10164", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_787 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1695-1695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m21_788 [label="object o = JsonConvert.DeserializeObject(''100000000000000000000000000000000000000.0'')", span="1697-1697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m21_789 [label="CustomAssert.IsInstanceOfType(typeof(double), o)", span="1699-1699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m21_790 [label="Assert.IsTrue(MathUtils.ApproxEquals(1E+38, (double)o))", span="1701-1701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m21_791 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", span="1695-1695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeLargeFloat()", file="JsonSerializerTest.cs"];
m21_41 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="537-537", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonSerializerTest.cs"];
m21_3374 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroStringConverter.MetroStringConverter()", file="JsonSerializerTest.cs"];
m21_4101 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9410-9410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4102 [label="return Value;", span="9412-9412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4103 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", span="9410-9410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_1582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3363-3363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m21_1583 [label="string json = @''{\r\n  ''''firstName'''': ''''firstName'''',\r\n  ''''FirstName'''': ''''FirstName'''',\r\n  ''''LastName'''': ''''LastName'''',\r\n  ''''lastName'''': ''''lastName'''',\r\n}''", span="3365-3370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m21_1584 [label="PropertyCase o = JsonConvert.DeserializeObject<PropertyCase>(json)", span="3372-3372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m21_1585 [label="Assert.IsNotNull(o)", span="3373-3373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m21_1586 [label="Assert.AreEqual(''firstName'', o.firstName)", span="3375-3375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m21_1587 [label="Assert.AreEqual(''FirstName'', o.FirstName)", span="3376-3376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m21_1588 [label="Assert.AreEqual(''LastName'', o.LastName)", span="3377-3377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m21_1589 [label="Assert.AreEqual(''lastName'', o.lastName)", span="3378-3378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m21_1590 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", span="3363-3363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBestMatchPropertyCase()", file="JsonSerializerTest.cs"];
m21_196 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", span="493-493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoNull.DictionaryWithNoNull()", file="JsonSerializerTest.cs"];
m21_1389 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonSerializerTest.cs"];
m21_1225 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2642-2642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m21_1226 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2644-2644", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m21_1227 [label="JsonSerializer s = new JsonSerializer()", span="2646-2646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m21_1229 [label="ClassWithArray wibble = (ClassWithArray)s.Deserialize(new StringReader(json), typeof(ClassWithArray))", span="2649-2649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m21_1228 [label="s.ObjectCreationHandling = ObjectCreationHandling.Replace", span="2647-2647", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m21_1230 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2651-2651", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m21_1231 [label="Assert.AreEqual(1, wibble.Bar.Count)", span="2653-2653", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m21_1232 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", span="2642-2642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectCreationHandlingReplace()", file="JsonSerializerTest.cs"];
m21_1632 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3484-3484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1633 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3486-3486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1634 [label="o.DefaultValueHandlingIgnoreProperty = ''Default!''", span="3487-3487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1635 [label="o.DefaultValueHandlingIncludeProperty = ''Default!''", span="3488-3488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1636 [label="o.DefaultValueHandlingPopulateProperty = ''Default!''", span="3489-3489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1637 [label="o.DefaultValueHandlingIgnoreAndPopulateProperty = ''Default!''", span="3490-3490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1638 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3492-3492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1640 [label="json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { NullValueHandling = NullValueHandling.Ignore })", span="3503-3503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1639 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null,\r\n  ''''ReferenceLoopHandlingErrorProperty'''': null,\r\n  ''''ReferenceLoopHandlingIgnoreProperty'''': null,\r\n  ''''ReferenceLoopHandlingSerializeProperty'''': null\r\n}'', json)", span="3494-3501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1641 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultValueHandlingIncludeProperty'''': ''''Default!'''',\r\n  ''''DefaultValueHandlingPopulateProperty'''': ''''Default!'''',\r\n  ''''NullValueHandlingIncludeProperty'''': null\r\n}'', json)", span="3505-3509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1642 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", span="3484-3484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_2263 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, long)", file="JsonSerializerTest.cs"];
m21_4345 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="10002-10002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_4346 [label="return typeof(Encoding).IsAssignableFrom(objectType);", span="10004-10004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_4347 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", span="10002-10002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_166 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs"];
m21_167 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}''); }, ''Required property 'Bars' expects a value but got null. Path '', line 1, position 9.'')", span="443-443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs"];
m21_168 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequiredConstructor()", file="JsonSerializerTest.cs"];
m21_1341 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="548-548", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs"];
m21_4021 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="9243-9243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m21_4022 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="9245-9260", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m21_4023 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n                ReferenceResolverProvider = () => new IdReferenceResolver(),\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9262-9267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m21_4024 [label="Assert.AreEqual(2, people.Count)", span="9269-9269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m21_4025 [label="PersonReference john = people[0]", span="9271-9271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m21_4026 [label="PersonReference jane = people[1]", span="9272-9272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m21_4027 [label="Assert.AreEqual(john, jane.Spouse)", span="9274-9274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m21_4028 [label="Assert.AreEqual(jane, john.Spouse)", span="9275-9275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m21_4029 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", span="9243-9243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver_ViaProvider()", file="JsonSerializerTest.cs"];
m21_885 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="JsonSerializerTest.cs"];
m21_786 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonReference.PersonReference()", file="JsonSerializerTest.cs"];
m21_415 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", span="1029-1029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericProperty<T>.ResponseWithNewGenericProperty()", file="JsonSerializerTest.cs"];
m21_1147 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m21_1170 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2550-2550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1171 [label="var anonymous =\r\n                new\r\n                {\r\n                    StringValue = ''I am a string'',\r\n                    IntValue = int.MaxValue,\r\n                    NestedAnonymous = new { NestedValue = byte.MaxValue },\r\n                    NestedArray = new[] { 1, 2 },\r\n                    Product = new Product() { Name = ''TestProduct'' }\r\n                }", span="2552-2560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1172 [label="string json = JsonConvert.SerializeObject(anonymous)", span="2562-2562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1174 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous)", span="2565-2565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1173 [label="Assert.AreEqual(@''{''''StringValue'''':''''I am a string'''',''''IntValue'''':2147483647,''''NestedAnonymous'''':{''''NestedValue'''':255},''''NestedArray'''':[1,2],''''Product'''':{''''Name'''':''''TestProduct'''',''''ExpiryDate'''':''''2000-01-01T00:00:00Z'''',''''Price'''':0.0,''''Sizes'''':null}}'', json)", span="2563-2563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1175 [label="Assert.AreEqual(''I am a string'', anonymous.StringValue)", span="2566-2566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1176 [label="Assert.AreEqual(int.MaxValue, anonymous.IntValue)", span="2567-2567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1177 [label="Assert.AreEqual(255, anonymous.NestedAnonymous.NestedValue)", span="2568-2568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1178 [label="Assert.AreEqual(2, anonymous.NestedArray.Length)", span="2569-2569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1179 [label="Assert.AreEqual(1, anonymous.NestedArray[0])", span="2570-2570", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1180 [label="Assert.AreEqual(2, anonymous.NestedArray[1])", span="2571-2571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1181 [label="Assert.AreEqual(''TestProduct'', anonymous.Product.Name)", span="2572-2572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_1182 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", span="2550-2550", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerialization()", file="JsonSerializerTest.cs"];
m21_2504 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5609-5609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m21_2505 [label="string json = @''{''''First'''':''''First'''',''''Second'''':2,''''Ignored'''':{''''Name'''':''''James''''},''''AdditionalContent'''':{''''LOL'''':true}}''", span="5611-5611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m21_2506 [label="ConstructorCompexIgnoredProperty cc = JsonConvert.DeserializeObject<ConstructorCompexIgnoredProperty>(json)", span="5613-5613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m21_2507 [label="Assert.AreEqual(''First'', cc.First)", span="5614-5614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m21_2508 [label="Assert.AreEqual(2, cc.Second)", span="5615-5615", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m21_2509 [label="Assert.AreEqual(null, cc.Ignored)", span="5616-5616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m21_2510 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", span="5609-5609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIgnoredPropertyInConstructor()", file="JsonSerializerTest.cs"];
m21_3666 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8304-8304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3667 [label="IList<Uri> uris = JsonConvert.DeserializeObject<IList<Uri>>(@''[''''http://localhost/path?query#hash'''']'')", span="8306-8306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3668 [label="Assert.AreEqual(1, uris.Count)", span="8307-8307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3669 [label="Assert.AreEqual(new Uri(''http://localhost/path?query#hash''), uris[0])", span="8308-8308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3670 [label="Uri uri = JsonConvert.DeserializeObject<Uri>(@''''''http://localhost/path?query#hash'''''')", span="8310-8310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3671 [label="Assert.IsNotNull(uri)", span="8311-8311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3672 [label="Uri i1 = new Uri(''http://localhost/path?query#hash'', UriKind.RelativeOrAbsolute)", span="8313-8313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3673 [label="Uri i2 = new Uri(''http://localhost/path?query#hash'')", span="8314-8314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3674 [label="Assert.AreEqual(i1, i2)", span="8315-8315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3675 [label="uri = JsonConvert.DeserializeObject<Uri>(@''''''/path?query#hash'''''')", span="8317-8317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3676 [label="Assert.IsNotNull(uri)", span="8318-8318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3677 [label="Assert.AreEqual(new Uri(''/path?query#hash'', UriKind.RelativeOrAbsolute), uri)", span="8319-8319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_3678 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", span="8304-8304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeRelativeUri()", file="JsonSerializerTest.cs"];
m21_155 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="428-428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs"];
m21_156 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a non-null value. Path '', line 1, position 21.'')", span="430-430", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs"];
m21_157 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", span="428-428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired_DisallowNull()", file="JsonSerializerTest.cs"];
m21_212 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m21_213 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<object>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="553-555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m21_214 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1,''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 3.'')", span="557-559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m21_215 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<int>>(''[1''),\r\n                ''Unexpected end when deserializing array. Path '[0]', line 1, position 2.'')", span="561-563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m21_216 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="565-567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m21_217 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="569-571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m21_218 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 9.'')", span="573-575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m21_219 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1''),\r\n                ''Unexpected end when deserializing object. Path 'key', line 1, position 8.'')", span="577-579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m21_220 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompleteContainers()", file="JsonSerializerTest.cs"];
m21_2959 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6792-6792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m21_2960 [label="DerivedType d = new DerivedType()", span="6794-6794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m21_2961 [label="string json = JsonConvert.SerializeObject(d, Formatting.Indented)", span="6795-6795", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m21_2962 [label="StringAssert.AreEqual(@''{\r\n  ''''dinosaur'''': null,\r\n  ''''dog'''': null,\r\n  ''''cat'''': null,\r\n  ''''zebra'''': null,\r\n  ''''bird'''': null,\r\n  ''''parrot'''': null,\r\n  ''''albatross'''': null,\r\n  ''''antelope'''': null\r\n}'', json)", span="6797-6806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m21_2963 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", span="6792-6792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyDataMemberOrder()", file="JsonSerializerTest.cs"];
m21_2968 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6822-6822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2969 [label="ClassWithException classWithException = new ClassWithException()", span="6824-6824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2970 [label="throw new Exception(''Test Exception'');", span="6827-6827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2972 [label="classWithException.Exceptions.Add(ex)", span="6831-6831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2973 [label="string sex = JsonConvert.SerializeObject(classWithException)", span="6833-6833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2976 [label="sex = JsonConvert.SerializeObject(classWithException, Formatting.Indented)", span="6837-6837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2971 [label=Exception, span="6829-6829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2974 [label="ClassWithException dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6834-6834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2975 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6835-6835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2977 [label="dex = JsonConvert.DeserializeObject<ClassWithException>(sex)", span="6839-6839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2978 [label="Assert.AreEqual(dex.Exceptions[0].ToString(), dex.Exceptions[0].ToString())", span="6840-6840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_2979 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", span="6822-6822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeException1()", file="JsonSerializerTest.cs"];
m21_3812 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="JsonSerializerTest.cs"];
m21_4374 [label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="43-43", cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m21_3566 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", span="205-205", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ConvertJavaScriptTicksToDateTime(long)", file="JsonSerializerTest.cs"];
m21_2426 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", span="5502-5502", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.PosDoubleConverter()", file="JsonSerializerTest.cs"];
m21_2581 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", span="5751-5751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTestClass.StringDictionaryTestClass()", file="JsonSerializerTest.cs"];
m21_307 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", span="677-677", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesTestClass.IgnoredPropertiesTestClass()", file="JsonSerializerTest.cs"];
m21_73 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="357-357", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonSerializerTest.cs"];
m21_2403 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5424-5424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2404 [label="XmlNodeTestObject testObject = new XmlNodeTestObject()", span="5426-5426", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2405 [label="XmlDocument document = new XmlDocument()", span="5427-5427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2407 [label="testObject.Document = document", span="5429-5429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2408 [label="string json = JsonConvert.SerializeObject(testObject, Formatting.Indented)", span="5431-5431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2412 [label="Assert.AreEqual(testObject.Document.InnerXml, newTestObject.Document.InnerXml)", span="5440-5440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2406 [label="document.LoadXml(''<root>hehe, root</root>'')", span="5428-5428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2409 [label="string expected = @''{\r\n  ''''Document'''': {\r\n    ''''root'''': ''''hehe, root''''\r\n  }\r\n}''", span="5432-5436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2410 [label="StringAssert.AreEqual(expected, json)", span="5437-5437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2411 [label="XmlNodeTestObject newTestObject = JsonConvert.DeserializeObject<XmlNodeTestObject>(json)", span="5439-5439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2413 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", span="5424-5424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeXmlNodeProperties()", file="JsonSerializerTest.cs"];
m21_2163 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4841-4841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_2164 [label="return _innerDictionary.GetEnumerator();", span="4843-4843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_2165 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", span="4841-4841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_5 [label="reader.Read()", span="115-115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_7 [label="ser.CheckAdditionalContent = false", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", color=green, community=0, file="JsonSerializerTest.cs"];
m21_6 [label="var ser = new JsonSerializer()", span="117-117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_8 [label="ser.Deserialize<IList<ErroringClass>>(reader)", span="120-120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_9 [label="Assert.Fail()", span="123-123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_10 [label=Exception, span="125-125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_3543 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="8005-8005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m21_3544 [label="var json = Serialize(obj)", span="8008-8008", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m21_3545 [label="return Deserialize<T>(json);", span="8009-8009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m21_3546 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", span="8005-8005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserialize<T>(T)", file="JsonSerializerTest.cs"];
m21_2685 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="6011-6011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m21_2686 [label="VectorParent obj = new VectorParent()", span="6013-6013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m21_2687 [label="obj.Position = new Vector { X = 1, Y = 2, Z = 3 }", span="6014-6014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m21_2688 [label="string str = JsonConvert.SerializeObject(obj)", span="6016-6016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m21_2689 [label="obj = JsonConvert.DeserializeObject<VectorParent>(str)", span="6018-6018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m21_2690 [label="Assert.AreEqual(1, obj.Position.X)", span="6020-6020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m21_2691 [label="Assert.AreEqual(2, obj.Position.Y)", span="6021-6021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m21_2692 [label="Assert.AreEqual(3, obj.Position.Z)", span="6022-6022", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m21_2693 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", span="6011-6011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeStructProperty()", file="JsonSerializerTest.cs"];
m21_1696 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3655-3655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_1697 [label="DataContractPrivateMembers c = new DataContractPrivateMembers(''Jeff'', 26, 10, ''Dr'')", span="3657-3657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_1698 [label="c.NotIncluded = ''Hi''", span="3658-3658", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_1699 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="3659-3659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_1700 [label="StringAssert.AreEqual(@''{\r\n  ''''_name'''': ''''Jeff'''',\r\n  ''''_age'''': 26,\r\n  ''''Rank'''': 10,\r\n  ''''JsonTitle'''': ''''Dr''''\r\n}'', json)", span="3661-3666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_1701 [label="DataContractPrivateMembers cc = JsonConvert.DeserializeObject<DataContractPrivateMembers>(json)", span="3668-3668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_1702 [label="Assert.AreEqual(''_name: Jeff, _age: 26, Rank: 10, JsonTitle: Dr'', cc.ToString())", span="3669-3669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_1703 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", span="3655-3655", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_3285 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7471-7471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m21_3286 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<double>(''''); }, ''No JSON content found and type 'System.Double' is not nullable. Path '', line 0, position 0.'')", span="7473-7473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m21_3287 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", span="7471-7471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromEmptyString()", file="JsonSerializerTest.cs"];
m21_1291 [label="Entry System.Guid.Guid(string)", span="0-0", cluster="System.Guid.Guid(string)", file="JsonSerializerTest.cs"];
m21_3337 [label="Entry System.DateTime.ToLocalTime()", span="0-0", cluster="System.DateTime.ToLocalTime()", file="JsonSerializerTest.cs"];
m21_2933 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6697-6697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m21_2934 [label="_privateString = privateString", span="6699-6699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m21_2935 [label="_readonlyString = readonlyString", span="6700-6700", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m21_2936 [label="_internalString = internalString", span="6701-6701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m21_2937 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", span="6697-6697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes(string, string, string)", file="JsonSerializerTest.cs"];
m21_2842 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", span="6402-6402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContract.ChildDataContract()", file="JsonSerializerTest.cs"];
m21_2087 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4607-4607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m21_2088 [label="string jsonIsoText =\r\n                @''{''''DateTimeOffsetValue'''':''''2012-02-25T19:55:50.6095676+00:00'''', ''''DateTimeValue'''':''''2012-02-25T19:55:50.6095676+00:00''''}''", span="4609-4610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m21_2089 [label="DateTimeOffsetWrapper cISO = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset,\r\n                Converters =\r\n                {\r\n                    new IsoDateTimeConverter()\r\n                }\r\n            })", span="4612-4619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m21_2090 [label="DateTimeOffsetWrapper c = JsonConvert.DeserializeObject<DateTimeOffsetWrapper>(jsonIsoText, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            })", span="4620-4623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m21_2091 [label="Assert.AreEqual(c.DateTimeOffsetValue, cISO.DateTimeOffsetValue)", span="4625-4625", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m21_2092 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", span="4607-4607", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDateTimeOffsetAndDateTime()", file="JsonSerializerTest.cs"];
m21_3760 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8549-8549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3761 [label="var content = @''{''''startDateTime'''':''''2012-07-19T14:30:00+09:30''''}''", span="8551-8551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3762 [label="var jsonSerializerSettings = new JsonSerializerSettings() { DateFormatHandling = DateFormatHandling.IsoDateFormat, DateParseHandling = DateParseHandling.DateTimeOffset, DateTimeZoneHandling = DateTimeZoneHandling.RoundtripKind }", span="8553-8553", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3763 [label="var obj = (JObject)JsonConvert.DeserializeObject(content, jsonSerializerSettings)", span="8555-8555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3764 [label="var dateTimeOffset = (DateTimeOffset)((JValue)obj[''startDateTime'']).Value", span="8557-8557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3765 [label="Assert.AreEqual(TimeSpan.FromHours(9.5), dateTimeOffset.Offset)", span="8559-8559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3766 [label="Assert.AreEqual(''07/19/2012 14:30:00 +09:30'', dateTimeOffset.ToString(CultureInfo.InvariantCulture))", span="8560-8560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3767 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", span="8549-8549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripOfDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4405 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="10216-10216", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs"];
m21_3072 [label="Entry Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="10205-10205", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs"];
m21_4406 [label="z = 3", span="10218-10218", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs"];
m21_4407 [label="Exit Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", span="10216-10216", cluster="Newtonsoft.Json.Tests.Serialization.StaticTestClass.StaticTestClass()", file="JsonSerializerTest.cs"];
m21_1270 [label="Entry System.Collections.Generic.Stack<T>.Push(T)", span="0-0", cluster="System.Collections.Generic.Stack<T>.Push(T)", file="JsonSerializerTest.cs"];
m21_899 [label="Entry System.Convert.ToInt32(string)", span="0-0", cluster="System.Convert.ToInt32(string)", file="JsonSerializerTest.cs"];
m21_1325 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2830-2830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m21_1326 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2832-2832", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m21_1327 [label="string json = JsonConvert.SerializeObject(c1)", span="2834-2834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m21_1328 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2835-2835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m21_1329 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json)", span="2837-2837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m21_1330 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2839-2839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m21_1331 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", span="2830-2830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverter()", file="JsonSerializerTest.cs"];
m21_290 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="694-694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m21_291 [label="type == typeof(Version)", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m21_293 [label="return base.ResolveContract(type);", span="701-701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m21_292 [label="throw new Exception(''Error!'');", span="698-698", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m21_294 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", span="694-694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver.ResolveContract(System.Type)", file="JsonSerializerTest.cs"];
m21_2198 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="4917-4917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs"];
m21_2199 [label="_stringValue = stringValue", span="4919-4919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs"];
m21_2200 [label="_intValue = intValue", span="4920-4920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs"];
m21_2201 [label="_dateTimeOffsetValue = dateTimeOffset", span="4921-4921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs"];
m21_2202 [label="_personValue = personValue", span="4922-4922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs"];
m21_2203 [label="_dateTimeValue = new DateTime(0, DateTimeKind.Utc)", span="4923-4923", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs"];
m21_2204 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", span="4917-4917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(string, int, System.DateTimeOffset, Newtonsoft.Json.Tests.TestObjects.Organization.Person)", file="JsonSerializerTest.cs"];
m21_22 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JsonSerializerTest.cs"];
m21_981 [label="Entry Newtonsoft.Json.Tests.TestObjects.Store.Store()", span="49-49", cluster="Newtonsoft.Json.Tests.TestObjects.Store.Store()", file="JsonSerializerTest.cs"];
m21_1644 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3513-3513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1645 [label="string json = ''{}''", span="3515-3515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1646 [label="JsonPropertyWithHandlingValues o = JsonConvert.DeserializeObject<JsonPropertyWithHandlingValues>(json)", span="3517-3517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1647 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingIgnoreAndPopulateProperty)", span="3518-3518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1648 [label="Assert.AreEqual(''Default!'', o.DefaultValueHandlingPopulateProperty)", span="3519-3519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1649 [label="Assert.AreEqual(null, o.DefaultValueHandlingIgnoreProperty)", span="3520-3520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1650 [label="Assert.AreEqual(null, o.DefaultValueHandlingIncludeProperty)", span="3521-3521", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_1651 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", span="3513-3513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_70 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs"];
m21_71 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''[null]''),\r\n                ''Error converting value {null} to type 'System.Boolean'. Path '[0]', line 1, position 5.'')", span="286-288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs"];
m21_72 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", span="284-284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_Null()", file="JsonSerializerTest.cs"];
m21_3338 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m21_3359 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonWithPrivateConstructor.CreatePerson()", file="JsonSerializerTest.cs"];
m21_3547 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="8012-8012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m21_3549 [label="var stringWriter = new StringWriter()", span="8015-8015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m21_3552 [label="serializer.Serialize(stringWriter, obj)", span="8021-8021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m21_3550 [label="var serializer = new JsonSerializer()", span="8016-8016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m21_3553 [label="return stringWriter.ToString();", span="8023-8023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m21_3551 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="8017-8020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m21_3554 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", span="8012-8012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize<T>(T)", file="JsonSerializerTest.cs"];
m21_2748 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", span="6158-6158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Response.Response()", file="JsonSerializerTest.cs"];
m21_3225 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7344-7344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_3226 [label="Item expected = new Item()\r\n            {\r\n                SourceTypeID = new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''),\r\n                BrokerID = new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''),\r\n                Latitude = 33.657145,\r\n                Longitude = -117.766684,\r\n                TimeStamp = new DateTime(2000, 3, 1, 23, 59, 59, DateTimeKind.Utc),\r\n                Payload = new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }\r\n            }", span="7346-7354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_3227 [label="string jsonString = JsonConvert.SerializeObject(expected, Formatting.Indented)", span="7356-7356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_3228 [label="StringAssert.AreEqual(@''{\r\n  ''''SourceTypeID'''': ''''d8220a4b-75b1-4b7a-8112-b7bdae956a45'''',\r\n  ''''BrokerID'''': ''''951663c4-924e-4c86-a57a-7ed737501dbd'''',\r\n  ''''Latitude'''': 33.657145,\r\n  ''''Longitude'''': -117.766684,\r\n  ''''TimeStamp'''': ''''2000-03-01T23:59:59Z'''',\r\n  ''''Payload'''': {\r\n    ''''$type'''': '''''' + ReflectionUtils.GetTypeName(typeof(byte[]), 0, DefaultSerializationBinder.Instance) + @'''''',\r\n    ''''$value'''': ''''AAECAwQFBgcICQ==''''\r\n  }\r\n}'', jsonString)", span="7358-7368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_3229 [label="Item actual = JsonConvert.DeserializeObject<Item>(jsonString)", span="7370-7370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_3230 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), actual.SourceTypeID)", span="7372-7372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_3231 [label="Assert.AreEqual(new Guid(''951663c4-924e-4c86-a57a-7ed737501dbd''), actual.BrokerID)", span="7373-7373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_3232 [label="byte[] bytes = (byte[])actual.Payload", span="7374-7374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_3233 [label="CollectionAssert.AreEquivalent((new byte[] { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }).ToList(), bytes.ToList())", span="7375-7375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_3234 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", span="7344-7344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGuid()", file="JsonSerializerTest.cs"];
m21_407 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m21_408 [label="var input = new ResponseWithNewGenericProperty<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1063-1068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m21_409 [label="var json = JsonConvert.SerializeObject(input)", span="1070-1070", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m21_411 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="1073-1073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m21_412 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="1074-1074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m21_413 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="1075-1075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m21_410 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<int>>(json)", span="1071-1071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m21_414 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", span="1061-1061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgument()", file="JsonSerializerTest.cs"];
m21_3582 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8139-8139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3583 [label="string json = ''{one:1}{}''", span="8141-8141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3584 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="8143-8143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3586 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8145-8145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3591 [label="ExceptionAssert.Throws<JsonReaderException>(() => { s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json))); }, ''Additional text encountered after finished reading JSON content: {. Path '', line 1, position 7.'')", span="8152-8152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3585 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="8144-8144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3589 [label="settings.CheckAdditionalContent = true", span="8150-8150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3590 [label="s = JsonSerializer.Create(settings)", span="8151-8151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3587 [label="Assert.IsNotNull(o)", span="8147-8147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3588 [label="Assert.AreEqual(1, o[''one''])", span="8148-8148", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", span="8139-8139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2321 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5190-5190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2322 [label="AA myA = new AA(2)", span="5192-5192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2323 [label="string json = JsonConvert.SerializeObject(myA, Formatting.Indented)", span="5193-5193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2324 [label="StringAssert.AreEqual(@''{\r\n  ''''AA_field1'''': 2,\r\n  ''''AA_property1'''': 2,\r\n  ''''AA_property2'''': 2,\r\n  ''''AA_property3'''': 2,\r\n  ''''AA_property4'''': 2\r\n}'', json)", span="5194-5200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2325 [label="BB myB = new BB(3, 4)", span="5202-5202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2326 [label="json = JsonConvert.SerializeObject(myB, Formatting.Indented)", span="5203-5203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2327 [label="StringAssert.AreEqual(@''{\r\n  ''''BB_field1'''': 4,\r\n  ''''BB_field2'''': 4,\r\n  ''''AA_field1'''': 3,\r\n  ''''BB_property1'''': 4,\r\n  ''''BB_property2'''': 4,\r\n  ''''BB_property3'''': 4,\r\n  ''''BB_property4'''': 4,\r\n  ''''BB_property5'''': 4,\r\n  ''''BB_property7'''': 4,\r\n  ''''AA_property1'''': 3,\r\n  ''''AA_property2'''': 3,\r\n  ''''AA_property3'''': 3,\r\n  ''''AA_property4'''': 3\r\n}'', json)", span="5204-5218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_2328 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", span="5190-5190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeClassWithInheritedProtectedMember()", file="JsonSerializerTest.cs"];
m21_3906 [label="Entry Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.AnswerFilterModel.AnswerFilterModel()", file="JsonSerializerTest.cs"];
m21_4095 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9400-9400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4096 [label="throw new InvalidCastException();", span="9402-9402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4097 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", span="9400-9400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDouble(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_571 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="JsonSerializerTest.cs"];
m21_4356 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10018-10018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4357 [label="throw new NotImplementedException();", span="10020-10020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4358 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="10018-10018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_835 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", span="1760-1760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooBar1.FooBar1()", file="JsonSerializerTest.cs"];
m21_2903 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonSerializerTest.cs"];
m21_2738 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6146-6146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m21_2739 [label="return JsonConvert.DeserializeObject<NullableStructPropertyClass>(\r\n                serStr,\r\n                new JsonSerializerSettings\r\n                {\r\n                    NullValueHandling = NullValueHandling.Ignore,\r\n                    MissingMemberHandling = MissingMemberHandling.Ignore\r\n                });", span="6148-6154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m21_2740 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", span="6146-6146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.deserialize(string)", file="JsonSerializerTest.cs"];
m21_3297 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7483-7483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m21_3298 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<int>(''''); }, ''No JSON content found and type 'System.Int32' is not nullable. Path '', line 0, position 0.'')", span="7485-7485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m21_3299 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", span="7483-7483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt32FromEmptyString()", file="JsonSerializerTest.cs"];
m21_750 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4408 [label="Entry Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", span="10224-10224", cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs"];
m21_4409 [label="Text = text", span="10226-10226", cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs"];
m21_4410 [label="CursorPosition = cursorPosition", span="10227-10227", cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs"];
m21_4411 [label="DataSource = dataSource", span="10228-10228", cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs"];
m21_4412 [label="Project = project", span="10229-10229", cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs"];
m21_4413 [label="Exit Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", span="10224-10224", cluster="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest.CompletionDataRequest(string, int, string, string)", file="JsonSerializerTest.cs"];
m21_1538 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3226-3226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m21_1539 [label="string json = @''{\r\n  ''''name'''': ''''1600 Amphitheatre Parkway, Mountain View, CA, USA'''',\r\n  ''''Status'''': {\r\n    ''''code'''': 200,\r\n    ''''request'''': ''''geocode''''\r\n  },\r\n  ''''Placemark'''': [\r\n    {\r\n      ''''address'''': ''''1600 Amphitheatre Pkwy, Mountain View, CA 94043, USA'''',\r\n      ''''AddressDetails'''': {\r\n        ''''Country'''': {\r\n          ''''CountryNameCode'''': ''''US'''',\r\n          ''''AdministrativeArea'''': {\r\n            ''''AdministrativeAreaName'''': ''''CA'''',\r\n            ''''SubAdministrativeArea'''': {\r\n              ''''SubAdministrativeAreaName'''': ''''Santa Clara'''',\r\n              ''''Locality'''': {\r\n                ''''LocalityName'''': ''''Mountain View'''',\r\n                ''''Thoroughfare'''': {\r\n                  ''''ThoroughfareName'''': ''''1600 Amphitheatre Pkwy''''\r\n                },\r\n                ''''PostalCode'''': {\r\n                  ''''PostalCodeNumber'''': ''''94043''''\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        ''''Accuracy'''': 8\r\n      },\r\n      ''''Point'''': {\r\n        ''''coordinates'''': [-122.083739, 37.423021, 0]\r\n      }\r\n    }\r\n  ]\r\n}''", span="3228-3263", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m21_1540 [label="GoogleMapGeocoderStructure jsonGoogleMapGeocoder = JsonConvert.DeserializeObject<GoogleMapGeocoderStructure>(json)", span="3265-3265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m21_1541 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", span="3226-3226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGoogleGeoCode()", file="JsonSerializerTest.cs"];
m21_2904 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6622-6622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs"];
m21_2905 [label="throw new NotImplementedException();", span="6624-6624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs"];
m21_2906 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", span="6622-6622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Add(object)", file="JsonSerializerTest.cs"];
m21_3931 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="9024-9024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3932 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="9026-9030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3933 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="9032-9036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3934 [label="john.Spouse = jane", span="9038-9038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3935 [label="jane.Spouse = john", span="9039-9039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3936 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="9041-9045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3937 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = null,\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9047-9054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3938 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''1''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''2''''\r\n  }\r\n]'', json)", span="9056-9071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3939 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", span="9024-9024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullReferenceResolver()", file="JsonSerializerTest.cs"];
m21_2023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4385-4385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2024 [label="ExistingValueClass d = JsonConvert.DeserializeObject<ExistingValueClass>(@''{'Dictionary':{appended:'appended',existing:'new'}}'')", span="4387-4387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2025 [label="Assert.IsNotNull(d)", span="4389-4389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2026 [label="Assert.IsNotNull(d.Dictionary)", span="4390-4390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2027 [label="Assert.AreEqual(typeof(Dictionary<string, string>), d.Dictionary.GetType())", span="4391-4391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2028 [label="Assert.AreEqual(typeof(List<string>), d.List.GetType())", span="4392-4392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2029 [label="Assert.AreEqual(2, d.Dictionary.Count)", span="4393-4393", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2030 [label="Assert.AreEqual(''new'', d.Dictionary[''existing''])", span="4394-4394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2031 [label="Assert.AreEqual(''appended'', d.Dictionary[''appended''])", span="4395-4395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2032 [label="Assert.AreEqual(1, d.List.Count)", span="4396-4396", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2033 [label="Assert.AreEqual(''existing'', d.List[0])", span="4397-4397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2034 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", span="4385-4385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePopulateDictionaryAndList()", file="JsonSerializerTest.cs"];
m21_2268 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ulong)", file="JsonSerializerTest.cs"];
m21_1008 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int)", file="JsonSerializerTest.cs"];
m21_459 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1153-1153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_460 [label="string json = @''/* Test */\r\n            {\r\n                /*Test*/''''A'''':/* Test */true/* Test */,\r\n                /* Test */''''B'''':/* Test */false/* Test */,\r\n                /* Test */''''C'''':/* Test */[\r\n                    /* Test */\r\n                    1/* Test */\r\n                ]/* Test */\r\n            }\r\n            /* Test */''", span="1155-1164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_461 [label="JObject o = (JObject)JsonConvert.DeserializeObject(json)", span="1165-1165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_467 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1172-1172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_462 [label="Assert.AreEqual(3, o.Count)", span="1166-1166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_463 [label="Assert.AreEqual(true, (bool)o[''A''])", span="1167-1167", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_464 [label="Assert.AreEqual(false, (bool)o[''B''])", span="1168-1168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_465 [label="Assert.AreEqual(1, o[''C''].Count())", span="1169-1169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_466 [label="Assert.AreEqual(1, (int)o[''C''][0])", span="1170-1170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_468 [label="json = @''{/* Test */}''", span="1174-1174", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_469 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1175-1175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_471 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1177-1177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_470 [label="Assert.AreEqual(0, o.Count)", span="1176-1176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_472 [label="json = @''{''''A'''': true/* Test */}''", span="1179-1179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_473 [label="o = (JObject)JsonConvert.DeserializeObject(json)", span="1180-1180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_476 [label="Assert.IsTrue(JToken.DeepEquals(o, JObject.Parse(json)))", span="1183-1183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_474 [label="Assert.AreEqual(1, o.Count)", span="1181-1181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_475 [label="Assert.AreEqual(true, (bool)o[''A''])", span="1182-1182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_477 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", span="1153-1153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJObjectWithComments()", file="JsonSerializerTest.cs"];
m21_1855 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3989-3989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m21_1856 [label="string json = @''[]''", span="3991-3991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m21_1857 [label="ExceptionAssert.Throws<InvalidCastException>(\r\n                () => { JsonConvert.DeserializeObject<JObject>(json); },\r\n                new[]\r\n                {\r\n                    ''Unable to cast object of type 'Newtonsoft.Json.Linq.JArray' to type 'Newtonsoft.Json.Linq.JObject'.'',\r\n                    ''Cannot cast from source type to destination type.'' // mono\r\n                })", span="3993-3999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m21_1858 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", span="3989-3989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoLinqToJson()", file="JsonSerializerTest.cs"];
m21_2749 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonSerializerTest.cs"];
m21_404 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="1054-1054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs"];
m21_405 [label="Message = message", span="1056-1056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs"];
m21_406 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", span="1054-1054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse(string)", file="JsonSerializerTest.cs"];
m21_3417 [label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65", cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="JsonSerializerTest.cs"];
m21_984 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_985 [label="Product product = new Product()", span="2140-2140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_986 [label="product.Name = ''Apple''", span="2142-2142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_987 [label="product.ExpiryDate = new DateTime(2008, 12, 28)", span="2143-2143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_988 [label="product.Price = 3.99M", span="2144-2144", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_989 [label="product.Sizes = new string[] { ''Small'', ''Medium'', ''Large'' }", span="2145-2145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_990 [label="string output = JsonConvert.SerializeObject(product)", span="2147-2147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_991 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(output, typeof(Product))", span="2159-2159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_992 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="2161-2161", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_993 [label="Assert.AreEqual(new DateTime(2008, 12, 28), deserializedProduct.ExpiryDate)", span="2162-2162", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_994 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="2163-2163", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_995 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="2164-2164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_996 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="2165-2165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_997 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="2166-2166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_998 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", span="2138-2138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_4068 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9354-9354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4069 [label="conversionType == typeof(object)", span="9356-9356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4071 [label="conversionType == typeof(int)", span="9360-9360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4073 [label="conversionType == typeof(long)", span="9364-9364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4075 [label="conversionType == typeof(string)", span="9368-9368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4070 [label="return this;", span="9358-9358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4072 [label="return (int)Value;", span="9362-9362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4074 [label="return (long)Value;", span="9366-9366", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4076 [label="return Value.ToString(CultureInfo.InvariantCulture);", span="9370-9370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4077 [label="throw new InvalidCastException();", span="9372-9372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4078 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", span="9354-9354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToType(System.Type, System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_2629 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5907-5907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2630 [label="dynamic expando = new ExpandoObject()", span="5909-5909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2631 [label="expando.Int = 1", span="5910-5910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2632 [label="expando.Decimal = 99.9d", span="5911-5911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2633 [label="expando.Complex = new ExpandoObject()", span="5912-5912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2634 [label="expando.Complex.String = ''I am a string''", span="5913-5913", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2635 [label="expando.Complex.DateTime = new DateTime(2000, 12, 20, 18, 55, 0, DateTimeKind.Utc)", span="5914-5914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2636 [label="string json = JsonConvert.SerializeObject(expando, Formatting.Indented)", span="5916-5916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2640 [label="Assert.AreEqual((long)expando.Int, newExpando[''Int''])", span="5929-5929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2642 [label="Assert.AreEqual(expando.Decimal, newExpando[''Decimal''])", span="5932-5932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2646 [label="Assert.AreEqual(expando.Complex.String, o[''String''])", span="5938-5938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2648 [label="Assert.AreEqual(expando.Complex.DateTime, o[''DateTime''])", span="5941-5941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2637 [label="StringAssert.AreEqual(@''{\r\n  ''''Int'''': 1,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Complex'''': {\r\n    ''''String'''': ''''I am a string'''',\r\n    ''''DateTime'''': ''''2000-12-20T18:55:00Z''''\r\n  }\r\n}'', json)", span="5917-5924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2638 [label="IDictionary<string, object> newExpando = JsonConvert.DeserializeObject<ExpandoObject>(json)", span="5926-5926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2639 [label="CustomAssert.IsInstanceOfType(typeof(long), newExpando[''Int''])", span="5928-5928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2641 [label="CustomAssert.IsInstanceOfType(typeof(double), newExpando[''Decimal''])", span="5931-5931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2643 [label="CustomAssert.IsInstanceOfType(typeof(ExpandoObject), newExpando[''Complex''])", span="5934-5934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2644 [label="IDictionary<string, object> o = (ExpandoObject)newExpando[''Complex'']", span="5935-5935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2645 [label="CustomAssert.IsInstanceOfType(typeof(string), o[''String''])", span="5937-5937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2647 [label="CustomAssert.IsInstanceOfType(typeof(DateTime), o[''DateTime''])", span="5940-5940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_2649 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", span="5907-5907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeExpandoObject()", file="JsonSerializerTest.cs"];
m21_737 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1594-1594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_738 [label="_serializationInfo = info", span="1596-1596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_739 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1594-1594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.PreserveReferencesCallbackTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_4083 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9380-9380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4084 [label="throw new InvalidCastException();", span="9382-9382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4085 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", span="9380-9380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_1436 [label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="48-48", cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerTest.cs"];
m21_4011 [label="Entry System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_1898 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="4053-4053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m21_1899 [label="string json = @''{''''Name'''':''''''''}''", span="4055-4055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m21_1900 [label="Person p = JsonConvert.DeserializeObject<Person>(json)", span="4057-4057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m21_1901 [label="Assert.AreEqual('''', p.Name)", span="4058-4058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m21_1902 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", span="4053-4053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyString()", file="JsonSerializerTest.cs"];
m21_3581 [label="Entry Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PocoDataContractSerializationAttributesClass.PocoDataContractSerializationAttributesClass()", file="JsonSerializerTest.cs"];
m21_4131 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", span="9345-9345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.ConvertibleId()", file="JsonSerializerTest.cs"];
m21_2782 [label="Entry Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", span="10179-10179", cluster="Newtonsoft.Json.Tests.Serialization.EnumerableClass.EnumerableClass()", file="JsonSerializerTest.cs"];
m21_204 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="522-522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m21_205 [label="var person = new\r\n            {\r\n                Name = ''James'',\r\n                Age = 1,\r\n                RoleNames = new Dictionary<string, bool>\r\n                {\r\n                    { ''IsAdmin'', true },\r\n                    { ''IsModerator'', false }\r\n                }\r\n            }", span="524-533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m21_206 [label="string json = JsonConvert.SerializeObject(person, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new DictionaryKeyContractResolver()\r\n            })", span="535-538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m21_207 [label="Assert.AreEqual(@''{\r\n  ''''NAME'''': ''''James'''',\r\n  ''''AGE'''': 1,\r\n  ''''ROLENAMES'''': {\r\n    ''''IsAdmin'''': true,\r\n    ''''IsModerator'''': false\r\n  }\r\n}'', json)", span="540-547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m21_208 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", span="522-522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolverTest()", file="JsonSerializerTest.cs"];
m21_295 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="JsonSerializerTest.cs"];
m21_559 [label="Entry Unk.IsInstanceOf", span="", cluster="Unk.IsInstanceOf", file="JsonSerializerTest.cs"];
m21_3542 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.PersonSerializable.PersonSerializable()", file="JsonSerializerTest.cs"];
m21_63 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_64 [label="DateTimeOffset d = JsonConvert.DeserializeObject<DateTimeOffset>(@''''''/Date(1418924498000+0800)/'''''')", span="275-275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_65 [label="long initialTicks = DateTimeUtils.ConvertDateTimeToJavaScriptTicks(d.DateTime, d.Offset)", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_66 [label="Assert.AreEqual(1418924498000, initialTicks)", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_67 [label="Assert.AreEqual(8, d.Offset.Hours)", span="279-279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_68 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", span="273-273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMSDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3628 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8241-8241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m21_3629 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = ''[{},1]'';\r\n\r\n                JsonSerializer serializer = new JsonSerializer();\r\n                serializer.CheckAdditionalContent = true;\r\n\r\n                var reader = new JsonTextReader(new StringReader(json));\r\n                reader.Read();\r\n                reader.Read();\r\n\r\n                serializer.Deserialize(reader, typeof(MyType));\r\n            }, ''Additional text found in JSON string after finishing deserializing object. Path '[1]', line 1, position 5.'')", span="8243-8255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m21_3630 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", span="8241-8241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterFinish()", file="JsonSerializerTest.cs"];
m21_4193 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9602-9602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4194 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9604-9604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4195 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9605-9605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4197 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9613-9616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4200 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9624-9624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4196 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9606-9611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4199 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9622-9622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4198 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9618-9620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4201 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", span="9602-9602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime_ReadAhead()", file="JsonSerializerTest.cs"];
m21_1946 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4158-4158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_1947 [label="StructTest structTest = new StructTest\r\n            {\r\n                StringProperty = ''StringProperty!'',\r\n                StringField = ''StringField'',\r\n                IntProperty = 5,\r\n                IntField = 10\r\n            }", span="4160-4166", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_1948 [label="string json = JsonConvert.SerializeObject(structTest, Formatting.Indented)", span="4168-4168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_1951 [label="Assert.AreEqual(structTest.StringProperty, deserialized.StringProperty)", span="4178-4178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_1949 [label="StringAssert.AreEqual(@''{\r\n  ''''StringField'''': ''''StringField'''',\r\n  ''''IntField'''': 10,\r\n  ''''StringProperty'''': ''''StringProperty!'''',\r\n  ''''IntProperty'''': 5\r\n}'', json)", span="4170-4175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_1950 [label="StructTest deserialized = JsonConvert.DeserializeObject<StructTest>(json)", span="4177-4177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_1952 [label="Assert.AreEqual(structTest.StringField, deserialized.StringField)", span="4179-4179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_1953 [label="Assert.AreEqual(structTest.IntProperty, deserialized.IntProperty)", span="4180-4180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_1954 [label="Assert.AreEqual(structTest.IntField, deserialized.IntField)", span="4181-4181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_1955 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", span="4158-4158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStruct()", file="JsonSerializerTest.cs"];
m21_318 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", span="767-767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CustomerWithMetadataType.CustomerWithMetadataType()", file="JsonSerializerTest.cs"];
m21_3183 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7274-7274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m21_3184 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}'';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            }, ''Unexpected character encountered while parsing value: t. Path 'PreProperty', line 2, position 18.'')", span="7276-7284", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m21_3185 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", span="7274-7274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolInt()", file="JsonSerializerTest.cs"];
m21_249 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="JsonSerializerTest.cs"];
m21_762 [label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonSerializerTest.cs"];
m21_2737 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", span="6079-6079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable()", file="JsonSerializerTest.cs"];
m21_4053 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.ConsoleWriter.ConsoleWriter()", file="JsonSerializerTest.cs"];
m21_2154 [label="Entry System.Collections.Generic.ICollection<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Contains(T)", file="JsonSerializerTest.cs"];
m21_2234 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt16(string)", file="JsonSerializerTest.cs"];
m21_3123 [label="Entry System.Convert.FromBase64String(string)", span="0-0", cluster="System.Convert.FromBase64String(string)", file="JsonSerializerTest.cs"];
m21_3580 [label="Entry Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.DataContractSerializationAttributesClass.DataContractSerializationAttributesClass()", file="JsonSerializerTest.cs"];
m21_1134 [label="Entry JavaScriptSerializer.cstr", span="", cluster="JavaScriptSerializer.cstr", file="JsonSerializerTest.cs"];
m21_3956 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", span="9114-9114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs"];
m21_3957 [label="_width = width", span="9116-9116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs"];
m21_3958 [label="_height = height", span="9117-9117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs"];
m21_3959 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", span="9114-9114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize.TypeConverterSize(int, int)", file="JsonSerializerTest.cs"];
m21_4211 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9654-9654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4212 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9656-9656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4213 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9657-9657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4215 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9665-9668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4218 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9676-9676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4214 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.ReadAhead,\r\n                Formatting = Formatting.Indented\r\n            }", span="9658-9663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4217 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9674-9674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4216 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9670-9672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m21_4219 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", span="9654-9654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset_ReadAhead()", file="JsonSerializerTest.cs"];
m21_25 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs"];
m21_26 [label="return new Subclass\r\n                {\r\n                    ID = 123,\r\n                    Name = ''ABC'',\r\n                    P1 = true,\r\n                    P2 = 44\r\n                };", span="175-181", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs"];
m21_27 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", span="173-173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateSubclass()", file="JsonSerializerTest.cs"];
m21_1105 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2433-2433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m21_1106 [label="string json = @''[''''vvv\jvvv'''']''", span="2435-2435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m21_1107 [label="ExceptionAssert.Throws<JsonReaderException>(() => { JsonConvert.DeserializeObject<List<string>>(json); }, @''Bad JSON escape sequence: \j. Path '', line 1, position 7.'')", span="2437-2437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m21_1108 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", span="2433-2433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.InvalidBackslash()", file="JsonSerializerTest.cs"];
m21_764 [label="Entry System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetValue(string, System.Type)", file="JsonSerializerTest.cs"];
m21_1352 [label="Entry Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MemberConverterClass.MemberConverterClass()", file="JsonSerializerTest.cs"];
m21_3260 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget1.Widget1()", file="JsonSerializerTest.cs"];
m21_1613 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3444-3444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_1614 [label="SubKlass i = new SubKlass(''my subprop'')", span="3446-3446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_1615 [label="i.SuperProp = ''overrided superprop''", span="3447-3447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_1616 [label="string json = JsonConvert.SerializeObject(i)", span="3449-3449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_1617 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3450-3450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_1618 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json)", span="3452-3452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_1619 [label="string newJson = JsonConvert.SerializeObject(ii)", span="3454-3454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_1620 [label="Assert.AreEqual(@''{''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3455-3455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_1621 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", span="3444-3444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_3523 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7962-7962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m21_3524 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7964-7968", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m21_3525 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7970-7973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m21_3526 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000)\/'''': 1,\r\n  ''''\/Date(1386850332000)\/'''': 2\r\n}'', json)", span="7975-7978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m21_3527 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7980-7980", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m21_3528 [label="Assert.AreEqual(2, dic2.Count)", span="7982-7982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m21_3529 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7983-7983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m21_3530 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7984-7984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m21_3531 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", span="7962-7962", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_MS()", file="JsonSerializerTest.cs"];
m21_829 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1783-1783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_830 [label="var original = new FooBar1 { foo = new Bar1 { bar = ''value'' } }", span="1785-1785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_831 [label="var json = JsonConvert.SerializeObject(original)", span="1786-1786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_832 [label="var expectedJson = @''{''''foo'''':{''''bar'''':''''value''''}}''", span="1787-1787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_833 [label="Assert.AreEqual(expectedJson, json)", span="1788-1788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_834 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", span="1783-1783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedClassHidingBasePropertySerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_1154 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonSerializerTest.cs"];
m21_2981 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2982 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="6847-6847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2983 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6848-6848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2986 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6859-6859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2987 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6860-6860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2988 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6861-6861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2989 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6862-6862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2990 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6863-6863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2984 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', json)", span="6850-6856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2985 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6858-6858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_2991 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", span="6845-6845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonSerializerTest.cs"];
m21_4012 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="9205-9205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_4013 [label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]''", span="9207-9222", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_4014 [label="IList<PersonReference> people = JsonConvert.DeserializeObject<IList<PersonReference>>(json, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="9224-9231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_4015 [label="Assert.AreEqual(2, people.Count)", span="9233-9233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_4016 [label="PersonReference john = people[0]", span="9235-9235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_4017 [label="PersonReference jane = people[1]", span="9236-9236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_4018 [label="Assert.AreEqual(john, jane.Spouse)", span="9238-9238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_4019 [label="Assert.AreEqual(jane, john.Spouse)", span="9239-9239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_4020 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", span="9205-9205", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_1834 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3954-3954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m21_1835 [label="string json = @''[]''", span="3956-3956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m21_1836 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Exception>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'System.Exception' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3958-3960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m21_1837 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", span="3954-3954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoSerializable()", file="JsonSerializerTest.cs"];
m21_1056 [label="Entry Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.GetOnlyPropertyClass.GetOnlyPropertyClass()", file="JsonSerializerTest.cs"];
m21_53 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", file="JsonSerializerTest.cs"];
m21_54 [label="return new ClassWithImplicitOperator() { Value = value };", span="250-250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", file="JsonSerializerTest.cs"];
m21_55 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", span="248-248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator(string)", file="JsonSerializerTest.cs"];
m21_3730 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8464-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m21_3731 [label="string json = @''[\r\n        1,\r\n        null\r\n      ]''", span="8466-8469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m21_3732 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int?>>(json)", span="8471-8471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m21_3733 [label="Assert.AreEqual(1, l[0])", span="8473-8473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m21_3734 [label="Assert.AreEqual(null, l[1])", span="8474-8474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m21_3735 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", span="8464-8464", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithNullableType()", file="JsonSerializerTest.cs"];
m21_4313 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9938-9938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4314 [label="var messageJObject = serializer.Deserialize<JObject>(reader)", span="9940-9940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4315 [label="messageJObject == null", span="9941-9941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4317 [label="var address = messageJObject.GetValue(''Address'', StringComparison.OrdinalIgnoreCase).ToObject<string>()", span="9946-9946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4320 [label="messageJObject.TryGetValue(''DisplayName'', StringComparison.OrdinalIgnoreCase, out displayNameToken)\r\n                    && !string.IsNullOrEmpty(displayName = displayNameToken.ToObject<string>())", span="9950-9951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4316 [label="return null;", span="9943-9943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4318 [label="JToken displayNameToken", span="9948-9948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4321 [label="return new System.Net.Mail.MailAddress(address, displayName);", span="9953-9953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4322 [label="return new System.Net.Mail.MailAddress(address);", span="9956-9956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4319 [label="string displayName", span="9949-9949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4323 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9938-9938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4385 [label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="10108-10108", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4386 [label="Value = value", span="10110-10110", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4387 [label="Constructor = ''Public Parameterized''", span="10111-10111", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_4388 [label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", span="10108-10108", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor(string)", file="JsonSerializerTest.cs"];
m21_1876 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="4019-4019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_1877 [label="string json = @''{}''", span="4021-4021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_1878 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="4025-4025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_1879 [label="Assert.Fail()", span="4026-4026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_1880 [label=JsonSerializationException, span="4028-4028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_1881 [label="Assert.IsTrue(ex.Message.StartsWith(@''Cannot deserialize the current JSON object (e.g. {''''name'''':''''value''''}) into type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Organization.Person]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.'' + Environment.NewLine +\r\n                                                    @''To fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.'' + Environment.NewLine +\r\n                                                    @''Path ''''))", span="4030-4032", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_1882 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", span="4019-4019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1324-1324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_573 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="1326-1326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_574 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1328-1328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_575 [label="settings.Binder = customBinder", span="1330-1330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_576 [label="Assert.AreEqual(customBinder, settings.Binder)", span="1331-1331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_577 [label="settings.CheckAdditionalContent = true", span="1334-1334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_578 [label="Assert.AreEqual(true, settings.CheckAdditionalContent)", span="1335-1335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_579 [label="settings.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1337-1337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_580 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, settings.ConstructorHandling)", span="1338-1338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_581 [label="settings.Context = new StreamingContext(StreamingContextStates.Other)", span="1341-1341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_582 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), settings.Context)", span="1342-1342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_584 [label="settings.ContractResolver = resolver", span="1346-1346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_585 [label="Assert.AreEqual(resolver, settings.ContractResolver)", span="1347-1347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_586 [label="settings.Converters.Add(new StringEnumConverter())", span="1349-1349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_587 [label="Assert.AreEqual(1, settings.Converters.Count)", span="1350-1350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_588 [label="settings.Culture = new CultureInfo(''en-nz'')", span="1352-1352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_589 [label="Assert.AreEqual(''en-NZ'', settings.Culture.ToString())", span="1353-1353", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_590 [label="settings.EqualityComparer = EqualityComparer<object>.Default", span="1355-1355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_591 [label="Assert.AreEqual(EqualityComparer<object>.Default, settings.EqualityComparer)", span="1356-1356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_592 [label="settings.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1358-1358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_593 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, settings.DateFormatHandling)", span="1359-1359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_594 [label="settings.DateFormatString = ''yyyy''", span="1361-1361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_595 [label="Assert.AreEqual(''yyyy'', settings.DateFormatString)", span="1362-1362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_596 [label="settings.DateParseHandling = DateParseHandling.None", span="1364-1364", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_597 [label="Assert.AreEqual(DateParseHandling.None, settings.DateParseHandling)", span="1365-1365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_598 [label="settings.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1367-1367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_599 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, settings.DateTimeZoneHandling)", span="1368-1368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_600 [label="settings.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1370-1370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_601 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, settings.DefaultValueHandling)", span="1371-1371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_602 [label="settings.FloatFormatHandling = FloatFormatHandling.Symbol", span="1373-1373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_603 [label="Assert.AreEqual(FloatFormatHandling.Symbol, settings.FloatFormatHandling)", span="1374-1374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_604 [label="settings.FloatParseHandling = FloatParseHandling.Decimal", span="1376-1376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_605 [label="Assert.AreEqual(FloatParseHandling.Decimal, settings.FloatParseHandling)", span="1377-1377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_606 [label="settings.Formatting = Formatting.Indented", span="1379-1379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_607 [label="Assert.AreEqual(Formatting.Indented, settings.Formatting)", span="1380-1380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_608 [label="settings.MaxDepth = 9001", span="1382-1382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_609 [label="Assert.AreEqual(9001, settings.MaxDepth)", span="1383-1383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_610 [label="settings.MissingMemberHandling = MissingMemberHandling.Error", span="1385-1385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_611 [label="Assert.AreEqual(MissingMemberHandling.Error, settings.MissingMemberHandling)", span="1386-1386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_612 [label="settings.NullValueHandling = NullValueHandling.Ignore", span="1388-1388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_613 [label="Assert.AreEqual(NullValueHandling.Ignore, settings.NullValueHandling)", span="1389-1389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_614 [label="settings.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1391-1391", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_615 [label="Assert.AreEqual(ObjectCreationHandling.Replace, settings.ObjectCreationHandling)", span="1392-1392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_616 [label="settings.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1394-1394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_617 [label="Assert.AreEqual(PreserveReferencesHandling.All, settings.PreserveReferencesHandling)", span="1395-1395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_618 [label="settings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1397-1397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_619 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, settings.ReferenceLoopHandling)", span="1398-1398", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_621 [label="settings.ReferenceResolver = referenceResolver", span="1402-1402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_622 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolver)", span="1403-1403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_623 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1405-1405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_624 [label="settings.ReferenceResolverProvider = () => referenceResolver", span="1407-1407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_625 [label="Assert.AreEqual(referenceResolver, settings.ReferenceResolverProvider())", span="1408-1408", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_626 [label="settings.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1410-1410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_627 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, settings.StringEscapeHandling)", span="1411-1411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_629 [label="settings.TraceWriter = traceWriter", span="1414-1414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_630 [label="Assert.AreEqual(traceWriter, settings.TraceWriter)", span="1415-1415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_631 [label="settings.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1419-1419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_632 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, settings.TypeNameAssemblyFormat)", span="1420-1420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_633 [label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, settings.TypeNameAssemblyFormatHandling)", span="1423-1423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_634 [label="settings.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1425-1425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_635 [label="Assert.AreEqual(FormatterAssemblyStyle.Simple, settings.TypeNameAssemblyFormat)", span="1427-1427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_636 [label="settings.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1431-1431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_637 [label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, settings.TypeNameAssemblyFormatHandling)", span="1432-1432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_638 [label="settings.TypeNameHandling = TypeNameHandling.All", span="1434-1434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_639 [label="Assert.AreEqual(TypeNameHandling.All, settings.TypeNameHandling)", span="1435-1435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_583 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1345-1345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_620 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1400-1400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_628 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1413-1413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_640 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", span="1324-1324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerSettingsProperties()", file="JsonSerializerTest.cs"];
m21_876 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1849-1849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m21_888 [label="_name = name", span="1851-1851", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m21_889 [label="_number = number", span="1852-1852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m21_890 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", span="1849-1849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast.DictionaryKeyCast(string, int)", file="JsonSerializerTest.cs"];
m21_2706 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="6059-6059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m21_2707 [label="var derived = new Derived(''meh'', ''woo'')", span="6061-6061", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m21_2708 [label="var settings = new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            }", span="6063-6067", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m21_2709 [label="string json = JsonConvert.SerializeObject(derived, Formatting.Indented, settings)", span="6069-6069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m21_2710 [label="var meh = JsonConvert.DeserializeObject<Base>(json, settings)", span="6071-6071", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m21_2711 [label="Assert.AreEqual(((Derived)meh).IDoWork, ''woo'')", span="6073-6073", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m21_2712 [label="Assert.AreEqual(meh.IDontWork, ''meh'')", span="6074-6074", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m21_2713 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", span="6059-6059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateSetterOnBaseClassProperty()", file="JsonSerializerTest.cs"];
m21_1862 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="4003-4003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m21_1863 [label="string json = @''new Constructor(123)''", span="4005-4005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m21_1864 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '', line 1, position 16.'')", span="4007-4007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m21_1865 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", span="4003-4003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObject()", file="JsonSerializerTest.cs"];
m21_2235 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt32(string)", file="JsonSerializerTest.cs"];
m21_416 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m21_417 [label="var input = new ResponseWithNewGenericPropertyVirtual<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1081-1086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m21_418 [label="var json = JsonConvert.SerializeObject(input)", span="1088-1088", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m21_420 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="1091-1091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m21_421 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="1092-1092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m21_422 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="1093-1093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m21_419 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyVirtual<int>>(json)", span="1089-1089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m21_423 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", span="1079-1079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentVirtual()", file="JsonSerializerTest.cs"];
m21_1408 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.ClassAndMemberConverterClass.ClassAndMemberConverterClass()", file="JsonSerializerTest.cs"];
m21_2681 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5999-5999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs"];
m21_2682 [label="return string.Format(''({0},{1},{2})'', X, Y, Z);", span="6001-6001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs"];
m21_2683 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", span="5999-5999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector.ToString()", file="JsonSerializerTest.cs"];
m21_4341 [label="Entry System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", span="0-0", cluster="System.Net.Mail.Attachment.Attachment(System.IO.Stream, string)", file="JsonSerializerTest.cs"];
m21_880 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="JsonSerializerTest.cs"];
m21_3912 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8953-8953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m21_3913 [label="bar == null", span="8955-8955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m21_3914 [label="throw new ArgumentNullException(nameof(bar));", span="8957-8957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m21_3915 [label="Bar = bar", span="8960-8960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m21_3916 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", span="8953-8953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor.FooConstructor(string)", file="JsonSerializerTest.cs"];
m21_3521 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="JsonSerializerTest.cs"];
m21_4089 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9390-9390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4090 [label="throw new InvalidCastException();", span="9392-9392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4091 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", span="9390-9390", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDateTime(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_3704 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8385-8385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m21_3705 [label="m_Item1 = item1", span="8387-8387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m21_3706 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", span="8385-8385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>.MyTuple(T1)", file="JsonSerializerTest.cs"];
m21_2932 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", span="6617-6617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CollectionClassAttributeDerived()", file="JsonSerializerTest.cs"];
m21_28 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", span="156-156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Subclass.Subclass()", file="JsonSerializerTest.cs"];
m21_2887 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6572-6572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m21_2888 [label="Title = title", span="6574-6574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m21_2889 [label="Categories = new Dictionary<string, int>()", span="6575-6575", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m21_2890 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", span="6572-6572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty.NonDefaultConstructorWithReadOnlyDictionaryProperty(string)", file="JsonSerializerTest.cs"];
m21_3775 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", span="8563-8563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloats.NullableFloats()", file="JsonSerializerTest.cs"];
m21_2673 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5981-5981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m21_2674 [label="string json = ''{'Value':123456789876543.21}''", span="5983-5983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m21_2675 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5984-5984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m21_2676 [label="reader.FloatParseHandling = FloatParseHandling.Decimal", span="5985-5985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m21_2678 [label="IDictionary<string, decimal> d = serializer.Deserialize<IDictionary<string, decimal>>(reader)", span="5989-5989", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m21_2677 [label="JsonSerializer serializer = new JsonSerializer()", span="5987-5987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m21_2679 [label="Assert.AreEqual(123456789876543.21m, d[''Value''])", span="5990-5990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m21_2680 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", span="5981-5981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalDictionaryExact()", file="JsonSerializerTest.cs"];
m21_2938 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6704-6704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m21_2939 [label="_readonlyString = ''default!''", span="6706-6706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m21_2940 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", span="6704-6704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes.PrivateMembersClassWithAttributes()", file="JsonSerializerTest.cs"];
m21_884 [label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs"];
m21_2228 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDateTime(string)", file="JsonSerializerTest.cs"];
m21_1104 [label="Entry Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass.BadJsonPropertyClass()", file="JsonSerializerTest.cs"];
m21_1299 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2789-2789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m21_1300 [label="TimeSpan ts = new TimeSpan(00, 23, 59, 1)", span="2791-2791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m21_1301 [label="string json = JsonConvert.SerializeObject(new ClassWithTimeSpan { TimeSpanField = ts }, Formatting.Indented)", span="2793-2793", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m21_1304 [label="Assert.AreEqual(ts, c.TimeSpanField)", span="2799-2799", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m21_1302 [label="StringAssert.AreEqual(@''{\r\n  ''''TimeSpanField'''': ''''23:59:01''''\r\n}'', json)", span="2794-2796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m21_1303 [label="ClassWithTimeSpan c = JsonConvert.DeserializeObject<ClassWithTimeSpan>(json)", span="2798-2798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m21_1305 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", span="2789-2789", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeSpanTest()", file="JsonSerializerTest.cs"];
m21_801 [label="Entry System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", span="0-0", cluster="System.Text.RegularExpressions.Regex.Regex(string, System.Text.RegularExpressions.RegexOptions)", file="JsonSerializerTest.cs"];
m21_3736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8479-8479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3737 [label="var tuple = new MyTuple<int>(500)", span="8481-8481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3738 [label="var json = JsonConvert.SerializeObject(tuple)", span="8482-8482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3739 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8483-8483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3741 [label="Action doStuff = () => { obj = JsonConvert.DeserializeObject<MyTuple<int>>(json); }", span="8487-8487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3740 [label="MyTuple<int> obj = null", span="8485-8485", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3742 [label="doStuff()", span="8490-8490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3743 [label="Assert.AreEqual(500, obj.Item1)", span="8491-8491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", span="8479-8479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_2205 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4926-4926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2206 [label="_stringValue = info.GetString(''stringValue'')", span="4928-4928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2207 [label="_intValue = info.GetInt32(''intValue'')", span="4929-4929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2208 [label="_dateTimeOffsetValue = (DateTimeOffset)info.GetValue(''dateTimeOffsetValue'', typeof(DateTimeOffset))", span="4930-4930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2209 [label="_personValue = (Person)info.GetValue(''personValue'', typeof(Person))", span="4931-4931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2210 [label="_nullPersonValue = (Person)info.GetValue(''nullPersonValue'', typeof(Person))", span="4932-4932", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2211 [label="_nullableInt = (int?)info.GetValue(''nullableInt'', typeof(int?))", span="4933-4933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2212 [label="_booleanValue = info.GetBoolean(''booleanValue'')", span="4935-4935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2213 [label="_byteValue = info.GetByte(''byteValue'')", span="4936-4936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2214 [label="_charValue = info.GetChar(''charValue'')", span="4937-4937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2215 [label="_dateTimeValue = info.GetDateTime(''dateTimeValue'')", span="4938-4938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2216 [label="_decimalValue = info.GetDecimal(''decimalValue'')", span="4939-4939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2217 [label="_shortValue = info.GetInt16(''shortValue'')", span="4940-4940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2218 [label="_longValue = info.GetInt64(''longValue'')", span="4941-4941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2219 [label="_sbyteValue = info.GetSByte(''sbyteValue'')", span="4942-4942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2220 [label="_floatValue = info.GetSingle(''floatValue'')", span="4943-4943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2221 [label="_ushortValue = info.GetUInt16(''ushortValue'')", span="4944-4944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2222 [label="_uintValue = info.GetUInt32(''uintValue'')", span="4945-4945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2223 [label="_ulongValue = info.GetUInt64(''ulongValue'')", span="4946-4946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2224 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="4926-4926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject.ISerializableTestObject(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_721 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1562-1562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m21_722 [label="Ratio ratio = new Ratio(2, 1)", span="1564-1564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m21_723 [label="string json = JsonConvert.SerializeObject(ratio)", span="1565-1565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m21_726 [label="Assert.AreEqual(ratio.Denominator, ratio2.Denominator)", span="1571-1571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m21_724 [label="Assert.AreEqual(@''{''''n'''':2,''''d'''':1}'', json)", span="1567-1567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m21_725 [label="Ratio ratio2 = JsonConvert.DeserializeObject<Ratio>(json)", span="1569-1569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m21_727 [label="Assert.AreEqual(ratio.Numerator, ratio2.Numerator)", span="1572-1572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m21_728 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", span="1562-1562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeISerializableIConvertible()", file="JsonSerializerTest.cs"];
m21_3237 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7379-7379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m21_3238 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7381-7381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m21_3239 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7382-7382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m21_3240 [label="Assert.AreEqual('''', dict[''k1''])", span="7384-7384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m21_3241 [label="Assert.AreEqual(''v2'', dict[''k2''])", span="7385-7385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m21_3242 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", span="7379-7379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectDictionary()", file="JsonSerializerTest.cs"];
m21_2916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6652-6652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs"];
m21_2917 [label="throw new NotImplementedException();", span="6654-6654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs"];
m21_2918 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", span="6652-6652", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Remove(object)", file="JsonSerializerTest.cs"];
m21_161 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs"];
m21_162 [label="Binding_DisallowNull o = JsonConvert.DeserializeObject<Binding_DisallowNull>(''{}'')", span="436-436", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs"];
m21_163 [label="Assert.IsNull(o.RequiredProperty)", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs"];
m21_164 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DisallowNull_NoValue()", file="JsonSerializerTest.cs"];
m21_3532 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7988-7988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m21_3533 [label="string s = (string)new JsonSerializer().Deserialize(new JsonTextReader(new StringReader('''''')))", span="7990-7990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m21_3534 [label="Assert.AreEqual('''', s)", span="7991-7991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m21_3535 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", span="7988-7988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyJsonString()", file="JsonSerializerTest.cs"];
m21_1269 [label="Entry System.Collections.Generic.Stack<T>.Stack()", span="0-0", cluster="System.Collections.Generic.Stack<T>.Stack()", file="JsonSerializerTest.cs"];
m21_3694 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8354-8354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m21_3695 [label="KeyValuePair<int, string> result =\r\n                JsonConvert.DeserializeObject<KeyValuePair<int, string>>(\r\n                    ''{key: 123, \''VALUE\'': \''test value\''}''\r\n                )", span="8356-8359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m21_3696 [label="Assert.AreEqual(123, result.Key)", span="8361-8361", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m21_3697 [label="Assert.AreEqual(''test value'', result.Value)", span="8362-8362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m21_3698 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", span="8354-8354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCaseInsensitiveKeyValuePairConverter()", file="JsonSerializerTest.cs"];
m21_210 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", span="504-504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.DictionaryKeyContractResolver()", file="JsonSerializerTest.cs"];
m21_2131 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4763-4763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs"];
m21_2132 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", span="4763-4763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ModelStateDictionary()", file="JsonSerializerTest.cs"];
m21_3004 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="JsonSerializerTest.cs"];
m21_3960 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9135-9135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs"];
m21_3961 [label="return ((sourceType == typeof(string)) || base.CanConvertFrom(context, sourceType));", span="9137-9137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs"];
m21_3962 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9135-9135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs"];
m21_1001 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2188-2188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m21_1002 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2190-2190", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m21_1003 [label="Product p = JsonConvert.DeserializeObject(value, typeof(Product)) as Product", span="2192-2192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m21_1004 [label="Assert.AreEqual(''Orange'', p.Name)", span="2194-2194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m21_1005 [label="Assert.AreEqual(new DateTime(2010, 1, 24, 12, 0, 0), p.ExpiryDate)", span="2195-2195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m21_1006 [label="Assert.AreEqual(3.99m, p.Price)", span="2196-2196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m21_1007 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", span="2188-2188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonConvertSerializer()", file="JsonSerializerTest.cs"];
m21_1553 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3281-3281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m21_1554 [label="Person person = new Person\r\n            {\r\n                Name = ''Mike Manager'',\r\n                BirthDate = new DateTime(1983, 8, 3, 0, 0, 0, DateTimeKind.Utc),\r\n                Department = ''IT'',\r\n                LastModified = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc)\r\n            }", span="3283-3289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m21_1555 [label="return person;", span="3290-3290", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m21_1556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", span="3281-3281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GetPerson()", file="JsonSerializerTest.cs"];
m21_16 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="75-75", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonSerializerTest.cs"];
m21_816 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="422-422", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonSerializerTest.cs"];
m21_1062 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass.SetOnlyPropertyClass()", file="JsonSerializerTest.cs"];
m21_3947 [label="Entry Size.cstr", span="", cluster="Size.cstr", file="JsonSerializerTest.cs"];
m21_1606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3428-3428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1607 [label="string json = ''{ 'testProperty1': 'value' }''", span="3432-3432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1608 [label="JsonConvert.DeserializeObject<ConstructorAndRequiredTestClass>(json)", span="3433-3433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1609 [label="Assert.Fail()", span="3435-3435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1610 [label=JsonSerializationException, span="3437-3437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1611 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'TestProperty2' not found in JSON. Path ''''))", span="3439-3439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1612 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", span="3428-3428", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_3052 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="1042-1042", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonSerializerTest.cs"];
m21_433 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", span="1039-1039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ResponseWithNewGenericPropertyOverride<T>.ResponseWithNewGenericPropertyOverride()", file="JsonSerializerTest.cs"];
m21_1510 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3176-3176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m21_1511 [label="string json = @''{\r\n  ''''FirstName'''': ''''Bob''''\r\n}''", span="3180-3182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m21_1512 [label="JsonConvert.DeserializeObject<RequiredMembersClass>(json)", span="3184-3184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m21_1513 [label="Assert.Fail()", span="3185-3185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m21_1514 [label=JsonSerializationException, span="3187-3187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m21_1515 [label="Assert.IsTrue(ex.Message.StartsWith(''Required property 'LastName' not found in JSON. Path ''''))", span="3189-3189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m21_1516 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", span="3176-3176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredMembersClassMissingRequiredProperty()", file="JsonSerializerTest.cs"];
m21_4324 [label="Entry Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", span="500-500", cluster="Newtonsoft.Json.Linq.JObject.GetValue(string, System.StringComparison)", file="JsonSerializerTest.cs"];
m21_1503 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3159-3159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_1504 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                };\r\n\r\n                string json = JsonConvert.SerializeObject(requiredMembersClass);\r\n            }, ''Cannot write a null value for property 'FirstName'. Property requires a value. Path ''.'')", span="3161-3172", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_1505 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", span="3159-3159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRequiredMembersClassNullRequiredValueProperty()", file="JsonSerializerTest.cs"];
m21_3687 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8334-8334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_3688 [label="return true;", span="8336-8336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_3689 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", span="8334-8334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_813 [label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154", cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonSerializerTest.cs"];
m21_2717 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6095-6095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2718 [label="info.AddValue(''Name'', _name)", span="6097-6097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2719 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6095-6095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_4119 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9440-9440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4120 [label="throw new InvalidCastException();", span="9442-9442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4121 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", span="9440-9440", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt32(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_1936 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonSerializerTest.cs"];
m21_2423 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", span="5463-5463", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pos.Pos()", file="JsonSerializerTest.cs"];
m21_983 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs"];
m21_4079 [label="Entry System.InvalidCastException.InvalidCastException()", span="0-0", cluster="System.InvalidCastException.InvalidCastException()", file="JsonSerializerTest.cs"];
m21_3351 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7587-7587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m21_3352 [label="var person = PersonWithPrivateConstructor.CreatePerson()", span="7589-7589", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m21_3353 [label="person.Name = ''John Doe''", span="7590-7590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m21_3354 [label="person.Age = 25", span="7591-7591", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m21_3355 [label="var serializedPerson = JsonConvert.SerializeObject(person)", span="7593-7593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m21_3357 [label="Assert.AreEqual(person.Name, roundtrippedPerson.Name)", span="7596-7596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m21_3356 [label="var roundtrippedPerson = JsonConvert.DeserializeObject<PersonWithPrivateConstructor>(serializedPerson)", span="7594-7594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m21_3358 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", span="7587-7587", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateConstructor()", file="JsonSerializerTest.cs"];
m21_4389 [label="Entry Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="10145-10145", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs"];
m21_4390 [label="Constructor = ''NonPublic''", span="10147-10147", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs"];
m21_4391 [label="Exit Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", span="10145-10145", cluster="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor.PublicConstructorOverridenByJsonConstructor()", file="JsonSerializerTest.cs"];
m21_1726 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3730-3730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_1727 [label="string json = @''/*comment1*/ { /*comment2*/\r\n        ''''Name'''': /*comment3*/ ''''Apple'''' /*comment4*/, /*comment5*/\r\n        ''''ExpiryDate'''': ''''\/Date(1230422400000)\/'''',\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': /*comment6*/ [ /*comment7*/\r\n          ''''Small'''', /*comment8*/\r\n          ''''Medium'''' /*comment9*/,\r\n          /*comment10*/ ''''Large''''\r\n        /*comment11*/ ] /*comment12*/\r\n      } /*comment13*/''", span="3732-3741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_1728 [label="Product deserializedProduct = (Product)JsonConvert.DeserializeObject(json, typeof(Product))", span="3743-3743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_1729 [label="Assert.AreEqual(''Apple'', deserializedProduct.Name)", span="3745-3745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_1730 [label="Assert.AreEqual(new DateTime(2008, 12, 28, 0, 0, 0, DateTimeKind.Utc), deserializedProduct.ExpiryDate)", span="3746-3746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_1731 [label="Assert.AreEqual(3.99m, deserializedProduct.Price)", span="3747-3747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_1732 [label="Assert.AreEqual(''Small'', deserializedProduct.Sizes[0])", span="3748-3748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_1733 [label="Assert.AreEqual(''Medium'', deserializedProduct.Sizes[1])", span="3749-3749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_1734 [label="Assert.AreEqual(''Large'', deserializedProduct.Sizes[2])", span="3750-3750", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_1735 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", span="3730-3730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypedObjectDeserializationWithComments()", file="JsonSerializerTest.cs"];
m21_973 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2123-2123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_974 [label="Store store = new Store()", span="2125-2125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_975 [label="string jsonText = JsonConvert.SerializeObject(store)", span="2127-2127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_977 [label="Assert.AreEqual(store.Establised, deserializedStore.Establised)", span="2131-2131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_978 [label="Assert.AreEqual(store.product.Count, deserializedStore.product.Count)", span="2132-2132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_976 [label="Store deserializedStore = (Store)JsonConvert.DeserializeObject(jsonText, typeof(Store))", span="2129-2129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_979 [label="Console.WriteLine(jsonText)", span="2134-2134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_980 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", span="2123-2123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PersonTypedObjectDeserialization()", file="JsonSerializerTest.cs"];
m21_2402 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JsonSerializerTest.cs"];
m21_3830 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8738-8738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m21_3831 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", span="8738-8738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionary<TKey, TValue>.NoConstructorReadOnlyDictionary()", file="JsonSerializerTest.cs"];
m21_3560 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="8041-8041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m21_3561 [label="Event1 e = new Event1\r\n            {\r\n                EventName = ''Blackadder III'',\r\n                Venue = ''Gryphon Theatre'',\r\n                Performances = new List<DateTime>\r\n                {\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336458600000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336545000000),\r\n                    DateTimeUtils.ConvertJavaScriptTicksToDateTime(1336636800000)\r\n                }\r\n            }", span="8043-8053", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m21_3562 [label="string json = JsonConvert.SerializeObject(e, Formatting.Indented)", span="8055-8055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m21_3563 [label="StringAssert.AreEqual(@''{\r\n  ''''EventName'''': ''''Blackadder III'''',\r\n  ''''Venue'''': ''''Gryphon Theatre'''',\r\n  ''''Performances'''': [\r\n    new Date(\r\n      1336458600000\r\n    ),\r\n    new Date(\r\n      1336545000000\r\n    ),\r\n    new Date(\r\n      1336636800000\r\n    )\r\n  ]\r\n}'', json)", span="8066-8080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m21_3564 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", span="8041-8041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m21_1233 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2657-2657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1234 [label="ClassWithArray wibble = new ClassWithArray()", span="2659-2659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1235 [label="wibble.Foo = ''hello''", span="2660-2660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1236 [label="wibble.Bar.Add(1)", span="2661-2661", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1237 [label="wibble.Bar.Add(2)", span="2662-2662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1238 [label="wibble.Bar.Add(3)", span="2663-2663", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1239 [label="string json = JsonConvert.SerializeObject(wibble)", span="2664-2664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1240 [label="ClassWithArray wibbleOut = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2666-2666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1241 [label="Assert.AreEqual(''hello'', wibbleOut.Foo)", span="2667-2667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1242 [label="Assert.AreEqual(5, wibbleOut.Bar.Count)", span="2669-2669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1243 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[0])", span="2670-2670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1244 [label="Assert.AreEqual(int.MaxValue, wibbleOut.Bar[1])", span="2671-2671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1245 [label="Assert.AreEqual(1, wibbleOut.Bar[2])", span="2672-2672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1246 [label="Assert.AreEqual(2, wibbleOut.Bar[3])", span="2673-2673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1247 [label="Assert.AreEqual(3, wibbleOut.Bar[4])", span="2674-2674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_1248 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", span="2657-2657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeSerializedJson()", file="JsonSerializerTest.cs"];
m21_2289 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5106-5106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2290 [label="Person person = new Person()", span="5108-5108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2291 [label="person.BirthDate = new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc)", span="5109-5109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2292 [label="person.LastModified = person.BirthDate", span="5110-5110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2293 [label="person.Department = ''Department!''", span="5111-5111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2294 [label="person.Name = ''Name!''", span="5112-5112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2298 [label="ISerializableTestObject o = new ISerializableTestObject(''String!'', int.MinValue, dateTimeOffset, person)", span="5122-5122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2295 [label="DateTimeOffset dateTimeOffset = new DateTimeOffset(2000, 12, 20, 22, 59, 59, TimeSpan.FromHours(2))", span="5114-5114", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2296 [label="string dateTimeOffsetText", span="5115-5115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2304 [label="Assert.AreEqual(dateTimeOffset, o2._dateTimeOffsetValue)", span="5156-5156", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2297 [label="dateTimeOffsetText = @''\/Date(977345999000+0200)\/''", span="5117-5117", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2300 [label="StringAssert.AreEqual(@''{\r\n  ''''stringValue'''': ''''String!'''',\r\n  ''''intValue'''': -2147483648,\r\n  ''''dateTimeOffsetValue'''': '''''' + dateTimeOffsetText + @'''''',\r\n  ''''personValue'''': {\r\n    ''''Name'''': ''''Name!'''',\r\n    ''''BirthDate'''': ''''\/Date(946688461000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(946688461000)\/''''\r\n  },\r\n  ''''nullPersonValue'''': null,\r\n  ''''nullableInt'''': null,\r\n  ''''booleanValue'''': false,\r\n  ''''byteValue'''': 0,\r\n  ''''charValue'''': ''''\u0000'''',\r\n  ''''dateTimeValue'''': ''''\/Date(-62135596800000)\/'''',\r\n  ''''decimalValue'''': 0.0,\r\n  ''''shortValue'''': 0,\r\n  ''''longValue'''': 0,\r\n  ''''sbyteValue'''': 0,\r\n  ''''floatValue'''': 0.0,\r\n  ''''ushortValue'''': 0,\r\n  ''''uintValue'''': 0,\r\n  ''''ulongValue'''': 0\r\n}'', json)", span="5128-5151", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2299 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="5124-5127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2301 [label="ISerializableTestObject o2 = JsonConvert.DeserializeObject<ISerializableTestObject>(json)", span="5153-5153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2302 [label="Assert.AreEqual(''String!'', o2._stringValue)", span="5154-5154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2303 [label="Assert.AreEqual(int.MinValue, o2._intValue)", span="5155-5155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2305 [label="Assert.AreEqual(''Name!'', o2._personValue.Name)", span="5157-5157", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2306 [label="Assert.AreEqual(null, o2._nullPersonValue)", span="5158-5158", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2307 [label="Assert.AreEqual(null, o2._nullableInt)", span="5159-5159", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_2308 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", span="5106-5106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeISerializableTestObject_MsAjax()", file="JsonSerializerTest.cs"];
m21_3770 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8574-8574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m21_3771 [label="NullableFloats floats = new NullableFloats\r\n            {\r\n                Object = double.NaN,\r\n                ObjectNull = null,\r\n                Float = float.NaN,\r\n                NullableDouble = double.NaN,\r\n                NullableFloat = null\r\n            }", span="8576-8583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m21_3772 [label="string json = JsonConvert.SerializeObject(floats, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                FloatFormatHandling = FloatFormatHandling.DefaultValue\r\n            })", span="8585-8588", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m21_3773 [label="StringAssert.AreEqual(@''{\r\n  ''''Object'''': 0.0,\r\n  ''''Float'''': 0.0,\r\n  ''''Double'''': 0.0,\r\n  ''''NullableFloat'''': null,\r\n  ''''NullableDouble'''': null,\r\n  ''''ObjectNull'''': null\r\n}'', json)", span="8590-8597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m21_3774 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", span="8574-8574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableFloatingPoint()", file="JsonSerializerTest.cs"];
m21_4382 [label="Entry Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="10103-10103", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs"];
m21_4383 [label="Constructor = ''NonPublic''", span="10105-10105", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs"];
m21_4384 [label="Exit Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", span="10103-10103", cluster="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor.NonPublicConstructorWithJsonConstructor()", file="JsonSerializerTest.cs"];
m21_1380 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2928-2928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1381 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2930-2930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1382 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2931-2931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1386 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2938-2938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1387 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2939-2939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1383 [label="string json = JsonConvert.SerializeObject(m1, new JavaScriptDateTimeConverter())", span="2933-2933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1384 [label="Assert.AreEqual(@''{''''DefaultConverter'''':new Date(0),''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2934-2934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1385 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JavaScriptDateTimeConverter())", span="2936-2936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1388 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", span="2928-2928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_3197 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7300-7300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m21_3198 [label="string json = @''{''''Id'''':null}''", span="7302-7302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m21_3199 [label="var c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7303-7303", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m21_3200 [label="Assert.AreEqual(null, c.Id)", span="7305-7305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m21_3201 [label="json = @''{''''Id'''':''''d8220a4b-75b1-4b7a-8112-b7bdae956a45''''}''", span="7307-7307", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m21_3202 [label="c = JsonConvert.DeserializeObject<NullableGuid>(json)", span="7308-7308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m21_3203 [label="Assert.AreEqual(new Guid(''d8220a4b-75b1-4b7a-8112-b7bdae956a45''), c.Id)", span="7310-7310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m21_3204 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", span="7300-7300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableGuid()", file="JsonSerializerTest.cs"];
m21_1622 [label="Entry Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.SubKlass.SubKlass(string)", file="JsonSerializerTest.cs"];
m21_3016 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="149-149", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs"];
m21_1766 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3834-3834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1767 [label="string json = @''{\r\n  ''''Children'''': [\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''First''''\r\n    },\r\n    {\r\n      ''''Children'''': null,\r\n      ''''Text'''': ''''Second''''\r\n    }\r\n  ],\r\n  ''''Text'''': ''''Blah, blah, blah''''\r\n}''", span="3836-3848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1768 [label="Content content = JsonConvert.DeserializeObject<Content>(json)", span="3850-3850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1769 [label="Assert.AreEqual(''Blah, blah, blah'', content.Text)", span="3852-3852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1770 [label="Assert.AreEqual(2, content.Children.Count)", span="3853-3853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1771 [label="Assert.AreEqual(''First'', content.Children[0].Text)", span="3854-3854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1772 [label="Assert.AreEqual(''Second'', content.Children[1].Text)", span="3855-3855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_1773 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", span="3834-3834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerableAsObject()", file="JsonSerializerTest.cs"];
m21_966 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="JsonSerializerTest.cs"];
m21_960 [label="Entry DataContractJsonSerializer.cstr", span="", cluster="DataContractJsonSerializer.cstr", file="JsonSerializerTest.cs"];
m21_4363 [label="Entry lambda expression", span="10030-10030", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_74 [label="Entry lambda expression", span="287-287", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_75 [label="JsonConvert.DeserializeObject<IList<bool>>(@''[null]'')", span="287-287", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_76 [label="Exit lambda expression", span="287-287", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_80 [label="Entry lambda expression", span="295-295", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_81 [label="JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']'')", span="295-295", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_82 [label="Exit lambda expression", span="295-295", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_86 [label="Entry lambda expression", span="303-303", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_87 [label="JsonConvert.DeserializeObject<IList<bool>>(@''['pie']'')", span="303-303", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_88 [label="Exit lambda expression", span="303-303", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_92 [label="Entry lambda expression", span="311-311", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_93 [label="JsonConvert.DeserializeObject<IList<bool>>(@''['']'')", span="311-311", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_94 [label="Exit lambda expression", span="311-311", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_152 [label="Entry lambda expression", span="424-424", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_153 [label="JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}'')", span="424-424", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_154 [label="Exit lambda expression", span="424-424", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_158 [label="Entry lambda expression", span="430-430", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_159 [label="JsonConvert.DeserializeObject<Binding_DisallowNull>(''{requiredProperty:''}'')", span="430-430", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_160 [label="Exit lambda expression", span="430-430", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_169 [label="Entry lambda expression", span="443-443", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_170 [label="JsonConvert.DeserializeObject<FooRequired>(''{Bars:''}'')", span="443-443", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_171 [label="Exit lambda expression", span="443-443", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_180 [label="Entry lambda expression", span="479-479", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_181 [label="JsonConvert.SerializeObject(new Binding_DisallowNull())", span="479-479", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_182 [label="Exit lambda expression", span="479-479", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_193 [label="Entry lambda expression", span="501-501", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_194 [label="JsonConvert.SerializeObject(new DictionaryWithNoNull())", span="501-501", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_195 [label="Exit lambda expression", span="501-501", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_221 [label="Entry lambda expression", span="554-554", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_224 [label="Entry lambda expression", span="558-558", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_227 [label="Entry lambda expression", span="562-562", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_230 [label="Entry lambda expression", span="566-566", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_233 [label="Entry lambda expression", span="570-570", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_236 [label="Entry lambda expression", span="574-574", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_239 [label="Entry lambda expression", span="578-578", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_222 [label="JsonConvert.DeserializeObject<IList<object>>(''[1,'')", span="554-554", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_223 [label="Exit lambda expression", span="554-554", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_225 [label="JsonConvert.DeserializeObject<IList<int>>(''[1,'')", span="558-558", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_226 [label="Exit lambda expression", span="558-558", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_228 [label="JsonConvert.DeserializeObject<IList<int>>(''[1'')", span="562-562", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_229 [label="Exit lambda expression", span="562-562", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_231 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1,'')", span="566-566", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_232 [label="Exit lambda expression", span="566-566", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_234 [label="JsonConvert.DeserializeObject<IDictionary<string, int>>(''{'key':1'')", span="570-570", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_235 [label="Exit lambda expression", span="570-570", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_237 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1,'')", span="574-574", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_238 [label="Exit lambda expression", span="574-574", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_240 [label="JsonConvert.DeserializeObject<IncompleteTestClass>(''{'key':1'')", span="578-578", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_241 [label="Exit lambda expression", span="578-578", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_263 [label="JsonConvert.SerializeObject(c1)", span="617-617", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_262 [label="Entry lambda expression", span="617-617", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_265 [label="Entry lambda expression", span="630-630", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_268 [label="Entry lambda expression", span="634-634", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_264 [label="Exit lambda expression", span="617-617", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_266 [label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{}'')", span="630-630", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_267 [label="Exit lambda expression", span="630-630", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_269 [label="JsonConvert.DeserializeObject<RequiredPropertyTestClass>(@''{''''Name'''':null}'')", span="634-634", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_270 [label="Exit lambda expression", span="634-634", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_285 [label="JsonConvert.SerializeObject(c1)", span="659-659", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_284 [label="Entry lambda expression", span="659-659", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_287 [label="Entry lambda expression", span="669-669", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_286 [label="Exit lambda expression", span="659-659", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_288 [label="JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}'')", span="669-669", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_289 [label="Exit lambda expression", span="669-669", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_362 [label="a.ErrorContext.Handled = true", span="945-945", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_361 [label="Entry lambda expression", span="945-945", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_363 [label="Exit lambda expression", span="945-945", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_457 [label="JsonConvert.DeserializeObject<List<Version>>(json)", span="1149-1149", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_456 [label="Entry lambda expression", span="1149-1149", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_458 [label="Exit lambda expression", span="1149-1149", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_568 [label="var serializationBinder = serializer.Binder", span="1220-1220", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_567 [label="Entry lambda expression", span="1217-1223", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_569 [label="serializationBinder.ToString()", span="1222-1222", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_570 [label="Exit lambda expression", span="1217-1223", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_643 [label=referenceResolver, span="1407-1407", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_642 [label="Entry lambda expression", span="1407-1407", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_644 [label="Exit lambda expression", span="1407-1407", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_718 [label="var serializationBinder = serializerProxy.Binder", span="1457-1457", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_717 [label="Entry lambda expression", span="1454-1460", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_719 [label="serializationBinder.ToString()", span="1459-1459", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_720 [label="Exit lambda expression", span="1454-1460", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_967 [label="Entry lambda expression", span="2103-2103", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_970 [label="Entry lambda expression", span="2106-2106", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_968 [label="p.Name", span="2103-2103", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_969 [label="Exit lambda expression", span="2103-2103", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_971 [label="p.Name", span="2106-2106", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_972 [label="Exit lambda expression", span="2106-2106", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1101 [label="Entry lambda expression", span="2429-2429", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1102 [label="JsonConvert.SerializeObject(new BadJsonPropertyClass())", span="2429-2429", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1103 [label="Exit lambda expression", span="2429-2429", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1110 [label="JsonConvert.DeserializeObject<List<string>>(json)", span="2437-2437", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1109 [label="Entry lambda expression", span="2437-2437", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1111 [label="Exit lambda expression", span="2437-2437", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1412 [label="Entry lambda expression", span="2980-2984", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1413 [label="IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass()", span="2982-2982", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1414 [label="JsonConvert.SerializeObject(c)", span="2983-2983", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1415 [label="Exit lambda expression", span="2980-2984", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1506 [label="Entry lambda expression", span="3161-3172", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1507 [label="RequiredMembersClass requiredMembersClass = new RequiredMembersClass\r\n                {\r\n                    FirstName = null,\r\n                    BirthDate = new DateTime(2000, 10, 10, 10, 10, 10, DateTimeKind.Utc),\r\n                    LastName = null,\r\n                    MiddleName = null\r\n                }", span="3163-3169", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1508 [label="string json = JsonConvert.SerializeObject(requiredMembersClass)", span="3171-3171", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1509 [label="Exit lambda expression", span="3161-3172", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1551 [label="InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass))", span="3277-3277", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1550 [label="Entry lambda expression", span="3275-3278", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1552 [label="Exit lambda expression", span="3275-3278", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1656 [label="Entry lambda expression", span="3529-3535", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1657 [label="JsonPropertyWithHandlingValues o = new JsonPropertyWithHandlingValues()", span="3531-3531", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1658 [label="o.ReferenceLoopHandlingErrorProperty = o", span="3532-3532", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1659 [label="JsonConvert.SerializeObject(o, Formatting.Indented, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore })", span="3534-3534", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1660 [label="Exit lambda expression", span="3529-3535", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1798 [label="JsonConvert.DeserializeObject<Event>(json)", span="3898-3898", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1797 [label="Entry lambda expression", span="3898-3898", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1799 [label="Exit lambda expression", span="3898-3898", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1825 [label="JsonConvert.DeserializeObject<Person>(json)", span="3937-3937", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1824 [label="Entry lambda expression", span="3937-3937", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1826 [label="Exit lambda expression", span="3937-3937", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1832 [label="JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3947-3947", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1831 [label="Entry lambda expression", span="3947-3947", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1833 [label="Exit lambda expression", span="3947-3947", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1839 [label="JsonConvert.DeserializeObject<Exception>(json)", span="3958-3958", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1838 [label="Entry lambda expression", span="3958-3958", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1840 [label="Exit lambda expression", span="3958-3958", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1846 [label="JsonConvert.DeserializeObject<double>(json)", span="3970-3970", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1845 [label="Entry lambda expression", span="3970-3970", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1847 [label="Exit lambda expression", span="3970-3970", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1853 [label="JsonConvert.DeserializeObject<DynamicDictionary>(json)", span="3981-3981", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1852 [label="Entry lambda expression", span="3981-3981", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1854 [label="Exit lambda expression", span="3981-3981", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1860 [label="JsonConvert.DeserializeObject<JObject>(json)", span="3994-3994", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1859 [label="Entry lambda expression", span="3994-3994", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1861 [label="Exit lambda expression", span="3994-3994", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1867 [label="JsonConvert.DeserializeObject<Person>(json)", span="4007-4007", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1866 [label="Entry lambda expression", span="4007-4007", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1868 [label="Exit lambda expression", span="4007-4007", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1874 [label="JsonConvert.DeserializeObject<List<Person>>(json)", span="4015-4015", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1873 [label="Entry lambda expression", span="4015-4015", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1875 [label="Exit lambda expression", span="4015-4015", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1888 [label="JsonConvert.PopulateObject(json, new Person())", span="4041-4041", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1887 [label="Entry lambda expression", span="4041-4041", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1889 [label="Exit lambda expression", span="4041-4041", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1896 [label="JsonConvert.PopulateObject(json, new List<Person>())", span="4049-4049", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1895 [label="Entry lambda expression", span="4049-4049", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1897 [label="Exit lambda expression", span="4049-4049", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1906 [label="Entry lambda expression", span="4064-4075", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1907 [label="JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4066-4074", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1908 [label="Exit lambda expression", span="4064-4075", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1913 [label="Entry lambda expression", span="4081-4092", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1914 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:0}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4083-4091", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1915 [label="Exit lambda expression", span="4081-4092", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1919 [label="Entry lambda expression", span="4098-4109", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1920 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4100-4108", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1921 [label="Exit lambda expression", span="4098-4109", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1925 [label="Entry lambda expression", span="4115-4126", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1926 [label="JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                })", span="4117-4125", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_1927 [label="Exit lambda expression", span="4115-4126", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2038 [label="Entry lambda expression", span="4433-4433", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2039 [label="x.Id == id", span="4433-4433", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2040 [label="Exit lambda expression", span="4433-4433", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2075 [label="JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="4532-4536", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2074 [label="Entry lambda expression", span="4532-4536", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2076 [label="Exit lambda expression", span="4532-4536", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2468 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5545-5545", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2467 [label="Entry lambda expression", span="5545-5545", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2469 [label="Exit lambda expression", span="5545-5545", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2473 [label="Entry lambda expression", span="5551-5566", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2474 [label="var reference = new Dictionary<string, object>()", span="5555-5555", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2475 [label="reference.Add(''$ref'', 1)", span="5556-5556", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2476 [label="reference.Add(''$id'', 1)", span="5557-5557", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2480 [label="child.Add(''Father'', reference)", span="5562-5562", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2477 [label="var child = new Dictionary<string, object>()", span="5559-5559", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2478 [label="child.Add(''_id'', 2)", span="5560-5560", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2479 [label="child.Add(''Name'', ''Isabell'')", span="5561-5561", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2481 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5564-5564", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2482 [label="JsonConvert.DeserializeObject<Dictionary<string, object>>(json)", span="5565-5565", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2483 [label="Exit lambda expression", span="5551-5566", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2584 [label="JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5785-5785", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2583 [label="Entry lambda expression", span="5785-5785", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2585 [label="Exit lambda expression", span="5785-5785", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2799 [label="Entry lambda expression", span="6271-6271", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2800 [label="JsonConvert.DeserializeObject(''null'', typeof(DateTime))", span="6271-6271", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_2801 [label="Exit lambda expression", span="6271-6271", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3129 [label="JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                })", span="7151-7154", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3128 [label="Entry lambda expression", span="7149-7155", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3130 [label="Exit lambda expression", span="7149-7155", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3153 [label="List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json)", span="7207-7207", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3152 [label="Entry lambda expression", span="7205-7208", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3154 [label="Exit lambda expression", span="7205-7208", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3167 [label="JsonConvert.DeserializeObject<ConvertableIntTestClass>(json)", span="7247-7247", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3166 [label="Entry lambda expression", span="7247-7247", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3168 [label="Exit lambda expression", span="7247-7247", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3186 [label="Entry lambda expression", span="7276-7284", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3187 [label="string json = @''{\r\n  ''''PreProperty'''': true,\r\n  ''''PostProperty'''': ''''-1''''\r\n}''", span="7278-7281", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3188 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7283-7283", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3189 [label="Exit lambda expression", span="7276-7284", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3193 [label="Entry lambda expression", span="7290-7296", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3194 [label="string json = @''{\r\n  ''''PreProperty'''': ''", span="7292-7293", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3195 [label="JsonConvert.DeserializeObject<TestObjects.MyClass>(json)", span="7295-7295", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3196 [label="Exit lambda expression", span="7290-7296", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3288 [label="Entry lambda expression", span="7473-7473", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3289 [label="JsonConvert.DeserializeObject<double>('''')", span="7473-7473", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3290 [label="Exit lambda expression", span="7473-7473", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3294 [label="Entry lambda expression", span="7479-7479", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3295 [label="JsonConvert.DeserializeObject<StringComparison>('''')", span="7479-7479", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3296 [label="Exit lambda expression", span="7479-7479", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3300 [label="Entry lambda expression", span="7485-7485", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3301 [label="JsonConvert.DeserializeObject<int>('''')", span="7485-7485", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3302 [label="Exit lambda expression", span="7485-7485", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3310 [label="Entry lambda expression", span="7499-7499", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3311 [label="JsonConvert.DeserializeObject<double>(null)", span="7499-7499", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3312 [label="Exit lambda expression", span="7499-7499", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3316 [label="Entry lambda expression", span="7511-7511", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3317 [label="JsonConvert.DeserializeObject(null)", span="7511-7511", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3318 [label="Exit lambda expression", span="7511-7511", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3436 [label="errors.Add(e.ErrorContext.Error.Message)", span="7750-7750", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3437 [label="e.ErrorContext.Handled = true", span="7751-7751", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3435 [label="Entry lambda expression", span="7748-7752", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3438 [label="Exit lambda expression", span="7748-7752", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3451 [label="errors.Add(e.ErrorContext.Error.Message)", span="7775-7775", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3452 [label="e.ErrorContext.Handled = true", span="7776-7776", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3450 [label="Entry lambda expression", span="7773-7777", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3453 [label="Exit lambda expression", span="7773-7777", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3466 [label="errors.Add(e.ErrorContext.Error.Message)", span="7798-7798", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3467 [label="e.ErrorContext.Handled = true", span="7799-7799", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3465 [label="Entry lambda expression", span="7796-7800", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3468 [label="Exit lambda expression", span="7796-7800", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3594 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8152-8152", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3593 [label="Entry lambda expression", span="8152-8152", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3595 [label="Exit lambda expression", span="8152-8152", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3619 [label="s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8199-8199", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3618 [label="Entry lambda expression", span="8199-8199", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3620 [label="Exit lambda expression", span="8199-8199", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3631 [label="Entry lambda expression", span="8243-8255", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3632 [label="string json = ''[{},1]''", span="8245-8245", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3633 [label="JsonSerializer serializer = new JsonSerializer()", span="8247-8247", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3635 [label="var reader = new JsonTextReader(new StringReader(json))", span="8250-8250", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3634 [label="serializer.CheckAdditionalContent = true", span="8248-8248", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3638 [label="serializer.Deserialize(reader, typeof(MyType))", span="8254-8254", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3636 [label="reader.Read()", span="8251-8251", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3637 [label="reader.Read()", span="8252-8252", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3639 [label="Exit lambda expression", span="8243-8255", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3664 [label="serializer.Deserialize(reader, typeof(MyType))", span="8299-8299", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3663 [label="Entry lambda expression", span="8299-8299", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3665 [label="Exit lambda expression", span="8299-8299", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3747 [label="obj = JsonConvert.DeserializeObject<MyTuple<int>>(json)", span="8487-8487", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3746 [label="Entry lambda expression", span="8487-8487", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3748 [label="Exit lambda expression", span="8487-8487", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3827 [label="Entry lambda expression", span="8732-8732", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3828 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]'')", span="8732-8732", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3829 [label="Exit lambda expression", span="8732-8732", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3835 [label="Entry lambda expression", span="8747-8747", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3836 [label="JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}'')", span="8747-8747", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3837 [label="Exit lambda expression", span="8747-8747", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3845 [label="JsonConvert.DeserializeObject<IList<long>>(json)", span="8761-8761", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3844 [label="Entry lambda expression", span="8761-8761", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_3846 [label="Exit lambda expression", span="8761-8761", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4030 [label="Entry lambda expression", span="9264-9264", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4031 [label="new IdReferenceResolver()", span="9264-9264", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4032 [label="Exit lambda expression", span="9264-9264", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4277 [label="Entry lambda expression", span="9833-9833", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4278 [label="JsonConvert.SerializeObject(new ErroringTestClass())", span="9833-9833", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4279 [label="Exit lambda expression", span="9833-9833", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4284 [label="Entry lambda expression", span="9839-9839", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4285 [label="JsonConvert.DeserializeObject<string>(''020474068'')", span="9839-9839", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4286 [label="Exit lambda expression", span="9839-9839", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4305 [label="JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter())", span="9922-9926", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4304 [label="Entry lambda expression", span="9920-9927", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4306 [label="Exit lambda expression", span="9920-9927", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4364 [label="JsonConvert.DeserializeObject<CompletionDataRequest>(s)", span="10030-10030", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_4365 [label="Exit lambda expression", span="10030-10030", cluster="lambda expression", file="JsonSerializerTest.cs"];
m21_388 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JsonSerializerTest.cs"];
m21_3710 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8413-8413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m21_3711 [label="string json", span="8415-8415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m21_3712 [label="IList<double> d = new List<double> { 1.1, double.NaN, double.PositiveInfinity }", span="8416-8416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m21_3713 [label="json = JsonConvert.SerializeObject(d)", span="8418-8418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m21_3714 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.Symbol })", span="8421-8421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m21_3715 [label="json = JsonConvert.SerializeObject(d, new JsonSerializerSettings { FloatFormatHandling = FloatFormatHandling.DefaultValue })", span="8424-8424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m21_3716 [label="Assert.AreEqual(''[1.1,0.0,0.0]'', json)", span="8427-8427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m21_3717 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", span="8413-8413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFloatingPointHandling()", file="JsonSerializerTest.cs"];
m21_4138 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9480-9480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m21_4139 [label="string originalUri = ''https://test.com?m=a%2bb''", span="9482-9482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m21_4140 [label="Uri uriWithPlus = new Uri(originalUri)", span="9484-9484", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m21_4143 [label="Assert.AreEqual(originalUri, uriWithPlus2.OriginalString)", span="9490-9490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m21_4141 [label="string jsonWithPlus = JsonConvert.SerializeObject(uriWithPlus)", span="9486-9486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m21_4142 [label="Uri uriWithPlus2 = JsonConvert.DeserializeObject<Uri>(jsonWithPlus)", span="9488-9488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m21_4144 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", span="9480-9480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RoundtripUriOriginalString()", file="JsonSerializerTest.cs"];
m21_1390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2943-2943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m21_1391 [label="DateTime date = Convert.ToDateTime(''1970-01-01T00:00:00Z'').ToUniversalTime()", span="2945-2945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m21_1392 [label="MemberConverterClass c = new MemberConverterClass\r\n            {\r\n                DefaultConverter = date,\r\n                MemberConverter = date\r\n            }", span="2947-2951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m21_1393 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="2953-2953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m21_1394 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultConverter'''': ''''1970-01-01T00:00:00Z'''',\r\n  ''''MemberConverter'''': ''''1970-01-01T00:00:00Z''''\r\n}'', json)", span="2955-2958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m21_1395 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", span="2943-2943", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConverterAttributeExample()", file="JsonSerializerTest.cs"];
m21_3832 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8745-8745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs"];
m21_3833 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyDictionary<int, int>>(''{'1':1}''), ''Cannot deserialize readonly or fixed size dictionary: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyDictionary`2[System.Int32,System.Int32]. Path '1', line 1, position 5.'')", span="8747-8747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs"];
m21_3834 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", span="8745-8745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyDictionaryTest()", file="JsonSerializerTest.cs"];
m21_248 [label="Entry Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", span="62-62", cluster="Newtonsoft.Json.Converters.StringEnumConverter.StringEnumConverter()", file="JsonSerializerTest.cs"];
m21_443 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonSerializerTest.cs"];
m21_1916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4096-4096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m21_1917 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:''}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 15.'')", span="4098-4109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m21_1918 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", span="4096-4096", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeEmptyStringToIntError()", file="JsonSerializerTest.cs"];
m21_356 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="936-936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m21_357 [label="string json = @''{\r\n    ParentId: 1,\r\n    ChildId: 333333333333333333333333333333333333333\r\n}''", span="938-941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m21_358 [label="Link l = JsonConvert.DeserializeObject<Link>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (s, a) => a.ErrorContext.Handled = true\r\n            })", span="943-946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m21_359 [label="Assert.AreEqual(0, l.ChildId)", span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m21_360 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", span="936-936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadIntegerWithError()", file="JsonSerializerTest.cs"];
m21_364 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m21_365 [label="ObservableCollection<string> s = JsonConvert.DeserializeObject<ObservableCollection<string>>(''['1','2']'')", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m21_366 [label="Assert.AreEqual(2, s.Count)", span="957-957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m21_367 [label="Assert.AreEqual(''1'', s[0])", span="958-958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m21_368 [label="Assert.AreEqual(''2'', s[1])", span="959-959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m21_369 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", span="954-954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObservableCollection()", file="JsonSerializerTest.cs"];
m21_1993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4258-4258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_1994 [label="string googleSearchText = @''{\r\n        ''''responseData'''': {\r\n          ''''results'''': [\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''url'''': ''''http://en.wikipedia.org/wiki/Paris_Hilton'''',\r\n              ''''visibleUrl'''': ''''en.wikipedia.org'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:TwrPfhd22hYJ:en.wikipedia.org'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton - Wikipedia, the free encyclopedia'''',\r\n              ''''content'''': ''''[1] In 2006, she released her debut album...''''\r\n            },\r\n            {\r\n              ''''GsearchResultClass'''': ''''GwebSearch'''',\r\n              ''''unescapedUrl'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''url'''': ''''http://www.imdb.com/name/nm0385296/'''',\r\n              ''''visibleUrl'''': ''''www.imdb.com'''',\r\n              ''''cacheUrl'''': ''''http://www.google.com/search?q=cache:1i34KkqnsooJ:www.imdb.com'''',\r\n              ''''title'''': ''''<b>Paris Hilton</b>'''',\r\n              ''''titleNoFormatting'''': ''''Paris Hilton'''',\r\n              ''''content'''': ''''Self: Zoolander. Socialite <b>Paris Hilton</b>...''''\r\n            }\r\n          ],\r\n          ''''cursor'''': {\r\n            ''''pages'''': [\r\n              {\r\n                ''''start'''': ''''0'''',\r\n                ''''label'''': 1\r\n              },\r\n              {\r\n                ''''start'''': ''''4'''',\r\n                ''''label'''': 2\r\n              },\r\n              {\r\n                ''''start'''': ''''8'''',\r\n                ''''label'''': 3\r\n              },\r\n              {\r\n                ''''start'''': ''''12'''',\r\n                ''''label'''': 4\r\n              }\r\n            ],\r\n            ''''estimatedResultCount'''': ''''59600000'''',\r\n            ''''currentPageIndex'''': 0,\r\n            ''''moreResultsUrl'''': ''''http://www.google.com/search?oe=utf8&ie=utf8...''''\r\n          }\r\n        },\r\n        ''''responseDetails'''': null,\r\n        ''''responseStatus'''': 200\r\n      }''", span="4260-4310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_1995 [label="JObject googleSearch = JObject.Parse(googleSearchText)", span="4312-4312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_1996 [label="IList<JToken> results = googleSearch[''responseData''][''results''].Children().ToList()", span="4315-4315", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_1997 [label="IList<SearchResult> searchResults = new List<SearchResult>()", span="4318-4318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_1998 [label=results, span="4319-4319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_2000 [label="searchResults.Add(searchResult)", span="4322-4322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_2001 [label="Assert.AreEqual(2, searchResults.Count)", span="4333-4333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_2002 [label="Assert.AreEqual(''<b>Paris Hilton</b> - Wikipedia, the free encyclopedia'', searchResults[0].Title)", span="4334-4334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_2003 [label="Assert.AreEqual(''<b>Paris Hilton</b>'', searchResults[1].Title)", span="4335-4335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_1999 [label="SearchResult searchResult = JsonConvert.DeserializeObject<SearchResult>(result.ToString())", span="4321-4321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_2004 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", span="4258-4258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeFragment()", file="JsonSerializerTest.cs"];
m21_859 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1821-1821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_860 [label="var dictStore = new Dictionary<DictionaryKeyCast, int>()", span="1824-1824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_861 [label="var i = 0", span="1825-1825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_863 [label="dictStore.Add(new DictionaryKeyCast(i.ToString(CultureInfo.InvariantCulture), i), i)", span="1827-1827", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_869 [label="jsonSerializer.Serialize(streamWriter, dictStore)", span="1834-1834", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_862 [label="i < 800", span="1825-1825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_864 [label="i++", span="1825-1825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_865 [label="var settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="1829-1829", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_866 [label="var jsonSerializer = JsonSerializer.Create(settings)", span="1830-1830", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_867 [label="var ms = new MemoryStream()", span="1831-1831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_873 [label="var deserialize = jsonSerializer.Deserialize(new StreamReader(ms), typeof(Dictionary<DictionaryKeyCast, int>))", span="1840-1840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_868 [label="var streamWriter = new StreamWriter(ms)", span="1833-1833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_871 [label="ms.Seek(0, SeekOrigin.Begin)", span="1837-1837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_870 [label="streamWriter.Flush()", span="1835-1835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_872 [label="var stopWatch = Stopwatch.StartNew()", span="1839-1839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_874 [label="stopWatch.Stop()", span="1841-1841", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_875 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", span="1821-1821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConversionOperator()", file="JsonSerializerTest.cs"];
m21_2162 [label="Entry System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.CopyTo(T[], int)", file="JsonSerializerTest.cs"];
m21_1542 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3269-3269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m21_1543 [label="InterfacePropertyTestClass testClass = new InterfacePropertyTestClass()", span="3271-3271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m21_1544 [label="testClass.co = new Co()", span="3272-3272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m21_1545 [label="String strFromTest = JsonConvert.SerializeObject(testClass)", span="3273-3273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m21_1546 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                InterfacePropertyTestClass testFromDe = (InterfacePropertyTestClass)JsonConvert.DeserializeObject(strFromTest, typeof(InterfacePropertyTestClass));\r\n            }, @''Could not create an instance of type Newtonsoft.Json.Tests.TestObjects.ICo. Type is an interface or abstract class and cannot be instantiated. Path 'co.Name', line 1, position 14.'')", span="3275-3278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m21_1547 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", span="3269-3269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInterfaceProperty()", file="JsonSerializerTest.cs"];
m21_148 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m21_2313 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5176-5176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m21_2314 [label="List<KVPair<string, string>> kvPairs =\r\n                JsonConvert.DeserializeObject<List<KVPair<string, string>>>(\r\n                    ''[{\''Key\'':\''Two\'',\''Value\'':\''2\''},{\''Key\'':\''One\'',\''Value\'':\''1\''}]'')", span="5178-5180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m21_2315 [label="Assert.AreEqual(2, kvPairs.Count)", span="5182-5182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m21_2316 [label="Assert.AreEqual(''Two'', kvPairs[0].Key)", span="5183-5183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m21_2317 [label="Assert.AreEqual(''2'', kvPairs[0].Value)", span="5184-5184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m21_2318 [label="Assert.AreEqual(''One'', kvPairs[1].Key)", span="5185-5185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m21_2319 [label="Assert.AreEqual(''1'', kvPairs[1].Value)", span="5186-5186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m21_2320 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", span="5176-5176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUsingNonDefaultConstructorWithLeftOverValues()", file="JsonSerializerTest.cs"];
m21_3690 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8347-8347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m21_3691 [label="var actual = JsonConvert.DeserializeObject<MyType>(@''{ ''''MyProperty'''':{''''Key'''':''''Y''''}}'')", span="8349-8349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m21_3692 [label="Assert.AreEqual(''X'', actual.MyProperty[''Key''])", span="8350-8350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m21_3693 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", span="8347-8347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryItemConverter()", file="JsonSerializerTest.cs"];
m21_4098 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9405-9405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4099 [label="return (short)Value;", span="9407-9407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4100 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", span="9405-9405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_2107 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4688-4688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs"];
m21_2110 [label="C1 = c1", span="4690-4690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs"];
m21_2111 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", span="4688-4688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2.CircularConstructor2(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1)", file="JsonSerializerTest.cs"];
m21_802 [label="Entry System.Text.RegularExpressions.Regex.ToString()", span="0-0", cluster="System.Text.RegularExpressions.Regex.ToString()", file="JsonSerializerTest.cs"];
m21_3236 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", span="147-147", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, Newtonsoft.Json.TypeNameAssemblyFormatHandling, Newtonsoft.Json.Serialization.ISerializationBinder)", file="JsonSerializerTest.cs"];
m21_3307 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7496-7496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m21_3308 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject<double>(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7498-7504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m21_3309 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", span="7496-7496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDoubleFromNullString()", file="JsonSerializerTest.cs"];
m21_1970 [label="Entry Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Foo.Foo()", file="JsonSerializerTest.cs"];
m21_1979 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4223-4223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1980 [label="Dictionary<Person, int> dictionary = new Dictionary<Person, int>()", span="4225-4225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1981 [label="dictionary.Add(new Person { Name = ''p1'' }, 1)", span="4226-4226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1982 [label="dictionary.Add(new Person { Name = ''p2'' }, 2)", span="4227-4227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1983 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4229-4229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1984 [label="StringAssert.AreEqual(@''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 2\r\n}'', json)", span="4231-4234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1985 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", span="4223-4223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_716 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="60-60", cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2267 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, uint)", file="JsonSerializerTest.cs"];
m21_482 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1192-1192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m21_483 [label="CommentTestObject o = JsonConvert.DeserializeObject<CommentTestObject>(@''{/* Test */}'')", span="1194-1194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m21_484 [label="Assert.AreEqual(null, o.A)", span="1195-1195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m21_485 [label="o = JsonConvert.DeserializeObject<CommentTestObject>(@''{''''A'''': true/* Test */}'')", span="1197-1197", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m21_486 [label="Assert.AreEqual(true, o.A)", span="1198-1198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m21_487 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", span="1192-1192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCommentTestObjectWithComments()", file="JsonSerializerTest.cs"];
m21_1293 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2774-2774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m21_1294 [label="string json = JsonConvert.SerializeObject(StringComparison.CurrentCultureIgnoreCase)", span="2776-2776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m21_1295 [label="Assert.AreEqual(@''1'', json)", span="2777-2777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m21_1296 [label="StringComparison s = JsonConvert.DeserializeObject<StringComparison>(json)", span="2779-2779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m21_1297 [label="Assert.AreEqual(StringComparison.CurrentCultureIgnoreCase, s)", span="2780-2780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m21_1298 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", span="2774-2774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumTest()", file="JsonSerializerTest.cs"];
m21_3269 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7441-7441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3270 [label="object v = JsonConvert.DeserializeObject<double?>('''')", span="7443-7443", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3271 [label="Assert.IsNull(v)", span="7444-7444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3272 [label="v = JsonConvert.DeserializeObject<char?>('''')", span="7446-7446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3273 [label="Assert.IsNull(v)", span="7447-7447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3274 [label="v = JsonConvert.DeserializeObject<int?>('''')", span="7449-7449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3275 [label="Assert.IsNull(v)", span="7450-7450", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3276 [label="v = JsonConvert.DeserializeObject<decimal?>('''')", span="7452-7452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3277 [label="Assert.IsNull(v)", span="7453-7453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3278 [label="v = JsonConvert.DeserializeObject<DateTime?>('''')", span="7455-7455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3279 [label="Assert.IsNull(v)", span="7456-7456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3280 [label="v = JsonConvert.DeserializeObject<DateTimeOffset?>('''')", span="7458-7458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3281 [label="Assert.IsNull(v)", span="7459-7459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3282 [label="v = JsonConvert.DeserializeObject<byte[]>('''')", span="7461-7461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3283 [label="Assert.IsNull(v)", span="7462-7462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_3284 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", span="7441-7441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStrings()", file="JsonSerializerTest.cs"];
m21_1945 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorReadonlyFields.ConstructorReadonlyFields(string, int)", file="JsonSerializerTest.cs"];
m21_3877 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8862-8862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m21_3878 [label="string json = @''{\r\n  ''''MyNullableBool'''': '''''''',\r\n  ''''MyNullableInteger'''': '''''''',\r\n  ''''MyNullableDateTime'''': '''''''',\r\n  ''''MyNullableDateTimeOffset'''': '''''''',\r\n  ''''MyNullableDecimal'''': ''''''''\r\n}''", span="8864-8870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m21_3879 [label="NullableTestClass c2 = JsonConvert.DeserializeObject<NullableTestClass>(json)", span="8872-8872", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m21_3880 [label="Assert.IsNull(c2.MyNullableBool)", span="8873-8873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m21_3881 [label="Assert.IsNull(c2.MyNullableInteger)", span="8874-8874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m21_3882 [label="Assert.IsNull(c2.MyNullableDateTime)", span="8875-8875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m21_3883 [label="Assert.IsNull(c2.MyNullableDateTimeOffset)", span="8876-8876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m21_3884 [label="Assert.IsNull(c2.MyNullableDecimal)", span="8877-8877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m21_3885 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", span="8862-8862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestStringToNullableDeserialization()", file="JsonSerializerTest.cs"];
m21_3169 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7252-7252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3170 [label="Widget widget = new Widget { Id = new WidgetId { Value = ''id'' } }", span="7254-7254", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3171 [label="string json = JsonConvert.SerializeObject(widget)", span="7256-7256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3172 [label="Assert.AreEqual(@''{''''Id'''':{''''Value'''':''''id''''}}'', json)", span="7258-7258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3173 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", span="7252-7252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_1261 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m21_1262 [label="Stack<object> s = new Stack<object>()", span="2731-2731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m21_1263 [label="s.Push(1)", span="2732-2732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m21_1264 [label="s.Push(2)", span="2733-2733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m21_1265 [label="s.Push(3)", span="2734-2734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m21_1266 [label="string json = JsonConvert.SerializeObject(s)", span="2736-2736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m21_1267 [label="Assert.AreEqual(''[3,2,1]'', json)", span="2737-2737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m21_1268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", span="2729-2729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStack()", file="JsonSerializerTest.cs"];
m21_1136 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1137 [label="List<DateTime> testDates = new List<DateTime>\r\n            {\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Local),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified),\r\n                new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc),\r\n            }", span="2480-2488", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1138 [label="MemoryStream ms = new MemoryStream()", span="2490-2490", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1140 [label="s.WriteObject(ms, testDates)", span="2492-2492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1144 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2498-2498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1139 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<DateTime>))", span="2491-2491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1141 [label="ms.Seek(0, SeekOrigin.Begin)", span="2493-2493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1142 [label="StreamReader sr = new StreamReader(ms)", span="2494-2494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1143 [label="string expected = sr.ReadToEnd()", span="2496-2496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1145 [label="Assert.AreEqual(expected, result)", span="2499-2499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_1146 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", span="2478-2478", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeTest()", file="JsonSerializerTest.cs"];
m21_3647 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", span="8272-8272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3648 [label="string json = @''{ ''''MyProperty'''':{''''Key'''':''''Value''''}} /*this is a comment */\r\n// this is also a comment\r\nThis is just junk, though.''", span="8274-8276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3649 [label="JsonSerializer serializer = new JsonSerializer()", span="8278-8278", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3650 [label="var reader = new JsonTextReader(new StringReader(json))", span="8280-8280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3651 [label="MyType mt = (MyType)serializer.Deserialize(reader, typeof(MyType))", span="8282-8282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3652 [label="Assert.AreEqual(1, mt.MyProperty.Count)", span="8283-8283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_3653 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", span="8272-8272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterCommentsCheckNotRequested()", file="JsonSerializerTest.cs"];
m21_1487 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredMembersClass.RequiredMembersClass()", file="JsonSerializerTest.cs"];
m21_1693 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3648-3648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m21_1694 [label="return ''_name: '' + _name + '', _age: '' + Age + '', Rank: '' + Rank + '', JsonTitle: '' + Title;", span="3650-3650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m21_1695 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", span="3648-3648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.ToString()", file="JsonSerializerTest.cs"];
m21_3035 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6937-6937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3036 [label="TestObject test = new TestObject(''Test'', new byte[] { 72, 63, 62, 71, 92, 55 })", span="6939-6939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3037 [label="JsonSerializer serializer = new JsonSerializer()", span="6941-6941", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3042 [label="serializer.Serialize(jsonWriter, test)", span="6948-6948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3038 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="6942-6942", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3047 [label="TestObject newObject = (TestObject)serializer.Deserialize(jsonReader)", span="6958-6958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3039 [label="byte[] objectBytes", span="6944-6944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3040 [label="MemoryStream stream = new MemoryStream()", span="6945-6945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3041 [label="JsonWriter jsonWriter = new JsonTextWriter(new StreamWriter(stream))", span="6946-6946", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3044 [label="objectBytes = stream.ToArray()", span="6951-6951", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3043 [label="jsonWriter.Flush()", span="6949-6949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3045 [label="MemoryStream stream = new MemoryStream(objectBytes)", span="6954-6954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3046 [label="JsonReader jsonReader = new JsonTextReader(new StreamReader(stream))", span="6955-6955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3048 [label="Assert.AreEqual(''Test'', newObject.Name)", span="6960-6960", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3049 [label="CollectionAssert.AreEquivalent(new byte[] { 72, 63, 62, 71, 92, 55 }, newObject.Data)", span="6961-6961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_3050 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", span="6937-6937", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeNameHandling()", file="JsonSerializerTest.cs"];
m21_1122 [label="Entry Unk.ReadObject", span="", cluster="Unk.ReadObject", file="JsonSerializerTest.cs"];
m21_1549 [label="Entry Newtonsoft.Json.Tests.TestObjects.Co.Co()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Co.Co()", file="JsonSerializerTest.cs"];
m21_2400 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", span="5377-5377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XNodeTestObject.XNodeTestObject()", file="JsonSerializerTest.cs"];
m21_2151 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4826-4826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m21_2152 [label="return ((IDictionary<string, T>)_innerDictionary).Contains(item);", span="4828-4828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m21_2153 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", span="4826-4826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Contains(System.Collections.Generic.KeyValuePair<string, T>)", file="JsonSerializerTest.cs"];
m21_1057 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2279-2279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1058 [label="string value = JsonConvert.SerializeObject(new SetOnlyPropertyClass())", span="2281-2281", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1059 [label="SetOnlyPropertyClass c = JsonConvert.DeserializeObject<SetOnlyPropertyClass>(value)", span="2283-2283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1060 [label="Assert.AreEqual(c.Field, ''Field'')", span="2285-2285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1061 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", span="2279-2279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_51 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonSerializerTest.cs"];
m21_2055 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", span="4407-4407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KeyValueId.KeyValueId()", file="JsonSerializerTest.cs"];
m21_274 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_275 [label="RequiredPropertyConstructorTestClass c1 = new RequiredPropertyConstructorTestClass(null)", span="656-656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_276 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.SerializeObject(c1),\r\n                ''Cannot write a null value for property 'Name'. Property requires a value. Path ''.'')", span="658-660", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_277 [label="RequiredPropertyConstructorTestClass c2 = new RequiredPropertyConstructorTestClass(''Name!'')", span="662-662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_278 [label="string json = JsonConvert.SerializeObject(c2)", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_279 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="666-666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_280 [label="ExceptionAssert.Throws<JsonSerializationException>(\r\n                () => JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{}''),\r\n                ''Required property 'Name' not found in JSON. Path '', line 1, position 2.'')", span="668-670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_281 [label="RequiredPropertyConstructorTestClass c3 = JsonConvert.DeserializeObject<RequiredPropertyConstructorTestClass>(@''{''''Name'''':''''Name!''''}'')", span="672-672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_282 [label="Assert.AreEqual(''Name!'', c3.Name)", span="674-674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_283 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", span="654-654", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTest()", file="JsonSerializerTest.cs"];
m21_3423 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7743-7743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3424 [label="string json = ''{}''", span="7745-7745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3425 [label="IList<string> errors = new List<string>()", span="7746-7746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3427 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7754-7757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3426 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7748-7752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3429 [label="Assert.AreEqual(4, errors.Count)", span="7760-7760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3430 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' not found in JSON. Path ''''))", span="7761-7761", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3431 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' not found in JSON. Path ''''))", span="7762-7762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3432 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AllowNullProperty' not found in JSON. Path ''''))", span="7763-7763", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3433 [label="Assert.IsTrue(errors[3].StartsWith(''Required property 'AlwaysProperty' not found in JSON. Path ''''))", span="7764-7764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3428 [label="Assert.IsNotNull(o)", span="7759-7759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_3434 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", span="7743-7743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeMissing()", file="JsonSerializerTest.cs"];
m21_4055 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.TypeConverterJsonConverter.TypeConverterJsonConverter()", file="JsonSerializerTest.cs"];
m21_402 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="1050-1050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonSerializerTest.cs"];
m21_403 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", span="1050-1050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse.SimpleResponse()", file="JsonSerializerTest.cs"];
m21_3990 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="JsonSerializerTest.cs"];
m21_3073 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="7011-7011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3074 [label="ReflectionContractResolver contractResolver = new ReflectionContractResolver()", span="7013-7013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3075 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="7015-7018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3078 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="7021-7024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3080 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="7032-7040", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3076 [label="StaticTestClass.y = 2", span="7019-7019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3077 [label="StaticTestClass.z = 3", span="7020-7020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3079 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="7026-7030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3081 [label="Assert.AreEqual(-1, c2.x)", span="7042-7042", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3082 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="7043-7043", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3083 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="7044-7044", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_3084 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", span="7011-7011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticReflection()", file="JsonSerializerTest.cs"];
m21_2922 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6662-6662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_2923 [label="throw new NotImplementedException();", span="6664-6664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_2924 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", span="6662-6662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_3216 [label="Entry Newtonsoft.Json.Tests.TestObjects.NullableGuid.NullableGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.NullableGuid.NullableGuid()", file="JsonSerializerTest.cs"];
m21_4299 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", span="9870-9870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableLongTestClass.NullableLongTestClass()", file="JsonSerializerTest.cs"];
m21_3261 [label="Entry Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.WidgetId1.WidgetId1()", file="JsonSerializerTest.cs"];
m21_3373 [label="Entry Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.MetroPropertyNameResolver.MetroPropertyNameResolver()", file="JsonSerializerTest.cs"];
m21_4130 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", span="9451-9451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestClassConvertable.TestClassConvertable()", file="JsonSerializerTest.cs"];
m21_1444 [label="Entry Newtonsoft.Json.Linq.JValue.ToString()", span="891-891", cluster="Newtonsoft.Json.Linq.JValue.ToString()", file="JsonSerializerTest.cs"];
m21_1567 [label="Entry Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.LogEntry.LogEntry()", file="JsonSerializerTest.cs"];
m21_915 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", span="1938-1938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractNewProperties.SubWithoutContractNewProperties()", file="JsonSerializerTest.cs"];
m21_1362 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2889-2889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1363 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2891-2891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1364 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2892-2892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1365 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat,\r\n            })", span="2894-2897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1366 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2898-2898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1367 [label="var m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json, new JsonSerializerSettings\r\n            {\r\n                DateParseHandling = DateParseHandling.None\r\n            })", span="2900-2903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1368 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.DefaultConverter)", span="2905-2905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1369 [label="Assert.AreEqual(new DateTime(1970, 1, 1), m2.MemberConverter)", span="2906-2906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_1370 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", span="2889-2889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate_DateParseNone()", file="JsonSerializerTest.cs"];
m21_3860 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8808-8808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3861 [label="string json = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="8810-8814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3862 [label="IList<float> floats = JsonConvert.DeserializeObject<IList<float>>(json)", span="8816-8816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3866 [label="IList<double> doubles = JsonConvert.DeserializeObject<IList<double>>(json)", span="8821-8821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3863 [label="Assert.AreEqual(float.NaN, floats[0])", span="8817-8817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3864 [label="Assert.AreEqual(float.PositiveInfinity, floats[1])", span="8818-8818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3865 [label="Assert.AreEqual(float.NegativeInfinity, floats[2])", span="8819-8819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3867 [label="Assert.AreEqual(float.NaN, doubles[0])", span="8822-8822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3868 [label="Assert.AreEqual(float.PositiveInfinity, doubles[1])", span="8823-8823", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3869 [label="Assert.AreEqual(float.NegativeInfinity, doubles[2])", span="8824-8824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_3870 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", span="8808-8808", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadStringFloatingPointSymbols()", file="JsonSerializerTest.cs"];
m21_2177 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4864-4864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m21_2178 [label="return _innerDictionary.Remove(key);", span="4866-4866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m21_2179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", span="4864-4864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Remove(string)", file="JsonSerializerTest.cs"];
m21_481 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="155-155", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m21_2783 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6241-6241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m21_2784 [label="ComplexItem i = new ComplexItem()", span="6243-6243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m21_2785 [label="string json = JsonConvert.SerializeObject(i, Formatting.Indented)", span="6245-6245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m21_2786 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': null\r\n}'', json)", span="6247-6249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m21_2787 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", span="6241-6241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAttributesOnBase()", file="JsonSerializerTest.cs"];
m21_883 [label="Entry System.IO.StreamWriter.Flush()", span="0-0", cluster="System.IO.StreamWriter.Flush()", file="JsonSerializerTest.cs"];
m21_1841 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3965-3965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m21_1842 [label="string json = @''[]''", span="3967-3967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m21_1843 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => { JsonConvert.DeserializeObject<double>(json); },\r\n                @''Unexpected character encountered while parsing value: [. Path '', line 1, position 1.'')", span="3969-3971", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m21_1844 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", span="3965-3965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoDouble()", file="JsonSerializerTest.cs"];
m21_3339 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7561-7561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3340 [label="NullableDateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7563-7569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3341 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7571-7571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3342 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7572-7572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3343 [label="Assert.AreEqual(''Pre'', c.PreField)", span="7573-7573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3344 [label="Assert.AreEqual(''Post'', c.PostField)", span="7574-7574", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3345 [label="NullableDateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<NullableDateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':null,''''DateTimeOffsetField'''':null,''''PostField'''':''''Post''''}'')", span="7576-7578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3346 [label="Assert.AreEqual(null, c2.DateTimeField)", span="7580-7580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3347 [label="Assert.AreEqual(null, c2.DateTimeOffsetField)", span="7581-7581", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3348 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="7582-7582", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3349 [label="Assert.AreEqual(''Post'', c2.PostField)", span="7583-7583", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3350 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", span="7561-7561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableDeserializeUTC()", file="JsonSerializerTest.cs"];
m21_375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_376 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''[''''2000-01-01T01:01:01+00:00'''']''))", span="975-975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_377 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="976-976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_381 [label="serializer.Populate(reader, l)", span="982-982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_384 [label="Assert.AreEqual(DateParseHandling.DateTime, reader.DateParseHandling)", span="987-987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_378 [label="JsonSerializer serializer = new JsonSerializer()", span="978-978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_379 [label="serializer.DateParseHandling = DateParseHandling.DateTimeOffset", span="979-979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_380 [label="IList<object> l = new List<object>()", span="981-981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_382 [label="Assert.AreEqual(typeof(DateTimeOffset), l[0].GetType())", span="984-984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_383 [label="Assert.AreEqual(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero), l[0])", span="985-985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_385 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", span="973-973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateResetSettings()", file="JsonSerializerTest.cs"];
m21_1070 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeTestClass.JsonIgnoreAttributeTestClass()", file="JsonSerializerTest.cs"];
m21_2436 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5491-5491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2437 [label="throw new NotImplementedException();", span="5493-5493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2438 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="5491-5491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2128 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", span="4725-4725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTestClass.DataContractJsonSerializerTestClass()", file="JsonSerializerTest.cs"];
m21_4274 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9831-9831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs"];
m21_4275 [label="ExceptionAssert.Throws<JsonException>(() => JsonConvert.SerializeObject(new ErroringTestClass()), ''Error creating 'Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+ErroringJsonConverter'.'')", span="9833-9833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs"];
m21_4276 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", span="9831-9831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErrorCreatingJsonConverter()", file="JsonSerializerTest.cs"];
m21_165 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="JsonSerializerTest.cs"];
m21_3235 [label="Entry Newtonsoft.Json.Tests.TestObjects.Item.Item()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.Item.Item()", file="JsonSerializerTest.cs"];
m21_4330 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9959-9959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4331 [label="throw new NotImplementedException();", span="9961-9961", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4332 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9959-9959", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_1342 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2856-2856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m21_1343 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2858-2858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m21_1344 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2859-2859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m21_1348 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2866-2866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m21_1349 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2867-2867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m21_1345 [label="string json = JsonConvert.SerializeObject(m1)", span="2861-2861", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m21_1346 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''1970-01-01T00:00:00Z'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2862-2862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m21_1347 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2864-2864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m21_1350 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", span="2856-2856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_IsoDate()", file="JsonSerializerTest.cs"];
m21_4122 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9445-9445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4123 [label="throw new InvalidCastException();", span="9447-9447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4124 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", span="9445-9445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_2155 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4831-4831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m21_2156 [label="return _innerDictionary.ContainsKey(key);", span="4833-4833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m21_2157 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", span="4831-4831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.ContainsKey(string)", file="JsonSerializerTest.cs"];
m21_563 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonSerializerTest.cs"];
m21_2427 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5477-5477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2428 [label="Pos p = (Pos)value", span="5479-5479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2430 [label="writer.WriteRawValue(String.Format(''new Pos({0},{1})'', p.X, p.Y))", span="5483-5483", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2431 [label="writer.WriteNull()", span="5487-5487", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2429 [label="p != null", span="5481-5481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2432 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5477-5477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_729 [label="Entry Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", span="37-37", cluster="Newtonsoft.Json.Tests.TestObjects.Ratio.Ratio(int, int)", file="JsonSerializerTest.cs"];
m21_3160 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", span="7212-7212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertableIntTestClass.ConvertableIntTestClass()", file="JsonSerializerTest.cs"];
m21_3387 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="JsonSerializerTest.cs"];
m21_561 [label="Entry Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", span="76-76", cluster="Newtonsoft.Json.Serialization.CamelCasePropertyNamesContractResolver.CamelCasePropertyNamesContractResolver()", file="JsonSerializerTest.cs"];
m21_3161 [label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1764-1764", cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonSerializerTest.cs"];
m21_1820 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3933-3933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m21_1821 [label="string json = @''[]''", span="3935-3935", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m21_1822 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Person>(json); }, @''Cannot deserialize the current JSON array (e.g. [1,2,3]) into type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' because the type requires a JSON object (e.g. {''''name'''':''''value''''}) to deserialize correctly.\r\nTo fix this error either change the JSON to a JSON object (e.g. {''''name'''':''''value''''}) or change the deserialized type to an array or a type that implements a collection interface (e.g. ICollection, IList) like List<T> that can be deserialized from a JSON array. JsonArrayAttribute can also be added to the type to force it to deserialize from a JSON array.\r\nPath '', line 1, position 1.'')", span="3937-3939", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m21_1823 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", span="3933-3933", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeArrayIntoObject()", file="JsonSerializerTest.cs"];
m21_2582 [label="Entry System.Collections.Specialized.StringDictionary.StringDictionary()", span="0-0", cluster="System.Collections.Specialized.StringDictionary.StringDictionary()", file="JsonSerializerTest.cs"];
m21_390 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="1002-1002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m21_391 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClass { IsTransient = true }))", span="1004-1004", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m21_392 [label="var childClass = JsonConvert.DeserializeObject<ChildClass>(@''{''''IsTransient'''':true}'')", span="1006-1006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m21_393 [label="Assert.AreEqual(true, childClass.IsTransient)", span="1007-1007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m21_394 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", span="1002-1002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewProperty()", file="JsonSerializerTest.cs"];
m21_3439 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7768-7768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3440 [label="string json = ''{'NonAttributeProperty':null,'UnsetProperty':null,'AllowNullProperty':null,'AlwaysProperty':null}''", span="7770-7770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3441 [label="IList<string> errors = new List<string>()", span="7771-7771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3443 [label="var o = JsonConvert.DeserializeObject<RequiredObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = error\r\n            })", span="7779-7782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3442 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7773-7777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3445 [label="Assert.AreEqual(3, errors.Count)", span="7785-7785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3446 [label="Assert.IsTrue(errors[0].StartsWith(''Required property 'NonAttributeProperty' expects a value but got null. Path ''''))", span="7786-7786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3447 [label="Assert.IsTrue(errors[1].StartsWith(''Required property 'UnsetProperty' expects a value but got null. Path ''''))", span="7787-7787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3448 [label="Assert.IsTrue(errors[2].StartsWith(''Required property 'AlwaysProperty' expects a value but got null. Path ''''))", span="7788-7788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3444 [label="Assert.IsNotNull(o)", span="7784-7784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_3449 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", span="7768-7768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredDeserializeNull()", file="JsonSerializerTest.cs"];
m21_1148 [label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0", cluster="System.IO.StreamReader.ReadToEnd()", file="JsonSerializerTest.cs"];
m21_749 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, int)", file="JsonSerializerTest.cs"];
m21_3536 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7996-7996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m21_3537 [label="var testObj = new PersonSerializable() { Name = ''John Doe'', Age = 28 }", span="7998-7998", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m21_3538 [label="var objDeserialized = SerializeAndDeserialize<PersonSerializable>(testObj)", span="7999-7999", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m21_3539 [label="Assert.AreEqual(testObj.Name, objDeserialized.Name)", span="8001-8001", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m21_3540 [label="Assert.AreEqual(0, objDeserialized.Age)", span="8002-8002", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m21_3541 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", span="7996-7996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeAndDeserializeWithAttributes()", file="JsonSerializerTest.cs"];
m21_1808 [label="Entry Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", span="36-36", cluster="Newtonsoft.Json.Tests.TestObjects.SetOnlyPropertyClass2.GetValue()", file="JsonSerializerTest.cs"];
m21_2019 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4371-4371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m21_2020 [label="Dictionary = new Dictionary<string, string>\r\n                {\r\n                    { ''existing'', ''yup'' }\r\n                }", span="4373-4376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m21_2021 [label="List = new List<string>\r\n                {\r\n                    ''existing''\r\n                }", span="4377-4380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m21_2022 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", span="4371-4371", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass.ExistingValueClass()", file="JsonSerializerTest.cs"];
m21_2773 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6216-6216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m21_2774 [label="EnumerableClass c = new EnumerableClass\r\n            {\r\n                Enumerable = new List<string> { ''One'', ''Two'', ''Three'' }\r\n            }", span="6218-6221", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m21_2775 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="6223-6223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m21_2776 [label="StringAssert.AreEqual(@''{\r\n  ''''Enumerable'''': [\r\n    ''''One'''',\r\n    ''''Two'''',\r\n    ''''Three''''\r\n  ]\r\n}'', json)", span="6225-6231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m21_2777 [label="EnumerableClass c2 = JsonConvert.DeserializeObject<EnumerableClass>(json)", span="6233-6233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m21_2778 [label="Assert.AreEqual(''One'', c2.Enumerable.ElementAt(0))", span="6235-6235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m21_2779 [label="Assert.AreEqual(''Two'', c2.Enumerable.ElementAt(1))", span="6236-6236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m21_2780 [label="Assert.AreEqual(''Three'', c2.Enumerable.ElementAt(2))", span="6237-6237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m21_2781 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", span="6216-6216", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumerable()", file="JsonSerializerTest.cs"];
m21_2309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5168-5168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m21_2310 [label="Key = k", span="5170-5170", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m21_2311 [label="Value = v", span="5171-5171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m21_2312 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", span="5168-5168", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>.KVPair(TKey, TValue)", file="JsonSerializerTest.cs"];
m21_3176 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7262-7262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3177 [label="string json = @''{''''Id'''':{''''Value'''':''''id''''}}''", span="7264-7264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3178 [label="Widget w = JsonConvert.DeserializeObject<Widget>(json)", span="7266-7266", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3179 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id)", span="7268-7268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3180 [label="Assert.AreEqual(new WidgetId { Value = ''id'' }, w.Id.Value)", span="7269-7269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3181 [label="Assert.AreEqual(''id'', w.Id.Value.Value)", span="7270-7270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3182 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", span="7262-7262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableWidgetStruct()", file="JsonSerializerTest.cs"];
m21_3147 [label="Entry Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Bb.Bb()", file="JsonSerializerTest.cs"];
m21_3949 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", span="9093-9093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs"];
m21_3950 [label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<TypeConverterSize, TypeConverterSize> { { new TypeConverterSize(1, 2), new TypeConverterSize(3, 4) } }\r\n            )", span="9095-9097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs"];
m21_3951 [label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="9099-9099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs"];
m21_3952 [label="Dictionary<TypeConverterSize, TypeConverterSize> d = JsonConvert.DeserializeObject<Dictionary<TypeConverterSize, TypeConverterSize>>(json)", span="9101-9101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs"];
m21_3953 [label="Assert.AreEqual(new TypeConverterSize(1, 2), d.Keys.First())", span="9103-9103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs"];
m21_3954 [label="Assert.AreEqual(new TypeConverterSize(3, 4), d.Values.First())", span="9104-9104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs"];
m21_3955 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", span="9093-9093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey_Custom()", file="JsonSerializerTest.cs"];
m21_3020 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="JsonSerializerTest.cs"];
m21_1353 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2871-2871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m21_1354 [label="DateTime testDate = new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc)", span="2873-2873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m21_1355 [label="MemberConverterClass m1 = new MemberConverterClass { DefaultConverter = testDate, MemberConverter = testDate }", span="2874-2874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m21_1359 [label="Assert.AreEqual(testDate, m2.DefaultConverter)", span="2884-2884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m21_1360 [label="Assert.AreEqual(testDate, m2.MemberConverter)", span="2885-2885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m21_1356 [label="string json = JsonConvert.SerializeObject(m1, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="2876-2879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m21_1357 [label="Assert.AreEqual(@''{''''DefaultConverter'''':''''\/Date(0)\/'''',''''MemberConverter'''':''''1970-01-01T00:00:00Z''''}'', json)", span="2880-2880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m21_1358 [label="MemberConverterClass m2 = JsonConvert.DeserializeObject<MemberConverterClass>(json)", span="2882-2882", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m21_1361 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", span="2871-2871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseMemberConverter_MsDate()", file="JsonSerializerTest.cs"];
m21_3262 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7429-7429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m21_3263 [label="var serializer = JsonSerializer.Create(new JsonSerializerSettings())", span="7431-7431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m21_3264 [label="var dict = serializer.Deserialize<Dictionary<string, string>>(new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}'')))", span="7432-7432", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m21_3266 [label="var dict2 = serializer.Deserialize<Dictionary<string, object>>(reader)", span="7435-7435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m21_3265 [label="var reader = new JsonTextReader(new StringReader(''{'k1':'','k2':'v2'}''))", span="7434-7434", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m21_3267 [label="Assert.AreEqual(dict[''k1''], dict2[''k1''])", span="7437-7437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m21_3268 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", span="7429-7429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryStringStringAndStringObject()", file="JsonSerializerTest.cs"];
m21_2523 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", span="5634-5634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.DictionaryKey()", file="JsonSerializerTest.cs"];
m21_172 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="457-457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs"];
m21_173 [label="IgnoredProperty p = JsonConvert.DeserializeObject<IgnoredProperty>(''{'StringProp1':[1,2,3],'StringProp2':{}}'')", span="459-459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs"];
m21_174 [label="Assert.IsNull(p.StringProp1)", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs"];
m21_175 [label="Assert.IsNull(p.StringProp2)", span="461-461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs"];
m21_176 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", span="457-457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoErrorWhenValueDoesNotMatchIgnoredProperty()", file="JsonSerializerTest.cs"];
m21_964 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113", cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonSerializerTest.cs"];
m21_916 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2095-2095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_947 [label="MemoryStream ms = new MemoryStream()", span="2097-2097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_948 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(o.GetType())", span="2098-2098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_949 [label="s.WriteObject(ms, o)", span="2099-2099", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_953 [label="JObject jsonNetJson = JObject.Parse(JsonConvert.SerializeObject(o))", span="2105-2105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_950 [label="var data = ms.ToArray()", span="2101-2101", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_951 [label="JObject dataContractJson = JObject.Parse(Encoding.UTF8.GetString(data, 0, data.Length))", span="2102-2102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_952 [label="dataContractJson = new JObject(dataContractJson.Properties().OrderBy(p => p.Name))", span="2103-2103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_955 [label="Assert.AreEqual(dataContractJson.Count, jsonNetJson.Count)", span="2112-2112", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_956 [label=dataContractJson, span="2113-2113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_954 [label="jsonNetJson = new JObject(jsonNetJson.Properties().OrderBy(p => p.Name))", span="2106-2106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_957 [label="Assert.IsTrue(JToken.DeepEquals(jsonNetJson[property.Key], property.Value), ''Property not equal: '' + property.Key)", span="2115-2115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_958 [label="return jsonNetJson.ToString();", span="2118-2118", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_959 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", span="2095-2095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AssertSerializeDeserializeEqual(object)", file="JsonSerializerTest.cs"];
m21_4202 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9629-9629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4203 [label="DateTimeOffset dt = new DateTimeOffset(2000, 12, 22, 0, 0, 0, TimeSpan.Zero)", span="9631-9631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4204 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd'!'K''", span="9632-9632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4206 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTimeOffset, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9639-9642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4209 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9650-9650", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4205 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9633-9637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4208 [label="Dictionary<DateTimeOffset, string> d = JsonConvert.DeserializeObject<Dictionary<DateTimeOffset, string>>(json, settings)", span="9648-9648", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4207 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22!+00:00'''': ''''123''''\r\n}'', json)", span="9644-9646", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4210 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", span="9629-9629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3454 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7792-7792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_3455 [label="IList<string> errors = new List<string>()", span="7794-7794", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_3456 [label="EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error = (s, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="7796-7800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_3459 [label="Assert.AreEqual(3, errors.Count)", span="7813-7813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_3460 [label="Assert.AreEqual(''Cannot write a null value for property 'NonAttributeProperty'. Property requires a value. Path ''.'', errors[0])", span="7814-7814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_3461 [label="Assert.AreEqual(''Cannot write a null value for property 'UnsetProperty'. Property requires a value. Path ''.'', errors[1])", span="7815-7815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_3462 [label="Assert.AreEqual(''Cannot write a null value for property 'AlwaysProperty'. Property requires a value. Path ''.'', errors[2])", span="7816-7816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_3457 [label="string json = JsonConvert.SerializeObject(new RequiredObject(), new JsonSerializerSettings\r\n            {\r\n                Error = error,\r\n                Formatting = Formatting.Indented\r\n            })", span="7802-7806", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_3458 [label="StringAssert.AreEqual(@''{\r\n  ''''DefaultProperty'''': null,\r\n  ''''AllowNullProperty'''': null\r\n}'', json)", span="7808-7811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_3463 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", span="7792-7792", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ObjectRequiredSerialize()", file="JsonSerializerTest.cs"];
m21_1205 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2614-2614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1206 [label="string json = ''{foo:'hello',bar:[1,2,3]}''", span="2616-2616", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1207 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2617-2617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1208 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2618-2618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1209 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2620-2620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1210 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2621-2621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1211 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2622-2622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1212 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2623-2623", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1213 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2624-2624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1214 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", span="2614-2614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArrayWhenNotFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_320 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="796-796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs"];
m21_321 [label="this.Sections = new HashSet<FaqSection>()", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs"];
m21_322 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", span="796-796", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem.FaqItem()", file="JsonSerializerTest.cs"];
m21_2568 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="850-850", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerTest.cs"];
m21_887 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="JsonSerializerTest.cs"];
m21_1416 [label="Entry Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.IncompatibleJsonAttributeClass()", file="JsonSerializerTest.cs"];
m21_2265 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, float)", file="JsonSerializerTest.cs"];
m21_3756 [label="Entry System.Tuple.Create<T1>(T1)", span="0-0", cluster="System.Tuple.Create<T1>(T1)", file="JsonSerializerTest.cs"];
m21_395 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", span="996-996", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClass.ChildClass()", file="JsonSerializerTest.cs"];
m21_188 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="429-429", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs"];
m21_2227 [label="Entry System.Runtime.Serialization.SerializationInfo.GetChar(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetChar(string)", file="JsonSerializerTest.cs"];
m21_1161 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2534-2534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m21_1162 [label="Dictionary<int, int> values = new Dictionary<int, int>()", span="2536-2536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m21_1163 [label="values.Add(-5, 6)", span="2537-2537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m21_1164 [label="values.Add(int.MinValue, int.MaxValue)", span="2538-2538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m21_1165 [label="string json = JsonConvert.SerializeObject(values)", span="2540-2540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m21_1168 [label="CollectionAssert.AreEqual(values, newValues)", span="2546-2546", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m21_1166 [label="Assert.AreEqual(@''{''''-5'''':6,''''-2147483648'''':2147483647}'', json)", span="2542-2542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m21_1167 [label="Dictionary<int, int> newValues = JsonConvert.DeserializeObject<Dictionary<int, int>>(json)", span="2544-2544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m21_1169 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", span="2534-2534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonStringKeyDictionary()", file="JsonSerializerTest.cs"];
m21_2453 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5523-5523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_2454 [label="return objectType == typeof(PosDouble);", span="5525-5525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_2455 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", span="5523-5523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_2553 [label="Entry System.Collections.Generic.HashSet<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.Contains(T)", file="JsonSerializerTest.cs"];
m21_3571 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", span="8084-8084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTestClass.IgnoreDataMemberTestClass()", file="JsonSerializerTest.cs"];
m21_177 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs"];
m21_178 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new Binding_DisallowNull()); }, ''Cannot write a null value for property 'RequiredProperty'. Property requires a non-null value. Path ''.'')", span="479-479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs"];
m21_179 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_Required_DisallowedNull()", file="JsonSerializerTest.cs"];
m21_4033 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="9280-9280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4034 [label="var consoleWriter = new ConsoleWriter()", span="9282-9282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4035 [label="var options = new JsonSerializerSettings\r\n            {\r\n                Converters = new JsonConverterCollection { new TypeConverterJsonConverter() },\r\n                //TypeNameHandling = TypeNameHandling.All\r\n            }", span="9285-9289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4036 [label="var text1 = JsonConvert.SerializeObject(consoleWriter, Formatting.Indented, options)", span="9295-9295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4041 [label="dict2.Add(consoleWriter, ''Console'')", span="9306-9306", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4047 [label="dict3.Add(''Console'', consoleWriter)", span="9321-9321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4038 [label="var restoredWriter = JsonConvert.DeserializeObject<IMyInterface>(text1, options)", span="9298-9298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4042 [label="var text2 = JsonConvert.SerializeObject(dict2, Formatting.Indented, options)", span="9308-9308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4044 [label="var restoredObject = JsonConvert.DeserializeObject<Dictionary<IMyInterface, string>>(text2, options)", span="9313-9313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4048 [label="var text3 = JsonConvert.SerializeObject(dict3, Formatting.Indented, options)", span="9323-9323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4050 [label="var restoredDict2 = JsonConvert.DeserializeObject<Dictionary<string, IMyInterface>>(text3, options)", span="9328-9328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4037 [label="Assert.AreEqual(@''''''Console Writer'''''', text1)", span="9296-9296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4039 [label="Assert.AreEqual(''ConsoleWriter'', restoredWriter.PrintTest())", span="9299-9299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4040 [label="var dict2 = new Dictionary<IMyInterface, string>()", span="9305-9305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4043 [label="StringAssert.AreEqual(@''{\r\n  ''''Console Writer'''': ''''Console''''\r\n}'', text2)", span="9309-9311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4045 [label="Assert.AreEqual(''ConsoleWriter'', restoredObject.First().Key.PrintTest())", span="9314-9314", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4046 [label="var dict3 = new Dictionary<string, IMyInterface>()", span="9320-9320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4049 [label="StringAssert.AreEqual(@''{\r\n  ''''Console'''': ''''Console Writer''''\r\n}'', text3)", span="9324-9326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4051 [label="Assert.AreEqual(''ConsoleWriter'', restoredDict2.First().Value.PrintTest())", span="9329-9329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_4052 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", span="9280-9280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterOnInterface()", file="JsonSerializerTest.cs"];
m21_2005 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4339-4339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2006 [label="PersonPropertyClass personPropertyClass = new PersonPropertyClass()", span="4341-4341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2007 [label="WagePerson wagePerson = (WagePerson)personPropertyClass.Person", span="4342-4342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2013 [label="string json = JsonConvert.SerializeObject(personPropertyClass, Formatting.Indented)", span="4350-4350", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2008 [label="wagePerson.BirthDate = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4344-4344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2009 [label="wagePerson.Department = ''McDees''", span="4345-4345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2010 [label="wagePerson.HourlyWage = 12.50m", span="4346-4346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2011 [label="wagePerson.LastModified = new DateTime(2000, 11, 29, 23, 59, 59, DateTimeKind.Utc)", span="4347-4347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2012 [label="wagePerson.Name = ''Jim Bob''", span="4348-4348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2016 [label="Assert.AreEqual(wagePerson.HourlyWage, ((WagePerson)newPersonPropertyClass.Person).HourlyWage)", span="4363-4363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2014 [label="StringAssert.AreEqual(\r\n                @''{\r\n  ''''Person'''': {\r\n    ''''HourlyWage'''': 12.50,\r\n    ''''Name'''': ''''Jim Bob'''',\r\n    ''''BirthDate'''': ''''2000-11-29T23:59:59Z'''',\r\n    ''''LastModified'''': ''''2000-11-29T23:59:59Z''''\r\n  }\r\n}'',\r\n                json)", span="4351-4360", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2015 [label="PersonPropertyClass newPersonPropertyClass = JsonConvert.DeserializeObject<PersonPropertyClass>(json)", span="4362-4362", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_2017 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", span="4339-4339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBaseReferenceWithDerivedValue()", file="JsonSerializerTest.cs"];
m21_1581 [label="Entry Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.GenericListAndDictionaryInterfaceProperties.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1409 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2978-2978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m21_1410 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                IncompatibleJsonAttributeClass c = new IncompatibleJsonAttributeClass();\r\n                JsonConvert.SerializeObject(c);\r\n            }, ''Unexpected value when converting date. Expected DateTime or DateTimeOffset, got Newtonsoft.Json.Tests.TestObjects.IncompatibleJsonAttributeClass.'')", span="2980-2984", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m21_1411 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", span="2978-2978", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IncompatibleJsonAttributeShouldThrow()", file="JsonSerializerTest.cs"];
m21_2070 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4528-4528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m21_2071 [label="string json = ''{'$id':'1',key1:'value1',key2:'value2',key3:'value3'}''", span="4530-4530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m21_2072 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<DictionaryWithNoDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            }), ''Cannot preserve reference to readonly dictionary, or dictionary created from a non-default constructor: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+DictionaryWithNoDefaultConstructor. Path 'key1', line 1, position 16.'')", span="4532-4536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m21_2073 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", span="4528-4528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryWithNoDefaultConstructor_PreserveReferences()", file="JsonSerializerTest.cs"];
m21_4271 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9819-9819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_4272 [label="throw new NotImplementedException();", span="9821-9821", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_4273 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", span="9819-9819", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_1077 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2388-2388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m21_1078 [label="string jsonText = @''{\r\n'''''''':'''''''',\r\n''''label'''': [\r\n       [''''SomeName'''',6]\r\n],\r\n''''torrents'''': [\r\n       [''''192D99A5C943555CB7F00A852821CF6D6DB3008A'''',201,''''filename.avi'''',178311826,1000,178311826,72815250,408,1603,7,121430,''''NameOfLabelPrevioslyDefined'''',3,6,0,8,128954,-1,0],\r\n],\r\n''''torrentc'''': ''''1816000723''''\r\n}''", span="2390-2399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m21_1079 [label="JObject o = (JObject)JsonConvert.DeserializeObject(jsonText)", span="2401-2401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m21_1080 [label="Assert.AreEqual(4, o.Children().Count())", span="2402-2402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m21_1081 [label="JToken torrentsArray = (JToken)o[''torrents'']", span="2404-2404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m21_1082 [label="JToken nestedTorrentsArray = (JToken)torrentsArray[0]", span="2405-2405", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m21_1083 [label="Assert.AreEqual(nestedTorrentsArray.Children().Count(), 19)", span="2406-2406", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m21_1084 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", span="2388-2388", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TorrentDeserializeTest()", file="JsonSerializerTest.cs"];
m21_3768 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="681-681", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m21_434 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1115-1115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m21_435 [label="var input = new ResponseWithNewGenericProperty<List<int>>()\r\n            {\r\n                Message = ''More complex case - generic list of int'',\r\n                Data = Enumerable.Range(50, 70).ToList(),\r\n                Result = ''This should be fine too''\r\n            }", span="1117-1122", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m21_436 [label="var json = JsonConvert.SerializeObject(input)", span="1124-1124", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m21_438 [label="CollectionAssert.AreEqual(input.Data, deserialized.Data)", span="1127-1127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m21_439 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="1128-1128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m21_440 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="1129-1129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m21_437 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericProperty<List<int>>>(json)", span="1125-1125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m21_441 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", span="1115-1115", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializedWithGenericClosedTypeAsArgument()", file="JsonSerializerTest.cs"];
m21_2180 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="JsonSerializerTest.cs"];
m21_2757 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="10088-10088", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m21_4380 [label="Value = val", span="10090-10090", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m21_4381 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", span="10088-10088", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest(decimal)", file="JsonSerializerTest.cs"];
m21_1623 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3459-3459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m21_1624 [label="SubKlass i = new SubKlass(''my subprop'')", span="3461-3461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m21_1625 [label="i.SuperProp = ''overrided superprop''", span="3462-3462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m21_1626 [label="string json = JsonConvert.SerializeObject(i, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3464-3467", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m21_1627 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', json)", span="3469-3469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m21_1628 [label="SubKlass ii = JsonConvert.DeserializeObject<SubKlass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3471-3474", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m21_1629 [label="string newJson = JsonConvert.SerializeObject(ii, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects\r\n            })", span="3476-3479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m21_1630 [label="Assert.AreEqual(@''{''''$id'''':''''1'''',''''SubProp'''':''''my subprop'''',''''SuperProp'''':''''overrided superprop''''}'', newJson)", span="3480-3480", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m21_1631 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", span="3459-3459", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertiesOnToNonDefaultConstructorWithReferenceTracking()", file="JsonSerializerTest.cs"];
m21_2231 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt64(string)", file="JsonSerializerTest.cs"];
m21_3718 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8433-8433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m21_3719 [label="string json = @''[\r\n        9000000000000000000000000000000000000000000000000\r\n      ]''", span="8435-8437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m21_3720 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<BigInteger>>(json)", span="8439-8439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m21_3721 [label="BigInteger nineQuindecillion = l[0]", span="8441-8441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m21_3722 [label="Assert.AreEqual(BigInteger.Parse(''9000000000000000000000000000000000000000000000000''), nineQuindecillion)", span="8444-8444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m21_3723 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", span="8433-8433", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithBigInteger()", file="JsonSerializerTest.cs"];
m21_3989 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="JsonSerializerTest.cs"];
m21_3218 [label="Entry Newtonsoft.Json.JsonSerializer.Create()", span="558-558", cluster="Newtonsoft.Json.JsonSerializer.Create()", file="JsonSerializerTest.cs"];
m21_3319 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7520-7520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m21_3320 [label="string jsonIsoText =\r\n                @''{''''Value'''':''''2012-02-25T19:55:50.6095676+13:00''''}''", span="7522-7523", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m21_3321 [label="DateTimeWrapper c = JsonConvert.DeserializeObject<DateTimeWrapper>(jsonIsoText, new IsoDateTimeConverter())", span="7525-7525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m21_3322 [label="Assert.AreEqual(DateTimeKind.Local, c.Value.Kind)", span="7526-7526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m21_3323 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", span="7520-7520", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIsoDatesWithIsoConverter()", file="JsonSerializerTest.cs"];
m21_83 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="300-300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs"];
m21_84 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['pie']''),\r\n                @''Could not convert string to boolean: pie. Path '[0]', line 1, position 6.'')", span="302-304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs"];
m21_85 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", span="300-300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_BadString()", file="JsonSerializerTest.cs"];
m21_3464 [label="Entry Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.RequiredObject.RequiredObject()", file="JsonSerializerTest.cs"];
m21_488 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1202-1202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_489 [label="JsonSerializer serializer = new JsonSerializer()", span="1204-1204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_490 [label="DefaultSerializationBinder customBinder = new DefaultSerializationBinder()", span="1206-1206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_491 [label="serializer.Binder = customBinder", span="1208-1208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_492 [label="Assert.AreEqual(customBinder, serializer.Binder)", span="1209-1209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_493 [label="Assert.IsInstanceOf(typeof(SerializationBinderAdapter), serializer.SerializationBinder)", span="1212-1212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_494 [label="serializer.SerializationBinder = customBinder", span="1214-1214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_495 [label="Assert.AreEqual(customBinder, serializer.SerializationBinder)", span="1215-1215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_496 [label="ExceptionAssert.Throws<InvalidOperationException>(() =>\r\n            {\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n                var serializationBinder = serializer.Binder;\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n                serializationBinder.ToString();\r\n            }, ''Cannot get SerializationBinder because an ISerializationBinder was previously set.'')", span="1217-1223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_497 [label="serializer.CheckAdditionalContent = true", span="1225-1225", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_498 [label="Assert.AreEqual(true, serializer.CheckAdditionalContent)", span="1226-1226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_499 [label="serializer.ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor", span="1228-1228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_500 [label="Assert.AreEqual(ConstructorHandling.AllowNonPublicDefaultConstructor, serializer.ConstructorHandling)", span="1229-1229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_501 [label="serializer.Context = new StreamingContext(StreamingContextStates.Other)", span="1232-1232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_502 [label="Assert.AreEqual(new StreamingContext(StreamingContextStates.Other), serializer.Context)", span="1233-1233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_504 [label="serializer.ContractResolver = resolver", span="1237-1237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_505 [label="Assert.AreEqual(resolver, serializer.ContractResolver)", span="1238-1238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_506 [label="serializer.Converters.Add(new StringEnumConverter())", span="1240-1240", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_507 [label="Assert.AreEqual(1, serializer.Converters.Count)", span="1241-1241", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_508 [label="serializer.Culture = new CultureInfo(''en-nz'')", span="1243-1243", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_509 [label="Assert.AreEqual(''en-NZ'', serializer.Culture.ToString())", span="1244-1244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_510 [label="serializer.EqualityComparer = EqualityComparer<object>.Default", span="1246-1246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_511 [label="Assert.AreEqual(EqualityComparer<object>.Default, serializer.EqualityComparer)", span="1247-1247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_512 [label="serializer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1249-1249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_513 [label="Assert.AreEqual(DateFormatHandling.MicrosoftDateFormat, serializer.DateFormatHandling)", span="1250-1250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_514 [label="serializer.DateFormatString = ''yyyy''", span="1252-1252", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_515 [label="Assert.AreEqual(''yyyy'', serializer.DateFormatString)", span="1253-1253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_516 [label="serializer.DateParseHandling = DateParseHandling.None", span="1255-1255", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_517 [label="Assert.AreEqual(DateParseHandling.None, serializer.DateParseHandling)", span="1256-1256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_518 [label="serializer.DateTimeZoneHandling = DateTimeZoneHandling.Utc", span="1258-1258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_519 [label="Assert.AreEqual(DateTimeZoneHandling.Utc, serializer.DateTimeZoneHandling)", span="1259-1259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_520 [label="serializer.DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate", span="1261-1261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_521 [label="Assert.AreEqual(DefaultValueHandling.IgnoreAndPopulate, serializer.DefaultValueHandling)", span="1262-1262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_522 [label="serializer.FloatFormatHandling = FloatFormatHandling.Symbol", span="1264-1264", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_523 [label="Assert.AreEqual(FloatFormatHandling.Symbol, serializer.FloatFormatHandling)", span="1265-1265", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_524 [label="serializer.FloatParseHandling = FloatParseHandling.Decimal", span="1267-1267", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_525 [label="Assert.AreEqual(FloatParseHandling.Decimal, serializer.FloatParseHandling)", span="1268-1268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_526 [label="serializer.Formatting = Formatting.Indented", span="1270-1270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_527 [label="Assert.AreEqual(Formatting.Indented, serializer.Formatting)", span="1271-1271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_528 [label="serializer.MaxDepth = 9001", span="1273-1273", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_529 [label="Assert.AreEqual(9001, serializer.MaxDepth)", span="1274-1274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_530 [label="serializer.MissingMemberHandling = MissingMemberHandling.Error", span="1276-1276", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_531 [label="Assert.AreEqual(MissingMemberHandling.Error, serializer.MissingMemberHandling)", span="1277-1277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_532 [label="serializer.NullValueHandling = NullValueHandling.Ignore", span="1279-1279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_533 [label="Assert.AreEqual(NullValueHandling.Ignore, serializer.NullValueHandling)", span="1280-1280", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_534 [label="serializer.ObjectCreationHandling = ObjectCreationHandling.Replace", span="1282-1282", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_535 [label="Assert.AreEqual(ObjectCreationHandling.Replace, serializer.ObjectCreationHandling)", span="1283-1283", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_536 [label="serializer.PreserveReferencesHandling = PreserveReferencesHandling.All", span="1285-1285", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_537 [label="Assert.AreEqual(PreserveReferencesHandling.All, serializer.PreserveReferencesHandling)", span="1286-1286", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_538 [label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="1288-1288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_539 [label="Assert.AreEqual(ReferenceLoopHandling.Ignore, serializer.ReferenceLoopHandling)", span="1289-1289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_541 [label="serializer.ReferenceResolver = referenceResolver", span="1292-1292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_542 [label="Assert.AreEqual(referenceResolver, serializer.ReferenceResolver)", span="1293-1293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_543 [label="serializer.StringEscapeHandling = StringEscapeHandling.EscapeNonAscii", span="1295-1295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_544 [label="Assert.AreEqual(StringEscapeHandling.EscapeNonAscii, serializer.StringEscapeHandling)", span="1296-1296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_546 [label="serializer.TraceWriter = traceWriter", span="1299-1299", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_547 [label="Assert.AreEqual(traceWriter, serializer.TraceWriter)", span="1300-1300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_548 [label="serializer.TypeNameAssemblyFormat = FormatterAssemblyStyle.Full", span="1304-1304", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_549 [label="Assert.AreEqual(FormatterAssemblyStyle.Full, serializer.TypeNameAssemblyFormat)", span="1305-1305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_550 [label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializer.TypeNameAssemblyFormatHandling)", span="1308-1308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_551 [label="serializer.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Simple", span="1310-1310", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_552 [label="Assert.AreEqual(FormatterAssemblyStyle.Simple, serializer.TypeNameAssemblyFormat)", span="1312-1312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_553 [label="serializer.TypeNameAssemblyFormatHandling = TypeNameAssemblyFormatHandling.Full", span="1316-1316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_554 [label="Assert.AreEqual(TypeNameAssemblyFormatHandling.Full, serializer.TypeNameAssemblyFormatHandling)", span="1317-1317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_555 [label="serializer.TypeNameHandling = TypeNameHandling.All", span="1319-1319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_556 [label="Assert.AreEqual(TypeNameHandling.All, serializer.TypeNameHandling)", span="1320-1320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_503 [label="CamelCasePropertyNamesContractResolver resolver = new CamelCasePropertyNamesContractResolver()", span="1236-1236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_540 [label="IdReferenceResolver referenceResolver = new IdReferenceResolver()", span="1291-1291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_545 [label="MemoryTraceWriter traceWriter = new MemoryTraceWriter()", span="1298-1298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_557 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", span="1202-1202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerProperties()", file="JsonSerializerTest.cs"];
m21_748 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerTest.cs"];
m21_2741 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6165-6165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m21_2742 [label="Response response = new Response\r\n            {\r\n                Name = ''Success'',\r\n                Data = new JObject(new JProperty(''First'', ''Value1''), new JProperty(''Second'', ''Value2''))\r\n            }", span="6167-6171", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m21_2743 [label="string json = JsonConvert.SerializeObject(response, Formatting.Indented)", span="6173-6173", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m21_2746 [label="Assert.IsTrue(deserializedResponse.Data.DeepEquals(response.Data))", span="6178-6178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m21_2744 [label="Response deserializedResponse = JsonConvert.DeserializeObject<Response>(json)", span="6175-6175", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m21_2745 [label="Assert.AreEqual(''Success'', deserializedResponse.Name)", span="6177-6177", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m21_2747 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", span="6165-6165", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJToken()", file="JsonSerializerTest.cs"];
m21_2788 [label="Entry Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", span="10191-10191", cluster="Newtonsoft.Json.Tests.Serialization.ComplexItem.ComplexItem()", file="JsonSerializerTest.cs"];
m21_2714 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6083-6083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2715 [label="_name = info.GetString(''Name'')", span="6085-6085", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_2716 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="6083-6083", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable.StructISerializable(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_1986 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4238-4238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1987 [label="string json =\r\n                    @''{\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 1,\r\n  ''''Newtonsoft.Json.Tests.TestObjects.Organization.Person'''': 2\r\n}''", span="4242-4246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1988 [label="JsonConvert.DeserializeObject<Dictionary<Person, int>>(json)", span="4248-4248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1989 [label="Assert.Fail()", span="4249-4249", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1990 [label=JsonSerializationException, span="4251-4251", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1991 [label="Assert.IsTrue(ex.Message.StartsWith(''Could not convert string 'Newtonsoft.Json.Tests.TestObjects.Organization.Person' to dictionary key type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Create a TypeConverter to convert from the string to the key type object. Path '['Newtonsoft.Json.Tests.TestObjects.Organization.Person']'''))", span="4253-4253", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1992 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", span="4238-4238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePersonKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_3784 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8626-8626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m21_3785 [label="IList<object> dates = new List<object>\r\n            {\r\n                new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n                new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1))\r\n            }", span="8628-8632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m21_3786 [label="string json = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = @''yyyy'-'MM'-'dd'T'HH':'mm':'ss.fffK''\r\n            })", span="8634-8637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m21_3787 [label="StringAssert.AreEqual(@''[\r\n  ''''2000-12-12T12:12:12.000Z'''',\r\n  ''''2000-12-12T12:12:12.000+01:00''''\r\n]'', json)", span="8639-8642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m21_3788 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", span="8626-8626", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringForInternetExplorer()", file="JsonSerializerTest.cs"];
m21_2762 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6199-6199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2763 [label="PublicConstructorOverridenByJsonConstructor c = JsonConvert.DeserializeObject<PublicConstructorOverridenByJsonConstructor>(''{Value:'value!'}'')", span="6201-6201", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2764 [label="Assert.AreEqual(''Public Parameterized'', c.Constructor)", span="6202-6202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2765 [label="Assert.AreEqual(''value!'', c.Value)", span="6203-6203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2766 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", span="6199-6199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PublicConstructorOverridenByJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_4092 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9395-9395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4093 [label="throw new InvalidCastException();", span="9397-9397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4094 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", span="9395-9395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToDecimal(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4281 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9837-9837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs"];
m21_4282 [label="ExceptionAssert.Throws<JsonReaderException>(() => JsonConvert.DeserializeObject<string>(''020474068''), ''Input string '020474068' is not a valid number. Path '', line 1, position 9.'')", span="9839-9839", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs"];
m21_4283 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", span="9837-9837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInvalidOctalRootError()", file="JsonSerializerTest.cs"];
m21_1112 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2442-2442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m21_1113 [label="string json = @''[''''PRE\u003cPOST'''']''", span="2444-2444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m21_1114 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2446-2446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m21_1115 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2447-2447", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m21_1116 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2449-2449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m21_1118 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2452-2452", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m21_1117 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="2451-2451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m21_1119 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", span="2442-2442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Unicode()", file="JsonSerializerTest.cs"];
m21_1200 [label="Entry object.Object()", span="0-0", cluster="object.Object()", file="JsonSerializerTest.cs"];
m21_4065 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="9349-9349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs"];
m21_4066 [label="return TypeCode.Object;", span="9351-9351", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs"];
m21_4067 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", span="9349-9349", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.GetTypeCode()", file="JsonSerializerTest.cs"];
m21_2233 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSingle(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSingle(string)", file="JsonSerializerTest.cs"];
m21_2435 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="891-891", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonSerializerTest.cs"];
m21_2865 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6516-6516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m21_2866 [label="ImplementInterfaceObject cc = new ImplementInterfaceObject\r\n            {\r\n                InterfaceMember = new DateTime(2010, 12, 31, 0, 0, 0, DateTimeKind.Utc),\r\n                NewMember = ''NewMember!''\r\n            }", span="6518-6522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m21_2867 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6524-6524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m21_2868 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''2010-12-31T00:00:00Z'''',\r\n  ''''newMemberWithProperty'''': null\r\n}'', result)", span="6526-6529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m21_2869 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", span="6516-6516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObjectTest()", file="JsonSerializerTest.cs"];
m21_3680 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8324-8324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3681 [label="writer.WriteValue(''X'')", span="8326-8326", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3682 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="8324-8324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3060 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6974-6974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3061 [label="DefaultContractResolver contractResolver = new DefaultContractResolver()", span="6976-6976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3062 [label="StaticTestClass c = new StaticTestClass\r\n            {\r\n                x = int.MaxValue\r\n            }", span="6978-6981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3065 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = contractResolver\r\n            })", span="6984-6987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3067 [label="StaticTestClass c2 = JsonConvert.DeserializeObject<StaticTestClass>(@''{\r\n  ''''x'''': -1,\r\n  ''''y'''': -2,\r\n  ''''z'''': -3\r\n}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = contractResolver\r\n                })", span="6995-7003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3063 [label="StaticTestClass.y = 2", span="6982-6982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3064 [label="StaticTestClass.z = 3", span="6983-6983", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3066 [label="StringAssert.AreEqual(@''{\r\n  ''''x'''': 2147483647,\r\n  ''''y'''': 2,\r\n  ''''z'''': 3\r\n}'', json)", span="6989-6993", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3068 [label="Assert.AreEqual(-1, c2.x)", span="7005-7005", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3069 [label="Assert.AreEqual(-2, StaticTestClass.y)", span="7006-7006", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3070 [label="Assert.AreEqual(-3, StaticTestClass.z)", span="7007-7007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3071 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", span="6974-6974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStaticDefault()", file="JsonSerializerTest.cs"];
m21_3964 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9140-9140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs"];
m21_3965 [label="return base.CanConvertTo(context, destinationType);", span="9142-9142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs"];
m21_3966 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="9140-9140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs"];
m21_141 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m21_143 [label="Bars = new List<string>()", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m21_144 [label="bars != null", span="414-414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m21_145 [label="Bars.AddRange(bars)", span="416-416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m21_146 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", span="411-411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired.FooRequired(System.Collections.Generic.IEnumerable<string>)", file="JsonSerializerTest.cs"];
m21_900 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1890-1890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m21_901 [label="var cc = new ChildDataContractWithHidden\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!'',\r\n                NewMember = ''NewMember!''\r\n            }", span="1892-1897", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m21_902 [label="string result = JsonConvert.SerializeObject(cc)", span="1899-1899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m21_903 [label="Assert.AreEqual(@''{''''NewMember'''':''''NewMember!'''',''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="1900-1900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m21_904 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", span="1890-1890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithHidden()", file="JsonSerializerTest.cs"];
m21_1009 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2200-2200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1010 [label="DateTime dateValue = new DateTime(2010, 3, 30)", span="2202-2202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1011 [label="Dictionary<string, object> testDictionary = new Dictionary<string, object>()", span="2203-2203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1012 [label="testDictionary[''date''] = dateValue", span="2204-2204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1021 [label="Assert.AreEqual(dateValue, deserializedDate)", span="2220-2220", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1013 [label="string jsonText = JsonConvert.SerializeObject(testDictionary)", span="2206-2206", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1016 [label="serializer.WriteObject(ms, testDictionary)", span="2211-2211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1014 [label="MemoryStream ms = new MemoryStream()", span="2209-2209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1019 [label="Dictionary<string, object> deserializedDictionary = (Dictionary<string, object>)JsonConvert.DeserializeObject(jsonText, typeof(Dictionary<string, object>))", span="2217-2217", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1015 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(typeof(Dictionary<string, object>))", span="2210-2210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1017 [label="byte[] data = ms.ToArray()", span="2213-2213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1018 [label="string output = Encoding.UTF8.GetString(data, 0, data.Length)", span="2214-2214", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1020 [label="DateTime deserializedDate = (DateTime)deserializedDictionary[''date'']", span="2218-2218", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_1022 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", span="2200-2200", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJavaScriptDate()", file="JsonSerializerTest.cs"];
m21_4248 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", span="9749-9749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyObservableObject.MyObservableObject()", file="JsonSerializerTest.cs"];
m21_2166 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_2913 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6637-6637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs"];
m21_2914 [label="throw new NotImplementedException();", span="6639-6639", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs"];
m21_2915 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", span="6637-6637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.CopyTo(object[], int)", file="JsonSerializerTest.cs"];
m21_1038 [label="Entry Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", span="306-306", cluster="Newtonsoft.Json.Tests.CustomAssert.Contains(System.Collections.IList, object)", file="JsonSerializerTest.cs"];
m21_1037 [label="Entry Unk.AreNotSame", span="", cluster="Unk.AreNotSame", file="JsonSerializerTest.cs"];
m21_2185 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4874-4874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_2186 [label="return ((IEnumerable)_innerDictionary).GetEnumerator();", span="4876-4876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_2187 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", span="4874-4874", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_189 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="582-582", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m21_763 [label="Entry System.Runtime.Serialization.SerializationInfo.GetInt32(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetInt32(string)", file="JsonSerializerTest.cs"];
m21_1711 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3693-3693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1712 [label="string json = @''{\r\n  ''''Random'''': {\r\n    ''''blah'''': 1\r\n  },\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11,\r\n    ''''Item1'''': 12\r\n  },\r\n  ''''Collection'''': [\r\n    999\r\n  ],\r\n  ''''Employee'''': {\r\n    ''''Manager'''': {\r\n      ''''Name'''': ''''ManagerName!''''\r\n    }\r\n  }\r\n}''", span="3695-3712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1713 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Reuse })", span="3714-3715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1714 [label="Assert.AreEqual(''Name!'', c.Name)", span="3717-3717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1715 [label="Assert.AreEqual(3, c.Dictionary.Count)", span="3718-3718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1716 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3719-3719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1717 [label="Assert.AreEqual(1, c.Dictionary[''existing''])", span="3720-3720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1718 [label="Assert.AreEqual(4, c.Collection.Count)", span="3721-3721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1719 [label="Assert.AreEqual(1, c.Collection.ElementAt(0))", span="3722-3722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1720 [label="Assert.AreEqual(999, c.Collection.ElementAt(3))", span="3723-3723", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1721 [label="Assert.AreEqual(''EmployeeName!'', c.Employee.Name)", span="3724-3724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1722 [label="Assert.AreEqual(''ManagerName!'', c.Employee.Manager.Name)", span="3725-3725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1723 [label="Assert.IsNotNull(c.Random)", span="3726-3726", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_1724 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", span="3693-3693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterfaceWithExistingValues()", file="JsonSerializerTest.cs"];
m21_2257 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, bool)", file="JsonSerializerTest.cs"];
m21_4249 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9767-9767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m21_4250 [label="var original = new DerivedConstructorType(''Base'', ''Derived'')", span="9769-9769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m21_4251 [label="var serializerSettings = new JsonSerializerSettings()", span="9771-9771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m21_4252 [label="var jsonCopy = JsonConvert.SerializeObject(original, serializerSettings)", span="9772-9772", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m21_4253 [label="var clonedObject = JsonConvert.DeserializeObject<DerivedConstructorType>(jsonCopy, serializerSettings)", span="9774-9774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m21_4254 [label="Assert.AreEqual(''Base'', clonedObject.BaseProperty)", span="9776-9776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m21_4255 [label="Assert.AreEqual(''Derived'', clonedObject.DerivedProperty)", span="9777-9777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m21_4256 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", span="9767-9767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParameterizedConstructorWithBasePrivateProperties()", file="JsonSerializerTest.cs"];
m21_1429 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="3007-3007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1430 [label="PersonRaw personRaw = new PersonRaw\r\n            {\r\n                FirstName = ''FirstNameValue'',\r\n                RawContent = new JRaw(''[1,2,3,4,5]''),\r\n                LastName = ''LastNameValue''\r\n            }", span="3009-3014", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1431 [label="string json", span="3016-3016", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1432 [label="json = JsonConvert.SerializeObject(personRaw)", span="3018-3018", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1433 [label="Assert.AreEqual(@''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}'', json)", span="3019-3019", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1434 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", span="3007-3007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1135 [label="Entry Unk.>", span="", cluster="Unk.>", file="JsonSerializerTest.cs"];
m21_3707 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8401-8401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs"];
m21_3708 [label="m_Item1 = item1", span="8403-8403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs"];
m21_3709 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", span="8401-8401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>.MyTuplePartial(T1)", file="JsonSerializerTest.cs"];
m21_937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="2069-2069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_938 [label="BaseWithContract baseWith = new SubWithContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2071-2077", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_939 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="2079-2079", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_940 [label="baseWith.Virtual = ''Virtual2!''", span="2080-2080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_941 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2081-2081", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_942 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="2082-2082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_943 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="2084-2084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_944 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!''''\r\n}'', json)", span="2086-2092", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_945 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", span="2069-2069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_2443 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5504-5504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2444 [label="PosDouble p = (PosDouble)value", span="5506-5506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2446 [label="writer.WriteRawValue(String.Format(CultureInfo.InvariantCulture, ''new PosD({0},{1})'', p.X, p.Y))", span="5510-5510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2447 [label="writer.WriteNull()", span="5514-5514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2445 [label="p != null", span="5508-5508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2448 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="5504-5504", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDoubleConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2159 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4836-4836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m21_2160 [label="((IDictionary<string, T>)_innerDictionary).CopyTo(array, arrayIndex)", span="4838-4838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m21_2161 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", span="4836-4836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.CopyTo(System.Collections.Generic.KeyValuePair<string, T>[], int)", file="JsonSerializerTest.cs"];
m21_4263 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9805-9805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonSerializerTest.cs"];
m21_4264 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", span="9805-9805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.ErroringJsonConverter(string)", file="JsonSerializerTest.cs"];
m21_4325 [label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1932-1932", cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonSerializerTest.cs"];
m21_56 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.ClassWithImplicitOperator()", span="244-244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithImplicitOperator.ClassWithImplicitOperator()", file="JsonSerializerTest.cs"];
m21_1643 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyWithHandlingValues.JsonPropertyWithHandlingValues()", file="JsonSerializerTest.cs"];
m21_3572 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="8100-8100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m21_3573 [label="DataContractSerializationAttributesClass dataContract = new DataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="8102-8108", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m21_3574 [label="string json = JsonConvert.SerializeObject(dataContract, Formatting.Indented)", span="8116-8116", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m21_3575 [label="StringAssert.AreEqual(@''{\r\n  ''''DataMemberAttribute'''': ''''Value!'''',\r\n  ''''IgnoreDataMemberAndDataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="8117-8120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m21_3576 [label="PocoDataContractSerializationAttributesClass poco = new PocoDataContractSerializationAttributesClass\r\n            {\r\n                NoAttribute = ''Value!'',\r\n                IgnoreDataMemberAttribute = ''Value!'',\r\n                DataMemberAttribute = ''Value!'',\r\n                IgnoreDataMemberAndDataMemberAttribute = ''Value!''\r\n            }", span="8122-8128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m21_3577 [label="json = JsonConvert.SerializeObject(poco, Formatting.Indented)", span="8130-8130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m21_3578 [label="StringAssert.AreEqual(@''{\r\n  ''''NoAttribute'''': ''''Value!'''',\r\n  ''''DataMemberAttribute'''': ''''Value!''''\r\n}'', json)", span="8131-8134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m21_3579 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", span="8100-8100", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDataContractSerializationAttributes()", file="JsonSerializerTest.cs"];
m21_4349 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="10007-10007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4350 [label="var encodingName = serializer.Deserialize<string>(reader)", span="10009-10009", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4351 [label="encodingName == null", span="10010-10010", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4353 [label="return Encoding.GetEncoding(encodingName);", span="10015-10015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4352 [label="return null;", span="10012-10012", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4354 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="10007-10007", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_927 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="2039-2039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_928 [label="BaseWithContract baseWith = new SubWithContractNewProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2041-2047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_929 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="2049-2049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_930 [label="baseWith.Virtual = ''Virtual2!''", span="2050-2050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_931 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2051-2051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_932 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="2052-2052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_933 [label="string json = AssertSerializeDeserializeEqual(baseWith)", span="2054-2054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_934 [label="StringAssert.AreEqual(@''{\r\n  ''''JustAProperty'''': ''''JustAProperty2!'''',\r\n  ''''JustAProperty2'''': ''''JustAProperty!'''',\r\n  ''''Virtual'''': ''''Virtual2!'''',\r\n  ''''Virtual2'''': ''''Virtual!'''',\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualWithDataMemberSub'''': ''''VirtualWithDataMember!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''WithDataMemberSub'''': ''''WithDataMember!''''\r\n}'', json)", span="2056-2065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_935 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", span="2039-2039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractNewPropertiesTest()", file="JsonSerializerTest.cs"];
m21_2517 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5638-5638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs"];
m21_2518 [label="return Value;", span="5640-5640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs"];
m21_2519 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", span="5638-5638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.ToString()", file="JsonSerializerTest.cs"];
m21_2606 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m21_2607 [label="NullableDateTimeTestClass d = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(''{\''DateTimeOffsetField\'':\''2000-01-01T00:00:00+06:00\''}'')", span="5848-5848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m21_2608 [label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), d.DateTimeOffsetField)", span="5849-5849", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m21_2609 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", span="5846-5846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializePropertyNullableDateTimeOffsetExactIso()", file="JsonSerializerTest.cs"];
m21_2812 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6319-6319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m21_2813 [label="string json = @''{''''indexed'''':true, ''''startYear'''':1939, ''''values'''':\r\n                            [  3000,  /* 1940-1949 */\r\n                               3000,   3600,   3600,   3600,   3600,   4200,   4200,   4200,   4200,   4800,  /* 1950-1959 */\r\n                               4800,   4800,   4800,   4800,   4800,   4800,   6600,   6600,   7800,   7800,  /* 1960-1969 */\r\n                               7800,   7800,   9000,  10800,  13200,  14100,  15300,  16500,  17700,  22900,  /* 1970-1979 */\r\n                              25900,  29700,  32400,  35700,  37800,  39600,  42000,  43800,  45000,  48000,  /* 1980-1989 */\r\n                              51300,  53400,  55500,  57600,  60600,  61200,  62700,  65400,  68400,  72600,  /* 1990-1999 */\r\n                              76200,  80400,  84900,  87000,  87900,  90000,  94200,  97500, 102000, 106800,  /* 2000-2009 */\r\n                             106800, 106800]  /* 2010-2011 */\r\n                                }''", span="6321-6330", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m21_2814 [label="CommentTestClass commentTestClass = JsonConvert.DeserializeObject<CommentTestClass>(json)", span="6332-6332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m21_2815 [label="Assert.AreEqual(true, commentTestClass.Indexed)", span="6334-6334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m21_2816 [label="Assert.AreEqual(1939, commentTestClass.StartYear)", span="6335-6335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m21_2817 [label="Assert.AreEqual(63, commentTestClass.Values.Count)", span="6336-6336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m21_2818 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", span="6319-6319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CommentTestClassTest()", file="JsonSerializerTest.cs"];
m21_2364 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5312-5312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs"];
m21_2365 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", span="5312-5312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA()", file="JsonSerializerTest.cs"];
m21_1788 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3884-3884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m21_1789 [label="string json = @''{''''DateTimeField'''':''''''''}''", span="3886-3886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m21_1790 [label="NullableDateTimeTestClass c = JsonConvert.DeserializeObject<NullableDateTimeTestClass>(json)", span="3888-3888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m21_1791 [label="Assert.AreEqual(null, c.DateTimeField)", span="3889-3889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m21_1792 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", span="3884-3884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEmptyStringToNullableDateTime()", file="JsonSerializerTest.cs"];
m21_814 [label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="442-442", cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonSerializerTest.cs"];
m21_3017 [label="Entry Newtonsoft.Json.Linq.JToken.CreateReader()", span="1886-1886", cluster="Newtonsoft.Json.Linq.JToken.CreateReader()", file="JsonSerializerTest.cs"];
m21_3822 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8724-8724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs"];
m21_3823 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", span="8724-8724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollection<T>.NoConstructorReadOnlyCollection()", file="JsonSerializerTest.cs"];
m21_562 [label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0", cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonSerializerTest.cs"];
m21_3683 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="929-929", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonSerializerTest.cs"];
m21_1149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2503-2503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m21_1150 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2505-2511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m21_1151 [label="string result = JsonConvert.SerializeObject(testDates)", span="2513-2513", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m21_1152 [label="Assert.AreEqual(@''[''''0100-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+00:00'''',''''2000-01-01T01:01:01+13:00'''',''''2000-01-01T01:01:01-03:30'''']'', result)", span="2514-2514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m21_1153 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", span="2503-2503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetIso()", file="JsonSerializerTest.cs"];
m21_209 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerTest.cs"];
m21_2767 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6207-6207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2768 [label="MultipleParametrizedConstructorsJsonConstructor c = JsonConvert.DeserializeObject<MultipleParametrizedConstructorsJsonConstructor>(''{Value:'value!', Age:1}'')", span="6209-6209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2769 [label="Assert.AreEqual(''Public Parameterized 2'', c.Constructor)", span="6210-6210", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2770 [label="Assert.AreEqual(''value!'', c.Value)", span="6211-6211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2771 [label="Assert.AreEqual(1, c.Age)", span="6212-6212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_2772 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", span="6207-6207", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleParametrizedConstructorsJsonConstructorTest()", file="JsonSerializerTest.cs"];
m21_3291 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7477-7477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m21_3292 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringComparison>(''''); }, ''No JSON content found and type 'System.StringComparison' is not nullable. Path '', line 0, position 0.'')", span="7479-7479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m21_3293 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", span="7477-7477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumFromEmptyString()", file="JsonSerializerTest.cs"];
m21_3548 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="8026-8026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m21_3555 [label="var jsonReader = new JsonTextReader(new StringReader(json))", span="8029-8029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m21_3556 [label="var serializer = new JsonSerializer()", span="8030-8030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m21_3558 [label="return serializer.Deserialize(jsonReader, typeof(T)) as T;", span="8036-8036", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m21_3557 [label="serializer.ContractResolver = new DefaultContractResolver\r\n            {\r\n                IgnoreSerializableAttribute = false\r\n            }", span="8031-8034", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m21_3559 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", span="8026-8026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Deserialize<T>(string)", file="JsonSerializerTest.cs"];
m21_24 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JsonSerializerTest.cs"];
m21_3243 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7389-7389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3244 [label="string json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = null\r\n            })", span="7391-7395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3245 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':null}'', json)", span="7397-7397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3246 [label="WithEnums e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7399-7399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3247 [label="Assert.AreEqual(null, e.NullableEnum)", span="7401-7401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3248 [label="json = JsonConvert.SerializeObject(new WithEnums\r\n            {\r\n                Id = 7,\r\n                NullableEnum = MyEnum.Value2\r\n            })", span="7403-7407", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3249 [label="Assert.AreEqual(@''{''''Id'''':7,''''NullableEnum'''':1}'', json)", span="7409-7409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3250 [label="e = JsonConvert.DeserializeObject<WithEnums>(json)", span="7411-7411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3251 [label="Assert.AreEqual(MyEnum.Value2, e.NullableEnum)", span="7413-7413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3252 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", span="7389-7389", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableEnum()", file="JsonSerializerTest.cs"];
m21_3056 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6967-6967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m21_3057 [label="return new ReflectionValueProvider(member);", span="6969-6969", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m21_3058 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="6967-6967", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m21_1156 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2518-2518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_1157 [label="List<DateTimeOffset> testDates = new List<DateTimeOffset>\r\n            {\r\n                new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n                new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n            }", span="2520-2526", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_1158 [label="string result = JsonConvert.SerializeObject(testDates, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="2528-2528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_1159 [label="Assert.AreEqual(@''[''''\/Date(-59011455539000+0000)\/'''',''''\/Date(946688461000+0000)\/'''',''''\/Date(946641661000+1300)\/'''',''''\/Date(946701061000-0330)\/'''']'', result)", span="2529-2529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_1160 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", span="2518-2518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_3055 [label="Entry Unk.AreEquivalent", span="", cluster="Unk.AreEquivalent", file="JsonSerializerTest.cs"];
m21_4057 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9334-9334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m21_4058 [label="ParticipantEntity product = new ParticipantEntity()", span="9336-9336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m21_4059 [label="product.Properties = new Dictionary<string, string> { { ''s'', ''d'' } }", span="9337-9337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m21_4060 [label="string json = JsonConvert.SerializeObject(product)", span="9338-9338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m21_4061 [label="Assert.AreEqual(@''{''''pa_info'''':{''''s'''':''''d''''}}'', json)", span="9340-9340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m21_4062 [label="ParticipantEntity deserializedProduct = JsonConvert.DeserializeObject<ParticipantEntity>(json)", span="9341-9341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m21_4063 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", span="9334-9334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Main()", file="JsonSerializerTest.cs"];
m21_2363 [label="Entry System.Type.GetProperty(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperty(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m21_843 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JsonSerializerTest.cs"];
m21_1271 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m21_1272 [label="var obj = new { Formatting = ''test'' }", span="2743-2743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m21_1273 [label="JsonSerializerSettings settings = new JsonSerializerSettings { Formatting = Formatting.Indented }", span="2745-2745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m21_1274 [label="string indented = JsonConvert.SerializeObject(obj, settings)", span="2746-2746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m21_1275 [label="string none = JsonConvert.SerializeObject(obj, Formatting.None, settings)", span="2748-2748", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m21_1276 [label="Assert.AreNotEqual(indented, none)", span="2749-2749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m21_1277 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", span="2741-2741", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FormattingOverride()", file="JsonSerializerTest.cs"];
m21_3420 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="442-442", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonSerializerTest.cs"];
m21_3902 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8912-8912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m21_3903 [label="string json =\r\n                JsonConvert.SerializeObject(new AnswerFilterModel(), Formatting.Indented, new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n                        IgnoreSerializableAttribute = false\r\n                    }\r\n                })", span="8914-8921", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m21_3904 [label="StringAssert.AreEqual(@''{\r\n  ''''<Active>k__BackingField'''': false,\r\n  ''''<Ja>k__BackingField'''': false,\r\n  ''''<Handlungsbedarf>k__BackingField'''': false,\r\n  ''''<Beratungsbedarf>k__BackingField'''': false,\r\n  ''''<Unzutreffend>k__BackingField'''': false,\r\n  ''''<Unbeantwortet>k__BackingField'''': false\r\n}'', json)", span="8923-8930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m21_3905 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", span="8912-8912", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontSerializeStaticFields()", file="JsonSerializerTest.cs"];
m21_335 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerTest.cs"];
m21_1097 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.JsonPropertyClass.JsonPropertyClass()", file="JsonSerializerTest.cs"];
m21_3190 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7288-7288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m21_3191 [label="ExceptionAssert.Throws<JsonException>(() =>\r\n            {\r\n                string json = @''{\r\n  ''''PreProperty'''': '';\r\n\r\n                JsonConvert.DeserializeObject<TestObjects.MyClass>(json);\r\n            })", span="7290-7296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m21_3192 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", span="7288-7288", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUnexpectedEndInt()", file="JsonSerializerTest.cs"];
m21_2796 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6269-6269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m21_2797 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject(''null'', typeof(DateTime)); }, ''Error converting value {null} to type 'System.DateTime'. Path '', line 1, position 4.'')", span="6271-6271", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m21_2798 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", span="6269-6269", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullDateTimeValueTest()", file="JsonSerializerTest.cs"];
m21_2189 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4881-4881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m21_2190 [label="ModelStateDictionary<string> modelStateDictionary = new ModelStateDictionary<string>()", span="4883-4883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m21_2191 [label="modelStateDictionary.Add(''key'', ''value'')", span="4884-4884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m21_2192 [label="string json = JsonConvert.SerializeObject(modelStateDictionary)", span="4886-4886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m21_2193 [label="Assert.AreEqual(@''{''''key'''':''''value''''}'', json)", span="4888-4888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m21_2194 [label="ModelStateDictionary<string> newModelStateDictionary = JsonConvert.DeserializeObject<ModelStateDictionary<string>>(json)", span="4890-4890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m21_2195 [label="Assert.AreEqual(1, newModelStateDictionary.Count)", span="4891-4891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m21_2196 [label="Assert.AreEqual(''value'', newModelStateDictionary[''key''])", span="4892-4892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m21_2197 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", span="4881-4881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNonIDictionary()", file="JsonSerializerTest.cs"];
m21_43 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs"];
m21_44 [label="string deserialized = @''{\r\n  ''''Enumerable'''': [ ''''abc'''', ''''def'''' ] \r\n}''", span="229-231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs"];
m21_45 [label="var enumerableClass = JsonConvert.DeserializeObject<GenericIEnumerableWithImplicitConversion>(deserialized)", span="232-232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs"];
m21_46 [label="var enumerableObject = enumerableClass.Enumerable.ToArray()", span="233-233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs"];
m21_47 [label="Assert.AreEqual(2, enumerableObject.Length)", span="234-234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs"];
m21_48 [label="Assert.AreEqual(''abc'', enumerableObject[0].Value)", span="235-235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs"];
m21_49 [label="Assert.AreEqual(''def'', enumerableObject[1].Value)", span="236-236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs"];
m21_50 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", span="227-227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericIEnumerableWithImplicitConversion()", file="JsonSerializerTest.cs"];
m21_4348 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerTest.cs"];
m21_4257 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9782-9782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs"];
m21_4258 [label="DerivedProperty = derivedProperty", span="9785-9785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs"];
m21_4259 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", span="9782-9782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType.DerivedConstructorType(string, string)", file="JsonSerializerTest.cs"];
m21_2362 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", span="507-507", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberValue(System.Reflection.MemberInfo, object)", file="JsonSerializerTest.cs"];
m21_3422 [label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="2096-2096", cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m21_3684 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8329-8329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3685 [label="return ''X'';", span="8331-8331", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3686 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="8329-8329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_1307 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", span="2783-2783", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithTimeSpan.ClassWithTimeSpan()", file="JsonSerializerTest.cs"];
m21_2843 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6431-6431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m21_2844 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6433-6437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m21_2845 [label="DataContractSerializer serializer = new DataContractSerializer(typeof(ChildDataContract))", span="6439-6439", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m21_2847 [label="serializer.WriteObject(ms, cc)", span="6442-6442", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m21_2846 [label="MemoryStream ms = new MemoryStream()", span="6441-6441", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m21_2848 [label="string xml = Encoding.UTF8.GetString(ms.ToArray(), 0, Convert.ToInt32(ms.Length))", span="6444-6444", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m21_2849 [label="Assert.AreEqual(@''<JsonSerializerTest.ChildDataContract xmlns=''''http://schemas.datacontract.org/2004/07/Newtonsoft.Json.Tests.Serialization'''' xmlns:i=''''http://www.w3.org/2001/XMLSchema-instance''''><nonVirtualMember>NonVirtualMember!</nonVirtualMember><virtualMember>VirtualMember!</virtualMember><NewMember i:nil=''''true''''/></JsonSerializerTest.ChildDataContract>'', xml)", span="6446-6446", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m21_2850 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", span="6431-6431", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTestWithDataContractSerializer()", file="JsonSerializerTest.cs"];
m21_2852 [label="Entry System.Convert.ToInt32(long)", span="0-0", cluster="System.Convert.ToInt32(long)", file="JsonSerializerTest.cs"];
m21_1306 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int)", file="JsonSerializerTest.cs"];
m21_2853 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6473-6473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m21_2854 [label="ChildObject cc = new ChildObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6475-6479", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m21_2855 [label="string result = JsonConvert.SerializeObject(cc)", span="6481-6481", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m21_2856 [label="Assert.AreEqual(@''{''''virtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6482-6482", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m21_2857 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", span="6473-6473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildObjectTest()", file="JsonSerializerTest.cs"];
m21_4164 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9533-9533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4165 [label="CultureInfo culture = new CultureInfo(''tr-TR'')", span="9535-9535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4166 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9537-9537", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4168 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9539-9543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4173 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9553-9557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4178 [label="reader = new JsonTextReader(new StringReader(@''''''2000-pie-Dec-Friday-22''''''))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Culture = culture\r\n            }", span="9564-9568", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4167 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9538-9538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4169 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="9545-9545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4172 [label="Assert.AreEqual(dt, dt1)", span="9551-9551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4177 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9562-9562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4171 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9549-9549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4170 [label="Assert.AreEqual(@''''''2000-pie-Ara-Cuma-22'''''', json)", span="9547-9547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4174 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9558-9558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4175 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9560-9560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4176 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9561-9561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4179 [label="v = (JValue)JToken.ReadFrom(reader)", span="9569-9569", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4180 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="9571-9571", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4181 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9572-9572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4182 [label="Assert.AreEqual(''2000-pie-Dec-Friday-22'', v.Value)", span="9573-9573", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4183 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", span="9533-9533", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeAndCulture()", file="JsonSerializerTest.cs"];
m21_4300 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9878-9878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs"];
m21_4301 [label="string JsonMessage = @''{\r\n  ''''From'''': {\r\n    ''''Address'''': ''''askywalker@theEmpire.gov'''',\r\n    ''''DisplayName'''': ''''Darth Vader''''\r\n  },\r\n  ''''Sender'''': null,\r\n  ''''ReplyTo'''': null,\r\n  ''''ReplyToList'''': [],\r\n  ''''To'''': [\r\n    {\r\n      ''''Address'''': ''''lskywalker@theRebellion.org'''',\r\n      ''''DisplayName'''': ''''Luke Skywalker''''\r\n    }\r\n  ],\r\n  ''''Bcc'''': [],\r\n  ''''CC'''': [\r\n    {\r\n      ''''Address'''': ''''lorgana@alderaan.gov'''',\r\n      ''''DisplayName'''': ''''Princess Leia''''\r\n    }\r\n  ],\r\n  ''''Priority'''': 0,\r\n  ''''DeliveryNotificationOptions'''': 0,\r\n  ''''Subject'''': ''''Family tree'''',\r\n  ''''SubjectEncoding'''': null,\r\n  ''''Headers'''': [],\r\n  ''''HeadersEncoding'''': null,\r\n  ''''Body'''': ''''<strong>I am your father!</strong>'''',\r\n  ''''BodyEncoding'''': ''''US-ASCII'''',\r\n  ''''BodyTransferEncoding'''': -1,\r\n  ''''IsBodyHtml'''': true,\r\n  ''''Attachments'''': [\r\n    {\r\n      ''''FileName'''': ''''skywalker family tree.jpg'''',\r\n      ''''ContentBase64'''': ''''AQIDBAU=''''\r\n    }\r\n  ],\r\n  ''''AlternateViews'''': []\r\n}''", span="9880-9918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs"];
m21_4302 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n                {\r\n                    JsonConvert.DeserializeObject<System.Net.Mail.MailMessage>(\r\n                        JsonMessage,\r\n                        new MailAddressReadConverter(),\r\n                        new AttachmentReadConverter(),\r\n                        new EncodingReadConverter());\r\n                },\r\n                ''Cannot populate list type System.Net.Mime.HeaderCollection. Path 'Headers', line 26, position 14.'')", span="9920-9928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs"];
m21_4303 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", span="9878-9878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailMessageConverterTest()", file="JsonSerializerTest.cs"];
m21_792 [label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="301-301", cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonSerializerTest.cs"];
m21_1928 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4130-4130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m21_1929 [label="List<String> strings = new List<String>()", span="4132-4132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m21_1930 [label="strings.Add(''str_1'')", span="4134-4134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m21_1931 [label="strings.Add(''str_2'')", span="4135-4135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m21_1932 [label="strings.Add(''str_3'')", span="4136-4136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m21_1933 [label="string json = JsonConvert.SerializeObject(strings)", span="4138-4138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m21_1934 [label="Assert.AreEqual(@''[''''str_1'''',''''str_2'''',''''str_3'''']'', json)", span="4139-4139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m21_1935 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", span="4130-4130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGenericListOfStrings()", file="JsonSerializerTest.cs"];
m21_1937 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4143-4143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m21_1938 [label="ConstructorReadonlyFields c1 = new ConstructorReadonlyFields(''String!'', int.MaxValue)", span="4145-4145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m21_1939 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="4146-4146", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m21_1940 [label="StringAssert.AreEqual(@''{\r\n  ''''A'''': ''''String!'''',\r\n  ''''B'''': 2147483647\r\n}'', json)", span="4147-4150", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m21_1941 [label="ConstructorReadonlyFields c2 = JsonConvert.DeserializeObject<ConstructorReadonlyFields>(json)", span="4152-4152", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m21_1942 [label="Assert.AreEqual(''String!'', c2.A)", span="4153-4153", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m21_1943 [label="Assert.AreEqual(int.MaxValue, c2.B)", span="4154-4154", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m21_1944 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", span="4143-4143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorReadonlyFieldsTest()", file="JsonSerializerTest.cs"];
m21_33 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m21_34 [label="var mySubclass = MyFactory.InstantiateSubclass()", span="198-198", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m21_35 [label="var myMainClass = MyFactory.InstantiateManiClass()", span="199-199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m21_36 [label="var strJsonSubclass = JsonConvert.SerializeObject(mySubclass, Formatting.Indented)", span="202-202", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m21_38 [label="var strJsonMainClass = JsonConvert.SerializeObject(myMainClass, Formatting.Indented)", span="212-212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m21_37 [label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 123,\r\n  ''''Name'''': ''''ABC'''',\r\n  ''''P1'''': true,\r\n  ''''P2'''': 44\r\n}'', strJsonSubclass)", span="204-209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m21_39 [label="StringAssert.AreEqual(@''{\r\n  ''''ID'''': 567,\r\n  ''''Name'''': ''''XYZ'''',\r\n  ''''Subclass'''': {\r\n    ''''ID'''': 123,\r\n    ''''Name'''': ''''ABC'''',\r\n    ''''P1'''': true,\r\n    ''''P2'''': 44\r\n  }\r\n}'', strJsonMainClass)", span="214-223", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m21_40 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeInterfaceWithHiddenProperties()", file="JsonSerializerTest.cs"];
m21_386 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="JsonSerializerTest.cs"];
m21_347 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", span="828-828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItemProxy.FaqItemProxy()", file="JsonSerializerTest.cs"];
m21_32 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", span="164-164", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MainClass.MainClass()", file="JsonSerializerTest.cs"];
m21_3254 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7417-7417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m21_3255 [label="string json = JsonConvert.SerializeObject(new Widget1 { Id = new WidgetId1 { Value = 1234 } })", span="7419-7419", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m21_3256 [label="Assert.AreEqual(@''{''''Id'''':''''1234''''}'', json)", span="7421-7421", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m21_3257 [label="Widget1 w = JsonConvert.DeserializeObject<Widget1>(@''{''''Id'''':''''1234''''}'')", span="7423-7423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m21_3258 [label="Assert.AreEqual(new WidgetId1 { Value = 1234 }, w.Id)", span="7425-7425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m21_3259 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", span="7417-7417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructWithConverter()", file="JsonSerializerTest.cs"];
m21_3469 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7820-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3470 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data =\r\n                    new[]\r\n                    {\r\n                        ''one'',\r\n                        ''two'',\r\n                        ''three''\r\n                    }\r\n            }", span="7822-7831", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3471 [label="var c2 = JsonConvert.DeserializeObject<PropertyItemConverter>(''{'Data':['::ONE::','::TWO::']}'')", span="7833-7833", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3472 [label="Assert.IsNotNull(c2)", span="7835-7835", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3473 [label="Assert.AreEqual(2, c2.Data.Count)", span="7836-7836", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3474 [label="Assert.AreEqual(''one'', c2.Data[0])", span="7837-7837", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3475 [label="Assert.AreEqual(''two'', c2.Data[1])", span="7838-7838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3476 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", span="7820-7820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3324 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7531-7531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3325 [label="DateTimeTestClass c =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-12-12T12:12:12Z'''',''''DateTimeOffsetField'''':''''2008-12-12T12:12:12Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7533-7539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3326 [label="Assert.AreEqual(new DateTime(2008, 12, 12, 12, 12, 12, 0, DateTimeKind.Utc).ToLocalTime(), c.DateTimeField)", span="7541-7541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3327 [label="Assert.AreEqual(new DateTimeOffset(2008, 12, 12, 12, 12, 12, 0, TimeSpan.Zero), c.DateTimeOffsetField)", span="7542-7542", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3328 [label="Assert.AreEqual(''Pre'', c.PreField)", span="7543-7543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3329 [label="Assert.AreEqual(''Post'', c.PostField)", span="7544-7544", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3330 [label="DateTimeTestClass c2 =\r\n                JsonConvert.DeserializeObject<DateTimeTestClass>(\r\n                    @''{''''PreField'''':''''Pre'''',''''DateTimeField'''':''''2008-01-01T01:01:01Z'''',''''DateTimeOffsetField'''':''''2008-01-01T01:01:01Z'''',''''PostField'''':''''Post''''}'',\r\n                    new JsonSerializerSettings\r\n                    {\r\n                        DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n                    })", span="7546-7552", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3331 [label="Assert.AreEqual(new DateTime(2008, 1, 1, 1, 1, 1, 0, DateTimeKind.Utc).ToLocalTime(), c2.DateTimeField)", span="7554-7554", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3332 [label="Assert.AreEqual(new DateTimeOffset(2008, 1, 1, 1, 1, 1, 0, TimeSpan.Zero), c2.DateTimeOffsetField)", span="7555-7555", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3333 [label="Assert.AreEqual(''Pre'', c2.PreField)", span="7556-7556", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3334 [label="Assert.AreEqual(''Post'', c2.PostField)", span="7557-7557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_3335 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", span="7531-7531", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeUTC()", file="JsonSerializerTest.cs"];
m21_306 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="JsonSerializerTest.cs"];
m21_1308 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2803-2803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m21_1309 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeOnClassTestClass())", span="2805-2805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m21_1310 [label="Assert.AreEqual(@''{''''TheField'''':0,''''Property'''':21}'', json)", span="2807-2807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m21_1311 [label="JsonIgnoreAttributeOnClassTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeOnClassTestClass>(@''{''''TheField'''':99,''''Property'''':-1,''''IgnoredField'''':-1}'')", span="2809-2809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m21_1312 [label="Assert.AreEqual(0, c.IgnoredField)", span="2811-2811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m21_1313 [label="Assert.AreEqual(99, c.Field)", span="2812-2812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m21_1314 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", span="2803-2803", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeOnClassTest()", file="JsonSerializerTest.cs"];
m21_2605 [label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonSerializerTest.cs"];
m21_2925 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6669-6669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m21_2926 [label="string json = JsonConvert.SerializeObject(new ClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                DerivedClassValue = ''DerivedClassValue!'',\r\n                NonSerialized = ''NonSerialized!''\r\n            }, Formatting.Indented)", span="6671-6676", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m21_2927 [label="StringAssert.AreEqual(@''{\r\n  ''''DerivedClassValue'''': ''''DerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6678-6681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m21_2928 [label="json = JsonConvert.SerializeObject(new CollectionClassAttributeDerived\r\n            {\r\n                BaseClassValue = ''BaseClassValue!'',\r\n                CollectionDerivedClassValue = ''CollectionDerivedClassValue!''\r\n            }, Formatting.Indented)", span="6683-6687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m21_2929 [label="StringAssert.AreEqual(@''{\r\n  ''''CollectionDerivedClassValue'''': ''''CollectionDerivedClassValue!'''',\r\n  ''''BaseClassValue'''': ''''BaseClassValue!''''\r\n}'', json)", span="6689-6692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m21_2930 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", span="6669-6669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributesInheritance()", file="JsonSerializerTest.cs"];
m21_23 [label="Entry System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", span="0-0", cluster="System.IO.FileStream.Seek(long, System.IO.SeekOrigin)", file="JsonSerializerTest.cs"];
m21_4400 [label="Entry Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="10171-10171", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m21_4401 [label="Value = value", span="10173-10173", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m21_4402 [label="Age = age", span="10174-10174", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m21_4403 [label="Constructor = ''Public Parameterized 2''", span="10175-10175", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m21_4404 [label="Exit Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", span="10171-10171", cluster="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor.MultipleParametrizedConstructorsJsonConstructor(string, int)", file="JsonSerializerTest.cs"];
m21_2819 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6341-6341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m21_2820 [label="this.A = A", span="6343-6343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m21_2821 [label="B = 2", span="6344-6344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m21_2822 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", span="6341-6341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor.DTOWithParameterisedConstructor(string)", file="JsonSerializerTest.cs"];
m21_131 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="392-392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_132 [label="FooRequired foo1 = new FooRequired(new[] { ''A'', ''B'', ''C'' })", span="394-394", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_133 [label="string json = JsonConvert.SerializeObject(foo1)", span="395-395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_136 [label="Assert.AreEqual(foo1.Bars.Count, foo2.Bars.Count)", span="400-400", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_137 [label="Assert.AreEqual(foo1.Bars[0], foo2.Bars[0])", span="401-401", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_138 [label="Assert.AreEqual(foo1.Bars[1], foo2.Bars[1])", span="402-402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_139 [label="Assert.AreEqual(foo1.Bars[2], foo2.Bars[2])", span="403-403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_134 [label="StringAssert.AreEqual(@''{''''Bars'''':[''''A'''',''''B'''',''''C'''']}'', json)", span="397-397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_135 [label="FooRequired foo2 = JsonConvert.DeserializeObject<FooRequired>(json)", span="399-399", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_140 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", span="392-392", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CaseInsensitiveRequiredPropertyConstructorCreation()", file="JsonSerializerTest.cs"];
m21_1883 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="4037-4037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m21_1884 [label="string json = @''[]''", span="4039-4039", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m21_1885 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new Person()); }, @''Cannot populate JSON array onto type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '', line 1, position 1.'')", span="4041-4041", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m21_1886 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", span="4037-4037", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateArrayIntoObject()", file="JsonSerializerTest.cs"];
m21_3224 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", span="1343-1343", cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs"];
m21_310 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m21_311 [label="CustomerWithMetadataType c = new CustomerWithMetadataType()", span="781-781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_312 [label="c.UpdatedBy_Id = Guid.NewGuid()", span="782-782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_313 [label="string json = JsonConvert.SerializeObject(c)", span="784-784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m21_314 [label="Assert.AreEqual(''{}'', json)", span="786-786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m21_315 [label="CustomerWithMetadataType c2 = JsonConvert.DeserializeObject<CustomerWithMetadataType>(''{'UpdatedBy_Id':'F6E0666D-13C7-4745-B486-800812C8F6DE'}'')", span="788-788", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m21_316 [label="Assert.AreEqual(Guid.Empty, c2.UpdatedBy_Id)", span="790-790", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m21_317 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", span="779-779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType()", file="JsonSerializerTest.cs"];
m21_2259 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, char)", file="JsonSerializerTest.cs"];
m21_3501 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7911-7911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m21_3502 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7913-7917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m21_3503 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented)", span="7919-7919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m21_3504 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-12-12T12:12:12Z'''': 1,\r\n  ''''2013-12-12T12:12:12Z'''': 2\r\n}'', json)", span="7921-7924", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m21_3505 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json)", span="7926-7926", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m21_3506 [label="Assert.AreEqual(2, dic2.Count)", span="7928-7928", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m21_3507 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7929-7929", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m21_3508 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7930-7930", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m21_3509 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", span="7911-7911", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso()", file="JsonSerializerTest.cs"];
m21_1781 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3871-3871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m21_1782 [label="string json = @''{''''key1'''':''''value1'''',''''key2'''':''''value2''''}''", span="3873-3873", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m21_1783 [label="Dictionary<string, string> values = JsonConvert.DeserializeObject<Dictionary<string, string>>(json)", span="3875-3875", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m21_1784 [label="Assert.AreEqual(2, values.Count)", span="3877-3877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m21_1785 [label="Assert.AreEqual(''value1'', values[''key1''])", span="3878-3878", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m21_1786 [label="Assert.AreEqual(''value2'', values[''key2''])", span="3879-3879", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m21_1787 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", span="3871-3871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericDictionary()", file="JsonSerializerTest.cs"];
m21_2041 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4449-4449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m21_2042 [label="return JsonConvert.SerializeObject(this, Formatting.Indented);", span="4451-4451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m21_2043 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", span="4449-4449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>.ToJson()", file="JsonSerializerTest.cs"];
m21_3988 [label="Entry System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_3015 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="JsonSerializerTest.cs"];
m21_4375 [label="Entry Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", span="10058-10058", cluster="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonSerializerTest.cs"];
m21_4376 [label="return MyProperty;", span="10060-10060", cluster="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonSerializerTest.cs"];
m21_4377 [label="Exit Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", span="10058-10058", cluster="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty.GetPropertyValue()", file="JsonSerializerTest.cs"];
m21_4145 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9494-9494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4146 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9496-9496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4147 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9497-9497", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4149 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="9503-9503", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4152 [label="Assert.AreEqual(dt, dt1)", span="9509-9509", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4157 [label="Assert.AreEqual(dt, (DateTime)v.Value)", span="9519-9519", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4148 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9498-9501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4153 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9511-9514", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4158 [label="reader = new JsonTextReader(new StringReader(@''''''abc''''''))\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9521-9524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4151 [label="DateTime dt1 = JsonConvert.DeserializeObject<DateTime>(json, settings)", span="9507-9507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4150 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9505-9505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4154 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9515-9515", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4155 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9517-9517", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4156 [label="Assert.AreEqual(typeof(DateTime), v.Value.GetType())", span="9518-9518", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4159 [label="v = (JValue)JToken.ReadFrom(reader)", span="9525-9525", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4160 [label="Assert.AreEqual(JTokenType.String, v.Type)", span="9527-9527", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4161 [label="Assert.AreEqual(typeof(string), v.Value.GetType())", span="9528-9528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4162 [label="Assert.AreEqual(''abc'', v.Value)", span="9529-9529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_4163 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", span="9494-9494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTime()", file="JsonSerializerTest.cs"];
m21_2668 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5973-5973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m21_2669 [label="string json = ''[123456789876543.21]''", span="5975-5975", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m21_2670 [label="IList<decimal> a = JsonConvert.DeserializeObject<IList<decimal>>(json)", span="5976-5976", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m21_2671 [label="Assert.AreEqual(123456789876543.21m, a[0])", span="5977-5977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m21_2672 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", span="5973-5973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalArrayExact()", file="JsonSerializerTest.cs"];
m21_4265 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9809-9809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4266 [label="throw new NotImplementedException();", span="9811-9811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4267 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9809-9809", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ErroringJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_1809 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3914-3914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m21_1810 [label="string json = @''{id: ''''12'''', name: ''''test'''', items: [{id: ''''112'''', name: ''''testing''''}]}''", span="3916-3916", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m21_1811 [label="ListTestClass l = JsonConvert.DeserializeObject<ListTestClass>(json)", span="3918-3918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m21_1812 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", span="3914-3914", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeOptInClasses()", file="JsonSerializerTest.cs"];
m21_1333 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2843-2843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1334 [label="ConverterPrecedenceClass c1 = new ConverterPrecedenceClass(''!Test!'')", span="2845-2845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1335 [label="string json = JsonConvert.SerializeObject(c1, new ArgumentConverterPrecedenceClassConverter())", span="2847-2847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1336 [label="Assert.AreEqual(@''[''''Class'''',''''!Test!'''']'', json)", span="2848-2848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1337 [label="ConverterPrecedenceClass c2 = JsonConvert.DeserializeObject<ConverterPrecedenceClass>(json, new ArgumentConverterPrecedenceClassConverter())", span="2850-2850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1338 [label="Assert.AreEqual(''!Test!'', c2.TestValue)", span="2852-2852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_1339 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", span="2843-2843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializerShouldUseClassConverterOverArgumentConverter()", file="JsonSerializerTest.cs"];
m21_3749 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8522-8522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3750 [label="var tuple = Tuple.Create(500)", span="8524-8524", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3751 [label="var json = JsonConvert.SerializeObject(tuple, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8525-8528", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3752 [label="Assert.AreEqual(@''{''''m_Item1'''':500}'', json)", span="8529-8529", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3753 [label="var obj = JsonConvert.DeserializeObject<Tuple<int>>(json, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new SerializableContractResolver()\r\n            })", span="8531-8534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3754 [label="Assert.AreEqual(500, obj.Item1)", span="8535-8535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_3755 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", span="8522-8522", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeTupleWithSerializableAttribute()", file="JsonSerializerTest.cs"];
m21_2266 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, ushort)", file="JsonSerializerTest.cs"];
m21_1445 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="3035-3035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1446 [label="UserNullable userNullablle = new UserNullable\r\n            {\r\n                Id = new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''),\r\n                FName = ''FirstValue'',\r\n                LName = ''LastValue'',\r\n                RoleId = 5,\r\n                NullableRoleId = 6,\r\n                NullRoleId = null,\r\n                Active = true\r\n            }", span="3037-3046", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1447 [label="string json = JsonConvert.SerializeObject(userNullablle)", span="3048-3048", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1448 [label="Assert.AreEqual(@''{''''Id'''':''''ad6205e8-0df4-465d-aea6-8ba18e93a7e7'''',''''FName'''':''''FirstValue'''',''''LName'''':''''LastValue'''',''''RoleId'''':5,''''NullableRoleId'''':6,''''NullRoleId'''':null,''''Active'''':true}'', json)", span="3050-3050", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1449 [label="UserNullable userNullablleDeserialized = JsonConvert.DeserializeObject<UserNullable>(json)", span="3052-3052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1450 [label="Assert.AreEqual(new Guid(''AD6205E8-0DF4-465d-AEA6-8BA18E93A7E7''), userNullablleDeserialized.Id)", span="3054-3054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1451 [label="Assert.AreEqual(''FirstValue'', userNullablleDeserialized.FName)", span="3055-3055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1452 [label="Assert.AreEqual(''LastValue'', userNullablleDeserialized.LName)", span="3056-3056", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1453 [label="Assert.AreEqual(5, userNullablleDeserialized.RoleId)", span="3057-3057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1454 [label="Assert.AreEqual(6, userNullablleDeserialized.NullableRoleId)", span="3058-3058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1455 [label="Assert.AreEqual(null, userNullablleDeserialized.NullRoleId)", span="3059-3059", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1456 [label="Assert.AreEqual(true, userNullablleDeserialized.Active)", span="3060-3060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1457 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", span="3035-3035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableMember()", file="JsonSerializerTest.cs"];
m21_1315 [label="Entry Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", span="28-28", cluster="Newtonsoft.Json.Tests.TestObjects.JsonIgnoreAttributeOnClassTestClass.JsonIgnoreAttributeOnClassTestClass()", file="JsonSerializerTest.cs"];
m21_3991 [label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="JsonSerializerTest.cs"];
m21_1922 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4113-4113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m21_1923 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<MemoryStream>(''{ReadTimeout:null}'', new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error converting value {null} to type 'System.Int32'. Path 'ReadTimeout', line 1, position 17.'')", span="4115-4126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m21_1924 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", span="4113-4113", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnsureTypeNullToIntError()", file="JsonSerializerTest.cs"];
m21_2944 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6725-6725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m21_2945 [label="PrivateMembersClassWithAttributes c1 = new PrivateMembersClassWithAttributes(''privateString!'', ''internalString!'', ''readonlyString!'')", span="6727-6727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m21_2946 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6729-6729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m21_2947 [label="StringAssert.AreEqual(@''{\r\n  ''''_privateString'''': ''''privateString!'''',\r\n  ''''_readonlyString'''': ''''readonlyString!'''',\r\n  ''''_internalString'''': ''''internalString!''''\r\n}'', json)", span="6730-6734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m21_2948 [label="PrivateMembersClassWithAttributes c2 = JsonConvert.DeserializeObject<PrivateMembersClassWithAttributes>(json)", span="6736-6736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m21_2949 [label="Assert.AreEqual(''readonlyString!'', c2.UseValue())", span="6737-6737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m21_2950 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", span="6725-6725", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributesTest()", file="JsonSerializerTest.cs"];
m21_3813 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8701-8701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m21_3814 [label="StringWriter sw = new StringWriter()", span="8703-8703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m21_3815 [label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="8704-8704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m21_3819 [label="string json = sw.ToString()", span="8715-8715", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m21_3816 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml,\r\n                Formatting = Formatting.Indented\r\n            })", span="8706-8710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m21_3817 [label="serializer.Serialize(jsonWriter, new { html = ''<html></html>'' })", span="8711-8711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m21_3818 [label="Assert.AreEqual(StringEscapeHandling.Default, jsonWriter.StringEscapeHandling)", span="8713-8713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m21_3820 [label="StringAssert.AreEqual(@''{\r\n  ''''html'''': ''''\u003chtml\u003e\u003c/html\u003e''''\r\n}'', json)", span="8717-8719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m21_3821 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", span="8701-8701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonSerializerStringEscapeHandling()", file="JsonSerializerTest.cs"];
m21_190 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs"];
m21_191 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new DictionaryWithNoNull()); }, ''Cannot write a null value for property 'Name'. Property requires a non-null value. Path ''.'')", span="501-501", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs"];
m21_192 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", span="499-499", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Serialize_ItemRequired_DisallowedNull()", file="JsonSerializerTest.cs"];
m21_2262 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, short)", file="JsonSerializerTest.cs"];
m21_2628 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", span="5887-5887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedEvent.DerivedEvent()", file="JsonSerializerTest.cs"];
m21_1869 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="4011-4011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m21_1870 [label="string json = @''[new Constructor(123)]''", span="4013-4013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m21_1871 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Person>>(json); }, @''Error converting value ''''Constructor'''' to type 'Newtonsoft.Json.Tests.TestObjects.Organization.Person'. Path '[0]', line 1, position 17.'')", span="4015-4015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m21_1872 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", span="4011-4011", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotDeserializeConstructorIntoObjectNested()", file="JsonSerializerTest.cs"];
m21_1956 [label="Entry Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.StructTest.StructTest()", file="JsonSerializerTest.cs"];
m21_3336 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m21_794 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1705-1705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m21_795 [label="Regex regex = new Regex(''(hi)'', RegexOptions.CultureInvariant)", span="1707-1707", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m21_796 [label="string json = JsonConvert.SerializeObject(regex, Formatting.Indented)", span="1709-1709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m21_797 [label="Regex r2 = JsonConvert.DeserializeObject<Regex>(json)", span="1711-1711", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m21_798 [label="Assert.AreEqual(''(hi)'', r2.ToString())", span="1713-1713", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m21_799 [label="Assert.AreEqual(RegexOptions.CultureInvariant, r2.Options)", span="1714-1714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m21_800 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", span="1705-1705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeRegex()", file="JsonSerializerTest.cs"];
m21_1672 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3592-3592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1673 [label="OptInClass optInClass = new OptInClass()", span="3594-3594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1674 [label="optInClass.Age = 26", span="3595-3595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1675 [label="optInClass.Name = ''James NK''", span="3596-3596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1676 [label="optInClass.NotIncluded = ''Poor me :(''", span="3597-3597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1677 [label="string json = JsonConvert.SerializeObject(optInClass, Formatting.Indented)", span="3599-3599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1678 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''Age'''': 26\r\n}'', json)", span="3601-3604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1679 [label="OptInClass newOptInClass = JsonConvert.DeserializeObject<OptInClass>(@''{\r\n  ''''Name'''': ''''James NK'''',\r\n  ''''NotIncluded'''': ''''Ignore me!'''',\r\n  ''''Age'''': 26\r\n}'')", span="3606-3610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1680 [label="Assert.AreEqual(26, newOptInClass.Age)", span="3611-3611", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1681 [label="Assert.AreEqual(''James NK'', newOptInClass.Name)", span="3612-3612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1682 [label="Assert.AreEqual(null, newOptInClass.NotIncluded)", span="3613-3613", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_1683 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", span="3592-3592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClassMetadataSerialization()", file="JsonSerializerTest.cs"];
m21_200 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="511-511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs"];
m21_201 [label="return propertyName.ToUpper(CultureInfo.InvariantCulture);", span="516-516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs"];
m21_202 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", span="511-511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolvePropertyName(string)", file="JsonSerializerTest.cs"];
m21_1121 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="JsonSerializerTest.cs"];
m21_1559 [label="LogEntry entry = new LogEntry\r\n            {\r\n                LogDate = new DateTime(2009, 2, 15, 0, 0, 0, DateTimeKind.Utc),\r\n                Details = ''Application started.''\r\n            }", span="3296-3300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m21_1558 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3294-3294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m21_1560 [label="string defaultJson = JsonConvert.SerializeObject(entry)", span="3302-3302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m21_1561 [label="string isoJson = JsonConvert.SerializeObject(entry, new IsoDateTimeConverter())", span="3305-3305", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m21_1562 [label="string javascriptJson = JsonConvert.SerializeObject(entry, new JavaScriptDateTimeConverter())", span="3308-3308", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m21_1563 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', defaultJson)", span="3311-3311", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m21_1564 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':''''2009-02-15T00:00:00Z''''}'', isoJson)", span="3312-3312", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m21_1565 [label="Assert.AreEqual(@''{''''Details'''':''''Application started.'''',''''LogDate'''':new Date(1234656000000)}'', javascriptJson)", span="3313-3313", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m21_1566 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", span="3294-3294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.WriteJsonDates()", file="JsonSerializerTest.cs"];
m21_1260 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.ConverableMembers.ConverableMembers()", file="JsonSerializerTest.cs"];
m21_1023 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2224-2224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1024 [label="MethodExecutorObject executorObject = new MethodExecutorObject()", span="2226-2226", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1025 [label="executorObject.serverClassName = ''BanSubs''", span="2227-2227", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1026 [label="executorObject.serverMethodParams = new object[] { ''21321546'', ''101'', ''1236'', ''D:\\1.txt'' }", span="2228-2228", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1027 [label="executorObject.clientGetResultFunction = ''ClientBanSubsCB''", span="2229-2229", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1028 [label="string output = JsonConvert.SerializeObject(executorObject)", span="2231-2231", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1030 [label="Assert.AreNotSame(executorObject, executorObject2)", span="2235-2235", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1029 [label="MethodExecutorObject executorObject2 = JsonConvert.DeserializeObject(output, typeof(MethodExecutorObject)) as MethodExecutorObject", span="2233-2233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1031 [label="Assert.AreEqual(executorObject2.serverClassName, ''BanSubs'')", span="2236-2236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1032 [label="Assert.AreEqual(executorObject2.serverMethodParams.Length, 4)", span="2237-2237", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1033 [label="CustomAssert.Contains(executorObject2.serverMethodParams, ''101'')", span="2238-2238", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1034 [label="Assert.AreEqual(executorObject2.clientGetResultFunction, ''ClientBanSubsCB'')", span="2239-2239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_1035 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", span="2224-2224", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TestMethodExecutorObject()", file="JsonSerializerTest.cs"];
m21_149 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs"];
m21_150 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Binding>(''{requiredProperty:''}''); }, ''Required property 'RequiredProperty' expects a value but got null. Path '', line 1, position 21.'')", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs"];
m21_151 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CoercedEmptyStringWithRequired()", file="JsonSerializerTest.cs"];
m21_2229 [label="Entry System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetDecimal(string)", file="JsonSerializerTest.cs"];
m21_2931 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", span="6609-6609", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassAttributeDerived.ClassAttributeDerived()", file="JsonSerializerTest.cs"];
m21_824 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_825 [label="var json = @''{''''foo'''':''''value''''}''", span="1777-1777", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_826 [label="var deserialized = JsonConvert.DeserializeObject<Foo1>(json)", span="1778-1778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_827 [label="Assert.AreEqual(''value'', deserialized.foo)", span="1779-1779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_828 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", span="1775-1775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_962 [label="Entry System.IO.MemoryStream.ToArray()", span="0-0", cluster="System.IO.MemoryStream.ToArray()", file="JsonSerializerTest.cs"];
m21_2992 [label="Entry Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonSerializerTest.cs"];
m21_3376 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7662-7662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3377 [label="Color color = (Color)value", span="7664-7664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3379 [label="writer.WriteValue('':::'' + fixedColor.ToKnownColor().ToString().ToUpper() + '':::'')", span="7667-7667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3378 [label="Color fixedColor = (color == Color.White || color == Color.Black) ? color : Color.Gray", span="7665-7665", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3380 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="7662-7662", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4116 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9435-9435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4117 [label="throw new InvalidCastException();", span="9437-9437", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4118 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", span="9435-9435", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToUInt16(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_2236 [label="Entry System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetUInt64(string)", file="JsonSerializerTest.cs"];
m21_319 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="JsonSerializerTest.cs"];
m21_2586 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5800-5800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m21_2587 [label="StructWithAttribute testStruct = new StructWithAttribute\r\n            {\r\n                MyInt = int.MaxValue\r\n            }", span="5802-5805", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m21_2588 [label="string json = JsonConvert.SerializeObject(testStruct, Formatting.Indented)", span="5807-5807", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m21_2589 [label="StringAssert.AreEqual(@''{\r\n  ''''MyInt'''': 2147483647\r\n}'', json)", span="5809-5811", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m21_2590 [label="StructWithAttribute newStruct = JsonConvert.DeserializeObject<StructWithAttribute>(json)", span="5813-5813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m21_2591 [label="Assert.AreEqual(int.MaxValue, newStruct.MyInt)", span="5815-5815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m21_2592 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", span="5800-5800", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeStructWithJsonObjectAttribute()", file="JsonSerializerTest.cs"];
m21_112 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="352-352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_113 [label="IList<bool?> l = JsonConvert.DeserializeObject<IList<bool?>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE',\r\n  '',\r\n  null\r\n]'')", span="354-370", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_114 [label="int i = 0", span="372-372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_115 [label="Assert.AreEqual(true, l[i++])", span="373-373", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_116 [label="Assert.AreEqual(false, l[i++])", span="374-374", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_117 [label="Assert.AreEqual(true, l[i++])", span="375-375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_118 [label="Assert.AreEqual(false, l[i++])", span="376-376", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_119 [label="Assert.AreEqual(true, l[i++])", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_120 [label="Assert.AreEqual(true, l[i++])", span="378-378", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_121 [label="Assert.AreEqual(true, l[i++])", span="379-379", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_122 [label="Assert.AreEqual(true, l[i++])", span="380-380", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_123 [label="Assert.AreEqual(true, l[i++])", span="381-381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_124 [label="Assert.AreEqual(true, l[i++])", span="382-382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_125 [label="Assert.AreEqual(true, l[i++])", span="383-383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_126 [label="Assert.AreEqual(false, l[i++])", span="384-384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_127 [label="Assert.AreEqual(false, l[i++])", span="385-385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_128 [label="Assert.AreEqual(null, l[i++])", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_129 [label="Assert.AreEqual(null, l[i++])", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_130 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", span="352-352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableBooleans()", file="JsonSerializerTest.cs"];
m21_982 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", span="692-692", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type)", file="JsonSerializerTest.cs"];
m21_1594 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3395-3395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1595 [label="string json = ''{ 'testProperty1': 'value' }''", span="3397-3397", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1596 [label="ConstructorAndDefaultValueAttributeTestClass c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.Populate\r\n            })", span="3399-3402", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1599 [label="c = JsonConvert.DeserializeObject<ConstructorAndDefaultValueAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                DefaultValueHandling = DefaultValueHandling.IgnoreAndPopulate\r\n            })", span="3406-3409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1597 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="3403-3403", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1598 [label="Assert.AreEqual(21, c.TestProperty2)", span="3404-3404", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1600 [label="Assert.AreEqual(''value'', c.TestProperty1)", span="3410-3410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1601 [label="Assert.AreEqual(21, c.TestProperty2)", span="3411-3411", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_1602 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", span="3395-3395", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulateDefaultValueWhenUsingConstructor()", file="JsonSerializerTest.cs"];
m21_2414 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", span="5385-5385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.XmlNodeTestObject.XmlNodeTestObject()", file="JsonSerializerTest.cs"];
m21_3948 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="JsonSerializerTest.cs"];
m21_2750 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", span="133-133", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m21_2802 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6275-6275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m21_2803 [label="object dateTime = JsonConvert.DeserializeObject(''null'', typeof(DateTime?))", span="6277-6277", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m21_2804 [label="Assert.IsNull(dateTime)", span="6279-6279", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m21_2805 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", span="6275-6275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullNullableDateTimeValueTest()", file="JsonSerializerTest.cs"];
m21_3567 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="8091-8091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m21_3568 [label="string json = JsonConvert.SerializeObject(new IgnoreDataMemberTestClass() { Ignored = int.MaxValue }, Formatting.Indented)", span="8093-8093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m21_3569 [label="Assert.AreEqual(@''{}'', json)", span="8094-8094", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m21_3570 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", span="8091-8091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreDataMemberTest()", file="JsonSerializerTest.cs"];
m21_3104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="7089-7089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3105 [label="IList<DateTimeOffset?> d1 = new List<DateTimeOffset?> { null }", span="7091-7091", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3106 [label="string json = JsonConvert.SerializeObject(d1)", span="7093-7093", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3108 [label="Assert.AreEqual(d1.Count, d2.Count)", span="7097-7097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3109 [label="Assert.AreEqual(d1[0], d2[0])", span="7098-7098", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3107 [label="IList<DateTimeOffset?> d2 = JsonConvert.DeserializeObject<IList<DateTimeOffset?>>(json)", span="7095-7095", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3110 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", span="7089-7089", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadForTypeHackFixDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_3824 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8730-8730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs"];
m21_3825 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<NoConstructorReadOnlyCollection<int>>(''[1]''), ''Cannot deserialize readonly or fixed size list: Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+NoConstructorReadOnlyCollection`1[System.Int32]. Path '', line 1, position 1.'')", span="8732-8732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs"];
m21_3826 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", span="8730-8730", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NoConstructorReadOnlyCollectionTest()", file="JsonSerializerTest.cs"];
m21_715 [label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="239-239", cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerTest.cs"];
m21_2232 [label="Entry System.Runtime.Serialization.SerializationInfo.GetSByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetSByte(string)", file="JsonSerializerTest.cs"];
m21_3724 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8449-8449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m21_3725 [label="string json = @''[\r\n        900\r\n      ]''", span="8451-8453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m21_3726 [label="var l = JsonConvert.DeserializeObject<IReadOnlyList<int>>(json)", span="8455-8455", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m21_3727 [label="int i = l[0]", span="8457-8457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m21_3728 [label="Assert.AreEqual(900, i)", span="8460-8460", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m21_3729 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", span="8449-8449", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeReadOnlyListWithInt()", file="JsonSerializerTest.cs"];
m21_817 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_818 [label="var original = new Foo1 { foo = ''value'' }", span="1768-1768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_819 [label="var json = JsonConvert.SerializeObject(original)", span="1769-1769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_820 [label="var expectedJson = @''{''''foo'''':''''value''''}''", span="1770-1770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_821 [label="Assert.AreEqual(expectedJson, json)", span="1771-1771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_822 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", span="1766-1766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseClassSerializesAsExpected()", file="JsonSerializerTest.cs"];
m21_2610 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5853-5853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_2611 [label="var serializeObject = JsonConvert.SerializeObject(new TimeZoneOffsetObject\r\n            {\r\n                Offset = new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6))\r\n            }, Formatting.None, new JsonSerializerSettings { DateFormatHandling = DateFormatHandling.MicrosoftDateFormat })", span="5855-5858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_2612 [label="Assert.AreEqual(''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}'', serializeObject)", span="5860-5860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_2613 [label="JsonTextReader reader = new JsonTextReader(new StringReader(serializeObject))", span="5862-5862", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_2614 [label="JsonSerializer serializer = new JsonSerializer()", span="5864-5864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_2616 [label="var deserializeObject = serializer.Deserialize<TimeZoneOffsetObject>(reader)", span="5867-5867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_2615 [label="serializer.DateParseHandling = DateParseHandling.None", span="5865-5865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_2617 [label="Assert.AreEqual(TimeSpan.FromHours(6), deserializeObject.Offset.Offset)", span="5869-5869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_2618 [label="Assert.AreEqual(new DateTime(2000, 1, 1), deserializeObject.Offset.Date)", span="5870-5870", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_2619 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", span="5853-5853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReadWriteTimeZoneOffsetMsAjax()", file="JsonSerializerTest.cs"];
m21_560 [label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", span="0-0", cluster="System.Runtime.Serialization.StreamingContext.StreamingContext(System.Runtime.Serialization.StreamingContextStates)", file="JsonSerializerTest.cs"];
m21_751 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1610-1610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_752 [label="_serializationInfo == null", span="1612-1612", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_753 [label="return;", span="1614-1614", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_754 [label="_stringValue = _serializationInfo.GetString(''stringValue'')", span="1617-1617", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_755 [label="_intValue = _serializationInfo.GetInt32(''intValue'')", span="1618-1618", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_756 [label="_person1 = (PersonReference)_serializationInfo.GetValue(''person1'', typeof(PersonReference))", span="1619-1619", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_757 [label="_person2 = (PersonReference)_serializationInfo.GetValue(''person2'', typeof(PersonReference))", span="1620-1620", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_758 [label="_person3 = (PersonReference)_serializationInfo.GetValue(''person3'', typeof(PersonReference))", span="1621-1621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_759 [label="_parent = (PreserveReferencesCallbackTestObject)_serializationInfo.GetValue(''parent'', typeof(PreserveReferencesCallbackTestObject))", span="1622-1622", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_760 [label="_serializationInfo = null", span="1624-1624", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_761 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", span="1610-1610", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.OnDeserializedMethod(System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_1437 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="3023-3023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1438 [label="string json = @''{''''first_name'''':''''FirstNameValue'''',''''RawContent'''':[1,2,3,4,5],''''last_name'''':''''LastNameValue''''}''", span="3025-3025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1439 [label="PersonRaw personRaw = JsonConvert.DeserializeObject<PersonRaw>(json)", span="3027-3027", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1440 [label="Assert.AreEqual(''FirstNameValue'', personRaw.FirstName)", span="3029-3029", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1441 [label="Assert.AreEqual(''[1,2,3,4,5]'', personRaw.RawContent.ToString())", span="3030-3030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1442 [label="Assert.AreEqual(''LastNameValue'', personRaw.LastName)", span="3031-3031", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_1443 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", span="3023-3023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeJsonRaw()", file="JsonSerializerTest.cs"];
m21_2158 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JsonSerializerTest.cs"];
m21_2329 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5316-5316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2366 [label="AA_field1 = f", span="5318-5318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2367 [label="AA_field2 = f", span="5319-5319", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2368 [label="AA_property1 = f", span="5320-5320", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2369 [label="AA_property2 = f", span="5321-5321", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2370 [label="AA_property3 = f", span="5322-5322", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2371 [label="AA_property4 = f", span="5323-5323", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2372 [label="AA_property5 = f", span="5324-5324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2373 [label="AA_property6 = f", span="5325-5325", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2374 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", span="5316-5316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA.AA(int)", file="JsonSerializerTest.cs"];
m21_2533 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5671-5671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2534 [label="string jsonText = JsonConvert.SerializeObject(new double?[] { 2.4, 4.3, null }, Formatting.Indented)", span="5673-5673", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2535 [label="StringAssert.AreEqual(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', jsonText)", span="5675-5679", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2536 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", span="5671-5671", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2651 [label="Entry Unk.SerializeObject", span="", cluster="Unk.SerializeObject", file="JsonSerializerTest.cs"];
m21_3477 [label="Entry Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.PropertyItemConverter.PropertyItemConverter()", file="JsonSerializerTest.cs"];
m21_4342 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9985-9985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4343 [label="throw new NotImplementedException();", span="9987-9987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4344 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="9985-9985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_1316 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2816-2816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m21_1317 [label="ConstructorCaseSensitivityClass c = new ConstructorCaseSensitivityClass(''param1'', ''Param1'', ''Param2'')", span="2818-2818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m21_1318 [label="string json = JsonConvert.SerializeObject(c)", span="2820-2820", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m21_1319 [label="ConstructorCaseSensitivityClass deserialized = JsonConvert.DeserializeObject<ConstructorCaseSensitivityClass>(json)", span="2822-2822", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m21_1320 [label="Assert.AreEqual(''param1'', deserialized.param1)", span="2824-2824", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m21_1321 [label="Assert.AreEqual(''Param1'', deserialized.Param1)", span="2825-2825", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m21_1322 [label="Assert.AreEqual(''Param2'', deserialized.Param2)", span="2826-2826", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m21_1323 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", span="2816-2816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCaseSensitivity()", file="JsonSerializerTest.cs"];
m21_95 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="317-317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_96 [label="IList<bool> l = JsonConvert.DeserializeObject<IList<bool>>(@''[\r\n  1,\r\n  0,\r\n  1.1,\r\n  0.0,\r\n  0.000000000001,\r\n  9999999999,\r\n  -9999999999,\r\n  9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  -9999999999999999999999999999999999999999999999999999999999999999999999,\r\n  'true',\r\n  'TRUE',\r\n  'false',\r\n  'FALSE'\r\n]'')", span="319-333", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_97 [label="int i = 0", span="335-335", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_98 [label="Assert.AreEqual(true, l[i++])", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_99 [label="Assert.AreEqual(false, l[i++])", span="337-337", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_100 [label="Assert.AreEqual(true, l[i++])", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_101 [label="Assert.AreEqual(false, l[i++])", span="339-339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_102 [label="Assert.AreEqual(true, l[i++])", span="340-340", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_103 [label="Assert.AreEqual(true, l[i++])", span="341-341", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_104 [label="Assert.AreEqual(true, l[i++])", span="342-342", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_105 [label="Assert.AreEqual(true, l[i++])", span="343-343", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_106 [label="Assert.AreEqual(true, l[i++])", span="344-344", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_107 [label="Assert.AreEqual(true, l[i++])", span="345-345", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_108 [label="Assert.AreEqual(true, l[i++])", span="346-346", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_109 [label="Assert.AreEqual(false, l[i++])", span="347-347", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_110 [label="Assert.AreEqual(false, l[i++])", span="348-348", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_111 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", span="317-317", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBooleans()", file="JsonSerializerTest.cs"];
m21_452 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1145-1145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs"];
m21_453 [label="string json = ''['1.2.3.4444444444444444444444']''", span="1147-1147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs"];
m21_454 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<List<Version>>(json); }, @''Error converting value ''''1.2.3.4444444444444444444444'''' to type 'System.Version'. Path '[0]', line 1, position 31.'')", span="1149-1149", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs"];
m21_455 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", span="1145-1145", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString_Fail()", file="JsonSerializerTest.cs"];
m21_2569 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5757-5757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2570 [label="string classRef = typeof(StringDictionary).FullName", span="5759-5759", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2571 [label="StringDictionaryTestClass s1 = new StringDictionaryTestClass()\r\n            {\r\n                StringDictionaryProperty = new StringDictionary()\r\n                {\r\n                    { ''1'', ''One'' },\r\n                    { ''2'', ''II'' },\r\n                    { ''3'', ''3'' }\r\n                }\r\n            }", span="5761-5769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2579 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<StringDictionaryTestClass>(json); }, ''Cannot create and populate list type '' + classRef + ''. Path 'StringDictionaryProperty', line 2, position 31.'')", span="5785-5785", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2572 [label="string json = JsonConvert.SerializeObject(s1, Formatting.Indented)", span="5771-5771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2573 [label="s1.StringDictionaryProperty is IDictionary<string, string>", span="5774-5774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2574 [label="StringDictionaryTestClass d = JsonConvert.DeserializeObject<StringDictionaryTestClass>(json)", span="5776-5776", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2575 [label="Assert.AreEqual(3, d.StringDictionaryProperty.Count)", span="5778-5778", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2576 [label="Assert.AreEqual(''One'', d.StringDictionaryProperty[''1''])", span="5779-5779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2577 [label="Assert.AreEqual(''II'', d.StringDictionaryProperty[''2''])", span="5780-5780", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2578 [label="Assert.AreEqual(''3'', d.StringDictionaryProperty[''3''])", span="5781-5781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", span="5757-5757", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StringDictionaryTest()", file="JsonSerializerTest.cs"];
m21_2093 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4630-4630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2094 [label="CircularConstructor1 c1 = new CircularConstructor1(null)\r\n            {\r\n                StringProperty = ''Value!''\r\n            }", span="4632-4635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2095 [label="CircularConstructor2 c2 = new CircularConstructor2(null)\r\n            {\r\n                IntProperty = 1\r\n            }", span="4637-4640", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2096 [label="c1.C2 = c2", span="4642-4642", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2097 [label="c2.C1 = c1", span="4643-4643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2098 [label="string json = JsonConvert.SerializeObject(c1, new JsonSerializerSettings\r\n            {\r\n                ReferenceLoopHandling = ReferenceLoopHandling.Ignore,\r\n                Formatting = Formatting.Indented\r\n            })", span="4645-4649", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2099 [label="StringAssert.AreEqual(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'', json)", span="4651-4656", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2100 [label="CircularConstructor1 newC1 = JsonConvert.DeserializeObject<CircularConstructor1>(@''{\r\n  ''''C2'''': {\r\n    ''''IntProperty'''': 1,\r\n    ''''C1'''': {}\r\n  },\r\n  ''''StringProperty'''': ''''Value!''''\r\n}'')", span="4658-4664", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2101 [label="Assert.AreEqual(''Value!'', newC1.StringProperty)", span="4666-4666", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2102 [label="Assert.AreEqual(1, newC1.C2.IntProperty)", span="4667-4667", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2103 [label="Assert.AreEqual(null, newC1.C2.C1.StringProperty)", span="4668-4668", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2104 [label="Assert.AreEqual(null, newC1.C2.C1.C2)", span="4669-4669", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_2105 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", span="4630-4630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructorDeserialize()", file="JsonSerializerTest.cs"];
m21_3118 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7120-7120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs"];
m21_3119 [label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7122-7128", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs"];
m21_3120 [label="HasByteArray value = JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="7129-7132", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs"];
m21_3121 [label="CollectionAssert.AreEquivalent(Convert.FromBase64String(''cGFzc3dvcmQ=''), value.EncryptedPassword)", span="7134-7134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs"];
m21_3122 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", span="7120-7120", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName()", file="JsonSerializerTest.cs"];
m21_1284 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2762-2762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m21_1285 [label="Guid guid = new Guid(''BED7F4EA-1A96-11d2-8F08-00A0C9A6186D'')", span="2764-2764", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m21_1286 [label="string json = JsonConvert.SerializeObject(new ClassWithGuid { GuidField = guid })", span="2766-2766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m21_1289 [label="Assert.AreEqual(guid, c.GuidField)", span="2770-2770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m21_1287 [label="Assert.AreEqual(@''{''''GuidField'''':''''bed7f4ea-1a96-11d2-8f08-00a0c9a6186d''''}'', json)", span="2767-2767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m21_1288 [label="ClassWithGuid c = JsonConvert.DeserializeObject<ClassWithGuid>(json)", span="2769-2769", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m21_1290 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", span="2762-2762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GuidTest()", file="JsonSerializerTest.cs"];
m21_0 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", span="103-103", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_1 [label="var s = System.IO.File.OpenRead(''large.json'')", span="105-105", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_2 [label="JsonTextReader reader = new JsonTextReader(new StreamReader(s))", span="109-109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_4309 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", span="10000-10000", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EncodingReadConverter.EncodingReadConverter()", file="JsonSerializerTest.cs"];
m21_2698 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="6035-6035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m21_2699 [label="IDoWork = doWork", span="6038-6038", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m21_2700 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", span="6035-6035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived.Derived(string, string)", file="JsonSerializerTest.cs"];
m21_3174 [label="Entry Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.Widget.Widget()", file="JsonSerializerTest.cs"];
m21_2864 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", span="6466-6466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObject.ChildWithDifferentOverrideObject()", file="JsonSerializerTest.cs"];
m21_3313 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7508-7508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m21_3314 [label="ExceptionAssert.Throws<ArgumentNullException>(\r\n                () => { JsonConvert.DeserializeObject(null); },\r\n                new[]\r\n                {\r\n                    ''Value cannot be null.'' + Environment.NewLine + ''Parameter name: value'',\r\n                    ''Argument cannot be null.'' + Environment.NewLine + ''Parameter name: value'' // mono\r\n                })", span="7510-7516", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m21_3315 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", span="7508-7508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeFromNullString()", file="JsonSerializerTest.cs"];
m21_1196 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m21_1197 [label="string json = JsonConvert.SerializeObject(new object())", span="2602-2602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m21_1198 [label="Assert.AreEqual(''{}'', json)", span="2603-2603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m21_1199 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", span="2600-2600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObject()", file="JsonSerializerTest.cs"];
m21_1684 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", span="3572-3572", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OptInClass.OptInClass()", file="JsonSerializerTest.cs"];
m21_2401 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="JsonSerializerTest.cs"];
m21_3654 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", span="8287-8287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs"];
m21_3655 [label="string json = @''[{ ''''MyProperty'''':{''''Key'''':''''Value''''}} /*this is a comment */\r\n// this is also a comment\r\n,{}''", span="8289-8291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs"];
m21_3656 [label="JsonSerializer serializer = new JsonSerializer()", span="8293-8293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs"];
m21_3658 [label="var reader = new JsonTextReader(new StringReader(json))", span="8295-8295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs"];
m21_3657 [label="serializer.CheckAdditionalContent = true", span="8294-8294", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs"];
m21_3661 [label="ExceptionAssert.Throws<JsonSerializationException>(() => serializer.Deserialize(reader, typeof(MyType)),\r\n                ''Additional text found in JSON string after finishing deserializing object. Path '[1]', line 3, position 2.'')", span="8299-8300", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs"];
m21_3659 [label="reader.Read()", span="8296-8296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs"];
m21_3660 [label="reader.Read()", span="8297-8297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs"];
m21_3662 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", span="8287-8287", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AdditionalContentAfterComments()", file="JsonSerializerTest.cs"];
m21_1351 [label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonSerializerTest.cs"];
m21_2520 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m21_2521 [label="return new DictionaryKey() { Value = value };", span="5645-5645", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m21_2522 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", span="5643-5643", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey.implicit operator Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey(string)", file="JsonSerializerTest.cs"];
m21_2837 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6409-6409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m21_2838 [label="ChildDataContract cc = new ChildDataContract\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6411-6415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m21_2839 [label="string result = JsonConvert.SerializeObject(cc, Formatting.Indented)", span="6417-6417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m21_2840 [label="StringAssert.AreEqual(@''{\r\n  ''''virtualMember'''': ''''VirtualMember!'''',\r\n  ''''nonVirtualMember'''': ''''NonVirtualMember!''''\r\n}'', result)", span="6424-6427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m21_2841 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", span="6409-6409", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractTest()", file="JsonSerializerTest.cs"];
m21_2836 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", span="6372-6372", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.EnumerableArrayPropertyClass.EnumerableArrayPropertyClass()", file="JsonSerializerTest.cs"];
m21_1591 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3383-3383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs"];
m21_1592 [label="TestProperty1 = testProperty1", span="3385-3385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs"];
m21_1593 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", span="3383-3383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass.ConstructorAndDefaultValueAttributeTestClass(string)", file="JsonSerializerTest.cs"];
m21_3053 [label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="400-400", cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonSerializerTest.cs"];
m21_1765 [label="Entry Newtonsoft.Json.Tests.TestObjects.Content.Content()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Content.Content()", file="JsonSerializerTest.cs"];
m21_29 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs"];
m21_30 [label="return new MainClass\r\n                {\r\n                    ID = 567,\r\n                    Name = ''XYZ'',\r\n                    Subclass = InstantiateSubclass()\r\n                };", span="186-191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs"];
m21_31 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", span="184-184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyFactory.InstantiateManiClass()", file="JsonSerializerTest.cs"];
m21_2129 [label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0", cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="JsonSerializerTest.cs"];
m21_2361 [label="Entry System.Type.GetField(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetField(string, System.Reflection.BindingFlags)", file="JsonSerializerTest.cs"];
m21_3059 [label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="43-43", cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="JsonSerializerTest.cs"];
m21_3419 [label="Entry Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", span="272-272", cluster="Newtonsoft.Json.Bson.BsonWriter.WriteValue(string)", file="JsonSerializerTest.cs"];
m21_1250 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2678-2678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_1251 [label="string json = JsonConvert.SerializeObject(new ConverableMembers(), Formatting.Indented)", span="2680-2680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_1252 [label="string expected = null", span="2682-2682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_1254 [label="StringAssert.AreEqual(expected, json)", span="2718-2718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_1255 [label="ConverableMembers c = JsonConvert.DeserializeObject<ConverableMembers>(json)", span="2720-2720", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_1253 [label="expected = @''{\r\n  ''''String'''': ''''string'''',\r\n  ''''Int32'''': 2147483647,\r\n  ''''UInt32'''': 4294967295,\r\n  ''''Byte'''': 255,\r\n  ''''SByte'''': 127,\r\n  ''''Short'''': 32767,\r\n  ''''UShort'''': 65535,\r\n  ''''Long'''': 9223372036854775807,\r\n  ''''ULong'''': 9223372036854775807,\r\n  ''''Double'''': 1.7976931348623157E+308,\r\n  ''''Float'''': 3.40282347E+38,\r\n  ''''DBNull'''': null,\r\n  ''''Bool'''': true,\r\n  ''''Char'''': ''''\u0000''''\r\n}''", span="2684-2699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_1256 [label="Assert.AreEqual(''string'', c.String)", span="2721-2721", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_1257 [label="Assert.AreEqual(double.MaxValue, c.Double)", span="2722-2722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_1258 [label="Assert.AreEqual(DBNull.Value, c.DBNull)", span="2724-2724", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_1259 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", span="2678-2678", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeConverableObjects()", file="JsonSerializerTest.cs"];
m21_2557 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2558 [label="JsonSerializer serializer1 = new JsonSerializer()", span="5736-5736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2559 [label="serializer1.Converters.Add(new IsoDateTimeConverter())", span="5737-5737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2560 [label="serializer1.NullValueHandling = NullValueHandling.Ignore", span="5738-5738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2563 [label="MyClass[] z = (MyClass[])serializer1.Deserialize(reader, typeof(MyClass[]))", span="5744-5744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2561 [label="string json = @''[{''''Prop1'''':''''''''},{''''Prop1'''':''''''''}]''", span="5740-5740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2562 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="5742-5742", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2564 [label="Assert.AreEqual(2, z.Length)", span="5745-5745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2565 [label="Assert.AreEqual(0, z[0].Prop1.Length)", span="5746-5746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2566 [label="Assert.AreEqual(0, z[1].Prop1.Length)", span="5747-5747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_2567 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", span="5734-5734", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArray()", file="JsonSerializerTest.cs"];
m21_1736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3754-3754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m21_1737 [label="string json = @''{\r\n  ''''short'''': {\r\n    ''''original'''': ''''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'''',\r\n    ''''short'''': ''''m2sqc6'''',\r\n    ''''shortened'''': ''''http://short.ie/m2sqc6'''',\r\n    ''''error'''': {\r\n      ''''code'''': 0,\r\n      ''''msg'''': ''''No action taken''''\r\n    }\r\n  }\r\n}''", span="3756-3766", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m21_1738 [label="JObject o = JObject.Parse(json)", span="3768-3768", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m21_1739 [label="Shortie s = JsonConvert.DeserializeObject<Shortie>(o[''short''].ToString())", span="3770-3770", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m21_1740 [label="Assert.IsNotNull(s)", span="3771-3771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m21_1741 [label="Assert.AreEqual(s.Original, ''http://www.contrast.ie/blog/online&#45;marketing&#45;2009/'')", span="3773-3773", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m21_1742 [label="Assert.AreEqual(s.Short, ''m2sqc6'')", span="3774-3774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m21_1743 [label="Assert.AreEqual(s.Shortened, ''http://short.ie/m2sqc6'')", span="3775-3775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m21_1744 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", span="3754-3754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NestedInsideOuterObject()", file="JsonSerializerTest.cs"];
m21_336 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="864-864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_337 [label="FaqItemProxy c = new FaqItemProxy()", span="866-866", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_338 [label="c.FaqId = 1", span="867-867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_339 [label="c.Sections.Add(new FaqSection())", span="868-868", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_340 [label="c.IsProxy = true", span="869-869", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_341 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="871-871", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_342 [label="StringAssert.AreEqual(@''{\r\n  ''''IsProxy'''': true,\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="873-881", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_343 [label="FaqItemProxy c2 = JsonConvert.DeserializeObject<FaqItemProxy>(json)", span="883-883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_344 [label="Assert.AreEqual(1, c2.FaqId)", span="885-885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_345 [label="Assert.AreEqual(1, c2.Sections.Count)", span="886-886", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_346 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", span="864-864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataTypeInheritance()", file="JsonSerializerTest.cs"];
m21_3086 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="7049-7049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_3087 [label="CultureInfo initialCulture = Thread.CurrentThread.CurrentCulture", span="7051-7051", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_3088 [label="CultureInfo testCulture = CultureInfo.CreateSpecificCulture(''nb-NO'')", span="7055-7055", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_3089 [label="Thread.CurrentThread.CurrentCulture = testCulture", span="7057-7057", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_3090 [label="Thread.CurrentThread.CurrentUICulture = testCulture", span="7058-7058", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_3091 [label="string json = @''{ 'Quantity': '1.5', 'OptionalQuantity': '2.2' }''", span="7060-7060", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_3092 [label="DecimalTestClass c = JsonConvert.DeserializeObject<DecimalTestClass>(json)", span="7062-7062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_3093 [label="Assert.AreEqual(1.5m, c.Quantity)", span="7064-7064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_3094 [label="Assert.AreEqual(2.2d, c.OptionalQuantity)", span="7065-7065", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_3095 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", span="7049-7049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimalsWithCulture()", file="JsonSerializerTest.cs"];
m21_1568 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3316-3316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1569 [label="GenericListAndDictionaryInterfaceProperties o = new GenericListAndDictionaryInterfaceProperties()", span="3318-3318", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1570 [label="o.IDictionaryProperty = new Dictionary<string, int>\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', 2 },\r\n                { ''three'', 3 }\r\n            }", span="3319-3324", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1571 [label="o.IListProperty = new List<int>\r\n            {\r\n                1, 2, 3\r\n            }", span="3325-3328", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1572 [label="o.IEnumerableProperty = new List<int>\r\n            {\r\n                4, 5, 6\r\n            }", span="3329-3332", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1573 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="3334-3334", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1577 [label="CollectionAssert.AreEqual(o.IListProperty.ToArray(), deserializedObject.IListProperty.ToArray())", span="3357-3357", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1578 [label="CollectionAssert.AreEqual(o.IEnumerableProperty.ToArray(), deserializedObject.IEnumerableProperty.ToArray())", span="3358-3358", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1579 [label="CollectionAssert.AreEqual(o.IDictionaryProperty.ToArray(), deserializedObject.IDictionaryProperty.ToArray())", span="3359-3359", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1574 [label="Assert.AreEqual(@''{\r\n  ''''IEnumerableProperty'''': [\r\n    4,\r\n    5,\r\n    6\r\n  ],\r\n  ''''IListProperty'''': [\r\n    1,\r\n    2,\r\n    3\r\n  ],\r\n  ''''IDictionaryProperty'''': {\r\n    ''''one'''': 1,\r\n    ''''two'''': 2,\r\n    ''''three'''': 3\r\n  }\r\n}'', json)", span="3336-3352", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1575 [label="GenericListAndDictionaryInterfaceProperties deserializedObject = JsonConvert.DeserializeObject<GenericListAndDictionaryInterfaceProperties>(json)", span="3354-3354", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1576 [label="Assert.IsNotNull(deserializedObject)", span="3355-3355", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_1580 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", span="3316-3316", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericListAndDictionaryInterfaceProperties()", file="JsonSerializerTest.cs"];
m21_3021 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m21_3022 [label="string input = ''http://test.com/%22foo+bar%22''", span="6917-6917", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m21_3023 [label="Uri uri = new Uri(input)", span="6918-6918", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m21_3024 [label="string json = JsonConvert.SerializeObject(uri)", span="6919-6919", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m21_3026 [label="Assert.AreEqual(uri, output)", span="6922-6922", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m21_3025 [label="Uri output = JsonConvert.DeserializeObject<Uri>(json)", span="6920-6920", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m21_3027 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", span="6915-6915", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeUriWithQuotes()", file="JsonSerializerTest.cs"];
m21_3565 [label="Entry Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Events.Event1.Event1()", file="JsonSerializerTest.cs"];
m21_4308 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", span="9965-9965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.AttachmentReadConverter()", file="JsonSerializerTest.cs"];
m21_4104 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9415-9415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4105 [label="return (long)Value;", span="9417-9417", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4106 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", span="9415-9415", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToInt64(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_2424 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", span="5469-5469", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosDouble.PosDouble()", file="JsonSerializerTest.cs"];
m21_1661 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1662 [label="string json = @''{\r\n    ''''request'''': ''''ux.settings.update'''',\r\n    ''''sid'''': ''''14c561bd-32a8-457e-b4e5-4bba0832897f'''',\r\n    ''''uid'''': ''''30c39065-0f31-de11-9442-001e3786a8ec'''',\r\n    ''''fidOrder'''': [\r\n        ''''id'''',\r\n        ''''andytest_name'''',\r\n        ''''andytest_age'''',\r\n        ''''andytest_address'''',\r\n        ''''andytest_phone'''',\r\n        ''''date'''',\r\n        ''''title'''',\r\n        ''''titleId''''\r\n    ],\r\n    ''''entityName'''': ''''Andy Test'''',\r\n    ''''setting'''': ''''entity.field.order''''\r\n}''", span="3541-3557", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1663 [label="RequestOnly r = JsonConvert.DeserializeObject<RequestOnly>(json)", span="3559-3559", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1665 [label="NonRequest n = JsonConvert.DeserializeObject<NonRequest>(json)", span="3562-3562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1664 [label="Assert.AreEqual(''ux.settings.update'', r.Request)", span="3560-3560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1666 [label="Assert.AreEqual(new Guid(''14c561bd-32a8-457e-b4e5-4bba0832897f''), n.Sid)", span="3563-3563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1667 [label="Assert.AreEqual(new Guid(''30c39065-0f31-de11-9442-001e3786a8ec''), n.Uid)", span="3564-3564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1668 [label="Assert.AreEqual(8, n.FidOrder.Count)", span="3565-3565", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1669 [label="Assert.AreEqual(''id'', n.FidOrder[0])", span="3566-3566", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1670 [label="Assert.AreEqual(''titleId'', n.FidOrder[n.FidOrder.Count - 1])", span="3567-3567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_1671 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", span="3539-3539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PartialClassDeserialize()", file="JsonSerializerTest.cs"];
m21_3963 [label="Entry System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", span="0-0", cluster="System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)", file="JsonSerializerTest.cs"];
m21_4359 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", span="10026-10026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs"];
m21_4360 [label="string s = @''{''''text'''':''''s'''',''''cursorPosition'''':189,''''dataSource'''':''''json_northwind'''',''", span="10028-10028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs"];
m21_4361 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<CompletionDataRequest>(s), ''Unexpected end when deserializing object. Path 'dataSource', line 1, position 63.'')", span="10030-10030", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs"];
m21_4362 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", span="10026-10026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ParametrizedConstructor_IncompleteJson()", file="JsonSerializerTest.cs"];
m21_2720 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6123-6123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_2721 [label="NullableStructPropertyClass nullableStructPropertyClass = new NullableStructPropertyClass()", span="6125-6125", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2722 [label="nullableStructPropertyClass.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="6126-6126", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2723 [label="nullableStructPropertyClass.Foo2 = new StructISerializable() { Name = ''foo 2'' }", span="6127-6127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2727 [label="string s = JsonConvert.SerializeObject(nullableStructPropertyClass)", span="6134-6134", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_2724 [label="NullableStructPropertyClass barWithNull = new NullableStructPropertyClass()", span="6129-6129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2725 [label="barWithNull.Foo1 = new StructISerializable() { Name = ''foo 1'' }", span="6130-6130", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2726 [label="barWithNull.Foo2 = null", span="6131-6131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2731 [label="s = JsonConvert.SerializeObject(barWithNull)", span="6140-6140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_2728 [label="NullableStructPropertyClass deserialized = deserialize(s)", span="6135-6135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_2729 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6136-6136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_2730 [label="Assert.AreEqual(deserialized.Foo2.Value.Name, ''foo 2'')", span="6137-6137", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_2732 [label="deserialized = deserialize(s)", span="6141-6141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_2733 [label="Assert.AreEqual(deserialized.Foo1.Name, ''foo 1'')", span="6142-6142", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_2734 [label="Assert.AreEqual(deserialized.Foo2, null)", span="6143-6143", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_2735 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", span="6123-6123", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableStruct()", file="JsonSerializerTest.cs"];
m21_1478 [label="Entry Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.TypeClass.TypeClass()", file="JsonSerializerTest.cs"];
m21_3940 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="9076-9076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m21_3941 [label="string json = JsonConvert.SerializeObject(\r\n                new Dictionary<Size, Size> { { new Size(1, 2), new Size(3, 4) } }\r\n            )", span="9078-9080", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m21_3942 [label="Assert.AreEqual(@''{''''1, 2'''':''''3, 4''''}'', json)", span="9082-9082", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m21_3943 [label="Dictionary<Size, Size> d = JsonConvert.DeserializeObject<Dictionary<Size, Size>>(json)", span="9084-9084", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m21_3944 [label="Assert.AreEqual(new Size(1, 2), d.Keys.First())", span="9086-9086", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m21_3945 [label="Assert.AreEqual(new Size(3, 4), d.Values.First())", span="9087-9087", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m21_3946 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", span="9076-9076", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDictionaryWithStructKey()", file="JsonSerializerTest.cs"];
m21_1459 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="3064-3064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m21_1460 [label="string json = @''{''''Height'''':1}''", span="3066-3066", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m21_1461 [label="DoubleClass c = JsonConvert.DeserializeObject<DoubleClass>(json)", span="3068-3068", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m21_1462 [label="Assert.AreEqual(1, c.Height)", span="3069-3069", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m21_1463 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", span="3064-3064", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeInt64ToNullableDouble()", file="JsonSerializerTest.cs"];
m21_3604 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", span="8169-8169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs"];
m21_3605 [label="string json = @''{one:1} // This is just a comment\r\n/* This is just a comment\r\nover multiple\r\nlines.*/\r\n\r\n// This is just another comment.''", span="8171-8176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs"];
m21_3606 [label="JsonSerializerSettings settings = new JsonSerializerSettings {CheckAdditionalContent = true}", span="8178-8178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs"];
m21_3608 [label="IDictionary<string, int> o = s.Deserialize<Dictionary<string, int>>(new JsonTextReader(new StringReader(json)))", span="8180-8180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs"];
m21_3607 [label="JsonSerializer s = JsonSerializer.Create(settings)", span="8179-8179", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs"];
m21_3609 [label="Assert.IsNotNull(o)", span="8182-8182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs"];
m21_3610 [label="Assert.AreEqual(1, o[''one''])", span="8183-8183", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs"];
m21_3611 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", span="8169-8169", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CheckAdditionalContentJustMultipleComments()", file="JsonSerializerTest.cs"];
m21_478 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="667-667", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonSerializerTest.cs"];
m21_479 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonSerializerTest.cs"];
m21_3510 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7934-7934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3511 [label="IDictionary<DateTime, int> dic1 = new Dictionary<DateTime, int>\r\n            {\r\n                { new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc), 1 },\r\n                { new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc), 2 }\r\n            }", span="7936-7940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3512 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Local\r\n            })", span="7942-7945", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3513 [label="JObject o = JObject.Parse(json)", span="7947-7947", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3516 [label="IDictionary<DateTime, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTime, int>>(json, new JsonSerializerSettings\r\n            {\r\n                DateTimeZoneHandling = DateTimeZoneHandling.Utc\r\n            })", span="7951-7954", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3514 [label="Assert.IsFalse(o.Properties().ElementAt(0).Name.Contains(''Z''))", span="7948-7948", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3515 [label="Assert.IsFalse(o.Properties().ElementAt(1).Name.Contains(''Z''))", span="7949-7949", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3517 [label="Assert.AreEqual(2, dic2.Count)", span="7956-7956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3518 [label="Assert.AreEqual(1, dic2[new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7957-7957", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3519 [label="Assert.AreEqual(2, dic2[new DateTime(2013, 12, 12, 12, 12, 12, DateTimeKind.Utc)])", span="7958-7958", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3520 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", span="7934-7934", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTime_Iso_Local()", file="JsonSerializerTest.cs"];
m21_3745 [label="Entry Unk.doStuff", span="", cluster="Unk.doStuff", file="JsonSerializerTest.cs"];
m21_2751 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6182-6182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m21_2752 [label="var data = new DecimalTest(decimal.MinValue)", span="6184-6184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m21_2753 [label="var json = JsonConvert.SerializeObject(data)", span="6185-6185", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m21_2754 [label="var obj = JsonConvert.DeserializeObject<DecimalTest>(json, new JsonSerializerSettings { MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="6186-6186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m21_2755 [label="Assert.AreEqual(decimal.MinValue, obj.Value)", span="6188-6188", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m21_2756 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", span="6182-6182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeMinValueDecimal()", file="JsonSerializerTest.cs"];
m21_11 [label="Assert.IsTrue(s.Position > 0)", span="127-127", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_12 [label="s.Seek(0, SeekOrigin.Begin)", span="129-129", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_13 [label="Assert.AreEqual(0, s.Position)", span="131-131", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DontCloseInputOnDeserializeError()", file="JsonSerializerTest.cs"];
m21_2417 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5445-5445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m21_2418 [label="ClientMap source = new ClientMap()\r\n            {\r\n                position = new Pos() { X = 100, Y = 200 },\r\n                center = new PosDouble() { X = 251.6, Y = 361.3 }\r\n            }", span="5447-5451", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m21_2419 [label="string json = JsonConvert.SerializeObject(source, new PosConverter(), new PosDoubleConverter())", span="5453-5453", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m21_2420 [label="Assert.AreEqual(''{\''position\'':new Pos(100,200),\''center\'':new PosD(251.6,361.3)}'', json)", span="5454-5454", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m21_2421 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", span="5445-5445", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FullClientMapSerialization()", file="JsonSerializerTest.cs"];
m21_4287 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9843-9843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m21_4288 [label="string json = @''{\r\n  ''''DerivedProperty'''': ''''derived'''',\r\n  ''''BaseProperty'''': ''''base''''\r\n}''", span="9845-9848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m21_4289 [label="var d = JsonConvert.DeserializeObject<DerivedWithPrivate>(json)", span="9850-9850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m21_4290 [label="Assert.AreEqual(''base'', d.BaseProperty)", span="9852-9852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m21_4291 [label="Assert.AreEqual(''derived'', d.DerivedProperty)", span="9853-9853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m21_4292 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", span="9843-9843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializedDerivedWithPrivate()", file="JsonSerializerTest.cs"];
m21_2919 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6657-6657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_2920 [label="throw new NotImplementedException();", span="6659-6659", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_2921 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", span="6657-6657", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_3993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="9176-9176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_3994 [label="destinationType == null", span="9178-9178", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_3996 [label="value is TypeConverterSize", span="9182-9182", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_3997 [label="destinationType == typeof(string)", span="9184-9184", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_3998 [label="TypeConverterSize size = (TypeConverterSize)value", span="9186-9186", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_3999 [label="culture == null", span="9187-9187", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4004 [label="strArray[num++] = converter.ConvertToString(context, culture, size.Width)", span="9194-9194", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4005 [label="strArray[num++] = converter.ConvertToString(context, culture, size.Height)", span="9195-9195", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4007 [label="return base.ConvertTo(context, culture, value, destinationType);", span="9199-9199", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_3995 [label="throw new ArgumentNullException(''destinationType'');", span="9180-9180", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4000 [label="culture = CultureInfo.CurrentCulture", span="9189-9189", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4001 [label="TypeConverter converter = TypeDescriptor.GetConverter(typeof(int))", span="9191-9191", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4002 [label="string[] strArray = new string[2]", span="9192-9192", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4003 [label="int num = 0", span="9193-9193", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4006 [label="return string.Join('', '', strArray);", span="9196-9196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_4008 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="9176-9176", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="JsonSerializerTest.cs"];
m21_2139 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerTest.cs"];
m21_3005 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6896-6896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3006 [label="object o = new { p = 1 }", span="6899-6899", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3007 [label="var json = JObject.FromObject(o)", span="6901-6901", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3008 [label="var sw = new StringWriter()", span="6903-6903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3010 [label="jw.WriteToken(json.CreateReader())", span="6906-6906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3009 [label="var jw = new JsonTextWriter(sw)", span="6904-6904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3012 [label="string result = sw.ToString()", span="6909-6909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3011 [label="jw.Flush()", span="6907-6907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3013 [label="Assert.AreEqual(@''{''''p'''':1}'', result)", span="6910-6910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3014 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", span="6896-6896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UsingJsonTextWriter()", file="JsonSerializerTest.cs"];
m21_3381 [label="Entry Unk.ToKnownColor", span="", cluster="Unk.ToKnownColor", file="JsonSerializerTest.cs"];
m21_4378 [label="Entry Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="10084-10084", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs"];
m21_4379 [label="Exit Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", span="10084-10084", cluster="Newtonsoft.Json.Tests.Serialization.DecimalTest.DecimalTest()", file="JsonSerializerTest.cs"];
m21_2422 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", span="5457-5457", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClientMap.ClientMap()", file="JsonSerializerTest.cs"];
m21_52 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerTest.cs"];
m21_2554 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5727-5727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs"];
m21_2555 [label="Prop1 = new byte[0]", span="5729-5729", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs"];
m21_2556 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", span="5727-5727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass.MyClass()", file="JsonSerializerTest.cs"];
m21_4307 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", span="9931-9931", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MailAddressReadConverter.MailAddressReadConverter()", file="JsonSerializerTest.cs"];
m21_3217 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", span="7329-7329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs"];
m21_3219 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", span="7329-7329", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.NullableGuidCountingJsonTextWriter(System.IO.TextWriter)", file="JsonSerializerTest.cs"];
m21_3220 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs"];
m21_3221 [label="base.WriteValue(value)", span="7338-7338", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs"];
m21_3222 [label="++NullableGuidCount", span="7339-7339", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs"];
m21_3223 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", span="7336-7336", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter.WriteValue(System.Guid?)", file="JsonSerializerTest.cs"];
m21_4240 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", span="9710-9710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstantTestClass.ConstantTestClass()", file="JsonSerializerTest.cs"];
m21_1685 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3621-3621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_1686 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", span="3621-3621", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers.DataContractPrivateMembers()", file="JsonSerializerTest.cs"];
m21_2225 [label="Entry System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetBoolean(string)", file="JsonSerializerTest.cs"];
m21_905 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", span="1880-1880", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildDataContractWithHidden.ChildDataContractWithHidden()", file="JsonSerializerTest.cs"];
m21_3124 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7138-7138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3125 [label="string json = @''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.JsonSerializerTest+HasByteArray, Newtonsoft.Json.Tests'''',\r\n  ''''EncryptedPassword'''': {\r\n    ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ='''',\r\n    ''''$value'''': ''''cGFzc3dvcmQ=''''\r\n  }\r\n}''", span="7140-7147", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3126 [label="ExceptionAssert.Throws<JsonReaderException>(() =>\r\n            {\r\n                JsonConvert.DeserializeObject<HasByteArray>(json, new JsonSerializerSettings\r\n                {\r\n                    TypeNameHandling = TypeNameHandling.Objects\r\n                });\r\n            }, ''Error reading bytes. Unexpected token: PropertyName. Path 'EncryptedPassword.$value', line 6, position 13.'')", span="7149-7155", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs"];
m21_3127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", span="7138-7138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayWithTypeName_BadAdditionalContent()", file="JsonSerializerTest.cs"];
m21_4329 [label="Entry System.Net.Mail.MailAddress.MailAddress(string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string)", file="JsonSerializerTest.cs"];
m21_2176 [label="Entry System.Collections.Generic.ICollection<T>.Remove(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Remove(T)", file="JsonSerializerTest.cs"];
m21_2167 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4846-4846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2168 [label="dictionary == null", span="4848-4848", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2170 [label=dictionary, span="4853-4853", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2169 [label="return;", span="4850-4850", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2171 [label="this[entry.Key] = entry.Value", span="4855-4855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_2172 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", span="4846-4846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>.Merge(Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>)", file="JsonSerializerTest.cs"];
m21_261 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", span="605-605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyTestClass.RequiredPropertyTestClass()", file="JsonSerializerTest.cs"];
m21_2624 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m21_2625 [label="string json = JsonConvert.SerializeObject(new DerivedEvent(), Formatting.Indented)", span="5898-5898", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m21_2626 [label="StringAssert.AreEqual(@''{\r\n  ''''event'''': ''''derived''''\r\n}'', json)", span="5900-5902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m21_2627 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", span="5896-5896", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.OverridenPropertyMembers()", file="JsonSerializerTest.cs"];
m21_1890 [label="Entry Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", span="822-822", cluster="Newtonsoft.Json.JsonConvert.PopulateObject(string, object)", file="JsonSerializerTest.cs"];
m21_2018 [label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.PersonPropertyClass.PersonPropertyClass()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.Organization.PersonPropertyClass.PersonPropertyClass()", file="JsonSerializerTest.cs"];
m21_4326 [label="Entry Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", span="538-538", cluster="Newtonsoft.Json.Linq.JObject.TryGetValue(string, System.StringComparison, out Newtonsoft.Json.Linq.JToken)", file="JsonSerializerTest.cs"];
m21_1215 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2628-2628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1216 [label="string json = ''{bar:[1,2,3], foo:'hello'}''", span="2630-2630", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1217 [label="ClassWithArray wibble = JsonConvert.DeserializeObject<ClassWithArray>(json)", span="2631-2631", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1218 [label="Assert.AreEqual(''hello'', wibble.Foo)", span="2632-2632", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1219 [label="Assert.AreEqual(4, wibble.Bar.Count)", span="2634-2634", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1220 [label="Assert.AreEqual(int.MaxValue, wibble.Bar[0])", span="2635-2635", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1221 [label="Assert.AreEqual(1, wibble.Bar[1])", span="2636-2636", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1222 [label="Assert.AreEqual(2, wibble.Bar[2])", span="2637-2637", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1223 [label="Assert.AreEqual(3, wibble.Bar[3])", span="2638-2638", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1224 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", span="2628-2628", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanDeserializeIntArray_WhenArrayIsFirstPropertyInJson()", file="JsonSerializerTest.cs"];
m21_1063 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2289-2289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m21_1064 [label="string json = JsonConvert.SerializeObject(new JsonIgnoreAttributeTestClass())", span="2291-2291", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m21_1065 [label="Assert.AreEqual(@''{''''Field'''':0,''''Property'''':21}'', json)", span="2293-2293", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m21_1066 [label="JsonIgnoreAttributeTestClass c = JsonConvert.DeserializeObject<JsonIgnoreAttributeTestClass>(@''{''''Field'''':99,''''Property'''':-1,''''IgnoredField'''':-1,''''IgnoredObject'''':[1,2,3,4,5]}'')", span="2295-2295", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m21_1067 [label="Assert.AreEqual(0, c.IgnoredField)", span="2297-2297", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m21_1068 [label="Assert.AreEqual(99, c.Field)", span="2298-2298", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m21_1069 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", span="2289-2289", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonIgnoreAttributeTest()", file="JsonSerializerTest.cs"];
m21_297 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m21_298 [label="Version v = new Version(1, 2, 3, 4)", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m21_299 [label="IgnoredPropertiesTestClass c1 = new IgnoredPropertiesTestClass\r\n            {\r\n                IgnoredProperty = v,\r\n                IgnoredList = new List<Version>\r\n                {\r\n                    v\r\n                },\r\n                IgnoredDictionary = new Dictionary<string, Version>\r\n                {\r\n                    { ''Value'', v }\r\n                },\r\n                Name = ''Name!''\r\n            }", span="710-722", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m21_300 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="724-727", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m21_301 [label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!''''\r\n}'', json)", span="729-731", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m21_302 [label="string deserializeJson = @''{\r\n  ''''IgnoredList'''': [\r\n    {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  ],\r\n  ''''IgnoredDictionary'''': {\r\n    ''''Value'''': {\r\n      ''''Major'''': 1,\r\n      ''''Minor'''': 2,\r\n      ''''Build'''': 3,\r\n      ''''Revision'''': 4,\r\n      ''''MajorRevision'''': 0,\r\n      ''''MinorRevision'''': 4\r\n    }\r\n  },\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="733-755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m21_303 [label="IgnoredPropertiesTestClass c2 = JsonConvert.DeserializeObject<IgnoredPropertiesTestClass>(deserializeJson, new JsonSerializerSettings\r\n            {\r\n                ContractResolver = new IgnoredPropertiesContractResolver()\r\n            })", span="757-760", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m21_304 [label="Assert.AreEqual(''Name!'', c2.Name)", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m21_305 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NeverResolveIgnoredPropertyTypes()", file="JsonSerializerTest.cs"];
m21_1753 [label="Entry System.Uri.ToString()", span="0-0", cluster="System.Uri.ToString()", file="JsonSerializerTest.cs"];
m21_2537 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5683-5683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2538 [label="double?[] d = (double?[])JsonConvert.DeserializeObject(@''[\r\n  2.4,\r\n  4.3,\r\n  null\r\n]'', typeof(double?[]))", span="5685-5689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2539 [label="Assert.AreEqual(3, d.Length)", span="5691-5691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2540 [label="Assert.AreEqual(2.4, d[0])", span="5692-5692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2541 [label="Assert.AreEqual(4.3, d[1])", span="5693-5693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2542 [label="Assert.AreEqual(null, d[2])", span="5694-5694", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m21_2543 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", span="5683-5683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableArray()", file="JsonSerializerTest.cs"];
m21_851 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1810-1810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_852 [label="var json = @''{''''foo'''':{''''bar'''':''''value''''},''''foo2'''':{''''bar'''':''''value2''''}}''", span="1812-1812", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_853 [label="var deserialized = JsonConvert.DeserializeObject<Foo1<Bar1>>(json)", span="1813-1813", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_854 [label="Assert.IsNotNull(deserialized.foo2)", span="1814-1814", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_855 [label="Assert.AreEqual(''value2'', deserialized.foo2.bar)", span="1815-1815", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_856 [label="Assert.IsNotNull(deserialized.foo)", span="1816-1816", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_857 [label="Assert.AreEqual(''value'', deserialized.foo.bar)", span="1817-1817", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_858 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", span="1810-1810", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedGenericClassHidingBasePropertyDeserializesAsExpected()", file="JsonSerializerTest.cs"];
m21_1123 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2456-2456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1124 [label="string json = @''[''''vvv\/vvv\tvvv\''''vvv\bvvv\nvvv\rvvv\\vvv\fvvv'''']''", span="2458-2458", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1125 [label="JavaScriptSerializer javaScriptSerializer = new JavaScriptSerializer()", span="2461-2461", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1126 [label="List<string> javaScriptSerializerResult = javaScriptSerializer.Deserialize<List<string>>(json)", span="2462-2462", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1128 [label="List<string> dataContractResult = (List<string>)s.ReadObject(new MemoryStream(Encoding.UTF8.GetBytes(json)))", span="2466-2466", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1129 [label="List<string> jsonNetResult = JsonConvert.DeserializeObject<List<string>>(json)", span="2468-2468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1127 [label="DataContractJsonSerializer s = new DataContractJsonSerializer(typeof(List<string>))", span="2465-2465", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1132 [label="Assert.AreEqual(javaScriptSerializerResult[0], jsonNetResult[0])", span="2473-2473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1131 [label="Assert.AreEqual(dataContractResult[0], jsonNetResult[0])", span="2471-2471", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1130 [label="Assert.AreEqual(1, jsonNetResult.Count)", span="2470-2470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_1133 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", span="2456-2456", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BackslashEqivilence()", file="JsonSerializerTest.cs"];
m21_2593 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", span="5791-5791", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructWithAttribute.StructWithAttribute()", file="JsonSerializerTest.cs"];
m21_1725 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonSerializerTest.cs"];
m21_20 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="838-838", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m21_2736 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", span="6102-6102", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableStructPropertyClass.NullableStructPropertyClass()", file="JsonSerializerTest.cs"];
m21_4110 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9425-9425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4111 [label="throw new InvalidCastException();", span="9427-9427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4112 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", span="9425-9425", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSingle(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_21 [label="Entry Unk.Fail", span="", cluster="Unk.Fail", file="JsonSerializerTest.cs"];
m21_1098 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2427-2427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1099 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.SerializeObject(new BadJsonPropertyClass()); }, @''A member with the name 'pie' already exists on 'Newtonsoft.Json.Tests.TestObjects.BadJsonPropertyClass'. Use the JsonPropertyAttribute to specify another name.'')", span="2429-2429", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1100 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", span="2427-2427", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BadJsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1324 [label="Entry Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.ConstructorCaseSensitivityClass.ConstructorCaseSensitivityClass(string, string, string)", file="JsonSerializerTest.cs"];
m21_882 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="999-999", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonSerializerTest.cs"];
m21_1292 [label="Entry Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ClassWithGuid.ClassWithGuid()", file="JsonSerializerTest.cs"];
m21_3384 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7670-7670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3385 [label="return Enum.Parse(typeof(Color), reader.Value.ToString());", span="7672-7672", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_3386 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="7670-7670", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MetroColorConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_309 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="766-766", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m21_917 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="2013-2013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_918 [label="BaseWithContract baseWith = new SubWithoutContractVirtualProperties\r\n            {\r\n                JustAProperty = ''JustAProperty!'',\r\n                Virtual = ''Virtual!'',\r\n                VirtualWithDataMember = ''VirtualWithDataMember!'',\r\n                WithDataMember = ''WithDataMember!''\r\n            }", span="2015-2021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_919 [label="baseWith.JustAProperty = ''JustAProperty2!''", span="2023-2023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_920 [label="baseWith.Virtual = ''Virtual2!''", span="2024-2024", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_921 [label="baseWith.VirtualWithDataMember = ''VirtualWithDataMember2!''", span="2025-2025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_922 [label="baseWith.WithDataMember = ''WithDataMember2!''", span="2026-2026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_923 [label="string json = JsonConvert.SerializeObject(baseWith, Formatting.Indented)", span="2028-2028", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_924 [label="StringAssert.AreEqual(@''{\r\n  ''''VirtualWithDataMemberBase'''': ''''VirtualWithDataMember2!'''',\r\n  ''''VirtualSub'''': ''''Virtual2!'''',\r\n  ''''WithDataMemberBase'''': ''''WithDataMember2!'''',\r\n  ''''JustAProperty'''': ''''JustAProperty2!''''\r\n}'', json)", span="2030-2035", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_925 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", span="2013-2013", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithoutContractVirtualPropertiesTest()", file="JsonSerializerTest.cs"];
m21_4241 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9732-9732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs"];
m21_4242 [label="MyObservableObject o = new MyObservableObject\r\n            {\r\n                TestString = ''Test string''\r\n            }", span="9734-9737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs"];
m21_4243 [label="string json = JsonConvert.SerializeObject(o, Formatting.Indented)", span="9739-9739", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs"];
m21_4244 [label="StringAssert.AreEqual(@''{\r\n  ''''PropertyChanged'''': null,\r\n  ''''TestString'''': ''''Test string''''\r\n}'', json)", span="9740-9743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs"];
m21_4245 [label="MyObservableObject o2 = JsonConvert.DeserializeObject<MyObservableObject>(json)", span="9745-9745", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs"];
m21_4246 [label="Assert.AreEqual(''Test string'', o2.TestString)", span="9746-9746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs"];
m21_4247 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", span="9732-9732", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeObjectWithEvent()", file="JsonSerializerTest.cs"];
m21_4009 [label="Entry System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)", file="JsonSerializerTest.cs"];
m21_444 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1133-1133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m21_445 [label="string json = ''['1.2.3.4']''", span="1135-1135", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m21_446 [label="List<Version> deserialized = JsonConvert.DeserializeObject<List<Version>>(json)", span="1136-1136", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m21_447 [label="Assert.AreEqual(1, deserialized[0].Major)", span="1138-1138", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m21_448 [label="Assert.AreEqual(2, deserialized[0].Minor)", span="1139-1139", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m21_449 [label="Assert.AreEqual(3, deserialized[0].Build)", span="1140-1140", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m21_450 [label="Assert.AreEqual(4, deserialized[0].Revision)", span="1141-1141", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m21_451 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", span="1133-1133", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeVersionString()", file="JsonSerializerTest.cs"];
m21_3051 [label="Entry Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", span="33-33", cluster="Newtonsoft.Json.Tests.TestObjects.TestObject.TestObject(string, byte[])", file="JsonSerializerTest.cs"];
m21_4220 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9680-9680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4221 [label="DateTimeOffset dt = new DateTimeOffset(new DateTime(2000, 12, 22))", span="9682-9682", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4222 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9683-9683", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4224 [label="string json = JsonConvert.SerializeObject(dt, settings)", span="9689-9689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4227 [label="Assert.AreEqual(dt, dt1)", span="9695-9695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4232 [label="Assert.AreEqual(dt, (DateTimeOffset)v.Value)", span="9706-9706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4223 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString\r\n            }", span="9684-9687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4228 [label="JsonTextReader reader = new JsonTextReader(new StringReader(json))\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                DateParseHandling = DateParseHandling.DateTimeOffset\r\n            }", span="9697-9701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4226 [label="DateTimeOffset dt1 = JsonConvert.DeserializeObject<DateTimeOffset>(json, settings)", span="9693-9693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4225 [label="Assert.AreEqual(@''''''2000-pie-Dec-Friday-22'''''', json)", span="9691-9691", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4229 [label="JValue v = (JValue)JToken.ReadFrom(reader)", span="9702-9702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4230 [label="Assert.AreEqual(JTokenType.Date, v.Type)", span="9704-9704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4231 [label="Assert.AreEqual(typeof(DateTimeOffset), v.Value.GetType())", span="9705-9705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_4233 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", span="9680-9680", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDateTimeOffset()", file="JsonSerializerTest.cs"];
m21_2703 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="6052-6052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs"];
m21_2704 [label="IDontWork = dontWork", span="6054-6054", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs"];
m21_2705 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", span="6052-6052", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base.Base(string)", file="JsonSerializerTest.cs"];
m21_3847 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8771-8771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs"];
m21_3848 [label="this.First = first", span="8774-8774", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs"];
m21_3849 [label="this.Second = second", span="8775-8775", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs"];
m21_3850 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", span="8771-8771", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Pair<TFirst, TSecond>.Pair(TFirst, TSecond)", file="JsonSerializerTest.cs"];
m21_4336 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9972-9972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4337 [label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="9974-9974", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4338 [label="var attachment = info != null\r\n                    ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                    {\r\n                        ContentDisposition = { FileName = info.FileName }\r\n                    }\r\n                    : null", span="9976-9981", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4339 [label="return attachment;", span="9982-9982", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_4340 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="9972-9972", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerTest.cs"];
m21_2993 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6867-6867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_2994 [label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n            {\r\n                Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n                NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n                TimeSpan = TimeSpan.FromDays(1),\r\n                NullableTimeSpan = TimeSpan.FromHours(1),\r\n                Uri = new Uri(''http://testuri.com'')\r\n            }", span="6869-6876", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_2995 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6877-6877", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_2998 [label="Assert.AreEqual(c1.Guid, c2.Guid)", span="6888-6888", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_2999 [label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="6889-6889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_3000 [label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="6890-6890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_3001 [label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="6891-6891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_3002 [label="Assert.AreEqual(c1.Uri, c2.Uri)", span="6892-6892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_2996 [label="StringAssert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com''''\r\n}'', json)", span="6879-6885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_2997 [label="UriGuidTimeSpanTestClass c2 = JsonConvert.DeserializeObject<UriGuidTimeSpanTestClass>(json)", span="6887-6887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_3003 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", span="6867-6867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonSerializerTest.cs"];
m21_2375 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5356-5356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs"];
m21_2376 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", span="5356-5356", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB.BB()", file="JsonSerializerTest.cs"];
m21_2500 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5601-5601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m21_2501 [label="First = first", span="5603-5603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m21_2502 [label="Second = second", span="5604-5604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m21_2503 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", span="5601-5601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty.ConstructorCompexIgnoredProperty(string, int)", file="JsonSerializerTest.cs"];
m21_242 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m21_243 [label="var e1 = JsonConvert.DeserializeObject<EnumA>('''ValueA''')", span="597-597", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m21_244 [label="Assert.AreEqual(EnumA.ValueA, e1)", span="598-598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m21_245 [label="var e2 = JsonConvert.DeserializeObject<EnumA>('''value_a''', new StringEnumConverter())", span="600-600", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m21_246 [label="Assert.AreEqual(EnumA.ValueA, e2)", span="601-601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m21_247 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeEnumsByName()", file="JsonSerializerTest.cs"];
m21_2226 [label="Entry System.Runtime.Serialization.SerializationInfo.GetByte(string)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.GetByte(string)", file="JsonSerializerTest.cs"];
m21_877 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_2907 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6627-6627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs"];
m21_2908 [label="throw new NotImplementedException();", span="6629-6629", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs"];
m21_2909 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", span="6627-6627", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CollectionClassAttributeDerived.Clear()", file="JsonSerializerTest.cs"];
m21_2875 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6545-6545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2876 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c1 = new NonDefaultConstructorWithReadOnlyCollectionProperty(''blah'')", span="6547-6547", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2877 [label="c1.Categories.Add(''one'')", span="6548-6548", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2878 [label="c1.Categories.Add(''two'')", span="6549-6549", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2879 [label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="6551-6551", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2882 [label="Assert.AreEqual(c1.Title, c2.Title)", span="6561-6561", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2883 [label="Assert.AreEqual(c1.Categories.Count, c2.Categories.Count)", span="6562-6562", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2880 [label="StringAssert.AreEqual(@''{\r\n  ''''Title'''': ''''blah'''',\r\n  ''''Categories'''': [\r\n    ''''one'''',\r\n    ''''two''''\r\n  ]\r\n}'', json)", span="6552-6558", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2881 [label="NonDefaultConstructorWithReadOnlyCollectionProperty c2 = JsonConvert.DeserializeObject<NonDefaultConstructorWithReadOnlyCollectionProperty>(json)", span="6560-6560", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2884 [label="Assert.AreEqual(''one'', c2.Categories[0])", span="6563-6563", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2885 [label="Assert.AreEqual(''two'', c2.Categories[1])", span="6564-6564", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_2886 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", span="6545-6545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionPropertyTest()", file="JsonSerializerTest.cs"];
m21_19 [label="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively", span="", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonSerializerTest.cs"];
m21_2980 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="JsonSerializerTest.cs"];
m21_3992 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JsonSerializerTest.cs"];
m21_1704 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3674-3674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m21_1705 [label="string json = @''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Dictionary'''': {\r\n    ''''Item'''': 11\r\n  }\r\n}''", span="3676-3681", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m21_1706 [label="DictionaryInterfaceClass c = JsonConvert.DeserializeObject<DictionaryInterfaceClass>(\r\n                json,\r\n                new JsonSerializerSettings { ObjectCreationHandling = ObjectCreationHandling.Replace })", span="3683-3685", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m21_1707 [label="Assert.AreEqual(''Name!'', c.Name)", span="3687-3687", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m21_1708 [label="Assert.AreEqual(1, c.Dictionary.Count)", span="3688-3688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m21_1709 [label="Assert.AreEqual(11, c.Dictionary[''Item''])", span="3689-3689", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m21_1710 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", span="3674-3674", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDictionaryInterface()", file="JsonSerializerTest.cs"];
m21_1800 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3902-3902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1801 [label="string json = @''{'SetOnlyProperty':[1,2,3,4,5]}''", span="3904-3904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1802 [label="SetOnlyPropertyClass2 setOnly = JsonConvert.DeserializeObject<SetOnlyPropertyClass2>(json)", span="3906-3906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1803 [label="JArray a = (JArray)setOnly.GetValue()", span="3907-3907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1804 [label="Assert.AreEqual(5, a.Count)", span="3908-3908", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1805 [label="Assert.AreEqual(1, (int)a[0])", span="3909-3909", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1806 [label="Assert.AreEqual(5, (int)a[a.Count - 1])", span="3910-3910", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1807 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", span="3902-3902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeObjectSetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_2433 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JsonSerializerTest.cs"];
m21_3922 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8973-8973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3923 [label="PersonReference john = new PersonReference\r\n            {\r\n                Id = new Guid(''0B64FFDF-D155-44AD-9689-58D9ADB137F3''),\r\n                Name = ''John Smith''\r\n            }", span="8975-8979", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3924 [label="PersonReference jane = new PersonReference\r\n            {\r\n                Id = new Guid(''AE3C399C-058D-431D-91B0-A36C266441B9''),\r\n                Name = ''Jane Smith''\r\n            }", span="8981-8985", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3925 [label="john.Spouse = jane", span="8987-8987", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3926 [label="jane.Spouse = john", span="8988-8988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3927 [label="IList<PersonReference> people = new List<PersonReference>\r\n            {\r\n                john,\r\n                jane\r\n            }", span="8990-8994", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3928 [label="string json = JsonConvert.SerializeObject(people, new JsonSerializerSettings\r\n            {\r\n#pragma warning disable 618\r\n                ReferenceResolver = new IdReferenceResolver(),\r\n#pragma warning restore 618\r\n                PreserveReferencesHandling = PreserveReferencesHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="8996-9003", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3929 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3'''',\r\n    ''''Name'''': ''''John Smith'''',\r\n    ''''Spouse'''': {\r\n      ''''$id'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9'''',\r\n      ''''Name'''': ''''Jane Smith'''',\r\n      ''''Spouse'''': {\r\n        ''''$ref'''': ''''0b64ffdf-d155-44ad-9689-58d9adb137f3''''\r\n      }\r\n    }\r\n  },\r\n  {\r\n    ''''$ref'''': ''''ae3c399c-058d-431d-91b0-a36c266441b9''''\r\n  }\r\n]'', json)", span="9005-9020", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_3930 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", span="8973-8973", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCustomReferenceResolver()", file="JsonSerializerTest.cs"];
m21_2112 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4701-4701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m21_2113 [label="var json = ''{ Key: 'abc', Value: 123 }''", span="4703-4703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m21_2114 [label="var item = JsonConvert.DeserializeObject<TestClass>(json)", span="4704-4704", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m21_2115 [label="Assert.AreEqual(123L, item.Value)", span="4706-4706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m21_2116 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", span="4701-4701", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeToObjectProperty()", file="JsonSerializerTest.cs"];
m21_3894 [label="Entry System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet(System.Collections.Generic.IEnumerable<T>)", file="JsonSerializerTest.cs"];
m21_1891 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="4045-4045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_1892 [label="string json = @''{}''", span="4047-4047", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_1893 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.PopulateObject(json, new List<Person>()); }, @''Cannot populate JSON object onto type 'System.Collections.Generic.List`1[Newtonsoft.Json.Tests.TestObjects.Organization.Person]'. Path '', line 1, position 2.'')", span="4049-4049", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_1894 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", span="4045-4045", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CannotPopulateObjectIntoArray()", file="JsonSerializerTest.cs"];
m21_4293 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9858-9858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m21_4294 [label="NullableLongTestClass instance = new NullableLongTestClass\r\n            {\r\n                Value = ulong.MaxValue\r\n            }", span="9860-9863", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m21_4295 [label="string output = JsonConvert.SerializeObject(instance)", span="9864-9864", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m21_4296 [label="NullableLongTestClass result = JsonConvert.DeserializeObject<NullableLongTestClass>(output)", span="9865-9865", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m21_4297 [label="Assert.AreEqual(ulong.MaxValue, result.Value)", span="9867-9867", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m21_4298 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", span="9858-9858", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableUnsignedLong()", file="JsonSerializerTest.cs"];
m21_3096 [label="Entry System.Globalization.CultureInfo.CreateSpecificCulture(string)", span="0-0", cluster="System.Globalization.CultureInfo.CreateSpecificCulture(string)", file="JsonSerializerTest.cs"];
m21_57 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m21_58 [label="var largeBrokenNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 43443333222211111117 }'')", span="258-258", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m21_59 [label="Assert.AreEqual(''43443333222211111117'', largeBrokenNumber.Blah)", span="259-259", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m21_60 [label="var largeOddWorkingNumber = JsonConvert.DeserializeObject<Foo64>(''{\''Blah\'': 53443333222211111117 }'')", span="261-261", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m21_61 [label="Assert.AreEqual(''53443333222211111117'', largeOddWorkingNumber.Blah)", span="262-262", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m21_62 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.LargeIntegerAsString()", file="JsonSerializerTest.cs"];
m21_898 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="JsonSerializerTest.cs"];
m21_3769 [label="Entry System.DateTimeOffset.ToString(System.IFormatProvider)", span="0-0", cluster="System.DateTimeOffset.ToString(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4080 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9375-9375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4081 [label="throw new InvalidCastException();", span="9377-9377", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4082 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", span="9375-9375", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToBoolean(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_2117 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4733-4733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m21_2118 [label="DataContractJsonSerializerTestClass c = new DataContractJsonSerializerTestClass()", span="4735-4735", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2119 [label="c.TimeSpanProperty = new TimeSpan(200, 20, 59, 30, 900)", span="4736-4736", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2120 [label="c.GuidProperty = new Guid(''66143115-BE2A-4a59-AF0A-348E1EA15B1E'')", span="4737-4737", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2121 [label="c.AnimalProperty = new Human() { Ethnicity = ''European'' }", span="4738-4738", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_2124 [label="serializer.WriteObject(ms, c)", span="4744-4744", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m21_2122 [label="MemoryStream ms = new MemoryStream()", span="4740-4740", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m21_2123 [label="DataContractJsonSerializer serializer = new DataContractJsonSerializer(\r\n                typeof(DataContractJsonSerializerTestClass),\r\n                new Type[] { typeof(Human) })", span="4741-4743", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m21_2125 [label="byte[] jsonBytes = ms.ToArray()", span="4746-4746", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m21_2126 [label="string json = Encoding.UTF8.GetString(jsonBytes, 0, jsonBytes.Length)", span="4747-4747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m21_2127 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", span="4733-4733", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractJsonSerializerTest()", file="JsonSerializerTest.cs"];
m21_3895 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8900-8900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m21_3896 [label="JsonTextReader reader = new JsonTextReader(new StringReader(''1234567890.123456''))", span="8902-8902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m21_3897 [label="var settings = new JsonSerializerSettings()", span="8903-8903", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m21_3899 [label="decimal? d = serialiser.Deserialize<decimal?>(reader)", span="8905-8905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m21_3898 [label="var serialiser = JsonSerializer.Create(settings)", span="8904-8904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m21_3900 [label="Assert.AreEqual(1234567890.123456m, d)", span="8907-8907", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m21_3901 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", span="8900-8900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeDecimal()", file="JsonSerializerTest.cs"];
m21_1000 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="JsonSerializerTest.cs"];
m21_2964 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", span="6767-6767", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedType.DerivedType()", file="JsonSerializerTest.cs"];
m21_1039 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2244-2244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1040 [label="string value = @''{''''Name'''':''''Orange'''', ''''Price'''':3.99, ''''ExpiryDate'''':''''01/24/2010 12:00:00''''}''", span="2246-2246", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1041 [label="Hashtable p = JsonConvert.DeserializeObject(value, typeof(Hashtable)) as Hashtable", span="2248-2248", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1042 [label="Assert.AreEqual(''Orange'', p[''Name''].ToString())", span="2250-2250", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1043 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", span="2244-2244", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashtableDeserialization()", file="JsonSerializerTest.cs"];
m21_1972 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1973 [label="Dictionary<Guid, int> dictionary = new Dictionary<Guid, int>()", span="4211-4211", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1974 [label="dictionary.Add(new Guid(''F60EAEE0-AE47-488E-B330-59527B742D77''), 1)", span="4212-4212", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1975 [label="dictionary.Add(new Guid(''C2594C02-EBA1-426A-AA87-8DD8871350B0''), 2)", span="4213-4213", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1976 [label="string json = JsonConvert.SerializeObject(dictionary, Formatting.Indented)", span="4215-4215", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1977 [label="StringAssert.AreEqual(@''{\r\n  ''''f60eaee0-ae47-488e-b330-59527b742d77'''': 1,\r\n  ''''c2594c02-eba1-426a-aa87-8dd8871350b0'''': 2\r\n}'', json)", span="4216-4219", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_1978 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", span="4209-4209", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeGuidKeyedDictionary()", file="JsonSerializerTest.cs"];
m21_2656 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5953-5953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m21_2657 [label="decimal? d = JsonConvert.DeserializeObject<decimal?>(''123456789876543.21'')", span="5955-5955", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m21_2658 [label="Assert.AreEqual(123456789876543.21m, d)", span="5956-5956", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m21_2659 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", span="5953-5953", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullableDecimalExact()", file="JsonSerializerTest.cs"];
m21_2439 [label="Entry System.NotImplementedException.NotImplementedException()", span="0-0", cluster="System.NotImplementedException.NotImplementedException()", file="JsonSerializerTest.cs"];
m21_4184 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9577-9577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m21_4185 [label="DateTime dt = new DateTime(2000, 12, 22)", span="9579-9579", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m21_4186 [label="string dateFormatString = ''yyyy'-pie-'MMM'-'dddd'-'dd''", span="9580-9580", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m21_4188 [label="string json = JsonConvert.SerializeObject(new Dictionary<DateTime, string>\r\n            {\r\n                { dt, ''123'' }\r\n            }, settings)", span="9587-9590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m21_4191 [label="Assert.AreEqual(dt, d.Keys.ElementAt(0))", span="9598-9598", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m21_4187 [label="JsonSerializerSettings settings = new JsonSerializerSettings\r\n            {\r\n                DateFormatString = dateFormatString,\r\n                Formatting = Formatting.Indented\r\n            }", span="9581-9585", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m21_4190 [label="Dictionary<DateTime, string> d = JsonConvert.DeserializeObject<Dictionary<DateTime, string>>(json, settings)", span="9596-9596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m21_4189 [label="StringAssert.AreEqual(@''{\r\n  ''''2000-pie-Dec-Friday-22'''': ''''123''''\r\n}'', json)", span="9592-9594", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m21_4192 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", span="9577-9577", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateFormatStringWithDictionaryKey_DateTime()", file="JsonSerializerTest.cs"];
m21_1603 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3416-3416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs"];
m21_1604 [label="TestProperty1 = testProperty1", span="3418-3418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs"];
m21_1605 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", span="3416-3416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass.ConstructorAndRequiredTestClass(string)", file="JsonSerializerTest.cs"];
m21_2258 [label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", span="0-0", cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, byte)", file="JsonSerializerTest.cs"];
m21_389 [label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0", cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonSerializerTest.cs"];
m21_2544 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5699-5699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m21_2545 [label="string jsonText = JsonConvert.SerializeObject(new HashSet<string>()\r\n            {\r\n                ''One'',\r\n                ''2'',\r\n                ''III''\r\n            }, Formatting.Indented)", span="5701-5706", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m21_2546 [label="StringAssert.AreEqual(@''[\r\n  ''''One'''',\r\n  ''''2'''',\r\n  ''''III''''\r\n]'', jsonText)", span="5708-5712", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m21_2547 [label="HashSet<string> d = JsonConvert.DeserializeObject<HashSet<string>>(jsonText)", span="5714-5714", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m21_2548 [label="Assert.AreEqual(3, d.Count)", span="5716-5716", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m21_2549 [label="Assert.IsTrue(d.Contains(''One''))", span="5717-5717", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m21_2550 [label="Assert.IsTrue(d.Contains(''2''))", span="5718-5718", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m21_2551 [label="Assert.IsTrue(d.Contains(''III''))", span="5719-5719", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m21_2552 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", span="5699-5699", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeHashSet()", file="JsonSerializerTest.cs"];
m21_1195 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeAnonymousType<T>(string, T, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs"];
m21_1085 [label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="264-264", cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonSerializerTest.cs"];
m21_1745 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3779-3779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m21_1746 [label="Uri uri = new Uri(''http://codeplex.com'')", span="3781-3781", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m21_1747 [label="string json = JsonConvert.SerializeObject(uri)", span="3782-3782", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m21_1748 [label="Assert.AreEqual(''http://codeplex.com/'', uri.ToString())", span="3784-3784", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m21_1750 [label="Assert.AreEqual(uri, newUri)", span="3787-3787", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m21_1749 [label="Uri newUri = JsonConvert.DeserializeObject<Uri>(json)", span="3786-3786", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m21_1751 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", span="3779-3779", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.UriSerialization()", file="JsonSerializerTest.cs"];
m21_2456 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5530-5530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2457 [label="var reference = new Dictionary<string, object>()", span="5534-5534", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2458 [label="reference.Add(''$ref'', ''Persons'')", span="5535-5535", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2459 [label="reference.Add(''$id'', 1)", span="5536-5536", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2463 [label="child.Add(''Father'', reference)", span="5541-5541", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2460 [label="var child = new Dictionary<string, object>()", span="5538-5538", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2461 [label="child.Add(''_id'', 2)", span="5539-5539", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2462 [label="child.Add(''Name'', ''Isabell'')", span="5540-5540", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2464 [label="var json = JsonConvert.SerializeObject(child, Formatting.Indented)", span="5543-5543", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2465 [label="ExceptionAssert.Throws<JsonSerializationException>(() => { JsonConvert.DeserializeObject<Dictionary<string, object>>(json); }, ''Additional content found in JSON reference object. A JSON reference object should only have a $ref property. Path 'Father.$id', line 6, position 10.'')", span="5545-5545", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_2466 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", span="5530-5530", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeRefAdditionalContent()", file="JsonSerializerTest.cs"];
m21_197 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="506-506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerTest.cs"];
m21_198 [label="return dictionaryKey;", span="508-508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerTest.cs"];
m21_199 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", span="506-506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyContractResolver.ResolveDictionaryKey(string)", file="JsonSerializerTest.cs"];
m21_4327 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="JsonSerializerTest.cs"];
m21_3478 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7842-7842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3479 [label="PropertyItemConverter c = new PropertyItemConverter\r\n            {\r\n                Data = new[]\r\n                {\r\n                    ''one'',\r\n                    ''two'',\r\n                    ''three''\r\n                }\r\n            }", span="7844-7852", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3480 [label="string json = JsonConvert.SerializeObject(c)", span="7854-7854", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3481 [label="Assert.AreEqual(@''{''''Data'''':['''':::ONE:::'''','''':::TWO:::'''','''':::THREE:::'''']}'', json)", span="7856-7856", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_3482 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", span="7842-7842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeCollectionItemConverter()", file="JsonSerializerTest.cs"];
m21_401 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", span="1015-1015", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildClassVirtual.ChildClassVirtual()", file="JsonSerializerTest.cs"];
m21_3148 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7196-7196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m21_3149 [label="string json = @''[\r\n  1,\r\n  2,\r\n  3,\r\n  null\r\n]''", span="7198-7203", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m21_3150 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                List<int> numbers = JsonConvert.DeserializeObject<List<int>>(json);\r\n            }, ''Error converting value {null} to type 'System.Int32'. Path '[3]', line 5, position 6.'')", span="7205-7208", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m21_3151 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", span="7196-7196", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeNullInt()", file="JsonSerializerTest.cs"];
m21_4086 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9385-9385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4087 [label="throw new InvalidCastException();", span="9387-9387", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4088 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", span="9385-9385", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToChar(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_1548 [label="Entry Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", span="46-46", cluster="Newtonsoft.Json.Tests.TestObjects.InterfacePropertyTestClass.InterfacePropertyTestClass()", file="JsonSerializerTest.cs"];
m21_793 [label="Entry Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", span="171-171", cluster="Newtonsoft.Json.Utilities.MathUtils.ApproxEquals(double, double)", file="JsonSerializerTest.cs"];
m21_1458 [label="Entry Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.UserNullable.UserNullable()", file="JsonSerializerTest.cs"];
m21_3886 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8883-8883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m21_3887 [label="ISet<string> s1 = new HashSet<string>(new[] { ''1'', ''two'', ''III'' })", span="8885-8885", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m21_3888 [label="string json = JsonConvert.SerializeObject(s1)", span="8887-8887", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m21_3890 [label="Assert.AreEqual(s1.Count, s2.Count)", span="8891-8891", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m21_3891 [label=s1, span="8892-8892", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m21_3889 [label="ISet<string> s2 = JsonConvert.DeserializeObject<ISet<string>>(json)", span="8889-8889", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m21_3892 [label="Assert.IsTrue(s2.Contains(s))", span="8894-8894", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m21_3893 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", span="8883-8883", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.HashSetInterface()", file="JsonSerializerTest.cs"];
m21_2086 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", span="4567-4567", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.B.B()", file="JsonSerializerTest.cs"];
m21_1155 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="JsonSerializerTest.cs"];
m21_1071 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2302-2302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m21_1072 [label="string json = @''{\r\n    results:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://www.google.com/'''',\r\n                url : ''''http://www.google.com/'''',\r\n                visibleUrl : ''''www.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:zhool8dxBV4J:www.google.com'''',\r\n                title : ''''Google'''',\r\n                titleNoFormatting : ''''Google'''',\r\n                content : ''''Enables users to search the Web, Usenet, and \r\nimages. Features include PageRank,   caching and translation of \r\nresults, and an option to find similar pages.''''\r\n            },\r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://news.google.com/'''',\r\n                url : ''''http://news.google.com/'''',\r\n                visibleUrl : ''''news.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:Va_XShOz_twJ:news.google.com'''',\r\n                title : ''''Google News'''',\r\n                titleNoFormatting : ''''Google News'''',\r\n                content : ''''Aggregated headlines and a search engine of many of the world's news sources.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://groups.google.com/'''',\r\n                url : ''''http://groups.google.com/'''',\r\n                visibleUrl : ''''groups.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:x2uPD3hfkn0J:groups.google.com'''',\r\n                title : ''''Google Groups'''',\r\n                titleNoFormatting : ''''Google Groups'''',\r\n                content : ''''Enables users to search and browse the Usenet \r\narchives which consist of over 700   million messages, and post new \r\ncomments.''''\r\n            },\r\n            \r\n            {\r\n                GsearchResultClass:''''GwebSearch'''',\r\n                unescapedUrl : ''''http://maps.google.com/'''',\r\n                url : ''''http://maps.google.com/'''',\r\n                visibleUrl : ''''maps.google.com'''',\r\n                cacheUrl : \r\n''''http://www.google.com/search?q=cache:dkf5u2twBXIJ:maps.google.com'''',\r\n                title : ''''Google Maps'''',\r\n                titleNoFormatting : ''''Google Maps'''',\r\n                content : ''''Provides directions, interactive maps, and \r\nsatellite/aerial imagery of the United   States. Can also search by \r\nkeyword such as type of business.''''\r\n            }\r\n        ],\r\n        \r\n    adResults:\r\n        [\r\n            {\r\n                GsearchResultClass:''''GwebSearch.ad'''',\r\n                title : ''''Gartner Symposium/ITxpo'''',\r\n                content1 : ''''Meet brilliant Gartner IT analysts'''',\r\n                content2 : ''''20-23 May 2007- Barcelona, Spain'''',\r\n                url : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                impressionUrl : \r\n''''http://www.google.com/uds/css/ad-indicator-on.gif?ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB'''', \r\n\r\n                unescapedUrl : \r\n''''http://www.google.com/url?sa=L&ai=BVualExYGRo3hD5ianAPJvejjD8-s6ye7kdTwArbI4gTAlrECEAEYASDXtMMFOAFQubWAjvr_____AWDXw_4EiAEBmAEAyAEBgAIB&num=1&q=http://www.gartner.com/it/sym/2007/spr8/spr8.jsp%3Fsrc%3D_spain_07_%26WT.srch%3D1&usg=__CxRH06E4Xvm9Muq13S4MgMtnziY='''', \r\n\r\n                visibleUrl : ''''www.gartner.com''''\r\n            }\r\n        ]\r\n}\r\n''", span="2304-2381", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m21_1073 [label="object o = JsonConvert.DeserializeObject(json)", span="2382-2382", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m21_1074 [label="string s = string.Empty", span="2383-2383", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m21_1075 [label="s += s", span="2384-2384", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m21_1076 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", span="2302-2302", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GoogleSearchAPI()", file="JsonSerializerTest.cs"];
m21_2440 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5496-5496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_2441 [label="return objectType == typeof(Pos);", span="5498-5498", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_2442 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", span="5496-5496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PosConverter.CanConvert(System.Type)", file="JsonSerializerTest.cs"];
m21_4107 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9420-9420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4108 [label="throw new InvalidCastException();", span="9422-9422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_4109 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", span="9420-9420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId.System.IConvertible.ToSByte(System.IFormatProvider)", file="JsonSerializerTest.cs"];
m21_2604 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", span="5818-5818", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TimeZoneOffsetObject.TimeZoneOffsetObject()", file="JsonSerializerTest.cs"];
m21_4010 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="JsonSerializerTest.cs"];
m21_3382 [label="Entry Unk.ToUpper", span="", cluster="Unk.ToUpper", file="JsonSerializerTest.cs"];
m21_3085 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", span="6965-6965", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ReflectionContractResolver.ReflectionContractResolver()", file="JsonSerializerTest.cs"];
m21_2056 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4505-4505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m21_2057 [label="JRawValueTestObject deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:3}'')", span="4507-4507", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m21_2058 [label="Assert.AreEqual(''3'', deserialized.Value.ToString())", span="4508-4508", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m21_2059 [label="deserialized = JsonConvert.DeserializeObject<JRawValueTestObject>(''{value:'3'}'')", span="4510-4510", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m21_2060 [label="Assert.AreEqual(@''''''3'''''', deserialized.Value.ToString())", span="4511-4511", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m21_2061 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", span="4505-4505", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JRawValue()", file="JsonSerializerTest.cs"];
m21_3871 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8828-8828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m21_3872 [label="IDictionary<string, object> dates = new Dictionary<string, object>\r\n            {\r\n                { ''DateTime-Unspecified'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Unspecified) },\r\n                { ''DateTime-Utc'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc) },\r\n                { ''DateTime-Local'', new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Local) },\r\n                { ''DateTimeOffset-Zero'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero) },\r\n                { ''DateTimeOffset-Plus1'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1)) },\r\n                { ''DateTimeOffset-Plus15'', new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.FromHours(1.5)) }\r\n            }", span="8830-8838", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m21_3873 [label="string expected = JsonConvert.SerializeObject(dates, Formatting.Indented)", span="8840-8840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m21_3874 [label="string actual = JsonConvert.SerializeObject(dates, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatString = JsonSerializerSettings.DefaultDateFormatString\r\n            })", span="8842-8845", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m21_3875 [label="Assert.AreEqual(expected, actual)", span="8847-8847", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m21_3876 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", span="8828-8828", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DefaultDateStringFormatVsUnsetDateStringFormat()", file="JsonSerializerTest.cs"];
m21_3492 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7884-7884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m21_3493 [label="IDictionary<DateTimeOffset?, int> dic1 = new Dictionary<DateTimeOffset?, int>\r\n            {\r\n                { new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero), 1 },\r\n                { new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero), 2 }\r\n            }", span="7886-7890", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m21_3494 [label="string json = JsonConvert.SerializeObject(dic1, Formatting.Indented, new JsonSerializerSettings\r\n            {\r\n                DateFormatHandling = DateFormatHandling.MicrosoftDateFormat\r\n            })", span="7892-7895", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m21_3495 [label="StringAssert.AreEqual(@''{\r\n  ''''\/Date(976623132000+0000)\/'''': 1,\r\n  ''''\/Date(1386850332000+0000)\/'''': 2\r\n}'', json)", span="7897-7900", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m21_3496 [label="IDictionary<DateTimeOffset?, int> dic2 = JsonConvert.DeserializeObject<IDictionary<DateTimeOffset?, int>>(json)", span="7902-7902", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m21_3497 [label="Assert.AreEqual(2, dic2.Count)", span="7904-7904", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m21_3498 [label="Assert.AreEqual(1, dic2[new DateTimeOffset(2000, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7905-7905", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m21_3499 [label="Assert.AreEqual(2, dic2[new DateTimeOffset(2013, 12, 12, 12, 12, 12, TimeSpan.Zero)])", span="7906-7906", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m21_3500 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", span="7884-7884", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DateTimeDictionaryKey_DateTimeOffset_MS()", file="JsonSerializerTest.cs"];
m21_2870 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", span="6506-6506", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ImplementInterfaceObject.ImplementInterfaceObject()", file="JsonSerializerTest.cs"];
m21_3054 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="814-814", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonSerializerTest.cs"];
m21_77 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs"];
m21_78 [label="ExceptionAssert.Throws<JsonReaderException>(\r\n                () => JsonConvert.DeserializeObject<IList<bool>>(@''['2000-12-20T10:55:55Z']''),\r\n                ''Could not convert string to boolean: 2000-12-20T10:55:55Z. Path '[0]', line 1, position 23.'')", span="294-296", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs"];
m21_79 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", span="292-292", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeBoolean_DateTime()", file="JsonSerializerTest.cs"];
m21_1050 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2268-2268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1051 [label="string value = JsonConvert.SerializeObject(new GetOnlyPropertyClass())", span="2270-2270", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1052 [label="GetOnlyPropertyClass c = JsonConvert.DeserializeObject<GetOnlyPropertyClass>(value)", span="2272-2272", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1053 [label="Assert.AreEqual(c.Field, ''Field'')", span="2274-2274", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1054 [label="Assert.AreEqual(c.GetOnlyProperty, ''GetOnlyProperty'')", span="2275-2275", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1055 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", span="2268-2268", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeDeserializeGetOnlyProperty()", file="JsonSerializerTest.cs"];
m21_1184 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_1185 [label="DateTime d = new DateTime(2000, 1, 1)", span="2578-2578", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_1186 [label="var anonymous =\r\n                new\r\n                {\r\n                    DateValue = d\r\n                }", span="2580-2584", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_1192 [label="Assert.AreEqual(d, anonymous.DateValue)", span="2596-2596", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_1187 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="2586-2586", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_1189 [label="string json = JsonConvert.SerializeObject(anonymous, settings)", span="2592-2592", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_1191 [label="anonymous = JsonConvert.DeserializeAnonymousType(json, anonymous, settings)", span="2595-2595", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_1188 [label="settings.Converters.Add(new IsoDateTimeConverter\r\n            {\r\n                DateTimeFormat = ''yyyy''\r\n            })", span="2587-2590", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_1190 [label="Assert.AreEqual(@''{''''DateValue'''':''''2000''''}'', json)", span="2593-2593", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_1193 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", span="2576-2576", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AnonymousObjectSerializationWithSetting()", file="JsonSerializerTest.cs"];
m21_2826 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6363-6363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2827 [label="string json = @''{A:''''Test''''}''", span="6365-6365", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2828 [label="var withoutParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithoutParameterisedConstructor>(json)", span="6367-6367", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2829 [label="var withParameterisedConstructor = JsonConvert.DeserializeObject<DTOWithParameterisedConstructor>(json)", span="6368-6368", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2830 [label="Assert.AreEqual(withoutParameterisedConstructor.B, withParameterisedConstructor.B)", span="6369-6369", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_2831 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", span="6363-6363", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PopulationBehaviourForOmittedPropertiesIsTheSameForParameterisedConstructorAsForDefaultConstructor()", file="JsonSerializerTest.cs"];
m21_3391 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7688-7688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3392 [label="IList<MultipleItemsClass> values = new List<MultipleItemsClass>()", span="7690-7690", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3393 [label="JsonTextReader reader = new JsonTextReader(new StringReader(@''{ ''''name'''': ''''bar'''' }{ ''''name'''': ''''baz'''' }''))", span="7692-7692", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3399 [label="values.Add(foo)", span="7705-7705", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3400 [label="Assert.AreEqual(2, values.Count)", span="7708-7708", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3401 [label="Assert.AreEqual(''bar'', values[0].Name)", span="7709-7709", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3402 [label="Assert.AreEqual(''baz'', values[1].Name)", span="7710-7710", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3394 [label="reader.SupportMultipleContent = true", span="7693-7693", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3396 [label="!reader.Read()", span="7697-7697", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3398 [label="MultipleItemsClass foo = serializer.Deserialize<MultipleItemsClass>(reader)", span="7703-7703", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3395 [label=true, span="7695-7695", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3397 [label="JsonSerializer serializer = new JsonSerializer()", span="7702-7702", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_3403 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", span="7688-7688", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MultipleItems()", file="JsonSerializerTest.cs"];
m21_946 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", span="1977-1977", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SubWithContractVirtualProperties.SubWithContractVirtualProperties()", file="JsonSerializerTest.cs"];
m21_324 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="840-840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m21_325 [label="FaqItem c = new FaqItem()", span="842-842", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_326 [label="c.FaqId = 1", span="843-843", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_327 [label="c.Sections.Add(new FaqSection())", span="844-844", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", color=red, community=0, file="JsonSerializerTest.cs"];
m21_328 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="846-846", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m21_329 [label="StringAssert.AreEqual(@''{\r\n  ''''FaqId'''': 1,\r\n  ''''Name'''': null,\r\n  ''''IsDeleted'''': false,\r\n  ''''FullSectionsProp'''': [\r\n    {}\r\n  ]\r\n}'', json)", span="848-855", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m21_330 [label="FaqItem c2 = JsonConvert.DeserializeObject<FaqItem>(json)", span="857-857", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m21_331 [label="Assert.AreEqual(1, c2.FaqId)", span="859-859", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m21_332 [label="Assert.AreEqual(1, c2.Sections.Count)", span="860-860", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m21_333 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", span="840-840", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeMetadataType2()", file="JsonSerializerTest.cs"];
m21_3621 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8204-8204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m21_3622 [label="string json = @''{ ''''ClassName'''' : ''''System.InvalidOperationException'''',\r\n  ''''Data'''' : null,\r\n  ''''ExceptionMethod'''' : ''''8\nLogin\nAppBiz, Version=4.0.0.0, Culture=neutral, PublicKeyToken=null\nMyApp.LoginBiz\nMyApp.User Login()'''',\r\n  ''''HResult'''' : -2146233079,\r\n  ''''HelpURL'''' : null,\r\n  ''''InnerException'''' : { ''''ClassName'''' : ''''System.Exception'''',\r\n      ''''Data'''' : null,\r\n      ''''ExceptionMethod'''' : null,\r\n      ''''HResult'''' : -2146233088,\r\n      ''''HelpURL'''' : null,\r\n      ''''InnerException'''' : null,\r\n      ''''Message'''' : ''''Inner exception...'''',\r\n      ''''RemoteStackIndex'''' : 0,\r\n      ''''RemoteStackTraceString'''' : null,\r\n      ''''Source'''' : null,\r\n      ''''StackTraceString'''' : null,\r\n      ''''WatsonBuckets'''' : null\r\n    },\r\n  ''''Message'''' : ''''Outter exception...'''',\r\n  ''''RemoteStackIndex'''' : 0,\r\n  ''''RemoteStackTraceString'''' : null,\r\n  ''''Source'''' : ''''AppBiz'''',\r\n  ''''StackTraceString'''' : '''' at MyApp.LoginBiz.Login() in C:\\MyApp\\LoginBiz.cs:line 44\r\n at MyApp.LoginSvc.Login() in C:\\MyApp\\LoginSvc.cs:line 71\r\n at SyncInvokeLogin(Object , Object[] , Object[] )\r\n at System.ServiceModel.Dispatcher.SyncMethodInvoker.Invoke(Object instance, Object[] inputs, Object[]& outputs)\r\n at System.ServiceModel.Dispatcher.DispatchOperationRuntime.InvokeBegin(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage5(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage41(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage4(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage31(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage3(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage2(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage11(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.ImmutableDispatchRuntime.ProcessMessage1(MessageRpc& rpc)\r\n at System.ServiceModel.Dispatcher.MessageRpc.Process(Boolean isOperationContextSet)'''',\r\n  ''''WatsonBuckets'''' : null\r\n}''", span="8206-8230", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m21_3623 [label="InvalidOperationException exception = JsonConvert.DeserializeObject<InvalidOperationException>(json)", span="8232-8232", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m21_3624 [label="Assert.IsNotNull(exception)", span="8233-8233", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m21_3625 [label="CustomAssert.IsInstanceOfType(typeof(InvalidOperationException), exception)", span="8234-8234", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m21_3626 [label="Assert.AreEqual(''Outter exception...'', exception.Message)", span="8236-8236", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m21_3627 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", span="8204-8204", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeException()", file="JsonSerializerTest.cs"];
m21_3703 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="JsonSerializerTest.cs"];
m21_425 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m21_426 [label="var input = new ResponseWithNewGenericPropertyOverride<int>()\r\n            {\r\n                Message = ''Trying out integer as type parameter'',\r\n                Data = 25,\r\n                Result = ''This should be fine''\r\n            }", span="1099-1104", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m21_427 [label="var json = JsonConvert.SerializeObject(input)", span="1106-1106", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m21_429 [label="Assert.AreEqual(input.Data, deserialized.Data)", span="1109-1109", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m21_430 [label="Assert.AreEqual(input.Message, deserialized.Message)", span="1110-1110", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m21_431 [label="Assert.AreEqual(input.Result, deserialized.Result)", span="1111-1111", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m21_428 [label="var deserialized = JsonConvert.DeserializeObject<ResponseWithNewGenericPropertyOverride<int>>(json)", span="1107-1107", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m21_432 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", span="1097-1097", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CanSerializeWithBuiltInTypeAsGenericArgumentOverride()", file="JsonSerializerTest.cs"];
m21_1435 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", span="30-30", cluster="Newtonsoft.Json.Tests.TestObjects.PersonRaw.PersonRaw()", file="JsonSerializerTest.cs"];
m21_2044 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4468-4468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_2045 [label="ThisGenericTest<KeyValueId> g = new ThisGenericTest<KeyValueId>()", span="4470-4470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_2046 [label="g.Add(new KeyValueId { Id = 1, Key = ''key1'', Value = ''value1'' })", span="4472-4472", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_2047 [label="g.Add(new KeyValueId { Id = 2, Key = ''key2'', Value = ''value2'' })", span="4473-4473", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_2048 [label="g.MyProperty = ''some value''", span="4475-4475", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_2049 [label="string json = g.ToJson()", span="4477-4477", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_2050 [label="StringAssert.AreEqual(@''{\r\n  ''''MyProperty'''': ''''some value'''',\r\n  ''''TheItems'''': [\r\n    {\r\n      ''''Id'''': 1,\r\n      ''''Key'''': ''''key1'''',\r\n      ''''Value'''': ''''value1''''\r\n    },\r\n    {\r\n      ''''Id'''': 2,\r\n      ''''Key'''': ''''key2'''',\r\n      ''''Value'''': ''''value2''''\r\n    }\r\n  ]\r\n}'', json)", span="4479-4493", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_2051 [label="ThisGenericTest<KeyValueId> gen = JsonConvert.DeserializeObject<ThisGenericTest<KeyValueId>>(json)", span="4495-4495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_2052 [label="Assert.AreEqual(''some value'', gen.MyProperty)", span="4496-4496", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_2053 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", span="4468-4468", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoreIndexedProperties()", file="JsonSerializerTest.cs"];
m21_142 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JsonSerializerTest.cs"];
m21_4328 [label="Entry System.Net.Mail.MailAddress.MailAddress(string, string)", span="0-0", cluster="System.Net.Mail.MailAddress.MailAddress(string, string)", file="JsonSerializerTest.cs"];
m21_740 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1599-1599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_741 [label="info.AddValue(''stringValue'', _stringValue)", span="1601-1601", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_742 [label="info.AddValue(''intValue'', _intValue)", span="1602-1602", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_743 [label="info.AddValue(''person1'', _person1, typeof(PersonReference))", span="1603-1603", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_744 [label="info.AddValue(''person2'', _person2, typeof(PersonReference))", span="1604-1604", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_745 [label="info.AddValue(''person3'', _person3, typeof(PersonReference))", span="1605-1605", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_746 [label="info.AddValue(''parent'', _parent, typeof(PreserveReferencesCallbackTestObject))", span="1606-1606", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_747 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1599-1599", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerTest.cs"];
m21_1557 [label="Entry Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", span="34-34", cluster="Newtonsoft.Json.Tests.TestObjects.Organization.Person.Person()", file="JsonSerializerTest.cs"];
m21_183 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", span="470-470", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Binding_DisallowNull.Binding_DisallowNull()", file="JsonSerializerTest.cs"];
m21_1417 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2988-2988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m21_1418 [label="string json = JsonConvert.SerializeObject(new GenericImpl())", span="2990-2990", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m21_1419 [label="Assert.AreEqual(@''{''''Id'''':0}'', json)", span="2991-2991", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m21_1420 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", span="2988-2988", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.GenericAbstractProperty()", file="JsonSerializerTest.cs"];
m21_3907 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8936-8936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m21_3908 [label="BigInteger i = BigInteger.Parse(''123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990'')", span="8938-8938", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m21_3909 [label="string json = JsonConvert.SerializeObject(new[] { i }, Formatting.Indented)", span="8940-8940", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m21_3910 [label="StringAssert.AreEqual(@''[\r\n  123456789999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990\r\n]'', json)", span="8942-8944", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m21_3911 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", span="8936-8936", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializeBigInteger()", file="JsonSerializerTest.cs"];
m21_396 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="1021-1021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m21_397 [label="Assert.AreEqual(@''{''''IsTransient'''':true}'', JsonConvert.SerializeObject(new ChildClassVirtual { IsTransient = true }))", span="1023-1023", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m21_398 [label="var childClass = JsonConvert.DeserializeObject<ChildClassVirtual>(@''{''''IsTransient'''':true}'')", span="1025-1025", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m21_399 [label="Assert.AreEqual(true, childClass.IsTransient)", span="1026-1026", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m21_400 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", span="1021-1021", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NewPropertyVirtual()", file="JsonSerializerTest.cs"];
m21_1903 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="4062-4062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m21_1904 [label="ExceptionAssert.Throws<JsonSerializationException>(() =>\r\n            {\r\n                JsonConvert.SerializeObject(new MemoryStream(), new JsonSerializerSettings\r\n                {\r\n                    ContractResolver = new DefaultContractResolver\r\n                    {\r\n#if !(PORTABLE || DNXCORE50 || PORTABLE40)\r\n                        IgnoreSerializableAttribute = true\r\n#endif\r\n                    }\r\n                });\r\n            }, @''Error getting value from 'ReadTimeout' on 'System.IO.MemoryStream'.'')", span="4064-4075", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m21_1905 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", span="4062-4062", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializePropertyGetError()", file="JsonSerializerTest.cs"];
m21_2188 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="JsonSerializerTest.cs"];
m21_1087 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2410-2410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1088 [label="JsonPropertyClass test = new JsonPropertyClass()", span="2412-2412", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1089 [label="test.Pie = ''Delicious''", span="2413-2413", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1090 [label="test.SweetCakesCount = int.MaxValue", span="2414-2414", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1091 [label="string jsonText = JsonConvert.SerializeObject(test)", span="2416-2416", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1094 [label="Assert.AreEqual(test.Pie, test2.Pie)", span="2422-2422", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1095 [label="Assert.AreEqual(test.SweetCakesCount, test2.SweetCakesCount)", span="2423-2423", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1092 [label="Assert.AreEqual(@''{''''pie'''':''''Delicious'''',''''pie1'''':''''PieChart!'''',''''sweet_cakes_count'''':2147483647}'', jsonText)", span="2418-2418", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1093 [label="JsonPropertyClass test2 = JsonConvert.DeserializeObject<JsonPropertyClass>(jsonText)", span="2420-2420", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_1096 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", span="2410-2410", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.JsonPropertyClassSerialize()", file="JsonSerializerTest.cs"];
m21_3303 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7489-7489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m21_3304 [label="byte[] b = JsonConvert.DeserializeObject<byte[]>('''')", span="7491-7491", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m21_3305 [label="Assert.IsNull(b)", span="7492-7492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m21_3306 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", span="7489-7489", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeByteArrayFromEmptyString()", file="JsonSerializerTest.cs"];
m21_2859 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6486-6486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m21_2860 [label="ChildWithDifferentOverrideObject cc = new ChildWithDifferentOverrideObject\r\n            {\r\n                VirtualMember = ''VirtualMember!'',\r\n                NonVirtualMember = ''NonVirtualMember!''\r\n            }", span="6488-6492", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m21_2861 [label="string result = JsonConvert.SerializeObject(cc)", span="6494-6494", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m21_2862 [label="Assert.AreEqual(@''{''''differentVirtualMember'''':''''VirtualMember!'''',''''nonVirtualMember'''':''''NonVirtualMember!''''}'', result)", span="6495-6495", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m21_2863 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", span="6486-6486", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ChildWithDifferentOverrideObjectTest()", file="JsonSerializerTest.cs"];
m21_3162 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7239-7239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m21_3163 [label="string json = @''{\r\n  ''''Integer'''': 1,\r\n  ''''NullableInteger1'''': 2,\r\n  ''''NullableInteger2'''': null\r\n}''", span="7241-7245", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m21_3164 [label="ExceptionAssert.Throws<JsonSerializationException>(() => JsonConvert.DeserializeObject<ConvertableIntTestClass>(json), ''Error converting value 1 to type 'Newtonsoft.Json.Tests.ConvertibleInt'. Path 'Integer', line 2, position 14.'')", span="7247-7247", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m21_3165 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", span="7239-7239", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeIConvertible()", file="JsonSerializerTest.cs"];
m21_1120 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="JsonSerializerTest.cs"];
m21_4056 [label="Entry Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", span="35-35", cluster="Newtonsoft.Json.Tests.TestObjects.IMyInterface.PrintTest()", file="JsonSerializerTest.cs"];
m21_2951 [label="Entry Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6747-6747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m21_2952 [label="BusRun r = JsonConvert.DeserializeObject<BusRun>(''{\''Departures\'':[\''\\/Date(1309874148734-0400)\\/\'',\''\\/Date(1309874148739-0400)\\/\'',null],\''WheelchairAccessible\'':true}'')", span="6749-6749", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m21_2953 [label="Assert.AreEqual(typeof(List<DateTime?>), r.Departures.GetType())", span="6751-6751", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m21_2954 [label="Assert.AreEqual(3, r.Departures.Count())", span="6752-6752", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m21_2955 [label="Assert.IsNotNull(r.Departures.ElementAt(0))", span="6753-6753", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m21_2956 [label="Assert.IsNotNull(r.Departures.ElementAt(1))", span="6754-6754", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m21_2957 [label="Assert.IsNull(r.Departures.ElementAt(2))", span="6755-6755", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m21_2958 [label="Exit Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", span="6747-6747", cluster="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DeserializeGenericEnumerableProperty()", file="JsonSerializerTest.cs"];
m21_4414 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired", span="", file="JsonSerializerTest.cs"];
m21_4415 [label=c1, span="", file="JsonSerializerTest.cs"];
m21_4416 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass", span="", file="JsonSerializerTest.cs"];
m21_4417 [label=c1, span="", file="JsonSerializerTest.cs"];
m21_4418 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver", span="", file="JsonSerializerTest.cs"];
m21_4419 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem", span="", file="JsonSerializerTest.cs"];
m21_4420 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse", span="", file="JsonSerializerTest.cs"];
m21_4421 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4422 [label=serializer, span="", file="JsonSerializerTest.cs"];
m21_4423 [label=referenceResolver, span="", file="JsonSerializerTest.cs"];
m21_4424 [label=serializerProxy, span="", file="JsonSerializerTest.cs"];
m21_4425 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject", span="", file="JsonSerializerTest.cs"];
m21_4426 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast", span="", file="JsonSerializerTest.cs"];
m21_4427 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest", span="", file="JsonSerializerTest.cs"];
m21_4428 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4429 [label=strFromTest, span="", file="JsonSerializerTest.cs"];
m21_4430 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass", span="", file="JsonSerializerTest.cs"];
m21_4431 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass", span="", file="JsonSerializerTest.cs"];
m21_4432 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers", span="", file="JsonSerializerTest.cs"];
m21_4433 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4434 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4435 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4436 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4437 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4438 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4439 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4440 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4441 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4442 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4443 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4444 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass", span="", file="JsonSerializerTest.cs"];
m21_4445 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>", span="", file="JsonSerializerTest.cs"];
m21_4446 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4447 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor", span="", file="JsonSerializerTest.cs"];
m21_4448 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1", span="", file="JsonSerializerTest.cs"];
m21_4449 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2", span="", file="JsonSerializerTest.cs"];
m21_4450 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>", span="", file="JsonSerializerTest.cs"];
m21_4451 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject", span="", file="JsonSerializerTest.cs"];
m21_4452 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>", span="", file="JsonSerializerTest.cs"];
m21_4453 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA", span="", file="JsonSerializerTest.cs"];
m21_4454 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB", span="", file="JsonSerializerTest.cs"];
m21_4455 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4456 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty", span="", file="JsonSerializerTest.cs"];
m21_4457 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey", span="", file="JsonSerializerTest.cs"];
m21_4458 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass", span="", file="JsonSerializerTest.cs"];
m21_4459 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4460 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector", span="", file="JsonSerializerTest.cs"];
m21_4461 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived", span="", file="JsonSerializerTest.cs"];
m21_4462 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base", span="", file="JsonSerializerTest.cs"];
m21_4463 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonSerializerTest.cs"];
m21_4464 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable", span="", file="JsonSerializerTest.cs"];
m21_4465 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor", span="", file="JsonSerializerTest.cs"];
m21_4466 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor", span="", file="JsonSerializerTest.cs"];
m21_4467 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty", span="", file="JsonSerializerTest.cs"];
m21_4468 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty", span="", file="JsonSerializerTest.cs"];
m21_4469 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes", span="", file="JsonSerializerTest.cs"];
m21_4470 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException", span="", file="JsonSerializerTest.cs"];
m21_4471 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4472 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4473 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4474 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter", span="", file="JsonSerializerTest.cs"];
m21_4475 [label=errors, span="", file="JsonSerializerTest.cs"];
m21_4476 [label=errors, span="", file="JsonSerializerTest.cs"];
m21_4477 [label=errors, span="", file="JsonSerializerTest.cs"];
m21_4478 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4479 [label=s, span="", file="JsonSerializerTest.cs"];
m21_4480 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4481 [label=s, span="", file="JsonSerializerTest.cs"];
m21_4482 [label=serializer, span="", file="JsonSerializerTest.cs"];
m21_4483 [label=reader, span="", file="JsonSerializerTest.cs"];
m21_4484 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>", span="", file="JsonSerializerTest.cs"];
m21_4485 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>", span="", file="JsonSerializerTest.cs"];
m21_4486 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4487 [label=json, span="", file="JsonSerializerTest.cs"];
m21_4488 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor", span="", file="JsonSerializerTest.cs"];
m21_4489 [label="out Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize", span="", file="JsonSerializerTest.cs"];
m21_4490 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter", span="", file="JsonSerializerTest.cs"];
m21_4491 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId", span="", file="JsonSerializerTest.cs"];
m21_4492 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType", span="", file="JsonSerializerTest.cs"];
m21_4493 [label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType", span="", file="JsonSerializerTest.cs"];
m21_4494 [label=JsonMessage, span="", file="JsonSerializerTest.cs"];
m21_4495 [label=s, span="", file="JsonSerializerTest.cs"];
m21_4496 [label="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty", span="", file="JsonSerializerTest.cs"];
m21_4497 [label="Newtonsoft.Json.Tests.Serialization.DecimalTest", span="", file="JsonSerializerTest.cs"];
m21_4498 [label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor", span="", file="JsonSerializerTest.cs"];
m21_4499 [label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor", span="", file="JsonSerializerTest.cs"];
m21_4500 [label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor", span="", file="JsonSerializerTest.cs"];
m21_4501 [label="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest", span="", file="JsonSerializerTest.cs"];
m22_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired.Example()", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired.Example()", file="JsonValidatingReader.cs"];
m22_1 [label="string json = @''{\r\n              'Name': 'Starcraft III',\r\n              'ReleaseDate': null\r\n            }''", span="56-59", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired.Example()", color=green, community=0, file="JsonValidatingReader.cs"];
m22_2 [label="Videogame starcraft = JsonConvert.DeserializeObject<Videogame>(json)", span="61-61", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired.Example()", file="JsonValidatingReader.cs"];
m22_8 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="JsonValidatingReader.cs"];
m22_6 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonValidatingReader.cs"];
m22_3 [label="Console.WriteLine(starcraft.Name)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired.Example()", file="JsonValidatingReader.cs"];
m22_7 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="JsonValidatingReader.cs"];
m22_4 [label="Console.WriteLine(starcraft.ReleaseDate)", span="66-66", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired.Example()", file="JsonValidatingReader.cs"];
m22_5 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired.Example()", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.JsonPropertyRequired.Example()", file="JsonValidatingReader.cs"];
m23_6 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", span="88-88", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JsonWriterException.cs"];
m23_7 [label="Path = path", span="91-91", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JsonWriterException.cs", color=green, community=0];
m23_8 [label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", span="88-88", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception, string)", file="JsonWriterException.cs"];
m23_4 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="69-69", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JsonWriterException.cs"];
m23_5 [label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", span="69-69", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string, System.Exception)", file="JsonWriterException.cs"];
m23_9 [label="Entry Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94", cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonWriterException.cs"];
m23_10 [label="return Create(writer.ContainerPath, message, ex);", span="96-96", cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonWriterException.cs"];
m23_11 [label="Exit Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", span="94-94", cluster="Newtonsoft.Json.JsonWriterException.Create(Newtonsoft.Json.JsonWriter, string, System.Exception)", file="JsonWriterException.cs"];
m23_2 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="58-58", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JsonWriterException.cs"];
m23_3 [label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", span="58-58", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException(string)", file="JsonWriterException.cs"];
m23_12 [label="Entry Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", span="99-99", cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JsonWriterException.cs"];
m23_13 [label="message = JsonPosition.FormatMessage(null, path, message)", span="101-101", cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JsonWriterException.cs"];
m23_14 [label="return new JsonWriterException(message, ex, path);", span="103-103", cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", color=red, community=0, file="JsonWriterException.cs"];
m23_15 [label="Exit Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", span="99-99", cluster="Newtonsoft.Json.JsonWriterException.Create(string, string, System.Exception)", file="JsonWriterException.cs"];
m23_16 [label="Entry Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", span="139-139", cluster="Newtonsoft.Json.JsonPosition.FormatMessage(Newtonsoft.Json.IJsonLineInfo, string, string)", file="JsonWriterException.cs"];
m23_0 [label="Entry Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="49-49", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JsonWriterException.cs"];
m23_1 [label="Exit Newtonsoft.Json.JsonWriterException.JsonWriterException()", span="49-49", cluster="Newtonsoft.Json.JsonWriterException.JsonWriterException()", file="JsonWriterException.cs"];
m23_17 [label="Newtonsoft.Json.JsonWriterException", span="", file="JsonWriterException.cs"];
m24_12 [label="Entry Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", span="56-56", cluster="Newtonsoft.Json.Schema.JsonSchemaResolver.JsonSchemaResolver()", file="ReadTests.cs"];
m24_15 [label="Entry Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", span="57-57", cluster="Newtonsoft.Json.Linq.JToken.IsValid(Newtonsoft.Json.Schema.JsonSchema)", file="ReadTests.cs"];
m24_14 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="ReadTests.cs"];
m24_16 [label="Entry System.Console.WriteLine(bool)", span="0-0", cluster="System.Console.WriteLine(bool)", file="ReadTests.cs"];
m24_13 [label="Entry Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", span="305-305", cluster="Newtonsoft.Json.Schema.JsonSchema.Parse(string, Newtonsoft.Json.Schema.JsonSchemaResolver)", file="ReadTests.cs"];
m24_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_1 [label="string schemaJson", span="40-40", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_2 [label="JsonSchemaResolver resolver = new JsonSchemaResolver()", span="41-41", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_3 [label="schemaJson = @''{\r\n              'id': 'person',\r\n              'type': 'object',\r\n              'properties': {\r\n                'name': {'type':'string'},\r\n                'age': {'type':'integer'}\r\n              }\r\n            }''", span="43-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_4 [label="JsonSchema personSchema = JsonSchema.Parse(schemaJson, resolver)", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_6 [label="JsonSchema employeeSchema = JsonSchema.Parse(schemaJson, resolver)", span="64-64", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_5 [label="schemaJson = @''{\r\n              'id': 'employee',\r\n              'type': 'object',\r\n              'extends': {'$ref':'person'},\r\n              'properties': {\r\n                'salary': {'type':'number'},\r\n                'jobTitle': {'type':'string'}\r\n              }\r\n            }''", span="54-62", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_7 [label="string json = @''{\r\n              'name': 'James',\r\n              'age': 29,\r\n              'salary': 9000.01,\r\n              'jobTitle': 'Junior Vice President'\r\n            }''", span="66-71", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_9 [label="bool valid = employee.IsValid(employeeSchema)", span="75-75", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_8 [label="JObject employee = JObject.Parse(json)", span="73-73", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_10 [label="Console.WriteLine(valid)", span="77-77", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m24_11 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", span="37-37", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Schema.RefJsonSchemaResolver.Example()", file="ReadTests.cs"];
m25_6 [label="return getter(target);", span="60-60", cluster="Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)", file="ReflectionObject.cs"];
m25_13 [label="Entry Unk.setter", span="", cluster="Unk.setter", file="ReflectionObject.cs"];
m25_17 [label="Entry Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", file="ReflectionObject.cs"];
m25_18 [label="return Create(t, null, memberNames);", span="76-76", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", file="ReflectionObject.cs"];
m25_19 [label="Exit Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, params string[])", file="ReflectionObject.cs"];
m25_67 [label="Entry Newtonsoft.Json.Utilities.ReflectionMember.ReflectionMember()", span="40-40", cluster="Newtonsoft.Json.Utilities.ReflectionMember.ReflectionMember()", file="ReflectionObject.cs"];
m25_0 [label="Entry Newtonsoft.Json.Utilities.ReflectionObject.ReflectionObject()", span="52-52", cluster="Newtonsoft.Json.Utilities.ReflectionObject.ReflectionObject()", file="ReflectionObject.cs"];
m25_1 [label="Members = new Dictionary<string, ReflectionMember>()", span="54-54", cluster="Newtonsoft.Json.Utilities.ReflectionObject.ReflectionObject()", color=green, community=0, file="ReflectionObject.cs"];
m25_2 [label="Exit Newtonsoft.Json.Utilities.ReflectionObject.ReflectionObject()", span="52-52", cluster="Newtonsoft.Json.Utilities.ReflectionObject.ReflectionObject()", file="ReflectionObject.cs"];
m25_3 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ReflectionObject.cs"];
m25_4 [label="Entry Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)", span="57-57", cluster="Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)", file="ReflectionObject.cs"];
m25_5 [label="Func<object, object> getter = Members[member].Getter", span="59-59", cluster="Newtonsoft.Json.Utilities.ReflectionObject.GetValue(object, string)", file="ReflectionObject.cs"];
m25_68 [label="Entry System.Reflection.MemberInfo.MemberType()", span="107-107", cluster="System.Reflection.MemberInfo.MemberType()", file="ReflectionObject.cs"];
m25_71 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="604-604", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="ReflectionObject.cs"];
m25_62 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="74-74", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="ReflectionObject.cs"];
m25_69 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="562-562", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="ReflectionObject.cs"];
m25_8 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ReflectionObject.cs"];
m25_84 [label="Entry Unk.call", span="", cluster="Unk.call", file="ReflectionObject.cs"];
m25_7 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="ReflectionObject.cs"];
m25_9 [label="Entry Newtonsoft.Json.Utilities.ReflectionObject.SetValue(object, string, object)", span="63-63", cluster="Newtonsoft.Json.Utilities.ReflectionObject.SetValue(object, string, object)", file="ReflectionObject.cs"];
m25_10 [label="Action<object, object> setter = Members[member].Setter", span="65-65", cluster="Newtonsoft.Json.Utilities.ReflectionObject.SetValue(object, string, object)", file="ReflectionObject.cs"];
m25_11 [label="setter(target, value)", span="66-66", cluster="Newtonsoft.Json.Utilities.ReflectionObject.SetValue(object, string, object)", file="ReflectionObject.cs"];
m25_12 [label="Exit Newtonsoft.Json.Utilities.ReflectionObject.SetValue(object, string, object)", span="63-63", cluster="Newtonsoft.Json.Utilities.ReflectionObject.SetValue(object, string, object)", file="ReflectionObject.cs"];
m25_64 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="ReflectionObject.cs"];
m25_80 [label="Entry Unk.ctor", span="", cluster="Unk.ctor", file="ReflectionObject.cs"];
m25_73 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="ReflectionObject.cs"];
m25_20 [label="Entry Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", span="79-79", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_21 [label="ReflectionObject d = new ReflectionObject()", span="81-81", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", color=red, community=0, file="ReflectionObject.cs"];
m25_23 [label="creator != null", span="85-85", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_24 [label="d.Creator = delegateFactory.CreateParameterizedConstructor(creator)", span="87-87", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", color=red, community=0, file="ReflectionObject.cs"];
m25_25 [label="ReflectionUtils.HasDefaultConstructor(t, false)", span="91-91", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_26 [label="Func<object> ctor = delegateFactory.CreateDefaultConstructor<object>(t)", span="93-93", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_28 [label=memberNames, span="99-99", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_29 [label="MemberInfo[] members = t.GetMember(memberName, BindingFlags.Instance | BindingFlags.Public)", span="101-101", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_22 [label="ReflectionDelegateFactory delegateFactory = JsonTypeReflector.ReflectionDelegateFactory", span="83-83", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_27 [label="d.Creator = args => ctor()", span="95-95", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", color=red, community=0, file="ReflectionObject.cs"];
m25_57 [label="d.Members[memberName] = reflectionMember", span="158-158", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_58 [label="return d;", span="161-161", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_38 [label="reflectionMember.Getter = delegateFactory.CreateGet<object>(member)", span="117-117", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_40 [label="reflectionMember.Setter = delegateFactory.CreateSet<object>(member)", span="122-122", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_46 [label="MethodCall<object, object> call = delegateFactory.CreateMethodCall<object>(method)", span="132-132", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_49 [label="MethodCall<object, object> call = delegateFactory.CreateMethodCall<object>(method)", span="137-137", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_53 [label="reflectionMember.Getter = delegateFactory.CreateGet<object>(member)", span="148-148", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_55 [label="reflectionMember.Setter = delegateFactory.CreateSet<object>(member)", span="153-153", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_31 [label="throw new ArgumentException(''Expected a single member with the name '{0}'.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="104-104", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_30 [label="members.Length != 1", span="102-102", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_32 [label="MemberInfo member = members.Single()", span="107-107", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_33 [label="ReflectionMember reflectionMember = new ReflectionMember()", span="109-109", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_34 [label="member.MemberType()", span="111-111", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_37 [label="ReflectionUtils.CanReadMemberValue(member, false)", span="115-115", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_39 [label="ReflectionUtils.CanSetMemberValue(member, false, false)", span="120-120", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_42 [label="MethodInfo method = (MethodInfo)member", span="126-126", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_51 [label="throw new ArgumentException(''Unexpected member type '{0}' for member '{1}'.''.FormatWith(CultureInfo.InvariantCulture, member.MemberType(), member.Name));", span="143-143", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_52 [label="ReflectionUtils.CanReadMemberValue(member, false)", span="146-146", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_54 [label="ReflectionUtils.CanSetMemberValue(member, false, false)", span="151-151", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_56 [label="reflectionMember.MemberType = ReflectionUtils.GetMemberUnderlyingType(member)", span="156-156", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_47 [label="reflectionMember.Getter = target => call(target)", span="133-133", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_50 [label="reflectionMember.Setter = (target, arg) => call(target, arg)", span="138-138", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_35 [label="MemberTypes.Field", span="113-113", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_41 [label="MemberTypes.Method", span="125-125", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_36 [label="MemberTypes.Property", span="114-114", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_43 [label="method.IsPublic", span="127-127", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_44 [label="ParameterInfo[] parameters = method.GetParameters()", span="129-129", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_45 [label="parameters.Length == 0 && method.ReturnType != typeof(void)", span="130-130", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_48 [label="parameters.Length == 1 && method.ReturnType == typeof(void)", span="135-135", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_59 [label="Exit Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", span="79-79", cluster="Newtonsoft.Json.Utilities.ReflectionObject.Create(System.Type, System.Reflection.MethodBase, params string[])", file="ReflectionObject.cs"];
m25_63 [label="Entry System.Type.GetMember(string, System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetMember(string, System.Reflection.BindingFlags)", file="ReflectionObject.cs"];
m25_14 [label="Entry Newtonsoft.Json.Utilities.ReflectionObject.GetType(string)", span="69-69", cluster="Newtonsoft.Json.Utilities.ReflectionObject.GetType(string)", file="ReflectionObject.cs"];
m25_15 [label="return Members[member].MemberType;", span="71-71", cluster="Newtonsoft.Json.Utilities.ReflectionObject.GetType(string)", file="ReflectionObject.cs"];
m25_16 [label="Exit Newtonsoft.Json.Utilities.ReflectionObject.GetType(string)", span="69-69", cluster="Newtonsoft.Json.Utilities.ReflectionObject.GetType(string)", file="ReflectionObject.cs"];
m25_60 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", span="73-73", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateParameterizedConstructor(System.Reflection.MethodBase)", file="ReflectionObject.cs"];
m25_74 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="72-72", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="ReflectionObject.cs"];
m25_76 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="445-445", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="ReflectionObject.cs"];
m25_72 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="55-55", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="ReflectionObject.cs"];
m25_85 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="ReflectionObject.cs"];
m25_78 [label="ctor()", span="95-95", cluster="lambda expression", color=red, community=0, file="ReflectionObject.cs"];
m25_82 [label="call(target)", span="133-133", cluster="lambda expression", file="ReflectionObject.cs"];
m25_86 [label="call(target, arg)", span="138-138", cluster="lambda expression", file="ReflectionObject.cs"];
m25_77 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="ReflectionObject.cs"];
m25_79 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="ReflectionObject.cs"];
m25_81 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="ReflectionObject.cs"];
m25_83 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="ReflectionObject.cs"];
m25_87 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="ReflectionObject.cs"];
m25_70 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="38-38", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="ReflectionObject.cs"];
m25_75 [label="Entry string.FormatWith(System.IFormatProvider, object, object)", span="52-52", cluster="string.FormatWith(System.IFormatProvider, object, object)", file="ReflectionObject.cs"];
m25_66 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="532-532", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="ReflectionObject.cs"];
m25_61 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="227-227", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="ReflectionObject.cs"];
m25_65 [label="Entry string.FormatWith(System.IFormatProvider, object)", span="47-47", cluster="string.FormatWith(System.IFormatProvider, object)", file="ReflectionObject.cs"];
m25_88 [label="Newtonsoft.Json.Utilities.ReflectionObject", span="", file="ReflectionObject.cs"];
m25_89 [label=ctor, span="", file="ReflectionObject.cs"];
m25_90 [label=call, span="", file="ReflectionObject.cs"];
m25_91 [label=call, span="", file="ReflectionObject.cs"];
m26_15 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="83-83", cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="TestFixtureBase.cs"];
m26_20 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", span="270-270", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(int)", file="TestFixtureBase.cs"];
m26_25 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="TestFixtureBase.cs"];
m26_23 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="TestFixtureBase.cs"];
m26_16 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="105-105", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="TestFixtureBase.cs"];
m26_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", span="38-38", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_1 [label="JTokenWriter writer = new JTokenWriter()", span="41-41", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_2 [label="writer.WriteStartObject()", span="42-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_3 [label="writer.WritePropertyName(''name1'')", span="43-43", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_4 [label="writer.WriteValue(''value1'')", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_5 [label="writer.WritePropertyName(''name2'')", span="45-45", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_6 [label="writer.WriteStartArray()", span="46-46", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_7 [label="writer.WriteValue(1)", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs", color=green, community=0];
m26_8 [label="writer.WriteValue(2)", span="48-48", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_9 [label="writer.WriteEndArray()", span="49-49", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_10 [label="writer.WriteEndObject()", span="50-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_11 [label="JObject o = (JObject)writer.Token", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_12 [label="Console.WriteLine(o.ToString())", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_13 [label="Assert.AreEqual(@''{\r\n  ''''name1'''': ''''value1'''',\r\n  ''''name2'''': [\r\n    1,\r\n    2\r\n  ]\r\n}'', o.ToString())", span="64-70", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_14 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", span="38-38", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonJTokenWriter.Example()", file="TestFixtureBase.cs"];
m26_17 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", span="166-166", cluster="Newtonsoft.Json.Linq.JTokenWriter.WritePropertyName(string)", file="TestFixtureBase.cs"];
m26_18 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", span="260-260", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteValue(string)", file="TestFixtureBase.cs"];
m26_21 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="TestFixtureBase.cs"];
m26_24 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="TestFixtureBase.cs"];
m26_19 [label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", span="135-135", cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartArray()", file="TestFixtureBase.cs"];
m26_22 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="TestFixtureBase.cs"];
m27_325 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="TypeNameHandlingTests.cs"];
m27_223 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="TypeNameHandlingTests.cs"];
m27_391 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", span="829-829", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", file="TypeNameHandlingTests.cs"];
m27_392 [label="this.RootSomethingElse = new RootSomethingElse()", span="831-831", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", file="TypeNameHandlingTests.cs"];
m27_393 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", span="829-829", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.Something()", file="TypeNameHandlingTests.cs"];
m27_52 [label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="TypeNameHandlingTests.cs"];
m27_311 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="TypeNameHandlingTests.cs"];
m27_191 [label="Entry Unk.IsNull", span="", cluster="Unk.IsNull", file="TypeNameHandlingTests.cs"];
m27_95 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", span="367-367", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="TypeNameHandlingTests.cs"];
m27_98 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''George Michael Bluth'''',\r\n  ''''Age'''': 16,\r\n  ''''Title'''': ''''Mister Manager''''\r\n}'', json)", span="379-383", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="TypeNameHandlingTests.cs"];
m27_97 [label="string json = JsonConvert.SerializeObject(person, Formatting.Indented)", span="377-377", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="TypeNameHandlingTests.cs"];
m27_96 [label="PersonError person = new PersonError\r\n            {\r\n                Name = ''George Michael Bluth'',\r\n                Age = 16,\r\n                Roles = null,\r\n                Title = ''Mister Manager''\r\n            }", span="369-375", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="TypeNameHandlingTests.cs"];
m27_99 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", span="367-367", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializePerson()", file="TypeNameHandlingTests.cs"];
m27_115 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="775-775", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="TypeNameHandlingTests.cs"];
m27_151 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_157 [label="Assert.AreEqual(2, errors.Count)", span="475-475", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_158 [label="Assert.AreEqual(''[0][0] - 0 - Could not convert string to integer: a. Path '[0][0]', line 1, position 5.'', errors[0])", span="476-476", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_159 [label="Assert.AreEqual(''[1][0] - 0 - Could not convert string to integer: b. Path '[1][0]', line 1, position 16.'', errors[1])", span="477-477", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_153 [label="List<string> errors = new List<string>()", span="464-464", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_156 [label="serializer.Deserialize(new JsonTextReader(new StringReader(json)), typeof(int[,]))", span="473-473", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_152 [label="string json = ''[[\''a\'',\''45\''],[\''b\'',34]]''", span="462-462", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_154 [label="JsonSerializer serializer = new JsonSerializer()", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_155 [label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n            {\r\n                errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="467-471", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_160 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", span="460-460", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingMultidimensionalArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_70 [label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="522-522", cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m27_12 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="TypeNameHandlingTests.cs"];
m27_29 [label="Entry Newtonsoft.Json.Tests.TestObjects.ListErrorObject.ListErrorObject()", span="29-29", cluster="Newtonsoft.Json.Tests.TestObjects.ListErrorObject.ListErrorObject()", file="TypeNameHandlingTests.cs"];
m27_310 [label="Entry System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.GroupBy<TSource, TKey>(System.Func<TSource, TKey>)", file="TypeNameHandlingTests.cs"];
m27_421 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElse()", span="839-839", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SomethingElse.SomethingElse()", file="TypeNameHandlingTests.cs"];
m27_301 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="TypeNameHandlingTests.cs"];
m27_307 [label="Assert.AreEqual(@''{''''Scott'''':[]}'', output)", span="720-720", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="TypeNameHandlingTests.cs"];
m27_306 [label="string output = JsonConvert.SerializeObject(dictionary, Formatting.None, settings)", span="719-719", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="TypeNameHandlingTests.cs"];
m27_302 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="708-708", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="TypeNameHandlingTests.cs"];
m27_305 [label="Dictionary<string, IEnumerable<IErrorPerson2>> dictionary = data.GroupBy(person => person.FirstName).ToDictionary(group => @group.Key, group => @group.Cast<IErrorPerson2>())", span="718-718", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="TypeNameHandlingTests.cs"];
m27_304 [label="var data = new List<ErrorPerson2>()\r\n            {\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hanselman'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hunter'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Guthrie'' },\r\n            }", span="711-716", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="TypeNameHandlingTests.cs"];
m27_303 [label="settings.Error += (obj, args) => { args.ErrorContext.Handled = true; }", span="709-709", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="TypeNameHandlingTests.cs"];
m27_308 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", span="706-706", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState()", file="TypeNameHandlingTests.cs"];
m27_24 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="TypeNameHandlingTests.cs"];
m27_26 [label="string json = JsonConvert.SerializeObject(c, new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n                Error = (s, e) =>\r\n                {\r\n                    if (e.CurrentObject.GetType().IsArray)\r\n                    {\r\n                        e.ErrorContext.Handled = true;\r\n                    }\r\n                }\r\n            })", span="164-174", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="TypeNameHandlingTests.cs"];
m27_25 [label="ListErrorObject[,,] c = new ListErrorObject[,,]\r\n            {\r\n                {\r\n                    {\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value1'',\r\n                            ThrowError = ''Handle this!'',\r\n                            Member2 = ''Member1''\r\n                        },\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value2'',\r\n                            Member2 = ''Member2''\r\n                        },\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value3'',\r\n                            ThrowError = ''Handle that!'',\r\n                            Member2 = ''Member3''\r\n                        }\r\n                    },\r\n                    {\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value1'',\r\n                            ThrowError = ''Handle this!'',\r\n                            Member2 = ''Member1''\r\n                        },\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value2'',\r\n                            Member2 = ''Member2''\r\n                        },\r\n                        new ListErrorObject\r\n                        {\r\n                            Member = ''Value3'',\r\n                            ThrowError = ''Handle that!'',\r\n                            Member2 = ''Member3''\r\n                        }\r\n                    }\r\n                }\r\n            }", span="120-162", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="TypeNameHandlingTests.cs"];
m27_27 [label="StringAssert.AreEqual(@''[\r\n  [\r\n    [\r\n      {\r\n        ''''Member'''': ''''Value1'''',\r\n        ''''ThrowError'''': ''''Handle this!'''',\r\n        ''''Member2'''': ''''Member1''''\r\n      },\r\n      {\r\n        ''''Member'''': ''''Value2''''\r\n      },\r\n      {\r\n        ''''Member'''': ''''Value3'''',\r\n        ''''ThrowError'''': ''''Handle that!'''',\r\n        ''''Member2'''': ''''Member3''''\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        ''''Member'''': ''''Value1'''',\r\n        ''''ThrowError'''': ''''Handle this!'''',\r\n        ''''Member2'''': ''''Member1''''\r\n      },\r\n      {\r\n        ''''Member'''': ''''Value2''''\r\n      },\r\n      {\r\n        ''''Member'''': ''''Value3'''',\r\n        ''''ThrowError'''': ''''Handle that!'''',\r\n        ''''Member2'''': ''''Member3''''\r\n      }\r\n    ]\r\n  ]\r\n]'', json)", span="176-209", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="TypeNameHandlingTests.cs"];
m27_28 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", span="118-118", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorIn3DArray()", file="TypeNameHandlingTests.cs"];
m27_190 [label="Entry Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", file="TypeNameHandlingTests.cs"];
m27_442 [label="Exit Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", span="933-933", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.ThrowingReader()", file="TypeNameHandlingTests.cs"];
m27_462 [label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0", cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="TypeNameHandlingTests.cs"];
m27_362 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="TypeNameHandlingTests.cs"];
m27_366 [label="JsonTextReader jReader = new JsonTextReader(new StreamReader(stream))", span="763-763", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="TypeNameHandlingTests.cs"];
m27_367 [label="JsonSerializer s = new JsonSerializer()", span="764-764", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="TypeNameHandlingTests.cs"];
m27_365 [label="MemoryStream stream = new MemoryStream(byteArray)", span="762-762", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="TypeNameHandlingTests.cs"];
m27_368 [label="ExceptionAssert.Throws<JsonReaderException>(() => { ErrorTestObject obj = s.Deserialize<ErrorTestObject>(jReader); }, @''Unterminated string. Expected delimiter: ''''. Path '', line 1, position 3.'')", span="766-766", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="TypeNameHandlingTests.cs"];
m27_364 [label="byte[] byteArray = Encoding.UTF8.GetBytes(json)", span="761-761", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="TypeNameHandlingTests.cs"];
m27_363 [label="string json = ''{\''}''", span="760-760", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="TypeNameHandlingTests.cs"];
m27_369 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", span="758-758", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithAttribute()", file="TypeNameHandlingTests.cs"];
m27_131 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="799-799", cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="TypeNameHandlingTests.cs"];
m27_43 [label="Entry Newtonsoft.Json.Tests.TestObjects.ListErrorObjectCollection.ListErrorObjectCollection()", span="31-31", cluster="Newtonsoft.Json.Tests.TestObjects.ListErrorObjectCollection.ListErrorObjectCollection()", file="TypeNameHandlingTests.cs"];
m27_377 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_378 [label="var innerObject = serializer.Deserialize(reader, typeof(SomethingElse))", span="798-798", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_379 [label="return null;", span="800-800", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_381 [label="throw new Exception(''An error occurred.'', ex);", span="805-805", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_380 [label=Exception, span="802-802", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_382 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="792-792", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_461 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="TypeNameHandlingTests.cs"];
m27_30 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="397-397", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="TypeNameHandlingTests.cs"];
m27_346 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", span="744-744", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_350 [label="JsonTextReader jReader = new JsonTextReader(new StreamReader(stream))", span="749-749", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_353 [label="ErrorPerson2 obj = s.Deserialize<ErrorPerson2>(jReader)", span="752-752", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_354 [label="Assert.IsNull(obj)", span="754-754", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_351 [label="JsonSerializer s = new JsonSerializer()", span="750-750", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_349 [label="MemoryStream stream = new MemoryStream(byteArray)", span="748-748", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_352 [label="s.Error += (sender, args) => { args.ErrorContext.Handled = true; }", span="751-751", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_348 [label="byte[] byteArray = Encoding.UTF8.GetBytes(json)", span="747-747", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_347 [label="string json = ''{\''}''", span="746-746", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_355 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", span="744-744", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.NoObjectWithEvent()", file="TypeNameHandlingTests.cs"];
m27_435 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="TypeNameHandlingTests.cs"];
m27_437 [label="Assert.AreEqual(string.Empty, result)", span="912-912", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="TypeNameHandlingTests.cs"];
m27_436 [label="string result = JsonConvert.SerializeObject(new SomethingElse(), new JsonSerializerSettings\r\n            {\r\n                Error = (o, e) => { e.ErrorContext.Handled = true; }\r\n            })", span="907-910", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="TypeNameHandlingTests.cs"];
m27_438 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", span="905-905", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeRootConverter()", file="TypeNameHandlingTests.cs"];
m27_53 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="TypeNameHandlingTests.cs"];
m27_100 [label="Entry Newtonsoft.Json.Tests.TestObjects.PersonError.PersonError()", span="32-32", cluster="Newtonsoft.Json.Tests.TestObjects.PersonError.PersonError()", file="TypeNameHandlingTests.cs"];
m27_443 [label="Entry Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", span="937-937", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_447 [label="charsRead = new StringReader(''['').Read(temp, index, count)", span="943-943", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_450 [label="charsRead = new StringReader('','').Read(temp, index, count)", span="950-950", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_452 [label="charsRead = new StringReader(element).Read(temp, index, count)", span="955-955", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_444 [label="char[] temp = new char[buffer.Length]", span="939-939", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_446 [label=_firstRead, span="941-941", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_448 [label="_firstRead = false", span="944-944", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_454 [label="_position += charsRead", span="960-960", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_457 [label="Array.Copy(temp, index, buffer, index, charsRead)", span="965-965", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_458 [label="return charsRead;", span="966-966", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_449 [label=_readComma, span="948-948", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_451 [label="_readComma = false", span="951-951", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_453 [label="_readComma = true", span="956-956", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_445 [label="int charsRead = 0", span="940-940", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_455 [label="_position > 65536", span="961-961", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_456 [label="throw new Exception(''too far'');", span="963-963", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_459 [label="Exit Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", span="937-937", cluster="Newtonsoft.Json.Tests.Serialization.ThrowingReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_205 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="848-848", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m27_414 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_415 [label="var serialiser = JsonSerializer.Create(new JsonSerializerSettings() { })", span="874-874", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_416 [label="Something s = new Something\r\n            {\r\n                RootSomethingElse = new RootSomethingElse\r\n                {\r\n                    SomethingElse = new SomethingElse()\r\n                }\r\n            }", span="876-882", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_419 [label="ExceptionAssert.Throws<Exception>(() => { serialiser.Serialize(writer, r); }, ''An error occurred.'')", span="890-890", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_417 [label="RootThing r = new RootThing\r\n            {\r\n                Something = s\r\n            }", span="883-886", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_418 [label="var writer = new System.IO.StringWriter()", span="888-888", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_420 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", span="872-872", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_244 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", span="606-606", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_255 [label="Assert.AreEqual(3, errors.Count)", span="633-633", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_256 [label="Assert.AreEqual(@''Unterminated string. Expected delimiter: ''''. Path 'events[1].code', line 1, position 45.'', errors[0])", span="634-634", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_257 [label="Assert.AreEqual(@''Unexpected end when deserializing array. Path 'events[1].code', line 1, position 45.'', errors[1])", span="635-635", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_258 [label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'events[1].code', line 1, position 45.'', errors[2])", span="636-636", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_253 [label="Assert.AreEqual(1, logMessage.Events.Count)", span="629-629", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_254 [label="Assert.AreEqual(''64411'', logMessage.Events[0].Code)", span="630-630", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_245 [label="IList<string> errors = new List<string>()", span="608-608", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_251 [label="LogMessage logMessage = jsonSerializer.Deserialize<LogMessage>(jsonTextReader)", span="626-626", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_252 [label="Assert.IsNotNull(logMessage.Events)", span="628-628", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_246 [label="string input = ''{\''events\'':[{\''code\'':64411},{\''code\'':64411,\''prio''", span="610-610", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_250 [label="jsonSerializer.Error += (sender, e) =>\r\n                {\r\n                    errors.Add(e.ErrorContext.Error.Message);\r\n                    e.ErrorContext.Handled = true;\r\n                }", span="620-624", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_248 [label="var jsonTextReader = new JsonTextReader(new StringReader(input)) { MaxDepth = maxDepth }", span="613-613", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_249 [label="JsonSerializer jsonSerializer = JsonSerializer.Create(new JsonSerializerSettings\r\n                {\r\n                    MaxDepth = maxDepth,\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n                })", span="615-619", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_247 [label="int maxDepth = 256", span="612-612", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_259 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", span="606-606", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContent()", file="TypeNameHandlingTests.cs"];
m27_10 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="TypeNameHandlingTests.cs"];
m27_73 [label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="787-787", cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="TypeNameHandlingTests.cs"];
m27_196 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", span="525-525", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="TypeNameHandlingTests.cs"];
m27_200 [label="Assert.AreEqual(1, errors.Count)", span="543-543", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="TypeNameHandlingTests.cs"];
m27_201 [label="Assert.AreEqual(''Unexpected character encountered while parsing value: x. Path '[0]', line 1, position 4.'', errors[0])", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="TypeNameHandlingTests.cs"];
m27_202 [label="Assert.AreEqual(1, ((int[])o).Length)", span="546-546", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="TypeNameHandlingTests.cs"];
m27_203 [label="Assert.AreEqual(0, ((int[])o)[0])", span="547-547", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="TypeNameHandlingTests.cs"];
m27_197 [label="IList<string> errors = new List<string>()", span="527-527", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="TypeNameHandlingTests.cs"];
m27_199 [label="Assert.IsNotNull(o)", span="541-541", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="TypeNameHandlingTests.cs"];
m27_198 [label="object o = JsonConvert.DeserializeObject(\r\n                ''[0,x]'',\r\n                typeof(int[]),\r\n                new JsonSerializerSettings\r\n                {\r\n                    Error = (sender, arg) =>\r\n                    {\r\n                        errors.Add(arg.ErrorContext.Error.Message);\r\n                        arg.ErrorContext.Handled = true;\r\n                    }\r\n                })", span="529-539", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="TypeNameHandlingTests.cs"];
m27_204 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", span="525-525", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling()", file="TypeNameHandlingTests.cs"];
m27_165 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", span="481-481", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="TypeNameHandlingTests.cs"];
m27_171 [label="Assert.AreEqual(1, errors.Count)", span="494-494", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="TypeNameHandlingTests.cs"];
m27_172 [label="Assert.AreEqual(''A.A.A'', errors[0])", span="495-495", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="TypeNameHandlingTests.cs"];
m27_170 [label="serializer.Deserialize<Nest>(new JsonTextReader(new StringReader(json)) { MaxDepth = 3 })", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="TypeNameHandlingTests.cs"];
m27_168 [label="IList<string> errors = new List<string>()", span="485-485", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="TypeNameHandlingTests.cs"];
m27_166 [label="string json = ''{'A':{'A':{'A':{'A':{'A':{}}}}}}''", span="483-483", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="TypeNameHandlingTests.cs"];
m27_167 [label="JsonSerializer serializer = new JsonSerializer() { }", span="484-484", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="TypeNameHandlingTests.cs"];
m27_169 [label="serializer.Error += (sender, e) =>\r\n            {\r\n                e.ErrorContext.Handled = true;\r\n                errors.Add(e.ErrorContext.Path);\r\n            }", span="486-490", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="TypeNameHandlingTests.cs"];
m27_173 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", span="481-481", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingAndAvoidingRecursiveDepthError()", file="TypeNameHandlingTests.cs"];
m27_427 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="948-948", cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="TypeNameHandlingTests.cs"];
m27_71 [label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="78-78", cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="TypeNameHandlingTests.cs"];
m27_120 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_128 [label="Assert.IsTrue(errors[0].StartsWith('' - Required1 - Required property 'Required1' not found in JSON. Path '', line 1, position 2.''))", span="434-434", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_129 [label="Assert.IsTrue(errors[1].StartsWith('' - Required2 - Required property 'Required2' not found in JSON. Path '', line 1, position 2.''))", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_127 [label="Assert.AreEqual(2, errors.Count)", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_122 [label="List<string> errors = new List<string>()", span="423-423", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_126 [label="serializer.Deserialize(new JsonTextReader(new StringReader(json)), typeof(MyTypeWithRequiredMembers))", span="431-431", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_121 [label="string json = ''{}''", span="422-422", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_123 [label="JsonSerializer serializer = new JsonSerializer()", span="424-424", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_125 [label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n            {\r\n                errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="426-430", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_124 [label="serializer.MetadataPropertyHandling = MetadataPropertyHandling.Default", span="425-425", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_130 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", span="420-420", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.MultipleRequiredPropertyErrors()", file="TypeNameHandlingTests.cs"];
m27_91 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="817-817", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m27_132 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="TypeNameHandlingTests.cs"];
m27_211 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_217 [label="Assert.AreEqual(1, errors.Count)", span="569-569", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_218 [label="Assert.AreEqual(''Error reading integer. Unexpected token: Boolean. Path '[1]'.'', errors[0])", span="570-570", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_219 [label="Assert.AreEqual(1, ((int[])o).Length)", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_220 [label="Assert.AreEqual(0, ((int[])o)[0])", span="573-573", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_212 [label="IList<string> errors = new List<string>()", span="553-553", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_216 [label="Assert.IsNotNull(o)", span="567-567", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_215 [label="object o = serializer.Deserialize(reader, typeof(int[]))", span="565-565", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_213 [label="JTokenReader reader = new JTokenReader(new JArray(0, true))", span="555-555", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_214 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Error = (sender, arg) =>\r\n                {\r\n                    errors.Add(arg.ErrorContext.Error.Message);\r\n                    arg.ErrorContext.Handled = true;\r\n                }\r\n            })", span="557-564", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_221 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", span="551-551", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandling_JTokenReader()", file="TypeNameHandlingTests.cs"];
m27_31 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="585-585", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m27_312 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="621-621", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="TypeNameHandlingTests.cs"];
m27_390 [label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="991-991", cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="TypeNameHandlingTests.cs"];
m27_45 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="TypeNameHandlingTests.cs"];
m27_47 [label="Assert.AreEqual(3, c.Count)", span="269-269", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="TypeNameHandlingTests.cs"];
m27_48 [label="Assert.AreEqual(new DateTime(2009, 9, 9, 0, 0, 0, DateTimeKind.Utc), c[0])", span="270-270", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="TypeNameHandlingTests.cs"];
m27_49 [label="Assert.AreEqual(new DateTime(1977, 2, 20, 0, 0, 0, DateTimeKind.Utc), c[1])", span="271-271", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="TypeNameHandlingTests.cs"];
m27_50 [label="Assert.AreEqual(new DateTime(2000, 12, 1, 0, 0, 0, DateTimeKind.Utc), c[2])", span="272-272", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="TypeNameHandlingTests.cs"];
m27_46 [label="DateTimeErrorObjectCollection c = JsonConvert.DeserializeObject<DateTimeErrorObjectCollection>(@''[\r\n  ''''2009-09-09T00:00:00Z'''',\r\n  ''''kjhkjhkjhkjh'''',\r\n  [\r\n    1\r\n  ],\r\n  ''''1977-02-20T00:00:00Z'''',\r\n  null,\r\n  ''''2000-12-01T00:00:00Z''''\r\n]'', new IsoDateTimeConverter())", span="258-267", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="TypeNameHandlingTests.cs"];
m27_51 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", span="256-256", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollection()", file="TypeNameHandlingTests.cs"];
m27_16 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", span="85-85", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_17 [label="ListErrorObjectCollection c = JsonConvert.DeserializeObject<ListErrorObjectCollection>(@''[\r\n  {\r\n    ''''Member'''': ''''Value1'''',\r\n    ''''Member2'''': null\r\n  },\r\n  {\r\n    ''''Member'''': ''''Value2''''\r\n  },\r\n  {\r\n    ''''ThrowError'''': ''''Value'''',\r\n    ''''Object'''': {\r\n      ''''Array'''': [\r\n        1,\r\n        2\r\n      ]\r\n    }\r\n  },\r\n  {\r\n    ''''ThrowError'''': ''''Handle this!'''',\r\n    ''''Member'''': ''''Value3''''\r\n  }\r\n]'')", span="87-108", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", color=green, community=0, file="TypeNameHandlingTests.cs"];
m27_18 [label="Assert.AreEqual(3, c.Count)", span="110-110", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_19 [label="Assert.AreEqual(''Value1'', c[0].Member)", span="111-111", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_20 [label="Assert.AreEqual(''Value2'', c[1].Member)", span="112-112", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_21 [label="Assert.AreEqual(''Value3'', c[2].Member)", span="113-113", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_22 [label="Assert.AreEqual(''Handle this!'', c[2].ThrowError)", span="114-114", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_23 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", span="85-85", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_114 [label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="478-478", cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="TypeNameHandlingTests.cs"];
m27_78 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="TypeNameHandlingTests.cs"];
m27_82 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="TypeNameHandlingTests.cs"];
m27_85 [label="Assert.AreEqual(3, c.Count)", span="358-358", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="TypeNameHandlingTests.cs"];
m27_86 [label="Assert.AreEqual(new DateTime(2009, 9, 9, 0, 0, 0, DateTimeKind.Utc), c[0])", span="359-359", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="TypeNameHandlingTests.cs"];
m27_87 [label="Assert.AreEqual(new DateTime(1977, 2, 20, 0, 0, 0, DateTimeKind.Utc), c[1])", span="360-360", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="TypeNameHandlingTests.cs"];
m27_88 [label="Assert.AreEqual(new DateTime(2000, 12, 1, 0, 0, 0, DateTimeKind.Utc), c[2])", span="361-361", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="TypeNameHandlingTests.cs"];
m27_89 [label="Assert.AreEqual(false, eventErrorHandlerCalled)", span="363-363", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="TypeNameHandlingTests.cs"];
m27_84 [label="DateTimeErrorObjectCollection c = JsonConvert.DeserializeObject<DateTimeErrorObjectCollection>(\r\n                @''[\r\n  ''''2009-09-09T00:00:00Z'''',\r\n  ''''kjhkjhkjhkjh'''',\r\n  [\r\n    1\r\n  ],\r\n  ''''1977-02-20T00:00:00Z'''',\r\n  null,\r\n  ''''2000-12-01T00:00:00Z''''\r\n]'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    Error = (s, a) => eventErrorHandlerCalled = true,\r\n                    Converters =\r\n                    {\r\n                        new IsoDateTimeConverter()\r\n                    }\r\n                })", span="338-356", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="TypeNameHandlingTests.cs"];
m27_83 [label="bool eventErrorHandlerCalled = false", span="336-336", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="TypeNameHandlingTests.cs"];
m27_90 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", span="334-334", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorInDateTimeCollectionWithAttributeWithEventNotCalled()", file="TypeNameHandlingTests.cs"];
m27_9 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="TypeNameHandlingTests.cs"];
m27_405 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_408 [label="var reader = new System.IO.StringReader(foo)", span="866-866", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_406 [label="var serialiser = JsonSerializer.Create(new JsonSerializerSettings() { })", span="863-863", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_407 [label="string foo = ''{ something: { rootSomethingElse { somethingElse: 0 } } }''", span="865-865", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_409 [label="ExceptionAssert.Throws<Exception>(() => { serialiser.Deserialize(reader, typeof(Something)); }, ''An error occurred.'')", span="868-868", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_410 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", span="861-861", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeWrappingErrorsAndErrorHandling()", file="TypeNameHandlingTests.cs"];
m27_101 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_111 [label="Assert.AreEqual(1, errors.Count)", span="415-415", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_112 [label="Assert.AreEqual(@''[0][0] - 0 - Could not convert string to DateTime: kjhkjhkjhkjh. Path '[0][0]', line 1, position 16.'', errors[0])", span="416-416", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_110 [label="Assert.AreEqual(@''Could not convert string to DateTime: kjhkjhkjhkjh. Path '[0][0]', line 1, position 16.'', e.Message)", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_102 [label="List<string> errors = new List<string>()", span="389-389", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_107 [label="serializer.Deserialize(new StringReader(json), typeof(List<List<DateTime>>))", span="406-406", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_109 [label="e = ex", span="410-410", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_103 [label="string json = @''[[''''kjhkjhkjhkjh'''']]''", span="391-391", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_106 [label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n                {\r\n                    // only log an error once\r\n                    if (args.CurrentObject == args.ErrorContext.OriginalObject)\r\n                    {\r\n                        errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                    }\r\n                }", span="397-404", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_105 [label="JsonSerializer serializer = new JsonSerializer()", span="396-396", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_108 [label=Exception, span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_104 [label="Exception e = null", span="393-393", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_113 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", span="387-387", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeNestedUnhandled()", file="TypeNameHandlingTests.cs"];
m27_206 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="TypeNameHandlingTests.cs"];
m27_383 [label="Entry System.Exception.Exception(string, System.Exception)", span="0-0", cluster="System.Exception.Exception(string, System.Exception)", file="TypeNameHandlingTests.cs"];
m27_178 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TypeNameHandlingTests.cs"];
m27_32 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="340-340", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="TypeNameHandlingTests.cs"];
m27_359 [label="Entry lambda expression", span="751-751", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_14 [label="m == c.Messages[0]", span="81-81", cluster="lambda expression", color=green, community=0, file="TypeNameHandlingTests.cs"];
m27_13 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_15 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_79 [label="Entry lambda expression", span="326-326", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_93 [label="eventErrorHandlerCalled = true", span="351-351", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_75 [label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="284-284", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_80 [label="m == errors[0]", span="326-326", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_81 [label="Exit lambda expression", span="326-326", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_134 [label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="428-428", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_92 [label="Entry lambda expression", span="351-351", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_94 [label="Exit lambda expression", span="351-351", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_118 [label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="402-402", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_148 [label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="448-448", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_162 [label="errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message)", span="469-469", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_176 [label="errors.Add(e.ErrorContext.Path)", span="489-489", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_193 [label="errors.Add(e.ErrorContext.Error.Message)", span="511-511", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_208 [label="errors.Add(arg.ErrorContext.Error.Message)", span="536-536", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_209 [label="arg.ErrorContext.Handled = true", span="537-537", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_225 [label="errors.Add(arg.ErrorContext.Error.Message)", span="561-561", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_241 [label="errors.Add(arg.ErrorContext.Error.Message)", span="588-588", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_242 [label="arg.ErrorContext.Handled = true", span="589-589", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_261 [label="errors.Add(e.ErrorContext.Error.Message)", span="622-622", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_281 [label="errors.Add(e.ErrorContext.Error.Message)", span="652-652", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_298 [label="errors.Add(e.ErrorContext.Error.Message)", span="686-686", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_299 [label="e.ErrorContext.Handled = true", span="687-687", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_440 [label="e.ErrorContext.Handled = true", span="909-909", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_76 [label="args.ErrorContext.Handled = true", span="285-285", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_74 [label="Entry lambda expression", span="282-286", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_135 [label="args.ErrorContext.Handled = true", span="429-429", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_133 [label="Entry lambda expression", span="426-430", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_372 [label="ErrorTestObject obj = s.Deserialize<ErrorTestObject>(jReader)", span="766-766", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_117 [label="args.CurrentObject == args.ErrorContext.OriginalObject", span="400-400", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_116 [label="Entry lambda expression", span="397-404", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_119 [label="Exit lambda expression", span="397-404", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_412 [label="serialiser.Deserialize(reader, typeof(Something))", span="868-868", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_149 [label="args.ErrorContext.Handled = true", span="449-449", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_147 [label="Entry lambda expression", span="446-450", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_163 [label="args.ErrorContext.Handled = true", span="470-470", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_161 [label="Entry lambda expression", span="467-471", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_175 [label="e.ErrorContext.Handled = true", span="488-488", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_174 [label="Entry lambda expression", span="486-490", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_177 [label="Exit lambda expression", span="486-490", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_194 [label="e.ErrorContext.Handled = true", span="512-512", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_192 [label="Entry lambda expression", span="509-513", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_207 [label="Entry lambda expression", span="534-538", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_210 [label="Exit lambda expression", span="534-538", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_226 [label="arg.ErrorContext.Handled = true", span="562-562", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_224 [label="Entry lambda expression", span="559-563", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_240 [label="Entry lambda expression", span="586-590", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_243 [label="Exit lambda expression", span="586-590", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_262 [label="e.ErrorContext.Handled = true", span="623-623", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_260 [label="Entry lambda expression", span="620-624", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_282 [label="e.ErrorContext.Handled = true", span="653-653", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_280 [label="Entry lambda expression", span="650-654", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_297 [label="Entry lambda expression", span="684-688", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_300 [label="Exit lambda expression", span="684-688", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_316 [label="Entry lambda expression", span="718-718", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_319 [label="Entry lambda expression", span="718-718", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_322 [label="Entry lambda expression", span="718-718", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_337 [label="Entry lambda expression", span="737-737", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_340 [label="Entry lambda expression", span="737-737", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_343 [label="Entry lambda expression", span="737-737", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_439 [label="Entry lambda expression", span="909-909", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_441 [label="Exit lambda expression", span="909-909", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_77 [label="Exit lambda expression", span="282-286", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_136 [label="Exit lambda expression", span="426-430", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_371 [label="Entry lambda expression", span="766-766", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_373 [label="Exit lambda expression", span="766-766", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_34 [label="e.CurrentObject.GetType().IsArray", span="169-169", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_35 [label="e.ErrorContext.Handled = true", span="171-171", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_425 [label="serialiser.Serialize(writer, r)", span="890-890", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_433 [label="e.ErrorContext.Handled = true", span="898-898", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_411 [label="Entry lambda expression", span="868-868", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_413 [label="Exit lambda expression", span="868-868", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_150 [label="Exit lambda expression", span="446-450", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_164 [label="Exit lambda expression", span="467-471", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_195 [label="Exit lambda expression", span="509-513", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_227 [label="Exit lambda expression", span="559-563", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_263 [label="Exit lambda expression", span="620-624", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_283 [label="Exit lambda expression", span="650-654", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_314 [label="args.ErrorContext.Handled = true", span="709-709", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_318 [label="Exit lambda expression", span="718-718", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_317 [label="person.FirstName", span="718-718", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_321 [label="Exit lambda expression", span="718-718", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_320 [label="@group.Key", span="718-718", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_324 [label="Exit lambda expression", span="718-718", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_323 [label="@group.Cast<IErrorPerson2>()", span="718-718", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_335 [label="args.ErrorContext.Handled = true", span="727-727", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_339 [label="Exit lambda expression", span="737-737", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_338 [label="person.FirstName", span="737-737", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_342 [label="Exit lambda expression", span="737-737", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_341 [label="@group.Key", span="737-737", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_345 [label="Exit lambda expression", span="737-737", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_344 [label="@group.Cast<IErrorPerson2>()", span="737-737", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_360 [label="args.ErrorContext.Handled = true", span="751-751", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_33 [label="Entry lambda expression", span="167-173", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_36 [label="Exit lambda expression", span="167-173", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_424 [label="Entry lambda expression", span="890-890", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_426 [label="Exit lambda expression", span="890-890", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_432 [label="Entry lambda expression", span="898-898", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_434 [label="Exit lambda expression", span="898-898", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_313 [label="Entry lambda expression", span="709-709", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_315 [label="Exit lambda expression", span="709-709", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_334 [label="Entry lambda expression", span="727-727", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_336 [label="Exit lambda expression", span="727-727", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_361 [label="Exit lambda expression", span="751-751", cluster="lambda expression", file="TypeNameHandlingTests.cs"];
m27_37 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="TypeNameHandlingTests.cs"];
m27_460 [label="Entry System.IO.StringReader.Read(char[], int, int)", span="0-0", cluster="System.IO.StringReader.Read(char[], int, int)", file="TypeNameHandlingTests.cs"];
m27_422 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootThing.RootThing()", span="769-769", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootThing.RootThing()", file="TypeNameHandlingTests.cs"];
m27_264 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_276 [label="Assert.AreEqual(2, errors.Count)", span="664-664", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_277 [label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'events2.code', line 1, position 49.'', errors[0])", span="665-665", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_278 [label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'events2.code', line 1, position 49.'', errors[1])", span="666-666", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_273 [label="Assert.AreEqual(2, logEvents.Count)", span="659-659", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_274 [label="Assert.AreEqual(''64411'', logEvents[''events''].Code)", span="660-660", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_275 [label="Assert.AreEqual(''64412'', logEvents[''events2''].Code)", span="661-661", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_265 [label="IList<string> errors = new List<string>()", span="642-642", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_271 [label="IDictionary<string, LogEvent> logEvents = jsonSerializer.Deserialize<IDictionary<string, LogEvent>>(jsonTextReader)", span="656-656", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_272 [label="Assert.IsNotNull(logEvents)", span="658-658", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_266 [label="string input = ''{\''events\'':{\''code\'':64411},\''events2\'':{\''code\'':64412,''", span="644-644", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_270 [label="jsonSerializer.Error += (sender, e) =>\r\n                {\r\n                    errors.Add(e.ErrorContext.Error.Message);\r\n                    e.ErrorContext.Handled = true;\r\n                }", span="650-654", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_268 [label="var jsonTextReader = new JsonTextReader(new StringReader(input)) { MaxDepth = maxDepth }", span="647-647", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_269 [label="JsonSerializer jsonSerializer = JsonSerializer.Create(new JsonSerializerSettings { MaxDepth = maxDepth, MetadataPropertyHandling = MetadataPropertyHandling.Default })", span="649-649", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_267 [label="int maxDepth = 256", span="646-646", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_279 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", span="640-640", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDictionary()", file="TypeNameHandlingTests.cs"];
m27_72 [label="Entry System.IO.StringReader.StringReader(string)", span="0-0", cluster="System.IO.StringReader.StringReader(string)", file="TypeNameHandlingTests.cs"];
m27_38 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", span="213-213", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_39 [label="ListErrorObjectCollection c = new ListErrorObjectCollection\r\n            {\r\n                new ListErrorObject\r\n                {\r\n                    Member = ''Value1'',\r\n                    ThrowError = ''Handle this!'',\r\n                    Member2 = ''Member1''\r\n                },\r\n                new ListErrorObject\r\n                {\r\n                    Member = ''Value2'',\r\n                    Member2 = ''Member2''\r\n                },\r\n                new ListErrorObject\r\n                {\r\n                    Member = ''Value3'',\r\n                    ThrowError = ''Handle that!'',\r\n                    Member2 = ''Member3''\r\n                }\r\n            }", span="215-234", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_41 [label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Member'''': ''''Value1'''',\r\n    ''''ThrowError'''': ''''Handle this!'''',\r\n    ''''Member2'''': ''''Member1''''\r\n  },\r\n  {\r\n    ''''Member'''': ''''Value2''''\r\n  },\r\n  {\r\n    ''''Member'''': ''''Value3'''',\r\n    ''''ThrowError'''': ''''Handle that!'''',\r\n    ''''Member2'''': ''''Member3''''\r\n  }\r\n]'', json)", span="238-252", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_40 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="236-236", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_42 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", span="213-213", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.SerializingErrorInChildObject()", file="TypeNameHandlingTests.cs"];
m27_222 [label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="52-52", cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="TypeNameHandlingTests.cs"];
m27_69 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TypeNameHandlingTests.cs"];
m27_11 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="TypeNameHandlingTests.cs"];
m27_179 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", span="504-504", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_185 [label="Assert.AreEqual(3, errors.Count)", span="518-518", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_186 [label="Assert.AreEqual(''too far'', errors[0])", span="519-519", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_187 [label="Assert.AreEqual(''too far'', errors[1])", span="520-520", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_188 [label="Assert.AreEqual(''Infinite loop detected from error handling. Path '[1023]', line 1, position 65536.'', errors[2])", span="521-521", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_180 [label="IList<string> errors = new List<string>()", span="506-506", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_184 [label="Assert.IsNull(result)", span="517-517", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_181 [label="JsonSerializer serializer = new JsonSerializer()", span="508-508", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_182 [label="serializer.Error += (sender, e) =>\r\n            {\r\n                errors.Add(e.ErrorContext.Error.Message);\r\n                e.ErrorContext.Handled = true;\r\n            }", span="509-513", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_183 [label="ErrorPerson[] result = serializer.Deserialize<ErrorPerson[]>(new JsonTextReader(new ThrowingReader()))", span="515-515", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_189 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", span="504-504", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.InfiniteErrorHandlingLoopFromInputError()", file="TypeNameHandlingTests.cs"];
m27_358 [label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0", cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="TypeNameHandlingTests.cs"];
m27_394 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootSomethingElse.RootSomethingElse()", span="774-774", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.RootSomethingElse.RootSomethingElse()", file="TypeNameHandlingTests.cs"];
m27_423 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="TypeNameHandlingTests.cs"];
m27_0 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", span="58-58", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="TypeNameHandlingTests.cs"];
m27_1 [label="string json = @''[\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  },\r\n  {\r\n    ''''Name'''': ''''Jim'''',\r\n    ''''BirthDate'''': ''''\/Date(978048000000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978048000000)\/''''\r\n  }\r\n]''", span="60-71", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="TypeNameHandlingTests.cs"];
m27_2 [label="var possibleMsgs = new[]\r\n            {\r\n                ''[1] - Error message for member 1 = An item with the same key has already been added.'',\r\n                ''[1] - Error message for member 1 = An element with the same key already exists in the dictionary.'' // mono\r\n            }", span="73-77", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="TypeNameHandlingTests.cs"];
m27_3 [label="VersionKeyedCollection c = JsonConvert.DeserializeObject<VersionKeyedCollection>(json)", span="78-78", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="TypeNameHandlingTests.cs"];
m27_6 [label="Assert.IsTrue(possibleMsgs.Any(m => m == c.Messages[0]), ''Expected One of: '' + Environment.NewLine + string.Join(Environment.NewLine, possibleMsgs) + Environment.NewLine + ''Was: '' + Environment.NewLine + c.Messages[0])", span="81-81", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="TypeNameHandlingTests.cs"];
m27_4 [label="Assert.AreEqual(1, c.Count)", span="79-79", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="TypeNameHandlingTests.cs"];
m27_5 [label="Assert.AreEqual(1, c.Messages.Count)", span="80-80", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", color=green, community=0, file="TypeNameHandlingTests.cs"];
m27_7 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", span="58-58", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorDeserializingListHandled()", file="TypeNameHandlingTests.cs"];
m27_228 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_232 [label="Assert.AreEqual(2, errors.Count)", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_233 [label="Assert.AreEqual(''Unexpected character encountered while parsing value: x. Path 'badarray[0]', line 1, position 16.'', errors[0])", span="596-596", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_234 [label="Assert.AreEqual(''Unexpected character encountered while parsing value: ,. Path 'badarray[1]', line 1, position 17.'', errors[1])", span="597-597", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_235 [label="Assert.AreEqual(2, o.Count)", span="599-599", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_236 [label="Assert.AreEqual(2, o[''badarray''].Length)", span="600-600", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_237 [label="Assert.AreEqual(0, o[''badarray''][0])", span="601-601", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_238 [label="Assert.AreEqual(2, o[''badarray''][1])", span="602-602", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_229 [label="IList<string> errors = new List<string>()", span="579-579", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_231 [label="Assert.IsNotNull(o)", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_230 [label="Dictionary<string, int[]> o = JsonConvert.DeserializeObject<Dictionary<string, int[]>>(\r\n                ''{'badarray':[0,x,2],'goodarray':[0,1,2]}'',\r\n                new JsonSerializerSettings\r\n                {\r\n                    MetadataPropertyHandling = MetadataPropertyHandling.Default,\r\n                    Error = (sender, arg) =>\r\n                    {\r\n                        errors.Add(arg.ErrorContext.Error.Message);\r\n                        arg.ErrorContext.Handled = true;\r\n                    }\r\n                })", span="581-591", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_239 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ArrayHandlingInObject()", file="TypeNameHandlingTests.cs"];
m27_309 [label="Entry Newtonsoft.Json.Tests.Serialization.ErrorPerson2.ErrorPerson2()", span="920-920", cluster="Newtonsoft.Json.Tests.Serialization.ErrorPerson2.ErrorPerson2()", file="TypeNameHandlingTests.cs"];
m27_55 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_65 [label="Assert.IsTrue(possibleErrs.Any(m => m == errors[0]),\r\n                ''Expected One of: '' + string.Join(Environment.NewLine, possibleErrs) + Environment.NewLine + ''But was: '' + errors[0])", span="326-327", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_63 [label="Assert.AreEqual(3, errors.Count)", span="313-313", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_66 [label="Assert.AreEqual(''[2] - 2 - Unexpected token parsing date. Expected String, got StartArray. Path '[2]', line 4, position 9.'', errors[1])", span="329-329", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_67 [label="Assert.AreEqual(''[4] - 4 - Cannot convert null value to System.DateTime. Path '[4]', line 8, position 12.'', errors[2])", span="330-330", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_59 [label="Assert.AreEqual(3, c.Count)", span="308-308", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_60 [label="Assert.AreEqual(new DateTime(2009, 9, 9, 0, 0, 0, DateTimeKind.Utc), c[0])", span="309-309", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_61 [label="Assert.AreEqual(new DateTime(1977, 2, 20, 0, 0, 0, DateTimeKind.Utc), c[1])", span="310-310", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_62 [label="Assert.AreEqual(new DateTime(2000, 12, 1, 0, 0, 0, DateTimeKind.Utc), c[2])", span="311-311", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_56 [label="List<string> errors = new List<string>()", span="278-278", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_64 [label="var possibleErrs = new[]\r\n            {\r\n#if !(NET20 || NET35)\r\n                ''[1] - 1 - The string was not recognized as a valid DateTime. There is an unknown word starting at index 0.'',\r\n                ''[1] - 1 - String was not recognized as a valid DateTime.''\r\n#else\r\n    // handle typo fix in later versions of .NET\r\n                ''[1] - 1 - The string was not recognized as a valid DateTime. There is an unknown word starting at index 0.'',\r\n                ''[1] - 1 - The string was not recognized as a valid DateTime. There is a unknown word starting at index 0.''\r\n#endif\r\n            }", span="314-324", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_58 [label="var c = serializer.Deserialize<List<DateTime>>(new JsonTextReader(new StringReader(@''[\r\n        ''''2009-09-09T00:00:00Z'''',\r\n        ''''I am not a date and will error!'''',\r\n        [\r\n          1\r\n        ],\r\n        ''''1977-02-20T00:00:00Z'''',\r\n        null,\r\n        ''''2000-12-01T00:00:00Z''''\r\n      ]'')))", span="289-298", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_57 [label="JsonSerializer serializer = JsonSerializer.Create(new JsonSerializerSettings\r\n            {\r\n                Error = delegate(object sender, ErrorEventArgs args)\r\n                {\r\n                    errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                    args.ErrorContext.Handled = true;\r\n                },\r\n                Converters = { new IsoDateTimeConverter() }\r\n            })", span="280-288", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_68 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", span="276-276", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializingErrorHandlingUsingEvent()", file="TypeNameHandlingTests.cs"];
m27_44 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="540-540", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="TypeNameHandlingTests.cs"];
m27_8 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="754-754", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="TypeNameHandlingTests.cs"];
m27_54 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="TypeNameHandlingTests.cs"];
m27_137 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_143 [label="Assert.AreEqual(2, errors.Count)", span="454-454", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_144 [label="Assert.AreEqual(''[0] - 0 - Could not convert string to integer: a. Path '[0]', line 1, position 4.'', errors[0])", span="455-455", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_145 [label="Assert.AreEqual(''[1] - 1 - Could not convert string to integer: b. Path '[1]', line 1, position 8.'', errors[1])", span="456-456", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_139 [label="List<string> errors = new List<string>()", span="443-443", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_142 [label="serializer.Deserialize(new JsonTextReader(new StringReader(json)), typeof(int[]))", span="452-452", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_138 [label="string json = ''[\''a\'',\''b\'',\''45\'',34]''", span="441-441", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_140 [label="JsonSerializer serializer = new JsonSerializer()", span="445-445", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_141 [label="serializer.Error += delegate(object sender, ErrorEventArgs args)\r\n            {\r\n                errors.Add(args.ErrorContext.Path + '' - '' + args.ErrorContext.Member + '' - '' + args.ErrorContext.Error.Message);\r\n                args.ErrorContext.Handled = true;\r\n            }", span="446-450", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_146 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", span="439-439", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.HandlingArrayErrors()", file="TypeNameHandlingTests.cs"];
m27_284 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_293 [label="Assert.AreEqual(2, errors.Count)", span="699-699", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_294 [label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'ChildObject.Integer', line 6, position 18.'', errors[0])", span="700-700", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_295 [label="Assert.AreEqual(@''Unexpected end when deserializing object. Path 'ChildObject.Integer', line 6, position 18.'', errors[1])", span="701-701", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_288 [label="Assert.AreEqual(true, newDynamicObject.Explicit)", span="691-691", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_290 [label="Assert.AreEqual(99.9, d.Decimal)", span="695-695", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_291 [label="Assert.AreEqual(1, d.Int)", span="696-696", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_292 [label="Assert.AreEqual(123, d.ChildObject.Integer)", span="697-697", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_285 [label="IList<string> errors = new List<string>()", span="673-673", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_287 [label="TestDynamicObject newDynamicObject = JsonConvert.DeserializeObject<TestDynamicObject>(json, new JsonSerializerSettings\r\n            {\r\n                Error = (sender, e) =>\r\n                {\r\n                    errors.Add(e.ErrorContext.Error.Message);\r\n                    e.ErrorContext.Handled = true;\r\n                },\r\n                MetadataPropertyHandling = MetadataPropertyHandling.Default\r\n            })", span="682-690", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_289 [label="dynamic d = newDynamicObject", span="693-693", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_286 [label="string json = @''{\r\n  ''''Explicit'''': true,\r\n  ''''Decimal'''': 99.9,\r\n  ''''Int'''': 1,\r\n  ''''ChildObject'''': {\r\n    ''''Integer'''': 123''", span="675-680", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_296 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", span="671-671", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.ErrorHandlingEndOfContentDynamic()", file="TypeNameHandlingTests.cs"];
m27_326 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="TypeNameHandlingTests.cs"];
m27_332 [label="Assert.AreEqual(@''{''''Scott'''':[],''''James'''':[]}'', output)", span="740-740", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="TypeNameHandlingTests.cs"];
m27_331 [label="string output = JsonConvert.SerializeObject(dictionary, Formatting.None, settings)", span="738-738", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="TypeNameHandlingTests.cs"];
m27_327 [label="JsonSerializerSettings settings = new JsonSerializerSettings()", span="726-726", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="TypeNameHandlingTests.cs"];
m27_330 [label="Dictionary<string, IEnumerable<IErrorPerson2>> dictionary = data.GroupBy(person => person.FirstName).ToDictionary(group => @group.Key, group => @group.Cast<IErrorPerson2>())", span="737-737", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="TypeNameHandlingTests.cs"];
m27_329 [label="var data = new List<ErrorPerson2>\r\n            {\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hanselman'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Hunter'' },\r\n                new ErrorPerson2 { FirstName = ''Scott'', LastName = ''Guthrie'' },\r\n                new ErrorPerson2 { FirstName = ''James'', LastName = ''Newton-King'' },\r\n            }", span="729-735", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="TypeNameHandlingTests.cs"];
m27_328 [label="settings.Error += (obj, args) => { args.ErrorContext.Handled = true; }", span="727-727", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="TypeNameHandlingTests.cs"];
m27_333 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", span="724-724", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.WriteEndOnPropertyState2()", file="TypeNameHandlingTests.cs"];
m27_428 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", span="894-894", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="TypeNameHandlingTests.cs"];
m27_429 [label="SomethingElse result = JsonConvert.DeserializeObject<SomethingElse>(''{}'', new JsonSerializerSettings\r\n            {\r\n                Error = (o, e) => { e.ErrorContext.Handled = true; }\r\n            })", span="896-899", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="TypeNameHandlingTests.cs"];
m27_430 [label="Assert.IsNull(result)", span="901-901", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="TypeNameHandlingTests.cs"];
m27_431 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", span="894-894", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.DeserializeRootConverter()", file="TypeNameHandlingTests.cs"];
m27_357 [label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0", cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="TypeNameHandlingTests.cs"];
m27_356 [label="Entry System.Text.Encoding.GetBytes(string)", span="0-0", cluster="System.Text.Encoding.GetBytes(string)", file="TypeNameHandlingTests.cs"];
m27_384 [label="Entry Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_388 [label="throw new Exception(''An error occurred.'', ex);", span="822-822", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_387 [label=Exception, span="819-819", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_386 [label="serializer.Serialize(writer, s.RootSomethingElse)", span="817-817", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_385 [label="Something s = (Something)value", span="813-813", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_389 [label="Exit Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="809-809", cluster="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something.SomethingConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="TypeNameHandlingTests.cs"];
m27_370 [label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="369-369", cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="TypeNameHandlingTests.cs"];
m27_465 [label=c, span="", file="TypeNameHandlingTests.cs"];
m27_466 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_468 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_467 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_469 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_470 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_471 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_472 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_473 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_474 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_475 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_476 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_477 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_478 [label=errors, span="", file="TypeNameHandlingTests.cs"];
m27_479 [label=jReader, span="", file="TypeNameHandlingTests.cs"];
m27_480 [label=s, span="", file="TypeNameHandlingTests.cs"];
m27_482 [label=serialiser, span="", file="TypeNameHandlingTests.cs"];
m27_483 [label=reader, span="", file="TypeNameHandlingTests.cs"];
m27_487 [label="Newtonsoft.Json.Tests.Serialization.ThrowingReader", span="", file="TypeNameHandlingTests.cs"];
m27_484 [label=serialiser, span="", file="TypeNameHandlingTests.cs"];
m27_485 [label=r, span="", file="TypeNameHandlingTests.cs"];
m27_486 [label=writer, span="", file="TypeNameHandlingTests.cs"];
m27_481 [label="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something", span="", file="TypeNameHandlingTests.cs"];
m28_8 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="VersionConverterTests.cs"];
m28_38 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="751-751", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs"];
m28_56 [label="Entry System.Version.Version(int, int, int, int)", span="0-0", cluster="System.Version.Version(int, int, int, int)", file="VersionConverterTests.cs"];
m28_0 [label="Entry Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", span="40-40", cluster="Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", file="VersionConverterTests.cs"];
m28_1 [label="StringProperty1 = ''StringProperty1''", span="42-42", cluster="Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", file="VersionConverterTests.cs"];
m28_2 [label="Version1 = new Version(version1)", span="43-43", cluster="Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", file="VersionConverterTests.cs"];
m28_3 [label="Version2 = new Version(version2)", span="44-44", cluster="Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", file="VersionConverterTests.cs"];
m28_4 [label="StringProperty2 = ''StringProperty2''", span="45-45", cluster="Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", color=red, community=0, file="VersionConverterTests.cs"];
m28_5 [label="Exit Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", span="40-40", cluster="Newtonsoft.Json.Tests.Converters.VersionClass.VersionClass(string, string)", file="VersionConverterTests.cs"];
m28_6 [label="Entry System.Version.Version(string)", span="0-0", cluster="System.Version.Version(string)", file="VersionConverterTests.cs"];
m28_9 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="VersionConverterTests.cs"];
m28_10 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", color=green, community=0, file="VersionConverterTests.cs"];
m28_11 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", color=green, community=0, file="VersionConverterTests.cs"];
m28_12 [label="string expectedJson = string.Format(@''{{\r\n  ''''StringProperty1'''': ''''StringProperty1'''',\r\n  ''''Version1'''': ''''{0}'''',\r\n  ''''Version2'''': ''''{1}'''',\r\n  ''''StringProperty2'''': ''''StringProperty2''''\r\n}}'', version1, version2)", span="67-72", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass(string, string)", color=green, community=1, file="VersionConverterTests.cs"];
m28_13 [label="StringAssert.AreEqual(expectedJson, json)", span="74-74", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass(string, string)", file="VersionConverterTests.cs"];
m28_14 [label="Exit Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass(string, string)", span="61-61", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass(string, string)", file="VersionConverterTests.cs"];
m28_16 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="564-564", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="VersionConverterTests.cs"];
m28_17 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="VersionConverterTests.cs"];
m28_40 [label="Entry Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", file="VersionConverterTests.cs"];
m28_44 [label="DeserializeVersionClass(''1.2.3.4'', ''2.3.4.5'')", span="110-110", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_43 [label="DeserializeVersionClass(''1.2.3.0'', ''2.3.4.0'')", span="109-109", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", file="VersionConverterTests.cs"];
m28_45 [label="DeserializeVersionClass(''1.2'', ''2.3'')", span="112-112", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_46 [label="DeserializeVersionClass(''1.2.3'', ''2.3.4'')", span="113-113", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_47 [label="DeserializeVersionClass(''1.2.3.4'', ''2.3.4.5'')", span="114-114", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", color=green, community=1, file="VersionConverterTests.cs"];
m28_41 [label="DeserializeVersionClass(''1.0.0.0'', ''2.0.0.0'')", span="107-107", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", file="VersionConverterTests.cs"];
m28_42 [label="DeserializeVersionClass(''1.2.0.0'', ''2.3.0.0'')", span="108-108", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", file="VersionConverterTests.cs"];
m28_48 [label="Exit Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", span="105-105", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass()", file="VersionConverterTests.cs"];
m28_15 [label="Entry Newtonsoft.Json.Converters.VersionConverter.VersionConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.VersionConverter.VersionConverter()", file="VersionConverterTests.cs"];
m28_39 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="VersionConverterTests.cs"];
m28_49 [label="Entry Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", span="118-118", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs"];
m28_54 [label="Assert.AreEqual(reportJSON, reportJSON2)", span="127-127", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs"];
m28_51 [label="string reportJSON = JsonConvert.SerializeObject(version)", span="121-121", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs"];
m28_53 [label="string reportJSON2 = JsonConvert.SerializeObject(report2)", span="125-125", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs"];
m28_50 [label="var version = new Version(1, 0, 0, 0)", span="120-120", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs"];
m28_52 [label="Version report2 = JsonConvert.DeserializeObject<Version>(reportJSON)", span="124-124", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs"];
m28_55 [label="Exit Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", span="118-118", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.RoundtripImplicitConverter()", file="VersionConverterTests.cs"];
m28_57 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="524-524", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="VersionConverterTests.cs"];
m28_19 [label="Entry Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", span="78-78", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", file="VersionConverterTests.cs"];
m28_20 [label="SerializeVersionClass(''1.0.0.0'', ''2.0.0.0'')", span="80-80", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_21 [label="SerializeVersionClass(''1.2.0.0'', ''2.3.0.0'')", span="81-81", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_22 [label="SerializeVersionClass(''1.2.3.0'', ''2.3.4.0'')", span="82-82", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_23 [label="SerializeVersionClass(''1.2.3.4'', ''2.3.4.5'')", span="83-83", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_24 [label="SerializeVersionClass(''1.2'', ''2.3'')", span="85-85", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_25 [label="SerializeVersionClass(''1.2.3'', ''2.3.4'')", span="86-86", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_26 [label="SerializeVersionClass(''1.2.3.4'', ''2.3.4.5'')", span="87-87", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", color=green, community=0, file="VersionConverterTests.cs"];
m28_27 [label="Exit Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", span="78-78", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.SerializeVersionClass()", file="VersionConverterTests.cs"];
m28_58 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="703-703", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="VersionConverterTests.cs"];
m28_28 [label="Entry Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", file="VersionConverterTests.cs"];
m28_34 [label="Assert.AreEqual(expectedVersion1, versionClass.Version1)", span="99-99", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", color=green, community=0, file="VersionConverterTests.cs"];
m28_30 [label="Version expectedVersion1 = new Version(version1)", span="93-93", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", file="VersionConverterTests.cs"];
m28_32 [label="VersionClass versionClass = JsonConvert.DeserializeObject<VersionClass>(json, new VersionConverter())", span="96-96", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", file="VersionConverterTests.cs"];
m28_33 [label="Assert.AreEqual(''StringProperty1'', versionClass.StringProperty1)", span="98-98", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", color=green, community=0, file="VersionConverterTests.cs"];
m28_35 [label="Assert.AreEqual(expectedVersion2, versionClass.Version2)", span="100-100", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", color=green, community=0, file="VersionConverterTests.cs"];
m28_31 [label="Version expectedVersion2 = new Version(version2)", span="94-94", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", file="VersionConverterTests.cs"];
m28_36 [label="Assert.AreEqual(''StringProperty2'', versionClass.StringProperty2)", span="101-101", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", color=green, community=0, file="VersionConverterTests.cs"];
m28_29 [label="string json = string.Format(@''{{''''StringProperty1'''': ''''StringProperty1'''', ''''Version1'''': ''''{0}'''', ''''Version2'''': ''''{1}'''', ''''StringProperty2'''': ''''StringProperty2''''}}'', version1, version2)", span="92-92", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", file="VersionConverterTests.cs"];
m28_37 [label="Exit Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", span="90-90", cluster="Newtonsoft.Json.Tests.Converters.VersionConverterTests.DeserializeVersionClass(string, string)", file="VersionConverterTests.cs"];
m28_7 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="VersionConverterTests.cs"];
m28_60 [label="Newtonsoft.Json.Tests.Converters.VersionConverterTests", span="", file="VersionConverterTests.cs"];
m28_59 [label="Newtonsoft.Json.Tests.Converters.VersionClass", span="", file="VersionConverterTests.cs"];
m30_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", span="39-39", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="XmlNodeConverterTest.cs"];
m30_1 [label="JObject o = JObject.Parse(@''{'string1':'value','integer2':99,'datetime3':'2000-05-23T00:00:00'}'')", span="42-42", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="XmlNodeConverterTest.cs"];
m30_2 [label="Console.WriteLine(o.ToString())", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="XmlNodeConverterTest.cs"];
m30_3 [label="Console.WriteLine(o.ToString(Formatting.None))", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="XmlNodeConverterTest.cs"];
m30_4 [label="Console.WriteLine(o.ToString(Formatting.None, new JavaScriptDateTimeConverter()))", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="XmlNodeConverterTest.cs"];
m30_5 [label="Assert.IsNotNull(o.ToString(Formatting.None, new JavaScriptDateTimeConverter()))", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="XmlNodeConverterTest.cs"];
m30_6 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", span="39-39", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.ToString.Example()", file="XmlNodeConverterTest.cs"];
m30_10 [label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="421-421", cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="XmlNodeConverterTest.cs"];
m30_7 [label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="359-359", cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="XmlNodeConverterTest.cs"];
m30_11 [label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34", cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="XmlNodeConverterTest.cs"];
m30_12 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="XmlNodeConverterTest.cs"];
m30_9 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="XmlNodeConverterTest.cs"];
m30_8 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="XmlNodeConverterTest.cs"];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m0_0 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="byte[]"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_9 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Bson.BsonObjectId"];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=user];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_5  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_11  [key=0, style=bold, color=blue];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_10  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_20  [key=2, style=dotted];
m1_16 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label=json];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_21  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_22  [key=2, style=dotted];
m1_19 -> m1_14  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [key=2, style=dotted];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=xml];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=doc];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label=json];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_11  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_12  [key=2, style=dotted];
m2_7 -> m2_0  [key=0, style=bold, color=blue];
m3_129 -> m3_130  [key=0, style=solid];
m3_132 -> m3_47  [key=2, style=dotted];
m3_132 -> m3_133  [key=0, style=solid];
m3_130 -> m3_132  [key=1, style=dashed, color=darkseagreen4, label=methodInfo];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_112  [key=2, style=dotted];
m3_130 -> m3_100  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_12  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_123  [key=2, style=dotted];
m3_133 -> m3_101  [key=2, style=dotted];
m3_133 -> m3_135  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_134 -> m3_12  [key=2, style=dotted];
m3_134 -> m3_135  [key=0, style=solid];
m3_135 -> m3_136  [key=0, style=solid];
m3_136 -> m3_13  [key=2, style=dotted];
m3_136 -> m3_136  [key=1, style=dashed, color=darkseagreen4, label=s];
m3_136 -> m3_137  [key=0, style=solid];
m3_137 -> m3_129  [key=0, style=bold, color=blue];
m3_31 -> m3_32  [key=0, style=solid];
m3_36 -> m3_12  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_13  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_38 -> m3_13  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_39 -> m3_13  [key=2, style=dotted];
m3_39 -> m3_40  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_37  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_35 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_35 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_35 -> m3_11  [key=2, style=dotted];
m3_33 -> m3_35  [key=1, style=dashed, color=darkseagreen4, label=creator];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_10  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_8  [key=2, style=dotted];
m3_32 -> m3_9  [key=2, style=dotted];
m3_32 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_40 -> m3_31  [key=0, style=bold, color=blue];
m3_91 -> m3_92  [key=0, style=solid];
m3_94 -> m3_47  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_92 -> m3_94  [key=1, style=dashed, color=darkseagreen4, label=castMethodInfo];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_100  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_12  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_101  [key=2, style=dotted];
m3_95 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_96 -> m3_12  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_98 -> m3_13  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_99 -> m3_91  [key=0, style=bold, color=blue];
m3_82 -> m3_83  [key=0, style=solid, color=green];
m3_83 -> m3_84  [key=0, style=solid, color=green];
m3_83 -> m3_47  [key=2, style=dotted, color=green];
m3_83 -> m3_85  [key=1, style=dashed, color=green, label="lambda expression"];
m3_84 -> m3_82  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_5 -> m3_12  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_13  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=jsonIgnoreNullValues];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_12  [key=2, style=dotted];
m3_2 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=creator];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_10  [key=2, style=dotted];
m3_2 -> m3_9  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_10  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_8  [key=2, style=dotted];
m3_1 -> m3_9  [key=2, style=dotted];
m3_1 -> m3_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_1 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=person];
m3_7 -> m3_0  [key=0, style=bold, color=blue];
m3_44 -> m3_45  [key=0, style=solid, color=green];
m3_45 -> m3_46  [key=0, style=solid, color=green];
m3_45 -> m3_47  [key=2, style=dotted, color=green];
m3_45 -> m3_48  [key=1, style=dashed, color=green, label="lambda expression"];
m3_46 -> m3_44  [key=0, style=bold, color=blue];
m3_123 -> m3_124  [key=0, style=solid];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct"];
m3_125 -> m3_123  [key=0, style=bold, color=blue];
m3_70 -> m3_71  [key=0, style=solid, color=green];
m3_71 -> m3_72  [key=0, style=solid, color=green];
m3_71 -> m3_47  [key=2, style=dotted, color=green];
m3_71 -> m3_73  [key=1, style=dashed, color=green, label="lambda expression"];
m3_72 -> m3_70  [key=0, style=bold, color=blue];
m3_102 -> m3_103  [key=0, style=solid];
m3_105 -> m3_47  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=call];
m3_103 -> m3_105  [key=1, style=dashed, color=darkseagreen4, label=namePropertyInfo];
m3_103 -> m3_55  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_112  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_12  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_54  [key=2, style=dotted];
m3_106 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_113  [key=2, style=dotted];
m3_108 -> m3_110  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_107 -> m3_108  [key=0, style=solid];
m3_109 -> m3_12  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_13  [key=2, style=dotted];
m3_111 -> m3_102  [key=0, style=bold, color=blue];
m3_126 -> m3_127  [key=0, style=solid];
m3_127 -> m3_123  [key=2, style=dotted];
m3_127 -> m3_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Utilities.DynamicReflectionDelegateFactoryTests.TestStruct"];
m3_127 -> m3_128  [key=0, style=solid];
m3_128 -> m3_126  [key=0, style=bold, color=blue];
m3_57 -> m3_58  [key=0, style=solid, color=green];
m3_58 -> m3_59  [key=0, style=solid, color=green];
m3_58 -> m3_47  [key=2, style=dotted, color=green];
m3_58 -> m3_60  [key=1, style=dashed, color=green, label="lambda expression"];
m3_59 -> m3_57  [key=0, style=bold, color=blue];
m3_41 -> m3_42  [key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_60 -> m3_61  [key=0, style=solid];
m3_73 -> m3_74  [key=0, style=solid];
m3_85 -> m3_86  [key=0, style=solid];
m3_51 -> m3_47  [key=2, style=dotted];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_55  [key=2, style=dotted];
m3_63 -> m3_47  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_55  [key=2, style=dotted];
m3_63 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=setter];
m3_75 -> m3_47  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_55  [key=2, style=dotted];
m3_75 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label=setter];
m3_87 -> m3_47  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_55  [key=2, style=dotted];
m3_53 -> m3_48  [key=0, style=bold, color=blue];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_54  [key=2, style=dotted];
m3_49 -> m3_52  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_68 -> m3_60  [key=0, style=bold, color=blue];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_54  [key=2, style=dotted];
m3_61 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_61 -> m3_67  [key=1, style=dashed, color=darkseagreen4, label=p];
m3_79 -> m3_73  [key=0, style=bold, color=blue];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_80  [key=2, style=dotted];
m3_74 -> m3_76  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_74 -> m3_77  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m3_89 -> m3_85  [key=0, style=bold, color=blue];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_69  [key=2, style=dotted];
m3_86 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label=m];
m3_50 -> m3_51  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_56  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_69  [key=2, style=dotted];
m3_62 -> m3_64  [key=1, style=dashed, color=darkseagreen4, label=m];
m3_62 -> m3_65  [key=1, style=dashed, color=darkseagreen4, label=m];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_56  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_56  [key=2, style=dotted];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_56  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_81  [key=2, style=dotted];
m3_78 -> m3_56  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_90  [key=2, style=dotted];
m3_88 -> m3_56  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_13  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_13  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_13  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_16 -> m3_14  [key=0, style=bold, color=blue];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=2, style=dotted];
m3_15 -> m3_18  [key=2, style=dotted];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_17  [key=2, style=dotted];
m3_29 -> m3_18  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_17  [key=2, style=dotted];
m3_42 -> m3_18  [key=2, style=dotted];
m3_43 -> m3_41  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_24 -> m3_12  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_13  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_26 -> m3_13  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_23 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=o];
m3_23 -> m3_11  [key=2, style=dotted];
m3_21 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label=creator];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_10  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_8  [key=2, style=dotted];
m3_20 -> m3_9  [key=2, style=dotted];
m3_20 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_27 -> m3_19  [key=0, style=bold, color=blue];
m3_114 -> m3_115  [key=0, style=solid];
m3_115 -> m3_47  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_118 -> m3_47  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_122  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=myStruct1];
m3_117 -> m3_13  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_122  [key=2, style=dotted];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_13  [key=2, style=dotted];
m3_120 -> m3_120  [key=1, style=dashed, color=darkseagreen4, label=myStruct2];
m3_121 -> m3_114  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m4_0 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_0  [key=0, style=bold, color=blue];
m4_6 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m4_6 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m4_6 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m4_6 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorContext"];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_4 -> m5_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m5_4 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_10  [key=2, style=dotted];
m7_1 -> m7_11  [key=2, style=dotted];
m7_1 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label=o1];
m7_1 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=o1];
m7_1 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label=o1];
m7_1 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label=o1];
m7_1 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=o1];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_12  [key=2, style=dotted];
m7_2 -> m7_13  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_14  [key=2, style=dotted];
m7_3 -> m7_5  [key=1, style=dashed, color=darkseagreen4, label=o2];
m7_3 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label=o2];
m7_3 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label=o2];
m7_3 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=o2];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_15  [key=2, style=dotted];
m7_5 -> m7_16  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_17  [key=2, style=dotted];
m7_6 -> m7_16  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_15  [key=2, style=dotted];
m7_7 -> m7_18  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_17  [key=2, style=dotted];
m7_8 -> m7_19  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_12  [key=2, style=dotted];
m7_4 -> m7_13  [key=2, style=dotted];
m7_9 -> m7_0  [key=0, style=bold, color=blue];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_66  [key=0, style=solid];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_70  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_47  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_63  [key=0, style=solid];
m8_61 -> m8_53  [key=2, style=dotted];
m8_61 -> m8_56  [key=2, style=dotted];
m8_62 -> m8_64  [key=0, style=solid];
m8_62 -> m8_47  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_68  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_69  [key=2, style=dotted];
m8_67 -> m8_57  [key=0, style=bold, color=blue];
m8_71 -> m8_72  [key=0, style=solid];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_76  [key=0, style=solid];
m8_73 -> m8_74  [key=0, style=solid];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_79  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_47  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_78  [key=2, style=dotted];
m8_77 -> m8_71  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_11  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_15  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_0 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m8_1 -> m8_2  [key=0, style=solid];
m8_11 -> m8_12  [key=0, style=solid];
m8_11 -> m8_21  [key=0, style=solid];
m8_11 -> m8_49  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=0, style=solid];
m8_12 -> m8_50  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_46  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_52  [key=2, style=dotted];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_53  [key=2, style=dotted];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_28  [key=0, style=solid];
m8_21 -> m8_50  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=0, style=solid];
m8_23 -> m8_54  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_52  [key=2, style=dotted];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_42  [key=0, style=solid];
m8_28 -> m8_50  [key=2, style=dotted];
m8_28 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label=tempCollectionType];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_52  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_38  [key=0, style=solid];
m8_33 -> m8_55  [key=2, style=dotted];
m8_33 -> m8_56  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_3 -> m8_4  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_11  [key=0, style=solid];
m8_6 -> m8_7  [key=0, style=solid];
m8_6 -> m8_46  [key=2, style=dotted];
m8_7 -> m8_8  [key=0, style=solid];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_47  [key=2, style=dotted];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
m8_10 -> m8_44  [key=0, style=solid];
m8_10 -> m8_48  [key=2, style=dotted];
m8_44 -> m8_45  [key=0, style=solid];
m8_13 -> m8_15  [key=0, style=solid];
m8_13 -> m8_51  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_19  [key=0, style=solid];
m8_20 -> m8_44  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_51  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_47  [key=2, style=dotted];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
m8_27 -> m8_44  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_51  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label=canDeserialize];
m8_34 -> m8_35  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_32  [key=0, style=solid];
m8_30 -> m8_54  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_47  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_47  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_36 -> m8_37  [key=0, style=solid];
m8_37 -> m8_44  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_44  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_45 -> m8_0  [key=0, style=bold, color=blue];
m8_80 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_40  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_58  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_72  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m8_80 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m9_1965 -> m9_1966  [key=0, style=solid];
m9_1966 -> m9_1967  [key=0, style=solid];
m9_1966 -> m9_1968  [key=2, style=dotted];
m9_1967 -> m9_1965  [key=0, style=bold, color=blue];
m9_518 -> m9_519  [key=0, style=solid];
m9_518 -> m9_520  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_518 -> m9_521  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m9_518 -> m9_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m9_518 -> m9_523  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m9_519 -> m9_520  [key=0, style=solid];
m9_520 -> m9_521  [key=0, style=solid];
m9_521 -> m9_522  [key=0, style=solid];
m9_522 -> m9_523  [key=0, style=solid];
m9_523 -> m9_524  [key=0, style=solid];
m9_524 -> m9_518  [key=0, style=bold, color=blue];
m9_592 -> m9_593  [key=0, style=solid];
m9_593 -> m9_594  [key=0, style=solid];
m9_594 -> m9_595  [key=0, style=solid];
m9_594 -> m9_602  [key=2, style=dotted];
m9_594 -> m9_596  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_594 -> m9_598  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_594 -> m9_599  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_595 -> m9_596  [key=0, style=solid];
m9_595 -> m9_603  [key=2, style=dotted];
m9_595 -> m9_597  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_596 -> m9_597  [key=0, style=solid];
m9_596 -> m9_604  [key=2, style=dotted];
m9_598 -> m9_599  [key=0, style=solid];
m9_598 -> m9_14  [key=2, style=dotted];
m9_599 -> m9_600  [key=0, style=solid];
m9_599 -> m9_14  [key=2, style=dotted];
m9_597 -> m9_598  [key=0, style=solid];
m9_597 -> m9_605  [key=2, style=dotted];
m9_597 -> m9_600  [key=1, style=dashed, color=darkseagreen4, label=output];
m9_600 -> m9_601  [key=0, style=solid];
m9_600 -> m9_12  [key=2, style=dotted];
m9_601 -> m9_592  [key=0, style=bold, color=blue];
m9_84 -> m9_85  [key=0, style=solid];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_95  [key=2, style=dotted];
m9_85 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_24  [key=2, style=dotted];
m9_86 -> m9_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_95  [key=2, style=dotted];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_11  [key=2, style=dotted];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_14  [key=2, style=dotted];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_24  [key=2, style=dotted];
m9_90 -> m9_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_24  [key=2, style=dotted];
m9_91 -> m9_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_13  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_14  [key=2, style=dotted];
m9_94 -> m9_84  [key=0, style=bold, color=blue];
m9_1480 -> m9_1481  [key=0, style=solid];
m9_1480 -> m9_1482  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1480 -> m9_1483  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1480 -> m9_1484  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_1481 -> m9_1482  [key=0, style=solid];
m9_1482 -> m9_1483  [key=0, style=solid];
m9_1483 -> m9_1484  [key=0, style=solid];
m9_1484 -> m9_1485  [key=0, style=solid];
m9_1485 -> m9_1480  [key=0, style=bold, color=blue];
m9_3938 -> m9_3939  [key=0, style=solid];
m9_3939 -> m9_3940  [key=0, style=solid];
m9_3940 -> m9_3938  [key=0, style=bold, color=blue];
m9_633 -> m9_634  [key=0, style=solid];
m9_634 -> m9_635  [key=0, style=solid];
m9_634 -> m9_639  [key=2, style=dotted];
m9_634 -> m9_625  [key=2, style=dotted];
m9_635 -> m9_636  [key=0, style=solid];
m9_635 -> m9_11  [key=2, style=dotted];
m9_635 -> m9_637  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_636 -> m9_637  [key=0, style=solid];
m9_637 -> m9_638  [key=0, style=solid];
m9_637 -> m9_14  [key=2, style=dotted];
m9_638 -> m9_633  [key=0, style=bold, color=blue];
m9_1567 -> m9_1568  [key=0, style=solid];
m9_1568 -> m9_1569  [key=0, style=solid];
m9_1569 -> m9_1570  [key=0, style=solid];
m9_1569 -> m9_13  [key=2, style=dotted];
m9_1569 -> m9_1571  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_1569 -> m9_1572  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_1570 -> m9_1571  [key=0, style=solid];
m9_1570 -> m9_14  [key=2, style=dotted];
m9_1571 -> m9_1572  [key=0, style=solid];
m9_1571 -> m9_14  [key=2, style=dotted];
m9_1572 -> m9_1573  [key=0, style=solid];
m9_1572 -> m9_14  [key=2, style=dotted];
m9_1573 -> m9_1567  [key=0, style=bold, color=blue];
m9_1070 -> m9_1071  [key=0, style=solid];
m9_1071 -> m9_1072  [key=0, style=solid];
m9_1071 -> m9_938  [key=2, style=dotted];
m9_1072 -> m9_1073  [key=0, style=solid];
m9_1072 -> m9_11  [key=2, style=dotted];
m9_1073 -> m9_1074  [key=0, style=solid];
m9_1073 -> m9_14  [key=2, style=dotted];
m9_1074 -> m9_1070  [key=0, style=bold, color=blue];
m9_1870 -> m9_1871  [key=0, style=solid];
m9_1871 -> m9_1872  [key=0, style=solid];
m9_1871 -> m9_1873  [key=0, style=solid];
m9_1872 -> m9_1871  [key=0, style=solid];
m9_1872 -> m9_667  [key=2, style=dotted];
m9_1872 -> m9_1872  [key=1, style=dashed, color=darkseagreen4, label=pair];
m9_1873 -> m9_1870  [key=0, style=bold, color=blue];
m9_2262 -> m9_2263  [key=0, style=solid];
m9_2263 -> m9_2264  [key=0, style=solid];
m9_2263 -> m9_24  [key=2, style=dotted];
m9_2263 -> m9_2265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2264 -> m9_2262  [key=0, style=bold, color=blue];
m9_553 -> m9_554  [key=0, style=solid];
m9_554 -> m9_555  [key=0, style=solid];
m9_554 -> m9_574  [key=2, style=dotted];
m9_554 -> m9_556  [key=1, style=dashed, color=darkseagreen4, label=p1];
m9_554 -> m9_557  [key=1, style=dashed, color=darkseagreen4, label=p1];
m9_554 -> m9_558  [key=1, style=dashed, color=darkseagreen4, label=p1];
m9_555 -> m9_556  [key=0, style=solid];
m9_555 -> m9_574  [key=2, style=dotted];
m9_555 -> m9_557  [key=1, style=dashed, color=darkseagreen4, label=p2];
m9_555 -> m9_558  [key=1, style=dashed, color=darkseagreen4, label=p2];
m9_556 -> m9_557  [key=0, style=solid];
m9_557 -> m9_558  [key=0, style=solid];
m9_558 -> m9_559  [key=0, style=solid];
m9_558 -> m9_518  [key=2, style=dotted];
m9_558 -> m9_561  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_558 -> m9_564  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_558 -> m9_565  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_558 -> m9_566  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_558 -> m9_567  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_558 -> m9_568  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_559 -> m9_560  [key=0, style=solid];
m9_561 -> m9_562  [key=0, style=solid];
m9_561 -> m9_575  [key=2, style=dotted];
m9_561 -> m9_563  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_564 -> m9_565  [key=0, style=solid];
m9_564 -> m9_14  [key=2, style=dotted];
m9_565 -> m9_566  [key=0, style=solid];
m9_565 -> m9_14  [key=2, style=dotted];
m9_566 -> m9_567  [key=0, style=solid];
m9_566 -> m9_14  [key=2, style=dotted];
m9_567 -> m9_568  [key=0, style=solid];
m9_567 -> m9_14  [key=2, style=dotted];
m9_568 -> m9_569  [key=0, style=solid];
m9_568 -> m9_14  [key=2, style=dotted];
m9_560 -> m9_561  [key=0, style=solid];
m9_560 -> m9_47  [key=2, style=dotted];
m9_562 -> m9_563  [key=0, style=solid];
m9_562 -> m9_12  [key=2, style=dotted];
m9_563 -> m9_564  [key=0, style=solid];
m9_563 -> m9_13  [key=2, style=dotted];
m9_563 -> m9_565  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m9_563 -> m9_566  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m9_563 -> m9_567  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m9_563 -> m9_568  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m9_563 -> m9_569  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m9_563 -> m9_570  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m9_563 -> m9_571  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m9_563 -> m9_572  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m9_569 -> m9_570  [key=0, style=solid];
m9_569 -> m9_14  [key=2, style=dotted];
m9_570 -> m9_571  [key=0, style=solid];
m9_570 -> m9_14  [key=2, style=dotted];
m9_571 -> m9_572  [key=0, style=solid];
m9_571 -> m9_14  [key=2, style=dotted];
m9_572 -> m9_573  [key=0, style=solid];
m9_572 -> m9_14  [key=2, style=dotted];
m9_573 -> m9_553  [key=0, style=bold, color=blue];
m9_1162 -> m9_1163  [key=0, style=solid];
m9_1163 -> m9_1164  [key=0, style=solid];
m9_1163 -> m9_1142  [key=2, style=dotted];
m9_1163 -> m9_1168  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_1163 -> m9_1169  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_1164 -> m9_1165  [key=0, style=solid];
m9_1164 -> m9_1143  [key=2, style=dotted];
m9_1168 -> m9_1169  [key=0, style=solid];
m9_1168 -> m9_14  [key=2, style=dotted];
m9_1169 -> m9_1170  [key=0, style=solid];
m9_1169 -> m9_14  [key=2, style=dotted];
m9_1165 -> m9_1166  [key=0, style=solid];
m9_1165 -> m9_47  [key=2, style=dotted];
m9_1165 -> m9_575  [key=2, style=dotted];
m9_1165 -> m9_1167  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1166 -> m9_1167  [key=0, style=solid];
m9_1166 -> m9_14  [key=2, style=dotted];
m9_1167 -> m9_1168  [key=0, style=solid];
m9_1167 -> m9_13  [key=2, style=dotted];
m9_1167 -> m9_1169  [key=1, style=dashed, color=darkseagreen4, label=m2];
m9_1170 -> m9_1162  [key=0, style=bold, color=blue];
m9_1606 -> m9_1607  [key=0, style=solid];
m9_1607 -> m9_1608  [key=0, style=solid];
m9_1607 -> m9_13  [key=2, style=dotted];
m9_1607 -> m9_1609  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_1607 -> m9_1610  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_1607 -> m9_1611  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_1608 -> m9_1609  [key=0, style=solid];
m9_1608 -> m9_14  [key=2, style=dotted];
m9_1609 -> m9_1610  [key=0, style=solid];
m9_1609 -> m9_14  [key=2, style=dotted];
m9_1610 -> m9_1611  [key=0, style=solid];
m9_1610 -> m9_14  [key=2, style=dotted];
m9_1611 -> m9_1612  [key=0, style=solid];
m9_1611 -> m9_14  [key=2, style=dotted];
m9_1612 -> m9_1606  [key=0, style=bold, color=blue];
m9_2890 -> m9_2891  [key=0, style=solid];
m9_2891 -> m9_2892  [key=0, style=solid];
m9_2891 -> m9_19  [key=2, style=dotted];
m9_2891 -> m9_2894  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2891 -> m9_2895  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2892 -> m9_2893  [key=0, style=solid];
m9_2892 -> m9_11  [key=2, style=dotted];
m9_2894 -> m9_2895  [key=0, style=solid];
m9_2894 -> m9_14  [key=2, style=dotted];
m9_2895 -> m9_2896  [key=0, style=solid];
m9_2895 -> m9_14  [key=2, style=dotted];
m9_2893 -> m9_2894  [key=0, style=solid];
m9_2893 -> m9_13  [key=2, style=dotted];
m9_2893 -> m9_2895  [key=1, style=dashed, color=darkseagreen4, label=d2];
m9_2896 -> m9_2890  [key=0, style=bold, color=blue];
m9_1547 -> m9_1548  [key=0, style=solid];
m9_1548 -> m9_1549  [key=0, style=solid];
m9_1548 -> m9_754  [key=2, style=dotted];
m9_1548 -> m9_1552  [key=2, style=dotted];
m9_1549 -> m9_1550  [key=0, style=solid];
m9_1549 -> m9_11  [key=2, style=dotted];
m9_1550 -> m9_1551  [key=0, style=solid];
m9_1550 -> m9_14  [key=2, style=dotted];
m9_1551 -> m9_1547  [key=0, style=bold, color=blue];
m9_2413 -> m9_2414  [key=0, style=solid];
m9_2414 -> m9_2415  [key=0, style=solid];
m9_2414 -> m9_13  [key=2, style=dotted];
m9_2415 -> m9_2416  [key=0, style=solid];
m9_2415 -> m9_2397  [key=2, style=dotted];
m9_2415 -> m9_790  [key=2, style=dotted];
m9_2415 -> m9_946  [key=2, style=dotted];
m9_2415 -> m9_14  [key=2, style=dotted];
m9_2416 -> m9_2413  [key=0, style=bold, color=blue];
m9_1318 -> m9_1319  [key=0, style=solid];
m9_1319 -> m9_1320  [key=0, style=solid];
m9_1319 -> m9_1328  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1320 -> m9_1321  [key=0, style=solid];
m9_1320 -> m9_13  [key=2, style=dotted];
m9_1320 -> m9_1322  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_1320 -> m9_1323  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_1320 -> m9_1324  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_1320 -> m9_1325  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_1320 -> m9_1326  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_1320 -> m9_1327  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_1328 -> m9_1329  [key=0, style=solid];
m9_1328 -> m9_14  [key=2, style=dotted];
m9_1321 -> m9_1322  [key=0, style=solid];
m9_1321 -> m9_14  [key=2, style=dotted];
m9_1322 -> m9_1323  [key=0, style=solid];
m9_1322 -> m9_14  [key=2, style=dotted];
m9_1323 -> m9_1324  [key=0, style=solid];
m9_1323 -> m9_14  [key=2, style=dotted];
m9_1324 -> m9_1325  [key=0, style=solid];
m9_1324 -> m9_14  [key=2, style=dotted];
m9_1325 -> m9_1326  [key=0, style=solid];
m9_1325 -> m9_14  [key=2, style=dotted];
m9_1326 -> m9_1327  [key=0, style=solid];
m9_1326 -> m9_14  [key=2, style=dotted];
m9_1327 -> m9_1328  [key=0, style=solid];
m9_1327 -> m9_11  [key=2, style=dotted];
m9_1329 -> m9_1318  [key=0, style=bold, color=blue];
m9_1586 -> m9_1587  [key=0, style=solid];
m9_1587 -> m9_1588  [key=0, style=solid];
m9_1587 -> m9_1591  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1588 -> m9_1589  [key=0, style=solid];
m9_1588 -> m9_24  [key=2, style=dotted];
m9_1588 -> m9_1590  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1589 -> m9_1586  [key=0, style=bold, color=blue];
m9_2582 -> m9_2583  [key=0, style=solid];
m9_2583 -> m9_2584  [key=0, style=solid];
m9_2584 -> m9_2585  [key=0, style=solid];
m9_2584 -> m9_13  [key=2, style=dotted];
m9_2584 -> m9_2586  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_2584 -> m9_2587  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_2585 -> m9_2586  [key=0, style=solid];
m9_2585 -> m9_14  [key=2, style=dotted];
m9_2586 -> m9_2587  [key=0, style=solid];
m9_2586 -> m9_14  [key=2, style=dotted];
m9_2587 -> m9_2588  [key=0, style=solid];
m9_2587 -> m9_14  [key=2, style=dotted];
m9_2588 -> m9_2582  [key=0, style=bold, color=blue];
m9_2276 -> m9_2277  [key=0, style=solid];
m9_2277 -> m9_2278  [key=0, style=solid];
m9_2277 -> m9_46  [key=2, style=dotted];
m9_2277 -> m9_2279  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_2277 -> m9_2280  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_2277 -> m9_2284  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_2278 -> m9_2279  [key=0, style=solid];
m9_2278 -> m9_667  [key=2, style=dotted];
m9_2279 -> m9_2280  [key=0, style=solid];
m9_2279 -> m9_667  [key=2, style=dotted];
m9_2280 -> m9_2281  [key=0, style=solid];
m9_2280 -> m9_667  [key=2, style=dotted];
m9_2284 -> m9_2285  [key=0, style=solid];
m9_2284 -> m9_667  [key=2, style=dotted];
m9_2281 -> m9_2282  [key=0, style=solid];
m9_2281 -> m9_46  [key=2, style=dotted];
m9_2281 -> m9_2283  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_2281 -> m9_2284  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_2281 -> m9_2285  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_2282 -> m9_2283  [key=0, style=solid];
m9_2282 -> m9_667  [key=2, style=dotted];
m9_2283 -> m9_2284  [key=0, style=solid];
m9_2283 -> m9_667  [key=2, style=dotted];
m9_2285 -> m9_2286  [key=0, style=solid];
m9_2285 -> m9_11  [key=2, style=dotted];
m9_2285 -> m9_2287  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2286 -> m9_2287  [key=0, style=solid];
m9_2286 -> m9_14  [key=2, style=dotted];
m9_2287 -> m9_2288  [key=0, style=solid];
m9_2287 -> m9_13  [key=2, style=dotted];
m9_2287 -> m9_2289  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_2287 -> m9_2290  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_2288 -> m9_2289  [key=0, style=solid];
m9_2288 -> m9_14  [key=2, style=dotted];
m9_2289 -> m9_2290  [key=0, style=solid];
m9_2289 -> m9_14  [key=2, style=dotted];
m9_2290 -> m9_2291  [key=0, style=solid];
m9_2290 -> m9_14  [key=2, style=dotted];
m9_2291 -> m9_2276  [key=0, style=bold, color=blue];
m9_3915 -> m9_3916  [key=0, style=solid];
m9_3916 -> m9_3917  [key=0, style=solid];
m9_3917 -> m9_3915  [key=0, style=bold, color=blue];
m9_992 -> m9_993  [key=0, style=solid];
m9_993 -> m9_994  [key=0, style=solid];
m9_993 -> m9_11  [key=2, style=dotted];
m9_994 -> m9_995  [key=0, style=solid];
m9_994 -> m9_14  [key=2, style=dotted];
m9_995 -> m9_992  [key=0, style=bold, color=blue];
m9_3737 -> m9_3738  [key=0, style=solid];
m9_3738 -> m9_3739  [key=0, style=solid];
m9_3738 -> m9_3742  [key=2, style=dotted];
m9_3738 -> m9_3743  [key=2, style=dotted];
m9_3739 -> m9_3740  [key=0, style=solid];
m9_3739 -> m9_170  [key=2, style=dotted];
m9_3740 -> m9_3741  [key=0, style=solid];
m9_3740 -> m9_12  [key=2, style=dotted];
m9_3741 -> m9_3737  [key=0, style=bold, color=blue];
m9_3113 -> m9_3114  [key=0, style=solid];
m9_3114 -> m9_3115  [key=0, style=solid];
m9_3114 -> m9_789  [key=2, style=dotted];
m9_3114 -> m9_3116  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_3114 -> m9_3117  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_3114 -> m9_3118  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_3114 -> m9_3119  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_3114 -> m9_3120  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_3115 -> m9_3116  [key=0, style=solid];
m9_3116 -> m9_3117  [key=0, style=solid];
m9_3116 -> m9_790  [key=2, style=dotted];
m9_3117 -> m9_3118  [key=0, style=solid];
m9_3118 -> m9_3119  [key=0, style=solid];
m9_3119 -> m9_3120  [key=0, style=solid];
m9_3119 -> m9_11  [key=2, style=dotted];
m9_3120 -> m9_3121  [key=0, style=solid];
m9_3120 -> m9_47  [key=2, style=dotted];
m9_3120 -> m9_3126  [key=2, style=dotted];
m9_3120 -> m9_3127  [key=2, style=dotted];
m9_3120 -> m9_575  [key=2, style=dotted];
m9_3121 -> m9_3122  [key=0, style=solid];
m9_3121 -> m9_12  [key=2, style=dotted];
m9_3122 -> m9_3123  [key=0, style=solid];
m9_3123 -> m9_3124  [key=0, style=solid];
m9_3123 -> m9_47  [key=2, style=dotted];
m9_3123 -> m9_3126  [key=2, style=dotted];
m9_3123 -> m9_3127  [key=2, style=dotted];
m9_3123 -> m9_3128  [key=2, style=dotted];
m9_3123 -> m9_575  [key=2, style=dotted];
m9_3124 -> m9_3125  [key=0, style=solid];
m9_3124 -> m9_12  [key=2, style=dotted];
m9_3125 -> m9_3113  [key=0, style=bold, color=blue];
m9_1309 -> m9_1310  [key=0, style=solid];
m9_1310 -> m9_1311  [key=0, style=solid];
m9_1310 -> m9_1317  [key=2, style=dotted];
m9_1310 -> m9_1312  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_1310 -> m9_1313  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_1310 -> m9_1314  [key=1, style=dashed, color=darkseagreen4, label=aa];
m9_1311 -> m9_1312  [key=0, style=solid];
m9_1312 -> m9_1313  [key=0, style=solid];
m9_1313 -> m9_1314  [key=0, style=solid];
m9_1314 -> m9_1315  [key=0, style=solid];
m9_1314 -> m9_11  [key=2, style=dotted];
m9_1315 -> m9_1316  [key=0, style=solid];
m9_1315 -> m9_14  [key=2, style=dotted];
m9_1316 -> m9_1309  [key=0, style=bold, color=blue];
m9_3744 -> m9_3745  [key=0, style=solid];
m9_3745 -> m9_3746  [key=0, style=solid];
m9_3745 -> m9_24  [key=2, style=dotted];
m9_3745 -> m9_3747  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3746 -> m9_3744  [key=0, style=bold, color=blue];
m9_2316 -> m9_2317  [key=0, style=solid];
m9_2317 -> m9_2318  [key=0, style=solid];
m9_2317 -> m9_46  [key=2, style=dotted];
m9_2317 -> m9_2319  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_2317 -> m9_2320  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_2318 -> m9_2319  [key=0, style=solid];
m9_2318 -> m9_2315  [key=2, style=dotted];
m9_2318 -> m9_667  [key=2, style=dotted];
m9_2319 -> m9_2320  [key=0, style=solid];
m9_2319 -> m9_2315  [key=2, style=dotted];
m9_2319 -> m9_667  [key=2, style=dotted];
m9_2320 -> m9_2321  [key=0, style=solid];
m9_2320 -> m9_170  [key=2, style=dotted];
m9_2320 -> m9_2322  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2321 -> m9_2322  [key=0, style=solid];
m9_2321 -> m9_12  [key=2, style=dotted];
m9_2322 -> m9_2323  [key=0, style=solid];
m9_2322 -> m9_13  [key=2, style=dotted];
m9_2323 -> m9_2324  [key=0, style=solid];
m9_2323 -> m9_14  [key=2, style=dotted];
m9_2324 -> m9_2316  [key=0, style=bold, color=blue];
m9_1855 -> m9_1856  [key=0, style=solid];
m9_1856 -> m9_1857  [key=0, style=solid];
m9_1857 -> m9_1858  [key=0, style=solid];
m9_1857 -> m9_13  [key=2, style=dotted];
m9_1857 -> m9_1859  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_1857 -> m9_1860  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_1857 -> m9_1861  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_1858 -> m9_1859  [key=0, style=solid];
m9_1858 -> m9_14  [key=2, style=dotted];
m9_1859 -> m9_1860  [key=0, style=solid];
m9_1859 -> m9_14  [key=2, style=dotted];
m9_1860 -> m9_1861  [key=0, style=solid];
m9_1860 -> m9_14  [key=2, style=dotted];
m9_1861 -> m9_1862  [key=0, style=solid];
m9_1861 -> m9_14  [key=2, style=dotted];
m9_1862 -> m9_1855  [key=0, style=bold, color=blue];
m9_2821 -> m9_2822  [key=0, style=solid];
m9_2822 -> m9_2823  [key=0, style=solid];
m9_2823 -> m9_2824  [key=0, style=solid];
m9_2823 -> m9_1545  [key=2, style=dotted];
m9_2823 -> m9_2826  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_2824 -> m9_2825  [key=0, style=solid];
m9_2824 -> m9_11  [key=2, style=dotted];
m9_2826 -> m9_2827  [key=0, style=solid];
m9_2826 -> m9_14  [key=2, style=dotted];
m9_2825 -> m9_2826  [key=0, style=solid];
m9_2825 -> m9_13  [key=2, style=dotted];
m9_2827 -> m9_2821  [key=0, style=bold, color=blue];
m9_1973 -> m9_1974  [key=0, style=solid];
m9_1974 -> m9_1975  [key=0, style=solid];
m9_1974 -> m9_1976  [key=2, style=dotted];
m9_1975 -> m9_1973  [key=0, style=bold, color=blue];
m9_2734 -> m9_2735  [key=0, style=solid];
m9_2735 -> m9_2736  [key=0, style=solid];
m9_2736 -> m9_2734  [key=0, style=bold, color=blue];
m9_105 -> m9_106  [key=0, style=solid];
m9_106 -> m9_107  [key=0, style=solid];
m9_107 -> m9_105  [key=0, style=bold, color=blue];
m9_2904 -> m9_2905  [key=0, style=solid];
m9_2905 -> m9_2906  [key=0, style=solid];
m9_2905 -> m9_19  [key=2, style=dotted];
m9_2905 -> m9_2908  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2905 -> m9_2909  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2906 -> m9_2907  [key=0, style=solid];
m9_2906 -> m9_11  [key=2, style=dotted];
m9_2908 -> m9_2909  [key=0, style=solid];
m9_2908 -> m9_14  [key=2, style=dotted];
m9_2909 -> m9_2910  [key=0, style=solid];
m9_2909 -> m9_14  [key=2, style=dotted];
m9_2907 -> m9_2908  [key=0, style=solid];
m9_2907 -> m9_13  [key=2, style=dotted];
m9_2907 -> m9_2909  [key=1, style=dashed, color=darkseagreen4, label=d2];
m9_2910 -> m9_2904  [key=0, style=bold, color=blue];
m9_3847 -> m9_3848  [key=0, style=solid];
m9_3848 -> m9_3849  [key=0, style=solid];
m9_3848 -> m9_3853  [key=2, style=dotted];
m9_3849 -> m9_3850  [key=0, style=solid];
m9_3849 -> m9_170  [key=2, style=dotted];
m9_3849 -> m9_3851  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3850 -> m9_3851  [key=0, style=solid];
m9_3850 -> m9_12  [key=2, style=dotted];
m9_3851 -> m9_3852  [key=0, style=solid];
m9_3851 -> m9_13  [key=2, style=dotted];
m9_3852 -> m9_3847  [key=0, style=bold, color=blue];
m9_1828 -> m9_1829  [key=0, style=solid];
m9_1829 -> m9_1830  [key=0, style=solid];
m9_1829 -> m9_667  [key=2, style=dotted];
m9_1830 -> m9_1828  [key=0, style=bold, color=blue];
m9_3488 -> m9_3489  [key=0, style=solid];
m9_3489 -> m9_3490  [key=0, style=solid];
m9_3489 -> m9_3496  [key=2, style=dotted];
m9_3490 -> m9_3491  [key=0, style=solid];
m9_3490 -> m9_11  [key=2, style=dotted];
m9_3490 -> m9_3492  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3491 -> m9_3492  [key=0, style=solid];
m9_3491 -> m9_14  [key=2, style=dotted];
m9_3492 -> m9_3493  [key=0, style=solid];
m9_3492 -> m9_13  [key=2, style=dotted];
m9_3492 -> m9_3494  [key=1, style=dashed, color=darkseagreen4, label=tuple2];
m9_3493 -> m9_3494  [key=0, style=solid];
m9_3493 -> m9_14  [key=2, style=dotted];
m9_3494 -> m9_3495  [key=0, style=solid];
m9_3494 -> m9_14  [key=2, style=dotted];
m9_3495 -> m9_3488  [key=0, style=bold, color=blue];
m9_3141 -> m9_3142  [key=0, style=solid];
m9_3142 -> m9_3143  [key=0, style=solid];
m9_3143 -> m9_3141  [key=0, style=bold, color=blue];
m9_1899 -> m9_1901  [key=0, style=solid];
m9_1901 -> m9_1902  [key=0, style=solid];
m9_1902 -> m9_1899  [key=0, style=bold, color=blue];
m9_2551 -> m9_2552  [key=0, style=solid];
m9_2552 -> m9_2553  [key=0, style=solid];
m9_2552 -> m9_13  [key=2, style=dotted];
m9_2553 -> m9_2554  [key=0, style=solid];
m9_2553 -> m9_14  [key=2, style=dotted];
m9_2554 -> m9_2551  [key=0, style=bold, color=blue];
m9_3447 -> m9_3448  [key=0, style=solid];
m9_3448 -> m9_3449  [key=0, style=solid];
m9_3449 -> m9_3447  [key=0, style=bold, color=blue];
m9_183 -> m9_184  [key=0, style=solid];
m9_184 -> m9_185  [key=0, style=solid];
m9_184 -> m9_13  [key=2, style=dotted];
m9_184 -> m9_186  [key=1, style=dashed, color=darkseagreen4, label=otc];
m9_184 -> m9_187  [key=1, style=dashed, color=darkseagreen4, label=otc];
m9_184 -> m9_188  [key=1, style=dashed, color=darkseagreen4, label=otc];
m9_184 -> m9_189  [key=1, style=dashed, color=darkseagreen4, label=otc];
m9_185 -> m9_186  [key=0, style=solid];
m9_185 -> m9_191  [key=2, style=dotted];
m9_186 -> m9_187  [key=0, style=solid];
m9_186 -> m9_14  [key=2, style=dotted];
m9_187 -> m9_188  [key=0, style=solid];
m9_187 -> m9_14  [key=2, style=dotted];
m9_188 -> m9_189  [key=0, style=solid];
m9_188 -> m9_14  [key=2, style=dotted];
m9_189 -> m9_190  [key=0, style=solid];
m9_189 -> m9_191  [key=2, style=dotted];
m9_190 -> m9_183  [key=0, style=bold, color=blue];
m9_2453 -> m9_2454  [key=0, style=solid];
m9_2454 -> m9_2455  [key=0, style=solid];
m9_2455 -> m9_2456  [key=0, style=solid];
m9_2455 -> m9_217  [key=2, style=dotted];
m9_2455 -> m9_218  [key=2, style=dotted];
m9_2455 -> m9_2458  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_2456 -> m9_2457  [key=0, style=solid];
m9_2458 -> m9_2459  [key=0, style=solid];
m9_2458 -> m9_2398  [key=2, style=dotted];
m9_2457 -> m9_2458  [key=0, style=solid];
m9_2457 -> m9_219  [key=2, style=dotted];
m9_2459 -> m9_2460  [key=0, style=solid];
m9_2459 -> m9_14  [key=2, style=dotted];
m9_2460 -> m9_2453  [key=0, style=bold, color=blue];
m9_2386 -> m9_2387  [key=0, style=solid];
m9_2387 -> m9_2388  [key=0, style=solid];
m9_2387 -> m9_2396  [key=2, style=dotted];
m9_2387 -> m9_2397  [key=2, style=dotted];
m9_2387 -> m9_790  [key=2, style=dotted];
m9_2387 -> m9_946  [key=2, style=dotted];
m9_2387 -> m9_11  [key=2, style=dotted];
m9_2387 -> m9_2389  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m9_2388 -> m9_2389  [key=0, style=solid];
m9_2388 -> m9_14  [key=2, style=dotted];
m9_2389 -> m9_2390  [key=0, style=solid];
m9_2389 -> m9_217  [key=2, style=dotted];
m9_2389 -> m9_218  [key=2, style=dotted];
m9_2389 -> m9_2392  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_2390 -> m9_2391  [key=0, style=solid];
m9_2392 -> m9_2393  [key=0, style=solid];
m9_2392 -> m9_2398  [key=2, style=dotted];
m9_2392 -> m9_2394  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m9_2391 -> m9_2392  [key=0, style=solid];
m9_2391 -> m9_219  [key=2, style=dotted];
m9_2393 -> m9_2394  [key=0, style=solid];
m9_2393 -> m9_946  [key=2, style=dotted];
m9_2393 -> m9_14  [key=2, style=dotted];
m9_2394 -> m9_2395  [key=0, style=solid];
m9_2394 -> m9_790  [key=2, style=dotted];
m9_2394 -> m9_14  [key=2, style=dotted];
m9_2395 -> m9_2386  [key=0, style=bold, color=blue];
m9_2625 -> m9_2626  [key=0, style=solid];
m9_2626 -> m9_2627  [key=0, style=solid];
m9_2626 -> m9_2629  [key=2, style=dotted];
m9_2626 -> m9_11  [key=2, style=dotted];
m9_2627 -> m9_2628  [key=0, style=solid];
m9_2627 -> m9_13  [key=2, style=dotted];
m9_2628 -> m9_2625  [key=0, style=bold, color=blue];
m9_696 -> m9_697  [key=0, style=solid];
m9_697 -> m9_698  [key=0, style=solid];
m9_697 -> m9_705  [key=2, style=dotted];
m9_697 -> m9_699  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_697 -> m9_700  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_697 -> m9_701  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_697 -> m9_702  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_698 -> m9_699  [key=0, style=solid];
m9_699 -> m9_700  [key=0, style=solid];
m9_700 -> m9_701  [key=0, style=solid];
m9_701 -> m9_702  [key=0, style=solid];
m9_702 -> m9_703  [key=0, style=solid];
m9_702 -> m9_706  [key=2, style=dotted];
m9_703 -> m9_704  [key=0, style=solid];
m9_703 -> m9_12  [key=2, style=dotted];
m9_704 -> m9_696  [key=0, style=bold, color=blue];
m9_3522 -> m9_3523  [key=0, style=solid];
m9_3523 -> m9_3524  [key=0, style=solid];
m9_3523 -> m9_3526  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3523 -> m9_3529  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3524 -> m9_3525  [key=0, style=solid];
m9_3524 -> m9_13  [key=2, style=dotted];
m9_3526 -> m9_3527  [key=0, style=solid];
m9_3526 -> m9_24  [key=2, style=dotted];
m9_3526 -> m9_3528  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3525 -> m9_3526  [key=0, style=solid];
m9_3525 -> m9_2193  [key=2, style=dotted];
m9_3525 -> m9_14  [key=2, style=dotted];
m9_3527 -> m9_3522  [key=0, style=bold, color=blue];
m9_446 -> m9_447  [key=0, style=solid];
m9_447 -> m9_448  [key=0, style=solid];
m9_447 -> m9_507  [key=2, style=dotted];
m9_447 -> m9_508  [key=2, style=dotted];
m9_447 -> m9_219  [key=2, style=dotted];
m9_447 -> m9_449  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_450  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_451  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_452  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_453  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_454  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_455  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_456  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_458  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_459  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_460  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_461  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_462  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_463  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_464  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_465  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_466  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_467  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_468  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_469  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_470  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_471  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_472  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_473  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_474  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_475  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_476  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_477  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_478  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_479  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_480  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_481  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_482  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_483  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_484  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_485  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_486  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_487  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_488  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_489  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_490  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_491  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_492  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_493  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_495  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_496  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_497  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_498  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_500  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_501  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_502  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_503  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_504  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_447 -> m9_505  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m9_448 -> m9_449  [key=0, style=solid];
m9_448 -> m9_370  [key=2, style=dotted];
m9_448 -> m9_450  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m9_449 -> m9_450  [key=0, style=solid];
m9_450 -> m9_451  [key=0, style=solid];
m9_450 -> m9_14  [key=2, style=dotted];
m9_451 -> m9_452  [key=0, style=solid];
m9_452 -> m9_453  [key=0, style=solid];
m9_452 -> m9_14  [key=2, style=dotted];
m9_453 -> m9_454  [key=0, style=solid];
m9_454 -> m9_455  [key=0, style=solid];
m9_454 -> m9_14  [key=2, style=dotted];
m9_455 -> m9_456  [key=0, style=solid];
m9_455 -> m9_371  [key=2, style=dotted];
m9_456 -> m9_457  [key=0, style=solid];
m9_456 -> m9_371  [key=2, style=dotted];
m9_456 -> m9_14  [key=2, style=dotted];
m9_458 -> m9_459  [key=0, style=solid];
m9_459 -> m9_460  [key=0, style=solid];
m9_459 -> m9_14  [key=2, style=dotted];
m9_460 -> m9_461  [key=0, style=solid];
m9_460 -> m9_82  [key=2, style=dotted];
m9_460 -> m9_373  [key=2, style=dotted];
m9_461 -> m9_462  [key=0, style=solid];
m9_461 -> m9_14  [key=2, style=dotted];
m9_462 -> m9_463  [key=0, style=solid];
m9_462 -> m9_374  [key=2, style=dotted];
m9_463 -> m9_464  [key=0, style=solid];
m9_463 -> m9_375  [key=2, style=dotted];
m9_463 -> m9_14  [key=2, style=dotted];
m9_464 -> m9_465  [key=0, style=solid];
m9_465 -> m9_466  [key=0, style=solid];
m9_465 -> m9_14  [key=2, style=dotted];
m9_466 -> m9_467  [key=0, style=solid];
m9_467 -> m9_468  [key=0, style=solid];
m9_467 -> m9_14  [key=2, style=dotted];
m9_468 -> m9_469  [key=0, style=solid];
m9_469 -> m9_470  [key=0, style=solid];
m9_469 -> m9_14  [key=2, style=dotted];
m9_470 -> m9_471  [key=0, style=solid];
m9_471 -> m9_472  [key=0, style=solid];
m9_471 -> m9_14  [key=2, style=dotted];
m9_472 -> m9_473  [key=0, style=solid];
m9_473 -> m9_474  [key=0, style=solid];
m9_473 -> m9_14  [key=2, style=dotted];
m9_474 -> m9_475  [key=0, style=solid];
m9_475 -> m9_476  [key=0, style=solid];
m9_475 -> m9_14  [key=2, style=dotted];
m9_476 -> m9_477  [key=0, style=solid];
m9_477 -> m9_478  [key=0, style=solid];
m9_477 -> m9_14  [key=2, style=dotted];
m9_478 -> m9_479  [key=0, style=solid];
m9_479 -> m9_480  [key=0, style=solid];
m9_479 -> m9_14  [key=2, style=dotted];
m9_480 -> m9_481  [key=0, style=solid];
m9_481 -> m9_482  [key=0, style=solid];
m9_481 -> m9_14  [key=2, style=dotted];
m9_482 -> m9_483  [key=0, style=solid];
m9_483 -> m9_484  [key=0, style=solid];
m9_483 -> m9_14  [key=2, style=dotted];
m9_484 -> m9_485  [key=0, style=solid];
m9_485 -> m9_486  [key=0, style=solid];
m9_485 -> m9_14  [key=2, style=dotted];
m9_486 -> m9_487  [key=0, style=solid];
m9_487 -> m9_488  [key=0, style=solid];
m9_487 -> m9_14  [key=2, style=dotted];
m9_488 -> m9_489  [key=0, style=solid];
m9_489 -> m9_490  [key=0, style=solid];
m9_489 -> m9_14  [key=2, style=dotted];
m9_490 -> m9_491  [key=0, style=solid];
m9_491 -> m9_492  [key=0, style=solid];
m9_491 -> m9_14  [key=2, style=dotted];
m9_492 -> m9_493  [key=0, style=solid];
m9_493 -> m9_494  [key=0, style=solid];
m9_493 -> m9_14  [key=2, style=dotted];
m9_495 -> m9_496  [key=0, style=solid];
m9_496 -> m9_497  [key=0, style=solid];
m9_496 -> m9_14  [key=2, style=dotted];
m9_497 -> m9_498  [key=0, style=solid];
m9_498 -> m9_499  [key=0, style=solid];
m9_498 -> m9_14  [key=2, style=dotted];
m9_500 -> m9_501  [key=0, style=solid];
m9_501 -> m9_502  [key=0, style=solid];
m9_501 -> m9_14  [key=2, style=dotted];
m9_502 -> m9_503  [key=0, style=solid];
m9_503 -> m9_504  [key=0, style=solid];
m9_503 -> m9_14  [key=2, style=dotted];
m9_504 -> m9_505  [key=0, style=solid];
m9_505 -> m9_506  [key=0, style=solid];
m9_505 -> m9_14  [key=2, style=dotted];
m9_457 -> m9_458  [key=0, style=solid];
m9_457 -> m9_372  [key=2, style=dotted];
m9_457 -> m9_459  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m9_494 -> m9_495  [key=0, style=solid];
m9_494 -> m9_376  [key=2, style=dotted];
m9_494 -> m9_496  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m9_499 -> m9_500  [key=0, style=solid];
m9_499 -> m9_377  [key=2, style=dotted];
m9_499 -> m9_501  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m9_506 -> m9_446  [key=0, style=bold, color=blue];
m9_2929 -> m9_2930  [key=0, style=solid];
m9_2930 -> m9_2931  [key=0, style=solid];
m9_2930 -> m9_2934  [key=2, style=dotted];
m9_2930 -> m9_2935  [key=2, style=dotted];
m9_2931 -> m9_2932  [key=0, style=solid];
m9_2931 -> m9_170  [key=2, style=dotted];
m9_2932 -> m9_2933  [key=0, style=solid];
m9_2932 -> m9_12  [key=2, style=dotted];
m9_2933 -> m9_2929  [key=0, style=bold, color=blue];
m9_2599 -> m9_2600  [key=0, style=solid];
m9_2600 -> m9_2601  [key=0, style=solid];
m9_2600 -> m9_2604  [key=2, style=dotted];
m9_2601 -> m9_2602  [key=0, style=solid];
m9_2601 -> m9_170  [key=2, style=dotted];
m9_2602 -> m9_2603  [key=0, style=solid];
m9_2602 -> m9_14  [key=2, style=dotted];
m9_2603 -> m9_2599  [key=0, style=bold, color=blue];
m9_1926 -> m9_1927  [key=0, style=solid];
m9_1926 -> m9_1929  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_1927 -> m9_1928  [key=0, style=solid];
m9_1927 -> m9_1929  [key=0, style=solid];
m9_1929 -> m9_1930  [key=0, style=solid];
m9_1929 -> m9_1931  [key=0, style=solid];
m9_1928 -> m9_1931  [key=0, style=solid];
m9_1928 -> m9_1932  [key=2, style=dotted];
m9_1930 -> m9_1929  [key=0, style=solid];
m9_1930 -> m9_667  [key=2, style=dotted];
m9_1930 -> m9_1930  [key=1, style=dashed, color=darkseagreen4, label=entry];
m9_1931 -> m9_1926  [key=0, style=bold, color=blue];
m9_2703 -> m9_2704  [key=0, style=solid];
m9_2704 -> m9_2705  [key=0, style=solid];
m9_2704 -> m9_2231  [key=2, style=dotted];
m9_2705 -> m9_2703  [key=0, style=bold, color=blue];
m9_3535 -> m9_3536  [key=0, style=solid];
m9_3536 -> m9_3537  [key=0, style=solid];
m9_3536 -> m9_3531  [key=2, style=dotted];
m9_3536 -> m9_3541  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_3537 -> m9_3538  [key=0, style=solid];
m9_3537 -> m9_11  [key=2, style=dotted];
m9_3541 -> m9_3542  [key=0, style=solid];
m9_3541 -> m9_47  [key=2, style=dotted];
m9_3541 -> m9_575  [key=2, style=dotted];
m9_3538 -> m9_3539  [key=0, style=solid];
m9_3538 -> m9_14  [key=2, style=dotted];
m9_3539 -> m9_3540  [key=0, style=solid];
m9_3539 -> m9_1702  [key=2, style=dotted];
m9_3539 -> m9_3541  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_3540 -> m9_3541  [key=0, style=solid];
m9_3542 -> m9_3543  [key=0, style=solid];
m9_3542 -> m9_14  [key=2, style=dotted];
m9_3543 -> m9_3535  [key=0, style=bold, color=blue];
m9_1279 -> m9_1280  [key=0, style=solid];
m9_1280 -> m9_1281  [key=0, style=solid];
m9_1281 -> m9_1282  [key=0, style=solid];
m9_1281 -> m9_13  [key=2, style=dotted];
m9_1281 -> m9_1283  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1281 -> m9_1284  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1282 -> m9_1283  [key=0, style=solid];
m9_1282 -> m9_14  [key=2, style=dotted];
m9_1283 -> m9_1284  [key=0, style=solid];
m9_1283 -> m9_14  [key=2, style=dotted];
m9_1284 -> m9_1285  [key=0, style=solid];
m9_1284 -> m9_14  [key=2, style=dotted];
m9_1285 -> m9_1279  [key=0, style=bold, color=blue];
m9_3237 -> m9_3238  [key=0, style=solid];
m9_3238 -> m9_3239  [key=0, style=solid];
m9_3238 -> m9_46  [key=2, style=dotted];
m9_3238 -> m9_222  [key=2, style=dotted];
m9_3239 -> m9_3240  [key=0, style=solid];
m9_3239 -> m9_170  [key=2, style=dotted];
m9_3239 -> m9_3241  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3240 -> m9_3241  [key=0, style=solid];
m9_3240 -> m9_12  [key=2, style=dotted];
m9_3241 -> m9_3242  [key=0, style=solid];
m9_3241 -> m9_13  [key=2, style=dotted];
m9_3241 -> m9_3243  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_3241 -> m9_3244  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_3242 -> m9_3243  [key=0, style=solid];
m9_3242 -> m9_14  [key=2, style=dotted];
m9_3243 -> m9_3244  [key=0, style=solid];
m9_3243 -> m9_222  [key=2, style=dotted];
m9_3243 -> m9_14  [key=2, style=dotted];
m9_3244 -> m9_3245  [key=0, style=solid];
m9_3244 -> m9_222  [key=2, style=dotted];
m9_3244 -> m9_14  [key=2, style=dotted];
m9_3245 -> m9_3237  [key=0, style=bold, color=blue];
m9_3389 -> m9_3390  [key=0, style=solid];
m9_3390 -> m9_3391  [key=0, style=solid];
m9_3390 -> m9_3393  [key=2, style=dotted];
m9_3390 -> m9_47  [key=2, style=dotted];
m9_3390 -> m9_372  [key=2, style=dotted];
m9_3390 -> m9_49  [key=2, style=dotted];
m9_3391 -> m9_3392  [key=0, style=solid];
m9_3391 -> m9_12  [key=2, style=dotted];
m9_3392 -> m9_3389  [key=0, style=bold, color=blue];
m9_2242 -> m9_2243  [key=0, style=solid];
m9_2243 -> m9_2244  [key=0, style=solid];
m9_2243 -> m9_2231  [key=2, style=dotted];
m9_2244 -> m9_2242  [key=0, style=bold, color=blue];
m9_1641 -> m9_1642  [key=0, style=solid];
m9_1642 -> m9_1643  [key=0, style=solid];
m9_1642 -> m9_1646  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1643 -> m9_1644  [key=0, style=solid];
m9_1643 -> m9_24  [key=2, style=dotted];
m9_1643 -> m9_1645  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1644 -> m9_1641  [key=0, style=bold, color=blue];
m9_1990 -> m9_1991  [key=0, style=solid];
m9_1990 -> m9_1992  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_1990 -> m9_1993  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m9_1990 -> m9_1994  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Person"];
m9_1991 -> m9_1992  [key=0, style=solid];
m9_1992 -> m9_1993  [key=0, style=solid];
m9_1993 -> m9_1994  [key=0, style=solid];
m9_1994 -> m9_1995  [key=0, style=solid];
m9_1995 -> m9_1996  [key=0, style=solid];
m9_1995 -> m9_1142  [key=2, style=dotted];
m9_1996 -> m9_1990  [key=0, style=bold, color=blue];
m9_626 -> m9_627  [key=0, style=solid];
m9_627 -> m9_628  [key=0, style=solid];
m9_628 -> m9_629  [key=0, style=solid];
m9_628 -> m9_13  [key=2, style=dotted];
m9_628 -> m9_630  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_629 -> m9_630  [key=0, style=solid];
m9_629 -> m9_632  [key=2, style=dotted];
m9_630 -> m9_631  [key=0, style=solid];
m9_630 -> m9_14  [key=2, style=dotted];
m9_631 -> m9_626  [key=0, style=bold, color=blue];
m9_1933 -> m9_1934  [key=0, style=solid];
m9_1934 -> m9_1935  [key=0, style=solid];
m9_1934 -> m9_169  [key=2, style=dotted];
m9_1935 -> m9_1933  [key=0, style=bold, color=blue];
m9_2303 -> m9_2304  [key=0, style=solid];
m9_2304 -> m9_2305  [key=0, style=solid];
m9_2305 -> m9_2306  [key=0, style=solid];
m9_2305 -> m9_47  [key=2, style=dotted];
m9_2305 -> m9_143  [key=2, style=dotted];
m9_2305 -> m9_2307  [key=1, style=dashed, color=darkseagreen4, label=dic];
m9_2306 -> m9_2307  [key=0, style=solid];
m9_2306 -> m9_221  [key=2, style=dotted];
m9_2306 -> m9_14  [key=2, style=dotted];
m9_2307 -> m9_2308  [key=0, style=solid];
m9_2307 -> m9_14  [key=2, style=dotted];
m9_2308 -> m9_2303  [key=0, style=bold, color=blue];
m9_2445 -> m9_2446  [key=0, style=solid];
m9_2446 -> m9_2447  [key=0, style=solid];
m9_2446 -> m9_13  [key=2, style=dotted];
m9_2447 -> m9_2448  [key=0, style=solid];
m9_2447 -> m9_14  [key=2, style=dotted];
m9_2448 -> m9_2445  [key=0, style=bold, color=blue];
m9_2180 -> m9_2181  [key=0, style=solid];
m9_2181 -> m9_2182  [key=0, style=solid];
m9_2181 -> m9_2192  [key=2, style=dotted];
m9_2181 -> m9_2183  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_2181 -> m9_2184  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_2181 -> m9_2188  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_2181 -> m9_2189  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_2182 -> m9_2183  [key=0, style=solid];
m9_2182 -> m9_2193  [key=2, style=dotted];
m9_2183 -> m9_2184  [key=0, style=solid];
m9_2183 -> m9_2193  [key=2, style=dotted];
m9_2184 -> m9_2185  [key=0, style=solid];
m9_2184 -> m9_170  [key=2, style=dotted];
m9_2184 -> m9_2186  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2184 -> m9_2187  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2188 -> m9_2189  [key=0, style=solid];
m9_2188 -> m9_2194  [key=2, style=dotted];
m9_2188 -> m9_14  [key=2, style=dotted];
m9_2189 -> m9_2190  [key=0, style=solid];
m9_2189 -> m9_2194  [key=2, style=dotted];
m9_2189 -> m9_14  [key=2, style=dotted];
m9_2185 -> m9_2186  [key=0, style=solid];
m9_2186 -> m9_2187  [key=0, style=solid];
m9_2186 -> m9_12  [key=2, style=dotted];
m9_2187 -> m9_2188  [key=0, style=solid];
m9_2187 -> m9_13  [key=2, style=dotted];
m9_2187 -> m9_2189  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m9_2187 -> m9_2190  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m9_2190 -> m9_2191  [key=0, style=solid];
m9_2190 -> m9_191  [key=2, style=dotted];
m9_2191 -> m9_2180  [key=0, style=bold, color=blue];
m9_835 -> m9_836  [key=0, style=solid];
m9_836 -> m9_837  [key=0, style=solid];
m9_837 -> m9_838  [key=0, style=solid];
m9_837 -> m9_772  [key=2, style=dotted];
m9_837 -> m9_839  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_838 -> m9_839  [key=0, style=solid];
m9_838 -> m9_834  [key=2, style=dotted];
m9_838 -> m9_14  [key=2, style=dotted];
m9_839 -> m9_840  [key=0, style=solid];
m9_839 -> m9_834  [key=2, style=dotted];
m9_839 -> m9_12  [key=2, style=dotted];
m9_840 -> m9_835  [key=0, style=bold, color=blue];
m9_1939 -> m9_1940  [key=0, style=solid];
m9_1940 -> m9_1941  [key=0, style=solid];
m9_1940 -> m9_1942  [key=2, style=dotted];
m9_1941 -> m9_1939  [key=0, style=bold, color=blue];
m9_1189 -> m9_1190  [key=0, style=solid];
m9_1190 -> m9_1191  [key=0, style=solid];
m9_1190 -> m9_1199  [key=2, style=dotted];
m9_1190 -> m9_1192  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_1190 -> m9_1193  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_1191 -> m9_1192  [key=0, style=solid];
m9_1191 -> m9_1123  [key=2, style=dotted];
m9_1192 -> m9_1193  [key=0, style=solid];
m9_1192 -> m9_1123  [key=2, style=dotted];
m9_1193 -> m9_1194  [key=0, style=solid];
m9_1193 -> m9_1131  [key=2, style=dotted];
m9_1193 -> m9_1132  [key=2, style=dotted];
m9_1193 -> m9_1195  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1194 -> m9_1195  [key=0, style=solid];
m9_1194 -> m9_14  [key=2, style=dotted];
m9_1195 -> m9_1196  [key=0, style=solid];
m9_1195 -> m9_1131  [key=2, style=dotted];
m9_1195 -> m9_83  [key=2, style=dotted];
m9_1195 -> m9_1197  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_1196 -> m9_1197  [key=0, style=solid];
m9_1196 -> m9_14  [key=2, style=dotted];
m9_1197 -> m9_1198  [key=0, style=solid];
m9_1197 -> m9_14  [key=2, style=dotted];
m9_1198 -> m9_1189  [key=0, style=bold, color=blue];
m9_1703 -> m9_1704  [key=0, style=solid];
m9_1704 -> m9_1705  [key=0, style=solid];
m9_1704 -> m9_24  [key=2, style=dotted];
m9_1704 -> m9_1706  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1705 -> m9_1703  [key=0, style=bold, color=blue];
m9_2494 -> m9_2495  [key=0, style=solid];
m9_2495 -> m9_2494  [key=0, style=bold, color=blue];
m9_2122 -> m9_2169  [key=0, style=solid];
m9_2122 -> m9_2170  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2122 -> m9_2171  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2122 -> m9_2172  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2122 -> m9_2173  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2122 -> m9_2174  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2122 -> m9_2175  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2122 -> m9_2176  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2122 -> m9_2177  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2122 -> m9_2178  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2169 -> m9_2170  [key=0, style=solid];
m9_2170 -> m9_2171  [key=0, style=solid];
m9_2171 -> m9_2172  [key=0, style=solid];
m9_2172 -> m9_2173  [key=0, style=solid];
m9_2173 -> m9_2174  [key=0, style=solid];
m9_2174 -> m9_2175  [key=0, style=solid];
m9_2175 -> m9_2176  [key=0, style=solid];
m9_2176 -> m9_2177  [key=0, style=solid];
m9_2177 -> m9_2178  [key=0, style=solid];
m9_2178 -> m9_2179  [key=0, style=solid];
m9_2179 -> m9_2122  [key=0, style=bold, color=blue];
m9_684 -> m9_685  [key=0, style=solid];
m9_685 -> m9_686  [key=0, style=solid];
m9_685 -> m9_688  [key=2, style=dotted];
m9_686 -> m9_687  [key=0, style=solid];
m9_686 -> m9_665  [key=2, style=dotted];
m9_686 -> m9_689  [key=2, style=dotted];
m9_687 -> m9_684  [key=0, style=bold, color=blue];
m9_3158 -> m9_3159  [key=0, style=solid];
m9_3159 -> m9_3160  [key=0, style=solid];
m9_3159 -> m9_669  [key=2, style=dotted];
m9_3159 -> m9_3164  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_3160 -> m9_3161  [key=0, style=solid];
m9_3160 -> m9_3171  [key=2, style=dotted];
m9_3160 -> m9_3162  [key=1, style=dashed, color=darkseagreen4, label=writer];
m9_3160 -> m9_3163  [key=1, style=dashed, color=darkseagreen4, label=writer];
m9_3164 -> m9_3165  [key=0, style=solid];
m9_3164 -> m9_752  [key=2, style=dotted];
m9_3161 -> m9_3162  [key=0, style=solid];
m9_3161 -> m9_3172  [key=2, style=dotted];
m9_3162 -> m9_3163  [key=0, style=solid];
m9_3162 -> m9_3173  [key=2, style=dotted];
m9_3163 -> m9_3164  [key=0, style=solid];
m9_3163 -> m9_3174  [key=2, style=dotted];
m9_3165 -> m9_3166  [key=0, style=solid];
m9_3165 -> m9_3175  [key=2, style=dotted];
m9_3165 -> m9_904  [key=2, style=dotted];
m9_3166 -> m9_3167  [key=0, style=solid];
m9_3166 -> m9_3176  [key=2, style=dotted];
m9_3166 -> m9_3169  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_3167 -> m9_3168  [key=0, style=solid];
m9_3169 -> m9_3170  [key=0, style=solid];
m9_3169 -> m9_605  [key=2, style=dotted];
m9_3169 -> m9_12  [key=2, style=dotted];
m9_3168 -> m9_3169  [key=0, style=solid];
m9_3168 -> m9_221  [key=2, style=dotted];
m9_3168 -> m9_14  [key=2, style=dotted];
m9_3170 -> m9_3158  [key=0, style=bold, color=blue];
m9_1213 -> m9_1214  [key=0, style=solid];
m9_1214 -> m9_1215  [key=0, style=solid];
m9_1215 -> m9_1216  [key=0, style=solid];
m9_1215 -> m9_11  [key=2, style=dotted];
m9_1216 -> m9_1217  [key=0, style=solid];
m9_1216 -> m9_14  [key=2, style=dotted];
m9_1217 -> m9_1218  [key=0, style=solid];
m9_1217 -> m9_11  [key=2, style=dotted];
m9_1218 -> m9_1219  [key=0, style=solid];
m9_1218 -> m9_14  [key=2, style=dotted];
m9_1219 -> m9_1213  [key=0, style=bold, color=blue];
m9_1553 -> m9_1554  [key=0, style=solid];
m9_1554 -> m9_1555  [key=0, style=solid];
m9_1554 -> m9_1558  [key=2, style=dotted];
m9_1554 -> m9_19  [key=2, style=dotted];
m9_1555 -> m9_1556  [key=0, style=solid];
m9_1555 -> m9_170  [key=2, style=dotted];
m9_1556 -> m9_1557  [key=0, style=solid];
m9_1556 -> m9_12  [key=2, style=dotted];
m9_1557 -> m9_1553  [key=0, style=bold, color=blue];
m9_2616 -> m9_2617  [key=0, style=solid];
m9_2617 -> m9_2618  [key=0, style=solid];
m9_2618 -> m9_2616  [key=0, style=bold, color=blue];
m9_3601 -> m9_3602  [key=0, style=solid];
m9_3602 -> m9_3603  [key=0, style=solid];
m9_3603 -> m9_3604  [key=0, style=solid];
m9_3603 -> m9_13  [key=2, style=dotted];
m9_3604 -> m9_3605  [key=0, style=solid];
m9_3604 -> m9_14  [key=2, style=dotted];
m9_3605 -> m9_3601  [key=0, style=bold, color=blue];
m9_2061 -> m9_2062  [key=0, style=solid];
m9_2062 -> m9_2063  [key=0, style=solid];
m9_2062 -> m9_1349  [key=2, style=dotted];
m9_2062 -> m9_2064  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2062 -> m9_2065  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2062 -> m9_2066  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2062 -> m9_2070  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2063 -> m9_2064  [key=0, style=solid];
m9_2063 -> m9_938  [key=2, style=dotted];
m9_2064 -> m9_2065  [key=0, style=solid];
m9_2065 -> m9_2066  [key=0, style=solid];
m9_2066 -> m9_2067  [key=0, style=solid];
m9_2070 -> m9_2071  [key=0, style=solid];
m9_2070 -> m9_1990  [key=2, style=dotted];
m9_2067 -> m9_2068  [key=0, style=solid];
m9_2067 -> m9_222  [key=2, style=dotted];
m9_2067 -> m9_946  [key=2, style=dotted];
m9_2067 -> m9_2070  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_2067 -> m9_2076  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_2068 -> m9_2069  [key=0, style=solid];
m9_2076 -> m9_2077  [key=0, style=solid];
m9_2076 -> m9_14  [key=2, style=dotted];
m9_2069 -> m9_2070  [key=0, style=solid];
m9_2069 -> m9_2072  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m9_2072 -> m9_2073  [key=0, style=solid];
m9_2072 -> m9_12  [key=2, style=dotted];
m9_2071 -> m9_2072  [key=0, style=solid];
m9_2071 -> m9_170  [key=2, style=dotted];
m9_2071 -> m9_2073  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2073 -> m9_2074  [key=0, style=solid];
m9_2073 -> m9_13  [key=2, style=dotted];
m9_2073 -> m9_2075  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2073 -> m9_2076  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2073 -> m9_2077  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2073 -> m9_2078  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2073 -> m9_2079  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2074 -> m9_2075  [key=0, style=solid];
m9_2074 -> m9_14  [key=2, style=dotted];
m9_2075 -> m9_2076  [key=0, style=solid];
m9_2075 -> m9_14  [key=2, style=dotted];
m9_2077 -> m9_2078  [key=0, style=solid];
m9_2077 -> m9_14  [key=2, style=dotted];
m9_2078 -> m9_2079  [key=0, style=solid];
m9_2078 -> m9_14  [key=2, style=dotted];
m9_2079 -> m9_2080  [key=0, style=solid];
m9_2079 -> m9_14  [key=2, style=dotted];
m9_2080 -> m9_2061  [key=0, style=bold, color=blue];
m9_2911 -> m9_2912  [key=0, style=solid];
m9_2912 -> m9_2913  [key=0, style=solid];
m9_2912 -> m9_2921  [key=2, style=dotted];
m9_2912 -> m9_2914  [key=1, style=dashed, color=darkseagreen4, label=b];
m9_2912 -> m9_2916  [key=1, style=dashed, color=darkseagreen4, label=b];
m9_2913 -> m9_2914  [key=0, style=solid];
m9_2914 -> m9_2915  [key=0, style=solid];
m9_2916 -> m9_2917  [key=0, style=solid];
m9_2916 -> m9_11  [key=2, style=dotted];
m9_2916 -> m9_2918  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2915 -> m9_2916  [key=0, style=solid];
m9_2917 -> m9_2918  [key=0, style=solid];
m9_2917 -> m9_14  [key=2, style=dotted];
m9_2918 -> m9_2919  [key=0, style=solid];
m9_2918 -> m9_13  [key=2, style=dotted];
m9_2919 -> m9_2920  [key=0, style=solid];
m9_2919 -> m9_14  [key=2, style=dotted];
m9_2920 -> m9_2911  [key=0, style=bold, color=blue];
m9_1270 -> m9_1271  [key=0, style=solid];
m9_1271 -> m9_1272  [key=0, style=solid];
m9_1271 -> m9_1278  [key=2, style=dotted];
m9_1271 -> m9_938  [key=2, style=dotted];
m9_1272 -> m9_1273  [key=0, style=solid];
m9_1272 -> m9_170  [key=2, style=dotted];
m9_1272 -> m9_1274  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1273 -> m9_1274  [key=0, style=solid];
m9_1273 -> m9_12  [key=2, style=dotted];
m9_1274 -> m9_1275  [key=0, style=solid];
m9_1274 -> m9_13  [key=2, style=dotted];
m9_1274 -> m9_1276  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_1275 -> m9_1276  [key=0, style=solid];
m9_1275 -> m9_14  [key=2, style=dotted];
m9_1276 -> m9_1277  [key=0, style=solid];
m9_1276 -> m9_938  [key=2, style=dotted];
m9_1276 -> m9_14  [key=2, style=dotted];
m9_1277 -> m9_1270  [key=0, style=bold, color=blue];
m9_2664 -> m9_2665  [key=0, style=solid];
m9_2665 -> m9_2666  [key=0, style=solid];
m9_2666 -> m9_2667  [key=0, style=solid];
m9_2666 -> m9_19  [key=2, style=dotted];
m9_2667 -> m9_2664  [key=0, style=bold, color=blue];
m9_1874 -> m9_1875  [key=0, style=solid];
m9_1875 -> m9_1876  [key=0, style=solid];
m9_1875 -> m9_1879  [key=2, style=dotted];
m9_1876 -> m9_1877  [key=0, style=solid];
m9_1876 -> m9_170  [key=2, style=dotted];
m9_1877 -> m9_1878  [key=0, style=solid];
m9_1877 -> m9_12  [key=2, style=dotted];
m9_1878 -> m9_1874  [key=0, style=bold, color=blue];
m9_1445 -> m9_1446  [key=0, style=solid];
m9_1446 -> m9_1447  [key=0, style=solid];
m9_1447 -> m9_1448  [key=0, style=solid];
m9_1447 -> m9_24  [key=2, style=dotted];
m9_1447 -> m9_1449  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1448 -> m9_1445  [key=0, style=bold, color=blue];
m9_3979 -> m9_3980  [key=0, style=solid];
m9_3980 -> m9_3981  [key=0, style=solid];
m9_3981 -> m9_3982  [key=0, style=solid];
m9_3982 -> m9_3979  [key=0, style=bold, color=blue];
m9_3865 -> m9_3866  [key=0, style=solid];
m9_3866 -> m9_3867  [key=0, style=solid];
m9_3867 -> m9_3865  [key=0, style=bold, color=blue];
m9_1286 -> m9_1287  [key=0, style=solid];
m9_1287 -> m9_1288  [key=0, style=solid];
m9_1288 -> m9_1289  [key=0, style=solid];
m9_1288 -> m9_13  [key=2, style=dotted];
m9_1289 -> m9_1290  [key=0, style=solid];
m9_1289 -> m9_1292  [key=0, style=solid];
m9_1289 -> m9_1293  [key=2, style=dotted];
m9_1290 -> m9_1291  [key=0, style=solid];
m9_1291 -> m9_1292  [key=0, style=solid];
m9_1291 -> m9_1294  [key=2, style=dotted];
m9_1291 -> m9_302  [key=2, style=dotted];
m9_1292 -> m9_1286  [key=0, style=bold, color=blue];
m9_3466 -> m9_3467  [key=0, style=solid];
m9_3467 -> m9_3468  [key=0, style=solid];
m9_3467 -> m9_19  [key=2, style=dotted];
m9_3467 -> m9_938  [key=2, style=dotted];
m9_3467 -> m9_222  [key=2, style=dotted];
m9_3467 -> m9_946  [key=2, style=dotted];
m9_3468 -> m9_3469  [key=0, style=solid];
m9_3468 -> m9_47  [key=2, style=dotted];
m9_3468 -> m9_374  [key=2, style=dotted];
m9_3468 -> m9_49  [key=2, style=dotted];
m9_3469 -> m9_3470  [key=0, style=solid];
m9_3469 -> m9_12  [key=2, style=dotted];
m9_3470 -> m9_3466  [key=0, style=bold, color=blue];
m9_3873 -> m9_3874  [key=0, style=solid];
m9_3874 -> m9_3875  [key=0, style=solid];
m9_3874 -> m9_2231  [key=2, style=dotted];
m9_3875 -> m9_3873  [key=0, style=bold, color=blue];
m9_1936 -> m9_1937  [key=0, style=solid];
m9_1937 -> m9_1938  [key=0, style=solid];
m9_1937 -> m9_667  [key=2, style=dotted];
m9_1938 -> m9_1936  [key=0, style=bold, color=blue];
m9_681 -> m9_682  [key=0, style=solid];
m9_682 -> m9_683  [key=0, style=solid];
m9_683 -> m9_681  [key=0, style=bold, color=blue];
m9_1750 -> m9_1751  [key=0, style=solid];
m9_1751 -> m9_1752  [key=0, style=solid];
m9_1751 -> m9_1763  [key=2, style=dotted];
m9_1751 -> m9_1753  [key=1, style=dashed, color=darkseagreen4, label=f];
m9_1751 -> m9_1754  [key=1, style=dashed, color=darkseagreen4, label=f];
m9_1751 -> m9_1755  [key=1, style=dashed, color=darkseagreen4, label=f];
m9_1752 -> m9_1753  [key=0, style=solid];
m9_1752 -> m9_1764  [key=2, style=dotted];
m9_1752 -> m9_1729  [key=2, style=dotted];
m9_1753 -> m9_1754  [key=0, style=solid];
m9_1753 -> m9_1764  [key=2, style=dotted];
m9_1753 -> m9_1729  [key=2, style=dotted];
m9_1754 -> m9_1755  [key=0, style=solid];
m9_1754 -> m9_1764  [key=2, style=dotted];
m9_1754 -> m9_1729  [key=2, style=dotted];
m9_1755 -> m9_1756  [key=0, style=solid];
m9_1755 -> m9_170  [key=2, style=dotted];
m9_1755 -> m9_1757  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1756 -> m9_1757  [key=0, style=solid];
m9_1756 -> m9_12  [key=2, style=dotted];
m9_1757 -> m9_1758  [key=0, style=solid];
m9_1757 -> m9_13  [key=2, style=dotted];
m9_1757 -> m9_1759  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m9_1757 -> m9_1760  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m9_1757 -> m9_1761  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m9_1758 -> m9_1759  [key=0, style=solid];
m9_1758 -> m9_14  [key=2, style=dotted];
m9_1759 -> m9_1760  [key=0, style=solid];
m9_1759 -> m9_14  [key=2, style=dotted];
m9_1760 -> m9_1761  [key=0, style=solid];
m9_1760 -> m9_14  [key=2, style=dotted];
m9_1761 -> m9_1762  [key=0, style=solid];
m9_1761 -> m9_14  [key=2, style=dotted];
m9_1762 -> m9_1750  [key=0, style=bold, color=blue];
m9_2029 -> m9_2030  [key=0, style=solid];
m9_2029 -> m9_2031  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2032  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2033  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2034  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2035  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2036  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2037  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2038  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2039  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2040  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2041  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2042  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2043  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2044  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2045  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2046  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2029 -> m9_2047  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_2030 -> m9_2031  [key=0, style=solid];
m9_2030 -> m9_536  [key=2, style=dotted];
m9_2031 -> m9_2032  [key=0, style=solid];
m9_2031 -> m9_537  [key=2, style=dotted];
m9_2032 -> m9_2033  [key=0, style=solid];
m9_2032 -> m9_536  [key=2, style=dotted];
m9_2033 -> m9_2034  [key=0, style=solid];
m9_2033 -> m9_536  [key=2, style=dotted];
m9_2034 -> m9_2035  [key=0, style=solid];
m9_2034 -> m9_536  [key=2, style=dotted];
m9_2035 -> m9_2036  [key=0, style=solid];
m9_2035 -> m9_536  [key=2, style=dotted];
m9_2036 -> m9_2037  [key=0, style=solid];
m9_2036 -> m9_2049  [key=2, style=dotted];
m9_2037 -> m9_2038  [key=0, style=solid];
m9_2037 -> m9_2050  [key=2, style=dotted];
m9_2038 -> m9_2039  [key=0, style=solid];
m9_2038 -> m9_2051  [key=2, style=dotted];
m9_2039 -> m9_2040  [key=0, style=solid];
m9_2039 -> m9_2052  [key=2, style=dotted];
m9_2040 -> m9_2041  [key=0, style=solid];
m9_2040 -> m9_2053  [key=2, style=dotted];
m9_2041 -> m9_2042  [key=0, style=solid];
m9_2041 -> m9_2054  [key=2, style=dotted];
m9_2042 -> m9_2043  [key=0, style=solid];
m9_2042 -> m9_2055  [key=2, style=dotted];
m9_2043 -> m9_2044  [key=0, style=solid];
m9_2043 -> m9_2056  [key=2, style=dotted];
m9_2044 -> m9_2045  [key=0, style=solid];
m9_2044 -> m9_2057  [key=2, style=dotted];
m9_2045 -> m9_2046  [key=0, style=solid];
m9_2045 -> m9_2058  [key=2, style=dotted];
m9_2046 -> m9_2047  [key=0, style=solid];
m9_2046 -> m9_2059  [key=2, style=dotted];
m9_2047 -> m9_2048  [key=0, style=solid];
m9_2047 -> m9_2060  [key=2, style=dotted];
m9_2048 -> m9_2029  [key=0, style=bold, color=blue];
m9_2758 -> m9_2759  [key=0, style=solid];
m9_2759 -> m9_2760  [key=0, style=solid];
m9_2759 -> m9_19  [key=2, style=dotted];
m9_2760 -> m9_2758  [key=0, style=bold, color=blue];
m9_1255 -> m9_1256  [key=0, style=solid];
m9_1256 -> m9_1257  [key=0, style=solid];
m9_1256 -> m9_1259  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m9_1257 -> m9_1258  [key=0, style=solid];
m9_1257 -> m9_1269  [key=2, style=dotted];
m9_1259 -> m9_1260  [key=0, style=solid];
m9_1259 -> m9_14  [key=2, style=dotted];
m9_1258 -> m9_1259  [key=0, style=solid];
m9_1258 -> m9_11  [key=2, style=dotted];
m9_1258 -> m9_1260  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1260 -> m9_1261  [key=0, style=solid];
m9_1260 -> m9_13  [key=2, style=dotted];
m9_1261 -> m9_1262  [key=0, style=solid];
m9_1261 -> m9_14  [key=2, style=dotted];
m9_1262 -> m9_1263  [key=0, style=solid];
m9_1262 -> m9_1265  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m9_1263 -> m9_1264  [key=0, style=solid];
m9_1263 -> m9_1269  [key=2, style=dotted];
m9_1265 -> m9_1266  [key=0, style=solid];
m9_1265 -> m9_14  [key=2, style=dotted];
m9_1264 -> m9_1265  [key=0, style=solid];
m9_1264 -> m9_11  [key=2, style=dotted];
m9_1264 -> m9_1266  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1266 -> m9_1267  [key=0, style=solid];
m9_1266 -> m9_13  [key=2, style=dotted];
m9_1267 -> m9_1268  [key=0, style=solid];
m9_1267 -> m9_14  [key=2, style=dotted];
m9_1268 -> m9_1255  [key=0, style=bold, color=blue];
m9_3725 -> m9_3726  [key=0, style=solid];
m9_3726 -> m9_3727  [key=0, style=solid];
m9_3726 -> m9_3691  [key=2, style=dotted];
m9_3727 -> m9_3725  [key=0, style=bold, color=blue];
m9_3476 -> m9_3477  [key=0, style=solid];
m9_3477 -> m9_3478  [key=0, style=solid];
m9_3477 -> m9_19  [key=2, style=dotted];
m9_3477 -> m9_938  [key=2, style=dotted];
m9_3477 -> m9_222  [key=2, style=dotted];
m9_3477 -> m9_946  [key=2, style=dotted];
m9_3477 -> m9_3481  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_3478 -> m9_3479  [key=0, style=solid];
m9_3478 -> m9_2808  [key=2, style=dotted];
m9_3478 -> m9_3485  [key=1, style=dashed, color=darkseagreen4, label=sw];
m9_3481 -> m9_3482  [key=0, style=solid];
m9_3481 -> m9_2845  [key=2, style=dotted];
m9_3479 -> m9_3480  [key=0, style=solid];
m9_3479 -> m9_2809  [key=2, style=dotted];
m9_3479 -> m9_3481  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3479 -> m9_3482  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3479 -> m9_3483  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3479 -> m9_3484  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3485 -> m9_3486  [key=0, style=solid];
m9_3485 -> m9_2813  [key=2, style=dotted];
m9_3480 -> m9_3481  [key=0, style=solid];
m9_3480 -> m9_47  [key=2, style=dotted];
m9_3480 -> m9_374  [key=2, style=dotted];
m9_3480 -> m9_668  [key=2, style=dotted];
m9_3482 -> m9_3483  [key=0, style=solid];
m9_3482 -> m9_191  [key=2, style=dotted];
m9_3483 -> m9_3484  [key=0, style=solid];
m9_3483 -> m9_14  [key=2, style=dotted];
m9_3484 -> m9_3485  [key=0, style=solid];
m9_3484 -> m9_14  [key=2, style=dotted];
m9_3486 -> m9_3487  [key=0, style=solid];
m9_3486 -> m9_12  [key=2, style=dotted];
m9_3487 -> m9_3476  [key=0, style=bold, color=blue];
m9_1620 -> m9_1621  [key=0, style=solid];
m9_1621 -> m9_1622  [key=0, style=solid];
m9_1621 -> m9_1625  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1622 -> m9_1623  [key=0, style=solid];
m9_1622 -> m9_24  [key=2, style=dotted];
m9_1622 -> m9_1624  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1623 -> m9_1620  [key=0, style=bold, color=blue];
m9_2684 -> m9_2685  [key=0, style=solid];
m9_2685 -> m9_2686  [key=0, style=solid];
m9_2685 -> m9_2680  [key=2, style=dotted];
m9_2685 -> m9_2687  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2685 -> m9_2688  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2685 -> m9_2691  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2685 -> m9_2692  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2686 -> m9_2687  [key=0, style=solid];
m9_2686 -> m9_2696  [key=2, style=dotted];
m9_2687 -> m9_2688  [key=0, style=solid];
m9_2687 -> m9_2696  [key=2, style=dotted];
m9_2688 -> m9_2689  [key=0, style=solid];
m9_2688 -> m9_170  [key=2, style=dotted];
m9_2688 -> m9_2690  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2691 -> m9_2692  [key=0, style=solid];
m9_2691 -> m9_14  [key=2, style=dotted];
m9_2692 -> m9_2693  [key=0, style=solid];
m9_2692 -> m9_14  [key=2, style=dotted];
m9_2689 -> m9_2690  [key=0, style=solid];
m9_2689 -> m9_12  [key=2, style=dotted];
m9_2690 -> m9_2691  [key=0, style=solid];
m9_2690 -> m9_13  [key=2, style=dotted];
m9_2690 -> m9_2692  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2690 -> m9_2693  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2690 -> m9_2694  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2693 -> m9_2694  [key=0, style=solid];
m9_2693 -> m9_14  [key=2, style=dotted];
m9_2694 -> m9_2695  [key=0, style=solid];
m9_2694 -> m9_14  [key=2, style=dotted];
m9_2695 -> m9_2684  [key=0, style=bold, color=blue];
m9_2123 -> m9_2124  [key=0, style=solid];
m9_2124 -> m9_2125  [key=0, style=solid];
m9_2124 -> m9_13  [key=2, style=dotted];
m9_2124 -> m9_2126  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_2124 -> m9_2127  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_2124 -> m9_2128  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_2124 -> m9_2129  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_2124 -> m9_2130  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_2124 -> m9_2131  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_2124 -> m9_2132  [key=1, style=dashed, color=darkseagreen4, label=myA];
m9_2125 -> m9_2126  [key=0, style=solid];
m9_2125 -> m9_2153  [key=2, style=dotted];
m9_2125 -> m9_2154  [key=2, style=dotted];
m9_2125 -> m9_14  [key=2, style=dotted];
m9_2126 -> m9_2127  [key=0, style=solid];
m9_2126 -> m9_2153  [key=2, style=dotted];
m9_2126 -> m9_2154  [key=2, style=dotted];
m9_2126 -> m9_14  [key=2, style=dotted];
m9_2127 -> m9_2128  [key=0, style=solid];
m9_2127 -> m9_2155  [key=2, style=dotted];
m9_2127 -> m9_2154  [key=2, style=dotted];
m9_2127 -> m9_14  [key=2, style=dotted];
m9_2128 -> m9_2129  [key=0, style=solid];
m9_2128 -> m9_2155  [key=2, style=dotted];
m9_2128 -> m9_2154  [key=2, style=dotted];
m9_2128 -> m9_14  [key=2, style=dotted];
m9_2129 -> m9_2130  [key=0, style=solid];
m9_2129 -> m9_2155  [key=2, style=dotted];
m9_2129 -> m9_2154  [key=2, style=dotted];
m9_2129 -> m9_14  [key=2, style=dotted];
m9_2130 -> m9_2131  [key=0, style=solid];
m9_2130 -> m9_2155  [key=2, style=dotted];
m9_2130 -> m9_2154  [key=2, style=dotted];
m9_2130 -> m9_14  [key=2, style=dotted];
m9_2131 -> m9_2132  [key=0, style=solid];
m9_2131 -> m9_2155  [key=2, style=dotted];
m9_2131 -> m9_2154  [key=2, style=dotted];
m9_2131 -> m9_14  [key=2, style=dotted];
m9_2132 -> m9_2133  [key=0, style=solid];
m9_2132 -> m9_2155  [key=2, style=dotted];
m9_2132 -> m9_2154  [key=2, style=dotted];
m9_2132 -> m9_14  [key=2, style=dotted];
m9_2133 -> m9_2134  [key=0, style=solid];
m9_2133 -> m9_13  [key=2, style=dotted];
m9_2133 -> m9_2135  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2136  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2137  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2138  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2139  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2140  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2141  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2142  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2143  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2144  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2145  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2146  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2147  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2148  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2149  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2150  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2133 -> m9_2151  [key=1, style=dashed, color=darkseagreen4, label=myB];
m9_2134 -> m9_2135  [key=0, style=solid];
m9_2134 -> m9_2153  [key=2, style=dotted];
m9_2134 -> m9_2154  [key=2, style=dotted];
m9_2134 -> m9_14  [key=2, style=dotted];
m9_2135 -> m9_2136  [key=0, style=solid];
m9_2135 -> m9_2153  [key=2, style=dotted];
m9_2135 -> m9_2154  [key=2, style=dotted];
m9_2135 -> m9_14  [key=2, style=dotted];
m9_2136 -> m9_2137  [key=0, style=solid];
m9_2136 -> m9_2155  [key=2, style=dotted];
m9_2136 -> m9_2154  [key=2, style=dotted];
m9_2136 -> m9_14  [key=2, style=dotted];
m9_2137 -> m9_2138  [key=0, style=solid];
m9_2137 -> m9_2155  [key=2, style=dotted];
m9_2137 -> m9_2154  [key=2, style=dotted];
m9_2137 -> m9_14  [key=2, style=dotted];
m9_2138 -> m9_2139  [key=0, style=solid];
m9_2138 -> m9_2155  [key=2, style=dotted];
m9_2138 -> m9_2154  [key=2, style=dotted];
m9_2138 -> m9_14  [key=2, style=dotted];
m9_2139 -> m9_2140  [key=0, style=solid];
m9_2139 -> m9_2155  [key=2, style=dotted];
m9_2139 -> m9_2154  [key=2, style=dotted];
m9_2139 -> m9_14  [key=2, style=dotted];
m9_2140 -> m9_2141  [key=0, style=solid];
m9_2140 -> m9_2155  [key=2, style=dotted];
m9_2140 -> m9_2154  [key=2, style=dotted];
m9_2140 -> m9_14  [key=2, style=dotted];
m9_2141 -> m9_2142  [key=0, style=solid];
m9_2141 -> m9_2155  [key=2, style=dotted];
m9_2141 -> m9_2154  [key=2, style=dotted];
m9_2141 -> m9_14  [key=2, style=dotted];
m9_2142 -> m9_2143  [key=0, style=solid];
m9_2142 -> m9_14  [key=2, style=dotted];
m9_2143 -> m9_2144  [key=0, style=solid];
m9_2143 -> m9_14  [key=2, style=dotted];
m9_2144 -> m9_2145  [key=0, style=solid];
m9_2144 -> m9_14  [key=2, style=dotted];
m9_2145 -> m9_2146  [key=0, style=solid];
m9_2145 -> m9_14  [key=2, style=dotted];
m9_2146 -> m9_2147  [key=0, style=solid];
m9_2146 -> m9_2155  [key=2, style=dotted];
m9_2146 -> m9_2154  [key=2, style=dotted];
m9_2146 -> m9_14  [key=2, style=dotted];
m9_2147 -> m9_2148  [key=0, style=solid];
m9_2147 -> m9_2155  [key=2, style=dotted];
m9_2147 -> m9_2154  [key=2, style=dotted];
m9_2147 -> m9_14  [key=2, style=dotted];
m9_2148 -> m9_2149  [key=0, style=solid];
m9_2148 -> m9_14  [key=2, style=dotted];
m9_2149 -> m9_2150  [key=0, style=solid];
m9_2149 -> m9_2155  [key=2, style=dotted];
m9_2149 -> m9_2154  [key=2, style=dotted];
m9_2149 -> m9_14  [key=2, style=dotted];
m9_2150 -> m9_2151  [key=0, style=solid];
m9_2150 -> m9_2155  [key=2, style=dotted];
m9_2150 -> m9_2154  [key=2, style=dotted];
m9_2150 -> m9_14  [key=2, style=dotted];
m9_2151 -> m9_2152  [key=0, style=solid];
m9_2151 -> m9_2155  [key=2, style=dotted];
m9_2151 -> m9_2154  [key=2, style=dotted];
m9_2151 -> m9_14  [key=2, style=dotted];
m9_2152 -> m9_2123  [key=0, style=bold, color=blue];
m9_2489 -> m9_2490  [key=0, style=solid];
m9_2490 -> m9_2489  [key=0, style=bold, color=blue];
m9_576 -> m9_577  [key=0, style=solid];
m9_577 -> m9_578  [key=0, style=solid];
m9_577 -> m9_298  [key=2, style=dotted];
m9_577 -> m9_579  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_578 -> m9_579  [key=0, style=solid];
m9_578 -> m9_581  [key=2, style=dotted];
m9_579 -> m9_580  [key=0, style=solid];
m9_579 -> m9_582  [key=2, style=dotted];
m9_579 -> m9_302  [key=2, style=dotted];
m9_580 -> m9_576  [key=0, style=bold, color=blue];
m9_3713 -> m9_3714  [key=0, style=solid];
m9_3714 -> m9_3715  [key=0, style=solid];
m9_3715 -> m9_3713  [key=0, style=bold, color=blue];
m9_1375 -> m9_1376  [key=0, style=solid];
m9_1376 -> m9_1377  [key=0, style=solid];
m9_1377 -> m9_1378  [key=0, style=solid];
m9_1377 -> m9_13  [key=2, style=dotted];
m9_1377 -> m9_1379  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1377 -> m9_1380  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1377 -> m9_1381  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1377 -> m9_1382  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1378 -> m9_1379  [key=0, style=solid];
m9_1378 -> m9_632  [key=2, style=dotted];
m9_1379 -> m9_1380  [key=0, style=solid];
m9_1379 -> m9_14  [key=2, style=dotted];
m9_1380 -> m9_1381  [key=0, style=solid];
m9_1380 -> m9_14  [key=2, style=dotted];
m9_1381 -> m9_1382  [key=0, style=solid];
m9_1381 -> m9_14  [key=2, style=dotted];
m9_1382 -> m9_1383  [key=0, style=solid];
m9_1382 -> m9_14  [key=2, style=dotted];
m9_1383 -> m9_1375  [key=0, style=bold, color=blue];
m9_1425 -> m9_1426  [key=0, style=solid];
m9_1426 -> m9_1427  [key=0, style=solid];
m9_1426 -> m9_1436  [key=2, style=dotted];
m9_1426 -> m9_1428  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1426 -> m9_1429  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1426 -> m9_1430  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1426 -> m9_1431  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1426 -> m9_1433  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1427 -> m9_1428  [key=0, style=solid];
m9_1428 -> m9_1429  [key=0, style=solid];
m9_1429 -> m9_1430  [key=0, style=solid];
m9_1430 -> m9_1431  [key=0, style=solid];
m9_1431 -> m9_1432  [key=0, style=solid];
m9_1431 -> m9_170  [key=2, style=dotted];
m9_1433 -> m9_1434  [key=0, style=solid];
m9_1433 -> m9_47  [key=2, style=dotted];
m9_1433 -> m9_49  [key=2, style=dotted];
m9_1432 -> m9_1433  [key=0, style=solid];
m9_1432 -> m9_12  [key=2, style=dotted];
m9_1434 -> m9_1435  [key=0, style=solid];
m9_1434 -> m9_12  [key=2, style=dotted];
m9_1435 -> m9_1425  [key=0, style=bold, color=blue];
m9_1016 -> m9_1017  [key=0, style=solid];
m9_1017 -> m9_1018  [key=0, style=solid];
m9_1017 -> m9_1020  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1018 -> m9_1019  [key=0, style=solid];
m9_1018 -> m9_219  [key=2, style=dotted];
m9_1018 -> m9_1020  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_1020 -> m9_1021  [key=0, style=solid];
m9_1020 -> m9_218  [key=2, style=dotted];
m9_1020 -> m9_676  [key=2, style=dotted];
m9_1020 -> m9_1022  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1019 -> m9_1020  [key=0, style=solid];
m9_1021 -> m9_1022  [key=0, style=solid];
m9_1021 -> m9_14  [key=2, style=dotted];
m9_1022 -> m9_1023  [key=0, style=solid];
m9_1022 -> m9_14  [key=2, style=dotted];
m9_1023 -> m9_1016  [key=0, style=bold, color=blue];
m9_3951 -> m9_3952  [key=0, style=solid];
m9_3952 -> m9_3953  [key=0, style=solid];
m9_3952 -> m9_3954  [key=2, style=dotted];
m9_3953 -> m9_3951  [key=0, style=bold, color=blue];
m9_28 -> m9_29  [key=0, style=solid];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_24  [key=2, style=dotted];
m9_29 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_30 -> m9_28  [key=0, style=bold, color=blue];
m9_3633 -> m9_3634  [key=0, style=solid];
m9_3634 -> m9_3635  [key=0, style=solid];
m9_3635 -> m9_3636  [key=0, style=solid];
m9_3635 -> m9_47  [key=2, style=dotted];
m9_3635 -> m9_143  [key=2, style=dotted];
m9_3635 -> m9_3637  [key=1, style=dashed, color=darkseagreen4, label=people];
m9_3635 -> m9_3638  [key=1, style=dashed, color=darkseagreen4, label=people];
m9_3636 -> m9_3637  [key=0, style=solid];
m9_3636 -> m9_14  [key=2, style=dotted];
m9_3637 -> m9_3638  [key=0, style=solid];
m9_3637 -> m9_3639  [key=1, style=dashed, color=darkseagreen4, label=john];
m9_3637 -> m9_3640  [key=1, style=dashed, color=darkseagreen4, label=john];
m9_3638 -> m9_3639  [key=0, style=solid];
m9_3638 -> m9_3640  [key=1, style=dashed, color=darkseagreen4, label=jane];
m9_3639 -> m9_3640  [key=0, style=solid];
m9_3639 -> m9_14  [key=2, style=dotted];
m9_3640 -> m9_3641  [key=0, style=solid];
m9_3640 -> m9_14  [key=2, style=dotted];
m9_3641 -> m9_3633  [key=0, style=bold, color=blue];
m9_961 -> m9_962  [key=0, style=solid];
m9_962 -> m9_963  [key=0, style=solid];
m9_962 -> m9_789  [key=2, style=dotted];
m9_962 -> m9_965  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_963 -> m9_964  [key=0, style=solid];
m9_963 -> m9_11  [key=2, style=dotted];
m9_963 -> m9_965  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_965 -> m9_966  [key=0, style=solid];
m9_965 -> m9_974  [key=2, style=dotted];
m9_965 -> m9_965  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_965 -> m9_967  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_965 -> m9_968  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_965 -> m9_969  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_965 -> m9_970  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_965 -> m9_971  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_965 -> m9_972  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_964 -> m9_965  [key=0, style=solid];
m9_964 -> m9_14  [key=2, style=dotted];
m9_966 -> m9_967  [key=0, style=solid];
m9_966 -> m9_14  [key=2, style=dotted];
m9_967 -> m9_968  [key=0, style=solid];
m9_967 -> m9_14  [key=2, style=dotted];
m9_968 -> m9_969  [key=0, style=solid];
m9_968 -> m9_14  [key=2, style=dotted];
m9_969 -> m9_970  [key=0, style=solid];
m9_969 -> m9_14  [key=2, style=dotted];
m9_970 -> m9_971  [key=0, style=solid];
m9_970 -> m9_14  [key=2, style=dotted];
m9_971 -> m9_972  [key=0, style=solid];
m9_971 -> m9_14  [key=2, style=dotted];
m9_972 -> m9_973  [key=0, style=solid];
m9_972 -> m9_14  [key=2, style=dotted];
m9_973 -> m9_961  [key=0, style=bold, color=blue];
m9_2296 -> m9_2297  [key=0, style=solid];
m9_2297 -> m9_2298  [key=0, style=solid];
m9_2298 -> m9_2299  [key=0, style=solid];
m9_2298 -> m9_13  [key=2, style=dotted];
m9_2298 -> m9_2300  [key=1, style=dashed, color=darkseagreen4, label=cc];
m9_2298 -> m9_2301  [key=1, style=dashed, color=darkseagreen4, label=cc];
m9_2299 -> m9_2300  [key=0, style=solid];
m9_2299 -> m9_14  [key=2, style=dotted];
m9_2300 -> m9_2301  [key=0, style=solid];
m9_2300 -> m9_14  [key=2, style=dotted];
m9_2301 -> m9_2302  [key=0, style=solid];
m9_2301 -> m9_14  [key=2, style=dotted];
m9_2302 -> m9_2296  [key=0, style=bold, color=blue];
m9_3356 -> m9_3357  [key=0, style=solid];
m9_3357 -> m9_3358  [key=0, style=solid];
m9_3357 -> m9_13  [key=2, style=dotted];
m9_3357 -> m9_3359  [key=1, style=dashed, color=darkseagreen4, label=uris];
m9_3358 -> m9_3359  [key=0, style=solid];
m9_3358 -> m9_14  [key=2, style=dotted];
m9_3359 -> m9_3360  [key=0, style=solid];
m9_3359 -> m9_1545  [key=2, style=dotted];
m9_3359 -> m9_14  [key=2, style=dotted];
m9_3360 -> m9_3361  [key=0, style=solid];
m9_3360 -> m9_13  [key=2, style=dotted];
m9_3361 -> m9_3362  [key=0, style=solid];
m9_3361 -> m9_632  [key=2, style=dotted];
m9_3362 -> m9_3363  [key=0, style=solid];
m9_3362 -> m9_3369  [key=2, style=dotted];
m9_3362 -> m9_3364  [key=1, style=dashed, color=darkseagreen4, label=i1];
m9_3363 -> m9_3364  [key=0, style=solid];
m9_3363 -> m9_1545  [key=2, style=dotted];
m9_3364 -> m9_3365  [key=0, style=solid];
m9_3364 -> m9_14  [key=2, style=dotted];
m9_3365 -> m9_3366  [key=0, style=solid];
m9_3365 -> m9_13  [key=2, style=dotted];
m9_3365 -> m9_3367  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_3366 -> m9_3367  [key=0, style=solid];
m9_3366 -> m9_632  [key=2, style=dotted];
m9_3367 -> m9_3368  [key=0, style=solid];
m9_3367 -> m9_3369  [key=2, style=dotted];
m9_3367 -> m9_14  [key=2, style=dotted];
m9_3368 -> m9_3356  [key=0, style=bold, color=blue];
m9_50 -> m9_51  [key=0, style=solid];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_24  [key=2, style=dotted];
m9_51 -> m9_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_24  [key=2, style=dotted];
m9_52 -> m9_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_24  [key=2, style=dotted];
m9_53 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_24  [key=2, style=dotted];
m9_54 -> m9_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_24  [key=2, style=dotted];
m9_55 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_24  [key=2, style=dotted];
m9_56 -> m9_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_57 -> m9_50  [key=0, style=bold, color=blue];
m9_2752 -> m9_2753  [key=0, style=solid];
m9_2753 -> m9_2754  [key=0, style=solid];
m9_2753 -> m9_2757  [key=2, style=dotted];
m9_2754 -> m9_2755  [key=0, style=solid];
m9_2754 -> m9_170  [key=2, style=dotted];
m9_2755 -> m9_2756  [key=0, style=solid];
m9_2755 -> m9_12  [key=2, style=dotted];
m9_2756 -> m9_2752  [key=0, style=bold, color=blue];
m9_2761 -> m9_2762  [key=0, style=solid];
m9_2762 -> m9_2763  [key=0, style=solid];
m9_2762 -> m9_2758  [key=2, style=dotted];
m9_2762 -> m9_2765  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m9_2762 -> m9_2766  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m9_2762 -> m9_2769  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m9_2763 -> m9_2766  [key=0, style=solid];
m9_2763 -> m9_129  [key=2, style=dotted];
m9_2765 -> m9_2766  [key=0, style=solid];
m9_2765 -> m9_169  [key=2, style=dotted];
m9_2766 -> m9_2767  [key=0, style=solid];
m9_2766 -> m9_11  [key=2, style=dotted];
m9_2769 -> m9_2770  [key=0, style=solid];
m9_2769 -> m9_170  [key=2, style=dotted];
m9_2764 -> m9_2765  [key=0, style=solid];
m9_2767 -> m9_2768  [key=0, style=solid];
m9_2767 -> m9_13  [key=2, style=dotted];
m9_2768 -> m9_2769  [key=0, style=solid];
m9_2768 -> m9_2773  [key=2, style=dotted];
m9_2768 -> m9_14  [key=2, style=dotted];
m9_2770 -> m9_2771  [key=0, style=solid];
m9_2770 -> m9_13  [key=2, style=dotted];
m9_2771 -> m9_2772  [key=0, style=solid];
m9_2771 -> m9_2773  [key=2, style=dotted];
m9_2771 -> m9_14  [key=2, style=dotted];
m9_2772 -> m9_2761  [key=0, style=bold, color=blue];
m9_2195 -> m9_2196  [key=0, style=solid];
m9_2196 -> m9_2197  [key=0, style=solid];
m9_2196 -> m9_2206  [key=2, style=dotted];
m9_2196 -> m9_2199  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_2196 -> m9_2200  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_2196 -> m9_2204  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m9_2197 -> m9_2198  [key=0, style=solid];
m9_2197 -> m9_2207  [key=2, style=dotted];
m9_2197 -> m9_2199  [key=1, style=dashed, color=darkseagreen4, label=document];
m9_2199 -> m9_2200  [key=0, style=solid];
m9_2200 -> m9_2201  [key=0, style=solid];
m9_2200 -> m9_170  [key=2, style=dotted];
m9_2200 -> m9_2202  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2200 -> m9_2203  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2204 -> m9_2205  [key=0, style=solid];
m9_2204 -> m9_14  [key=2, style=dotted];
m9_2198 -> m9_2199  [key=0, style=solid];
m9_2198 -> m9_2208  [key=2, style=dotted];
m9_2201 -> m9_2202  [key=0, style=solid];
m9_2202 -> m9_2203  [key=0, style=solid];
m9_2202 -> m9_12  [key=2, style=dotted];
m9_2203 -> m9_2204  [key=0, style=solid];
m9_2203 -> m9_13  [key=2, style=dotted];
m9_2205 -> m9_2195  [key=0, style=bold, color=blue];
m9_1955 -> m9_1956  [key=0, style=solid];
m9_1956 -> m9_1957  [key=0, style=solid];
m9_1956 -> m9_1958  [key=2, style=dotted];
m9_1957 -> m9_1955  [key=0, style=bold, color=blue];
m9_3284 -> m9_3285  [key=0, style=solid];
m9_3285 -> m9_3286  [key=0, style=solid];
m9_3285 -> m9_3288  [key=2, style=dotted];
m9_3286 -> m9_3287  [key=0, style=solid];
m9_3286 -> m9_3289  [key=2, style=dotted];
m9_3287 -> m9_3284  [key=0, style=bold, color=blue];
m9_2478 -> m9_2479  [key=0, style=solid];
m9_2479 -> m9_2480  [key=0, style=solid];
m9_2479 -> m9_2487  [key=2, style=dotted];
m9_2479 -> m9_2481  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_2480 -> m9_2481  [key=0, style=solid];
m9_2480 -> m9_2488  [key=2, style=dotted];
m9_2481 -> m9_2482  [key=0, style=solid];
m9_2481 -> m9_11  [key=2, style=dotted];
m9_2482 -> m9_2483  [key=0, style=solid];
m9_2482 -> m9_13  [key=2, style=dotted];
m9_2482 -> m9_2484  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_2482 -> m9_2485  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_2483 -> m9_2484  [key=0, style=solid];
m9_2483 -> m9_14  [key=2, style=dotted];
m9_2484 -> m9_2485  [key=0, style=solid];
m9_2484 -> m9_14  [key=2, style=dotted];
m9_2485 -> m9_2486  [key=0, style=solid];
m9_2485 -> m9_14  [key=2, style=dotted];
m9_2486 -> m9_2478  [key=0, style=bold, color=blue];
m9_1489 -> m9_1490  [key=0, style=solid];
m9_1490 -> m9_1491  [key=0, style=solid];
m9_1490 -> m9_1480  [key=2, style=dotted];
m9_1490 -> m9_1492  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1491 -> m9_1492  [key=0, style=solid];
m9_1492 -> m9_1493  [key=0, style=solid];
m9_1492 -> m9_170  [key=2, style=dotted];
m9_1492 -> m9_1494  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1493 -> m9_1494  [key=0, style=solid];
m9_1493 -> m9_12  [key=2, style=dotted];
m9_1494 -> m9_1495  [key=0, style=solid];
m9_1494 -> m9_13  [key=2, style=dotted];
m9_1495 -> m9_1496  [key=0, style=solid];
m9_1495 -> m9_1486  [key=2, style=dotted];
m9_1495 -> m9_14  [key=2, style=dotted];
m9_1496 -> m9_1489  [key=0, style=bold, color=blue];
m9_3038 -> m9_3039  [key=0, style=solid];
m9_3039 -> m9_3040  [key=0, style=solid];
m9_3039 -> m9_24  [key=2, style=dotted];
m9_3039 -> m9_3041  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3040 -> m9_3038  [key=0, style=bold, color=blue];
m9_2726 -> m9_2727  [key=0, style=solid];
m9_2726 -> m9_2728  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_2726 -> m9_2729  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_2727 -> m9_2728  [key=0, style=solid];
m9_2728 -> m9_2729  [key=0, style=solid];
m9_2729 -> m9_2730  [key=0, style=solid];
m9_2730 -> m9_2726  [key=0, style=bold, color=blue];
m9_1880 -> m9_1881  [key=0, style=solid];
m9_1881 -> m9_1882  [key=0, style=solid];
m9_1881 -> m9_1883  [key=1, style=dashed, color=darkseagreen4, label=jsonIsoText];
m9_1882 -> m9_1883  [key=0, style=solid];
m9_1882 -> m9_47  [key=2, style=dotted];
m9_1882 -> m9_985  [key=2, style=dotted];
m9_1882 -> m9_143  [key=2, style=dotted];
m9_1882 -> m9_1884  [key=1, style=dashed, color=darkseagreen4, label=cISO];
m9_1883 -> m9_1884  [key=0, style=solid];
m9_1883 -> m9_47  [key=2, style=dotted];
m9_1883 -> m9_143  [key=2, style=dotted];
m9_1884 -> m9_1885  [key=0, style=solid];
m9_1884 -> m9_14  [key=2, style=dotted];
m9_1885 -> m9_1880  [key=0, style=bold, color=blue];
m9_3450 -> m9_3451  [key=0, style=solid];
m9_3451 -> m9_3452  [key=0, style=solid];
m9_3451 -> m9_3453  [key=1, style=dashed, color=darkseagreen4, label=content];
m9_3452 -> m9_3453  [key=0, style=solid];
m9_3452 -> m9_47  [key=2, style=dotted];
m9_3453 -> m9_3454  [key=0, style=solid];
m9_3453 -> m9_3458  [key=2, style=dotted];
m9_3454 -> m9_3455  [key=0, style=solid];
m9_3455 -> m9_3456  [key=0, style=solid];
m9_3455 -> m9_946  [key=2, style=dotted];
m9_3455 -> m9_14  [key=2, style=dotted];
m9_3455 -> m9_3455  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_3456 -> m9_3457  [key=0, style=solid];
m9_3456 -> m9_3459  [key=2, style=dotted];
m9_3456 -> m9_14  [key=2, style=dotted];
m9_3456 -> m9_3456  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_3457 -> m9_3450  [key=0, style=bold, color=blue];
m9_3992 -> m9_3993  [key=0, style=solid];
m9_3993 -> m9_3994  [key=0, style=solid];
m9_3994 -> m9_3992  [key=0, style=bold, color=blue];
m9_1116 -> m9_1117  [key=0, style=solid];
m9_1117 -> m9_1118  [key=0, style=solid];
m9_1117 -> m9_1123  [key=2, style=dotted];
m9_1118 -> m9_1119  [key=0, style=solid];
m9_1118 -> m9_11  [key=2, style=dotted];
m9_1118 -> m9_1120  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1119 -> m9_1120  [key=0, style=solid];
m9_1119 -> m9_14  [key=2, style=dotted];
m9_1120 -> m9_1121  [key=0, style=solid];
m9_1120 -> m9_13  [key=2, style=dotted];
m9_1121 -> m9_1122  [key=0, style=solid];
m9_1121 -> m9_14  [key=2, style=dotted];
m9_1122 -> m9_1116  [key=0, style=bold, color=blue];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_127  [key=0, style=solid];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_130  [key=2, style=dotted];
m9_126 -> m9_128  [key=0, style=solid];
m9_126 -> m9_129  [key=2, style=dotted];
m9_128 -> m9_124  [key=0, style=bold, color=blue];
m9_1437 -> m9_1438  [key=0, style=solid];
m9_1438 -> m9_1439  [key=0, style=solid];
m9_1439 -> m9_1440  [key=0, style=solid];
m9_1439 -> m9_13  [key=2, style=dotted];
m9_1439 -> m9_1441  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1439 -> m9_1442  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1439 -> m9_1443  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1440 -> m9_1441  [key=0, style=solid];
m9_1440 -> m9_14  [key=2, style=dotted];
m9_1441 -> m9_1442  [key=0, style=solid];
m9_1441 -> m9_14  [key=2, style=dotted];
m9_1442 -> m9_1443  [key=0, style=solid];
m9_1442 -> m9_14  [key=2, style=dotted];
m9_1443 -> m9_1444  [key=0, style=solid];
m9_1443 -> m9_14  [key=2, style=dotted];
m9_1444 -> m9_1437  [key=0, style=bold, color=blue];
m9_3288 -> m9_3290  [key=0, style=solid];
m9_3288 -> m9_3293  [key=1, style=dashed, color=darkseagreen4, label=T];
m9_3290 -> m9_3291  [key=0, style=solid];
m9_3290 -> m9_2808  [key=2, style=dotted];
m9_3290 -> m9_3293  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m9_3290 -> m9_3294  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m9_3293 -> m9_3294  [key=0, style=solid];
m9_3293 -> m9_671  [key=2, style=dotted];
m9_3291 -> m9_3292  [key=0, style=solid];
m9_3291 -> m9_219  [key=2, style=dotted];
m9_3291 -> m9_3293  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_3294 -> m9_3295  [key=0, style=solid];
m9_3294 -> m9_2813  [key=2, style=dotted];
m9_3292 -> m9_3293  [key=0, style=solid];
m9_3292 -> m9_1702  [key=2, style=dotted];
m9_3295 -> m9_3288  [key=0, style=bold, color=blue];
m9_2979 -> m9_2980  [key=0, style=solid];
m9_2980 -> m9_2981  [key=0, style=solid];
m9_2980 -> m9_2989  [key=2, style=dotted];
m9_2980 -> m9_1082  [key=2, style=dotted];
m9_2980 -> m9_938  [key=2, style=dotted];
m9_2981 -> m9_2982  [key=0, style=solid];
m9_2981 -> m9_170  [key=2, style=dotted];
m9_2981 -> m9_2983  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m9_2982 -> m9_2983  [key=0, style=solid];
m9_2982 -> m9_12  [key=2, style=dotted];
m9_2983 -> m9_2984  [key=0, style=solid];
m9_2983 -> m9_13  [key=2, style=dotted];
m9_2983 -> m9_2985  [key=1, style=dashed, color=darkseagreen4, label=actual];
m9_2983 -> m9_2986  [key=1, style=dashed, color=darkseagreen4, label=actual];
m9_2984 -> m9_2985  [key=0, style=solid];
m9_2984 -> m9_1082  [key=2, style=dotted];
m9_2984 -> m9_14  [key=2, style=dotted];
m9_2985 -> m9_2986  [key=0, style=solid];
m9_2985 -> m9_1082  [key=2, style=dotted];
m9_2985 -> m9_14  [key=2, style=dotted];
m9_2986 -> m9_2987  [key=0, style=solid];
m9_2987 -> m9_2988  [key=0, style=solid];
m9_2987 -> m9_276  [key=2, style=dotted];
m9_2987 -> m9_2848  [key=2, style=dotted];
m9_2988 -> m9_2979  [key=0, style=bold, color=blue];
m9_240 -> m9_241  [key=0, style=solid];
m9_241 -> m9_242  [key=0, style=solid];
m9_241 -> m9_248  [key=2, style=dotted];
m9_241 -> m9_244  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_241 -> m9_245  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_241 -> m9_246  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_242 -> m9_243  [key=0, style=solid];
m9_242 -> m9_11  [key=2, style=dotted];
m9_244 -> m9_245  [key=0, style=solid];
m9_244 -> m9_14  [key=2, style=dotted];
m9_245 -> m9_246  [key=0, style=solid];
m9_245 -> m9_14  [key=2, style=dotted];
m9_246 -> m9_247  [key=0, style=solid];
m9_246 -> m9_14  [key=2, style=dotted];
m9_243 -> m9_244  [key=0, style=solid];
m9_243 -> m9_13  [key=2, style=dotted];
m9_243 -> m9_245  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_243 -> m9_246  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_247 -> m9_240  [key=0, style=bold, color=blue];
m9_3323 -> m9_3324  [key=0, style=solid];
m9_3324 -> m9_3325  [key=0, style=solid];
m9_3324 -> m9_3327  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3324 -> m9_3332  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3324 -> m9_3335  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3325 -> m9_3326  [key=0, style=solid];
m9_3325 -> m9_47  [key=2, style=dotted];
m9_3325 -> m9_3330  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_3325 -> m9_3331  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_3327 -> m9_3328  [key=0, style=solid];
m9_3327 -> m9_217  [key=2, style=dotted];
m9_3327 -> m9_218  [key=2, style=dotted];
m9_3327 -> m9_2398  [key=2, style=dotted];
m9_3327 -> m9_3329  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_3332 -> m9_3333  [key=0, style=solid];
m9_3332 -> m9_24  [key=2, style=dotted];
m9_3332 -> m9_3334  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3326 -> m9_3327  [key=0, style=solid];
m9_3326 -> m9_668  [key=2, style=dotted];
m9_3330 -> m9_3331  [key=0, style=solid];
m9_3331 -> m9_3332  [key=0, style=solid];
m9_3331 -> m9_668  [key=2, style=dotted];
m9_3331 -> m9_3335  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_3328 -> m9_3329  [key=0, style=solid];
m9_3328 -> m9_632  [key=2, style=dotted];
m9_3329 -> m9_3330  [key=0, style=solid];
m9_3329 -> m9_14  [key=2, style=dotted];
m9_3333 -> m9_3323  [key=0, style=bold, color=blue];
m9_2113 -> m9_2114  [key=0, style=solid];
m9_2114 -> m9_2115  [key=0, style=solid];
m9_2114 -> m9_2121  [key=2, style=dotted];
m9_2115 -> m9_2116  [key=0, style=solid];
m9_2115 -> m9_170  [key=2, style=dotted];
m9_2116 -> m9_2117  [key=0, style=solid];
m9_2116 -> m9_12  [key=2, style=dotted];
m9_2117 -> m9_2118  [key=0, style=solid];
m9_2117 -> m9_2122  [key=2, style=dotted];
m9_2118 -> m9_2119  [key=0, style=solid];
m9_2118 -> m9_170  [key=2, style=dotted];
m9_2119 -> m9_2120  [key=0, style=solid];
m9_2119 -> m9_12  [key=2, style=dotted];
m9_2120 -> m9_2113  [key=0, style=bold, color=blue];
m9_3707 -> m9_3708  [key=0, style=solid];
m9_3708 -> m9_3709  [key=0, style=solid];
m9_3708 -> m9_3691  [key=2, style=dotted];
m9_3709 -> m9_3707  [key=0, style=bold, color=blue];
m9_3962 -> m9_3963  [key=0, style=solid];
m9_3963 -> m9_3964  [key=0, style=solid];
m9_3963 -> m9_2231  [key=2, style=dotted];
m9_3964 -> m9_3962  [key=0, style=bold, color=blue];
m9_2531 -> m9_2532  [key=0, style=solid];
m9_2532 -> m9_2533  [key=0, style=solid];
m9_2532 -> m9_47  [key=2, style=dotted];
m9_2532 -> m9_143  [key=2, style=dotted];
m9_2533 -> m9_2531  [key=0, style=bold, color=blue];
m9_3050 -> m9_3051  [key=0, style=solid];
m9_3051 -> m9_3052  [key=0, style=solid];
m9_3051 -> m9_24  [key=2, style=dotted];
m9_3051 -> m9_3053  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3052 -> m9_3050  [key=0, style=bold, color=blue];
m9_1330 -> m9_1331  [key=0, style=solid];
m9_1331 -> m9_1332  [key=0, style=solid];
m9_1332 -> m9_1333  [key=0, style=solid];
m9_1332 -> m9_13  [key=2, style=dotted];
m9_1333 -> m9_1330  [key=0, style=bold, color=blue];
m9_2697 -> m9_2698  [key=0, style=solid];
m9_2698 -> m9_2699  [key=0, style=solid];
m9_2698 -> m9_2231  [key=2, style=dotted];
m9_2699 -> m9_2697  [key=0, style=bold, color=blue];
m9_1816 -> m9_1817  [key=0, style=solid];
m9_1817 -> m9_1818  [key=0, style=solid];
m9_1817 -> m9_13  [key=2, style=dotted];
m9_1817 -> m9_1819  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1817 -> m9_1820  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1817 -> m9_1821  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1817 -> m9_1822  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1817 -> m9_1823  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1817 -> m9_1824  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1817 -> m9_1825  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1817 -> m9_1826  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_1818 -> m9_1819  [key=0, style=solid];
m9_1818 -> m9_632  [key=2, style=dotted];
m9_1819 -> m9_1820  [key=0, style=solid];
m9_1819 -> m9_632  [key=2, style=dotted];
m9_1820 -> m9_1821  [key=0, style=solid];
m9_1820 -> m9_221  [key=2, style=dotted];
m9_1820 -> m9_14  [key=2, style=dotted];
m9_1821 -> m9_1822  [key=0, style=solid];
m9_1821 -> m9_221  [key=2, style=dotted];
m9_1821 -> m9_14  [key=2, style=dotted];
m9_1822 -> m9_1823  [key=0, style=solid];
m9_1822 -> m9_14  [key=2, style=dotted];
m9_1823 -> m9_1824  [key=0, style=solid];
m9_1823 -> m9_14  [key=2, style=dotted];
m9_1824 -> m9_1825  [key=0, style=solid];
m9_1824 -> m9_14  [key=2, style=dotted];
m9_1825 -> m9_1826  [key=0, style=solid];
m9_1825 -> m9_14  [key=2, style=dotted];
m9_1826 -> m9_1827  [key=0, style=solid];
m9_1826 -> m9_14  [key=2, style=dotted];
m9_1827 -> m9_1816  [key=0, style=bold, color=blue];
m9_277 -> m9_278  [key=0, style=solid];
m9_278 -> m9_279  [key=0, style=solid];
m9_278 -> m9_287  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_279 -> m9_280  [key=0, style=solid];
m9_279 -> m9_298  [key=2, style=dotted];
m9_279 -> m9_281  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_279 -> m9_282  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_279 -> m9_283  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_279 -> m9_284  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_279 -> m9_285  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_279 -> m9_286  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_279 -> m9_287  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_287 -> m9_288  [key=0, style=solid];
m9_287 -> m9_300  [key=2, style=dotted];
m9_287 -> m9_301  [key=2, style=dotted];
m9_287 -> m9_302  [key=2, style=dotted];
m9_280 -> m9_281  [key=0, style=solid];
m9_280 -> m9_14  [key=2, style=dotted];
m9_281 -> m9_282  [key=0, style=solid];
m9_281 -> m9_14  [key=2, style=dotted];
m9_282 -> m9_283  [key=0, style=solid];
m9_282 -> m9_14  [key=2, style=dotted];
m9_283 -> m9_284  [key=0, style=solid];
m9_283 -> m9_299  [key=2, style=dotted];
m9_283 -> m9_14  [key=2, style=dotted];
m9_284 -> m9_285  [key=0, style=solid];
m9_284 -> m9_14  [key=2, style=dotted];
m9_285 -> m9_286  [key=0, style=solid];
m9_285 -> m9_14  [key=2, style=dotted];
m9_286 -> m9_287  [key=0, style=solid];
m9_286 -> m9_14  [key=2, style=dotted];
m9_288 -> m9_289  [key=0, style=solid];
m9_288 -> m9_291  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_289 -> m9_290  [key=0, style=solid];
m9_289 -> m9_298  [key=2, style=dotted];
m9_289 -> m9_291  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_291 -> m9_292  [key=0, style=solid];
m9_291 -> m9_300  [key=2, style=dotted];
m9_291 -> m9_301  [key=2, style=dotted];
m9_291 -> m9_302  [key=2, style=dotted];
m9_290 -> m9_291  [key=0, style=solid];
m9_290 -> m9_14  [key=2, style=dotted];
m9_292 -> m9_293  [key=0, style=solid];
m9_292 -> m9_296  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_293 -> m9_294  [key=0, style=solid];
m9_293 -> m9_298  [key=2, style=dotted];
m9_293 -> m9_295  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_293 -> m9_296  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_296 -> m9_297  [key=0, style=solid];
m9_296 -> m9_300  [key=2, style=dotted];
m9_296 -> m9_301  [key=2, style=dotted];
m9_296 -> m9_302  [key=2, style=dotted];
m9_294 -> m9_295  [key=0, style=solid];
m9_294 -> m9_14  [key=2, style=dotted];
m9_295 -> m9_296  [key=0, style=solid];
m9_295 -> m9_14  [key=2, style=dotted];
m9_297 -> m9_277  [key=0, style=bold, color=blue];
m9_1648 -> m9_1649  [key=0, style=solid];
m9_1649 -> m9_1650  [key=0, style=solid];
m9_1649 -> m9_1653  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1650 -> m9_1651  [key=0, style=solid];
m9_1650 -> m9_24  [key=2, style=dotted];
m9_1650 -> m9_1652  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1651 -> m9_1648  [key=0, style=bold, color=blue];
m9_237 -> m9_238  [key=0, style=solid];
m9_238 -> m9_239  [key=0, style=solid];
m9_239 -> m9_237  [key=0, style=bold, color=blue];
m9_774 -> m9_775  [key=0, style=solid];
m9_775 -> m9_776  [key=0, style=solid];
m9_775 -> m9_789  [key=2, style=dotted];
m9_775 -> m9_777  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_775 -> m9_778  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_775 -> m9_779  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_775 -> m9_780  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_776 -> m9_777  [key=0, style=solid];
m9_777 -> m9_778  [key=0, style=solid];
m9_777 -> m9_790  [key=2, style=dotted];
m9_778 -> m9_779  [key=0, style=solid];
m9_779 -> m9_780  [key=0, style=solid];
m9_780 -> m9_781  [key=0, style=solid];
m9_780 -> m9_11  [key=2, style=dotted];
m9_781 -> m9_782  [key=0, style=solid];
m9_781 -> m9_772  [key=2, style=dotted];
m9_781 -> m9_783  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_781 -> m9_784  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_781 -> m9_785  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_781 -> m9_786  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_781 -> m9_787  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_782 -> m9_783  [key=0, style=solid];
m9_782 -> m9_14  [key=2, style=dotted];
m9_783 -> m9_784  [key=0, style=solid];
m9_783 -> m9_790  [key=2, style=dotted];
m9_783 -> m9_14  [key=2, style=dotted];
m9_784 -> m9_785  [key=0, style=solid];
m9_784 -> m9_14  [key=2, style=dotted];
m9_785 -> m9_786  [key=0, style=solid];
m9_785 -> m9_14  [key=2, style=dotted];
m9_786 -> m9_787  [key=0, style=solid];
m9_786 -> m9_14  [key=2, style=dotted];
m9_787 -> m9_788  [key=0, style=solid];
m9_787 -> m9_14  [key=2, style=dotted];
m9_788 -> m9_774  [key=0, style=bold, color=blue];
m9_3680 -> m9_3681  [key=0, style=solid];
m9_3680 -> m9_3683  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_3680 -> m9_3685  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_3680 -> m9_3687  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m9_3681 -> m9_3682  [key=0, style=solid];
m9_3681 -> m9_3683  [key=0, style=solid];
m9_3683 -> m9_3684  [key=0, style=solid];
m9_3683 -> m9_3685  [key=0, style=solid];
m9_3685 -> m9_3686  [key=0, style=solid];
m9_3685 -> m9_3687  [key=0, style=solid];
m9_3687 -> m9_3688  [key=0, style=solid];
m9_3687 -> m9_3689  [key=0, style=solid];
m9_3682 -> m9_3690  [key=0, style=solid];
m9_3684 -> m9_3690  [key=0, style=solid];
m9_3686 -> m9_3690  [key=0, style=solid];
m9_3688 -> m9_3690  [key=0, style=solid];
m9_3688 -> m9_666  [key=2, style=dotted];
m9_3689 -> m9_3690  [key=0, style=solid];
m9_3689 -> m9_3691  [key=2, style=dotted];
m9_3690 -> m9_3680  [key=0, style=bold, color=blue];
m9_2422 -> m9_2423  [key=0, style=solid];
m9_2423 -> m9_2424  [key=0, style=solid];
m9_2423 -> m9_2443  [key=2, style=dotted];
m9_2423 -> m9_2425  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_2423 -> m9_2426  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_2423 -> m9_2427  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_2423 -> m9_2428  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_2423 -> m9_2429  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_2423 -> m9_2433  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_2423 -> m9_2435  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_2423 -> m9_2439  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_2423 -> m9_2441  [key=1, style=dashed, color=darkseagreen4, label=expando];
m9_2424 -> m9_2425  [key=0, style=solid];
m9_2425 -> m9_2426  [key=0, style=solid];
m9_2426 -> m9_2427  [key=0, style=solid];
m9_2426 -> m9_2443  [key=2, style=dotted];
m9_2427 -> m9_2428  [key=0, style=solid];
m9_2428 -> m9_2429  [key=0, style=solid];
m9_2428 -> m9_938  [key=2, style=dotted];
m9_2429 -> m9_2430  [key=0, style=solid];
m9_2429 -> m9_2444  [key=2, style=dotted];
m9_2429 -> m9_2431  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2433 -> m9_2434  [key=0, style=solid];
m9_2433 -> m9_14  [key=2, style=dotted];
m9_2435 -> m9_2436  [key=0, style=solid];
m9_2435 -> m9_14  [key=2, style=dotted];
m9_2439 -> m9_2440  [key=0, style=solid];
m9_2439 -> m9_14  [key=2, style=dotted];
m9_2441 -> m9_2442  [key=0, style=solid];
m9_2441 -> m9_14  [key=2, style=dotted];
m9_2430 -> m9_2431  [key=0, style=solid];
m9_2430 -> m9_12  [key=2, style=dotted];
m9_2431 -> m9_2432  [key=0, style=solid];
m9_2431 -> m9_13  [key=2, style=dotted];
m9_2431 -> m9_2433  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_2431 -> m9_2434  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_2431 -> m9_2435  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_2431 -> m9_2436  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_2431 -> m9_2437  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m9_2432 -> m9_2433  [key=0, style=solid];
m9_2432 -> m9_581  [key=2, style=dotted];
m9_2434 -> m9_2435  [key=0, style=solid];
m9_2434 -> m9_581  [key=2, style=dotted];
m9_2436 -> m9_2437  [key=0, style=solid];
m9_2436 -> m9_581  [key=2, style=dotted];
m9_2437 -> m9_2438  [key=0, style=solid];
m9_2437 -> m9_2439  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_2437 -> m9_2440  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_2437 -> m9_2441  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_2438 -> m9_2439  [key=0, style=solid];
m9_2438 -> m9_581  [key=2, style=dotted];
m9_2440 -> m9_2441  [key=0, style=solid];
m9_2440 -> m9_581  [key=2, style=dotted];
m9_2442 -> m9_2422  [key=0, style=bold, color=blue];
m9_525 -> m9_526  [key=0, style=solid];
m9_526 -> m9_527  [key=0, style=solid];
m9_527 -> m9_525  [key=0, style=bold, color=blue];
m9_3695 -> m9_3696  [key=0, style=solid];
m9_3696 -> m9_3697  [key=0, style=solid];
m9_3696 -> m9_3691  [key=2, style=dotted];
m9_3697 -> m9_3695  [key=0, style=bold, color=blue];
m9_1691 -> m9_1692  [key=0, style=solid];
m9_1692 -> m9_1693  [key=0, style=solid];
m9_1693 -> m9_1694  [key=0, style=solid];
m9_1693 -> m9_13  [key=2, style=dotted];
m9_1694 -> m9_1695  [key=0, style=solid];
m9_1694 -> m9_14  [key=2, style=dotted];
m9_1695 -> m9_1691  [key=0, style=bold, color=blue];
m9_41 -> m9_42  [key=0, style=solid];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_46  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_47  [key=2, style=dotted];
m9_43 -> m9_48  [key=2, style=dotted];
m9_43 -> m9_49  [key=2, style=dotted];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_14  [key=2, style=dotted];
m9_45 -> m9_41  [key=0, style=bold, color=blue];
m9_3344 -> m9_3345  [key=0, style=solid];
m9_3345 -> m9_3346  [key=0, style=solid];
m9_3345 -> m9_24  [key=2, style=dotted];
m9_3345 -> m9_3347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3346 -> m9_3344  [key=0, style=bold, color=blue];
m9_3806 -> m9_3807  [key=0, style=solid];
m9_3807 -> m9_3808  [key=0, style=solid];
m9_3807 -> m9_790  [key=2, style=dotted];
m9_3807 -> m9_3810  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3807 -> m9_3813  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3808 -> m9_3809  [key=0, style=solid];
m9_3810 -> m9_3811  [key=0, style=solid];
m9_3810 -> m9_46  [key=2, style=dotted];
m9_3810 -> m9_575  [key=2, style=dotted];
m9_3810 -> m9_3812  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3813 -> m9_3814  [key=0, style=solid];
m9_3813 -> m9_1518  [key=2, style=dotted];
m9_3813 -> m9_14  [key=2, style=dotted];
m9_3809 -> m9_3810  [key=0, style=solid];
m9_3809 -> m9_47  [key=2, style=dotted];
m9_3809 -> m9_3812  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_3812 -> m9_3813  [key=0, style=solid];
m9_3812 -> m9_143  [key=2, style=dotted];
m9_3811 -> m9_3812  [key=0, style=solid];
m9_3811 -> m9_12  [key=2, style=dotted];
m9_3814 -> m9_3806  [key=0, style=bold, color=blue];
m9_1739 -> m9_1740  [key=0, style=solid];
m9_1740 -> m9_1741  [key=0, style=solid];
m9_1740 -> m9_1749  [key=2, style=dotted];
m9_1740 -> m9_1744  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m9_1741 -> m9_1742  [key=0, style=solid];
m9_1741 -> m9_170  [key=2, style=dotted];
m9_1741 -> m9_1743  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1744 -> m9_1745  [key=0, style=solid];
m9_1744 -> m9_14  [key=2, style=dotted];
m9_1744 -> m9_1744  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m9_1744 -> m9_1746  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m9_1742 -> m9_1743  [key=0, style=solid];
m9_1742 -> m9_12  [key=2, style=dotted];
m9_1743 -> m9_1744  [key=0, style=solid];
m9_1743 -> m9_13  [key=2, style=dotted];
m9_1745 -> m9_1746  [key=0, style=solid];
m9_1745 -> m9_14  [key=2, style=dotted];
m9_1746 -> m9_1747  [key=0, style=solid];
m9_1746 -> m9_14  [key=2, style=dotted];
m9_1746 -> m9_1746  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m9_1747 -> m9_1748  [key=0, style=solid];
m9_1747 -> m9_14  [key=2, style=dotted];
m9_1748 -> m9_1739  [key=0, style=bold, color=blue];
m9_2957 -> m9_2958  [key=0, style=solid];
m9_2958 -> m9_2959  [key=0, style=solid];
m9_2958 -> m9_24  [key=2, style=dotted];
m9_2958 -> m9_2960  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2959 -> m9_2957  [key=0, style=bold, color=blue];
m9_3824 -> m9_3825  [key=0, style=solid];
m9_3825 -> m9_3826  [key=0, style=solid];
m9_3825 -> m9_222  [key=2, style=dotted];
m9_3825 -> m9_3828  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3825 -> m9_3831  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3826 -> m9_3827  [key=0, style=solid];
m9_3828 -> m9_3829  [key=0, style=solid];
m9_3828 -> m9_46  [key=2, style=dotted];
m9_3828 -> m9_575  [key=2, style=dotted];
m9_3828 -> m9_3830  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3831 -> m9_3832  [key=0, style=solid];
m9_3831 -> m9_1518  [key=2, style=dotted];
m9_3831 -> m9_14  [key=2, style=dotted];
m9_3827 -> m9_3828  [key=0, style=solid];
m9_3827 -> m9_47  [key=2, style=dotted];
m9_3827 -> m9_3830  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_3830 -> m9_3831  [key=0, style=solid];
m9_3830 -> m9_143  [key=2, style=dotted];
m9_3829 -> m9_3830  [key=0, style=solid];
m9_3829 -> m9_12  [key=2, style=dotted];
m9_3832 -> m9_3824  [key=0, style=bold, color=blue];
m9_920 -> m9_921  [key=0, style=solid];
m9_921 -> m9_922  [key=0, style=solid];
m9_921 -> m9_925  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_922 -> m9_923  [key=0, style=solid];
m9_922 -> m9_24  [key=2, style=dotted];
m9_922 -> m9_924  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_923 -> m9_920  [key=0, style=bold, color=blue];
m9_1406 -> m9_1407  [key=0, style=solid];
m9_1407 -> m9_1408  [key=0, style=solid];
m9_1407 -> m9_1415  [key=2, style=dotted];
m9_1407 -> m9_1409  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_1408 -> m9_1409  [key=0, style=solid];
m9_1409 -> m9_1410  [key=0, style=solid];
m9_1409 -> m9_11  [key=2, style=dotted];
m9_1409 -> m9_1411  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1410 -> m9_1411  [key=0, style=solid];
m9_1410 -> m9_14  [key=2, style=dotted];
m9_1411 -> m9_1412  [key=0, style=solid];
m9_1411 -> m9_13  [key=2, style=dotted];
m9_1412 -> m9_1413  [key=0, style=solid];
m9_1412 -> m9_11  [key=2, style=dotted];
m9_1413 -> m9_1414  [key=0, style=solid];
m9_1413 -> m9_14  [key=2, style=dotted];
m9_1414 -> m9_1406  [key=0, style=bold, color=blue];
m9_3264 -> m9_3265  [key=0, style=solid];
m9_3265 -> m9_3266  [key=0, style=solid];
m9_3265 -> m9_46  [key=2, style=dotted];
m9_3265 -> m9_938  [key=2, style=dotted];
m9_3266 -> m9_3267  [key=0, style=solid];
m9_3266 -> m9_47  [key=2, style=dotted];
m9_3266 -> m9_49  [key=2, style=dotted];
m9_3266 -> m9_3268  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3267 -> m9_3268  [key=0, style=solid];
m9_3267 -> m9_12  [key=2, style=dotted];
m9_3268 -> m9_3269  [key=0, style=solid];
m9_3268 -> m9_13  [key=2, style=dotted];
m9_3268 -> m9_3270  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_3268 -> m9_3271  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_3269 -> m9_3270  [key=0, style=solid];
m9_3269 -> m9_14  [key=2, style=dotted];
m9_3270 -> m9_3271  [key=0, style=solid];
m9_3270 -> m9_938  [key=2, style=dotted];
m9_3270 -> m9_14  [key=2, style=dotted];
m9_3271 -> m9_3272  [key=0, style=solid];
m9_3271 -> m9_938  [key=2, style=dotted];
m9_3271 -> m9_14  [key=2, style=dotted];
m9_3272 -> m9_3264  [key=0, style=bold, color=blue];
m9_618 -> m9_619  [key=0, style=solid];
m9_619 -> m9_620  [key=0, style=solid];
m9_619 -> m9_624  [key=2, style=dotted];
m9_619 -> m9_625  [key=2, style=dotted];
m9_620 -> m9_621  [key=0, style=solid];
m9_620 -> m9_11  [key=2, style=dotted];
m9_620 -> m9_622  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_621 -> m9_622  [key=0, style=solid];
m9_622 -> m9_623  [key=0, style=solid];
m9_622 -> m9_14  [key=2, style=dotted];
m9_623 -> m9_618  [key=0, style=bold, color=blue];
m9_2774 -> m9_2775  [key=0, style=solid];
m9_2775 -> m9_2776  [key=0, style=solid];
m9_2775 -> m9_2785  [key=2, style=dotted];
m9_2775 -> m9_2779  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2775 -> m9_2780  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2775 -> m9_2781  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2775 -> m9_2782  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2775 -> m9_2783  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2776 -> m9_2777  [key=0, style=solid];
m9_2776 -> m9_170  [key=2, style=dotted];
m9_2776 -> m9_2778  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2779 -> m9_2780  [key=0, style=solid];
m9_2779 -> m9_14  [key=2, style=dotted];
m9_2780 -> m9_2781  [key=0, style=solid];
m9_2780 -> m9_14  [key=2, style=dotted];
m9_2781 -> m9_2782  [key=0, style=solid];
m9_2781 -> m9_14  [key=2, style=dotted];
m9_2782 -> m9_2783  [key=0, style=solid];
m9_2782 -> m9_14  [key=2, style=dotted];
m9_2783 -> m9_2784  [key=0, style=solid];
m9_2783 -> m9_14  [key=2, style=dotted];
m9_2777 -> m9_2778  [key=0, style=solid];
m9_2777 -> m9_12  [key=2, style=dotted];
m9_2778 -> m9_2779  [key=0, style=solid];
m9_2778 -> m9_13  [key=2, style=dotted];
m9_2778 -> m9_2780  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2778 -> m9_2781  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2778 -> m9_2782  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2778 -> m9_2783  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2784 -> m9_2774  [key=0, style=bold, color=blue];
m9_3624 -> m9_3625  [key=0, style=solid];
m9_3625 -> m9_3626  [key=0, style=solid];
m9_3626 -> m9_3627  [key=0, style=solid];
m9_3626 -> m9_47  [key=2, style=dotted];
m9_3626 -> m9_376  [key=2, style=dotted];
m9_3626 -> m9_143  [key=2, style=dotted];
m9_3626 -> m9_3628  [key=1, style=dashed, color=darkseagreen4, label=people];
m9_3626 -> m9_3629  [key=1, style=dashed, color=darkseagreen4, label=people];
m9_3627 -> m9_3628  [key=0, style=solid];
m9_3627 -> m9_14  [key=2, style=dotted];
m9_3628 -> m9_3629  [key=0, style=solid];
m9_3628 -> m9_3630  [key=1, style=dashed, color=darkseagreen4, label=john];
m9_3628 -> m9_3631  [key=1, style=dashed, color=darkseagreen4, label=john];
m9_3629 -> m9_3630  [key=0, style=solid];
m9_3629 -> m9_3631  [key=1, style=dashed, color=darkseagreen4, label=jane];
m9_3630 -> m9_3631  [key=0, style=solid];
m9_3630 -> m9_14  [key=2, style=dotted];
m9_3631 -> m9_3632  [key=0, style=solid];
m9_3631 -> m9_14  [key=2, style=dotted];
m9_3632 -> m9_3624  [key=0, style=bold, color=blue];
m9_1627 -> m9_1628  [key=0, style=solid];
m9_1628 -> m9_1629  [key=0, style=solid];
m9_1628 -> m9_1632  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1629 -> m9_1630  [key=0, style=solid];
m9_1629 -> m9_24  [key=2, style=dotted];
m9_1629 -> m9_1631  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1630 -> m9_1627  [key=0, style=bold, color=blue];
m9_3420 -> m9_3421  [key=0, style=solid];
m9_3421 -> m9_3422  [key=0, style=solid];
m9_3422 -> m9_3423  [key=0, style=solid];
m9_3422 -> m9_13  [key=2, style=dotted];
m9_3422 -> m9_3424  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_3423 -> m9_3424  [key=0, style=solid];
m9_3423 -> m9_14  [key=2, style=dotted];
m9_3424 -> m9_3425  [key=0, style=solid];
m9_3424 -> m9_14  [key=2, style=dotted];
m9_3425 -> m9_3420  [key=0, style=bold, color=blue];
m9_3918 -> m9_3919  [key=0, style=solid];
m9_3919 -> m9_3920  [key=0, style=solid];
m9_3919 -> m9_2398  [key=2, style=dotted];
m9_3919 -> m9_3922  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m9_3919 -> m9_3925  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m9_3920 -> m9_3921  [key=0, style=solid];
m9_3920 -> m9_3922  [key=0, style=solid];
m9_3922 -> m9_3923  [key=0, style=solid];
m9_3922 -> m9_3929  [key=2, style=dotted];
m9_3922 -> m9_3930  [key=2, style=dotted];
m9_3922 -> m9_3926  [key=1, style=dashed, color=darkseagreen4, label=address];
m9_3922 -> m9_3927  [key=1, style=dashed, color=darkseagreen4, label=address];
m9_3925 -> m9_3926  [key=0, style=solid];
m9_3925 -> m9_3927  [key=0, style=solid];
m9_3925 -> m9_3931  [key=2, style=dotted];
m9_3925 -> m9_3930  [key=2, style=dotted];
m9_3925 -> m9_3932  [key=2, style=dotted];
m9_3925 -> m9_3925  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m9_3921 -> m9_3928  [key=0, style=solid];
m9_3923 -> m9_3924  [key=0, style=solid];
m9_3923 -> m9_3925  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m9_3926 -> m9_3928  [key=0, style=solid];
m9_3926 -> m9_3933  [key=2, style=dotted];
m9_3927 -> m9_3928  [key=0, style=solid];
m9_3927 -> m9_3934  [key=2, style=dotted];
m9_3924 -> m9_3925  [key=0, style=solid];
m9_3928 -> m9_3918  [key=0, style=bold, color=blue];
m9_3972 -> m9_3973  [key=0, style=solid];
m9_3973 -> m9_3974  [key=0, style=solid];
m9_3974 -> m9_3975  [key=0, style=solid];
m9_3975 -> m9_3972  [key=0, style=bold, color=blue];
m9_1669 -> m9_1670  [key=0, style=solid];
m9_1670 -> m9_1671  [key=0, style=solid];
m9_1671 -> m9_1672  [key=0, style=solid];
m9_1671 -> m9_13  [key=2, style=dotted];
m9_1672 -> m9_1673  [key=0, style=solid];
m9_1672 -> m9_1675  [key=0, style=solid];
m9_1672 -> m9_1293  [key=2, style=dotted];
m9_1673 -> m9_1674  [key=0, style=solid];
m9_1674 -> m9_1675  [key=0, style=solid];
m9_1674 -> m9_1294  [key=2, style=dotted];
m9_1674 -> m9_302  [key=2, style=dotted];
m9_1675 -> m9_1669  [key=0, style=bold, color=blue];
m9_378 -> m9_379  [key=0, style=solid];
m9_379 -> m9_380  [key=0, style=solid];
m9_379 -> m9_47  [key=2, style=dotted];
m9_379 -> m9_381  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_382  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_383  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_384  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_385  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_386  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_387  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_388  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_390  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_391  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_392  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_393  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_394  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_395  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_396  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_397  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_398  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_399  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_400  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_401  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_402  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_403  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_404  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_405  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_406  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_407  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_408  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_409  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_410  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_411  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_412  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_413  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_414  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_415  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_416  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_417  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_418  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_419  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_420  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_421  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_422  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_423  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_424  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_425  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_427  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_428  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_429  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_430  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_431  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_432  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_433  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_435  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_436  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_437  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_438  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_439  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_379 -> m9_440  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_380 -> m9_381  [key=0, style=solid];
m9_380 -> m9_370  [key=2, style=dotted];
m9_380 -> m9_382  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m9_381 -> m9_382  [key=0, style=solid];
m9_382 -> m9_383  [key=0, style=solid];
m9_382 -> m9_14  [key=2, style=dotted];
m9_383 -> m9_384  [key=0, style=solid];
m9_384 -> m9_385  [key=0, style=solid];
m9_384 -> m9_14  [key=2, style=dotted];
m9_385 -> m9_386  [key=0, style=solid];
m9_386 -> m9_387  [key=0, style=solid];
m9_386 -> m9_14  [key=2, style=dotted];
m9_387 -> m9_388  [key=0, style=solid];
m9_387 -> m9_371  [key=2, style=dotted];
m9_388 -> m9_389  [key=0, style=solid];
m9_388 -> m9_371  [key=2, style=dotted];
m9_388 -> m9_14  [key=2, style=dotted];
m9_390 -> m9_391  [key=0, style=solid];
m9_391 -> m9_392  [key=0, style=solid];
m9_391 -> m9_14  [key=2, style=dotted];
m9_392 -> m9_393  [key=0, style=solid];
m9_392 -> m9_82  [key=2, style=dotted];
m9_392 -> m9_169  [key=2, style=dotted];
m9_393 -> m9_394  [key=0, style=solid];
m9_393 -> m9_14  [key=2, style=dotted];
m9_394 -> m9_395  [key=0, style=solid];
m9_394 -> m9_374  [key=2, style=dotted];
m9_395 -> m9_396  [key=0, style=solid];
m9_395 -> m9_375  [key=2, style=dotted];
m9_395 -> m9_14  [key=2, style=dotted];
m9_396 -> m9_397  [key=0, style=solid];
m9_397 -> m9_398  [key=0, style=solid];
m9_397 -> m9_14  [key=2, style=dotted];
m9_398 -> m9_399  [key=0, style=solid];
m9_399 -> m9_400  [key=0, style=solid];
m9_399 -> m9_14  [key=2, style=dotted];
m9_400 -> m9_401  [key=0, style=solid];
m9_401 -> m9_402  [key=0, style=solid];
m9_401 -> m9_14  [key=2, style=dotted];
m9_402 -> m9_403  [key=0, style=solid];
m9_403 -> m9_404  [key=0, style=solid];
m9_403 -> m9_14  [key=2, style=dotted];
m9_404 -> m9_405  [key=0, style=solid];
m9_405 -> m9_406  [key=0, style=solid];
m9_405 -> m9_14  [key=2, style=dotted];
m9_406 -> m9_407  [key=0, style=solid];
m9_407 -> m9_408  [key=0, style=solid];
m9_407 -> m9_14  [key=2, style=dotted];
m9_408 -> m9_409  [key=0, style=solid];
m9_409 -> m9_410  [key=0, style=solid];
m9_409 -> m9_14  [key=2, style=dotted];
m9_410 -> m9_411  [key=0, style=solid];
m9_411 -> m9_412  [key=0, style=solid];
m9_411 -> m9_14  [key=2, style=dotted];
m9_412 -> m9_413  [key=0, style=solid];
m9_413 -> m9_414  [key=0, style=solid];
m9_413 -> m9_14  [key=2, style=dotted];
m9_414 -> m9_415  [key=0, style=solid];
m9_415 -> m9_416  [key=0, style=solid];
m9_415 -> m9_14  [key=2, style=dotted];
m9_416 -> m9_417  [key=0, style=solid];
m9_417 -> m9_418  [key=0, style=solid];
m9_417 -> m9_14  [key=2, style=dotted];
m9_418 -> m9_419  [key=0, style=solid];
m9_419 -> m9_420  [key=0, style=solid];
m9_419 -> m9_14  [key=2, style=dotted];
m9_420 -> m9_421  [key=0, style=solid];
m9_421 -> m9_422  [key=0, style=solid];
m9_421 -> m9_14  [key=2, style=dotted];
m9_422 -> m9_423  [key=0, style=solid];
m9_423 -> m9_424  [key=0, style=solid];
m9_423 -> m9_14  [key=2, style=dotted];
m9_424 -> m9_425  [key=0, style=solid];
m9_425 -> m9_426  [key=0, style=solid];
m9_425 -> m9_14  [key=2, style=dotted];
m9_427 -> m9_428  [key=0, style=solid];
m9_428 -> m9_429  [key=0, style=solid];
m9_428 -> m9_14  [key=2, style=dotted];
m9_429 -> m9_430  [key=0, style=solid];
m9_429 -> m9_442  [key=2, style=dotted];
m9_429 -> m9_14  [key=2, style=dotted];
m9_430 -> m9_431  [key=0, style=solid];
m9_431 -> m9_432  [key=0, style=solid];
m9_431 -> m9_442  [key=2, style=dotted];
m9_431 -> m9_14  [key=2, style=dotted];
m9_432 -> m9_433  [key=0, style=solid];
m9_433 -> m9_434  [key=0, style=solid];
m9_433 -> m9_14  [key=2, style=dotted];
m9_435 -> m9_436  [key=0, style=solid];
m9_436 -> m9_437  [key=0, style=solid];
m9_436 -> m9_14  [key=2, style=dotted];
m9_437 -> m9_438  [key=0, style=solid];
m9_438 -> m9_439  [key=0, style=solid];
m9_438 -> m9_14  [key=2, style=dotted];
m9_439 -> m9_440  [key=0, style=solid];
m9_440 -> m9_441  [key=0, style=solid];
m9_440 -> m9_14  [key=2, style=dotted];
m9_389 -> m9_390  [key=0, style=solid];
m9_389 -> m9_372  [key=2, style=dotted];
m9_389 -> m9_391  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m9_426 -> m9_427  [key=0, style=solid];
m9_426 -> m9_376  [key=2, style=dotted];
m9_426 -> m9_428  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m9_426 -> m9_429  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m9_426 -> m9_430  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m9_426 -> m9_444  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m9_426 -> m9_431  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m9_434 -> m9_435  [key=0, style=solid];
m9_434 -> m9_377  [key=2, style=dotted];
m9_434 -> m9_436  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m9_441 -> m9_378  [key=0, style=bold, color=blue];
m9_665 -> m9_678  [key=0, style=solid];
m9_665 -> m9_679  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_678 -> m9_679  [key=0, style=solid];
m9_679 -> m9_680  [key=0, style=solid];
m9_680 -> m9_665  [key=0, style=bold, color=blue];
m9_2499 -> m9_2500  [key=0, style=solid];
m9_2500 -> m9_2501  [key=0, style=solid];
m9_2500 -> m9_2491  [key=2, style=dotted];
m9_2500 -> m9_2502  [key=1, style=dashed, color=darkseagreen4, label=derived];
m9_2501 -> m9_2502  [key=0, style=solid];
m9_2501 -> m9_47  [key=2, style=dotted];
m9_2501 -> m9_2503  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_2502 -> m9_2503  [key=0, style=solid];
m9_2502 -> m9_49  [key=2, style=dotted];
m9_2503 -> m9_2504  [key=0, style=solid];
m9_2503 -> m9_143  [key=2, style=dotted];
m9_2503 -> m9_2505  [key=1, style=dashed, color=darkseagreen4, label=meh];
m9_2504 -> m9_2505  [key=0, style=solid];
m9_2504 -> m9_14  [key=2, style=dotted];
m9_2505 -> m9_2506  [key=0, style=solid];
m9_2505 -> m9_14  [key=2, style=dotted];
m9_2506 -> m9_2499  [key=0, style=bold, color=blue];
m9_1655 -> m9_1656  [key=0, style=solid];
m9_1656 -> m9_1657  [key=0, style=solid];
m9_1656 -> m9_1660  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1657 -> m9_1658  [key=0, style=solid];
m9_1657 -> m9_24  [key=2, style=dotted];
m9_1657 -> m9_1659  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1658 -> m9_1655  [key=0, style=bold, color=blue];
m9_249 -> m9_250  [key=0, style=solid];
m9_250 -> m9_251  [key=0, style=solid];
m9_250 -> m9_257  [key=2, style=dotted];
m9_250 -> m9_253  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_250 -> m9_254  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_250 -> m9_255  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_251 -> m9_252  [key=0, style=solid];
m9_251 -> m9_11  [key=2, style=dotted];
m9_253 -> m9_254  [key=0, style=solid];
m9_253 -> m9_14  [key=2, style=dotted];
m9_254 -> m9_255  [key=0, style=solid];
m9_254 -> m9_14  [key=2, style=dotted];
m9_255 -> m9_256  [key=0, style=solid];
m9_255 -> m9_14  [key=2, style=dotted];
m9_252 -> m9_253  [key=0, style=solid];
m9_252 -> m9_13  [key=2, style=dotted];
m9_252 -> m9_254  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_252 -> m9_255  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_256 -> m9_249  [key=0, style=bold, color=blue];
m9_2474 -> m9_2475  [key=0, style=solid];
m9_2475 -> m9_2476  [key=0, style=solid];
m9_2475 -> m9_2477  [key=2, style=dotted];
m9_2476 -> m9_2474  [key=0, style=bold, color=blue];
m9_3596 -> m9_3597  [key=0, style=solid];
m9_3596 -> m9_3599  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_3597 -> m9_3598  [key=0, style=solid];
m9_3597 -> m9_3599  [key=0, style=solid];
m9_3599 -> m9_3600  [key=0, style=solid];
m9_3598 -> m9_3600  [key=0, style=solid];
m9_3598 -> m9_1932  [key=2, style=dotted];
m9_3600 -> m9_3596  [key=0, style=bold, color=blue];
m9_3701 -> m9_3702  [key=0, style=solid];
m9_3702 -> m9_3703  [key=0, style=solid];
m9_3702 -> m9_3691  [key=2, style=dotted];
m9_3703 -> m9_3701  [key=0, style=bold, color=blue];
m9_3394 -> m9_3395  [key=0, style=solid];
m9_3395 -> m9_3396  [key=0, style=solid];
m9_3396 -> m9_3394  [key=0, style=bold, color=blue];
m9_2680 -> m9_2681  [key=0, style=solid];
m9_2681 -> m9_2682  [key=0, style=solid];
m9_2682 -> m9_2683  [key=0, style=solid];
m9_2682 -> m9_46  [key=2, style=dotted];
m9_2683 -> m9_2680  [key=0, style=bold, color=blue];
m9_2466 -> m9_2467  [key=0, style=solid];
m9_2467 -> m9_2468  [key=0, style=solid];
m9_2468 -> m9_2469  [key=0, style=solid];
m9_2468 -> m9_217  [key=2, style=dotted];
m9_2468 -> m9_218  [key=2, style=dotted];
m9_2468 -> m9_2471  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_2469 -> m9_2470  [key=0, style=solid];
m9_2471 -> m9_2472  [key=0, style=solid];
m9_2471 -> m9_2398  [key=2, style=dotted];
m9_2470 -> m9_2471  [key=0, style=solid];
m9_2470 -> m9_219  [key=2, style=dotted];
m9_2472 -> m9_2473  [key=0, style=solid];
m9_2472 -> m9_14  [key=2, style=dotted];
m9_2473 -> m9_2466  [key=0, style=bold, color=blue];
m9_2731 -> m9_2732  [key=0, style=solid];
m9_2732 -> m9_2733  [key=0, style=solid];
m9_2733 -> m9_2731  [key=0, style=bold, color=blue];
m9_1090 -> m9_1091  [key=0, style=solid];
m9_1091 -> m9_1092  [key=0, style=solid];
m9_1091 -> m9_1097  [key=2, style=dotted];
m9_1091 -> m9_1095  [key=1, style=dashed, color=darkseagreen4, label=ts];
m9_1092 -> m9_1093  [key=0, style=solid];
m9_1092 -> m9_1098  [key=2, style=dotted];
m9_1092 -> m9_170  [key=2, style=dotted];
m9_1092 -> m9_1094  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1095 -> m9_1096  [key=0, style=solid];
m9_1095 -> m9_14  [key=2, style=dotted];
m9_1093 -> m9_1094  [key=0, style=solid];
m9_1093 -> m9_12  [key=2, style=dotted];
m9_1094 -> m9_1095  [key=0, style=solid];
m9_1094 -> m9_13  [key=2, style=dotted];
m9_1096 -> m9_1090  [key=0, style=bold, color=blue];
m9_3426 -> m9_3427  [key=0, style=solid];
m9_3427 -> m9_3428  [key=0, style=solid];
m9_3427 -> m9_3394  [key=2, style=dotted];
m9_3428 -> m9_3429  [key=0, style=solid];
m9_3428 -> m9_11  [key=2, style=dotted];
m9_3428 -> m9_3431  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3428 -> m9_3437  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3429 -> m9_3430  [key=0, style=solid];
m9_3429 -> m9_14  [key=2, style=dotted];
m9_3431 -> m9_3432  [key=0, style=solid];
m9_3430 -> m9_3431  [key=0, style=solid];
m9_3432 -> m9_3433  [key=0, style=solid];
m9_3432 -> m9_3435  [key=2, style=dotted];
m9_3433 -> m9_3434  [key=0, style=solid];
m9_3433 -> m9_14  [key=2, style=dotted];
m9_3434 -> m9_3426  [key=0, style=bold, color=blue];
m9_1997 -> m9_1998  [key=0, style=solid];
m9_1997 -> m9_1999  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2000  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2001  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2002  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2003  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2004  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2005  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2006  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2007  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2008  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2009  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2010  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2011  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2012  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2013  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2014  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1997 -> m9_2015  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_1998 -> m9_1999  [key=0, style=solid];
m9_1998 -> m9_550  [key=2, style=dotted];
m9_1999 -> m9_2000  [key=0, style=solid];
m9_1999 -> m9_551  [key=2, style=dotted];
m9_2000 -> m9_2001  [key=0, style=solid];
m9_2000 -> m9_552  [key=2, style=dotted];
m9_2001 -> m9_2002  [key=0, style=solid];
m9_2001 -> m9_552  [key=2, style=dotted];
m9_2002 -> m9_2003  [key=0, style=solid];
m9_2002 -> m9_552  [key=2, style=dotted];
m9_2003 -> m9_2004  [key=0, style=solid];
m9_2003 -> m9_552  [key=2, style=dotted];
m9_2004 -> m9_2005  [key=0, style=solid];
m9_2004 -> m9_2017  [key=2, style=dotted];
m9_2005 -> m9_2006  [key=0, style=solid];
m9_2005 -> m9_2018  [key=2, style=dotted];
m9_2006 -> m9_2007  [key=0, style=solid];
m9_2006 -> m9_2019  [key=2, style=dotted];
m9_2007 -> m9_2008  [key=0, style=solid];
m9_2007 -> m9_2020  [key=2, style=dotted];
m9_2008 -> m9_2009  [key=0, style=solid];
m9_2008 -> m9_2021  [key=2, style=dotted];
m9_2009 -> m9_2010  [key=0, style=solid];
m9_2009 -> m9_2022  [key=2, style=dotted];
m9_2010 -> m9_2011  [key=0, style=solid];
m9_2010 -> m9_2023  [key=2, style=dotted];
m9_2011 -> m9_2012  [key=0, style=solid];
m9_2011 -> m9_2024  [key=2, style=dotted];
m9_2012 -> m9_2013  [key=0, style=solid];
m9_2012 -> m9_2025  [key=2, style=dotted];
m9_2013 -> m9_2014  [key=0, style=solid];
m9_2013 -> m9_2026  [key=2, style=dotted];
m9_2014 -> m9_2015  [key=0, style=solid];
m9_2014 -> m9_2027  [key=2, style=dotted];
m9_2015 -> m9_2016  [key=0, style=solid];
m9_2015 -> m9_2028  [key=2, style=dotted];
m9_2016 -> m9_1997  [key=0, style=bold, color=blue];
m9_509 -> m9_510  [key=0, style=solid];
m9_510 -> m9_511  [key=0, style=solid];
m9_510 -> m9_517  [key=2, style=dotted];
m9_510 -> m9_514  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m9_511 -> m9_512  [key=0, style=solid];
m9_511 -> m9_11  [key=2, style=dotted];
m9_511 -> m9_513  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_514 -> m9_515  [key=0, style=solid];
m9_514 -> m9_14  [key=2, style=dotted];
m9_514 -> m9_514  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m9_512 -> m9_513  [key=0, style=solid];
m9_512 -> m9_14  [key=2, style=dotted];
m9_513 -> m9_514  [key=0, style=solid];
m9_513 -> m9_13  [key=2, style=dotted];
m9_515 -> m9_516  [key=0, style=solid];
m9_515 -> m9_14  [key=2, style=dotted];
m9_515 -> m9_515  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m9_516 -> m9_509  [key=0, style=bold, color=blue];
m9_2990 -> m9_2991  [key=0, style=solid];
m9_2991 -> m9_2992  [key=0, style=solid];
m9_2991 -> m9_47  [key=2, style=dotted];
m9_2991 -> m9_668  [key=2, style=dotted];
m9_2992 -> m9_2993  [key=0, style=solid];
m9_2992 -> m9_217  [key=2, style=dotted];
m9_2992 -> m9_218  [key=2, style=dotted];
m9_2992 -> m9_2398  [key=2, style=dotted];
m9_2992 -> m9_2994  [key=1, style=dashed, color=darkseagreen4, label=dict];
m9_2993 -> m9_2994  [key=0, style=solid];
m9_2993 -> m9_14  [key=2, style=dotted];
m9_2994 -> m9_2995  [key=0, style=solid];
m9_2994 -> m9_14  [key=2, style=dotted];
m9_2995 -> m9_2990  [key=0, style=bold, color=blue];
m9_2709 -> m9_2710  [key=0, style=solid];
m9_2710 -> m9_2711  [key=0, style=solid];
m9_2710 -> m9_2231  [key=2, style=dotted];
m9_2711 -> m9_2709  [key=0, style=bold, color=blue];
m9_3273 -> m9_3274  [key=0, style=solid];
m9_3274 -> m9_3275  [key=0, style=solid];
m9_3274 -> m9_219  [key=2, style=dotted];
m9_3274 -> m9_217  [key=2, style=dotted];
m9_3274 -> m9_218  [key=2, style=dotted];
m9_3274 -> m9_2847  [key=2, style=dotted];
m9_3275 -> m9_3276  [key=0, style=solid];
m9_3275 -> m9_14  [key=2, style=dotted];
m9_3276 -> m9_3273  [key=0, style=bold, color=blue];
m9_3384 -> m9_3385  [key=0, style=solid];
m9_3385 -> m9_3386  [key=0, style=solid];
m9_3385 -> m9_13  [key=2, style=dotted];
m9_3386 -> m9_3387  [key=0, style=solid];
m9_3386 -> m9_14  [key=2, style=dotted];
m9_3386 -> m9_3386  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_3387 -> m9_3388  [key=0, style=solid];
m9_3387 -> m9_14  [key=2, style=dotted];
m9_3387 -> m9_3387  [key=1, style=dashed, color=darkseagreen4, label=result];
m9_3388 -> m9_3384  [key=0, style=bold, color=blue];
m9_1924 -> m9_1925  [key=0, style=solid];
m9_1925 -> m9_1924  [key=0, style=bold, color=blue];
m9_791 -> m9_792  [key=0, style=solid];
m9_792 -> m9_793  [key=0, style=solid];
m9_793 -> m9_794  [key=0, style=solid];
m9_793 -> m9_772  [key=2, style=dotted];
m9_793 -> m9_795  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_793 -> m9_796  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_794 -> m9_795  [key=0, style=solid];
m9_794 -> m9_14  [key=2, style=dotted];
m9_795 -> m9_796  [key=0, style=solid];
m9_795 -> m9_798  [key=2, style=dotted];
m9_795 -> m9_14  [key=2, style=dotted];
m9_796 -> m9_797  [key=0, style=solid];
m9_796 -> m9_14  [key=2, style=dotted];
m9_797 -> m9_791  [key=0, style=bold, color=blue];
m9_1345 -> m9_1346  [key=0, style=solid];
m9_1346 -> m9_1347  [key=0, style=solid];
m9_1346 -> m9_1349  [key=2, style=dotted];
m9_1346 -> m9_938  [key=2, style=dotted];
m9_1347 -> m9_1348  [key=0, style=solid];
m9_1348 -> m9_1345  [key=0, style=bold, color=blue];
m9_1399 -> m9_1400  [key=0, style=solid];
m9_1400 -> m9_1401  [key=0, style=solid];
m9_1401 -> m9_1402  [key=0, style=solid];
m9_1401 -> m9_13  [key=2, style=dotted];
m9_1402 -> m9_1403  [key=0, style=solid];
m9_1402 -> m9_1405  [key=0, style=solid];
m9_1402 -> m9_1293  [key=2, style=dotted];
m9_1403 -> m9_1404  [key=0, style=solid];
m9_1404 -> m9_1405  [key=0, style=solid];
m9_1404 -> m9_1294  [key=2, style=dotted];
m9_1404 -> m9_302  [key=2, style=dotted];
m9_1405 -> m9_1399  [key=0, style=bold, color=blue];
m9_1302 -> m9_1303  [key=0, style=solid];
m9_1303 -> m9_1304  [key=0, style=solid];
m9_1304 -> m9_1305  [key=0, style=solid];
m9_1304 -> m9_13  [key=2, style=dotted];
m9_1305 -> m9_1306  [key=0, style=solid];
m9_1305 -> m9_1308  [key=0, style=solid];
m9_1305 -> m9_1293  [key=2, style=dotted];
m9_1306 -> m9_1307  [key=0, style=solid];
m9_1307 -> m9_1308  [key=0, style=solid];
m9_1307 -> m9_1294  [key=2, style=dotted];
m9_1307 -> m9_302  [key=2, style=dotted];
m9_1308 -> m9_1302  [key=0, style=bold, color=blue];
m9_1295 -> m9_1296  [key=0, style=solid];
m9_1296 -> m9_1297  [key=0, style=solid];
m9_1296 -> m9_24  [key=2, style=dotted];
m9_1296 -> m9_1298  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1297 -> m9_1295  [key=0, style=bold, color=blue];
m9_3377 -> m9_3378  [key=0, style=solid];
m9_3378 -> m9_3379  [key=0, style=solid];
m9_3379 -> m9_3377  [key=0, style=bold, color=blue];
m9_2510 -> m9_2511  [key=0, style=solid];
m9_2511 -> m9_2512  [key=0, style=solid];
m9_2511 -> m9_536  [key=2, style=dotted];
m9_2512 -> m9_2510  [key=0, style=bold, color=blue];
m9_3731 -> m9_3732  [key=0, style=solid];
m9_3732 -> m9_3733  [key=0, style=solid];
m9_3732 -> m9_3691  [key=2, style=dotted];
m9_3733 -> m9_3731  [key=0, style=bold, color=blue];
m9_3104 -> m9_3105  [key=0, style=solid];
m9_3105 -> m9_3106  [key=0, style=solid];
m9_3105 -> m9_3112  [key=2, style=dotted];
m9_3105 -> m9_3107  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_3105 -> m9_3108  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_3105 -> m9_3110  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_3106 -> m9_3107  [key=0, style=solid];
m9_3107 -> m9_3108  [key=0, style=solid];
m9_3108 -> m9_3109  [key=0, style=solid];
m9_3108 -> m9_11  [key=2, style=dotted];
m9_3110 -> m9_3111  [key=0, style=solid];
m9_3110 -> m9_14  [key=2, style=dotted];
m9_3109 -> m9_3110  [key=0, style=solid];
m9_3109 -> m9_13  [key=2, style=dotted];
m9_3111 -> m9_3104  [key=0, style=bold, color=blue];
m9_3976 -> m9_3977  [key=0, style=solid];
m9_3977 -> m9_3978  [key=0, style=solid];
m9_3978 -> m9_3976  [key=0, style=bold, color=blue];
m9_1519 -> m9_1520  [key=0, style=solid];
m9_1520 -> m9_1521  [key=0, style=solid];
m9_1521 -> m9_1522  [key=0, style=solid];
m9_1521 -> m9_772  [key=2, style=dotted];
m9_1521 -> m9_1523  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_1521 -> m9_1524  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_1521 -> m9_1525  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_1521 -> m9_1526  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_1521 -> m9_1527  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m9_1522 -> m9_1523  [key=0, style=solid];
m9_1522 -> m9_14  [key=2, style=dotted];
m9_1523 -> m9_1524  [key=0, style=solid];
m9_1523 -> m9_938  [key=2, style=dotted];
m9_1523 -> m9_14  [key=2, style=dotted];
m9_1524 -> m9_1525  [key=0, style=solid];
m9_1524 -> m9_14  [key=2, style=dotted];
m9_1525 -> m9_1526  [key=0, style=solid];
m9_1525 -> m9_14  [key=2, style=dotted];
m9_1526 -> m9_1527  [key=0, style=solid];
m9_1526 -> m9_14  [key=2, style=dotted];
m9_1527 -> m9_1528  [key=0, style=solid];
m9_1527 -> m9_14  [key=2, style=dotted];
m9_1528 -> m9_1519  [key=0, style=bold, color=blue];
m9_763 -> m9_764  [key=0, style=solid];
m9_764 -> m9_765  [key=0, style=solid];
m9_764 -> m9_771  [key=2, style=dotted];
m9_764 -> m9_767  [key=1, style=dashed, color=darkseagreen4, label=store];
m9_764 -> m9_768  [key=1, style=dashed, color=darkseagreen4, label=store];
m9_765 -> m9_766  [key=0, style=solid];
m9_765 -> m9_11  [key=2, style=dotted];
m9_765 -> m9_769  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m9_767 -> m9_768  [key=0, style=solid];
m9_767 -> m9_14  [key=2, style=dotted];
m9_768 -> m9_769  [key=0, style=solid];
m9_768 -> m9_14  [key=2, style=dotted];
m9_766 -> m9_767  [key=0, style=solid];
m9_766 -> m9_772  [key=2, style=dotted];
m9_766 -> m9_768  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m9_769 -> m9_770  [key=0, style=solid];
m9_769 -> m9_773  [key=2, style=dotted];
m9_770 -> m9_763  [key=0, style=bold, color=blue];
m9_3514 -> m9_3515  [key=0, style=solid];
m9_3515 -> m9_3514  [key=0, style=bold, color=blue];
m9_3301 -> m9_3302  [key=0, style=solid];
m9_3302 -> m9_3303  [key=0, style=solid];
m9_3302 -> m9_3306  [key=2, style=dotted];
m9_3302 -> m9_19  [key=2, style=dotted];
m9_3302 -> m9_3307  [key=2, style=dotted];
m9_3303 -> m9_3304  [key=0, style=solid];
m9_3303 -> m9_170  [key=2, style=dotted];
m9_3304 -> m9_3305  [key=0, style=solid];
m9_3304 -> m9_12  [key=2, style=dotted];
m9_3305 -> m9_3301  [key=0, style=bold, color=blue];
m9_2560 -> m9_2561  [key=0, style=solid];
m9_2561 -> m9_2562  [key=0, style=solid];
m9_2561 -> m9_13  [key=2, style=dotted];
m9_2561 -> m9_2563  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2561 -> m9_2564  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2562 -> m9_2563  [key=0, style=solid];
m9_2562 -> m9_14  [key=2, style=dotted];
m9_2563 -> m9_2564  [key=0, style=solid];
m9_2563 -> m9_14  [key=2, style=dotted];
m9_2564 -> m9_2565  [key=0, style=solid];
m9_2564 -> m9_14  [key=2, style=dotted];
m9_2565 -> m9_2560  [key=0, style=bold, color=blue];
m9_1024 -> m9_1025  [key=0, style=solid];
m9_1025 -> m9_1026  [key=0, style=solid];
m9_1025 -> m9_1040  [key=2, style=dotted];
m9_1025 -> m9_1027  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1025 -> m9_1028  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1025 -> m9_1029  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1025 -> m9_1030  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1026 -> m9_1027  [key=0, style=solid];
m9_1027 -> m9_1028  [key=0, style=solid];
m9_1027 -> m9_169  [key=2, style=dotted];
m9_1028 -> m9_1029  [key=0, style=solid];
m9_1028 -> m9_169  [key=2, style=dotted];
m9_1029 -> m9_1030  [key=0, style=solid];
m9_1029 -> m9_169  [key=2, style=dotted];
m9_1030 -> m9_1031  [key=0, style=solid];
m9_1030 -> m9_11  [key=2, style=dotted];
m9_1031 -> m9_1032  [key=0, style=solid];
m9_1031 -> m9_13  [key=2, style=dotted];
m9_1031 -> m9_1033  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_1031 -> m9_1034  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_1031 -> m9_1035  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_1031 -> m9_1036  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_1031 -> m9_1037  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_1031 -> m9_1038  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m9_1032 -> m9_1033  [key=0, style=solid];
m9_1032 -> m9_14  [key=2, style=dotted];
m9_1033 -> m9_1034  [key=0, style=solid];
m9_1033 -> m9_14  [key=2, style=dotted];
m9_1034 -> m9_1035  [key=0, style=solid];
m9_1034 -> m9_14  [key=2, style=dotted];
m9_1035 -> m9_1036  [key=0, style=solid];
m9_1035 -> m9_14  [key=2, style=dotted];
m9_1036 -> m9_1037  [key=0, style=solid];
m9_1036 -> m9_14  [key=2, style=dotted];
m9_1037 -> m9_1038  [key=0, style=solid];
m9_1037 -> m9_14  [key=2, style=dotted];
m9_1038 -> m9_1039  [key=0, style=solid];
m9_1038 -> m9_14  [key=2, style=dotted];
m9_1039 -> m9_1024  [key=0, style=bold, color=blue];
m9_2081 -> m9_2082  [key=0, style=solid];
m9_2082 -> m9_2083  [key=0, style=solid];
m9_2082 -> m9_1349  [key=2, style=dotted];
m9_2082 -> m9_2084  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2082 -> m9_2085  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2082 -> m9_2086  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2082 -> m9_2090  [key=1, style=dashed, color=darkseagreen4, label=person];
m9_2083 -> m9_2084  [key=0, style=solid];
m9_2083 -> m9_938  [key=2, style=dotted];
m9_2084 -> m9_2085  [key=0, style=solid];
m9_2085 -> m9_2086  [key=0, style=solid];
m9_2086 -> m9_2087  [key=0, style=solid];
m9_2090 -> m9_2091  [key=0, style=solid];
m9_2090 -> m9_1990  [key=2, style=dotted];
m9_2087 -> m9_2088  [key=0, style=solid];
m9_2087 -> m9_222  [key=2, style=dotted];
m9_2087 -> m9_946  [key=2, style=dotted];
m9_2087 -> m9_2090  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_2087 -> m9_2096  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m9_2088 -> m9_2089  [key=0, style=solid];
m9_2096 -> m9_2097  [key=0, style=solid];
m9_2096 -> m9_14  [key=2, style=dotted];
m9_2089 -> m9_2090  [key=0, style=solid];
m9_2089 -> m9_2092  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m9_2092 -> m9_2093  [key=0, style=solid];
m9_2092 -> m9_12  [key=2, style=dotted];
m9_2091 -> m9_2092  [key=0, style=solid];
m9_2091 -> m9_47  [key=2, style=dotted];
m9_2091 -> m9_49  [key=2, style=dotted];
m9_2091 -> m9_2093  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2093 -> m9_2094  [key=0, style=solid];
m9_2093 -> m9_13  [key=2, style=dotted];
m9_2093 -> m9_2095  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2093 -> m9_2096  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2093 -> m9_2097  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2093 -> m9_2098  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2093 -> m9_2099  [key=1, style=dashed, color=darkseagreen4, label=o2];
m9_2094 -> m9_2095  [key=0, style=solid];
m9_2094 -> m9_14  [key=2, style=dotted];
m9_2095 -> m9_2096  [key=0, style=solid];
m9_2095 -> m9_14  [key=2, style=dotted];
m9_2097 -> m9_2098  [key=0, style=solid];
m9_2097 -> m9_14  [key=2, style=dotted];
m9_2098 -> m9_2099  [key=0, style=solid];
m9_2098 -> m9_14  [key=2, style=dotted];
m9_2099 -> m9_2100  [key=0, style=solid];
m9_2099 -> m9_14  [key=2, style=dotted];
m9_2100 -> m9_2081  [key=0, style=bold, color=blue];
m9_3460 -> m9_3461  [key=0, style=solid];
m9_3461 -> m9_3462  [key=0, style=solid];
m9_3461 -> m9_3465  [key=2, style=dotted];
m9_3462 -> m9_3463  [key=0, style=solid];
m9_3462 -> m9_47  [key=2, style=dotted];
m9_3462 -> m9_49  [key=2, style=dotted];
m9_3463 -> m9_3464  [key=0, style=solid];
m9_3463 -> m9_12  [key=2, style=dotted];
m9_3464 -> m9_3460  [key=0, style=bold, color=blue];
m9_3969 -> m9_3970  [key=0, style=solid];
m9_3970 -> m9_3971  [key=0, style=solid];
m9_3971 -> m9_3969  [key=0, style=bold, color=blue];
m9_1171 -> m9_1172  [key=0, style=solid];
m9_1172 -> m9_1173  [key=0, style=solid];
m9_1172 -> m9_1142  [key=2, style=dotted];
m9_1172 -> m9_1177  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_1172 -> m9_1178  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_1173 -> m9_1174  [key=0, style=solid];
m9_1173 -> m9_1143  [key=2, style=dotted];
m9_1177 -> m9_1178  [key=0, style=solid];
m9_1177 -> m9_14  [key=2, style=dotted];
m9_1178 -> m9_1179  [key=0, style=solid];
m9_1178 -> m9_14  [key=2, style=dotted];
m9_1174 -> m9_1175  [key=0, style=solid];
m9_1174 -> m9_1180  [key=2, style=dotted];
m9_1174 -> m9_1132  [key=2, style=dotted];
m9_1174 -> m9_1176  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1175 -> m9_1176  [key=0, style=solid];
m9_1175 -> m9_14  [key=2, style=dotted];
m9_1176 -> m9_1177  [key=0, style=solid];
m9_1176 -> m9_1180  [key=2, style=dotted];
m9_1176 -> m9_83  [key=2, style=dotted];
m9_1176 -> m9_1178  [key=1, style=dashed, color=darkseagreen4, label=m2];
m9_1179 -> m9_1171  [key=0, style=bold, color=blue];
m9_2971 -> m9_2972  [key=0, style=solid];
m9_2972 -> m9_2973  [key=0, style=solid];
m9_2973 -> m9_2974  [key=0, style=solid];
m9_2973 -> m9_13  [key=2, style=dotted];
m9_2974 -> m9_2975  [key=0, style=solid];
m9_2974 -> m9_14  [key=2, style=dotted];
m9_2975 -> m9_2976  [key=0, style=solid];
m9_2976 -> m9_2977  [key=0, style=solid];
m9_2976 -> m9_13  [key=2, style=dotted];
m9_2977 -> m9_2978  [key=0, style=solid];
m9_2977 -> m9_1082  [key=2, style=dotted];
m9_2977 -> m9_14  [key=2, style=dotted];
m9_2978 -> m9_2971  [key=0, style=bold, color=blue];
m9_1559 -> m9_1560  [key=0, style=solid];
m9_1560 -> m9_1561  [key=0, style=solid];
m9_1561 -> m9_1562  [key=0, style=solid];
m9_1561 -> m9_13  [key=2, style=dotted];
m9_1561 -> m9_1563  [key=1, style=dashed, color=darkseagreen4, label=content];
m9_1561 -> m9_1564  [key=1, style=dashed, color=darkseagreen4, label=content];
m9_1561 -> m9_1565  [key=1, style=dashed, color=darkseagreen4, label=content];
m9_1562 -> m9_1563  [key=0, style=solid];
m9_1562 -> m9_14  [key=2, style=dotted];
m9_1563 -> m9_1564  [key=0, style=solid];
m9_1563 -> m9_14  [key=2, style=dotted];
m9_1564 -> m9_1565  [key=0, style=solid];
m9_1564 -> m9_14  [key=2, style=dotted];
m9_1565 -> m9_1566  [key=0, style=solid];
m9_1565 -> m9_14  [key=2, style=dotted];
m9_1566 -> m9_1559  [key=0, style=bold, color=blue];
m9_3909 -> m9_3910  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_13  [key=2, style=dotted];
m9_27 -> m9_25  [key=0, style=bold, color=blue];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_13  [key=2, style=dotted];
m9_33 -> m9_31  [key=0, style=bold, color=blue];
m9_58 -> m9_59  [key=0, style=solid];
m9_61 -> m9_62  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_70 -> m9_71  [key=0, style=solid];
m9_73 -> m9_74  [key=0, style=solid];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_13  [key=2, style=dotted];
m9_60 -> m9_58  [key=0, style=bold, color=blue];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_13  [key=2, style=dotted];
m9_63 -> m9_61  [key=0, style=bold, color=blue];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_13  [key=2, style=dotted];
m9_66 -> m9_64  [key=0, style=bold, color=blue];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_13  [key=2, style=dotted];
m9_69 -> m9_67  [key=0, style=bold, color=blue];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_13  [key=2, style=dotted];
m9_72 -> m9_70  [key=0, style=bold, color=blue];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_13  [key=2, style=dotted];
m9_75 -> m9_73  [key=0, style=bold, color=blue];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_11  [key=2, style=dotted];
m9_96 -> m9_97  [key=0, style=solid];
m9_99 -> m9_100  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_98 -> m9_96  [key=0, style=bold, color=blue];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_13  [key=2, style=dotted];
m9_101 -> m9_99  [key=0, style=bold, color=blue];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_13  [key=2, style=dotted];
m9_104 -> m9_102  [key=0, style=bold, color=blue];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_11  [key=2, style=dotted];
m9_118 -> m9_119  [key=0, style=solid];
m9_121 -> m9_122  [key=0, style=solid];
m9_120 -> m9_118  [key=0, style=bold, color=blue];
m9_122 -> m9_123  [key=0, style=solid];
m9_122 -> m9_13  [key=2, style=dotted];
m9_123 -> m9_121  [key=0, style=bold, color=blue];
m9_198 -> m9_199  [key=0, style=solid];
m9_197 -> m9_198  [key=0, style=solid];
m9_199 -> m9_197  [key=0, style=bold, color=blue];
m9_444 -> m9_445  [key=0, style=solid];
m9_443 -> m9_444  [key=0, style=solid];
m9_445 -> m9_443  [key=0, style=bold, color=blue];
m9_757 -> m9_758  [key=0, style=solid];
m9_760 -> m9_761  [key=0, style=solid];
m9_758 -> m9_759  [key=0, style=solid];
m9_759 -> m9_757  [key=0, style=bold, color=blue];
m9_761 -> m9_762  [key=0, style=solid];
m9_762 -> m9_760  [key=0, style=bold, color=blue];
m9_892 -> m9_893  [key=0, style=solid];
m9_893 -> m9_894  [key=0, style=solid];
m9_893 -> m9_895  [key=2, style=dotted];
m9_893 -> m9_11  [key=2, style=dotted];
m9_894 -> m9_892  [key=0, style=bold, color=blue];
m9_925 -> m9_926  [key=0, style=solid];
m9_925 -> m9_13  [key=2, style=dotted];
m9_924 -> m9_925  [key=0, style=solid];
m9_926 -> m9_924  [key=0, style=bold, color=blue];
m9_1203 -> m9_1204  [key=0, style=solid];
m9_1204 -> m9_1205  [key=0, style=solid];
m9_1204 -> m9_1207  [key=2, style=dotted];
m9_1205 -> m9_1206  [key=0, style=solid];
m9_1205 -> m9_11  [key=2, style=dotted];
m9_1206 -> m9_1203  [key=0, style=bold, color=blue];
m9_1298 -> m9_1299  [key=0, style=solid];
m9_1299 -> m9_1300  [key=0, style=solid];
m9_1299 -> m9_1278  [key=2, style=dotted];
m9_1299 -> m9_938  [key=2, style=dotted];
m9_1300 -> m9_1301  [key=0, style=solid];
m9_1300 -> m9_11  [key=2, style=dotted];
m9_1301 -> m9_1298  [key=0, style=bold, color=blue];
m9_1343 -> m9_1344  [key=0, style=solid];
m9_1343 -> m9_772  [key=2, style=dotted];
m9_1342 -> m9_1343  [key=0, style=solid];
m9_1344 -> m9_1342  [key=0, style=bold, color=blue];
m9_1449 -> m9_1450  [key=0, style=solid];
m9_1450 -> m9_1451  [key=0, style=solid];
m9_1450 -> m9_1436  [key=2, style=dotted];
m9_1450 -> m9_1452  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1451 -> m9_1452  [key=0, style=solid];
m9_1452 -> m9_1453  [key=0, style=solid];
m9_1452 -> m9_47  [key=2, style=dotted];
m9_1452 -> m9_49  [key=2, style=dotted];
m9_1453 -> m9_1449  [key=0, style=bold, color=blue];
m9_1591 -> m9_1592  [key=0, style=solid];
m9_1591 -> m9_13  [key=2, style=dotted];
m9_1590 -> m9_1591  [key=0, style=solid];
m9_1592 -> m9_1590  [key=0, style=bold, color=blue];
m9_1618 -> m9_1619  [key=0, style=solid];
m9_1618 -> m9_13  [key=2, style=dotted];
m9_1617 -> m9_1618  [key=0, style=solid];
m9_1619 -> m9_1617  [key=0, style=bold, color=blue];
m9_1625 -> m9_1626  [key=0, style=solid];
m9_1625 -> m9_13  [key=2, style=dotted];
m9_1624 -> m9_1625  [key=0, style=solid];
m9_1626 -> m9_1624  [key=0, style=bold, color=blue];
m9_1632 -> m9_1633  [key=0, style=solid];
m9_1632 -> m9_13  [key=2, style=dotted];
m9_1631 -> m9_1632  [key=0, style=solid];
m9_1633 -> m9_1631  [key=0, style=bold, color=blue];
m9_1639 -> m9_1640  [key=0, style=solid];
m9_1639 -> m9_13  [key=2, style=dotted];
m9_1638 -> m9_1639  [key=0, style=solid];
m9_1640 -> m9_1638  [key=0, style=bold, color=blue];
m9_1646 -> m9_1647  [key=0, style=solid];
m9_1646 -> m9_13  [key=2, style=dotted];
m9_1645 -> m9_1646  [key=0, style=solid];
m9_1647 -> m9_1645  [key=0, style=bold, color=blue];
m9_1653 -> m9_1654  [key=0, style=solid];
m9_1653 -> m9_13  [key=2, style=dotted];
m9_1652 -> m9_1653  [key=0, style=solid];
m9_1654 -> m9_1652  [key=0, style=bold, color=blue];
m9_1660 -> m9_1661  [key=0, style=solid];
m9_1660 -> m9_13  [key=2, style=dotted];
m9_1659 -> m9_1660  [key=0, style=solid];
m9_1661 -> m9_1659  [key=0, style=bold, color=blue];
m9_1667 -> m9_1668  [key=0, style=solid];
m9_1667 -> m9_13  [key=2, style=dotted];
m9_1666 -> m9_1667  [key=0, style=solid];
m9_1668 -> m9_1666  [key=0, style=bold, color=blue];
m9_1681 -> m9_1682  [key=0, style=solid];
m9_1681 -> m9_1349  [key=2, style=dotted];
m9_1681 -> m9_1683  [key=2, style=dotted];
m9_1680 -> m9_1681  [key=0, style=solid];
m9_1682 -> m9_1680  [key=0, style=bold, color=blue];
m9_1689 -> m9_1690  [key=0, style=solid];
m9_1689 -> m9_19  [key=2, style=dotted];
m9_1689 -> m9_1683  [key=2, style=dotted];
m9_1688 -> m9_1689  [key=0, style=solid];
m9_1690 -> m9_1688  [key=0, style=bold, color=blue];
m9_1699 -> m9_1700  [key=0, style=solid];
m9_1700 -> m9_1701  [key=0, style=solid];
m9_1700 -> m9_669  [key=2, style=dotted];
m9_1700 -> m9_47  [key=2, style=dotted];
m9_1700 -> m9_1702  [key=2, style=dotted];
m9_1700 -> m9_575  [key=2, style=dotted];
m9_1701 -> m9_1699  [key=0, style=bold, color=blue];
m9_1706 -> m9_1707  [key=0, style=solid];
m9_1707 -> m9_1708  [key=0, style=solid];
m9_1707 -> m9_47  [key=2, style=dotted];
m9_1707 -> m9_1702  [key=2, style=dotted];
m9_1707 -> m9_143  [key=2, style=dotted];
m9_1708 -> m9_1706  [key=0, style=bold, color=blue];
m9_1712 -> m9_1713  [key=0, style=solid];
m9_1713 -> m9_1714  [key=0, style=solid];
m9_1713 -> m9_47  [key=2, style=dotted];
m9_1713 -> m9_1702  [key=2, style=dotted];
m9_1713 -> m9_143  [key=2, style=dotted];
m9_1714 -> m9_1712  [key=0, style=bold, color=blue];
m9_1718 -> m9_1719  [key=0, style=solid];
m9_1719 -> m9_1720  [key=0, style=solid];
m9_1719 -> m9_47  [key=2, style=dotted];
m9_1719 -> m9_1702  [key=2, style=dotted];
m9_1719 -> m9_143  [key=2, style=dotted];
m9_1720 -> m9_1718  [key=0, style=bold, color=blue];
m9_1831 -> m9_1832  [key=0, style=solid];
m9_1832 -> m9_1833  [key=0, style=solid];
m9_1833 -> m9_1831  [key=0, style=bold, color=blue];
m9_1868 -> m9_1869  [key=0, style=solid];
m9_1868 -> m9_47  [key=2, style=dotted];
m9_1868 -> m9_143  [key=2, style=dotted];
m9_1867 -> m9_1868  [key=0, style=solid];
m9_1869 -> m9_1867  [key=0, style=bold, color=blue];
m9_2260 -> m9_2261  [key=0, style=solid];
m9_2260 -> m9_13  [key=2, style=dotted];
m9_2259 -> m9_2260  [key=0, style=solid];
m9_2261 -> m9_2259  [key=0, style=bold, color=blue];
m9_2265 -> m9_2266  [key=0, style=solid];
m9_2266 -> m9_2267  [key=0, style=solid];
m9_2266 -> m9_46  [key=2, style=dotted];
m9_2266 -> m9_2268  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_2266 -> m9_2272  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_2267 -> m9_2268  [key=0, style=solid];
m9_2267 -> m9_667  [key=2, style=dotted];
m9_2268 -> m9_2269  [key=0, style=solid];
m9_2268 -> m9_667  [key=2, style=dotted];
m9_2272 -> m9_2273  [key=0, style=solid];
m9_2272 -> m9_667  [key=2, style=dotted];
m9_2269 -> m9_2270  [key=0, style=solid];
m9_2269 -> m9_46  [key=2, style=dotted];
m9_2269 -> m9_2271  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_2269 -> m9_2272  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_2269 -> m9_2273  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_2270 -> m9_2271  [key=0, style=solid];
m9_2270 -> m9_667  [key=2, style=dotted];
m9_2271 -> m9_2272  [key=0, style=solid];
m9_2271 -> m9_667  [key=2, style=dotted];
m9_2273 -> m9_2274  [key=0, style=solid];
m9_2273 -> m9_170  [key=2, style=dotted];
m9_2274 -> m9_2275  [key=0, style=solid];
m9_2274 -> m9_13  [key=2, style=dotted];
m9_2275 -> m9_2265  [key=0, style=bold, color=blue];
m9_2376 -> m9_2377  [key=0, style=solid];
m9_2376 -> m9_13  [key=2, style=dotted];
m9_2375 -> m9_2376  [key=0, style=solid];
m9_2377 -> m9_2375  [key=0, style=bold, color=blue];
m9_2592 -> m9_2593  [key=0, style=solid];
m9_2593 -> m9_2594  [key=0, style=solid];
m9_2593 -> m9_772  [key=2, style=dotted];
m9_2594 -> m9_2592  [key=0, style=bold, color=blue];
m9_2927 -> m9_2928  [key=0, style=solid];
m9_2927 -> m9_13  [key=2, style=dotted];
m9_2926 -> m9_2927  [key=0, style=solid];
m9_2928 -> m9_2926  [key=0, style=bold, color=blue];
m9_2941 -> m9_2942  [key=0, style=solid];
m9_2941 -> m9_13  [key=2, style=dotted];
m9_2940 -> m9_2941  [key=0, style=solid];
m9_2942 -> m9_2940  [key=0, style=bold, color=blue];
m9_2960 -> m9_2961  [key=0, style=solid];
m9_2961 -> m9_2962  [key=0, style=solid];
m9_2962 -> m9_2963  [key=0, style=solid];
m9_2962 -> m9_13  [key=2, style=dotted];
m9_2963 -> m9_2960  [key=0, style=bold, color=blue];
m9_2967 -> m9_2968  [key=0, style=solid];
m9_2968 -> m9_2969  [key=0, style=solid];
m9_2969 -> m9_2970  [key=0, style=solid];
m9_2969 -> m9_13  [key=2, style=dotted];
m9_2970 -> m9_2967  [key=0, style=bold, color=blue];
m9_3041 -> m9_3042  [key=0, style=solid];
m9_3042 -> m9_3043  [key=0, style=solid];
m9_3042 -> m9_13  [key=2, style=dotted];
m9_3043 -> m9_3041  [key=0, style=bold, color=blue];
m9_3047 -> m9_3048  [key=0, style=solid];
m9_3048 -> m9_3049  [key=0, style=solid];
m9_3048 -> m9_13  [key=2, style=dotted];
m9_3049 -> m9_3047  [key=0, style=bold, color=blue];
m9_3053 -> m9_3054  [key=0, style=solid];
m9_3054 -> m9_3055  [key=0, style=solid];
m9_3054 -> m9_13  [key=2, style=dotted];
m9_3055 -> m9_3053  [key=0, style=bold, color=blue];
m9_3063 -> m9_3064  [key=0, style=solid];
m9_3064 -> m9_3065  [key=0, style=solid];
m9_3064 -> m9_13  [key=2, style=dotted];
m9_3065 -> m9_3063  [key=0, style=bold, color=blue];
m9_3069 -> m9_3070  [key=0, style=solid];
m9_3070 -> m9_3071  [key=0, style=solid];
m9_3070 -> m9_298  [key=2, style=dotted];
m9_3071 -> m9_3069  [key=0, style=bold, color=blue];
m9_3190 -> m9_3191  [key=0, style=solid];
m9_3190 -> m9_169  [key=2, style=dotted];
m9_3191 -> m9_3192  [key=0, style=solid];
m9_3189 -> m9_3190  [key=0, style=solid];
m9_3189 -> m9_3191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_3192 -> m9_3189  [key=0, style=bold, color=blue];
m9_3205 -> m9_3206  [key=0, style=solid];
m9_3205 -> m9_169  [key=2, style=dotted];
m9_3206 -> m9_3207  [key=0, style=solid];
m9_3204 -> m9_3205  [key=0, style=solid];
m9_3204 -> m9_3206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_3207 -> m9_3204  [key=0, style=bold, color=blue];
m9_3220 -> m9_3221  [key=0, style=solid];
m9_3220 -> m9_169  [key=2, style=dotted];
m9_3221 -> m9_3222  [key=0, style=solid];
m9_3219 -> m9_3220  [key=0, style=solid];
m9_3219 -> m9_3221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_3222 -> m9_3219  [key=0, style=bold, color=blue];
m9_3335 -> m9_3336  [key=0, style=solid];
m9_3335 -> m9_217  [key=2, style=dotted];
m9_3335 -> m9_218  [key=2, style=dotted];
m9_3335 -> m9_2398  [key=2, style=dotted];
m9_3334 -> m9_3335  [key=0, style=solid];
m9_3336 -> m9_3334  [key=0, style=bold, color=blue];
m9_3347 -> m9_3348  [key=0, style=solid];
m9_3348 -> m9_3349  [key=0, style=solid];
m9_3348 -> m9_3351  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3349 -> m9_3350  [key=0, style=solid];
m9_3349 -> m9_219  [key=2, style=dotted];
m9_3349 -> m9_3354  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_3351 -> m9_3352  [key=0, style=solid];
m9_3351 -> m9_217  [key=2, style=dotted];
m9_3351 -> m9_218  [key=2, style=dotted];
m9_3351 -> m9_3353  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_3351 -> m9_3354  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_3350 -> m9_3351  [key=0, style=solid];
m9_3354 -> m9_3355  [key=0, style=solid];
m9_3354 -> m9_2360  [key=2, style=dotted];
m9_3352 -> m9_3353  [key=0, style=solid];
m9_3352 -> m9_3157  [key=2, style=dotted];
m9_3353 -> m9_3354  [key=0, style=solid];
m9_3353 -> m9_3157  [key=2, style=dotted];
m9_3355 -> m9_3347  [key=0, style=bold, color=blue];
m9_3437 -> m9_3438  [key=0, style=solid];
m9_3437 -> m9_13  [key=2, style=dotted];
m9_3437 -> m9_3433  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_3436 -> m9_3437  [key=0, style=solid];
m9_3438 -> m9_3436  [key=0, style=bold, color=blue];
m9_3511 -> m9_3512  [key=0, style=solid];
m9_3512 -> m9_3513  [key=0, style=solid];
m9_3512 -> m9_13  [key=2, style=dotted];
m9_3513 -> m9_3511  [key=0, style=bold, color=blue];
m9_3519 -> m9_3520  [key=0, style=solid];
m9_3520 -> m9_3521  [key=0, style=solid];
m9_3520 -> m9_13  [key=2, style=dotted];
m9_3521 -> m9_3519  [key=0, style=bold, color=blue];
m9_3529 -> m9_3530  [key=0, style=solid];
m9_3529 -> m9_13  [key=2, style=dotted];
m9_3528 -> m9_3529  [key=0, style=solid];
m9_3530 -> m9_3528  [key=0, style=bold, color=blue];
m9_3642 -> m9_3643  [key=0, style=solid];
m9_3643 -> m9_3644  [key=0, style=solid];
m9_3643 -> m9_376  [key=2, style=dotted];
m9_3644 -> m9_3642  [key=0, style=bold, color=blue];
m9_3747 -> m9_3748  [key=0, style=solid];
m9_3748 -> m9_3749  [key=0, style=solid];
m9_3749 -> m9_3750  [key=0, style=solid];
m9_3749 -> m9_13  [key=2, style=dotted];
m9_3750 -> m9_3747  [key=0, style=bold, color=blue];
m9_3882 -> m9_3883  [key=0, style=solid];
m9_3883 -> m9_3884  [key=0, style=solid];
m9_3883 -> m9_3885  [key=2, style=dotted];
m9_3883 -> m9_11  [key=2, style=dotted];
m9_3884 -> m9_3882  [key=0, style=bold, color=blue];
m9_3889 -> m9_3890  [key=0, style=solid];
m9_3890 -> m9_3891  [key=0, style=solid];
m9_3890 -> m9_13  [key=2, style=dotted];
m9_3891 -> m9_3889  [key=0, style=bold, color=blue];
m9_3910 -> m9_3911  [key=0, style=solid];
m9_3910 -> m9_3912  [key=2, style=dotted];
m9_3910 -> m9_3913  [key=2, style=dotted];
m9_3910 -> m9_3914  [key=2, style=dotted];
m9_3910 -> m9_83  [key=2, style=dotted];
m9_3911 -> m9_3909  [key=0, style=bold, color=blue];
m9_3400 -> m9_3401  [key=0, style=solid];
m9_3401 -> m9_3402  [key=0, style=solid];
m9_3402 -> m9_3403  [key=0, style=solid];
m9_3402 -> m9_19  [key=2, style=dotted];
m9_3402 -> m9_3404  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_3402 -> m9_3405  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_3403 -> m9_3404  [key=0, style=solid];
m9_3403 -> m9_11  [key=2, style=dotted];
m9_3404 -> m9_3405  [key=0, style=solid];
m9_3404 -> m9_47  [key=2, style=dotted];
m9_3404 -> m9_575  [key=2, style=dotted];
m9_3405 -> m9_3406  [key=0, style=solid];
m9_3405 -> m9_47  [key=2, style=dotted];
m9_3405 -> m9_575  [key=2, style=dotted];
m9_3406 -> m9_3407  [key=0, style=solid];
m9_3406 -> m9_14  [key=2, style=dotted];
m9_3407 -> m9_3400  [key=0, style=bold, color=blue];
m9_3751 -> m9_3752  [key=0, style=solid];
m9_3752 -> m9_3753  [key=0, style=solid];
m9_3752 -> m9_3756  [key=1, style=dashed, color=darkseagreen4, label=originalUri];
m9_3753 -> m9_3754  [key=0, style=solid];
m9_3753 -> m9_1545  [key=2, style=dotted];
m9_3756 -> m9_3757  [key=0, style=solid];
m9_3756 -> m9_14  [key=2, style=dotted];
m9_3754 -> m9_3755  [key=0, style=solid];
m9_3754 -> m9_11  [key=2, style=dotted];
m9_3755 -> m9_3756  [key=0, style=solid];
m9_3755 -> m9_13  [key=2, style=dotted];
m9_3757 -> m9_3751  [key=0, style=bold, color=blue];
m9_1181 -> m9_1182  [key=0, style=solid];
m9_1182 -> m9_1183  [key=0, style=solid];
m9_1182 -> m9_1187  [key=2, style=dotted];
m9_1182 -> m9_1188  [key=2, style=dotted];
m9_1183 -> m9_1184  [key=0, style=solid];
m9_1183 -> m9_1143  [key=2, style=dotted];
m9_1184 -> m9_1185  [key=0, style=solid];
m9_1184 -> m9_170  [key=2, style=dotted];
m9_1185 -> m9_1186  [key=0, style=solid];
m9_1185 -> m9_12  [key=2, style=dotted];
m9_1186 -> m9_1181  [key=0, style=bold, color=blue];
m9_3516 -> m9_3517  [key=0, style=solid];
m9_3517 -> m9_3518  [key=0, style=solid];
m9_3517 -> m9_24  [key=2, style=dotted];
m9_3517 -> m9_3519  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3518 -> m9_3516  [key=0, style=bold, color=blue];
m9_1709 -> m9_1710  [key=0, style=solid];
m9_1710 -> m9_1711  [key=0, style=solid];
m9_1710 -> m9_24  [key=2, style=dotted];
m9_1710 -> m9_1712  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1711 -> m9_1709  [key=0, style=bold, color=blue];
m9_192 -> m9_193  [key=0, style=solid];
m9_193 -> m9_194  [key=0, style=solid];
m9_194 -> m9_195  [key=0, style=solid];
m9_194 -> m9_47  [key=2, style=dotted];
m9_194 -> m9_143  [key=2, style=dotted];
m9_194 -> m9_198  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_195 -> m9_196  [key=0, style=solid];
m9_195 -> m9_14  [key=2, style=dotted];
m9_196 -> m9_192  [key=0, style=bold, color=blue];
m9_200 -> m9_201  [key=0, style=solid];
m9_201 -> m9_202  [key=0, style=solid];
m9_201 -> m9_13  [key=2, style=dotted];
m9_201 -> m9_203  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_201 -> m9_204  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_202 -> m9_203  [key=0, style=solid];
m9_202 -> m9_14  [key=2, style=dotted];
m9_203 -> m9_204  [key=0, style=solid];
m9_203 -> m9_14  [key=2, style=dotted];
m9_204 -> m9_205  [key=0, style=solid];
m9_204 -> m9_14  [key=2, style=dotted];
m9_205 -> m9_200  [key=0, style=bold, color=blue];
m9_1786 -> m9_1787  [key=0, style=solid];
m9_1787 -> m9_1788  [key=0, style=solid];
m9_1788 -> m9_1789  [key=0, style=solid];
m9_1788 -> m9_300  [key=2, style=dotted];
m9_1789 -> m9_1790  [key=0, style=solid];
m9_1789 -> m9_877  [key=2, style=dotted];
m9_1789 -> m9_276  [key=2, style=dotted];
m9_1789 -> m9_1791  [key=1, style=dashed, color=darkseagreen4, label=results];
m9_1790 -> m9_1791  [key=0, style=solid];
m9_1790 -> m9_19  [key=2, style=dotted];
m9_1790 -> m9_1793  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m9_1790 -> m9_1794  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m9_1790 -> m9_1795  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m9_1790 -> m9_1796  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m9_1791 -> m9_1792  [key=0, style=solid];
m9_1791 -> m9_1794  [key=0, style=solid];
m9_1793 -> m9_1791  [key=0, style=solid];
m9_1793 -> m9_169  [key=2, style=dotted];
m9_1794 -> m9_1795  [key=0, style=solid];
m9_1794 -> m9_14  [key=2, style=dotted];
m9_1795 -> m9_1796  [key=0, style=solid];
m9_1795 -> m9_14  [key=2, style=dotted];
m9_1796 -> m9_1797  [key=0, style=solid];
m9_1796 -> m9_14  [key=2, style=dotted];
m9_1792 -> m9_1793  [key=0, style=solid];
m9_1792 -> m9_605  [key=2, style=dotted];
m9_1792 -> m9_13  [key=2, style=dotted];
m9_1797 -> m9_1786  [key=0, style=bold, color=blue];
m9_648 -> m9_649  [key=0, style=solid];
m9_649 -> m9_650  [key=0, style=solid];
m9_649 -> m9_46  [key=2, style=dotted];
m9_649 -> m9_652  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m9_649 -> m9_658  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m9_650 -> m9_651  [key=0, style=solid];
m9_650 -> m9_652  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_650 -> m9_653  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_652 -> m9_653  [key=0, style=solid];
m9_652 -> m9_665  [key=2, style=dotted];
m9_652 -> m9_666  [key=2, style=dotted];
m9_652 -> m9_667  [key=2, style=dotted];
m9_658 -> m9_659  [key=0, style=solid];
m9_658 -> m9_671  [key=2, style=dotted];
m9_651 -> m9_652  [key=0, style=solid];
m9_651 -> m9_654  [key=0, style=solid];
m9_653 -> m9_651  [key=0, style=solid];
m9_653 -> m9_653  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_654 -> m9_655  [key=0, style=solid];
m9_654 -> m9_47  [key=2, style=dotted];
m9_655 -> m9_656  [key=0, style=solid];
m9_655 -> m9_668  [key=2, style=dotted];
m9_655 -> m9_658  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m9_655 -> m9_662  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m9_656 -> m9_657  [key=0, style=solid];
m9_656 -> m9_669  [key=2, style=dotted];
m9_656 -> m9_660  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_656 -> m9_662  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_662 -> m9_663  [key=0, style=solid];
m9_662 -> m9_675  [key=2, style=dotted];
m9_662 -> m9_676  [key=2, style=dotted];
m9_657 -> m9_658  [key=0, style=solid];
m9_657 -> m9_670  [key=2, style=dotted];
m9_657 -> m9_659  [key=1, style=dashed, color=darkseagreen4, label=streamWriter];
m9_660 -> m9_661  [key=0, style=solid];
m9_660 -> m9_673  [key=2, style=dotted];
m9_659 -> m9_660  [key=0, style=solid];
m9_659 -> m9_672  [key=2, style=dotted];
m9_661 -> m9_662  [key=0, style=solid];
m9_661 -> m9_674  [key=2, style=dotted];
m9_661 -> m9_663  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m9_663 -> m9_664  [key=0, style=solid];
m9_663 -> m9_677  [key=2, style=dotted];
m9_664 -> m9_648  [key=0, style=bold, color=blue];
m9_1334 -> m9_1335  [key=0, style=solid];
m9_1335 -> m9_1336  [key=0, style=solid];
m9_1335 -> m9_1340  [key=2, style=dotted];
m9_1335 -> m9_1337  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m9_1336 -> m9_1337  [key=0, style=solid];
m9_1336 -> m9_1341  [key=2, style=dotted];
m9_1337 -> m9_1338  [key=0, style=solid];
m9_1337 -> m9_11  [key=2, style=dotted];
m9_1337 -> m9_1343  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m9_1338 -> m9_1339  [key=0, style=solid];
m9_1338 -> m9_24  [key=2, style=dotted];
m9_1338 -> m9_1342  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1339 -> m9_1334  [key=0, style=bold, color=blue];
m9_2105 -> m9_2106  [key=0, style=solid];
m9_2106 -> m9_2107  [key=0, style=solid];
m9_2106 -> m9_13  [key=2, style=dotted];
m9_2106 -> m9_2108  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m9_2106 -> m9_2109  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m9_2106 -> m9_2110  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m9_2106 -> m9_2111  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m9_2107 -> m9_2108  [key=0, style=solid];
m9_2107 -> m9_14  [key=2, style=dotted];
m9_2108 -> m9_2109  [key=0, style=solid];
m9_2108 -> m9_14  [key=2, style=dotted];
m9_2109 -> m9_2110  [key=0, style=solid];
m9_2109 -> m9_14  [key=2, style=dotted];
m9_2110 -> m9_2111  [key=0, style=solid];
m9_2110 -> m9_14  [key=2, style=dotted];
m9_2111 -> m9_2112  [key=0, style=solid];
m9_2111 -> m9_14  [key=2, style=dotted];
m9_2112 -> m9_2105  [key=0, style=bold, color=blue];
m9_3380 -> m9_3381  [key=0, style=solid];
m9_3381 -> m9_3382  [key=0, style=solid];
m9_3381 -> m9_13  [key=2, style=dotted];
m9_3382 -> m9_3383  [key=0, style=solid];
m9_3382 -> m9_14  [key=2, style=dotted];
m9_3383 -> m9_3380  [key=0, style=bold, color=blue];
m9_3710 -> m9_3711  [key=0, style=solid];
m9_3711 -> m9_3712  [key=0, style=solid];
m9_3712 -> m9_3710  [key=0, style=bold, color=blue];
m9_1900 -> m9_1903  [key=0, style=solid];
m9_1903 -> m9_1904  [key=0, style=solid];
m9_1904 -> m9_1900  [key=0, style=bold, color=blue];
m9_3060 -> m9_3061  [key=0, style=solid];
m9_3061 -> m9_3062  [key=0, style=solid];
m9_3061 -> m9_24  [key=2, style=dotted];
m9_3061 -> m9_3063  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3062 -> m9_3060  [key=0, style=bold, color=blue];
m9_1772 -> m9_1773  [key=0, style=solid];
m9_1773 -> m9_1774  [key=0, style=solid];
m9_1773 -> m9_46  [key=2, style=dotted];
m9_1773 -> m9_1775  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1773 -> m9_1776  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1774 -> m9_1775  [key=0, style=solid];
m9_1774 -> m9_1349  [key=2, style=dotted];
m9_1774 -> m9_667  [key=2, style=dotted];
m9_1775 -> m9_1776  [key=0, style=solid];
m9_1775 -> m9_1349  [key=2, style=dotted];
m9_1775 -> m9_667  [key=2, style=dotted];
m9_1776 -> m9_1777  [key=0, style=solid];
m9_1776 -> m9_170  [key=2, style=dotted];
m9_1777 -> m9_1778  [key=0, style=solid];
m9_1777 -> m9_12  [key=2, style=dotted];
m9_1778 -> m9_1772  [key=0, style=bold, color=blue];
m9_3987 -> m9_3988  [key=0, style=solid];
m9_3987 -> m9_3989  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_3988 -> m9_3989  [key=0, style=solid];
m9_3989 -> m9_3990  [key=0, style=solid];
m9_3990 -> m9_3991  [key=0, style=solid];
m9_3991 -> m9_3987  [key=0, style=bold, color=blue];
m9_303 -> m9_304  [key=0, style=solid];
m9_304 -> m9_305  [key=0, style=solid];
m9_304 -> m9_13  [key=2, style=dotted];
m9_305 -> m9_306  [key=0, style=solid];
m9_305 -> m9_14  [key=2, style=dotted];
m9_306 -> m9_307  [key=0, style=solid];
m9_306 -> m9_13  [key=2, style=dotted];
m9_307 -> m9_308  [key=0, style=solid];
m9_307 -> m9_14  [key=2, style=dotted];
m9_308 -> m9_303  [key=0, style=bold, color=blue];
m9_1084 -> m9_1085  [key=0, style=solid];
m9_1085 -> m9_1086  [key=0, style=solid];
m9_1085 -> m9_11  [key=2, style=dotted];
m9_1085 -> m9_1087  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1086 -> m9_1087  [key=0, style=solid];
m9_1086 -> m9_14  [key=2, style=dotted];
m9_1087 -> m9_1088  [key=0, style=solid];
m9_1087 -> m9_13  [key=2, style=dotted];
m9_1088 -> m9_1089  [key=0, style=solid];
m9_1088 -> m9_14  [key=2, style=dotted];
m9_1089 -> m9_1084  [key=0, style=bold, color=blue];
m9_3022 -> m9_3023  [key=0, style=solid];
m9_3023 -> m9_3024  [key=0, style=solid];
m9_3023 -> m9_13  [key=2, style=dotted];
m9_3024 -> m9_3025  [key=0, style=solid];
m9_3024 -> m9_191  [key=2, style=dotted];
m9_3025 -> m9_3026  [key=0, style=solid];
m9_3025 -> m9_13  [key=2, style=dotted];
m9_3026 -> m9_3027  [key=0, style=solid];
m9_3026 -> m9_191  [key=2, style=dotted];
m9_3027 -> m9_3028  [key=0, style=solid];
m9_3027 -> m9_13  [key=2, style=dotted];
m9_3028 -> m9_3029  [key=0, style=solid];
m9_3028 -> m9_191  [key=2, style=dotted];
m9_3029 -> m9_3030  [key=0, style=solid];
m9_3029 -> m9_13  [key=2, style=dotted];
m9_3030 -> m9_3031  [key=0, style=solid];
m9_3030 -> m9_191  [key=2, style=dotted];
m9_3031 -> m9_3032  [key=0, style=solid];
m9_3031 -> m9_13  [key=2, style=dotted];
m9_3032 -> m9_3033  [key=0, style=solid];
m9_3032 -> m9_191  [key=2, style=dotted];
m9_3033 -> m9_3034  [key=0, style=solid];
m9_3033 -> m9_13  [key=2, style=dotted];
m9_3034 -> m9_3035  [key=0, style=solid];
m9_3034 -> m9_191  [key=2, style=dotted];
m9_3035 -> m9_3036  [key=0, style=solid];
m9_3035 -> m9_13  [key=2, style=dotted];
m9_3036 -> m9_3037  [key=0, style=solid];
m9_3036 -> m9_191  [key=2, style=dotted];
m9_3037 -> m9_3022  [key=0, style=bold, color=blue];
m9_3561 -> m9_3562  [key=0, style=solid];
m9_3562 -> m9_3563  [key=0, style=solid];
m9_3563 -> m9_3564  [key=0, style=solid];
m9_3563 -> m9_13  [key=2, style=dotted];
m9_3563 -> m9_3565  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3563 -> m9_3566  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3563 -> m9_3567  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3563 -> m9_3568  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3564 -> m9_3565  [key=0, style=solid];
m9_3564 -> m9_191  [key=2, style=dotted];
m9_3565 -> m9_3566  [key=0, style=solid];
m9_3565 -> m9_191  [key=2, style=dotted];
m9_3566 -> m9_3567  [key=0, style=solid];
m9_3566 -> m9_191  [key=2, style=dotted];
m9_3567 -> m9_3568  [key=0, style=solid];
m9_3567 -> m9_191  [key=2, style=dotted];
m9_3568 -> m9_3569  [key=0, style=solid];
m9_3568 -> m9_191  [key=2, style=dotted];
m9_3569 -> m9_3561  [key=0, style=bold, color=blue];
m9_2943 -> m9_2944  [key=0, style=solid];
m9_2944 -> m9_2945  [key=0, style=solid];
m9_2944 -> m9_2948  [key=2, style=dotted];
m9_2944 -> m9_2949  [key=2, style=dotted];
m9_2945 -> m9_2946  [key=0, style=solid];
m9_2945 -> m9_11  [key=2, style=dotted];
m9_2946 -> m9_2947  [key=0, style=solid];
m9_2946 -> m9_14  [key=2, style=dotted];
m9_2947 -> m9_2943  [key=0, style=bold, color=blue];
m9_1052 -> m9_1053  [key=0, style=solid];
m9_1053 -> m9_1054  [key=0, style=solid];
m9_1053 -> m9_1060  [key=2, style=dotted];
m9_1053 -> m9_1055  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_1053 -> m9_1056  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_1053 -> m9_1057  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_1054 -> m9_1055  [key=0, style=solid];
m9_1054 -> m9_1061  [key=2, style=dotted];
m9_1055 -> m9_1056  [key=0, style=solid];
m9_1055 -> m9_1061  [key=2, style=dotted];
m9_1056 -> m9_1057  [key=0, style=solid];
m9_1056 -> m9_1061  [key=2, style=dotted];
m9_1057 -> m9_1058  [key=0, style=solid];
m9_1057 -> m9_11  [key=2, style=dotted];
m9_1058 -> m9_1059  [key=0, style=solid];
m9_1058 -> m9_14  [key=2, style=dotted];
m9_1059 -> m9_1052  [key=0, style=bold, color=blue];
m9_927 -> m9_928  [key=0, style=solid];
m9_928 -> m9_929  [key=0, style=solid];
m9_928 -> m9_19  [key=2, style=dotted];
m9_928 -> m9_938  [key=2, style=dotted];
m9_928 -> m9_931  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m9_928 -> m9_935  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m9_929 -> m9_930  [key=0, style=solid];
m9_929 -> m9_669  [key=2, style=dotted];
m9_929 -> m9_931  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_929 -> m9_932  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_929 -> m9_933  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_931 -> m9_932  [key=0, style=solid];
m9_931 -> m9_751  [key=2, style=dotted];
m9_935 -> m9_936  [key=0, style=solid];
m9_935 -> m9_47  [key=2, style=dotted];
m9_935 -> m9_575  [key=2, style=dotted];
m9_930 -> m9_931  [key=0, style=solid];
m9_930 -> m9_750  [key=2, style=dotted];
m9_932 -> m9_933  [key=0, style=solid];
m9_932 -> m9_673  [key=2, style=dotted];
m9_933 -> m9_934  [key=0, style=solid];
m9_933 -> m9_675  [key=2, style=dotted];
m9_934 -> m9_935  [key=0, style=solid];
m9_934 -> m9_939  [key=2, style=dotted];
m9_934 -> m9_936  [key=1, style=dashed, color=darkseagreen4, label=expected];
m9_936 -> m9_937  [key=0, style=solid];
m9_936 -> m9_14  [key=2, style=dotted];
m9_937 -> m9_927  [key=0, style=bold, color=blue];
m9_1486 -> m9_1487  [key=0, style=solid];
m9_1487 -> m9_1488  [key=0, style=solid];
m9_1488 -> m9_1486  [key=0, style=bold, color=blue];
m9_2828 -> m9_2829  [key=0, style=solid];
m9_2829 -> m9_2830  [key=0, style=solid];
m9_2829 -> m9_2844  [key=2, style=dotted];
m9_2829 -> m9_2835  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_2830 -> m9_2831  [key=0, style=solid];
m9_2830 -> m9_219  [key=2, style=dotted];
m9_2830 -> m9_2835  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2830 -> m9_2840  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2835 -> m9_2836  [key=0, style=solid];
m9_2835 -> m9_2845  [key=2, style=dotted];
m9_2831 -> m9_2832  [key=0, style=solid];
m9_2840 -> m9_2841  [key=0, style=solid];
m9_2840 -> m9_2847  [key=2, style=dotted];
m9_2840 -> m9_2842  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m9_2832 -> m9_2833  [key=0, style=solid];
m9_2833 -> m9_2834  [key=0, style=solid];
m9_2833 -> m9_669  [key=2, style=dotted];
m9_2833 -> m9_2837  [key=1, style=dashed, color=darkseagreen4, label=bsonStream];
m9_2834 -> m9_2835  [key=0, style=solid];
m9_2834 -> m9_2809  [key=2, style=dotted];
m9_2834 -> m9_670  [key=2, style=dotted];
m9_2834 -> m9_2836  [key=1, style=dashed, color=darkseagreen4, label=bsonWriter];
m9_2837 -> m9_2838  [key=0, style=solid];
m9_2837 -> m9_752  [key=2, style=dotted];
m9_2836 -> m9_2837  [key=0, style=solid];
m9_2836 -> m9_2846  [key=2, style=dotted];
m9_2838 -> m9_2839  [key=0, style=solid];
m9_2838 -> m9_904  [key=2, style=dotted];
m9_2839 -> m9_2840  [key=0, style=solid];
m9_2839 -> m9_217  [key=2, style=dotted];
m9_2839 -> m9_675  [key=2, style=dotted];
m9_2841 -> m9_2842  [key=0, style=solid];
m9_2841 -> m9_14  [key=2, style=dotted];
m9_2842 -> m9_2843  [key=0, style=solid];
m9_2842 -> m9_2848  [key=2, style=dotted];
m9_2843 -> m9_2828  [key=0, style=bold, color=blue];
m9_1943 -> m9_1944  [key=0, style=solid];
m9_1944 -> m9_1945  [key=0, style=solid];
m9_1944 -> m9_1946  [key=2, style=dotted];
m9_1945 -> m9_1943  [key=0, style=bold, color=blue];
m9_848 -> m9_849  [key=0, style=solid];
m9_849 -> m9_850  [key=0, style=solid];
m9_849 -> m9_853  [key=2, style=dotted];
m9_849 -> m9_11  [key=2, style=dotted];
m9_850 -> m9_851  [key=0, style=solid];
m9_850 -> m9_13  [key=2, style=dotted];
m9_851 -> m9_852  [key=0, style=solid];
m9_851 -> m9_14  [key=2, style=dotted];
m9_852 -> m9_848  [key=0, style=bold, color=blue];
m9_108 -> m9_109  [key=0, style=solid];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_105  [key=2, style=dotted];
m9_109 -> m9_119  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_24  [key=2, style=dotted];
m9_110 -> m9_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_105  [key=2, style=dotted];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_11  [key=2, style=dotted];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_14  [key=2, style=dotted];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_24  [key=2, style=dotted];
m9_114 -> m9_121  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_114 -> m9_114  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Serialization.SerializationErrorCallback CreateSerializationErrorCallback"];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_13  [key=2, style=dotted];
m9_116 -> m9_117  [key=0, style=solid];
m9_116 -> m9_14  [key=2, style=dotted];
m9_117 -> m9_108  [key=0, style=bold, color=blue];
m9_3177 -> m9_3178  [key=0, style=solid];
m9_3178 -> m9_3179  [key=0, style=solid];
m9_3178 -> m9_3181  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3179 -> m9_3180  [key=0, style=solid];
m9_3179 -> m9_19  [key=2, style=dotted];
m9_3179 -> m9_3190  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3179 -> m9_3183  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3179 -> m9_3184  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3179 -> m9_3185  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3179 -> m9_3186  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3179 -> m9_3187  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3181 -> m9_3182  [key=0, style=solid];
m9_3181 -> m9_47  [key=2, style=dotted];
m9_3181 -> m9_143  [key=2, style=dotted];
m9_3180 -> m9_3181  [key=0, style=solid];
m9_3180 -> m9_3190  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_3180 -> m9_3191  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_3183 -> m9_3184  [key=0, style=solid];
m9_3183 -> m9_14  [key=2, style=dotted];
m9_3184 -> m9_3185  [key=0, style=solid];
m9_3184 -> m9_1294  [key=2, style=dotted];
m9_3184 -> m9_302  [key=2, style=dotted];
m9_3185 -> m9_3186  [key=0, style=solid];
m9_3185 -> m9_1294  [key=2, style=dotted];
m9_3185 -> m9_302  [key=2, style=dotted];
m9_3186 -> m9_3187  [key=0, style=solid];
m9_3186 -> m9_1294  [key=2, style=dotted];
m9_3186 -> m9_302  [key=2, style=dotted];
m9_3187 -> m9_3188  [key=0, style=solid];
m9_3187 -> m9_1294  [key=2, style=dotted];
m9_3187 -> m9_302  [key=2, style=dotted];
m9_3182 -> m9_3183  [key=0, style=solid];
m9_3182 -> m9_632  [key=2, style=dotted];
m9_3188 -> m9_3177  [key=0, style=bold, color=blue];
m9_235 -> m9_236  [key=0, style=solid];
m9_236 -> m9_235  [key=0, style=bold, color=blue];
m9_2866 -> m9_2867  [key=0, style=solid];
m9_2867 -> m9_2868  [key=0, style=solid];
m9_2867 -> m9_2878  [key=2, style=dotted];
m9_2867 -> m9_2871  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m9_2867 -> m9_2873  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m9_2868 -> m9_2869  [key=0, style=solid];
m9_2868 -> m9_2865  [key=2, style=dotted];
m9_2868 -> m9_2871  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2871 -> m9_2872  [key=0, style=solid];
m9_2871 -> m9_47  [key=2, style=dotted];
m9_2871 -> m9_49  [key=2, style=dotted];
m9_2873 -> m9_2874  [key=0, style=solid];
m9_2873 -> m9_47  [key=2, style=dotted];
m9_2873 -> m9_143  [key=2, style=dotted];
m9_2869 -> m9_2870  [key=0, style=solid];
m9_2870 -> m9_2871  [key=0, style=solid];
m9_2872 -> m9_2873  [key=0, style=solid];
m9_2872 -> m9_12  [key=2, style=dotted];
m9_2874 -> m9_2875  [key=0, style=solid];
m9_2874 -> m9_14  [key=2, style=dotted];
m9_2875 -> m9_2876  [key=0, style=solid];
m9_2875 -> m9_14  [key=2, style=dotted];
m9_2876 -> m9_2877  [key=0, style=solid];
m9_2876 -> m9_14  [key=2, style=dotted];
m9_2877 -> m9_2866  [key=0, style=bold, color=blue];
m9_2715 -> m9_2716  [key=0, style=solid];
m9_2716 -> m9_2717  [key=0, style=solid];
m9_2716 -> m9_2231  [key=2, style=dotted];
m9_2717 -> m9_2715  [key=0, style=bold, color=blue];
m9_1153 -> m9_1154  [key=0, style=solid];
m9_1154 -> m9_1155  [key=0, style=solid];
m9_1154 -> m9_1142  [key=2, style=dotted];
m9_1155 -> m9_1156  [key=0, style=solid];
m9_1155 -> m9_1143  [key=2, style=dotted];
m9_1156 -> m9_1157  [key=0, style=solid];
m9_1156 -> m9_47  [key=2, style=dotted];
m9_1156 -> m9_575  [key=2, style=dotted];
m9_1156 -> m9_1158  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1157 -> m9_1158  [key=0, style=solid];
m9_1157 -> m9_14  [key=2, style=dotted];
m9_1158 -> m9_1159  [key=0, style=solid];
m9_1158 -> m9_47  [key=2, style=dotted];
m9_1158 -> m9_143  [key=2, style=dotted];
m9_1158 -> m9_1160  [key=1, style=dashed, color=darkseagreen4, label=m2];
m9_1159 -> m9_1160  [key=0, style=solid];
m9_1159 -> m9_790  [key=2, style=dotted];
m9_1159 -> m9_14  [key=2, style=dotted];
m9_1160 -> m9_1161  [key=0, style=solid];
m9_1160 -> m9_790  [key=2, style=dotted];
m9_1160 -> m9_14  [key=2, style=dotted];
m9_1161 -> m9_1153  [key=0, style=bold, color=blue];
m9_3544 -> m9_3545  [key=0, style=solid];
m9_3545 -> m9_3546  [key=0, style=solid];
m9_3545 -> m9_3550  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3546 -> m9_3547  [key=0, style=solid];
m9_3546 -> m9_13  [key=2, style=dotted];
m9_3546 -> m9_3548  [key=1, style=dashed, color=darkseagreen4, label=floats];
m9_3546 -> m9_3549  [key=1, style=dashed, color=darkseagreen4, label=floats];
m9_3550 -> m9_3551  [key=0, style=solid];
m9_3550 -> m9_13  [key=2, style=dotted];
m9_3550 -> m9_3552  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m9_3550 -> m9_3553  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m9_3547 -> m9_3548  [key=0, style=solid];
m9_3547 -> m9_14  [key=2, style=dotted];
m9_3548 -> m9_3549  [key=0, style=solid];
m9_3548 -> m9_14  [key=2, style=dotted];
m9_3549 -> m9_3550  [key=0, style=solid];
m9_3549 -> m9_14  [key=2, style=dotted];
m9_3551 -> m9_3552  [key=0, style=solid];
m9_3551 -> m9_14  [key=2, style=dotted];
m9_3552 -> m9_3553  [key=0, style=solid];
m9_3552 -> m9_14  [key=2, style=dotted];
m9_3553 -> m9_3554  [key=0, style=solid];
m9_3553 -> m9_14  [key=2, style=dotted];
m9_3554 -> m9_3544  [key=0, style=bold, color=blue];
m9_1969 -> m9_1970  [key=0, style=solid];
m9_1970 -> m9_1971  [key=0, style=solid];
m9_1970 -> m9_1972  [key=2, style=dotted];
m9_1971 -> m9_1969  [key=0, style=bold, color=blue];
m9_2576 -> m9_2577  [key=0, style=solid];
m9_2577 -> m9_2578  [key=0, style=solid];
m9_2577 -> m9_2581  [key=2, style=dotted];
m9_2578 -> m9_2579  [key=0, style=solid];
m9_2578 -> m9_170  [key=2, style=dotted];
m9_2579 -> m9_2580  [key=0, style=solid];
m9_2579 -> m9_12  [key=2, style=dotted];
m9_2580 -> m9_2576  [key=0, style=bold, color=blue];
m9_1634 -> m9_1635  [key=0, style=solid];
m9_1635 -> m9_1636  [key=0, style=solid];
m9_1635 -> m9_1639  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1636 -> m9_1637  [key=0, style=solid];
m9_1636 -> m9_24  [key=2, style=dotted];
m9_1636 -> m9_1638  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1637 -> m9_1634  [key=0, style=bold, color=blue];
m9_3092 -> m9_3093  [key=0, style=solid];
m9_3093 -> m9_3094  [key=0, style=solid];
m9_3093 -> m9_47  [key=2, style=dotted];
m9_3093 -> m9_143  [key=2, style=dotted];
m9_3093 -> m9_3095  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_3093 -> m9_3096  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_3093 -> m9_3097  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_3094 -> m9_3095  [key=0, style=solid];
m9_3094 -> m9_3089  [key=2, style=dotted];
m9_3094 -> m9_3090  [key=2, style=dotted];
m9_3094 -> m9_14  [key=2, style=dotted];
m9_3095 -> m9_3096  [key=0, style=solid];
m9_3095 -> m9_3091  [key=2, style=dotted];
m9_3095 -> m9_14  [key=2, style=dotted];
m9_3096 -> m9_3097  [key=0, style=solid];
m9_3096 -> m9_14  [key=2, style=dotted];
m9_3097 -> m9_3098  [key=0, style=solid];
m9_3097 -> m9_14  [key=2, style=dotted];
m9_3098 -> m9_3099  [key=0, style=solid];
m9_3098 -> m9_13  [key=2, style=dotted];
m9_3098 -> m9_3100  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3098 -> m9_3101  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3098 -> m9_3102  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3099 -> m9_3100  [key=0, style=solid];
m9_3099 -> m9_14  [key=2, style=dotted];
m9_3100 -> m9_3101  [key=0, style=solid];
m9_3100 -> m9_14  [key=2, style=dotted];
m9_3101 -> m9_3102  [key=0, style=solid];
m9_3101 -> m9_14  [key=2, style=dotted];
m9_3102 -> m9_3103  [key=0, style=solid];
m9_3102 -> m9_14  [key=2, style=dotted];
m9_3103 -> m9_3092  [key=0, style=bold, color=blue];
m9_206 -> m9_207  [key=0, style=solid];
m9_207 -> m9_208  [key=0, style=solid];
m9_207 -> m9_217  [key=2, style=dotted];
m9_207 -> m9_218  [key=2, style=dotted];
m9_207 -> m9_212  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_207 -> m9_215  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_208 -> m9_209  [key=0, style=solid];
m9_208 -> m9_14  [key=2, style=dotted];
m9_212 -> m9_213  [key=0, style=solid];
m9_212 -> m9_220  [key=2, style=dotted];
m9_215 -> m9_216  [key=0, style=solid];
m9_215 -> m9_14  [key=2, style=dotted];
m9_209 -> m9_210  [key=0, style=solid];
m9_209 -> m9_219  [key=2, style=dotted];
m9_209 -> m9_212  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_210 -> m9_211  [key=0, style=solid];
m9_211 -> m9_212  [key=0, style=solid];
m9_211 -> m9_19  [key=2, style=dotted];
m9_211 -> m9_213  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_211 -> m9_214  [key=1, style=dashed, color=darkseagreen4, label=l];
m9_213 -> m9_214  [key=0, style=solid];
m9_213 -> m9_221  [key=2, style=dotted];
m9_213 -> m9_14  [key=2, style=dotted];
m9_214 -> m9_215  [key=0, style=solid];
m9_214 -> m9_222  [key=2, style=dotted];
m9_214 -> m9_14  [key=2, style=dotted];
m9_216 -> m9_206  [key=0, style=bold, color=blue];
m9_2228 -> m9_2229  [key=0, style=solid];
m9_2229 -> m9_2230  [key=0, style=solid];
m9_2229 -> m9_2231  [key=2, style=dotted];
m9_2230 -> m9_2228  [key=0, style=bold, color=blue];
m9_3879 -> m9_3880  [key=0, style=solid];
m9_3880 -> m9_3881  [key=0, style=solid];
m9_3880 -> m9_24  [key=2, style=dotted];
m9_3880 -> m9_3882  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3881 -> m9_3879  [key=0, style=bold, color=blue];
m9_3935 -> m9_3936  [key=0, style=solid];
m9_3936 -> m9_3937  [key=0, style=solid];
m9_3936 -> m9_2231  [key=2, style=dotted];
m9_3937 -> m9_3935  [key=0, style=bold, color=blue];
m9_1133 -> m9_1134  [key=0, style=solid];
m9_1134 -> m9_1135  [key=0, style=solid];
m9_1134 -> m9_1142  [key=2, style=dotted];
m9_1134 -> m9_1139  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_1134 -> m9_1140  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_1135 -> m9_1136  [key=0, style=solid];
m9_1135 -> m9_1143  [key=2, style=dotted];
m9_1139 -> m9_1140  [key=0, style=solid];
m9_1139 -> m9_14  [key=2, style=dotted];
m9_1140 -> m9_1141  [key=0, style=solid];
m9_1140 -> m9_14  [key=2, style=dotted];
m9_1136 -> m9_1137  [key=0, style=solid];
m9_1136 -> m9_11  [key=2, style=dotted];
m9_1136 -> m9_1138  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1137 -> m9_1138  [key=0, style=solid];
m9_1137 -> m9_14  [key=2, style=dotted];
m9_1138 -> m9_1139  [key=0, style=solid];
m9_1138 -> m9_13  [key=2, style=dotted];
m9_1138 -> m9_1140  [key=1, style=dashed, color=darkseagreen4, label=m2];
m9_1141 -> m9_1133  [key=0, style=bold, color=blue];
m9_3734 -> m9_3735  [key=0, style=solid];
m9_3735 -> m9_3736  [key=0, style=solid];
m9_3735 -> m9_3691  [key=2, style=dotted];
m9_3736 -> m9_3734  [key=0, style=bold, color=blue];
m9_1947 -> m9_1948  [key=0, style=solid];
m9_1948 -> m9_1949  [key=0, style=solid];
m9_1948 -> m9_1950  [key=2, style=dotted];
m9_1949 -> m9_1947  [key=0, style=bold, color=blue];
m9_2219 -> m9_2220  [key=0, style=solid];
m9_2219 -> m9_2222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_2219 -> m9_2223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_2220 -> m9_2221  [key=0, style=solid];
m9_2220 -> m9_2222  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_2222 -> m9_2224  [key=0, style=solid];
m9_2222 -> m9_2225  [key=2, style=dotted];
m9_2222 -> m9_2226  [key=2, style=dotted];
m9_2223 -> m9_2224  [key=0, style=solid];
m9_2223 -> m9_2227  [key=2, style=dotted];
m9_2221 -> m9_2222  [key=0, style=solid];
m9_2221 -> m9_2223  [key=0, style=solid];
m9_2224 -> m9_2219  [key=0, style=bold, color=blue];
m9_1613 -> m9_1614  [key=0, style=solid];
m9_1614 -> m9_1615  [key=0, style=solid];
m9_1614 -> m9_1618  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1615 -> m9_1616  [key=0, style=solid];
m9_1615 -> m9_24  [key=2, style=dotted];
m9_1615 -> m9_1617  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1616 -> m9_1613  [key=0, style=bold, color=blue];
m9_223 -> m9_224  [key=0, style=solid];
m9_224 -> m9_225  [key=0, style=solid];
m9_224 -> m9_228  [key=2, style=dotted];
m9_224 -> m9_11  [key=2, style=dotted];
m9_224 -> m9_14  [key=2, style=dotted];
m9_225 -> m9_226  [key=0, style=solid];
m9_225 -> m9_13  [key=2, style=dotted];
m9_226 -> m9_227  [key=0, style=solid];
m9_226 -> m9_14  [key=2, style=dotted];
m9_227 -> m9_223  [key=0, style=bold, color=blue];
m9_3193 -> m9_3194  [key=0, style=solid];
m9_3194 -> m9_3195  [key=0, style=solid];
m9_3194 -> m9_3197  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3195 -> m9_3196  [key=0, style=solid];
m9_3195 -> m9_19  [key=2, style=dotted];
m9_3195 -> m9_3205  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3195 -> m9_3199  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3195 -> m9_3200  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3195 -> m9_3201  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3195 -> m9_3202  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3197 -> m9_3198  [key=0, style=solid];
m9_3197 -> m9_47  [key=2, style=dotted];
m9_3197 -> m9_143  [key=2, style=dotted];
m9_3196 -> m9_3197  [key=0, style=solid];
m9_3196 -> m9_3205  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_3196 -> m9_3206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_3199 -> m9_3200  [key=0, style=solid];
m9_3199 -> m9_14  [key=2, style=dotted];
m9_3200 -> m9_3201  [key=0, style=solid];
m9_3200 -> m9_1294  [key=2, style=dotted];
m9_3200 -> m9_302  [key=2, style=dotted];
m9_3201 -> m9_3202  [key=0, style=solid];
m9_3201 -> m9_1294  [key=2, style=dotted];
m9_3201 -> m9_302  [key=2, style=dotted];
m9_3202 -> m9_3203  [key=0, style=solid];
m9_3202 -> m9_1294  [key=2, style=dotted];
m9_3202 -> m9_302  [key=2, style=dotted];
m9_3198 -> m9_3199  [key=0, style=solid];
m9_3198 -> m9_632  [key=2, style=dotted];
m9_3203 -> m9_3193  [key=0, style=bold, color=blue];
m9_3277 -> m9_3278  [key=0, style=solid];
m9_3278 -> m9_3279  [key=0, style=solid];
m9_3278 -> m9_3283  [key=2, style=dotted];
m9_3278 -> m9_3280  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m9_3279 -> m9_3280  [key=0, style=solid];
m9_3279 -> m9_3284  [key=2, style=dotted];
m9_3279 -> m9_3281  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m9_3280 -> m9_3281  [key=0, style=solid];
m9_3280 -> m9_14  [key=2, style=dotted];
m9_3281 -> m9_3282  [key=0, style=solid];
m9_3281 -> m9_14  [key=2, style=dotted];
m9_3282 -> m9_3277  [key=0, style=bold, color=blue];
m9_1812 -> m9_1813  [key=0, style=solid];
m9_1813 -> m9_1814  [key=0, style=solid];
m9_1813 -> m9_46  [key=2, style=dotted];
m9_1814 -> m9_1815  [key=0, style=solid];
m9_1814 -> m9_19  [key=2, style=dotted];
m9_1815 -> m9_1812  [key=0, style=bold, color=blue];
m9_2566 -> m9_2567  [key=0, style=solid];
m9_2567 -> m9_2568  [key=0, style=solid];
m9_2567 -> m9_2575  [key=2, style=dotted];
m9_2567 -> m9_19  [key=2, style=dotted];
m9_2568 -> m9_2569  [key=0, style=solid];
m9_2568 -> m9_170  [key=2, style=dotted];
m9_2568 -> m9_2570  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2569 -> m9_2570  [key=0, style=solid];
m9_2569 -> m9_12  [key=2, style=dotted];
m9_2570 -> m9_2571  [key=0, style=solid];
m9_2570 -> m9_13  [key=2, style=dotted];
m9_2570 -> m9_2572  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2570 -> m9_2573  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2571 -> m9_2572  [key=0, style=solid];
m9_2571 -> m9_1518  [key=2, style=dotted];
m9_2571 -> m9_14  [key=2, style=dotted];
m9_2572 -> m9_2573  [key=0, style=solid];
m9_2572 -> m9_1518  [key=2, style=dotted];
m9_2572 -> m9_14  [key=2, style=dotted];
m9_2573 -> m9_2574  [key=0, style=solid];
m9_2573 -> m9_1518  [key=2, style=dotted];
m9_2573 -> m9_14  [key=2, style=dotted];
m9_2574 -> m9_2566  [key=0, style=bold, color=blue];
m9_2101 -> m9_2102  [key=0, style=solid];
m9_2101 -> m9_2103  [key=1, style=dashed, color=darkseagreen4, label=TValue];
m9_2102 -> m9_2103  [key=0, style=solid];
m9_2103 -> m9_2104  [key=0, style=solid];
m9_2104 -> m9_2101  [key=0, style=bold, color=blue];
m9_2950 -> m9_2951  [key=0, style=solid];
m9_2951 -> m9_2952  [key=0, style=solid];
m9_2952 -> m9_2953  [key=0, style=solid];
m9_2952 -> m9_13  [key=2, style=dotted];
m9_2952 -> m9_2954  [key=1, style=dashed, color=darkseagreen4, label=w];
m9_2952 -> m9_2955  [key=1, style=dashed, color=darkseagreen4, label=w];
m9_2953 -> m9_2954  [key=0, style=solid];
m9_2953 -> m9_2949  [key=2, style=dotted];
m9_2953 -> m9_14  [key=2, style=dotted];
m9_2954 -> m9_2955  [key=0, style=solid];
m9_2954 -> m9_2949  [key=2, style=dotted];
m9_2954 -> m9_14  [key=2, style=dotted];
m9_2955 -> m9_2956  [key=0, style=solid];
m9_2955 -> m9_14  [key=2, style=dotted];
m9_2956 -> m9_2950  [key=0, style=bold, color=blue];
m9_1144 -> m9_1145  [key=0, style=solid];
m9_1145 -> m9_1146  [key=0, style=solid];
m9_1145 -> m9_1142  [key=2, style=dotted];
m9_1145 -> m9_1150  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_1145 -> m9_1151  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m9_1146 -> m9_1147  [key=0, style=solid];
m9_1146 -> m9_1143  [key=2, style=dotted];
m9_1150 -> m9_1151  [key=0, style=solid];
m9_1150 -> m9_14  [key=2, style=dotted];
m9_1151 -> m9_1152  [key=0, style=solid];
m9_1151 -> m9_14  [key=2, style=dotted];
m9_1147 -> m9_1148  [key=0, style=solid];
m9_1147 -> m9_47  [key=2, style=dotted];
m9_1147 -> m9_575  [key=2, style=dotted];
m9_1147 -> m9_1149  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1148 -> m9_1149  [key=0, style=solid];
m9_1148 -> m9_14  [key=2, style=dotted];
m9_1149 -> m9_1150  [key=0, style=solid];
m9_1149 -> m9_13  [key=2, style=dotted];
m9_1149 -> m9_1151  [key=1, style=dashed, color=darkseagreen4, label=m2];
m9_1152 -> m9_1144  [key=0, style=bold, color=blue];
m9_3015 -> m9_3016  [key=0, style=solid];
m9_3016 -> m9_3017  [key=0, style=solid];
m9_3016 -> m9_47  [key=2, style=dotted];
m9_3016 -> m9_668  [key=2, style=dotted];
m9_3016 -> m9_3019  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_3017 -> m9_3018  [key=0, style=solid];
m9_3017 -> m9_217  [key=2, style=dotted];
m9_3017 -> m9_218  [key=2, style=dotted];
m9_3017 -> m9_2398  [key=2, style=dotted];
m9_3017 -> m9_3020  [key=1, style=dashed, color=darkseagreen4, label=dict];
m9_3019 -> m9_3020  [key=0, style=solid];
m9_3019 -> m9_2398  [key=2, style=dotted];
m9_3018 -> m9_3019  [key=0, style=solid];
m9_3018 -> m9_217  [key=2, style=dotted];
m9_3018 -> m9_218  [key=2, style=dotted];
m9_3020 -> m9_3021  [key=0, style=solid];
m9_3020 -> m9_14  [key=2, style=dotted];
m9_3021 -> m9_3015  [key=0, style=bold, color=blue];
m9_706 -> m9_737  [key=0, style=solid];
m9_706 -> m9_738  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_706 -> m9_739  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_706 -> m9_743  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_737 -> m9_738  [key=0, style=solid];
m9_737 -> m9_669  [key=2, style=dotted];
m9_737 -> m9_739  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_737 -> m9_740  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_738 -> m9_739  [key=0, style=solid];
m9_738 -> m9_750  [key=2, style=dotted];
m9_738 -> m9_221  [key=2, style=dotted];
m9_739 -> m9_740  [key=0, style=solid];
m9_739 -> m9_751  [key=2, style=dotted];
m9_743 -> m9_744  [key=0, style=solid];
m9_743 -> m9_11  [key=2, style=dotted];
m9_743 -> m9_300  [key=2, style=dotted];
m9_740 -> m9_741  [key=0, style=solid];
m9_740 -> m9_752  [key=2, style=dotted];
m9_741 -> m9_742  [key=0, style=solid];
m9_741 -> m9_753  [key=2, style=dotted];
m9_741 -> m9_300  [key=2, style=dotted];
m9_742 -> m9_743  [key=0, style=solid];
m9_742 -> m9_754  [key=2, style=dotted];
m9_742 -> m9_755  [key=2, style=dotted];
m9_742 -> m9_756  [key=2, style=dotted];
m9_742 -> m9_742  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m9_742 -> m9_757  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_742 -> m9_745  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m9_742 -> m9_746  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m9_745 -> m9_746  [key=0, style=solid];
m9_745 -> m9_14  [key=2, style=dotted];
m9_746 -> m9_747  [key=0, style=solid];
m9_746 -> m9_748  [key=0, style=solid];
m9_744 -> m9_745  [key=0, style=solid];
m9_744 -> m9_754  [key=2, style=dotted];
m9_744 -> m9_755  [key=2, style=dotted];
m9_744 -> m9_756  [key=2, style=dotted];
m9_744 -> m9_744  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m9_744 -> m9_760  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_744 -> m9_747  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m9_744 -> m9_748  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m9_747 -> m9_746  [key=0, style=solid];
m9_747 -> m9_301  [key=2, style=dotted];
m9_747 -> m9_302  [key=2, style=dotted];
m9_747 -> m9_747  [key=1, style=dashed, color=darkseagreen4, label=property];
m9_748 -> m9_749  [key=0, style=solid];
m9_748 -> m9_605  [key=2, style=dotted];
m9_749 -> m9_706  [key=0, style=bold, color=blue];
m9_3815 -> m9_3816  [key=0, style=solid];
m9_3816 -> m9_3817  [key=0, style=solid];
m9_3816 -> m9_222  [key=2, style=dotted];
m9_3816 -> m9_3819  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3816 -> m9_3822  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3817 -> m9_3818  [key=0, style=solid];
m9_3819 -> m9_3820  [key=0, style=solid];
m9_3819 -> m9_46  [key=2, style=dotted];
m9_3819 -> m9_575  [key=2, style=dotted];
m9_3819 -> m9_3821  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3822 -> m9_3823  [key=0, style=solid];
m9_3822 -> m9_1518  [key=2, style=dotted];
m9_3822 -> m9_14  [key=2, style=dotted];
m9_3818 -> m9_3819  [key=0, style=solid];
m9_3818 -> m9_47  [key=2, style=dotted];
m9_3818 -> m9_3821  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_3821 -> m9_3822  [key=0, style=solid];
m9_3821 -> m9_143  [key=2, style=dotted];
m9_3820 -> m9_3821  [key=0, style=solid];
m9_3820 -> m9_12  [key=2, style=dotted];
m9_3823 -> m9_3815  [key=0, style=bold, color=blue];
m9_3208 -> m9_3209  [key=0, style=solid];
m9_3209 -> m9_3210  [key=0, style=solid];
m9_3209 -> m9_19  [key=2, style=dotted];
m9_3209 -> m9_3220  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3209 -> m9_3213  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3209 -> m9_3214  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3209 -> m9_3215  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3209 -> m9_3216  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_3210 -> m9_3211  [key=0, style=solid];
m9_3210 -> m9_3220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_3210 -> m9_3221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m9_3213 -> m9_3214  [key=0, style=solid];
m9_3213 -> m9_14  [key=2, style=dotted];
m9_3214 -> m9_3215  [key=0, style=solid];
m9_3214 -> m9_14  [key=2, style=dotted];
m9_3215 -> m9_3216  [key=0, style=solid];
m9_3215 -> m9_14  [key=2, style=dotted];
m9_3216 -> m9_3217  [key=0, style=solid];
m9_3216 -> m9_14  [key=2, style=dotted];
m9_3211 -> m9_3212  [key=0, style=solid];
m9_3211 -> m9_3218  [key=2, style=dotted];
m9_3211 -> m9_47  [key=2, style=dotted];
m9_3211 -> m9_575  [key=2, style=dotted];
m9_3212 -> m9_3213  [key=0, style=solid];
m9_3212 -> m9_12  [key=2, style=dotted];
m9_3217 -> m9_3208  [key=0, style=bold, color=blue];
m9_996 -> m9_997  [key=0, style=solid];
m9_997 -> m9_998  [key=0, style=solid];
m9_998 -> m9_999  [key=0, style=solid];
m9_998 -> m9_13  [key=2, style=dotted];
m9_998 -> m9_1000  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_998 -> m9_1001  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_998 -> m9_1002  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_998 -> m9_1003  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_998 -> m9_1004  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_999 -> m9_1000  [key=0, style=solid];
m9_999 -> m9_14  [key=2, style=dotted];
m9_1000 -> m9_1001  [key=0, style=solid];
m9_1000 -> m9_14  [key=2, style=dotted];
m9_1001 -> m9_1002  [key=0, style=solid];
m9_1001 -> m9_14  [key=2, style=dotted];
m9_1002 -> m9_1003  [key=0, style=solid];
m9_1002 -> m9_14  [key=2, style=dotted];
m9_1003 -> m9_1004  [key=0, style=solid];
m9_1003 -> m9_14  [key=2, style=dotted];
m9_1004 -> m9_1005  [key=0, style=solid];
m9_1004 -> m9_14  [key=2, style=dotted];
m9_1005 -> m9_996  [key=0, style=bold, color=blue];
m9_154 -> m9_155  [key=0, style=solid];
m9_155 -> m9_156  [key=0, style=solid];
m9_155 -> m9_157  [key=2, style=dotted];
m9_156 -> m9_154  [key=0, style=bold, color=blue];
m9_952 -> m9_953  [key=0, style=solid];
m9_953 -> m9_954  [key=0, style=solid];
m9_953 -> m9_46  [key=2, style=dotted];
m9_953 -> m9_955  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_953 -> m9_956  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_953 -> m9_959  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_954 -> m9_955  [key=0, style=solid];
m9_954 -> m9_667  [key=2, style=dotted];
m9_955 -> m9_956  [key=0, style=solid];
m9_955 -> m9_667  [key=2, style=dotted];
m9_956 -> m9_957  [key=0, style=solid];
m9_956 -> m9_11  [key=2, style=dotted];
m9_956 -> m9_958  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_959 -> m9_960  [key=0, style=solid];
m9_959 -> m9_14  [key=2, style=dotted];
m9_957 -> m9_958  [key=0, style=solid];
m9_957 -> m9_14  [key=2, style=dotted];
m9_958 -> m9_959  [key=0, style=solid];
m9_958 -> m9_13  [key=2, style=dotted];
m9_960 -> m9_952  [key=0, style=bold, color=blue];
m9_2245 -> m9_2246  [key=0, style=solid];
m9_2246 -> m9_2247  [key=0, style=solid];
m9_2247 -> m9_2245  [key=0, style=bold, color=blue];
m9_3645 -> m9_3646  [key=0, style=solid];
m9_3646 -> m9_3647  [key=0, style=solid];
m9_3646 -> m9_3665  [key=2, style=dotted];
m9_3646 -> m9_3648  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m9_3646 -> m9_3653  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m9_3646 -> m9_3659  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m9_3647 -> m9_3648  [key=0, style=solid];
m9_3647 -> m9_47  [key=2, style=dotted];
m9_3647 -> m9_3666  [key=2, style=dotted];
m9_3647 -> m9_3667  [key=2, style=dotted];
m9_3647 -> m9_3650  [key=1, style=dashed, color=darkseagreen4, label=options];
m9_3647 -> m9_3654  [key=1, style=dashed, color=darkseagreen4, label=options];
m9_3647 -> m9_3656  [key=1, style=dashed, color=darkseagreen4, label=options];
m9_3647 -> m9_3660  [key=1, style=dashed, color=darkseagreen4, label=options];
m9_3647 -> m9_3662  [key=1, style=dashed, color=darkseagreen4, label=options];
m9_3648 -> m9_3649  [key=0, style=solid];
m9_3648 -> m9_49  [key=2, style=dotted];
m9_3648 -> m9_3650  [key=1, style=dashed, color=darkseagreen4, label=text1];
m9_3653 -> m9_3654  [key=0, style=solid];
m9_3653 -> m9_667  [key=2, style=dotted];
m9_3659 -> m9_3660  [key=0, style=solid];
m9_3659 -> m9_667  [key=2, style=dotted];
m9_3650 -> m9_3651  [key=0, style=solid];
m9_3650 -> m9_143  [key=2, style=dotted];
m9_3654 -> m9_3655  [key=0, style=solid];
m9_3654 -> m9_49  [key=2, style=dotted];
m9_3654 -> m9_3656  [key=1, style=dashed, color=darkseagreen4, label=text2];
m9_3656 -> m9_3657  [key=0, style=solid];
m9_3656 -> m9_143  [key=2, style=dotted];
m9_3660 -> m9_3661  [key=0, style=solid];
m9_3660 -> m9_49  [key=2, style=dotted];
m9_3660 -> m9_3662  [key=1, style=dashed, color=darkseagreen4, label=text3];
m9_3662 -> m9_3663  [key=0, style=solid];
m9_3662 -> m9_143  [key=2, style=dotted];
m9_3649 -> m9_3650  [key=0, style=solid];
m9_3649 -> m9_14  [key=2, style=dotted];
m9_3651 -> m9_3652  [key=0, style=solid];
m9_3651 -> m9_3668  [key=2, style=dotted];
m9_3651 -> m9_14  [key=2, style=dotted];
m9_3652 -> m9_3653  [key=0, style=solid];
m9_3652 -> m9_46  [key=2, style=dotted];
m9_3652 -> m9_3654  [key=1, style=dashed, color=darkseagreen4, label=dict2];
m9_3655 -> m9_3656  [key=0, style=solid];
m9_3655 -> m9_12  [key=2, style=dotted];
m9_3657 -> m9_3658  [key=0, style=solid];
m9_3657 -> m9_3623  [key=2, style=dotted];
m9_3657 -> m9_3668  [key=2, style=dotted];
m9_3657 -> m9_14  [key=2, style=dotted];
m9_3658 -> m9_3659  [key=0, style=solid];
m9_3658 -> m9_46  [key=2, style=dotted];
m9_3658 -> m9_3660  [key=1, style=dashed, color=darkseagreen4, label=dict3];
m9_3661 -> m9_3662  [key=0, style=solid];
m9_3661 -> m9_12  [key=2, style=dotted];
m9_3663 -> m9_3664  [key=0, style=solid];
m9_3663 -> m9_3623  [key=2, style=dotted];
m9_3663 -> m9_3668  [key=2, style=dotted];
m9_3663 -> m9_14  [key=2, style=dotted];
m9_3664 -> m9_3645  [key=0, style=bold, color=blue];
m9_1798 -> m9_1799  [key=0, style=solid];
m9_1799 -> m9_1800  [key=0, style=solid];
m9_1799 -> m9_1811  [key=2, style=dotted];
m9_1799 -> m9_1806  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m9_1800 -> m9_1801  [key=0, style=solid];
m9_1800 -> m9_1802  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1800 -> m9_1803  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1800 -> m9_1804  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1800 -> m9_1805  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1800 -> m9_1809  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m9_1806 -> m9_1807  [key=0, style=solid];
m9_1806 -> m9_170  [key=2, style=dotted];
m9_1806 -> m9_1808  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1801 -> m9_1802  [key=0, style=solid];
m9_1801 -> m9_938  [key=2, style=dotted];
m9_1802 -> m9_1803  [key=0, style=solid];
m9_1803 -> m9_1804  [key=0, style=solid];
m9_1804 -> m9_1805  [key=0, style=solid];
m9_1804 -> m9_938  [key=2, style=dotted];
m9_1805 -> m9_1806  [key=0, style=solid];
m9_1809 -> m9_1810  [key=0, style=solid];
m9_1809 -> m9_14  [key=2, style=dotted];
m9_1807 -> m9_1808  [key=0, style=solid];
m9_1807 -> m9_12  [key=2, style=dotted];
m9_1808 -> m9_1809  [key=0, style=solid];
m9_1808 -> m9_13  [key=2, style=dotted];
m9_1810 -> m9_1798  [key=0, style=bold, color=blue];
m9_1200 -> m9_1201  [key=0, style=solid];
m9_1201 -> m9_1202  [key=0, style=solid];
m9_1201 -> m9_24  [key=2, style=dotted];
m9_1201 -> m9_1203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1202 -> m9_1200  [key=0, style=bold, color=blue];
m9_1863 -> m9_1864  [key=0, style=solid];
m9_1864 -> m9_1865  [key=0, style=solid];
m9_1864 -> m9_1868  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1865 -> m9_1866  [key=0, style=solid];
m9_1865 -> m9_24  [key=2, style=dotted];
m9_1865 -> m9_1867  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1866 -> m9_1863  [key=0, style=bold, color=blue];
m9_3876 -> m9_3877  [key=0, style=solid];
m9_3877 -> m9_3878  [key=0, style=solid];
m9_3877 -> m9_2231  [key=2, style=dotted];
m9_3878 -> m9_3876  [key=0, style=bold, color=blue];
m9_868 -> m9_869  [key=0, style=solid];
m9_869 -> m9_870  [key=0, style=solid];
m9_870 -> m9_871  [key=0, style=solid];
m9_870 -> m9_298  [key=2, style=dotted];
m9_870 -> m9_872  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_871 -> m9_872  [key=0, style=solid];
m9_871 -> m9_876  [key=2, style=dotted];
m9_871 -> m9_299  [key=2, style=dotted];
m9_871 -> m9_14  [key=2, style=dotted];
m9_872 -> m9_873  [key=0, style=solid];
m9_873 -> m9_874  [key=0, style=solid];
m9_874 -> m9_875  [key=0, style=solid];
m9_874 -> m9_877  [key=2, style=dotted];
m9_874 -> m9_299  [key=2, style=dotted];
m9_874 -> m9_14  [key=2, style=dotted];
m9_875 -> m9_868  [key=0, style=bold, color=blue];
m9_267 -> m9_268  [key=0, style=solid];
m9_268 -> m9_269  [key=0, style=solid];
m9_268 -> m9_248  [key=2, style=dotted];
m9_268 -> m9_275  [key=2, style=dotted];
m9_268 -> m9_276  [key=2, style=dotted];
m9_268 -> m9_271  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_268 -> m9_272  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_268 -> m9_273  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_269 -> m9_270  [key=0, style=solid];
m9_269 -> m9_11  [key=2, style=dotted];
m9_271 -> m9_272  [key=0, style=solid];
m9_271 -> m9_14  [key=2, style=dotted];
m9_272 -> m9_273  [key=0, style=solid];
m9_272 -> m9_14  [key=2, style=dotted];
m9_273 -> m9_274  [key=0, style=solid];
m9_273 -> m9_14  [key=2, style=dotted];
m9_270 -> m9_271  [key=0, style=solid];
m9_270 -> m9_13  [key=2, style=dotted];
m9_270 -> m9_272  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_270 -> m9_273  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_274 -> m9_267  [key=0, style=bold, color=blue];
m9_2550 -> m9_3967  [key=0, style=solid];
m9_3967 -> m9_3968  [key=0, style=solid];
m9_3968 -> m9_2550  [key=0, style=bold, color=blue];
m9_1416 -> m9_1417  [key=0, style=solid];
m9_1417 -> m9_1418  [key=0, style=solid];
m9_1417 -> m9_1415  [key=2, style=dotted];
m9_1417 -> m9_1419  [key=1, style=dashed, color=darkseagreen4, label=i];
m9_1418 -> m9_1419  [key=0, style=solid];
m9_1419 -> m9_1420  [key=0, style=solid];
m9_1419 -> m9_47  [key=2, style=dotted];
m9_1419 -> m9_575  [key=2, style=dotted];
m9_1419 -> m9_1421  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1420 -> m9_1421  [key=0, style=solid];
m9_1420 -> m9_14  [key=2, style=dotted];
m9_1421 -> m9_1422  [key=0, style=solid];
m9_1421 -> m9_47  [key=2, style=dotted];
m9_1421 -> m9_143  [key=2, style=dotted];
m9_1422 -> m9_1423  [key=0, style=solid];
m9_1422 -> m9_47  [key=2, style=dotted];
m9_1422 -> m9_575  [key=2, style=dotted];
m9_1423 -> m9_1424  [key=0, style=solid];
m9_1423 -> m9_14  [key=2, style=dotted];
m9_1424 -> m9_1416  [key=0, style=bold, color=blue];
m9_3408 -> m9_3409  [key=0, style=solid];
m9_3409 -> m9_3410  [key=0, style=solid];
m9_3410 -> m9_3411  [key=0, style=solid];
m9_3410 -> m9_13  [key=2, style=dotted];
m9_3411 -> m9_3412  [key=0, style=solid];
m9_3412 -> m9_3413  [key=0, style=solid];
m9_3412 -> m9_2193  [key=2, style=dotted];
m9_3412 -> m9_14  [key=2, style=dotted];
m9_3413 -> m9_3408  [key=0, style=bold, color=blue];
m9_3072 -> m9_3073  [key=0, style=solid];
m9_3073 -> m9_3074  [key=0, style=solid];
m9_3074 -> m9_3075  [key=0, style=solid];
m9_3074 -> m9_985  [key=2, style=dotted];
m9_3074 -> m9_83  [key=2, style=dotted];
m9_3075 -> m9_3076  [key=0, style=solid];
m9_3075 -> m9_14  [key=2, style=dotted];
m9_3076 -> m9_3072  [key=0, style=bold, color=blue];
m9_309 -> m9_310  [key=0, style=solid];
m9_310 -> m9_311  [key=0, style=solid];
m9_310 -> m9_219  [key=2, style=dotted];
m9_310 -> m9_312  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_313  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_314  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_315  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_316  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_317  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_318  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_319  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_321  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_322  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_323  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_324  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_325  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_326  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_327  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_328  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_329  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_330  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_331  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_332  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_333  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_334  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_335  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_336  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_337  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_338  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_339  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_340  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_341  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_342  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_343  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_344  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_345  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_346  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_347  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_348  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_349  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_350  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_351  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_352  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_353  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_354  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_355  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_356  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_358  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_359  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_360  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_361  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_363  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_364  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_365  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_366  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_367  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_310 -> m9_368  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_311 -> m9_312  [key=0, style=solid];
m9_311 -> m9_370  [key=2, style=dotted];
m9_311 -> m9_313  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m9_312 -> m9_313  [key=0, style=solid];
m9_313 -> m9_314  [key=0, style=solid];
m9_313 -> m9_14  [key=2, style=dotted];
m9_314 -> m9_315  [key=0, style=solid];
m9_315 -> m9_316  [key=0, style=solid];
m9_315 -> m9_14  [key=2, style=dotted];
m9_316 -> m9_317  [key=0, style=solid];
m9_317 -> m9_318  [key=0, style=solid];
m9_317 -> m9_14  [key=2, style=dotted];
m9_318 -> m9_319  [key=0, style=solid];
m9_318 -> m9_371  [key=2, style=dotted];
m9_319 -> m9_320  [key=0, style=solid];
m9_319 -> m9_371  [key=2, style=dotted];
m9_319 -> m9_14  [key=2, style=dotted];
m9_321 -> m9_322  [key=0, style=solid];
m9_322 -> m9_323  [key=0, style=solid];
m9_322 -> m9_14  [key=2, style=dotted];
m9_323 -> m9_324  [key=0, style=solid];
m9_323 -> m9_82  [key=2, style=dotted];
m9_323 -> m9_373  [key=2, style=dotted];
m9_324 -> m9_325  [key=0, style=solid];
m9_324 -> m9_14  [key=2, style=dotted];
m9_325 -> m9_326  [key=0, style=solid];
m9_325 -> m9_374  [key=2, style=dotted];
m9_326 -> m9_327  [key=0, style=solid];
m9_326 -> m9_375  [key=2, style=dotted];
m9_326 -> m9_14  [key=2, style=dotted];
m9_327 -> m9_328  [key=0, style=solid];
m9_328 -> m9_329  [key=0, style=solid];
m9_328 -> m9_14  [key=2, style=dotted];
m9_329 -> m9_330  [key=0, style=solid];
m9_330 -> m9_331  [key=0, style=solid];
m9_330 -> m9_14  [key=2, style=dotted];
m9_331 -> m9_332  [key=0, style=solid];
m9_332 -> m9_333  [key=0, style=solid];
m9_332 -> m9_14  [key=2, style=dotted];
m9_333 -> m9_334  [key=0, style=solid];
m9_334 -> m9_335  [key=0, style=solid];
m9_334 -> m9_14  [key=2, style=dotted];
m9_335 -> m9_336  [key=0, style=solid];
m9_336 -> m9_337  [key=0, style=solid];
m9_336 -> m9_14  [key=2, style=dotted];
m9_337 -> m9_338  [key=0, style=solid];
m9_338 -> m9_339  [key=0, style=solid];
m9_338 -> m9_14  [key=2, style=dotted];
m9_339 -> m9_340  [key=0, style=solid];
m9_340 -> m9_341  [key=0, style=solid];
m9_340 -> m9_14  [key=2, style=dotted];
m9_341 -> m9_342  [key=0, style=solid];
m9_342 -> m9_343  [key=0, style=solid];
m9_342 -> m9_14  [key=2, style=dotted];
m9_343 -> m9_344  [key=0, style=solid];
m9_344 -> m9_345  [key=0, style=solid];
m9_344 -> m9_14  [key=2, style=dotted];
m9_345 -> m9_346  [key=0, style=solid];
m9_346 -> m9_347  [key=0, style=solid];
m9_346 -> m9_14  [key=2, style=dotted];
m9_347 -> m9_348  [key=0, style=solid];
m9_348 -> m9_349  [key=0, style=solid];
m9_348 -> m9_14  [key=2, style=dotted];
m9_349 -> m9_350  [key=0, style=solid];
m9_350 -> m9_351  [key=0, style=solid];
m9_350 -> m9_14  [key=2, style=dotted];
m9_351 -> m9_352  [key=0, style=solid];
m9_352 -> m9_353  [key=0, style=solid];
m9_352 -> m9_14  [key=2, style=dotted];
m9_353 -> m9_354  [key=0, style=solid];
m9_354 -> m9_355  [key=0, style=solid];
m9_354 -> m9_14  [key=2, style=dotted];
m9_355 -> m9_356  [key=0, style=solid];
m9_356 -> m9_357  [key=0, style=solid];
m9_356 -> m9_14  [key=2, style=dotted];
m9_358 -> m9_359  [key=0, style=solid];
m9_359 -> m9_360  [key=0, style=solid];
m9_359 -> m9_14  [key=2, style=dotted];
m9_360 -> m9_361  [key=0, style=solid];
m9_361 -> m9_362  [key=0, style=solid];
m9_361 -> m9_14  [key=2, style=dotted];
m9_363 -> m9_364  [key=0, style=solid];
m9_364 -> m9_365  [key=0, style=solid];
m9_364 -> m9_14  [key=2, style=dotted];
m9_365 -> m9_366  [key=0, style=solid];
m9_366 -> m9_367  [key=0, style=solid];
m9_366 -> m9_14  [key=2, style=dotted];
m9_367 -> m9_368  [key=0, style=solid];
m9_368 -> m9_369  [key=0, style=solid];
m9_368 -> m9_14  [key=2, style=dotted];
m9_320 -> m9_321  [key=0, style=solid];
m9_320 -> m9_372  [key=2, style=dotted];
m9_320 -> m9_322  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m9_357 -> m9_358  [key=0, style=solid];
m9_357 -> m9_376  [key=2, style=dotted];
m9_357 -> m9_359  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m9_362 -> m9_363  [key=0, style=solid];
m9_362 -> m9_377  [key=2, style=dotted];
m9_362 -> m9_364  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m9_369 -> m9_309  [key=0, style=bold, color=blue];
m9_2534 -> m9_2535  [key=0, style=solid];
m9_2535 -> m9_2536  [key=0, style=solid];
m9_2535 -> m9_2541  [key=2, style=dotted];
m9_2535 -> m9_2542  [key=2, style=dotted];
m9_2535 -> m9_1552  [key=2, style=dotted];
m9_2535 -> m9_2539  [key=1, style=dashed, color=darkseagreen4, label=response];
m9_2536 -> m9_2537  [key=0, style=solid];
m9_2536 -> m9_170  [key=2, style=dotted];
m9_2539 -> m9_2540  [key=0, style=solid];
m9_2539 -> m9_2543  [key=2, style=dotted];
m9_2539 -> m9_302  [key=2, style=dotted];
m9_2537 -> m9_2538  [key=0, style=solid];
m9_2537 -> m9_13  [key=2, style=dotted];
m9_2537 -> m9_2539  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m9_2538 -> m9_2539  [key=0, style=solid];
m9_2538 -> m9_14  [key=2, style=dotted];
m9_2540 -> m9_2534  [key=0, style=bold, color=blue];
m9_2507 -> m9_2508  [key=0, style=solid];
m9_2508 -> m9_2509  [key=0, style=solid];
m9_2508 -> m9_550  [key=2, style=dotted];
m9_2508 -> m9_4041  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m9_2509 -> m9_2507  [key=0, style=bold, color=blue];
m9_1779 -> m9_1780  [key=0, style=solid];
m9_1780 -> m9_1781  [key=0, style=solid];
m9_1781 -> m9_1782  [key=0, style=solid];
m9_1781 -> m9_13  [key=2, style=dotted];
m9_1782 -> m9_1783  [key=0, style=solid];
m9_1782 -> m9_1785  [key=0, style=solid];
m9_1782 -> m9_1293  [key=2, style=dotted];
m9_1783 -> m9_1784  [key=0, style=solid];
m9_1784 -> m9_1785  [key=0, style=solid];
m9_1784 -> m9_1294  [key=2, style=dotted];
m9_1784 -> m9_302  [key=2, style=dotted];
m9_1785 -> m9_1779  [key=0, style=bold, color=blue];
m9_3471 -> m9_3472  [key=0, style=solid];
m9_3472 -> m9_3473  [key=0, style=solid];
m9_3472 -> m9_19  [key=2, style=dotted];
m9_3472 -> m9_938  [key=2, style=dotted];
m9_3472 -> m9_222  [key=2, style=dotted];
m9_3472 -> m9_946  [key=2, style=dotted];
m9_3473 -> m9_3474  [key=0, style=solid];
m9_3473 -> m9_47  [key=2, style=dotted];
m9_3473 -> m9_49  [key=2, style=dotted];
m9_3474 -> m9_3475  [key=0, style=solid];
m9_3474 -> m9_12  [key=2, style=dotted];
m9_3475 -> m9_3471  [key=0, style=bold, color=blue];
m9_2555 -> m9_2556  [key=0, style=solid];
m9_2556 -> m9_2557  [key=0, style=solid];
m9_2556 -> m9_13  [key=2, style=dotted];
m9_2556 -> m9_2558  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2557 -> m9_2558  [key=0, style=solid];
m9_2557 -> m9_14  [key=2, style=dotted];
m9_2558 -> m9_2559  [key=0, style=solid];
m9_2558 -> m9_14  [key=2, style=dotted];
m9_2559 -> m9_2555  [key=0, style=bold, color=blue];
m9_3704 -> m9_3705  [key=0, style=solid];
m9_3705 -> m9_3706  [key=0, style=solid];
m9_3705 -> m9_3691  [key=2, style=dotted];
m9_3706 -> m9_3704  [key=0, style=bold, color=blue];
m9_3886 -> m9_3887  [key=0, style=solid];
m9_3887 -> m9_3888  [key=0, style=solid];
m9_3887 -> m9_24  [key=2, style=dotted];
m9_3887 -> m9_3889  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3888 -> m9_3886  [key=0, style=bold, color=blue];
m9_896 -> m9_897  [key=0, style=solid];
m9_897 -> m9_898  [key=0, style=solid];
m9_897 -> m9_899  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_897 -> m9_900  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_898 -> m9_899  [key=0, style=solid];
m9_898 -> m9_750  [key=2, style=dotted];
m9_899 -> m9_900  [key=0, style=solid];
m9_899 -> m9_904  [key=2, style=dotted];
m9_899 -> m9_905  [key=2, style=dotted];
m9_899 -> m9_906  [key=2, style=dotted];
m9_899 -> m9_902  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m9_900 -> m9_901  [key=0, style=solid];
m9_900 -> m9_13  [key=2, style=dotted];
m9_900 -> m9_902  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m9_902 -> m9_903  [key=0, style=solid];
m9_902 -> m9_14  [key=2, style=dotted];
m9_901 -> m9_902  [key=0, style=solid];
m9_901 -> m9_14  [key=2, style=dotted];
m9_903 -> m9_896  [key=0, style=bold, color=blue];
m9_3677 -> m9_3678  [key=0, style=solid];
m9_3678 -> m9_3679  [key=0, style=solid];
m9_3679 -> m9_3677  [key=0, style=bold, color=blue];
m9_2658 -> m9_2659  [key=0, style=solid];
m9_2659 -> m9_2660  [key=0, style=solid];
m9_2659 -> m9_2663  [key=2, style=dotted];
m9_2659 -> m9_938  [key=2, style=dotted];
m9_2660 -> m9_2661  [key=0, style=solid];
m9_2660 -> m9_170  [key=2, style=dotted];
m9_2661 -> m9_2662  [key=0, style=solid];
m9_2661 -> m9_12  [key=2, style=dotted];
m9_2662 -> m9_2658  [key=0, style=bold, color=blue];
m9_3370 -> m9_3371  [key=0, style=solid];
m9_3371 -> m9_3372  [key=0, style=solid];
m9_3371 -> m9_3373  [key=2, style=dotted];
m9_3372 -> m9_3370  [key=0, style=bold, color=blue];
m9_2853 -> m9_2854  [key=0, style=solid];
m9_2854 -> m9_2855  [key=0, style=solid];
m9_2854 -> m9_1702  [key=2, style=dotted];
m9_2854 -> m9_2858  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m9_2854 -> m9_2860  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m9_2855 -> m9_2856  [key=0, style=solid];
m9_2855 -> m9_2865  [key=2, style=dotted];
m9_2855 -> m9_2858  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2858 -> m9_2859  [key=0, style=solid];
m9_2858 -> m9_47  [key=2, style=dotted];
m9_2858 -> m9_49  [key=2, style=dotted];
m9_2860 -> m9_2861  [key=0, style=solid];
m9_2860 -> m9_47  [key=2, style=dotted];
m9_2860 -> m9_143  [key=2, style=dotted];
m9_2856 -> m9_2857  [key=0, style=solid];
m9_2857 -> m9_2858  [key=0, style=solid];
m9_2859 -> m9_2860  [key=0, style=solid];
m9_2859 -> m9_12  [key=2, style=dotted];
m9_2861 -> m9_2862  [key=0, style=solid];
m9_2861 -> m9_14  [key=2, style=dotted];
m9_2862 -> m9_2863  [key=0, style=solid];
m9_2862 -> m9_14  [key=2, style=dotted];
m9_2863 -> m9_2864  [key=0, style=solid];
m9_2863 -> m9_14  [key=2, style=dotted];
m9_2864 -> m9_2853  [key=0, style=bold, color=blue];
m9_10 -> m9_15  [key=0, style=solid];
m9_10 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m9_10 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_19  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_18  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_20  [key=2, style=dotted];
m9_18 -> m9_10  [key=0, style=bold, color=blue];
m9_690 -> m9_691  [key=0, style=solid];
m9_691 -> m9_692  [key=0, style=solid];
m9_691 -> m9_695  [key=2, style=dotted];
m9_692 -> m9_693  [key=0, style=solid];
m9_692 -> m9_11  [key=2, style=dotted];
m9_693 -> m9_694  [key=0, style=solid];
m9_693 -> m9_14  [key=2, style=dotted];
m9_694 -> m9_690  [key=0, style=bold, color=blue];
m9_799 -> m9_800  [key=0, style=solid];
m9_800 -> m9_801  [key=0, style=solid];
m9_800 -> m9_790  [key=2, style=dotted];
m9_800 -> m9_802  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m9_800 -> m9_811  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m9_801 -> m9_802  [key=0, style=solid];
m9_801 -> m9_46  [key=2, style=dotted];
m9_801 -> m9_803  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m9_801 -> m9_806  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m9_802 -> m9_803  [key=0, style=solid];
m9_811 -> m9_812  [key=0, style=solid];
m9_811 -> m9_14  [key=2, style=dotted];
m9_803 -> m9_804  [key=0, style=solid];
m9_803 -> m9_11  [key=2, style=dotted];
m9_803 -> m9_809  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m9_806 -> m9_807  [key=0, style=solid];
m9_806 -> m9_751  [key=2, style=dotted];
m9_804 -> m9_805  [key=0, style=solid];
m9_804 -> m9_669  [key=2, style=dotted];
m9_804 -> m9_806  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_804 -> m9_807  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_809 -> m9_810  [key=0, style=solid];
m9_809 -> m9_772  [key=2, style=dotted];
m9_805 -> m9_806  [key=0, style=solid];
m9_805 -> m9_750  [key=2, style=dotted];
m9_807 -> m9_808  [key=0, style=solid];
m9_807 -> m9_752  [key=2, style=dotted];
m9_808 -> m9_809  [key=0, style=solid];
m9_808 -> m9_753  [key=2, style=dotted];
m9_810 -> m9_811  [key=0, style=solid];
m9_812 -> m9_799  [key=0, style=bold, color=blue];
m9_2706 -> m9_2707  [key=0, style=solid];
m9_2707 -> m9_2708  [key=0, style=solid];
m9_2707 -> m9_2231  [key=2, style=dotted];
m9_2708 -> m9_2706  [key=0, style=bold, color=blue];
m9_1977 -> m9_1978  [key=0, style=solid];
m9_1978 -> m9_1979  [key=0, style=solid];
m9_1978 -> m9_1980  [key=2, style=dotted];
m9_1979 -> m9_1977  [key=0, style=bold, color=blue];
m9_1504 -> m9_1505  [key=0, style=solid];
m9_1505 -> m9_1506  [key=0, style=solid];
m9_1506 -> m9_1507  [key=0, style=solid];
m9_1506 -> m9_47  [key=2, style=dotted];
m9_1506 -> m9_143  [key=2, style=dotted];
m9_1506 -> m9_1508  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1506 -> m9_1509  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1506 -> m9_1510  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1506 -> m9_1511  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1506 -> m9_1512  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1506 -> m9_1513  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1506 -> m9_1514  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1506 -> m9_1515  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1506 -> m9_1516  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1507 -> m9_1508  [key=0, style=solid];
m9_1507 -> m9_14  [key=2, style=dotted];
m9_1508 -> m9_1509  [key=0, style=solid];
m9_1508 -> m9_14  [key=2, style=dotted];
m9_1509 -> m9_1510  [key=0, style=solid];
m9_1509 -> m9_14  [key=2, style=dotted];
m9_1510 -> m9_1511  [key=0, style=solid];
m9_1510 -> m9_14  [key=2, style=dotted];
m9_1511 -> m9_1512  [key=0, style=solid];
m9_1511 -> m9_14  [key=2, style=dotted];
m9_1512 -> m9_1513  [key=0, style=solid];
m9_1512 -> m9_1518  [key=2, style=dotted];
m9_1512 -> m9_14  [key=2, style=dotted];
m9_1513 -> m9_1514  [key=0, style=solid];
m9_1513 -> m9_1518  [key=2, style=dotted];
m9_1513 -> m9_14  [key=2, style=dotted];
m9_1514 -> m9_1515  [key=0, style=solid];
m9_1514 -> m9_14  [key=2, style=dotted];
m9_1515 -> m9_1516  [key=0, style=solid];
m9_1515 -> m9_14  [key=2, style=dotted];
m9_1516 -> m9_1517  [key=0, style=solid];
m9_1516 -> m9_632  [key=2, style=dotted];
m9_1517 -> m9_1504  [key=0, style=bold, color=blue];
m9_3854 -> m9_3855  [key=0, style=solid];
m9_3855 -> m9_3856  [key=0, style=solid];
m9_3855 -> m9_3862  [key=2, style=dotted];
m9_3855 -> m9_3857  [key=1, style=dashed, color=darkseagreen4, label=original];
m9_3856 -> m9_3857  [key=0, style=solid];
m9_3856 -> m9_47  [key=2, style=dotted];
m9_3856 -> m9_3858  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m9_3857 -> m9_3858  [key=0, style=solid];
m9_3857 -> m9_575  [key=2, style=dotted];
m9_3858 -> m9_3859  [key=0, style=solid];
m9_3858 -> m9_143  [key=2, style=dotted];
m9_3858 -> m9_3860  [key=1, style=dashed, color=darkseagreen4, label=clonedObject];
m9_3859 -> m9_3860  [key=0, style=solid];
m9_3859 -> m9_14  [key=2, style=dotted];
m9_3860 -> m9_3861  [key=0, style=solid];
m9_3860 -> m9_14  [key=2, style=dotted];
m9_3861 -> m9_3854  [key=0, style=bold, color=blue];
m9_1220 -> m9_1221  [key=0, style=solid];
m9_1221 -> m9_1222  [key=0, style=solid];
m9_1221 -> m9_1226  [key=2, style=dotted];
m9_1221 -> m9_1227  [key=2, style=dotted];
m9_1221 -> m9_1223  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m9_1222 -> m9_1223  [key=0, style=solid];
m9_1223 -> m9_1224  [key=0, style=solid];
m9_1223 -> m9_11  [key=2, style=dotted];
m9_1224 -> m9_1225  [key=0, style=solid];
m9_1224 -> m9_14  [key=2, style=dotted];
m9_1225 -> m9_1220  [key=0, style=bold, color=blue];
m9_3397 -> m9_3398  [key=0, style=solid];
m9_3398 -> m9_3399  [key=0, style=solid];
m9_3399 -> m9_3397  [key=0, style=bold, color=blue];
m9_727 -> m9_728  [key=0, style=solid];
m9_728 -> m9_729  [key=0, style=solid];
m9_728 -> m9_736  [key=2, style=dotted];
m9_728 -> m9_730  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_728 -> m9_731  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_728 -> m9_732  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_728 -> m9_733  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_729 -> m9_730  [key=0, style=solid];
m9_730 -> m9_731  [key=0, style=solid];
m9_731 -> m9_732  [key=0, style=solid];
m9_732 -> m9_733  [key=0, style=solid];
m9_733 -> m9_734  [key=0, style=solid];
m9_733 -> m9_706  [key=2, style=dotted];
m9_734 -> m9_735  [key=0, style=solid];
m9_734 -> m9_12  [key=2, style=dotted];
m9_735 -> m9_727  [key=0, style=bold, color=blue];
m9_2235 -> m9_2236  [key=0, style=solid];
m9_2235 -> m9_2238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_2235 -> m9_2239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_2236 -> m9_2237  [key=0, style=solid];
m9_2236 -> m9_2238  [key=1, style=dashed, color=darkseagreen4, label=p];
m9_2238 -> m9_2240  [key=0, style=solid];
m9_2238 -> m9_2241  [key=2, style=dotted];
m9_2238 -> m9_2226  [key=2, style=dotted];
m9_2239 -> m9_2240  [key=0, style=solid];
m9_2239 -> m9_2227  [key=2, style=dotted];
m9_2237 -> m9_2238  [key=0, style=solid];
m9_2237 -> m9_2239  [key=0, style=solid];
m9_2240 -> m9_2235  [key=0, style=bold, color=blue];
m9_1951 -> m9_1952  [key=0, style=solid];
m9_1952 -> m9_1953  [key=0, style=solid];
m9_1952 -> m9_1954  [key=2, style=dotted];
m9_1953 -> m9_1951  [key=0, style=bold, color=blue];
m9_3868 -> m9_3869  [key=0, style=solid];
m9_3869 -> m9_3868  [key=0, style=bold, color=blue];
m9_3313 -> m9_3314  [key=0, style=solid];
m9_3314 -> m9_3315  [key=0, style=solid];
m9_3314 -> m9_3321  [key=2, style=dotted];
m9_3315 -> m9_3316  [key=0, style=solid];
m9_3315 -> m9_170  [key=2, style=dotted];
m9_3316 -> m9_3317  [key=0, style=solid];
m9_3316 -> m9_12  [key=2, style=dotted];
m9_3317 -> m9_3318  [key=0, style=solid];
m9_3317 -> m9_3322  [key=2, style=dotted];
m9_3318 -> m9_3319  [key=0, style=solid];
m9_3318 -> m9_170  [key=2, style=dotted];
m9_3319 -> m9_3320  [key=0, style=solid];
m9_3319 -> m9_12  [key=2, style=dotted];
m9_3320 -> m9_3313  [key=0, style=bold, color=blue];
m9_3955 -> m9_3956  [key=0, style=solid];
m9_3956 -> m9_3957  [key=0, style=solid];
m9_3956 -> m9_2398  [key=2, style=dotted];
m9_3956 -> m9_3959  [key=1, style=dashed, color=darkseagreen4, label=encodingName];
m9_3957 -> m9_3958  [key=0, style=solid];
m9_3957 -> m9_3959  [key=0, style=solid];
m9_3959 -> m9_3960  [key=0, style=solid];
m9_3959 -> m9_3961  [key=2, style=dotted];
m9_3958 -> m9_3960  [key=0, style=solid];
m9_3960 -> m9_3955  [key=0, style=bold, color=blue];
m9_717 -> m9_718  [key=0, style=solid];
m9_718 -> m9_719  [key=0, style=solid];
m9_718 -> m9_726  [key=2, style=dotted];
m9_718 -> m9_720  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_718 -> m9_721  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_718 -> m9_722  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_718 -> m9_723  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_719 -> m9_720  [key=0, style=solid];
m9_720 -> m9_721  [key=0, style=solid];
m9_721 -> m9_722  [key=0, style=solid];
m9_722 -> m9_723  [key=0, style=solid];
m9_723 -> m9_724  [key=0, style=solid];
m9_723 -> m9_706  [key=2, style=dotted];
m9_724 -> m9_725  [key=0, style=solid];
m9_724 -> m9_12  [key=2, style=dotted];
m9_725 -> m9_717  [key=0, style=bold, color=blue];
m9_2309 -> m9_2310  [key=0, style=solid];
m9_2310 -> m9_2311  [key=0, style=solid];
m9_2311 -> m9_2309  [key=0, style=bold, color=blue];
m9_2399 -> m9_2400  [key=0, style=solid];
m9_2400 -> m9_2401  [key=0, style=solid];
m9_2400 -> m9_13  [key=2, style=dotted];
m9_2401 -> m9_2402  [key=0, style=solid];
m9_2401 -> m9_2397  [key=2, style=dotted];
m9_2401 -> m9_790  [key=2, style=dotted];
m9_2401 -> m9_946  [key=2, style=dotted];
m9_2401 -> m9_14  [key=2, style=dotted];
m9_2402 -> m9_2399  [key=0, style=bold, color=blue];
m9_2605 -> m9_2606  [key=0, style=solid];
m9_2606 -> m9_2607  [key=0, style=solid];
m9_2607 -> m9_2608  [key=0, style=solid];
m9_2607 -> m9_13  [key=2, style=dotted];
m9_2607 -> m9_2609  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m9_2607 -> m9_2610  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m9_2608 -> m9_2609  [key=0, style=solid];
m9_2608 -> m9_14  [key=2, style=dotted];
m9_2609 -> m9_2610  [key=0, style=solid];
m9_2609 -> m9_14  [key=2, style=dotted];
m9_2610 -> m9_2611  [key=0, style=solid];
m9_2610 -> m9_14  [key=2, style=dotted];
m9_2611 -> m9_2605  [key=0, style=bold, color=blue];
m9_2156 -> m9_2157  [key=0, style=solid];
m9_2157 -> m9_2156  [key=0, style=bold, color=blue];
m9_1581 -> m9_1582  [key=0, style=solid];
m9_1582 -> m9_1583  [key=0, style=solid];
m9_1583 -> m9_1584  [key=0, style=solid];
m9_1583 -> m9_13  [key=2, style=dotted];
m9_1584 -> m9_1585  [key=0, style=solid];
m9_1584 -> m9_14  [key=2, style=dotted];
m9_1585 -> m9_1581  [key=0, style=bold, color=blue];
m9_3506 -> m9_3507  [key=0, style=solid];
m9_3507 -> m9_3506  [key=0, style=bold, color=blue];
m9_940 -> m9_941  [key=0, style=solid];
m9_941 -> m9_942  [key=0, style=solid];
m9_941 -> m9_19  [key=2, style=dotted];
m9_941 -> m9_945  [key=2, style=dotted];
m9_941 -> m9_938  [key=2, style=dotted];
m9_941 -> m9_222  [key=2, style=dotted];
m9_941 -> m9_946  [key=2, style=dotted];
m9_942 -> m9_943  [key=0, style=solid];
m9_942 -> m9_11  [key=2, style=dotted];
m9_943 -> m9_944  [key=0, style=solid];
m9_943 -> m9_14  [key=2, style=dotted];
m9_944 -> m9_940  [key=0, style=bold, color=blue];
m9_3044 -> m9_3045  [key=0, style=solid];
m9_3045 -> m9_3046  [key=0, style=solid];
m9_3045 -> m9_24  [key=2, style=dotted];
m9_3045 -> m9_3047  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3046 -> m9_3044  [key=0, style=bold, color=blue];
m9_3289 -> m9_3296  [key=0, style=solid];
m9_3296 -> m9_3297  [key=0, style=solid];
m9_3296 -> m9_217  [key=2, style=dotted];
m9_3296 -> m9_218  [key=2, style=dotted];
m9_3296 -> m9_3299  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m9_3297 -> m9_3298  [key=0, style=solid];
m9_3297 -> m9_219  [key=2, style=dotted];
m9_3297 -> m9_3299  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_3299 -> m9_3300  [key=0, style=solid];
m9_3299 -> m9_2360  [key=2, style=dotted];
m9_3298 -> m9_3299  [key=0, style=solid];
m9_3298 -> m9_1702  [key=2, style=dotted];
m9_3300 -> m9_3289  [key=0, style=bold, color=blue];
m9_2996 -> m9_2997  [key=0, style=solid];
m9_2997 -> m9_2998  [key=0, style=solid];
m9_2997 -> m9_3006  [key=2, style=dotted];
m9_2997 -> m9_11  [key=2, style=dotted];
m9_2997 -> m9_2999  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2998 -> m9_2999  [key=0, style=solid];
m9_2998 -> m9_14  [key=2, style=dotted];
m9_2999 -> m9_3000  [key=0, style=solid];
m9_2999 -> m9_13  [key=2, style=dotted];
m9_3000 -> m9_3001  [key=0, style=solid];
m9_3000 -> m9_14  [key=2, style=dotted];
m9_3001 -> m9_3002  [key=0, style=solid];
m9_3001 -> m9_3006  [key=2, style=dotted];
m9_3001 -> m9_11  [key=2, style=dotted];
m9_3001 -> m9_3003  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3002 -> m9_3003  [key=0, style=solid];
m9_3002 -> m9_14  [key=2, style=dotted];
m9_3003 -> m9_3004  [key=0, style=solid];
m9_3003 -> m9_13  [key=2, style=dotted];
m9_3004 -> m9_3005  [key=0, style=solid];
m9_3004 -> m9_14  [key=2, style=dotted];
m9_3005 -> m9_2996  [key=0, style=bold, color=blue];
m9_2849 -> m9_2850  [key=0, style=solid];
m9_2850 -> m9_2851  [key=0, style=solid];
m9_2850 -> m9_2852  [key=2, style=dotted];
m9_2851 -> m9_2849  [key=0, style=bold, color=blue];
m9_947 -> m9_948  [key=0, style=solid];
m9_948 -> m9_949  [key=0, style=solid];
m9_948 -> m9_19  [key=2, style=dotted];
m9_948 -> m9_945  [key=2, style=dotted];
m9_948 -> m9_938  [key=2, style=dotted];
m9_948 -> m9_222  [key=2, style=dotted];
m9_948 -> m9_946  [key=2, style=dotted];
m9_949 -> m9_950  [key=0, style=solid];
m9_949 -> m9_47  [key=2, style=dotted];
m9_949 -> m9_575  [key=2, style=dotted];
m9_950 -> m9_951  [key=0, style=solid];
m9_950 -> m9_14  [key=2, style=dotted];
m9_951 -> m9_947  [key=0, style=bold, color=blue];
m9_3669 -> m9_3670  [key=0, style=solid];
m9_3670 -> m9_3671  [key=0, style=solid];
m9_3670 -> m9_3676  [key=2, style=dotted];
m9_3670 -> m9_3672  [key=1, style=dashed, color=darkseagreen4, label=product];
m9_3671 -> m9_3672  [key=0, style=solid];
m9_3671 -> m9_46  [key=2, style=dotted];
m9_3672 -> m9_3673  [key=0, style=solid];
m9_3672 -> m9_11  [key=2, style=dotted];
m9_3672 -> m9_3674  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3673 -> m9_3674  [key=0, style=solid];
m9_3673 -> m9_14  [key=2, style=dotted];
m9_3674 -> m9_3675  [key=0, style=solid];
m9_3674 -> m9_13  [key=2, style=dotted];
m9_3675 -> m9_3669  [key=0, style=bold, color=blue];
m9_1062 -> m9_1063  [key=0, style=solid];
m9_1063 -> m9_1064  [key=0, style=solid];
m9_1063 -> m9_1065  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_1063 -> m9_1066  [key=1, style=dashed, color=darkseagreen4, label=obj];
m9_1064 -> m9_1065  [key=0, style=solid];
m9_1064 -> m9_47  [key=2, style=dotted];
m9_1064 -> m9_1066  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_1065 -> m9_1066  [key=0, style=solid];
m9_1065 -> m9_575  [key=2, style=dotted];
m9_1065 -> m9_1067  [key=1, style=dashed, color=darkseagreen4, label=indented];
m9_1066 -> m9_1067  [key=0, style=solid];
m9_1066 -> m9_49  [key=2, style=dotted];
m9_1067 -> m9_1068  [key=0, style=solid];
m9_1067 -> m9_1069  [key=2, style=dotted];
m9_1068 -> m9_1062  [key=0, style=bold, color=blue];
m9_3586 -> m9_3587  [key=0, style=solid];
m9_3587 -> m9_3588  [key=0, style=solid];
m9_3587 -> m9_3590  [key=2, style=dotted];
m9_3587 -> m9_47  [key=2, style=dotted];
m9_3587 -> m9_1702  [key=2, style=dotted];
m9_3587 -> m9_49  [key=2, style=dotted];
m9_3588 -> m9_3589  [key=0, style=solid];
m9_3588 -> m9_12  [key=2, style=dotted];
m9_3589 -> m9_3586  [key=0, style=bold, color=blue];
m9_2964 -> m9_2965  [key=0, style=solid];
m9_2965 -> m9_2966  [key=0, style=solid];
m9_2965 -> m9_24  [key=2, style=dotted];
m9_2965 -> m9_2967  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2966 -> m9_2964  [key=0, style=bold, color=blue];
m9_2589 -> m9_2590  [key=0, style=solid];
m9_2590 -> m9_2591  [key=0, style=solid];
m9_2590 -> m9_24  [key=2, style=dotted];
m9_2590 -> m9_2592  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2591 -> m9_2589  [key=0, style=bold, color=blue];
m9_1981 -> m9_1982  [key=0, style=solid];
m9_1982 -> m9_1983  [key=0, style=solid];
m9_1982 -> m9_1924  [key=2, style=dotted];
m9_1982 -> m9_1984  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m9_1983 -> m9_1984  [key=0, style=solid];
m9_1983 -> m9_1936  [key=2, style=dotted];
m9_1984 -> m9_1985  [key=0, style=solid];
m9_1984 -> m9_11  [key=2, style=dotted];
m9_1984 -> m9_1986  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1985 -> m9_1986  [key=0, style=solid];
m9_1985 -> m9_14  [key=2, style=dotted];
m9_1986 -> m9_1987  [key=0, style=solid];
m9_1986 -> m9_13  [key=2, style=dotted];
m9_1986 -> m9_1988  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m9_1987 -> m9_1988  [key=0, style=solid];
m9_1987 -> m9_14  [key=2, style=dotted];
m9_1988 -> m9_1989  [key=0, style=solid];
m9_1988 -> m9_14  [key=2, style=dotted];
m9_1989 -> m9_1981  [key=0, style=bold, color=blue];
m9_3862 -> m9_3863  [key=0, style=solid];
m9_3863 -> m9_3864  [key=0, style=solid];
m9_3864 -> m9_3862  [key=0, style=bold, color=blue];
m9_3374 -> m9_3375  [key=0, style=solid];
m9_3375 -> m9_3376  [key=0, style=solid];
m9_3376 -> m9_3374  [key=0, style=bold, color=blue];
m9_2636 -> m9_2637  [key=0, style=solid];
m9_2637 -> m9_2638  [key=0, style=solid];
m9_2637 -> m9_2635  [key=2, style=dotted];
m9_2637 -> m9_2640  [key=1, style=dashed, color=darkseagreen4, label=cc];
m9_2638 -> m9_2639  [key=0, style=solid];
m9_2638 -> m9_2644  [key=2, style=dotted];
m9_2638 -> m9_2640  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2640 -> m9_2641  [key=0, style=solid];
m9_2640 -> m9_751  [key=2, style=dotted];
m9_2639 -> m9_2640  [key=0, style=solid];
m9_2639 -> m9_669  [key=2, style=dotted];
m9_2639 -> m9_2641  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_2641 -> m9_2642  [key=0, style=solid];
m9_2641 -> m9_752  [key=2, style=dotted];
m9_2641 -> m9_2645  [key=2, style=dotted];
m9_2641 -> m9_753  [key=2, style=dotted];
m9_2642 -> m9_2643  [key=0, style=solid];
m9_2642 -> m9_14  [key=2, style=dotted];
m9_2643 -> m9_2636  [key=0, style=bold, color=blue];
m9_2646 -> m9_2647  [key=0, style=solid];
m9_2647 -> m9_2648  [key=0, style=solid];
m9_2647 -> m9_2651  [key=2, style=dotted];
m9_2648 -> m9_2649  [key=0, style=solid];
m9_2648 -> m9_11  [key=2, style=dotted];
m9_2649 -> m9_2650  [key=0, style=solid];
m9_2649 -> m9_14  [key=2, style=dotted];
m9_2650 -> m9_2646  [key=0, style=bold, color=blue];
m9_3777 -> m9_3778  [key=0, style=solid];
m9_3778 -> m9_3779  [key=0, style=solid];
m9_3778 -> m9_374  [key=2, style=dotted];
m9_3778 -> m9_3781  [key=1, style=dashed, color=darkseagreen4, label=culture];
m9_3778 -> m9_3786  [key=1, style=dashed, color=darkseagreen4, label=culture];
m9_3778 -> m9_3791  [key=1, style=dashed, color=darkseagreen4, label=culture];
m9_3779 -> m9_3780  [key=0, style=solid];
m9_3779 -> m9_790  [key=2, style=dotted];
m9_3779 -> m9_3782  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3779 -> m9_3785  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3779 -> m9_3790  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3781 -> m9_3782  [key=0, style=solid];
m9_3781 -> m9_47  [key=2, style=dotted];
m9_3781 -> m9_3784  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_3786 -> m9_3787  [key=0, style=solid];
m9_3786 -> m9_217  [key=2, style=dotted];
m9_3786 -> m9_218  [key=2, style=dotted];
m9_3791 -> m9_3792  [key=0, style=solid];
m9_3791 -> m9_217  [key=2, style=dotted];
m9_3791 -> m9_218  [key=2, style=dotted];
m9_3780 -> m9_3781  [key=0, style=solid];
m9_3780 -> m9_3786  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m9_3780 -> m9_3791  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m9_3782 -> m9_3783  [key=0, style=solid];
m9_3782 -> m9_575  [key=2, style=dotted];
m9_3782 -> m9_3784  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3782 -> m9_3786  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3785 -> m9_3786  [key=0, style=solid];
m9_3785 -> m9_14  [key=2, style=dotted];
m9_3790 -> m9_3791  [key=0, style=solid];
m9_3790 -> m9_14  [key=2, style=dotted];
m9_3784 -> m9_3785  [key=0, style=solid];
m9_3784 -> m9_143  [key=2, style=dotted];
m9_3783 -> m9_3784  [key=0, style=solid];
m9_3783 -> m9_14  [key=2, style=dotted];
m9_3787 -> m9_3788  [key=0, style=solid];
m9_3787 -> m9_3176  [key=2, style=dotted];
m9_3787 -> m9_3789  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3787 -> m9_3790  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3788 -> m9_3789  [key=0, style=solid];
m9_3788 -> m9_14  [key=2, style=dotted];
m9_3789 -> m9_3790  [key=0, style=solid];
m9_3789 -> m9_221  [key=2, style=dotted];
m9_3789 -> m9_14  [key=2, style=dotted];
m9_3792 -> m9_3793  [key=0, style=solid];
m9_3792 -> m9_3176  [key=2, style=dotted];
m9_3792 -> m9_3794  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3792 -> m9_3795  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3793 -> m9_3794  [key=0, style=solid];
m9_3793 -> m9_14  [key=2, style=dotted];
m9_3794 -> m9_3795  [key=0, style=solid];
m9_3794 -> m9_221  [key=2, style=dotted];
m9_3794 -> m9_14  [key=2, style=dotted];
m9_3795 -> m9_3796  [key=0, style=solid];
m9_3795 -> m9_14  [key=2, style=dotted];
m9_3796 -> m9_3777  [key=0, style=bold, color=blue];
m9_3905 -> m9_3906  [key=0, style=solid];
m9_3906 -> m9_3907  [key=0, style=solid];
m9_3906 -> m9_3910  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m9_3907 -> m9_3908  [key=0, style=solid];
m9_3907 -> m9_24  [key=2, style=dotted];
m9_3907 -> m9_3909  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3908 -> m9_3905  [key=0, style=bold, color=blue];
m9_1721 -> m9_1722  [key=0, style=solid];
m9_1722 -> m9_1723  [key=0, style=solid];
m9_1722 -> m9_19  [key=2, style=dotted];
m9_1722 -> m9_1724  [key=1, style=dashed, color=darkseagreen4, label=strings];
m9_1722 -> m9_1725  [key=1, style=dashed, color=darkseagreen4, label=strings];
m9_1722 -> m9_1726  [key=1, style=dashed, color=darkseagreen4, label=strings];
m9_1723 -> m9_1724  [key=0, style=solid];
m9_1723 -> m9_1729  [key=2, style=dotted];
m9_1724 -> m9_1725  [key=0, style=solid];
m9_1724 -> m9_1729  [key=2, style=dotted];
m9_1725 -> m9_1726  [key=0, style=solid];
m9_1725 -> m9_1729  [key=2, style=dotted];
m9_1726 -> m9_1727  [key=0, style=solid];
m9_1726 -> m9_11  [key=2, style=dotted];
m9_1727 -> m9_1728  [key=0, style=solid];
m9_1727 -> m9_14  [key=2, style=dotted];
m9_1728 -> m9_1721  [key=0, style=bold, color=blue];
m9_1730 -> m9_1731  [key=0, style=solid];
m9_1731 -> m9_1732  [key=0, style=solid];
m9_1731 -> m9_1738  [key=2, style=dotted];
m9_1732 -> m9_1733  [key=0, style=solid];
m9_1732 -> m9_170  [key=2, style=dotted];
m9_1732 -> m9_1734  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1733 -> m9_1734  [key=0, style=solid];
m9_1733 -> m9_12  [key=2, style=dotted];
m9_1734 -> m9_1735  [key=0, style=solid];
m9_1734 -> m9_13  [key=2, style=dotted];
m9_1734 -> m9_1736  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_1735 -> m9_1736  [key=0, style=solid];
m9_1735 -> m9_14  [key=2, style=dotted];
m9_1736 -> m9_1737  [key=0, style=solid];
m9_1736 -> m9_14  [key=2, style=dotted];
m9_1737 -> m9_1730  [key=0, style=bold, color=blue];
m9_3007 -> m9_3008  [key=0, style=solid];
m9_3008 -> m9_3009  [key=0, style=solid];
m9_3008 -> m9_3013  [key=2, style=dotted];
m9_3008 -> m9_3014  [key=2, style=dotted];
m9_3008 -> m9_11  [key=2, style=dotted];
m9_3009 -> m9_3010  [key=0, style=solid];
m9_3009 -> m9_14  [key=2, style=dotted];
m9_3010 -> m9_3011  [key=0, style=solid];
m9_3010 -> m9_13  [key=2, style=dotted];
m9_3011 -> m9_3012  [key=0, style=solid];
m9_3011 -> m9_3014  [key=2, style=dotted];
m9_3011 -> m9_14  [key=2, style=dotted];
m9_3012 -> m9_3007  [key=0, style=bold, color=blue];
m9_3223 -> m9_3224  [key=0, style=solid];
m9_3224 -> m9_3225  [key=0, style=solid];
m9_3224 -> m9_3231  [key=2, style=dotted];
m9_3225 -> m9_3226  [key=0, style=solid];
m9_3225 -> m9_13  [key=2, style=dotted];
m9_3225 -> m9_3227  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3225 -> m9_3228  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3225 -> m9_3229  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3226 -> m9_3227  [key=0, style=solid];
m9_3226 -> m9_632  [key=2, style=dotted];
m9_3227 -> m9_3228  [key=0, style=solid];
m9_3227 -> m9_14  [key=2, style=dotted];
m9_3228 -> m9_3229  [key=0, style=solid];
m9_3228 -> m9_14  [key=2, style=dotted];
m9_3229 -> m9_3230  [key=0, style=solid];
m9_3229 -> m9_14  [key=2, style=dotted];
m9_3230 -> m9_3223  [key=0, style=bold, color=blue];
m9_3077 -> m9_3078  [key=0, style=solid];
m9_3078 -> m9_3079  [key=0, style=solid];
m9_3078 -> m9_47  [key=2, style=dotted];
m9_3078 -> m9_143  [key=2, style=dotted];
m9_3078 -> m9_3080  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_3078 -> m9_3081  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_3078 -> m9_3082  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_3079 -> m9_3080  [key=0, style=solid];
m9_3079 -> m9_3089  [key=2, style=dotted];
m9_3079 -> m9_3090  [key=2, style=dotted];
m9_3079 -> m9_14  [key=2, style=dotted];
m9_3080 -> m9_3081  [key=0, style=solid];
m9_3080 -> m9_3091  [key=2, style=dotted];
m9_3080 -> m9_14  [key=2, style=dotted];
m9_3081 -> m9_3082  [key=0, style=solid];
m9_3081 -> m9_14  [key=2, style=dotted];
m9_3082 -> m9_3083  [key=0, style=solid];
m9_3082 -> m9_14  [key=2, style=dotted];
m9_3083 -> m9_3084  [key=0, style=solid];
m9_3083 -> m9_47  [key=2, style=dotted];
m9_3083 -> m9_143  [key=2, style=dotted];
m9_3083 -> m9_3085  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3083 -> m9_3086  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3083 -> m9_3087  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_3084 -> m9_3085  [key=0, style=solid];
m9_3084 -> m9_3089  [key=2, style=dotted];
m9_3084 -> m9_3090  [key=2, style=dotted];
m9_3084 -> m9_14  [key=2, style=dotted];
m9_3085 -> m9_3086  [key=0, style=solid];
m9_3085 -> m9_3091  [key=2, style=dotted];
m9_3085 -> m9_14  [key=2, style=dotted];
m9_3086 -> m9_3087  [key=0, style=solid];
m9_3086 -> m9_14  [key=2, style=dotted];
m9_3087 -> m9_3088  [key=0, style=solid];
m9_3087 -> m9_14  [key=2, style=dotted];
m9_3088 -> m9_3077  [key=0, style=bold, color=blue];
m9_1099 -> m9_1100  [key=0, style=solid];
m9_1100 -> m9_1101  [key=0, style=solid];
m9_1100 -> m9_1106  [key=2, style=dotted];
m9_1100 -> m9_11  [key=2, style=dotted];
m9_1101 -> m9_1102  [key=0, style=solid];
m9_1101 -> m9_14  [key=2, style=dotted];
m9_1102 -> m9_1103  [key=0, style=solid];
m9_1102 -> m9_13  [key=2, style=dotted];
m9_1102 -> m9_1104  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1103 -> m9_1104  [key=0, style=solid];
m9_1103 -> m9_14  [key=2, style=dotted];
m9_1104 -> m9_1105  [key=0, style=solid];
m9_1104 -> m9_14  [key=2, style=dotted];
m9_1105 -> m9_1099  [key=0, style=bold, color=blue];
m9_2718 -> m9_2719  [key=0, style=solid];
m9_2719 -> m9_2720  [key=0, style=solid];
m9_2719 -> m9_2724  [key=2, style=dotted];
m9_2719 -> m9_170  [key=2, style=dotted];
m9_2720 -> m9_2721  [key=0, style=solid];
m9_2720 -> m9_12  [key=2, style=dotted];
m9_2721 -> m9_2722  [key=0, style=solid];
m9_2721 -> m9_2725  [key=2, style=dotted];
m9_2721 -> m9_170  [key=2, style=dotted];
m9_2722 -> m9_2723  [key=0, style=solid];
m9_2722 -> m9_12  [key=2, style=dotted];
m9_2723 -> m9_2718  [key=0, style=bold, color=blue];
m9_2612 -> m9_2613  [key=0, style=solid];
m9_2613 -> m9_2614  [key=0, style=solid];
m9_2614 -> m9_2615  [key=0, style=solid];
m9_2615 -> m9_2612  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_10  [key=2, style=dotted];
m9_1 -> m9_5  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m9_1 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m9_1 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m9_1 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m9_2 -> m9_3  [key=0, style=solid, color=red];
m9_2 -> m9_11  [key=2, style=dotted];
m9_2 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_14  [key=2, style=dotted];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_14  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_14  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_14  [key=2, style=dotted];
m9_8 -> m9_3665  [key=3, color=darkorchid, style=bold, label="Property variable System.Type CreatedType"];
m9_3 -> m9_4  [key=0, style=solid, color=red];
m9_3 -> m9_12  [key=2, style=dotted, color=red];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_13  [key=2, style=dotted];
m9_4 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m9_4 -> m9_7  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m9_4 -> m9_8  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m9_9 -> m9_0  [key=0, style=bold, color=blue];
m9_1676 -> m9_1677  [key=0, style=solid];
m9_1677 -> m9_1678  [key=0, style=solid];
m9_1677 -> m9_1681  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1678 -> m9_1679  [key=0, style=solid];
m9_1678 -> m9_24  [key=2, style=dotted];
m9_1678 -> m9_1680  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1679 -> m9_1676  [key=0, style=bold, color=blue];
m9_144 -> m9_145  [key=0, style=solid];
m9_145 -> m9_146  [key=0, style=solid];
m9_145 -> m9_152  [key=2, style=dotted];
m9_145 -> m9_147  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_153  [key=2, style=dotted];
m9_147 -> m9_148  [key=0, style=solid];
m9_147 -> m9_11  [key=2, style=dotted];
m9_148 -> m9_149  [key=0, style=solid];
m9_148 -> m9_14  [key=2, style=dotted];
m9_149 -> m9_150  [key=0, style=solid];
m9_149 -> m9_13  [key=2, style=dotted];
m9_150 -> m9_151  [key=0, style=solid];
m9_150 -> m9_14  [key=2, style=dotted];
m9_151 -> m9_144  [key=0, style=bold, color=blue];
m9_3255 -> m9_3256  [key=0, style=solid];
m9_3256 -> m9_3257  [key=0, style=solid];
m9_3256 -> m9_46  [key=2, style=dotted];
m9_3256 -> m9_938  [key=2, style=dotted];
m9_3257 -> m9_3258  [key=0, style=solid];
m9_3257 -> m9_170  [key=2, style=dotted];
m9_3257 -> m9_3259  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3258 -> m9_3259  [key=0, style=solid];
m9_3258 -> m9_12  [key=2, style=dotted];
m9_3259 -> m9_3260  [key=0, style=solid];
m9_3259 -> m9_13  [key=2, style=dotted];
m9_3259 -> m9_3261  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_3259 -> m9_3262  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_3260 -> m9_3261  [key=0, style=solid];
m9_3260 -> m9_14  [key=2, style=dotted];
m9_3261 -> m9_3262  [key=0, style=solid];
m9_3261 -> m9_938  [key=2, style=dotted];
m9_3261 -> m9_14  [key=2, style=dotted];
m9_3262 -> m9_3263  [key=0, style=solid];
m9_3262 -> m9_938  [key=2, style=dotted];
m9_3262 -> m9_14  [key=2, style=dotted];
m9_3263 -> m9_3255  [key=0, style=bold, color=blue];
m9_1574 -> m9_1575  [key=0, style=solid];
m9_1575 -> m9_1576  [key=0, style=solid];
m9_1576 -> m9_1577  [key=0, style=solid];
m9_1576 -> m9_13  [key=2, style=dotted];
m9_1576 -> m9_1578  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_1576 -> m9_1579  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_1577 -> m9_1578  [key=0, style=solid];
m9_1577 -> m9_14  [key=2, style=dotted];
m9_1578 -> m9_1579  [key=0, style=solid];
m9_1578 -> m9_14  [key=2, style=dotted];
m9_1579 -> m9_1580  [key=0, style=solid];
m9_1579 -> m9_14  [key=2, style=dotted];
m9_1580 -> m9_1574  [key=0, style=bold, color=blue];
m9_1834 -> m9_1835  [key=0, style=solid];
m9_1835 -> m9_1836  [key=0, style=solid];
m9_1835 -> m9_170  [key=2, style=dotted];
m9_1836 -> m9_1834  [key=0, style=bold, color=blue];
m9_3758 -> m9_3759  [key=0, style=solid];
m9_3759 -> m9_3760  [key=0, style=solid];
m9_3759 -> m9_790  [key=2, style=dotted];
m9_3759 -> m9_3762  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3759 -> m9_3765  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3759 -> m9_3770  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3760 -> m9_3761  [key=0, style=solid];
m9_3760 -> m9_3766  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m9_3760 -> m9_3771  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m9_3762 -> m9_3763  [key=0, style=solid];
m9_3762 -> m9_575  [key=2, style=dotted];
m9_3762 -> m9_3764  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3762 -> m9_3766  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3765 -> m9_3766  [key=0, style=solid];
m9_3765 -> m9_14  [key=2, style=dotted];
m9_3770 -> m9_3771  [key=0, style=solid];
m9_3770 -> m9_14  [key=2, style=dotted];
m9_3761 -> m9_3762  [key=0, style=solid];
m9_3761 -> m9_47  [key=2, style=dotted];
m9_3761 -> m9_3764  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_3766 -> m9_3767  [key=0, style=solid];
m9_3766 -> m9_217  [key=2, style=dotted];
m9_3766 -> m9_218  [key=2, style=dotted];
m9_3771 -> m9_3772  [key=0, style=solid];
m9_3771 -> m9_217  [key=2, style=dotted];
m9_3771 -> m9_218  [key=2, style=dotted];
m9_3764 -> m9_3765  [key=0, style=solid];
m9_3764 -> m9_143  [key=2, style=dotted];
m9_3763 -> m9_3764  [key=0, style=solid];
m9_3763 -> m9_14  [key=2, style=dotted];
m9_3767 -> m9_3768  [key=0, style=solid];
m9_3767 -> m9_3176  [key=2, style=dotted];
m9_3767 -> m9_3769  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3767 -> m9_3770  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3768 -> m9_3769  [key=0, style=solid];
m9_3768 -> m9_14  [key=2, style=dotted];
m9_3769 -> m9_3770  [key=0, style=solid];
m9_3769 -> m9_221  [key=2, style=dotted];
m9_3769 -> m9_14  [key=2, style=dotted];
m9_3772 -> m9_3773  [key=0, style=solid];
m9_3772 -> m9_3176  [key=2, style=dotted];
m9_3772 -> m9_3774  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3772 -> m9_3775  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3773 -> m9_3774  [key=0, style=solid];
m9_3773 -> m9_14  [key=2, style=dotted];
m9_3774 -> m9_3775  [key=0, style=solid];
m9_3774 -> m9_221  [key=2, style=dotted];
m9_3774 -> m9_14  [key=2, style=dotted];
m9_3775 -> m9_3776  [key=0, style=solid];
m9_3775 -> m9_14  [key=2, style=dotted];
m9_3776 -> m9_3758  [key=0, style=bold, color=blue];
m9_2461 -> m9_2462  [key=0, style=solid];
m9_2462 -> m9_2463  [key=0, style=solid];
m9_2463 -> m9_2464  [key=0, style=solid];
m9_2463 -> m9_13  [key=2, style=dotted];
m9_2464 -> m9_2465  [key=0, style=solid];
m9_2464 -> m9_14  [key=2, style=dotted];
m9_2465 -> m9_2461  [key=0, style=bold, color=blue];
m9_3870 -> m9_3871  [key=0, style=solid];
m9_3871 -> m9_3872  [key=0, style=solid];
m9_3871 -> m9_2231  [key=2, style=dotted];
m9_3872 -> m9_3870  [key=0, style=bold, color=blue];
m9_1602 -> m9_1603  [key=0, style=solid];
m9_1603 -> m9_1604  [key=0, style=solid];
m9_1604 -> m9_1605  [key=0, style=solid];
m9_1604 -> m9_13  [key=2, style=dotted];
m9_1605 -> m9_1602  [key=0, style=bold, color=blue];
m9_1124 -> m9_1125  [key=0, style=solid];
m9_1125 -> m9_1126  [key=0, style=solid];
m9_1125 -> m9_1123  [key=2, style=dotted];
m9_1126 -> m9_1127  [key=0, style=solid];
m9_1126 -> m9_1131  [key=2, style=dotted];
m9_1126 -> m9_1132  [key=2, style=dotted];
m9_1126 -> m9_1128  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1127 -> m9_1128  [key=0, style=solid];
m9_1127 -> m9_14  [key=2, style=dotted];
m9_1128 -> m9_1129  [key=0, style=solid];
m9_1128 -> m9_1131  [key=2, style=dotted];
m9_1128 -> m9_83  [key=2, style=dotted];
m9_1129 -> m9_1130  [key=0, style=solid];
m9_1129 -> m9_14  [key=2, style=dotted];
m9_1130 -> m9_1124  [key=0, style=bold, color=blue];
m9_3439 -> m9_3440  [key=0, style=solid];
m9_3440 -> m9_3441  [key=0, style=solid];
m9_3440 -> m9_3446  [key=2, style=dotted];
m9_3441 -> m9_3442  [key=0, style=solid];
m9_3441 -> m9_47  [key=2, style=dotted];
m9_3441 -> m9_3447  [key=2, style=dotted];
m9_3441 -> m9_575  [key=2, style=dotted];
m9_3441 -> m9_3443  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3442 -> m9_3443  [key=0, style=solid];
m9_3442 -> m9_14  [key=2, style=dotted];
m9_3443 -> m9_3444  [key=0, style=solid];
m9_3443 -> m9_47  [key=2, style=dotted];
m9_3443 -> m9_3447  [key=2, style=dotted];
m9_3443 -> m9_143  [key=2, style=dotted];
m9_3444 -> m9_3445  [key=0, style=solid];
m9_3444 -> m9_14  [key=2, style=dotted];
m9_3445 -> m9_3439  [key=0, style=bold, color=blue];
m9_1236 -> m9_1237  [key=0, style=solid];
m9_1237 -> m9_1238  [key=0, style=solid];
m9_1237 -> m9_1249  [key=2, style=dotted];
m9_1237 -> m9_1082  [key=2, style=dotted];
m9_1238 -> m9_1239  [key=0, style=solid];
m9_1238 -> m9_11  [key=2, style=dotted];
m9_1238 -> m9_1240  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1239 -> m9_1240  [key=0, style=solid];
m9_1239 -> m9_14  [key=2, style=dotted];
m9_1240 -> m9_1241  [key=0, style=solid];
m9_1240 -> m9_13  [key=2, style=dotted];
m9_1240 -> m9_1242  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m9_1240 -> m9_1243  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m9_1240 -> m9_1244  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m9_1240 -> m9_1245  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m9_1240 -> m9_1246  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m9_1240 -> m9_1247  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m9_1241 -> m9_1242  [key=0, style=solid];
m9_1241 -> m9_1082  [key=2, style=dotted];
m9_1241 -> m9_14  [key=2, style=dotted];
m9_1242 -> m9_1243  [key=0, style=solid];
m9_1242 -> m9_14  [key=2, style=dotted];
m9_1243 -> m9_1244  [key=0, style=solid];
m9_1243 -> m9_14  [key=2, style=dotted];
m9_1244 -> m9_1245  [key=0, style=solid];
m9_1244 -> m9_14  [key=2, style=dotted];
m9_1245 -> m9_1246  [key=0, style=solid];
m9_1245 -> m9_14  [key=2, style=dotted];
m9_1246 -> m9_1247  [key=0, style=solid];
m9_1246 -> m9_14  [key=2, style=dotted];
m9_1247 -> m9_1248  [key=0, style=solid];
m9_1247 -> m9_14  [key=2, style=dotted];
m9_1248 -> m9_1236  [key=0, style=bold, color=blue];
m9_1715 -> m9_1716  [key=0, style=solid];
m9_1716 -> m9_1717  [key=0, style=solid];
m9_1716 -> m9_24  [key=2, style=dotted];
m9_1716 -> m9_1718  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1717 -> m9_1715  [key=0, style=bold, color=blue];
m9_2737 -> m9_2738  [key=0, style=solid];
m9_2738 -> m9_2739  [key=0, style=solid];
m9_2738 -> m9_2726  [key=2, style=dotted];
m9_2739 -> m9_2740  [key=0, style=solid];
m9_2739 -> m9_170  [key=2, style=dotted];
m9_2739 -> m9_2741  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2740 -> m9_2741  [key=0, style=solid];
m9_2740 -> m9_12  [key=2, style=dotted];
m9_2741 -> m9_2742  [key=0, style=solid];
m9_2741 -> m9_13  [key=2, style=dotted];
m9_2742 -> m9_2743  [key=0, style=solid];
m9_2742 -> m9_2734  [key=2, style=dotted];
m9_2742 -> m9_14  [key=2, style=dotted];
m9_2743 -> m9_2737  [key=0, style=bold, color=blue];
m9_3497 -> m9_3498  [key=0, style=solid];
m9_3498 -> m9_3499  [key=0, style=solid];
m9_3498 -> m9_2808  [key=2, style=dotted];
m9_3498 -> m9_3503  [key=1, style=dashed, color=darkseagreen4, label=sw];
m9_3499 -> m9_3500  [key=0, style=solid];
m9_3499 -> m9_2809  [key=2, style=dotted];
m9_3499 -> m9_3501  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3499 -> m9_3502  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m9_3503 -> m9_3504  [key=0, style=solid];
m9_3503 -> m9_2813  [key=2, style=dotted];
m9_3500 -> m9_3501  [key=0, style=solid];
m9_3500 -> m9_47  [key=2, style=dotted];
m9_3500 -> m9_668  [key=2, style=dotted];
m9_3501 -> m9_3502  [key=0, style=solid];
m9_3501 -> m9_2845  [key=2, style=dotted];
m9_3502 -> m9_3503  [key=0, style=solid];
m9_3502 -> m9_14  [key=2, style=dotted];
m9_3504 -> m9_3505  [key=0, style=solid];
m9_3504 -> m9_12  [key=2, style=dotted];
m9_3505 -> m9_3497  [key=0, style=bold, color=blue];
m9_1662 -> m9_1663  [key=0, style=solid];
m9_1663 -> m9_1664  [key=0, style=solid];
m9_1663 -> m9_1667  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1664 -> m9_1665  [key=0, style=solid];
m9_1664 -> m9_24  [key=2, style=dotted];
m9_1664 -> m9_1666  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1665 -> m9_1662  [key=0, style=bold, color=blue];
m9_583 -> m9_584  [key=0, style=solid];
m9_584 -> m9_585  [key=0, style=solid];
m9_584 -> m9_590  [key=2, style=dotted];
m9_585 -> m9_586  [key=0, style=solid];
m9_585 -> m9_170  [key=2, style=dotted];
m9_586 -> m9_587  [key=0, style=solid];
m9_586 -> m9_13  [key=2, style=dotted];
m9_586 -> m9_588  [key=1, style=dashed, color=darkseagreen4, label=r2];
m9_587 -> m9_588  [key=0, style=solid];
m9_587 -> m9_591  [key=2, style=dotted];
m9_587 -> m9_14  [key=2, style=dotted];
m9_588 -> m9_589  [key=0, style=solid];
m9_588 -> m9_14  [key=2, style=dotted];
m9_589 -> m9_583  [key=0, style=bold, color=blue];
m9_1465 -> m9_1466  [key=0, style=solid];
m9_1466 -> m9_1467  [key=0, style=solid];
m9_1466 -> m9_1477  [key=2, style=dotted];
m9_1466 -> m9_1468  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m9_1466 -> m9_1469  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m9_1466 -> m9_1470  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m9_1467 -> m9_1468  [key=0, style=solid];
m9_1468 -> m9_1469  [key=0, style=solid];
m9_1469 -> m9_1470  [key=0, style=solid];
m9_1470 -> m9_1471  [key=0, style=solid];
m9_1470 -> m9_170  [key=2, style=dotted];
m9_1471 -> m9_1472  [key=0, style=solid];
m9_1471 -> m9_12  [key=2, style=dotted];
m9_1472 -> m9_1473  [key=0, style=solid];
m9_1472 -> m9_13  [key=2, style=dotted];
m9_1472 -> m9_1474  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m9_1472 -> m9_1475  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m9_1473 -> m9_1474  [key=0, style=solid];
m9_1473 -> m9_14  [key=2, style=dotted];
m9_1474 -> m9_1475  [key=0, style=solid];
m9_1474 -> m9_14  [key=2, style=dotted];
m9_1475 -> m9_1476  [key=0, style=solid];
m9_1475 -> m9_14  [key=2, style=dotted];
m9_1476 -> m9_1465  [key=0, style=bold, color=blue];
m9_37 -> m9_38  [key=0, style=solid];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_40  [key=2, style=dotted];
m9_39 -> m9_37  [key=0, style=bold, color=blue];
m9_1351 -> m9_1352  [key=0, style=solid];
m9_1351 -> m9_1359  [key=2, style=dotted];
m9_1351 -> m9_938  [key=2, style=dotted];
m9_1351 -> m9_1353  [key=1, style=dashed, color=darkseagreen4, label=entry];
m9_1351 -> m9_1354  [key=1, style=dashed, color=darkseagreen4, label=entry];
m9_1350 -> m9_1351  [key=0, style=solid];
m9_1352 -> m9_1353  [key=0, style=solid];
m9_1352 -> m9_11  [key=2, style=dotted];
m9_1352 -> m9_1355  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m9_1353 -> m9_1354  [key=0, style=solid];
m9_1353 -> m9_985  [key=2, style=dotted];
m9_1353 -> m9_1132  [key=2, style=dotted];
m9_1353 -> m9_1356  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m9_1354 -> m9_1355  [key=0, style=solid];
m9_1354 -> m9_1180  [key=2, style=dotted];
m9_1354 -> m9_1132  [key=2, style=dotted];
m9_1354 -> m9_1357  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m9_1355 -> m9_1356  [key=0, style=solid];
m9_1355 -> m9_14  [key=2, style=dotted];
m9_1356 -> m9_1357  [key=0, style=solid];
m9_1356 -> m9_14  [key=2, style=dotted];
m9_1357 -> m9_1358  [key=0, style=solid];
m9_1357 -> m9_14  [key=2, style=dotted];
m9_1358 -> m9_1350  [key=0, style=bold, color=blue];
m9_813 -> m9_814  [key=0, style=solid];
m9_814 -> m9_815  [key=0, style=solid];
m9_814 -> m9_826  [key=2, style=dotted];
m9_814 -> m9_816  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m9_814 -> m9_817  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m9_814 -> m9_818  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m9_814 -> m9_820  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m9_815 -> m9_816  [key=0, style=solid];
m9_816 -> m9_817  [key=0, style=solid];
m9_817 -> m9_818  [key=0, style=solid];
m9_818 -> m9_819  [key=0, style=solid];
m9_818 -> m9_11  [key=2, style=dotted];
m9_820 -> m9_821  [key=0, style=solid];
m9_820 -> m9_827  [key=2, style=dotted];
m9_819 -> m9_820  [key=0, style=solid];
m9_819 -> m9_772  [key=2, style=dotted];
m9_819 -> m9_821  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m9_819 -> m9_822  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m9_819 -> m9_823  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m9_819 -> m9_824  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m9_821 -> m9_822  [key=0, style=solid];
m9_821 -> m9_14  [key=2, style=dotted];
m9_822 -> m9_823  [key=0, style=solid];
m9_822 -> m9_14  [key=2, style=dotted];
m9_823 -> m9_824  [key=0, style=solid];
m9_823 -> m9_828  [key=2, style=dotted];
m9_824 -> m9_825  [key=0, style=solid];
m9_824 -> m9_14  [key=2, style=dotted];
m9_825 -> m9_813  [key=0, style=bold, color=blue];
m9_21 -> m9_22  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_24  [key=2, style=dotted];
m9_22 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_23 -> m9_21  [key=0, style=bold, color=blue];
m9_613 -> m9_614  [key=0, style=solid];
m9_614 -> m9_615  [key=0, style=solid];
m9_615 -> m9_616  [key=0, style=solid];
m9_615 -> m9_13  [key=2, style=dotted];
m9_616 -> m9_617  [key=0, style=solid];
m9_616 -> m9_14  [key=2, style=dotted];
m9_617 -> m9_613  [key=0, style=bold, color=blue];
m9_3129 -> m9_3130  [key=0, style=solid];
m9_3129 -> m9_3132  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m9_3130 -> m9_3131  [key=0, style=solid];
m9_3132 -> m9_3133  [key=0, style=solid];
m9_3132 -> m9_3134  [key=2, style=dotted];
m9_3132 -> m9_2194  [key=2, style=dotted];
m9_3132 -> m9_3135  [key=2, style=dotted];
m9_3132 -> m9_3136  [key=2, style=dotted];
m9_3131 -> m9_3132  [key=0, style=solid];
m9_3133 -> m9_3129  [key=0, style=bold, color=blue];
m9_3728 -> m9_3729  [key=0, style=solid];
m9_3729 -> m9_3730  [key=0, style=solid];
m9_3729 -> m9_3691  [key=2, style=dotted];
m9_3730 -> m9_3728  [key=0, style=bold, color=blue];
m9_2378 -> m9_2379  [key=0, style=solid];
m9_2379 -> m9_2380  [key=0, style=solid];
m9_2379 -> m9_2385  [key=2, style=dotted];
m9_2380 -> m9_2381  [key=0, style=solid];
m9_2380 -> m9_170  [key=2, style=dotted];
m9_2380 -> m9_2382  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2381 -> m9_2382  [key=0, style=solid];
m9_2381 -> m9_12  [key=2, style=dotted];
m9_2382 -> m9_2383  [key=0, style=solid];
m9_2382 -> m9_13  [key=2, style=dotted];
m9_2383 -> m9_2384  [key=0, style=solid];
m9_2383 -> m9_14  [key=2, style=dotted];
m9_2383 -> m9_2383  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m9_2384 -> m9_2378  [key=0, style=bold, color=blue];
m9_1387 -> m9_1388  [key=0, style=solid];
m9_1388 -> m9_1389  [key=0, style=solid];
m9_1388 -> m9_1392  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1389 -> m9_1390  [key=0, style=solid];
m9_1389 -> m9_47  [key=2, style=dotted];
m9_1389 -> m9_143  [key=2, style=dotted];
m9_1389 -> m9_1391  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1392 -> m9_1393  [key=0, style=solid];
m9_1392 -> m9_47  [key=2, style=dotted];
m9_1392 -> m9_143  [key=2, style=dotted];
m9_1392 -> m9_1394  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1390 -> m9_1391  [key=0, style=solid];
m9_1390 -> m9_14  [key=2, style=dotted];
m9_1391 -> m9_1392  [key=0, style=solid];
m9_1391 -> m9_14  [key=2, style=dotted];
m9_1393 -> m9_1394  [key=0, style=solid];
m9_1393 -> m9_14  [key=2, style=dotted];
m9_1394 -> m9_1395  [key=0, style=solid];
m9_1394 -> m9_14  [key=2, style=dotted];
m9_1395 -> m9_1387  [key=0, style=bold, color=blue];
m9_2595 -> m9_2596  [key=0, style=solid];
m9_2596 -> m9_2597  [key=0, style=solid];
m9_2596 -> m9_772  [key=2, style=dotted];
m9_2597 -> m9_2598  [key=0, style=solid];
m9_2597 -> m9_191  [key=2, style=dotted];
m9_2598 -> m9_2595  [key=0, style=bold, color=blue];
m9_3308 -> m9_3309  [key=0, style=solid];
m9_3309 -> m9_3310  [key=0, style=solid];
m9_3309 -> m9_3312  [key=2, style=dotted];
m9_3309 -> m9_170  [key=2, style=dotted];
m9_3310 -> m9_3311  [key=0, style=solid];
m9_3310 -> m9_14  [key=2, style=dotted];
m9_3311 -> m9_3308  [key=0, style=bold, color=blue];
m9_2897 -> m9_2898  [key=0, style=solid];
m9_2898 -> m9_2899  [key=0, style=solid];
m9_2898 -> m9_19  [key=2, style=dotted];
m9_2898 -> m9_2901  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2898 -> m9_2902  [key=1, style=dashed, color=darkseagreen4, label=d1];
m9_2899 -> m9_2900  [key=0, style=solid];
m9_2899 -> m9_11  [key=2, style=dotted];
m9_2901 -> m9_2902  [key=0, style=solid];
m9_2901 -> m9_14  [key=2, style=dotted];
m9_2902 -> m9_2903  [key=0, style=solid];
m9_2902 -> m9_14  [key=2, style=dotted];
m9_2900 -> m9_2901  [key=0, style=solid];
m9_2900 -> m9_13  [key=2, style=dotted];
m9_2900 -> m9_2902  [key=1, style=dashed, color=darkseagreen4, label=d2];
m9_2903 -> m9_2897  [key=0, style=bold, color=blue];
m9_3508 -> m9_3509  [key=0, style=solid];
m9_3509 -> m9_3510  [key=0, style=solid];
m9_3509 -> m9_24  [key=2, style=dotted];
m9_3509 -> m9_3511  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3510 -> m9_3508  [key=0, style=bold, color=blue];
m9_3414 -> m9_3415  [key=0, style=solid];
m9_3415 -> m9_3416  [key=0, style=solid];
m9_3416 -> m9_3417  [key=0, style=solid];
m9_3416 -> m9_13  [key=2, style=dotted];
m9_3417 -> m9_3418  [key=0, style=solid];
m9_3418 -> m9_3419  [key=0, style=solid];
m9_3418 -> m9_14  [key=2, style=dotted];
m9_3419 -> m9_3414  [key=0, style=bold, color=blue];
m9_606 -> m9_607  [key=0, style=solid];
m9_607 -> m9_608  [key=0, style=solid];
m9_607 -> m9_612  [key=2, style=dotted];
m9_608 -> m9_609  [key=0, style=solid];
m9_608 -> m9_11  [key=2, style=dotted];
m9_608 -> m9_610  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_609 -> m9_610  [key=0, style=solid];
m9_610 -> m9_611  [key=0, style=solid];
m9_610 -> m9_14  [key=2, style=dotted];
m9_611 -> m9_606  [key=0, style=bold, color=blue];
m9_2403 -> m9_2404  [key=0, style=solid];
m9_2404 -> m9_2405  [key=0, style=solid];
m9_2404 -> m9_2396  [key=2, style=dotted];
m9_2404 -> m9_2397  [key=2, style=dotted];
m9_2404 -> m9_790  [key=2, style=dotted];
m9_2404 -> m9_946  [key=2, style=dotted];
m9_2404 -> m9_47  [key=2, style=dotted];
m9_2404 -> m9_49  [key=2, style=dotted];
m9_2404 -> m9_2406  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m9_2405 -> m9_2406  [key=0, style=solid];
m9_2405 -> m9_14  [key=2, style=dotted];
m9_2406 -> m9_2407  [key=0, style=solid];
m9_2406 -> m9_217  [key=2, style=dotted];
m9_2406 -> m9_218  [key=2, style=dotted];
m9_2406 -> m9_2409  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_2407 -> m9_2408  [key=0, style=solid];
m9_2407 -> m9_219  [key=2, style=dotted];
m9_2407 -> m9_2409  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m9_2409 -> m9_2410  [key=0, style=solid];
m9_2409 -> m9_2398  [key=2, style=dotted];
m9_2409 -> m9_2411  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m9_2408 -> m9_2409  [key=0, style=solid];
m9_2410 -> m9_2411  [key=0, style=solid];
m9_2410 -> m9_946  [key=2, style=dotted];
m9_2410 -> m9_14  [key=2, style=dotted];
m9_2411 -> m9_2412  [key=0, style=solid];
m9_2411 -> m9_790  [key=2, style=dotted];
m9_2411 -> m9_14  [key=2, style=dotted];
m9_2412 -> m9_2403  [key=0, style=bold, color=blue];
m9_539 -> m9_540  [key=0, style=solid];
m9_540 -> m9_541  [key=0, style=solid];
m9_540 -> m9_542  [key=0, style=solid];
m9_541 -> m9_549  [key=0, style=solid];
m9_542 -> m9_543  [key=0, style=solid];
m9_542 -> m9_550  [key=2, style=dotted];
m9_543 -> m9_544  [key=0, style=solid];
m9_543 -> m9_551  [key=2, style=dotted];
m9_544 -> m9_545  [key=0, style=solid];
m9_544 -> m9_552  [key=2, style=dotted];
m9_545 -> m9_546  [key=0, style=solid];
m9_545 -> m9_552  [key=2, style=dotted];
m9_546 -> m9_547  [key=0, style=solid];
m9_546 -> m9_552  [key=2, style=dotted];
m9_547 -> m9_548  [key=0, style=solid];
m9_547 -> m9_552  [key=2, style=dotted];
m9_548 -> m9_549  [key=0, style=solid];
m9_549 -> m9_539  [key=0, style=bold, color=blue];
m9_1228 -> m9_1229  [key=0, style=solid];
m9_1229 -> m9_1230  [key=0, style=solid];
m9_1230 -> m9_1231  [key=0, style=solid];
m9_1230 -> m9_13  [key=2, style=dotted];
m9_1230 -> m9_1232  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m9_1230 -> m9_1233  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m9_1231 -> m9_1232  [key=0, style=solid];
m9_1231 -> m9_14  [key=2, style=dotted];
m9_1232 -> m9_1233  [key=0, style=solid];
m9_1232 -> m9_1235  [key=2, style=dotted];
m9_1232 -> m9_14  [key=2, style=dotted];
m9_1233 -> m9_1234  [key=0, style=solid];
m9_1233 -> m9_14  [key=2, style=dotted];
m9_1234 -> m9_1228  [key=0, style=bold, color=blue];
m9_2121 -> m9_2158  [key=0, style=solid];
m9_2121 -> m9_2159  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2121 -> m9_2160  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2121 -> m9_2161  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2121 -> m9_2162  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2121 -> m9_2163  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2121 -> m9_2164  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2121 -> m9_2165  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2158 -> m9_2159  [key=0, style=solid];
m9_2159 -> m9_2160  [key=0, style=solid];
m9_2160 -> m9_2161  [key=0, style=solid];
m9_2161 -> m9_2162  [key=0, style=solid];
m9_2162 -> m9_2163  [key=0, style=solid];
m9_2163 -> m9_2164  [key=0, style=solid];
m9_2164 -> m9_2165  [key=0, style=solid];
m9_2165 -> m9_2166  [key=0, style=solid];
m9_2166 -> m9_2121  [key=0, style=bold, color=blue];
m9_2325 -> m9_2326  [key=0, style=solid];
m9_2326 -> m9_2327  [key=0, style=solid];
m9_2326 -> m9_170  [key=2, style=dotted];
m9_2327 -> m9_2328  [key=0, style=solid];
m9_2327 -> m9_12  [key=2, style=dotted];
m9_2328 -> m9_2325  [key=0, style=bold, color=blue];
m9_3948 -> m9_3949  [key=0, style=solid];
m9_3949 -> m9_3950  [key=0, style=solid];
m9_3949 -> m9_2231  [key=2, style=dotted];
m9_3950 -> m9_3948  [key=0, style=bold, color=blue];
m9_1107 -> m9_1108  [key=0, style=solid];
m9_1108 -> m9_1109  [key=0, style=solid];
m9_1108 -> m9_1115  [key=2, style=dotted];
m9_1109 -> m9_1110  [key=0, style=solid];
m9_1109 -> m9_11  [key=2, style=dotted];
m9_1110 -> m9_1111  [key=0, style=solid];
m9_1110 -> m9_13  [key=2, style=dotted];
m9_1110 -> m9_1112  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1110 -> m9_1113  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_1111 -> m9_1112  [key=0, style=solid];
m9_1111 -> m9_14  [key=2, style=dotted];
m9_1112 -> m9_1113  [key=0, style=solid];
m9_1112 -> m9_14  [key=2, style=dotted];
m9_1113 -> m9_1114  [key=0, style=solid];
m9_1113 -> m9_14  [key=2, style=dotted];
m9_1114 -> m9_1107  [key=0, style=bold, color=blue];
m9_2361 -> m9_2362  [key=0, style=solid];
m9_2362 -> m9_2363  [key=0, style=solid];
m9_2362 -> m9_2371  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m9_2363 -> m9_2364  [key=0, style=solid];
m9_2363 -> m9_2373  [key=2, style=dotted];
m9_2363 -> m9_2374  [key=2, style=dotted];
m9_2363 -> m9_2365  [key=1, style=dashed, color=darkseagreen4, label=s1];
m9_2371 -> m9_2372  [key=0, style=solid];
m9_2371 -> m9_24  [key=2, style=dotted];
m9_2371 -> m9_2375  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2364 -> m9_2365  [key=0, style=solid];
m9_2364 -> m9_170  [key=2, style=dotted];
m9_2364 -> m9_2366  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2364 -> m9_2371  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2364 -> m9_2376  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2365 -> m9_2366  [key=0, style=solid];
m9_2365 -> m9_2371  [key=0, style=solid];
m9_2366 -> m9_2367  [key=0, style=solid];
m9_2366 -> m9_13  [key=2, style=dotted];
m9_2366 -> m9_2368  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2366 -> m9_2369  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2366 -> m9_2370  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2367 -> m9_2368  [key=0, style=solid];
m9_2367 -> m9_14  [key=2, style=dotted];
m9_2368 -> m9_2369  [key=0, style=solid];
m9_2368 -> m9_14  [key=2, style=dotted];
m9_2369 -> m9_2370  [key=0, style=solid];
m9_2369 -> m9_14  [key=2, style=dotted];
m9_2370 -> m9_2372  [key=0, style=solid];
m9_2370 -> m9_14  [key=2, style=dotted];
m9_2372 -> m9_2361  [key=0, style=bold, color=blue];
m9_1886 -> m9_1887  [key=0, style=solid];
m9_1887 -> m9_1888  [key=0, style=solid];
m9_1887 -> m9_1899  [key=2, style=dotted];
m9_1887 -> m9_1889  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_1887 -> m9_1890  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_1887 -> m9_1891  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_1888 -> m9_1889  [key=0, style=solid];
m9_1888 -> m9_1900  [key=2, style=dotted];
m9_1888 -> m9_1890  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_1889 -> m9_1890  [key=0, style=solid];
m9_1890 -> m9_1891  [key=0, style=solid];
m9_1891 -> m9_1892  [key=0, style=solid];
m9_1891 -> m9_47  [key=2, style=dotted];
m9_1891 -> m9_575  [key=2, style=dotted];
m9_1892 -> m9_1893  [key=0, style=solid];
m9_1892 -> m9_12  [key=2, style=dotted];
m9_1893 -> m9_1894  [key=0, style=solid];
m9_1893 -> m9_13  [key=2, style=dotted];
m9_1893 -> m9_1895  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m9_1893 -> m9_1896  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m9_1893 -> m9_1897  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m9_1894 -> m9_1895  [key=0, style=solid];
m9_1894 -> m9_14  [key=2, style=dotted];
m9_1895 -> m9_1896  [key=0, style=solid];
m9_1895 -> m9_14  [key=2, style=dotted];
m9_1896 -> m9_1897  [key=0, style=solid];
m9_1896 -> m9_14  [key=2, style=dotted];
m9_1897 -> m9_1898  [key=0, style=solid];
m9_1897 -> m9_14  [key=2, style=dotted];
m9_1898 -> m9_1886  [key=0, style=bold, color=blue];
m9_1075 -> m9_1076  [key=0, style=solid];
m9_1076 -> m9_1077  [key=0, style=solid];
m9_1076 -> m9_1082  [key=2, style=dotted];
m9_1076 -> m9_1080  [key=1, style=dashed, color=darkseagreen4, label=guid];
m9_1077 -> m9_1078  [key=0, style=solid];
m9_1077 -> m9_1083  [key=2, style=dotted];
m9_1077 -> m9_11  [key=2, style=dotted];
m9_1077 -> m9_1079  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1080 -> m9_1081  [key=0, style=solid];
m9_1080 -> m9_14  [key=2, style=dotted];
m9_1078 -> m9_1079  [key=0, style=solid];
m9_1078 -> m9_14  [key=2, style=dotted];
m9_1079 -> m9_1080  [key=0, style=solid];
m9_1079 -> m9_13  [key=2, style=dotted];
m9_1081 -> m9_1075  [key=0, style=bold, color=blue];
m9_2491 -> m9_2492  [key=0, style=solid];
m9_2492 -> m9_2493  [key=0, style=solid];
m9_2493 -> m9_2491  [key=0, style=bold, color=blue];
m9_3066 -> m9_3067  [key=0, style=solid];
m9_3067 -> m9_3068  [key=0, style=solid];
m9_3067 -> m9_24  [key=2, style=dotted];
m9_3067 -> m9_3069  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_3068 -> m9_3066  [key=0, style=bold, color=blue];
m9_987 -> m9_988  [key=0, style=solid];
m9_988 -> m9_989  [key=0, style=solid];
m9_988 -> m9_991  [key=2, style=dotted];
m9_988 -> m9_11  [key=2, style=dotted];
m9_989 -> m9_990  [key=0, style=solid];
m9_989 -> m9_14  [key=2, style=dotted];
m9_990 -> m9_987  [key=0, style=bold, color=blue];
m9_2312 -> m9_2313  [key=0, style=solid];
m9_2313 -> m9_2314  [key=0, style=solid];
m9_2313 -> m9_2315  [key=2, style=dotted];
m9_2314 -> m9_2312  [key=0, style=bold, color=blue];
m9_2630 -> m9_2631  [key=0, style=solid];
m9_2631 -> m9_2632  [key=0, style=solid];
m9_2631 -> m9_2635  [key=2, style=dotted];
m9_2632 -> m9_2633  [key=0, style=solid];
m9_2632 -> m9_170  [key=2, style=dotted];
m9_2633 -> m9_2634  [key=0, style=solid];
m9_2633 -> m9_12  [key=2, style=dotted];
m9_2634 -> m9_2630  [key=0, style=bold, color=blue];
m9_1384 -> m9_1385  [key=0, style=solid];
m9_1385 -> m9_1386  [key=0, style=solid];
m9_1386 -> m9_1384  [key=0, style=bold, color=blue];
m9_1041 -> m9_1042  [key=0, style=solid];
m9_1042 -> m9_1043  [key=0, style=solid];
m9_1042 -> m9_1051  [key=2, style=dotted];
m9_1042 -> m9_170  [key=2, style=dotted];
m9_1042 -> m9_1045  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1042 -> m9_1046  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1043 -> m9_1044  [key=0, style=solid];
m9_1045 -> m9_1046  [key=0, style=solid];
m9_1045 -> m9_12  [key=2, style=dotted];
m9_1046 -> m9_1047  [key=0, style=solid];
m9_1046 -> m9_13  [key=2, style=dotted];
m9_1046 -> m9_1048  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1046 -> m9_1049  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1044 -> m9_1045  [key=0, style=solid];
m9_1047 -> m9_1048  [key=0, style=solid];
m9_1047 -> m9_14  [key=2, style=dotted];
m9_1048 -> m9_1049  [key=0, style=solid];
m9_1048 -> m9_14  [key=2, style=dotted];
m9_1049 -> m9_1050  [key=0, style=solid];
m9_1049 -> m9_14  [key=2, style=dotted];
m9_1050 -> m9_1041  [key=0, style=bold, color=blue];
m9_2349 -> m9_2350  [key=0, style=solid];
m9_2350 -> m9_2351  [key=0, style=solid];
m9_2350 -> m9_219  [key=2, style=dotted];
m9_2350 -> m9_2352  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m9_2350 -> m9_2355  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m9_2351 -> m9_2352  [key=0, style=solid];
m9_2351 -> m9_985  [key=2, style=dotted];
m9_2351 -> m9_373  [key=2, style=dotted];
m9_2352 -> m9_2353  [key=0, style=solid];
m9_2355 -> m9_2356  [key=0, style=solid];
m9_2355 -> m9_2360  [key=2, style=dotted];
m9_2355 -> m9_2357  [key=1, style=dashed, color=darkseagreen4, label=z];
m9_2355 -> m9_2358  [key=1, style=dashed, color=darkseagreen4, label=z];
m9_2353 -> m9_2354  [key=0, style=solid];
m9_2354 -> m9_2355  [key=0, style=solid];
m9_2354 -> m9_217  [key=2, style=dotted];
m9_2354 -> m9_218  [key=2, style=dotted];
m9_2356 -> m9_2357  [key=0, style=solid];
m9_2356 -> m9_14  [key=2, style=dotted];
m9_2357 -> m9_2358  [key=0, style=solid];
m9_2357 -> m9_14  [key=2, style=dotted];
m9_2358 -> m9_2359  [key=0, style=solid];
m9_2358 -> m9_14  [key=2, style=dotted];
m9_2359 -> m9_2349  [key=0, style=bold, color=blue];
m9_1529 -> m9_1530  [key=0, style=solid];
m9_1530 -> m9_1531  [key=0, style=solid];
m9_1531 -> m9_1532  [key=0, style=solid];
m9_1531 -> m9_300  [key=2, style=dotted];
m9_1532 -> m9_1533  [key=0, style=solid];
m9_1532 -> m9_605  [key=2, style=dotted];
m9_1532 -> m9_13  [key=2, style=dotted];
m9_1532 -> m9_1534  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_1532 -> m9_1535  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_1532 -> m9_1536  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_1533 -> m9_1534  [key=0, style=solid];
m9_1533 -> m9_632  [key=2, style=dotted];
m9_1534 -> m9_1535  [key=0, style=solid];
m9_1534 -> m9_14  [key=2, style=dotted];
m9_1535 -> m9_1536  [key=0, style=solid];
m9_1535 -> m9_14  [key=2, style=dotted];
m9_1536 -> m9_1537  [key=0, style=solid];
m9_1536 -> m9_14  [key=2, style=dotted];
m9_1537 -> m9_1529  [key=0, style=bold, color=blue];
m9_171 -> m9_172  [key=0, style=solid];
m9_172 -> m9_173  [key=0, style=solid];
m9_172 -> m9_182  [key=2, style=dotted];
m9_172 -> m9_174  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_172 -> m9_175  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_172 -> m9_176  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_173 -> m9_174  [key=0, style=solid];
m9_174 -> m9_175  [key=0, style=solid];
m9_174 -> m9_168  [key=2, style=dotted];
m9_174 -> m9_169  [key=2, style=dotted];
m9_175 -> m9_176  [key=0, style=solid];
m9_176 -> m9_177  [key=0, style=solid];
m9_176 -> m9_170  [key=2, style=dotted];
m9_176 -> m9_178  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_177 -> m9_178  [key=0, style=solid];
m9_177 -> m9_12  [key=2, style=dotted];
m9_178 -> m9_179  [key=0, style=solid];
m9_178 -> m9_13  [key=2, style=dotted];
m9_178 -> m9_180  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_179 -> m9_180  [key=0, style=solid];
m9_179 -> m9_14  [key=2, style=dotted];
m9_180 -> m9_181  [key=0, style=solid];
m9_180 -> m9_14  [key=2, style=dotted];
m9_181 -> m9_171  [key=0, style=bold, color=blue];
m9_2879 -> m9_2880  [key=0, style=solid];
m9_2880 -> m9_2881  [key=0, style=solid];
m9_2881 -> m9_2882  [key=0, style=solid];
m9_2881 -> m9_2889  [key=2, style=dotted];
m9_2881 -> m9_2883  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m9_2882 -> m9_2883  [key=0, style=solid];
m9_2883 -> m9_2884  [key=0, style=solid];
m9_2884 -> m9_2885  [key=0, style=solid];
m9_2885 -> m9_2886  [key=0, style=solid];
m9_2885 -> m9_13  [key=2, style=dotted];
m9_2885 -> m9_2887  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_2886 -> m9_2887  [key=0, style=solid];
m9_2886 -> m9_14  [key=2, style=dotted];
m9_2887 -> m9_2888  [key=0, style=solid];
m9_2887 -> m9_14  [key=2, style=dotted];
m9_2888 -> m9_2879  [key=0, style=bold, color=blue];
m9_1360 -> m9_1361  [key=0, style=solid];
m9_1361 -> m9_1362  [key=0, style=solid];
m9_1361 -> m9_1373  [key=2, style=dotted];
m9_1361 -> m9_1363  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1361 -> m9_1364  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1361 -> m9_1365  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1361 -> m9_1369  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1361 -> m9_1370  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1361 -> m9_1371  [key=1, style=dashed, color=darkseagreen4, label=o];
m9_1362 -> m9_1363  [key=0, style=solid];
m9_1362 -> m9_46  [key=2, style=dotted];
m9_1363 -> m9_1364  [key=0, style=solid];
m9_1363 -> m9_19  [key=2, style=dotted];
m9_1364 -> m9_1365  [key=0, style=solid];
m9_1364 -> m9_19  [key=2, style=dotted];
m9_1365 -> m9_1366  [key=0, style=solid];
m9_1365 -> m9_170  [key=2, style=dotted];
m9_1365 -> m9_1367  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1369 -> m9_1370  [key=0, style=solid];
m9_1369 -> m9_1374  [key=2, style=dotted];
m9_1369 -> m9_14  [key=2, style=dotted];
m9_1370 -> m9_1371  [key=0, style=solid];
m9_1370 -> m9_1374  [key=2, style=dotted];
m9_1370 -> m9_14  [key=2, style=dotted];
m9_1371 -> m9_1372  [key=0, style=solid];
m9_1371 -> m9_1374  [key=2, style=dotted];
m9_1371 -> m9_14  [key=2, style=dotted];
m9_1366 -> m9_1367  [key=0, style=solid];
m9_1366 -> m9_14  [key=2, style=dotted];
m9_1367 -> m9_1368  [key=0, style=solid];
m9_1367 -> m9_13  [key=2, style=dotted];
m9_1367 -> m9_1369  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m9_1367 -> m9_1370  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m9_1367 -> m9_1371  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m9_1368 -> m9_1369  [key=0, style=solid];
m9_1368 -> m9_632  [key=2, style=dotted];
m9_1372 -> m9_1360  [key=0, style=bold, color=blue];
m9_2814 -> m9_2815  [key=0, style=solid];
m9_2815 -> m9_2816  [key=0, style=solid];
m9_2816 -> m9_2817  [key=0, style=solid];
m9_2816 -> m9_1545  [key=2, style=dotted];
m9_2816 -> m9_2819  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_2817 -> m9_2818  [key=0, style=solid];
m9_2817 -> m9_11  [key=2, style=dotted];
m9_2819 -> m9_2820  [key=0, style=solid];
m9_2819 -> m9_14  [key=2, style=dotted];
m9_2818 -> m9_2819  [key=0, style=solid];
m9_2818 -> m9_13  [key=2, style=dotted];
m9_2820 -> m9_2814  [key=0, style=bold, color=blue];
m9_3716 -> m9_3717  [key=0, style=solid];
m9_3717 -> m9_3718  [key=0, style=solid];
m9_3718 -> m9_3716  [key=0, style=bold, color=blue];
m9_1454 -> m9_1455  [key=0, style=solid];
m9_1455 -> m9_1456  [key=0, style=solid];
m9_1455 -> m9_1458  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1456 -> m9_1457  [key=0, style=solid];
m9_1456 -> m9_13  [key=2, style=dotted];
m9_1458 -> m9_1459  [key=0, style=solid];
m9_1458 -> m9_13  [key=2, style=dotted];
m9_1458 -> m9_1460  [key=1, style=dashed, color=darkseagreen4, label=n];
m9_1458 -> m9_1461  [key=1, style=dashed, color=darkseagreen4, label=n];
m9_1458 -> m9_1462  [key=1, style=dashed, color=darkseagreen4, label=n];
m9_1458 -> m9_1463  [key=1, style=dashed, color=darkseagreen4, label=n];
m9_1457 -> m9_1458  [key=0, style=solid];
m9_1457 -> m9_14  [key=2, style=dotted];
m9_1459 -> m9_1460  [key=0, style=solid];
m9_1459 -> m9_1082  [key=2, style=dotted];
m9_1459 -> m9_14  [key=2, style=dotted];
m9_1460 -> m9_1461  [key=0, style=solid];
m9_1460 -> m9_1082  [key=2, style=dotted];
m9_1460 -> m9_14  [key=2, style=dotted];
m9_1461 -> m9_1462  [key=0, style=solid];
m9_1461 -> m9_14  [key=2, style=dotted];
m9_1462 -> m9_1463  [key=0, style=solid];
m9_1462 -> m9_14  [key=2, style=dotted];
m9_1463 -> m9_1464  [key=0, style=solid];
m9_1463 -> m9_14  [key=2, style=dotted];
m9_1464 -> m9_1454  [key=0, style=bold, color=blue];
m9_2513 -> m9_2514  [key=0, style=solid];
m9_2514 -> m9_2515  [key=0, style=solid];
m9_2514 -> m9_2529  [key=2, style=dotted];
m9_2514 -> m9_2516  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m9_2514 -> m9_2520  [key=1, style=dashed, color=darkseagreen4, label=nullableStructPropertyClass];
m9_2515 -> m9_2516  [key=0, style=solid];
m9_2515 -> m9_2530  [key=2, style=dotted];
m9_2516 -> m9_2517  [key=0, style=solid];
m9_2516 -> m9_2530  [key=2, style=dotted];
m9_2520 -> m9_2521  [key=0, style=solid];
m9_2520 -> m9_11  [key=2, style=dotted];
m9_2517 -> m9_2518  [key=0, style=solid];
m9_2517 -> m9_2529  [key=2, style=dotted];
m9_2517 -> m9_2519  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m9_2517 -> m9_2524  [key=1, style=dashed, color=darkseagreen4, label=barWithNull];
m9_2518 -> m9_2519  [key=0, style=solid];
m9_2518 -> m9_2530  [key=2, style=dotted];
m9_2519 -> m9_2520  [key=0, style=solid];
m9_2524 -> m9_2525  [key=0, style=solid];
m9_2524 -> m9_11  [key=2, style=dotted];
m9_2521 -> m9_2522  [key=0, style=solid];
m9_2521 -> m9_2531  [key=2, style=dotted];
m9_2521 -> m9_2523  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_2522 -> m9_2523  [key=0, style=solid];
m9_2522 -> m9_14  [key=2, style=dotted];
m9_2523 -> m9_2524  [key=0, style=solid];
m9_2523 -> m9_14  [key=2, style=dotted];
m9_2525 -> m9_2526  [key=0, style=solid];
m9_2525 -> m9_2531  [key=2, style=dotted];
m9_2525 -> m9_2527  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_2526 -> m9_2527  [key=0, style=solid];
m9_2526 -> m9_14  [key=2, style=dotted];
m9_2527 -> m9_2528  [key=0, style=solid];
m9_2527 -> m9_14  [key=2, style=dotted];
m9_2528 -> m9_2513  [key=0, style=bold, color=blue];
m9_3615 -> m9_3616  [key=0, style=solid];
m9_3616 -> m9_3617  [key=0, style=solid];
m9_3616 -> m9_46  [key=2, style=dotted];
m9_3616 -> m9_3622  [key=2, style=dotted];
m9_3616 -> m9_11  [key=2, style=dotted];
m9_3616 -> m9_3618  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3617 -> m9_3618  [key=0, style=solid];
m9_3617 -> m9_14  [key=2, style=dotted];
m9_3618 -> m9_3619  [key=0, style=solid];
m9_3618 -> m9_13  [key=2, style=dotted];
m9_3618 -> m9_3620  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_3619 -> m9_3620  [key=0, style=solid];
m9_3619 -> m9_3622  [key=2, style=dotted];
m9_3619 -> m9_3623  [key=2, style=dotted];
m9_3619 -> m9_14  [key=2, style=dotted];
m9_3620 -> m9_3621  [key=0, style=solid];
m9_3620 -> m9_3622  [key=2, style=dotted];
m9_3620 -> m9_3623  [key=2, style=dotted];
m9_3620 -> m9_14  [key=2, style=dotted];
m9_3621 -> m9_3615  [key=0, style=bold, color=blue];
m9_1250 -> m9_1251  [key=0, style=solid];
m9_1251 -> m9_1252  [key=0, style=solid];
m9_1252 -> m9_1253  [key=0, style=solid];
m9_1252 -> m9_13  [key=2, style=dotted];
m9_1253 -> m9_1254  [key=0, style=solid];
m9_1253 -> m9_14  [key=2, style=dotted];
m9_1254 -> m9_1250  [key=0, style=bold, color=blue];
m9_3892 -> m9_3893  [key=0, style=solid];
m9_3893 -> m9_3894  [key=0, style=solid];
m9_3894 -> m9_3895  [key=0, style=solid];
m9_3894 -> m9_13  [key=2, style=dotted];
m9_3894 -> m9_3896  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_3895 -> m9_3896  [key=0, style=solid];
m9_3895 -> m9_14  [key=2, style=dotted];
m9_3896 -> m9_3897  [key=0, style=solid];
m9_3896 -> m9_14  [key=2, style=dotted];
m9_3897 -> m9_3892  [key=0, style=bold, color=blue];
m9_2544 -> m9_2545  [key=0, style=solid];
m9_2545 -> m9_2546  [key=0, style=solid];
m9_2545 -> m9_2550  [key=2, style=dotted];
m9_2546 -> m9_2547  [key=0, style=solid];
m9_2546 -> m9_11  [key=2, style=dotted];
m9_2547 -> m9_2548  [key=0, style=solid];
m9_2547 -> m9_47  [key=2, style=dotted];
m9_2547 -> m9_143  [key=2, style=dotted];
m9_2548 -> m9_2549  [key=0, style=solid];
m9_2548 -> m9_14  [key=2, style=dotted];
m9_2549 -> m9_2544  [key=0, style=bold, color=blue];
m9_2209 -> m9_2210  [key=0, style=solid];
m9_2210 -> m9_2211  [key=0, style=solid];
m9_2210 -> m9_2214  [key=2, style=dotted];
m9_2210 -> m9_2215  [key=2, style=dotted];
m9_2210 -> m9_2216  [key=2, style=dotted];
m9_2211 -> m9_2212  [key=0, style=solid];
m9_2211 -> m9_2217  [key=2, style=dotted];
m9_2211 -> m9_2218  [key=2, style=dotted];
m9_2211 -> m9_1132  [key=2, style=dotted];
m9_2212 -> m9_2213  [key=0, style=solid];
m9_2212 -> m9_14  [key=2, style=dotted];
m9_2213 -> m9_2209  [key=0, style=bold, color=blue];
m9_2712 -> m9_2713  [key=0, style=solid];
m9_2713 -> m9_2714  [key=0, style=solid];
m9_2713 -> m9_2231  [key=2, style=dotted];
m9_2714 -> m9_2712  [key=0, style=bold, color=blue];
m9_2798 -> m9_2799  [key=0, style=solid];
m9_2799 -> m9_2800  [key=0, style=solid];
m9_2800 -> m9_2801  [key=0, style=solid];
m9_2800 -> m9_603  [key=2, style=dotted];
m9_2800 -> m9_2803  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2801 -> m9_2802  [key=0, style=solid];
m9_2801 -> m9_2808  [key=2, style=dotted];
m9_2801 -> m9_2805  [key=1, style=dashed, color=darkseagreen4, label=sw];
m9_2803 -> m9_2804  [key=0, style=solid];
m9_2803 -> m9_2810  [key=2, style=dotted];
m9_2803 -> m9_2811  [key=2, style=dotted];
m9_2802 -> m9_2803  [key=0, style=solid];
m9_2802 -> m9_2809  [key=2, style=dotted];
m9_2802 -> m9_2804  [key=1, style=dashed, color=darkseagreen4, label=jw];
m9_2805 -> m9_2806  [key=0, style=solid];
m9_2805 -> m9_2813  [key=2, style=dotted];
m9_2804 -> m9_2805  [key=0, style=solid];
m9_2804 -> m9_2812  [key=2, style=dotted];
m9_2806 -> m9_2807  [key=0, style=solid];
m9_2806 -> m9_14  [key=2, style=dotted];
m9_2807 -> m9_2798  [key=0, style=bold, color=blue];
m9_3965 -> m9_3966  [key=0, style=solid];
m9_3966 -> m9_3965  [key=0, style=bold, color=blue];
m9_2346 -> m9_2347  [key=0, style=solid];
m9_2347 -> m9_2348  [key=0, style=solid];
m9_2348 -> m9_2346  [key=0, style=bold, color=blue];
m9_1478 -> m9_1479  [key=0, style=solid];
m9_1479 -> m9_1478  [key=0, style=bold, color=blue];
m9_1959 -> m9_1960  [key=0, style=solid];
m9_1959 -> m9_1962  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_1960 -> m9_1961  [key=0, style=solid];
m9_1960 -> m9_1962  [key=0, style=solid];
m9_1962 -> m9_1963  [key=0, style=solid];
m9_1962 -> m9_1964  [key=0, style=solid];
m9_1961 -> m9_1964  [key=0, style=solid];
m9_1963 -> m9_1962  [key=0, style=solid];
m9_1963 -> m9_1963  [key=1, style=dashed, color=darkseagreen4, label=entry];
m9_1964 -> m9_1959  [key=0, style=bold, color=blue];
m9_2417 -> m9_2418  [key=0, style=solid];
m9_2418 -> m9_2419  [key=0, style=solid];
m9_2418 -> m9_2421  [key=2, style=dotted];
m9_2418 -> m9_170  [key=2, style=dotted];
m9_2419 -> m9_2420  [key=0, style=solid];
m9_2419 -> m9_12  [key=2, style=dotted];
m9_2420 -> m9_2417  [key=0, style=bold, color=blue];
m9_1006 -> m9_1007  [key=0, style=solid];
m9_1007 -> m9_1008  [key=0, style=solid];
m9_1008 -> m9_1009  [key=0, style=solid];
m9_1008 -> m9_13  [key=2, style=dotted];
m9_1008 -> m9_1010  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1008 -> m9_1011  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1008 -> m9_1012  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1008 -> m9_1013  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1008 -> m9_1014  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m9_1009 -> m9_1010  [key=0, style=solid];
m9_1009 -> m9_14  [key=2, style=dotted];
m9_1010 -> m9_1011  [key=0, style=solid];
m9_1010 -> m9_14  [key=2, style=dotted];
m9_1011 -> m9_1012  [key=0, style=solid];
m9_1011 -> m9_14  [key=2, style=dotted];
m9_1012 -> m9_1013  [key=0, style=solid];
m9_1012 -> m9_14  [key=2, style=dotted];
m9_1013 -> m9_1014  [key=0, style=solid];
m9_1013 -> m9_14  [key=2, style=dotted];
m9_1014 -> m9_1015  [key=0, style=solid];
m9_1014 -> m9_14  [key=2, style=dotted];
m9_1015 -> m9_1006  [key=0, style=bold, color=blue];
m9_854 -> m9_855  [key=0, style=solid];
m9_855 -> m9_856  [key=0, style=solid];
m9_855 -> m9_861  [key=2, style=dotted];
m9_855 -> m9_11  [key=2, style=dotted];
m9_856 -> m9_857  [key=0, style=solid];
m9_856 -> m9_14  [key=2, style=dotted];
m9_857 -> m9_858  [key=0, style=solid];
m9_857 -> m9_13  [key=2, style=dotted];
m9_857 -> m9_859  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_858 -> m9_859  [key=0, style=solid];
m9_858 -> m9_14  [key=2, style=dotted];
m9_859 -> m9_860  [key=0, style=solid];
m9_859 -> m9_14  [key=2, style=dotted];
m9_860 -> m9_854  [key=0, style=bold, color=blue];
m9_131 -> m9_132  [key=0, style=solid];
m9_132 -> m9_133  [key=0, style=solid];
m9_132 -> m9_140  [key=2, style=dotted];
m9_133 -> m9_134  [key=0, style=solid];
m9_133 -> m9_141  [key=2, style=dotted];
m9_133 -> m9_19  [key=2, style=dotted];
m9_133 -> m9_46  [key=2, style=dotted];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_47  [key=2, style=dotted];
m9_134 -> m9_142  [key=2, style=dotted];
m9_134 -> m9_49  [key=2, style=dotted];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_14  [key=2, style=dotted];
m9_136 -> m9_137  [key=0, style=solid];
m9_137 -> m9_138  [key=0, style=solid];
m9_137 -> m9_47  [key=2, style=dotted];
m9_137 -> m9_142  [key=2, style=dotted];
m9_137 -> m9_143  [key=2, style=dotted];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_14  [key=2, style=dotted];
m9_139 -> m9_131  [key=0, style=bold, color=blue];
m9_2329 -> m9_2330  [key=0, style=solid];
m9_2330 -> m9_2331  [key=0, style=solid];
m9_2330 -> m9_772  [key=2, style=dotted];
m9_2330 -> m9_2332  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2330 -> m9_2333  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2330 -> m9_2334  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2331 -> m9_2332  [key=0, style=solid];
m9_2331 -> m9_14  [key=2, style=dotted];
m9_2332 -> m9_2333  [key=0, style=solid];
m9_2332 -> m9_14  [key=2, style=dotted];
m9_2333 -> m9_2334  [key=0, style=solid];
m9_2333 -> m9_14  [key=2, style=dotted];
m9_2334 -> m9_2335  [key=0, style=solid];
m9_2334 -> m9_14  [key=2, style=dotted];
m9_2335 -> m9_2329  [key=0, style=bold, color=blue];
m9_640 -> m9_641  [key=0, style=solid];
m9_641 -> m9_642  [key=0, style=solid];
m9_642 -> m9_643  [key=0, style=solid];
m9_642 -> m9_13  [key=2, style=dotted];
m9_642 -> m9_644  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_642 -> m9_645  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_642 -> m9_646  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_643 -> m9_644  [key=0, style=solid];
m9_643 -> m9_632  [key=2, style=dotted];
m9_644 -> m9_645  [key=0, style=solid];
m9_644 -> m9_14  [key=2, style=dotted];
m9_645 -> m9_646  [key=0, style=solid];
m9_645 -> m9_632  [key=2, style=dotted];
m9_646 -> m9_647  [key=0, style=solid];
m9_646 -> m9_14  [key=2, style=dotted];
m9_647 -> m9_640  [key=0, style=bold, color=blue];
m9_907 -> m9_908  [key=0, style=solid];
m9_908 -> m9_909  [key=0, style=solid];
m9_908 -> m9_910  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_908 -> m9_912  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_908 -> m9_913  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_909 -> m9_910  [key=0, style=solid];
m9_909 -> m9_918  [key=2, style=dotted];
m9_910 -> m9_911  [key=0, style=solid];
m9_910 -> m9_919  [key=2, style=dotted];
m9_910 -> m9_916  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m9_912 -> m9_913  [key=0, style=solid];
m9_912 -> m9_904  [key=2, style=dotted];
m9_912 -> m9_905  [key=2, style=dotted];
m9_912 -> m9_906  [key=2, style=dotted];
m9_912 -> m9_915  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m9_913 -> m9_914  [key=0, style=solid];
m9_913 -> m9_13  [key=2, style=dotted];
m9_913 -> m9_915  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m9_913 -> m9_916  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m9_911 -> m9_912  [key=0, style=solid];
m9_911 -> m9_750  [key=2, style=dotted];
m9_916 -> m9_917  [key=0, style=solid];
m9_916 -> m9_14  [key=2, style=dotted];
m9_915 -> m9_916  [key=0, style=solid];
m9_915 -> m9_14  [key=2, style=dotted];
m9_914 -> m9_915  [key=0, style=solid];
m9_914 -> m9_14  [key=2, style=dotted];
m9_917 -> m9_907  [key=0, style=bold, color=blue];
m9_3722 -> m9_3723  [key=0, style=solid];
m9_3723 -> m9_3724  [key=0, style=solid];
m9_3723 -> m9_3691  [key=2, style=dotted];
m9_3724 -> m9_3722  [key=0, style=bold, color=blue];
m9_889 -> m9_890  [key=0, style=solid];
m9_890 -> m9_891  [key=0, style=solid];
m9_890 -> m9_24  [key=2, style=dotted];
m9_890 -> m9_892  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_891 -> m9_889  [key=0, style=bold, color=blue];
m9_3983 -> m9_3984  [key=0, style=solid];
m9_3984 -> m9_3985  [key=0, style=solid];
m9_3985 -> m9_3986  [key=0, style=solid];
m9_3986 -> m9_3983  [key=0, style=bold, color=blue];
m9_3137 -> m9_3138  [key=0, style=solid];
m9_3138 -> m9_3139  [key=0, style=solid];
m9_3138 -> m9_834  [key=2, style=dotted];
m9_3138 -> m9_3140  [key=2, style=dotted];
m9_3139 -> m9_3137  [key=0, style=bold, color=blue];
m9_707 -> m9_708  [key=0, style=solid];
m9_708 -> m9_709  [key=0, style=solid];
m9_708 -> m9_716  [key=2, style=dotted];
m9_708 -> m9_710  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_708 -> m9_711  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_708 -> m9_712  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_708 -> m9_713  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m9_709 -> m9_710  [key=0, style=solid];
m9_710 -> m9_711  [key=0, style=solid];
m9_711 -> m9_712  [key=0, style=solid];
m9_712 -> m9_713  [key=0, style=solid];
m9_713 -> m9_714  [key=0, style=solid];
m9_713 -> m9_170  [key=2, style=dotted];
m9_714 -> m9_715  [key=0, style=solid];
m9_714 -> m9_12  [key=2, style=dotted];
m9_715 -> m9_707  [key=0, style=bold, color=blue];
m9_3833 -> m9_3834  [key=0, style=solid];
m9_3834 -> m9_3835  [key=0, style=solid];
m9_3834 -> m9_945  [key=2, style=dotted];
m9_3834 -> m9_790  [key=2, style=dotted];
m9_3834 -> m9_3837  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3834 -> m9_3840  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3834 -> m9_3845  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3835 -> m9_3836  [key=0, style=solid];
m9_3835 -> m9_3841  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m9_3837 -> m9_3838  [key=0, style=solid];
m9_3837 -> m9_575  [key=2, style=dotted];
m9_3837 -> m9_3839  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3837 -> m9_3841  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3840 -> m9_3841  [key=0, style=solid];
m9_3840 -> m9_14  [key=2, style=dotted];
m9_3845 -> m9_3846  [key=0, style=solid];
m9_3845 -> m9_14  [key=2, style=dotted];
m9_3836 -> m9_3837  [key=0, style=solid];
m9_3836 -> m9_47  [key=2, style=dotted];
m9_3836 -> m9_3839  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_3841 -> m9_3842  [key=0, style=solid];
m9_3841 -> m9_217  [key=2, style=dotted];
m9_3841 -> m9_218  [key=2, style=dotted];
m9_3839 -> m9_3840  [key=0, style=solid];
m9_3839 -> m9_143  [key=2, style=dotted];
m9_3838 -> m9_3839  [key=0, style=solid];
m9_3838 -> m9_14  [key=2, style=dotted];
m9_3842 -> m9_3843  [key=0, style=solid];
m9_3842 -> m9_3176  [key=2, style=dotted];
m9_3842 -> m9_3844  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3842 -> m9_3845  [key=1, style=dashed, color=darkseagreen4, label=v];
m9_3843 -> m9_3844  [key=0, style=solid];
m9_3843 -> m9_14  [key=2, style=dotted];
m9_3844 -> m9_3845  [key=0, style=solid];
m9_3844 -> m9_221  [key=2, style=dotted];
m9_3844 -> m9_14  [key=2, style=dotted];
m9_3846 -> m9_3833  [key=0, style=bold, color=blue];
m9_2496 -> m9_2497  [key=0, style=solid];
m9_2497 -> m9_2498  [key=0, style=solid];
m9_2498 -> m9_2496  [key=0, style=bold, color=blue];
m9_3531 -> m9_3532  [key=0, style=solid];
m9_3531 -> m9_3533  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
m9_3532 -> m9_3533  [key=0, style=solid];
m9_3533 -> m9_3534  [key=0, style=solid];
m9_3534 -> m9_3531  [key=0, style=bold, color=blue];
m9_3941 -> m9_3942  [key=0, style=solid];
m9_3942 -> m9_3943  [key=0, style=solid];
m9_3942 -> m9_2398  [key=2, style=dotted];
m9_3943 -> m9_3944  [key=0, style=solid];
m9_3943 -> m9_3946  [key=2, style=dotted];
m9_3943 -> m9_904  [key=2, style=dotted];
m9_3943 -> m9_3947  [key=2, style=dotted];
m9_3944 -> m9_3945  [key=0, style=solid];
m9_3945 -> m9_3941  [key=0, style=bold, color=blue];
m9_2786 -> m9_2787  [key=0, style=solid];
m9_2787 -> m9_2788  [key=0, style=solid];
m9_2787 -> m9_2785  [key=2, style=dotted];
m9_2787 -> m9_1082  [key=2, style=dotted];
m9_2787 -> m9_2797  [key=2, style=dotted];
m9_2787 -> m9_946  [key=2, style=dotted];
m9_2787 -> m9_1545  [key=2, style=dotted];
m9_2787 -> m9_2791  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2787 -> m9_2792  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2787 -> m9_2793  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2787 -> m9_2794  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2787 -> m9_2795  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2788 -> m9_2789  [key=0, style=solid];
m9_2788 -> m9_170  [key=2, style=dotted];
m9_2788 -> m9_2790  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2791 -> m9_2792  [key=0, style=solid];
m9_2791 -> m9_14  [key=2, style=dotted];
m9_2792 -> m9_2793  [key=0, style=solid];
m9_2792 -> m9_14  [key=2, style=dotted];
m9_2793 -> m9_2794  [key=0, style=solid];
m9_2793 -> m9_14  [key=2, style=dotted];
m9_2794 -> m9_2795  [key=0, style=solid];
m9_2794 -> m9_14  [key=2, style=dotted];
m9_2795 -> m9_2796  [key=0, style=solid];
m9_2795 -> m9_14  [key=2, style=dotted];
m9_2789 -> m9_2790  [key=0, style=solid];
m9_2789 -> m9_12  [key=2, style=dotted];
m9_2790 -> m9_2791  [key=0, style=solid];
m9_2790 -> m9_13  [key=2, style=dotted];
m9_2790 -> m9_2792  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2790 -> m9_2793  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2790 -> m9_2794  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2790 -> m9_2795  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2796 -> m9_2786  [key=0, style=bold, color=blue];
m9_2167 -> m9_2168  [key=0, style=solid];
m9_2168 -> m9_2167  [key=0, style=bold, color=blue];
m9_2292 -> m9_2293  [key=0, style=solid];
m9_2292 -> m9_2294  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_2293 -> m9_2294  [key=0, style=solid];
m9_2294 -> m9_2295  [key=0, style=solid];
m9_2295 -> m9_2292  [key=0, style=bold, color=blue];
m9_76 -> m9_77  [key=0, style=solid];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_13  [key=2, style=dotted];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_14  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_82  [key=2, style=dotted];
m9_79 -> m9_83  [key=2, style=dotted];
m9_80 -> m9_81  [key=0, style=solid];
m9_80 -> m9_14  [key=2, style=dotted];
m9_81 -> m9_76  [key=0, style=bold, color=blue];
m9_2700 -> m9_2701  [key=0, style=solid];
m9_2701 -> m9_2702  [key=0, style=solid];
m9_2701 -> m9_2231  [key=2, style=dotted];
m9_2702 -> m9_2700  [key=0, style=bold, color=blue];
m9_2668 -> m9_2669  [key=0, style=solid];
m9_2669 -> m9_2670  [key=0, style=solid];
m9_2669 -> m9_2664  [key=2, style=dotted];
m9_2669 -> m9_2671  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2669 -> m9_2672  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2669 -> m9_2675  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2669 -> m9_2676  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_2670 -> m9_2671  [key=0, style=solid];
m9_2670 -> m9_169  [key=2, style=dotted];
m9_2671 -> m9_2672  [key=0, style=solid];
m9_2671 -> m9_169  [key=2, style=dotted];
m9_2672 -> m9_2673  [key=0, style=solid];
m9_2672 -> m9_170  [key=2, style=dotted];
m9_2672 -> m9_2674  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2675 -> m9_2676  [key=0, style=solid];
m9_2675 -> m9_14  [key=2, style=dotted];
m9_2676 -> m9_2677  [key=0, style=solid];
m9_2676 -> m9_14  [key=2, style=dotted];
m9_2673 -> m9_2674  [key=0, style=solid];
m9_2673 -> m9_12  [key=2, style=dotted];
m9_2674 -> m9_2675  [key=0, style=solid];
m9_2674 -> m9_13  [key=2, style=dotted];
m9_2674 -> m9_2676  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2674 -> m9_2677  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2674 -> m9_2678  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_2677 -> m9_2678  [key=0, style=solid];
m9_2677 -> m9_14  [key=2, style=dotted];
m9_2678 -> m9_2679  [key=0, style=solid];
m9_2678 -> m9_14  [key=2, style=dotted];
m9_2679 -> m9_2668  [key=0, style=bold, color=blue];
m9_1497 -> m9_1498  [key=0, style=solid];
m9_1498 -> m9_1499  [key=0, style=solid];
m9_1499 -> m9_1500  [key=0, style=solid];
m9_1499 -> m9_47  [key=2, style=dotted];
m9_1499 -> m9_143  [key=2, style=dotted];
m9_1499 -> m9_1501  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1499 -> m9_1502  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1500 -> m9_1501  [key=0, style=solid];
m9_1500 -> m9_14  [key=2, style=dotted];
m9_1501 -> m9_1502  [key=0, style=solid];
m9_1501 -> m9_14  [key=2, style=dotted];
m9_1502 -> m9_1503  [key=0, style=solid];
m9_1502 -> m9_14  [key=2, style=dotted];
m9_1503 -> m9_1497  [key=0, style=bold, color=blue];
m9_1593 -> m9_1594  [key=0, style=solid];
m9_1594 -> m9_1595  [key=0, style=solid];
m9_1595 -> m9_1596  [key=0, style=solid];
m9_1595 -> m9_13  [key=2, style=dotted];
m9_1596 -> m9_1597  [key=0, style=solid];
m9_1596 -> m9_1601  [key=2, style=dotted];
m9_1596 -> m9_1598  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_1596 -> m9_1599  [key=1, style=dashed, color=darkseagreen4, label=a];
m9_1597 -> m9_1598  [key=0, style=solid];
m9_1597 -> m9_14  [key=2, style=dotted];
m9_1598 -> m9_1599  [key=0, style=solid];
m9_1598 -> m9_14  [key=2, style=dotted];
m9_1599 -> m9_1600  [key=0, style=solid];
m9_1599 -> m9_14  [key=2, style=dotted];
m9_1600 -> m9_1593  [key=0, style=bold, color=blue];
m9_3606 -> m9_3607  [key=0, style=solid];
m9_3607 -> m9_3608  [key=0, style=solid];
m9_3607 -> m9_574  [key=2, style=dotted];
m9_3607 -> m9_1082  [key=2, style=dotted];
m9_3607 -> m9_3609  [key=1, style=dashed, color=darkseagreen4, label=john];
m9_3607 -> m9_3610  [key=1, style=dashed, color=darkseagreen4, label=john];
m9_3607 -> m9_3611  [key=1, style=dashed, color=darkseagreen4, label=john];
m9_3608 -> m9_3609  [key=0, style=solid];
m9_3608 -> m9_574  [key=2, style=dotted];
m9_3608 -> m9_1082  [key=2, style=dotted];
m9_3608 -> m9_3610  [key=1, style=dashed, color=darkseagreen4, label=jane];
m9_3608 -> m9_3611  [key=1, style=dashed, color=darkseagreen4, label=jane];
m9_3609 -> m9_3610  [key=0, style=solid];
m9_3610 -> m9_3611  [key=0, style=solid];
m9_3611 -> m9_3612  [key=0, style=solid];
m9_3611 -> m9_19  [key=2, style=dotted];
m9_3612 -> m9_3613  [key=0, style=solid];
m9_3612 -> m9_47  [key=2, style=dotted];
m9_3612 -> m9_376  [key=2, style=dotted];
m9_3612 -> m9_575  [key=2, style=dotted];
m9_3613 -> m9_3614  [key=0, style=solid];
m9_3613 -> m9_12  [key=2, style=dotted];
m9_3614 -> m9_3606  [key=0, style=bold, color=blue];
m9_1905 -> m9_1906  [key=0, style=solid];
m9_1906 -> m9_1907  [key=0, style=solid];
m9_1907 -> m9_1908  [key=0, style=solid];
m9_1907 -> m9_13  [key=2, style=dotted];
m9_1908 -> m9_1909  [key=0, style=solid];
m9_1908 -> m9_14  [key=2, style=dotted];
m9_1909 -> m9_1905  [key=0, style=bold, color=blue];
m9_1684 -> m9_1685  [key=0, style=solid];
m9_1685 -> m9_1686  [key=0, style=solid];
m9_1685 -> m9_1689  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1686 -> m9_1687  [key=0, style=solid];
m9_1686 -> m9_24  [key=2, style=dotted];
m9_1686 -> m9_1688  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1687 -> m9_1684  [key=0, style=bold, color=blue];
m9_3898 -> m9_3899  [key=0, style=solid];
m9_3899 -> m9_3900  [key=0, style=solid];
m9_3899 -> m9_3904  [key=2, style=dotted];
m9_3900 -> m9_3901  [key=0, style=solid];
m9_3900 -> m9_11  [key=2, style=dotted];
m9_3901 -> m9_3902  [key=0, style=solid];
m9_3901 -> m9_13  [key=2, style=dotted];
m9_3902 -> m9_3903  [key=0, style=solid];
m9_3902 -> m9_14  [key=2, style=dotted];
m9_3903 -> m9_3898  [key=0, style=bold, color=blue];
m9_3692 -> m9_3693  [key=0, style=solid];
m9_3693 -> m9_3694  [key=0, style=solid];
m9_3693 -> m9_3691  [key=2, style=dotted];
m9_3694 -> m9_3692  [key=0, style=bold, color=blue];
m9_1910 -> m9_1911  [key=0, style=solid];
m9_1911 -> m9_1912  [key=0, style=solid];
m9_1911 -> m9_1921  [key=2, style=dotted];
m9_1911 -> m9_1913  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1911 -> m9_1914  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1911 -> m9_1917  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_1912 -> m9_1913  [key=0, style=solid];
m9_1912 -> m9_1922  [key=2, style=dotted];
m9_1913 -> m9_1914  [key=0, style=solid];
m9_1913 -> m9_1082  [key=2, style=dotted];
m9_1914 -> m9_1915  [key=0, style=solid];
m9_1914 -> m9_1923  [key=2, style=dotted];
m9_1917 -> m9_1918  [key=0, style=solid];
m9_1917 -> m9_751  [key=2, style=dotted];
m9_1915 -> m9_1916  [key=0, style=solid];
m9_1915 -> m9_669  [key=2, style=dotted];
m9_1915 -> m9_1917  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_1915 -> m9_1918  [key=1, style=dashed, color=darkseagreen4, label=ms];
m9_1916 -> m9_1917  [key=0, style=solid];
m9_1916 -> m9_750  [key=2, style=dotted];
m9_1918 -> m9_1919  [key=0, style=solid];
m9_1918 -> m9_752  [key=2, style=dotted];
m9_1919 -> m9_1920  [key=0, style=solid];
m9_1919 -> m9_753  [key=2, style=dotted];
m9_1920 -> m9_1910  [key=0, style=bold, color=blue];
m9_3579 -> m9_3580  [key=0, style=solid];
m9_3580 -> m9_3581  [key=0, style=solid];
m9_3580 -> m9_217  [key=2, style=dotted];
m9_3580 -> m9_218  [key=2, style=dotted];
m9_3580 -> m9_3583  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_3581 -> m9_3582  [key=0, style=solid];
m9_3581 -> m9_47  [key=2, style=dotted];
m9_3583 -> m9_3584  [key=0, style=solid];
m9_3583 -> m9_2398  [key=2, style=dotted];
m9_3582 -> m9_3583  [key=0, style=solid];
m9_3582 -> m9_668  [key=2, style=dotted];
m9_3584 -> m9_3585  [key=0, style=solid];
m9_3584 -> m9_14  [key=2, style=dotted];
m9_3585 -> m9_3579  [key=0, style=bold, color=blue];
m9_829 -> m9_830  [key=0, style=solid];
m9_830 -> m9_831  [key=0, style=solid];
m9_831 -> m9_832  [key=0, style=solid];
m9_831 -> m9_772  [key=2, style=dotted];
m9_832 -> m9_833  [key=0, style=solid];
m9_832 -> m9_834  [key=2, style=dotted];
m9_832 -> m9_14  [key=2, style=dotted];
m9_833 -> m9_829  [key=0, style=bold, color=blue];
m9_1765 -> m9_1766  [key=0, style=solid];
m9_1766 -> m9_1767  [key=0, style=solid];
m9_1766 -> m9_46  [key=2, style=dotted];
m9_1766 -> m9_1768  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1766 -> m9_1769  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m9_1767 -> m9_1768  [key=0, style=solid];
m9_1767 -> m9_1082  [key=2, style=dotted];
m9_1767 -> m9_667  [key=2, style=dotted];
m9_1768 -> m9_1769  [key=0, style=solid];
m9_1768 -> m9_1082  [key=2, style=dotted];
m9_1768 -> m9_667  [key=2, style=dotted];
m9_1769 -> m9_1770  [key=0, style=solid];
m9_1769 -> m9_170  [key=2, style=dotted];
m9_1770 -> m9_1771  [key=0, style=solid];
m9_1770 -> m9_12  [key=2, style=dotted];
m9_1771 -> m9_1765  [key=0, style=bold, color=blue];
m9_2449 -> m9_2450  [key=0, style=solid];
m9_2450 -> m9_2451  [key=0, style=solid];
m9_2450 -> m9_13  [key=2, style=dotted];
m9_2451 -> m9_2452  [key=0, style=solid];
m9_2451 -> m9_14  [key=2, style=dotted];
m9_2452 -> m9_2449  [key=0, style=bold, color=blue];
m9_3797 -> m9_3798  [key=0, style=solid];
m9_3798 -> m9_3799  [key=0, style=solid];
m9_3798 -> m9_790  [key=2, style=dotted];
m9_3798 -> m9_3801  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3798 -> m9_3804  [key=1, style=dashed, color=darkseagreen4, label=dt];
m9_3799 -> m9_3800  [key=0, style=solid];
m9_3801 -> m9_3802  [key=0, style=solid];
m9_3801 -> m9_46  [key=2, style=dotted];
m9_3801 -> m9_575  [key=2, style=dotted];
m9_3801 -> m9_3803  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3804 -> m9_3805  [key=0, style=solid];
m9_3804 -> m9_1518  [key=2, style=dotted];
m9_3804 -> m9_14  [key=2, style=dotted];
m9_3800 -> m9_3801  [key=0, style=solid];
m9_3800 -> m9_47  [key=2, style=dotted];
m9_3800 -> m9_3803  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_3803 -> m9_3804  [key=0, style=solid];
m9_3803 -> m9_143  [key=2, style=dotted];
m9_3802 -> m9_3803  [key=0, style=solid];
m9_3802 -> m9_12  [key=2, style=dotted];
m9_3805 -> m9_3797  [key=0, style=bold, color=blue];
m9_1396 -> m9_1397  [key=0, style=solid];
m9_1397 -> m9_1398  [key=0, style=solid];
m9_1398 -> m9_1396  [key=0, style=bold, color=blue];
m9_2336 -> m9_2337  [key=0, style=solid];
m9_2337 -> m9_2338  [key=0, style=solid];
m9_2337 -> m9_157  [key=2, style=dotted];
m9_2337 -> m9_170  [key=2, style=dotted];
m9_2337 -> m9_2339  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m9_2338 -> m9_2339  [key=0, style=solid];
m9_2338 -> m9_12  [key=2, style=dotted];
m9_2339 -> m9_2340  [key=0, style=solid];
m9_2339 -> m9_13  [key=2, style=dotted];
m9_2339 -> m9_2341  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2339 -> m9_2342  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2339 -> m9_2343  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_2340 -> m9_2341  [key=0, style=solid];
m9_2340 -> m9_14  [key=2, style=dotted];
m9_2341 -> m9_2342  [key=0, style=solid];
m9_2341 -> m9_2345  [key=2, style=dotted];
m9_2341 -> m9_302  [key=2, style=dotted];
m9_2342 -> m9_2343  [key=0, style=solid];
m9_2342 -> m9_2345  [key=2, style=dotted];
m9_2342 -> m9_302  [key=2, style=dotted];
m9_2343 -> m9_2344  [key=0, style=solid];
m9_2343 -> m9_2345  [key=2, style=dotted];
m9_2343 -> m9_302  [key=2, style=dotted];
m9_2344 -> m9_2336  [key=0, style=bold, color=blue];
m9_1538 -> m9_1539  [key=0, style=solid];
m9_1539 -> m9_1540  [key=0, style=solid];
m9_1539 -> m9_1545  [key=2, style=dotted];
m9_1539 -> m9_1541  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_1539 -> m9_1543  [key=1, style=dashed, color=darkseagreen4, label=uri];
m9_1540 -> m9_1541  [key=0, style=solid];
m9_1540 -> m9_11  [key=2, style=dotted];
m9_1540 -> m9_1542  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1541 -> m9_1542  [key=0, style=solid];
m9_1541 -> m9_1546  [key=2, style=dotted];
m9_1541 -> m9_14  [key=2, style=dotted];
m9_1543 -> m9_1544  [key=0, style=solid];
m9_1543 -> m9_14  [key=2, style=dotted];
m9_1542 -> m9_1543  [key=0, style=solid];
m9_1542 -> m9_13  [key=2, style=dotted];
m9_1544 -> m9_1538  [key=0, style=bold, color=blue];
m9_2248 -> m9_2249  [key=0, style=solid];
m9_2249 -> m9_2250  [key=0, style=solid];
m9_2249 -> m9_46  [key=2, style=dotted];
m9_2249 -> m9_2251  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_2249 -> m9_2255  [key=1, style=dashed, color=darkseagreen4, label=reference];
m9_2250 -> m9_2251  [key=0, style=solid];
m9_2250 -> m9_667  [key=2, style=dotted];
m9_2251 -> m9_2252  [key=0, style=solid];
m9_2251 -> m9_667  [key=2, style=dotted];
m9_2255 -> m9_2256  [key=0, style=solid];
m9_2255 -> m9_667  [key=2, style=dotted];
m9_2252 -> m9_2253  [key=0, style=solid];
m9_2252 -> m9_46  [key=2, style=dotted];
m9_2252 -> m9_2254  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_2252 -> m9_2255  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_2252 -> m9_2256  [key=1, style=dashed, color=darkseagreen4, label=child];
m9_2253 -> m9_2254  [key=0, style=solid];
m9_2253 -> m9_667  [key=2, style=dotted];
m9_2254 -> m9_2255  [key=0, style=solid];
m9_2254 -> m9_667  [key=2, style=dotted];
m9_2256 -> m9_2257  [key=0, style=solid];
m9_2256 -> m9_170  [key=2, style=dotted];
m9_2256 -> m9_2260  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2257 -> m9_2258  [key=0, style=solid];
m9_2257 -> m9_24  [key=2, style=dotted];
m9_2257 -> m9_2259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2258 -> m9_2248  [key=0, style=bold, color=blue];
m9_34 -> m9_35  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_36 -> m9_34  [key=0, style=bold, color=blue];
m9_3232 -> m9_3233  [key=0, style=solid];
m9_3233 -> m9_3234  [key=0, style=solid];
m9_3233 -> m9_3231  [key=2, style=dotted];
m9_3234 -> m9_3235  [key=0, style=solid];
m9_3234 -> m9_11  [key=2, style=dotted];
m9_3235 -> m9_3236  [key=0, style=solid];
m9_3235 -> m9_14  [key=2, style=dotted];
m9_3236 -> m9_3232  [key=0, style=bold, color=blue];
m9_2922 -> m9_2923  [key=0, style=solid];
m9_2923 -> m9_2924  [key=0, style=solid];
m9_2923 -> m9_2927  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2924 -> m9_2925  [key=0, style=solid];
m9_2924 -> m9_24  [key=2, style=dotted];
m9_2924 -> m9_2926  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2925 -> m9_2922  [key=0, style=bold, color=blue];
m9_3698 -> m9_3699  [key=0, style=solid];
m9_3699 -> m9_3700  [key=0, style=solid];
m9_3699 -> m9_3691  [key=2, style=dotted];
m9_3700 -> m9_3698  [key=0, style=bold, color=blue];
m9_3570 -> m9_3571  [key=0, style=solid];
m9_3571 -> m9_3572  [key=0, style=solid];
m9_3571 -> m9_3578  [key=2, style=dotted];
m9_3571 -> m9_3574  [key=1, style=dashed, color=darkseagreen4, label=s1];
m9_3571 -> m9_3575  [key=1, style=dashed, color=darkseagreen4, label=s1];
m9_3572 -> m9_3573  [key=0, style=solid];
m9_3572 -> m9_11  [key=2, style=dotted];
m9_3574 -> m9_3575  [key=0, style=solid];
m9_3574 -> m9_14  [key=2, style=dotted];
m9_3575 -> m9_3576  [key=0, style=solid];
m9_3575 -> m9_3577  [key=0, style=solid];
m9_3573 -> m9_3574  [key=0, style=solid];
m9_3573 -> m9_13  [key=2, style=dotted];
m9_3573 -> m9_3576  [key=1, style=dashed, color=darkseagreen4, label=s2];
m9_3576 -> m9_3575  [key=0, style=solid];
m9_3576 -> m9_1946  [key=2, style=dotted];
m9_3576 -> m9_302  [key=2, style=dotted];
m9_3577 -> m9_3570  [key=0, style=bold, color=blue];
m9_862 -> m9_863  [key=0, style=solid];
m9_863 -> m9_864  [key=0, style=solid];
m9_864 -> m9_865  [key=0, style=solid];
m9_864 -> m9_298  [key=2, style=dotted];
m9_865 -> m9_866  [key=0, style=solid];
m9_866 -> m9_867  [key=0, style=solid];
m9_866 -> m9_866  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_867 -> m9_862  [key=0, style=bold, color=blue];
m9_2232 -> m9_2233  [key=0, style=solid];
m9_2233 -> m9_2234  [key=0, style=solid];
m9_2234 -> m9_2232  [key=0, style=bold, color=blue];
m9_3719 -> m9_3720  [key=0, style=solid];
m9_3720 -> m9_3721  [key=0, style=solid];
m9_3720 -> m9_3691  [key=2, style=dotted];
m9_3721 -> m9_3719  [key=0, style=bold, color=blue];
m9_1849 -> m9_1850  [key=0, style=solid];
m9_1850 -> m9_1851  [key=0, style=solid];
m9_1850 -> m9_13  [key=2, style=dotted];
m9_1851 -> m9_1852  [key=0, style=solid];
m9_1851 -> m9_1235  [key=2, style=dotted];
m9_1851 -> m9_14  [key=2, style=dotted];
m9_1852 -> m9_1853  [key=0, style=solid];
m9_1852 -> m9_13  [key=2, style=dotted];
m9_1853 -> m9_1854  [key=0, style=solid];
m9_1853 -> m9_1235  [key=2, style=dotted];
m9_1853 -> m9_14  [key=2, style=dotted];
m9_1854 -> m9_1849  [key=0, style=bold, color=blue];
m9_3555 -> m9_3556  [key=0, style=solid];
m9_3556 -> m9_3557  [key=0, style=solid];
m9_3556 -> m9_46  [key=2, style=dotted];
m9_3556 -> m9_938  [key=2, style=dotted];
m9_3556 -> m9_222  [key=2, style=dotted];
m9_3556 -> m9_946  [key=2, style=dotted];
m9_3556 -> m9_3558  [key=1, style=dashed, color=darkseagreen4, label=dates];
m9_3557 -> m9_3558  [key=0, style=solid];
m9_3557 -> m9_170  [key=2, style=dotted];
m9_3557 -> m9_3559  [key=1, style=dashed, color=darkseagreen4, label=expected];
m9_3558 -> m9_3559  [key=0, style=solid];
m9_3558 -> m9_47  [key=2, style=dotted];
m9_3558 -> m9_49  [key=2, style=dotted];
m9_3559 -> m9_3560  [key=0, style=solid];
m9_3559 -> m9_14  [key=2, style=dotted];
m9_3560 -> m9_3555  [key=0, style=bold, color=blue];
m9_3246 -> m9_3247  [key=0, style=solid];
m9_3247 -> m9_3248  [key=0, style=solid];
m9_3247 -> m9_46  [key=2, style=dotted];
m9_3247 -> m9_222  [key=2, style=dotted];
m9_3248 -> m9_3249  [key=0, style=solid];
m9_3248 -> m9_47  [key=2, style=dotted];
m9_3248 -> m9_49  [key=2, style=dotted];
m9_3248 -> m9_3250  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_3249 -> m9_3250  [key=0, style=solid];
m9_3249 -> m9_12  [key=2, style=dotted];
m9_3250 -> m9_3251  [key=0, style=solid];
m9_3250 -> m9_13  [key=2, style=dotted];
m9_3250 -> m9_3252  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_3250 -> m9_3253  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m9_3251 -> m9_3252  [key=0, style=solid];
m9_3251 -> m9_14  [key=2, style=dotted];
m9_3252 -> m9_3253  [key=0, style=solid];
m9_3252 -> m9_222  [key=2, style=dotted];
m9_3252 -> m9_14  [key=2, style=dotted];
m9_3253 -> m9_3254  [key=0, style=solid];
m9_3253 -> m9_222  [key=2, style=dotted];
m9_3253 -> m9_14  [key=2, style=dotted];
m9_3254 -> m9_3246  [key=0, style=bold, color=blue];
m9_3144 -> m9_3145  [key=0, style=solid];
m9_3145 -> m9_3146  [key=0, style=solid];
m9_3145 -> m9_19  [key=2, style=dotted];
m9_3145 -> m9_3152  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_3145 -> m9_3153  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_3145 -> m9_3154  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_3145 -> m9_3155  [key=1, style=dashed, color=darkseagreen4, label=values];
m9_3146 -> m9_3147  [key=0, style=solid];
m9_3146 -> m9_217  [key=2, style=dotted];
m9_3146 -> m9_218  [key=2, style=dotted];
m9_3146 -> m9_3149  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_3146 -> m9_3151  [key=1, style=dashed, color=darkseagreen4, label=reader];
m9_3152 -> m9_3148  [key=0, style=solid];
m9_3152 -> m9_169  [key=2, style=dotted];
m9_3153 -> m9_3154  [key=0, style=solid];
m9_3153 -> m9_14  [key=2, style=dotted];
m9_3154 -> m9_3155  [key=0, style=solid];
m9_3154 -> m9_14  [key=2, style=dotted];
m9_3155 -> m9_3156  [key=0, style=solid];
m9_3155 -> m9_14  [key=2, style=dotted];
m9_3147 -> m9_3148  [key=0, style=solid];
m9_3149 -> m9_3150  [key=0, style=solid];
m9_3149 -> m9_3153  [key=0, style=solid];
m9_3149 -> m9_3157  [key=2, style=dotted];
m9_3151 -> m9_3152  [key=0, style=solid];
m9_3151 -> m9_2398  [key=2, style=dotted];
m9_3148 -> m9_3149  [key=0, style=solid];
m9_3148 -> m9_3153  [key=0, style=solid];
m9_3150 -> m9_3151  [key=0, style=solid];
m9_3150 -> m9_219  [key=2, style=dotted];
m9_3156 -> m9_3144  [key=0, style=bold, color=blue];
m9_841 -> m9_842  [key=0, style=solid];
m9_842 -> m9_843  [key=0, style=solid];
m9_842 -> m9_847  [key=2, style=dotted];
m9_842 -> m9_11  [key=2, style=dotted];
m9_843 -> m9_844  [key=0, style=solid];
m9_843 -> m9_13  [key=2, style=dotted];
m9_843 -> m9_845  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_844 -> m9_845  [key=0, style=solid];
m9_844 -> m9_14  [key=2, style=dotted];
m9_845 -> m9_846  [key=0, style=solid];
m9_845 -> m9_14  [key=2, style=dotted];
m9_846 -> m9_841  [key=0, style=bold, color=blue];
m9_975 -> m9_976  [key=0, style=solid];
m9_976 -> m9_977  [key=0, style=solid];
m9_976 -> m9_790  [key=2, style=dotted];
m9_976 -> m9_983  [key=1, style=dashed, color=darkseagreen4, label=d];
m9_977 -> m9_978  [key=0, style=solid];
m9_977 -> m9_980  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_977 -> m9_982  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_983 -> m9_984  [key=0, style=solid];
m9_983 -> m9_14  [key=2, style=dotted];
m9_978 -> m9_979  [key=0, style=solid];
m9_978 -> m9_47  [key=2, style=dotted];
m9_978 -> m9_980  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_978 -> m9_982  [key=1, style=dashed, color=darkseagreen4, label=settings];
m9_980 -> m9_981  [key=0, style=solid];
m9_980 -> m9_575  [key=2, style=dotted];
m9_980 -> m9_982  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_982 -> m9_983  [key=0, style=solid];
m9_982 -> m9_986  [key=2, style=dotted];
m9_982 -> m9_982  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m9_979 -> m9_980  [key=0, style=solid];
m9_979 -> m9_985  [key=2, style=dotted];
m9_979 -> m9_169  [key=2, style=dotted];
m9_981 -> m9_982  [key=0, style=solid];
m9_981 -> m9_14  [key=2, style=dotted];
m9_984 -> m9_975  [key=0, style=bold, color=blue];
m9_2619 -> m9_2620  [key=0, style=solid];
m9_2620 -> m9_2621  [key=0, style=solid];
m9_2620 -> m9_2622  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2621 -> m9_2622  [key=0, style=solid];
m9_2621 -> m9_13  [key=2, style=dotted];
m9_2621 -> m9_2623  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m9_2622 -> m9_2623  [key=0, style=solid];
m9_2622 -> m9_13  [key=2, style=dotted];
m9_2623 -> m9_2624  [key=0, style=solid];
m9_2623 -> m9_14  [key=2, style=dotted];
m9_2624 -> m9_2619  [key=0, style=bold, color=blue];
m9_158 -> m9_159  [key=0, style=solid];
m9_159 -> m9_160  [key=0, style=solid];
m9_159 -> m9_154  [key=2, style=dotted];
m9_159 -> m9_161  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_159 -> m9_162  [key=1, style=dashed, color=darkseagreen4, label=c];
m9_160 -> m9_161  [key=0, style=solid];
m9_161 -> m9_162  [key=0, style=solid];
m9_161 -> m9_168  [key=2, style=dotted];
m9_161 -> m9_169  [key=2, style=dotted];
m9_162 -> m9_163  [key=0, style=solid];
m9_162 -> m9_170  [key=2, style=dotted];
m9_162 -> m9_164  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_163 -> m9_164  [key=0, style=solid];
m9_163 -> m9_12  [key=2, style=dotted];
m9_164 -> m9_165  [key=0, style=solid];
m9_164 -> m9_13  [key=2, style=dotted];
m9_164 -> m9_166  [key=1, style=dashed, color=darkseagreen4, label=c2];
m9_165 -> m9_166  [key=0, style=solid];
m9_165 -> m9_14  [key=2, style=dotted];
m9_166 -> m9_167  [key=0, style=solid];
m9_166 -> m9_14  [key=2, style=dotted];
m9_167 -> m9_158  [key=0, style=bold, color=blue];
m9_3337 -> m9_3338  [key=0, style=solid];
m9_3338 -> m9_3339  [key=0, style=solid];
m9_3339 -> m9_3340  [key=0, style=solid];
m9_3339 -> m9_13  [key=2, style=dotted];
m9_3339 -> m9_3341  [key=1, style=dashed, color=darkseagreen4, label=exception];
m9_3339 -> m9_3342  [key=1, style=dashed, color=darkseagreen4, label=exception];
m9_3340 -> m9_3341  [key=0, style=solid];
m9_3340 -> m9_632  [key=2, style=dotted];
m9_3341 -> m9_3342  [key=0, style=solid];
m9_3341 -> m9_581  [key=2, style=dotted];
m9_3342 -> m9_3343  [key=0, style=solid];
m9_3342 -> m9_14  [key=2, style=dotted];
m9_3343 -> m9_3337  [key=0, style=bold, color=blue];
m9_258 -> m9_259  [key=0, style=solid];
m9_259 -> m9_260  [key=0, style=solid];
m9_259 -> m9_266  [key=2, style=dotted];
m9_259 -> m9_262  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_259 -> m9_263  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_259 -> m9_264  [key=1, style=dashed, color=darkseagreen4, label=input];
m9_260 -> m9_261  [key=0, style=solid];
m9_260 -> m9_11  [key=2, style=dotted];
m9_262 -> m9_263  [key=0, style=solid];
m9_262 -> m9_14  [key=2, style=dotted];
m9_263 -> m9_264  [key=0, style=solid];
m9_263 -> m9_14  [key=2, style=dotted];
m9_264 -> m9_265  [key=0, style=solid];
m9_264 -> m9_14  [key=2, style=dotted];
m9_261 -> m9_262  [key=0, style=solid];
m9_261 -> m9_13  [key=2, style=dotted];
m9_261 -> m9_263  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_261 -> m9_264  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m9_265 -> m9_258  [key=0, style=bold, color=blue];
m9_1837 -> m9_1838  [key=0, style=solid];
m9_1838 -> m9_1839  [key=0, style=solid];
m9_1838 -> m9_1847  [key=2, style=dotted];
m9_1838 -> m9_1840  [key=1, style=dashed, color=darkseagreen4, label=g];
m9_1838 -> m9_1841  [key=1, style=dashed, color=darkseagreen4, label=g];
m9_1838 -> m9_1842  [key=1, style=dashed, color=darkseagreen4, label=g];
m9_1839 -> m9_1840  [key=0, style=solid];
m9_1839 -> m9_1848  [key=2, style=dotted];
m9_1839 -> m9_1828  [key=2, style=dotted];
m9_1840 -> m9_1841  [key=0, style=solid];
m9_1840 -> m9_1848  [key=2, style=dotted];
m9_1840 -> m9_1828  [key=2, style=dotted];
m9_1841 -> m9_1842  [key=0, style=solid];
m9_1842 -> m9_1843  [key=0, style=solid];
m9_1842 -> m9_1834  [key=2, style=dotted];
m9_1842 -> m9_1844  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_1843 -> m9_1844  [key=0, style=solid];
m9_1843 -> m9_12  [key=2, style=dotted];
m9_1844 -> m9_1845  [key=0, style=solid];
m9_1844 -> m9_13  [key=2, style=dotted];
m9_1845 -> m9_1846  [key=0, style=solid];
m9_1845 -> m9_14  [key=2, style=dotted];
m9_1846 -> m9_1837  [key=0, style=bold, color=blue];
m9_528 -> m9_529  [key=0, style=solid];
m9_528 -> m9_530  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_528 -> m9_531  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_528 -> m9_532  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_528 -> m9_533  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_528 -> m9_534  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m9_529 -> m9_530  [key=0, style=solid];
m9_529 -> m9_536  [key=2, style=dotted];
m9_530 -> m9_531  [key=0, style=solid];
m9_530 -> m9_537  [key=2, style=dotted];
m9_531 -> m9_532  [key=0, style=solid];
m9_531 -> m9_538  [key=2, style=dotted];
m9_532 -> m9_533  [key=0, style=solid];
m9_532 -> m9_538  [key=2, style=dotted];
m9_533 -> m9_534  [key=0, style=solid];
m9_533 -> m9_538  [key=2, style=dotted];
m9_534 -> m9_535  [key=0, style=solid];
m9_534 -> m9_538  [key=2, style=dotted];
m9_535 -> m9_528  [key=0, style=bold, color=blue];
m9_1208 -> m9_1209  [key=0, style=solid];
m9_1209 -> m9_1210  [key=0, style=solid];
m9_1209 -> m9_1212  [key=2, style=dotted];
m9_1209 -> m9_11  [key=2, style=dotted];
m9_1210 -> m9_1211  [key=0, style=solid];
m9_1210 -> m9_14  [key=2, style=dotted];
m9_1211 -> m9_1208  [key=0, style=bold, color=blue];
m9_3591 -> m9_3592  [key=0, style=solid];
m9_3592 -> m9_3593  [key=0, style=solid];
m9_3592 -> m9_2193  [key=2, style=dotted];
m9_3593 -> m9_3594  [key=0, style=solid];
m9_3593 -> m9_170  [key=2, style=dotted];
m9_3594 -> m9_3595  [key=0, style=solid];
m9_3594 -> m9_12  [key=2, style=dotted];
m9_3595 -> m9_3591  [key=0, style=bold, color=blue];
m9_229 -> m9_230  [key=0, style=solid];
m9_230 -> m9_231  [key=0, style=solid];
m9_230 -> m9_234  [key=2, style=dotted];
m9_230 -> m9_11  [key=2, style=dotted];
m9_230 -> m9_14  [key=2, style=dotted];
m9_231 -> m9_232  [key=0, style=solid];
m9_231 -> m9_13  [key=2, style=dotted];
m9_232 -> m9_233  [key=0, style=solid];
m9_232 -> m9_14  [key=2, style=dotted];
m9_233 -> m9_229  [key=0, style=bold, color=blue];
m9_1696 -> m9_1697  [key=0, style=solid];
m9_1697 -> m9_1698  [key=0, style=solid];
m9_1697 -> m9_24  [key=2, style=dotted];
m9_1697 -> m9_1699  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_1698 -> m9_1696  [key=0, style=bold, color=blue];
m9_878 -> m9_879  [key=0, style=solid];
m9_879 -> m9_880  [key=0, style=solid];
m9_879 -> m9_888  [key=2, style=dotted];
m9_879 -> m9_881  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_879 -> m9_882  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_879 -> m9_885  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_879 -> m9_886  [key=1, style=dashed, color=darkseagreen4, label=test];
m9_880 -> m9_881  [key=0, style=solid];
m9_881 -> m9_882  [key=0, style=solid];
m9_882 -> m9_883  [key=0, style=solid];
m9_882 -> m9_11  [key=2, style=dotted];
m9_882 -> m9_884  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m9_885 -> m9_886  [key=0, style=solid];
m9_885 -> m9_14  [key=2, style=dotted];
m9_886 -> m9_887  [key=0, style=solid];
m9_886 -> m9_14  [key=2, style=dotted];
m9_883 -> m9_884  [key=0, style=solid];
m9_883 -> m9_14  [key=2, style=dotted];
m9_884 -> m9_885  [key=0, style=solid];
m9_884 -> m9_13  [key=2, style=dotted];
m9_884 -> m9_886  [key=1, style=dashed, color=darkseagreen4, label=test2];
m9_887 -> m9_878  [key=0, style=bold, color=blue];
m9_3056 -> m9_3057  [key=0, style=solid];
m9_3057 -> m9_3058  [key=0, style=solid];
m9_3057 -> m9_13  [key=2, style=dotted];
m9_3058 -> m9_3059  [key=0, style=solid];
m9_3058 -> m9_191  [key=2, style=dotted];
m9_3059 -> m9_3056  [key=0, style=bold, color=blue];
m9_2652 -> m9_2653  [key=0, style=solid];
m9_2653 -> m9_2654  [key=0, style=solid];
m9_2653 -> m9_2657  [key=2, style=dotted];
m9_2654 -> m9_2655  [key=0, style=solid];
m9_2654 -> m9_11  [key=2, style=dotted];
m9_2655 -> m9_2656  [key=0, style=solid];
m9_2655 -> m9_14  [key=2, style=dotted];
m9_2656 -> m9_2652  [key=0, style=bold, color=blue];
m9_2936 -> m9_2937  [key=0, style=solid];
m9_2937 -> m9_2938  [key=0, style=solid];
m9_2937 -> m9_2941  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_2938 -> m9_2939  [key=0, style=solid];
m9_2938 -> m9_24  [key=2, style=dotted];
m9_2938 -> m9_2940  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_2939 -> m9_2936  [key=0, style=bold, color=blue];
m9_2744 -> m9_2745  [key=0, style=solid];
m9_2745 -> m9_2746  [key=0, style=solid];
m9_2745 -> m9_13  [key=2, style=dotted];
m9_2745 -> m9_2747  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_2745 -> m9_2748  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_2745 -> m9_2749  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_2745 -> m9_2750  [key=1, style=dashed, color=darkseagreen4, label=r];
m9_2746 -> m9_2747  [key=0, style=solid];
m9_2746 -> m9_221  [key=2, style=dotted];
m9_2746 -> m9_14  [key=2, style=dotted];
m9_2747 -> m9_2748  [key=0, style=solid];
m9_2747 -> m9_299  [key=2, style=dotted];
m9_2747 -> m9_14  [key=2, style=dotted];
m9_2748 -> m9_2749  [key=0, style=solid];
m9_2748 -> m9_1518  [key=2, style=dotted];
m9_2748 -> m9_632  [key=2, style=dotted];
m9_2749 -> m9_2750  [key=0, style=solid];
m9_2749 -> m9_1518  [key=2, style=dotted];
m9_2749 -> m9_632  [key=2, style=dotted];
m9_2750 -> m9_2751  [key=0, style=solid];
m9_2750 -> m9_1518  [key=2, style=dotted];
m9_2750 -> m9_191  [key=2, style=dotted];
m9_2751 -> m9_2744  [key=0, style=bold, color=blue];
m9_3995 -> m9_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired"];
m9_3995 -> m9_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired"];
m9_3996 -> m9_97  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_3997 -> m9_106  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass"];
m9_3998 -> m9_119  [key=1, style=dashed, color=darkseagreen4, label=c1];
m9_3999 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver"];
m9_4000 -> m9_155  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem"];
m9_4001 -> m9_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse"];
m9_4002 -> m9_444  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m9_4003 -> m9_519  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_520  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_521  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_522  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_523  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_530  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_531  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_534  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_540  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_542  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_543  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_545  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_547  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4003 -> m9_548  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m9_4004 -> m9_678  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m9_4004 -> m9_679  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m9_4004 -> m9_682  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m9_4005 -> m9_702  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m9_4005 -> m9_723  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m9_4005 -> m9_733  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m9_4005 -> m9_3279  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m9_4005 -> m9_3285  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m9_4005 -> m9_3286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m9_4006 -> m9_925  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4007 -> m9_1343  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m9_4008 -> m9_1385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass"];
m9_4009 -> m9_1397  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass"];
m9_4010 -> m9_1481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_4010 -> m9_1482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_4010 -> m9_1483  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_4010 -> m9_1484  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_4010 -> m9_1487  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m9_4011 -> m9_1591  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4012 -> m9_1618  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4013 -> m9_1625  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4014 -> m9_1632  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4015 -> m9_1639  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4016 -> m9_1646  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4017 -> m9_1653  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4018 -> m9_1660  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4019 -> m9_1667  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4020 -> m9_1681  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4021 -> m9_1689  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4022 -> m9_1813  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m9_4022 -> m9_1814  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m9_4023 -> m9_1829  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m9_4023 -> m9_1832  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m9_4023 -> m9_1835  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m9_4024 -> m9_1868  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4025 -> m9_1872  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m9_4026 -> m9_1901  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1"];
m9_4027 -> m9_1903  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2"];
m9_4028 -> m9_1930  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1934  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1937  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1940  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1944  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1948  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1952  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1956  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1963  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1966  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1970  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1974  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4028 -> m9_1978  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m9_4029 -> m9_1991  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_1992  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_1993  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_1994  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_1995  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_1998  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_1999  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2000  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2001  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2002  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2003  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2004  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2005  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2006  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2007  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2008  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2009  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2010  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2011  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2012  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2013  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2014  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2015  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2030  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2031  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2032  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2033  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2034  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2036  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2037  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2038  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2039  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2040  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2041  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2042  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2043  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2044  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2045  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2046  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4029 -> m9_2047  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m9_4030 -> m9_2102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m9_4030 -> m9_2103  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m9_4031 -> m9_2158  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_4031 -> m9_2159  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_4031 -> m9_2160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_4031 -> m9_2161  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_4031 -> m9_2162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_4031 -> m9_2163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_4031 -> m9_2164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_4031 -> m9_2165  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m9_4032 -> m9_2169  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4032 -> m9_2170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4032 -> m9_2171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4032 -> m9_2172  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4032 -> m9_2173  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4032 -> m9_2174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4032 -> m9_2175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4032 -> m9_2176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4032 -> m9_2177  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4032 -> m9_2178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m9_4033 -> m9_2260  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4034 -> m9_2293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m9_4034 -> m9_2294  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m9_4035 -> m9_2310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey"];
m9_4036 -> m9_2347  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass"];
m9_4037 -> m9_2376  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4038 -> m9_2475  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector"];
m9_4039 -> m9_2492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m9_4040 -> m9_2497  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base"];
m9_4042 -> m9_2511  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m9_4043 -> m9_2613  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m9_4043 -> m9_2614  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m9_4044 -> m9_2617  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor"];
m9_4045 -> m9_2665  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m9_4045 -> m9_2666  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m9_4046 -> m9_2681  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m9_4046 -> m9_2682  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m9_4047 -> m9_2727  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_4047 -> m9_2728  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_4047 -> m9_2729  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_4047 -> m9_2732  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_4047 -> m9_2735  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m9_4048 -> m9_2759  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m9_4049 -> m9_2927  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4050 -> m9_2941  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4051 -> m9_3190  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_4052 -> m9_3205  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_4053 -> m9_3220  [key=1, style=dashed, color=darkseagreen4, label=errors];
m9_4054 -> m9_3335  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4055 -> m9_3335  [key=1, style=dashed, color=darkseagreen4, label=s];
m9_4056 -> m9_3395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m9_4057 -> m9_3398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>"];
m9_4058 -> m9_3437  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4059 -> m9_3448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SerializableContractResolver"];
m9_4060 -> m9_3529  [key=1, style=dashed, color=darkseagreen4, label=json];
m9_4061 -> m9_3599  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor"];
m9_4062 -> m9_3682  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m9_4062 -> m9_3684  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m9_4062 -> m9_3686  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m9_4062 -> m9_3688  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m9_4062 -> m9_3711  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m9_4062 -> m9_3714  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m9_4062 -> m9_3717  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m9_4063 -> m9_3863  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType"];
m9_4064 -> m9_3866  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType"];
m9_4065 -> m9_3910  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m9_4066 -> m9_3967  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DecimalTest"];
m9_4067 -> m9_3970  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor"];
m9_4067 -> m9_3973  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor"];
m9_4067 -> m9_3974  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor"];
m9_4068 -> m9_3977  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor"];
m9_4068 -> m9_3980  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor"];
m9_4068 -> m9_3981  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor"];
m9_4069 -> m9_3984  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m9_4069 -> m9_3985  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m9_4069 -> m9_3988  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m9_4069 -> m9_3989  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m9_4069 -> m9_3990  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParamatrizedConstructorsJsonConstructor"];
m10_7 -> m10_8  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_9 -> m10_7  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_2 -> m10_4  [key=0, style=solid];
m10_2 -> m10_5  [key=2, style=dotted];
m10_2 -> m10_6  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_10 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverterAttribute"];
m10_10 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonConverterAttribute"];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_13  [key=2, style=dotted];
m11_2 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label=rss];
m11_2 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label=rss];
m11_3 -> m11_4  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=categories];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_14  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_14  [key=2, style=dotted];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_15  [key=2, style=dotted];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_16  [key=2, style=dotted];
m11_9 -> m11_17  [key=2, style=dotted];
m11_9 -> m11_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_9 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=categoriesText];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_18  [key=2, style=dotted];
m11_10 -> m11_14  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_18  [key=2, style=dotted];
m11_11 -> m11_19  [key=2, style=dotted];
m11_12 -> m11_0  [key=0, style=bold, color=blue];
m11_20 -> m11_21  [key=0, style=solid];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_20  [key=0, style=bold, color=blue];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label=object];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_30  [key=0, style=solid];
m12_30 -> m12_31  [key=0, style=solid];
m12_30 -> m12_34  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_21  [key=2, style=dotted];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_32  [key=2, style=dotted];
m12_29 -> m12_30  [key=0, style=solid];
m12_29 -> m12_33  [key=2, style=dotted];
m12_31 -> m12_25  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_0 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m12_1 -> m12_2  [key=0, style=solid];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_9  [key=0, style=solid];
m12_4 -> m12_18  [key=2, style=dotted];
m12_2 -> m12_3  [key=0, style=solid];
m12_3 -> m12_4  [key=0, style=solid];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_19  [key=2, style=dotted];
m12_5 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m12_5 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m12_5 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m12_5 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_22  [key=2, style=dotted];
m12_9 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m12_9 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m12_9 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label=keyType];
m12_9 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_19  [key=2, style=dotted];
m12_6 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m12_6 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m12_6 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m12_6 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label=valueType];
m12_8 -> m12_12  [key=0, style=solid];
m12_8 -> m12_21  [key=2, style=dotted];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_14  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_21  [key=2, style=dotted];
m12_13 -> m12_23  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_12  [key=0, style=solid];
m12_7 -> m12_20  [key=2, style=dotted];
m12_16 -> m12_17  [key=0, style=solid];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_12  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_24  [key=2, style=dotted];
m12_17 -> m12_0  [key=0, style=bold, color=blue];
m12_35 -> m12_36  [key=0, style=solid];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_39  [key=0, style=solid];
m12_37 -> m12_38  [key=0, style=solid];
m12_37 -> m12_21  [key=2, style=dotted];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_42  [key=2, style=dotted];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_41  [key=2, style=dotted];
m12_40 -> m12_35  [key=0, style=bold, color=blue];
m12_43 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_28  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_37  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m12_43 -> m12_39  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonDictionaryContract"];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_4  [key=2, style=dotted];
m14_3 -> m14_0  [key=0, style=bold, color=blue];
m14_5 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m14_5 -> m14_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonObjectContract"];
m15_15 -> m15_17  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_0 -> m15_1  [key=0, style=solid, color=red];
m15_1 -> m15_2  [key=0, style=solid, color=red];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_12  [key=2, style=dotted];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label=blogPost];
m15_3 -> m15_8  [key=1, style=dashed, color=darkseagreen4, label=blogPost];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_10  [key=1, style=dashed, color=darkseagreen4, label=title];
m15_6 -> m15_7  [key=0, style=solid, color=green];
m15_6 -> m15_8  [key=1, style=dashed, color=green, label=int];
m15_6 -> m15_9  [key=1, style=dashed, color=green, label=int];
m15_8 -> m15_9  [key=0, style=solid, color=green];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_13  [key=2, style=dotted];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_15  [key=2, style=dotted];
m15_10 -> m15_6  [key=0, style=bold, color=blue];
m15_7 -> m15_8  [key=0, style=solid, color=green];
m15_7 -> m15_13  [key=2, style=dotted];
m15_9 -> m15_10  [key=0, style=solid, color=green];
m15_9 -> m15_14  [key=2, style=dotted];
m15_11 -> m15_0  [key=0, style=bold, color=blue];
m15_11 -> m15_14  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.JsonReaderException Create"];
m15_11 -> m15_12  [key=0, style=solid];
m15_12 -> m15_14  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_11  [key=0, style=bold, color=blue];
m15_14 -> m15_17  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.JsonReaderException Create"];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_11  [key=3, color=darkorchid, style=bold, label="Parameter variable string message"];
m15_14 -> m15_12  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Exception ex"];
m15_17 -> m15_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IJsonLineInfo"];
m15_17 -> m15_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IJsonLineInfo"];
m15_17 -> m15_23  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.IJsonLineInfo"];
m15_17 -> m15_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Exception ex"];
m15_26 -> m15_6  [key=2, style=dotted];
m15_26 -> m15_27  [key=0, style=solid];
m15_18 -> m15_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_18 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_28  [key=2, style=dotted];
m15_22 -> m15_26  [key=1, style=dashed, color=darkseagreen4, label=lineNumber];
m15_22 -> m15_23  [key=0, style=solid];
m15_23 -> m15_26  [key=0, style=solid];
m15_24 -> m15_26  [key=1, style=dashed, color=darkseagreen4, label=lineNumber];
m15_24 -> m15_25  [key=0, style=solid];
m15_25 -> m15_26  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_24  [key=0, style=solid];
m15_21 -> m15_29  [key=2, style=dotted];
m15_19 -> m15_20  [key=0, style=solid];
m15_20 -> m15_21  [key=0, style=solid];
m15_27 -> m15_17  [key=0, style=bold, color=blue];
m15_16 -> m15_14  [key=0, style=bold, color=blue];
m15_30 -> m15_7  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReaderException"];
m15_30 -> m15_8  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReaderException"];
m15_30 -> m15_9  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonReaderException"];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_6 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label=int];
m16_7 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_9 -> m16_10  [key=0, style=solid];
m16_10 -> m16_6  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_2  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m16_4 -> m16_5  [key=0, style=solid];
m16_5 -> m16_4  [key=0, style=bold, color=blue];
m16_11 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaException"];
m16_11 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaException"];
m16_11 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaException"];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_13  [key=2, style=dotted];
m17_1 -> m17_3  [key=1, style=dashed, color=darkseagreen4, label=role];
m17_1 -> m17_8  [key=1, style=dashed, color=darkseagreen4, label=role];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_14  [key=2, style=dotted];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_16  [key=2, style=dotted];
m17_8 -> m17_14  [key=2, style=dotted];
m17_8 -> m17_17  [key=2, style=dotted];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_15  [key=2, style=dotted];
m17_4 -> m17_6  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_4 -> m17_7  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_4 -> m17_8  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_4 -> m17_9  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_4 -> m17_10  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_5 -> m17_6  [key=0, style=solid];
m17_6 -> m17_7  [key=0, style=solid];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_14  [key=2, style=dotted];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_18  [key=2, style=dotted];
m17_9 -> m17_14  [key=2, style=dotted];
m17_9 -> m17_8  [key=3, color=darkorchid, style=bold, label="Property variable Newtonsoft.Json.Serialization.IContractResolver ContractResolver"];
m17_10 -> m17_11  [key=0, style=solid, color=red];
m17_10 -> m17_19  [key=2, style=dotted];
m17_10 -> m17_20  [key=2, style=dotted];
m17_11 -> m17_12  [key=0, style=solid, color=red];
m17_11 -> m17_21  [key=2, style=dotted, color=red];
m17_11 -> m17_11  [key=3, color=red, style=bold, label="Property variable Newtonsoft.Json.Schema.JsonSchema Schema"];
m17_12 -> m17_0  [key=0, style=bold, color=blue];
m17_22 -> m17_23  [key=0, style=solid];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_23  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Schema.JsonSchemaGenerator.TypeSchema Pop"];
m17_23 -> m17_11  [key=3, color=red, style=bold, label="Field variable Newtonsoft.Json.Schema.JsonSchema _currentSchema"];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_40  [key=2, style=dotted];
m17_24 -> m17_26  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_24 -> m17_27  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_24 -> m17_28  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_24 -> m17_29  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_24 -> m17_30  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_24 -> m17_31  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_24 -> m17_32  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_24 -> m17_33  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_24 -> m17_34  [key=1, style=dashed, color=darkseagreen4, label=person];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_41  [key=2, style=dotted];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_14  [key=2, style=dotted];
m17_26 -> m17_42  [key=2, style=dotted];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_42  [key=2, style=dotted];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_42  [key=2, style=dotted];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_42  [key=2, style=dotted];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_42  [key=2, style=dotted];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_14  [key=2, style=dotted];
m17_31 -> m17_42  [key=2, style=dotted];
m17_32 -> m17_33  [key=0, style=solid];
m17_32 -> m17_41  [key=2, style=dotted];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_42  [key=2, style=dotted];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_42  [key=2, style=dotted];
m17_35 -> m17_36  [key=0, style=solid];
m17_35 -> m17_43  [key=2, style=dotted];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_42  [key=2, style=dotted];
m17_37 -> m17_38  [key=0, style=solid];
m17_37 -> m17_44  [key=2, style=dotted];
m17_37 -> m17_43  [key=2, style=dotted];
m17_38 -> m17_39  [key=0, style=solid];
m17_38 -> m17_42  [key=2, style=dotted];
m17_39 -> m17_22  [key=0, style=bold, color=blue];
m18_11 -> m18_12  [key=0, style=solid];
m18_11 -> m18_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_11 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_11 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_11 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_11 -> m18_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_0 -> m18_1  [key=0, style=solid, color=green];
m18_1 -> m18_2  [key=0, style=solid, color=green];
m18_1 -> m18_7  [key=2, style=dotted];
m18_1 -> m18_8  [key=2, style=dotted, color=green];
m18_1 -> m18_4  [key=1, style=dashed, color=green, label=mayanEndOfTheWorld];
m18_2 -> m18_3  [key=0, style=solid, color=green];
m18_2 -> m18_8  [key=2, style=dotted];
m18_2 -> m18_9  [key=2, style=dotted, color=green];
m18_3 -> m18_4  [key=0, style=solid, color=green];
m18_3 -> m18_8  [key=2, style=dotted];
m18_3 -> m18_10  [key=2, style=dotted, color=green];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_9  [key=2, style=dotted];
m18_4 -> m18_11  [key=2, style=dotted];
m18_4 -> m18_12  [key=2, style=dotted];
m18_4 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label=jsonMsDate];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_10  [key=2, style=dotted];
m18_6 -> m18_0  [key=0, style=bold, color=blue];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_13  [key=2, style=dotted];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_7  [key=2, style=dotted];
m18_12 -> m18_20  [key=2, style=dotted];
m18_12 -> m18_21  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_22  [key=2, style=dotted];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_22  [key=2, style=dotted];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_23  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_17 -> m18_18  [key=0, style=solid];
m18_18 -> m18_19  [key=0, style=solid];
m18_18 -> m18_10  [key=2, style=dotted];
m18_19 -> m18_11  [key=0, style=bold, color=blue];
m18_24 -> m18_25  [key=0, style=solid];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_11  [key=2, style=dotted];
m18_26 -> m18_24  [key=0, style=bold, color=blue];
m18_7 -> m18_0  [key=0, style=bold, color=blue];
m18_10 -> m18_27  [key=0, style=solid];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_29  [key=2, style=dotted];
m18_27 -> m18_30  [key=2, style=dotted];
m18_27 -> m18_31  [key=2, style=dotted];
m18_27 -> m18_32  [key=2, style=dotted];
m18_27 -> m18_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_27 -> m18_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_28 -> m18_10  [key=0, style=bold, color=blue];
m18_36 -> m18_37  [key=0, style=solid];
m18_33 -> m18_34  [key=0, style=solid];
m18_34 -> m18_35  [key=0, style=solid];
m18_35 -> m18_33  [key=0, style=bold, color=blue];
m18_37 -> m18_38  [key=0, style=solid];
m18_38 -> m18_36  [key=0, style=bold, color=blue];
m18_39 -> m18_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m18_39 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Schema.JsonSchemaNode"];
m19_16 -> m19_17  [key=0, style=solid];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_38  [key=2, style=dotted];
m19_17 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label=specTests];
m19_17 -> m19_34  [key=1, style=dashed, color=darkseagreen4, label=specTests];
m19_17 -> m19_35  [key=1, style=dashed, color=darkseagreen4, label=specTests];
m19_18 -> m19_19  [key=0, style=solid];
m19_33 -> m19_34  [key=0, style=solid];
m19_34 -> m19_25  [key=0, style=solid];
m19_34 -> m19_45  [key=2, style=dotted];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_46  [key=2, style=dotted];
m19_35 -> m19_47  [key=2, style=dotted];
m19_35 -> m19_35  [key=1, style=dashed, color=darkseagreen4, label=specTests];
m19_35 -> m19_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_39  [key=2, style=dotted];
m19_20 -> m19_21  [key=0, style=solid];
m19_20 -> m19_40  [key=2, style=dotted];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_35  [key=0, style=solid];
m19_21 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label=testFile];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_41  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_44  [key=2, style=dotted];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_42  [key=2, style=dotted];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_21  [key=0, style=solid];
m19_24 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=testCase];
m19_24 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=testCase];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_24  [key=0, style=solid];
m19_25 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label=test];
m19_25 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=test];
m19_25 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label=test];
m19_28 -> m19_29  [key=0, style=solid];
m19_29 -> m19_30  [key=0, style=solid];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_43  [key=2, style=dotted];
m19_26 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
m19_26 -> m19_29  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
m19_26 -> m19_30  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
m19_26 -> m19_31  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
m19_26 -> m19_32  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
m19_26 -> m19_33  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
m19_26 -> m19_34  [key=1, style=dashed, color=darkseagreen4, label=jsonSchemaSpecTest];
m19_30 -> m19_31  [key=0, style=solid];
m19_31 -> m19_32  [key=0, style=solid];
m19_32 -> m19_33  [key=0, style=solid];
m19_36 -> m19_37  [key=0, style=solid];
m19_37 -> m19_16  [key=0, style=bold, color=blue];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest"];
m19_3 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest"];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_10  [key=2, style=dotted];
m19_4 -> m19_11  [key=2, style=dotted];
m19_4 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label=s];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_12  [key=2, style=dotted];
m19_6 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=v];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_14  [key=2, style=dotted];
m19_8 -> m19_15  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_13  [key=2, style=dotted];
m19_9 -> m19_3  [key=0, style=bold, color=blue];
m19_48 -> m19_49  [key=0, style=solid];
m19_49 -> m19_50  [key=0, style=solid];
m19_50 -> m19_48  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_51 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Schema.JsonSchemaSpecTest"];
m20_8 -> m20_9  [key=0, style=solid];
m20_3 -> m20_4  [key=0, style=solid];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_7  [key=2, style=dotted];
m20_5 -> m20_6  [key=0, style=solid];
m20_6 -> m20_3  [key=0, style=bold, color=blue];
m20_9 -> m20_10  [key=0, style=solid];
m20_9 -> m20_11  [key=2, style=dotted];
m20_10 -> m20_8  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m20_12 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m20_12 -> m20_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonSerializerSettings"];
m21_2173 -> m21_2174  [key=0, style=solid];
m21_2174 -> m21_2175  [key=0, style=solid];
m21_2174 -> m21_2176  [key=2, style=dotted];
m21_2175 -> m21_2173  [key=0, style=bold, color=blue];
m21_730 -> m21_731  [key=0, style=solid];
m21_730 -> m21_732  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_730 -> m21_733  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m21_730 -> m21_734  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m21_730 -> m21_735  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.PersonReference"];
m21_731 -> m21_732  [key=0, style=solid];
m21_732 -> m21_733  [key=0, style=solid];
m21_733 -> m21_734  [key=0, style=solid];
m21_734 -> m21_735  [key=0, style=solid];
m21_735 -> m21_736  [key=0, style=solid];
m21_736 -> m21_730  [key=0, style=bold, color=blue];
m21_803 -> m21_804  [key=0, style=solid];
m21_804 -> m21_805  [key=0, style=solid];
m21_804 -> m21_3308  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m21_805 -> m21_806  [key=0, style=solid];
m21_805 -> m21_813  [key=2, style=dotted];
m21_805 -> m21_807  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_805 -> m21_809  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_805 -> m21_810  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_806 -> m21_807  [key=0, style=solid];
m21_806 -> m21_814  [key=2, style=dotted];
m21_806 -> m21_808  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_807 -> m21_808  [key=0, style=solid];
m21_807 -> m21_815  [key=2, style=dotted];
m21_809 -> m21_810  [key=0, style=solid];
m21_809 -> m21_24  [key=2, style=dotted];
m21_810 -> m21_811  [key=0, style=solid];
m21_810 -> m21_24  [key=2, style=dotted];
m21_808 -> m21_809  [key=0, style=solid];
m21_808 -> m21_816  [key=2, style=dotted];
m21_808 -> m21_811  [key=1, style=dashed, color=darkseagreen4, label=output];
m21_811 -> m21_812  [key=0, style=solid];
m21_811 -> m21_42  [key=2, style=dotted];
m21_812 -> m21_803  [key=0, style=bold, color=blue];
m21_250 -> m21_251  [key=0, style=solid];
m21_251 -> m21_252  [key=0, style=solid];
m21_251 -> m21_261  [key=2, style=dotted];
m21_251 -> m21_263  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_252 -> m21_253  [key=0, style=solid];
m21_252 -> m21_73  [key=2, style=dotted];
m21_252 -> m21_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_253 -> m21_254  [key=0, style=solid];
m21_253 -> m21_261  [key=2, style=dotted];
m21_254 -> m21_255  [key=0, style=solid];
m21_254 -> m21_142  [key=2, style=dotted];
m21_255 -> m21_256  [key=0, style=solid];
m21_255 -> m21_24  [key=2, style=dotted];
m21_256 -> m21_257  [key=0, style=solid];
m21_256 -> m21_73  [key=2, style=dotted];
m21_256 -> m21_265  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_257 -> m21_258  [key=0, style=solid];
m21_257 -> m21_73  [key=2, style=dotted];
m21_257 -> m21_268  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_258 -> m21_259  [key=0, style=solid];
m21_258 -> m21_51  [key=2, style=dotted];
m21_259 -> m21_260  [key=0, style=solid];
m21_259 -> m21_24  [key=2, style=dotted];
m21_260 -> m21_250  [key=0, style=bold, color=blue];
m21_1687 -> m21_1688  [key=0, style=solid];
m21_1687 -> m21_1689  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_1687 -> m21_1690  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_1687 -> m21_1691  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_1688 -> m21_1689  [key=0, style=solid];
m21_1689 -> m21_1690  [key=0, style=solid];
m21_1690 -> m21_1691  [key=0, style=solid];
m21_1691 -> m21_1692  [key=0, style=solid];
m21_1692 -> m21_1687  [key=0, style=bold, color=blue];
m21_3612 -> m21_3613  [key=0, style=solid];
m21_3613 -> m21_3614  [key=0, style=solid];
m21_3613 -> m21_3616  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3613 -> m21_3619  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3613 -> m21_3613  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3614 -> m21_3615  [key=0, style=solid];
m21_3614 -> m21_188  [key=2, style=dotted];
m21_3616 -> m21_3617  [key=0, style=solid];
m21_3616 -> m21_73  [key=2, style=dotted];
m21_3616 -> m21_3618  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3615 -> m21_3616  [key=0, style=solid];
m21_3615 -> m21_879  [key=2, style=dotted];
m21_3615 -> m21_3619  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_3617 -> m21_3612  [key=0, style=bold, color=blue];
m21_3205 -> m21_3206  [key=0, style=solid];
m21_3206 -> m21_3207  [key=0, style=solid];
m21_3206 -> m21_3216  [key=2, style=dotted];
m21_3206 -> m21_3209  [key=1, style=dashed, color=darkseagreen4, label=ng];
m21_3206 -> m21_3213  [key=1, style=dashed, color=darkseagreen4, label=ng];
m21_3207 -> m21_3208  [key=0, style=solid];
m21_3207 -> m21_3217  [key=2, style=dotted];
m21_3207 -> m21_881  [key=2, style=dotted];
m21_3207 -> m21_3209  [key=1, style=dashed, color=darkseagreen4, label=writer];
m21_3207 -> m21_3210  [key=1, style=dashed, color=darkseagreen4, label=writer];
m21_3207 -> m21_3213  [key=1, style=dashed, color=darkseagreen4, label=writer];
m21_3207 -> m21_3214  [key=1, style=dashed, color=darkseagreen4, label=writer];
m21_3209 -> m21_3210  [key=0, style=solid];
m21_3209 -> m21_3052  [key=2, style=dotted];
m21_3213 -> m21_3214  [key=0, style=solid];
m21_3213 -> m21_3052  [key=2, style=dotted];
m21_3208 -> m21_3209  [key=0, style=solid];
m21_3208 -> m21_3218  [key=2, style=dotted];
m21_3208 -> m21_3212  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3208 -> m21_3213  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3210 -> m21_3211  [key=0, style=solid];
m21_3210 -> m21_24  [key=2, style=dotted];
m21_3214 -> m21_3215  [key=0, style=solid];
m21_3214 -> m21_24  [key=2, style=dotted];
m21_3212 -> m21_3213  [key=0, style=solid];
m21_3211 -> m21_3212  [key=0, style=solid];
m21_3211 -> m21_566  [key=2, style=dotted];
m21_3215 -> m21_3205  [key=0, style=bold, color=blue];
m21_4333 -> m21_4334  [key=0, style=solid];
m21_4334 -> m21_4335  [key=0, style=solid];
m21_4335 -> m21_4333  [key=0, style=bold, color=blue];
m21_844 -> m21_845  [key=0, style=solid];
m21_845 -> m21_846  [key=0, style=solid];
m21_845 -> m21_850  [key=2, style=dotted];
m21_845 -> m21_836  [key=2, style=dotted];
m21_846 -> m21_847  [key=0, style=solid];
m21_846 -> m21_142  [key=2, style=dotted];
m21_846 -> m21_848  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_847 -> m21_848  [key=0, style=solid];
m21_847 -> m21_847  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m21_848 -> m21_849  [key=0, style=solid];
m21_848 -> m21_24  [key=2, style=dotted];
m21_849 -> m21_844  [key=0, style=bold, color=blue];
m21_1774 -> m21_1775  [key=0, style=solid];
m21_1775 -> m21_1776  [key=0, style=solid];
m21_1775 -> m21_1775  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1776 -> m21_1777  [key=0, style=solid];
m21_1776 -> m21_51  [key=2, style=dotted];
m21_1776 -> m21_1778  [key=1, style=dashed, color=darkseagreen4, label=r];
m21_1776 -> m21_1779  [key=1, style=dashed, color=darkseagreen4, label=r];
m21_1777 -> m21_1778  [key=0, style=solid];
m21_1777 -> m21_24  [key=2, style=dotted];
m21_1778 -> m21_1779  [key=0, style=solid];
m21_1778 -> m21_24  [key=2, style=dotted];
m21_1779 -> m21_1780  [key=0, style=solid];
m21_1779 -> m21_24  [key=2, style=dotted];
m21_1780 -> m21_1774  [key=0, style=bold, color=blue];
m21_1279 -> m21_1280  [key=0, style=solid];
m21_1280 -> m21_1281  [key=0, style=solid];
m21_1280 -> m21_1147  [key=2, style=dotted];
m21_1281 -> m21_1282  [key=0, style=solid];
m21_1281 -> m21_142  [key=2, style=dotted];
m21_1282 -> m21_1283  [key=0, style=solid];
m21_1282 -> m21_24  [key=2, style=dotted];
m21_1283 -> m21_1279  [key=0, style=bold, color=blue];
m21_2077 -> m21_2078  [key=0, style=solid];
m21_2078 -> m21_2079  [key=0, style=solid];
m21_2078 -> m21_2080  [key=0, style=solid];
m21_2079 -> m21_2078  [key=0, style=solid];
m21_2079 -> m21_878  [key=2, style=dotted];
m21_2079 -> m21_2079  [key=1, style=dashed, color=darkseagreen4, label=pair];
m21_2080 -> m21_2077  [key=0, style=bold, color=blue];
m21_2470 -> m21_2471  [key=0, style=solid];
m21_2471 -> m21_2472  [key=0, style=solid];
m21_2471 -> m21_73  [key=2, style=dotted];
m21_2471 -> m21_2473  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_2472 -> m21_2470  [key=0, style=bold, color=blue];
m21_765 -> m21_766  [key=0, style=solid];
m21_766 -> m21_767  [key=0, style=solid];
m21_766 -> m21_786  [key=2, style=dotted];
m21_766 -> m21_768  [key=1, style=dashed, color=darkseagreen4, label=p1];
m21_766 -> m21_769  [key=1, style=dashed, color=darkseagreen4, label=p1];
m21_766 -> m21_770  [key=1, style=dashed, color=darkseagreen4, label=p1];
m21_767 -> m21_768  [key=0, style=solid];
m21_767 -> m21_786  [key=2, style=dotted];
m21_767 -> m21_769  [key=1, style=dashed, color=darkseagreen4, label=p2];
m21_767 -> m21_770  [key=1, style=dashed, color=darkseagreen4, label=p2];
m21_768 -> m21_769  [key=0, style=solid];
m21_769 -> m21_770  [key=0, style=solid];
m21_770 -> m21_771  [key=0, style=solid];
m21_770 -> m21_730  [key=2, style=dotted];
m21_770 -> m21_773  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_770 -> m21_776  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_770 -> m21_777  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_770 -> m21_778  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_770 -> m21_779  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_770 -> m21_780  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_771 -> m21_772  [key=0, style=solid];
m21_773 -> m21_774  [key=0, style=solid];
m21_773 -> m21_189  [key=2, style=dotted];
m21_773 -> m21_775  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_776 -> m21_777  [key=0, style=solid];
m21_776 -> m21_24  [key=2, style=dotted];
m21_777 -> m21_778  [key=0, style=solid];
m21_777 -> m21_24  [key=2, style=dotted];
m21_778 -> m21_779  [key=0, style=solid];
m21_778 -> m21_24  [key=2, style=dotted];
m21_779 -> m21_780  [key=0, style=solid];
m21_779 -> m21_24  [key=2, style=dotted];
m21_780 -> m21_781  [key=0, style=solid];
m21_780 -> m21_24  [key=2, style=dotted];
m21_772 -> m21_773  [key=0, style=solid];
m21_772 -> m21_188  [key=2, style=dotted];
m21_774 -> m21_775  [key=0, style=solid];
m21_774 -> m21_42  [key=2, style=dotted];
m21_775 -> m21_776  [key=0, style=solid];
m21_775 -> m21_51  [key=2, style=dotted];
m21_775 -> m21_777  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m21_775 -> m21_778  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m21_775 -> m21_779  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m21_775 -> m21_780  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m21_775 -> m21_781  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m21_775 -> m21_782  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m21_775 -> m21_783  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m21_775 -> m21_784  [key=1, style=dashed, color=darkseagreen4, label=obj2];
m21_781 -> m21_782  [key=0, style=solid];
m21_781 -> m21_24  [key=2, style=dotted];
m21_782 -> m21_783  [key=0, style=solid];
m21_782 -> m21_24  [key=2, style=dotted];
m21_783 -> m21_784  [key=0, style=solid];
m21_783 -> m21_24  [key=2, style=dotted];
m21_784 -> m21_785  [key=0, style=solid];
m21_784 -> m21_24  [key=2, style=dotted];
m21_785 -> m21_765  [key=0, style=bold, color=blue];
m21_1371 -> m21_1372  [key=0, style=solid];
m21_1372 -> m21_1373  [key=0, style=solid];
m21_1372 -> m21_1351  [key=2, style=dotted];
m21_1372 -> m21_1377  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m21_1372 -> m21_1378  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m21_1373 -> m21_1374  [key=0, style=solid];
m21_1373 -> m21_1352  [key=2, style=dotted];
m21_1377 -> m21_1378  [key=0, style=solid];
m21_1377 -> m21_24  [key=2, style=dotted];
m21_1378 -> m21_1379  [key=0, style=solid];
m21_1378 -> m21_24  [key=2, style=dotted];
m21_1374 -> m21_1375  [key=0, style=solid];
m21_1374 -> m21_188  [key=2, style=dotted];
m21_1374 -> m21_189  [key=2, style=dotted];
m21_1374 -> m21_1376  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1375 -> m21_1376  [key=0, style=solid];
m21_1375 -> m21_24  [key=2, style=dotted];
m21_1376 -> m21_1377  [key=0, style=solid];
m21_1376 -> m21_51  [key=2, style=dotted];
m21_1376 -> m21_1378  [key=1, style=dashed, color=darkseagreen4, label=m2];
m21_1379 -> m21_1371  [key=0, style=bold, color=blue];
m21_1813 -> m21_1814  [key=0, style=solid];
m21_1814 -> m21_1815  [key=0, style=solid];
m21_1814 -> m21_51  [key=2, style=dotted];
m21_1814 -> m21_1816  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_1814 -> m21_1817  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_1814 -> m21_1818  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_1815 -> m21_1816  [key=0, style=solid];
m21_1815 -> m21_24  [key=2, style=dotted];
m21_1816 -> m21_1817  [key=0, style=solid];
m21_1816 -> m21_24  [key=2, style=dotted];
m21_1817 -> m21_1818  [key=0, style=solid];
m21_1817 -> m21_24  [key=2, style=dotted];
m21_1818 -> m21_1819  [key=0, style=solid];
m21_1818 -> m21_24  [key=2, style=dotted];
m21_1819 -> m21_1813  [key=0, style=bold, color=blue];
m21_3097 -> m21_3098  [key=0, style=solid];
m21_3098 -> m21_3099  [key=0, style=solid];
m21_3098 -> m21_147  [key=2, style=dotted];
m21_3098 -> m21_3101  [key=1, style=dashed, color=darkseagreen4, label=d1];
m21_3098 -> m21_3102  [key=1, style=dashed, color=darkseagreen4, label=d1];
m21_3099 -> m21_3100  [key=0, style=solid];
m21_3099 -> m21_142  [key=2, style=dotted];
m21_3101 -> m21_3102  [key=0, style=solid];
m21_3101 -> m21_24  [key=2, style=dotted];
m21_3102 -> m21_3103  [key=0, style=solid];
m21_3102 -> m21_24  [key=2, style=dotted];
m21_3100 -> m21_3101  [key=0, style=solid];
m21_3100 -> m21_51  [key=2, style=dotted];
m21_3100 -> m21_3102  [key=1, style=dashed, color=darkseagreen4, label=d2];
m21_3103 -> m21_3097  [key=0, style=bold, color=blue];
m21_1754 -> m21_1755  [key=0, style=solid];
m21_1755 -> m21_1756  [key=0, style=solid];
m21_1755 -> m21_964  [key=2, style=dotted];
m21_1755 -> m21_1759  [key=2, style=dotted];
m21_1756 -> m21_1757  [key=0, style=solid];
m21_1756 -> m21_142  [key=2, style=dotted];
m21_1757 -> m21_1758  [key=0, style=solid];
m21_1757 -> m21_24  [key=2, style=dotted];
m21_1758 -> m21_1754  [key=0, style=bold, color=blue];
m21_2620 -> m21_2621  [key=0, style=solid];
m21_2621 -> m21_2622  [key=0, style=solid];
m21_2621 -> m21_51  [key=2, style=dotted];
m21_2622 -> m21_2623  [key=0, style=solid];
m21_2622 -> m21_2605  [key=2, style=dotted];
m21_2622 -> m21_1000  [key=2, style=dotted];
m21_2622 -> m21_1155  [key=2, style=dotted];
m21_2622 -> m21_24  [key=2, style=dotted];
m21_2623 -> m21_2620  [key=0, style=bold, color=blue];
m21_1526 -> m21_1527  [key=0, style=solid];
m21_1527 -> m21_1528  [key=0, style=solid];
m21_1527 -> m21_1536  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1527 -> m21_1527  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1528 -> m21_1529  [key=0, style=solid];
m21_1528 -> m21_51  [key=2, style=dotted];
m21_1528 -> m21_1530  [key=1, style=dashed, color=darkseagreen4, label=aa];
m21_1528 -> m21_1531  [key=1, style=dashed, color=darkseagreen4, label=aa];
m21_1528 -> m21_1532  [key=1, style=dashed, color=darkseagreen4, label=aa];
m21_1528 -> m21_1533  [key=1, style=dashed, color=darkseagreen4, label=aa];
m21_1528 -> m21_1534  [key=1, style=dashed, color=darkseagreen4, label=aa];
m21_1528 -> m21_1535  [key=1, style=dashed, color=darkseagreen4, label=aa];
m21_1536 -> m21_1537  [key=0, style=solid];
m21_1536 -> m21_24  [key=2, style=dotted];
m21_1529 -> m21_1530  [key=0, style=solid];
m21_1529 -> m21_24  [key=2, style=dotted];
m21_1530 -> m21_1531  [key=0, style=solid];
m21_1530 -> m21_24  [key=2, style=dotted];
m21_1531 -> m21_1532  [key=0, style=solid];
m21_1531 -> m21_24  [key=2, style=dotted];
m21_1532 -> m21_1533  [key=0, style=solid];
m21_1532 -> m21_24  [key=2, style=dotted];
m21_1533 -> m21_1534  [key=0, style=solid];
m21_1533 -> m21_24  [key=2, style=dotted];
m21_1534 -> m21_1535  [key=0, style=solid];
m21_1534 -> m21_24  [key=2, style=dotted];
m21_1535 -> m21_1536  [key=0, style=solid];
m21_1535 -> m21_142  [key=2, style=dotted];
m21_1537 -> m21_1526  [key=0, style=bold, color=blue];
m21_1793 -> m21_1794  [key=0, style=solid];
m21_1794 -> m21_1795  [key=0, style=solid];
m21_1794 -> m21_1798  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1794 -> m21_1794  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1795 -> m21_1796  [key=0, style=solid];
m21_1795 -> m21_73  [key=2, style=dotted];
m21_1795 -> m21_1797  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1796 -> m21_1793  [key=0, style=bold, color=blue];
m21_2789 -> m21_2790  [key=0, style=solid];
m21_2790 -> m21_2791  [key=0, style=solid];
m21_2790 -> m21_2790  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2791 -> m21_2792  [key=0, style=solid];
m21_2791 -> m21_51  [key=2, style=dotted];
m21_2791 -> m21_2793  [key=1, style=dashed, color=darkseagreen4, label=p];
m21_2791 -> m21_2794  [key=1, style=dashed, color=darkseagreen4, label=p];
m21_2792 -> m21_2793  [key=0, style=solid];
m21_2792 -> m21_24  [key=2, style=dotted];
m21_2793 -> m21_2794  [key=0, style=solid];
m21_2793 -> m21_24  [key=2, style=dotted];
m21_2794 -> m21_2795  [key=0, style=solid];
m21_2794 -> m21_24  [key=2, style=dotted];
m21_2795 -> m21_2789  [key=0, style=bold, color=blue];
m21_3596 -> m21_3597  [key=0, style=solid];
m21_3597 -> m21_3598  [key=0, style=solid];
m21_3597 -> m21_3600  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3597 -> m21_3597  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3598 -> m21_3599  [key=0, style=solid];
m21_3598 -> m21_188  [key=2, style=dotted];
m21_3600 -> m21_3601  [key=0, style=solid];
m21_3600 -> m21_16  [key=2, style=dotted];
m21_3600 -> m21_386  [key=2, style=dotted];
m21_3600 -> m21_20  [key=2, style=dotted];
m21_3600 -> m21_3602  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_3599 -> m21_3600  [key=0, style=solid];
m21_3599 -> m21_879  [key=2, style=dotted];
m21_3601 -> m21_3602  [key=0, style=solid];
m21_3601 -> m21_843  [key=2, style=dotted];
m21_3602 -> m21_3603  [key=0, style=solid];
m21_3602 -> m21_24  [key=2, style=dotted];
m21_3603 -> m21_3596  [key=0, style=bold, color=blue];
m21_2484 -> m21_2485  [key=0, style=solid];
m21_2485 -> m21_2486  [key=0, style=solid];
m21_2485 -> m21_209  [key=2, style=dotted];
m21_2485 -> m21_2487  [key=1, style=dashed, color=darkseagreen4, label=reference];
m21_2485 -> m21_2488  [key=1, style=dashed, color=darkseagreen4, label=reference];
m21_2485 -> m21_2492  [key=1, style=dashed, color=darkseagreen4, label=reference];
m21_2486 -> m21_2487  [key=0, style=solid];
m21_2486 -> m21_878  [key=2, style=dotted];
m21_2487 -> m21_2488  [key=0, style=solid];
m21_2487 -> m21_878  [key=2, style=dotted];
m21_2488 -> m21_2489  [key=0, style=solid];
m21_2488 -> m21_878  [key=2, style=dotted];
m21_2492 -> m21_2493  [key=0, style=solid];
m21_2492 -> m21_878  [key=2, style=dotted];
m21_2489 -> m21_2490  [key=0, style=solid];
m21_2489 -> m21_209  [key=2, style=dotted];
m21_2489 -> m21_2491  [key=1, style=dashed, color=darkseagreen4, label=child];
m21_2489 -> m21_2492  [key=1, style=dashed, color=darkseagreen4, label=child];
m21_2489 -> m21_2493  [key=1, style=dashed, color=darkseagreen4, label=child];
m21_2490 -> m21_2491  [key=0, style=solid];
m21_2490 -> m21_878  [key=2, style=dotted];
m21_2491 -> m21_2492  [key=0, style=solid];
m21_2491 -> m21_878  [key=2, style=dotted];
m21_2493 -> m21_2494  [key=0, style=solid];
m21_2493 -> m21_142  [key=2, style=dotted];
m21_2493 -> m21_2495  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2494 -> m21_2495  [key=0, style=solid];
m21_2494 -> m21_24  [key=2, style=dotted];
m21_2495 -> m21_2496  [key=0, style=solid];
m21_2495 -> m21_51  [key=2, style=dotted];
m21_2495 -> m21_2497  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_2495 -> m21_2498  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_2496 -> m21_2497  [key=0, style=solid];
m21_2496 -> m21_24  [key=2, style=dotted];
m21_2497 -> m21_2498  [key=0, style=solid];
m21_2497 -> m21_24  [key=2, style=dotted];
m21_2498 -> m21_2499  [key=0, style=solid];
m21_2498 -> m21_24  [key=2, style=dotted];
m21_2499 -> m21_2484  [key=0, style=bold, color=blue];
m21_4310 -> m21_4311  [key=0, style=solid];
m21_4311 -> m21_4312  [key=0, style=solid];
m21_4312 -> m21_4310  [key=0, style=bold, color=blue];
m21_1201 -> m21_1202  [key=0, style=solid];
m21_1202 -> m21_1203  [key=0, style=solid];
m21_1202 -> m21_142  [key=2, style=dotted];
m21_1203 -> m21_1204  [key=0, style=solid];
m21_1203 -> m21_24  [key=2, style=dotted];
m21_1204 -> m21_1201  [key=0, style=bold, color=blue];
m21_4125 -> m21_4126  [key=0, style=solid];
m21_4126 -> m21_4127  [key=0, style=solid];
m21_4126 -> m21_4130  [key=2, style=dotted];
m21_4126 -> m21_4131  [key=2, style=dotted];
m21_4127 -> m21_4128  [key=0, style=solid];
m21_4127 -> m21_41  [key=2, style=dotted];
m21_4128 -> m21_4129  [key=0, style=solid];
m21_4128 -> m21_42  [key=2, style=dotted];
m21_4129 -> m21_4125  [key=0, style=bold, color=blue];
m21_3360 -> m21_3361  [key=0, style=solid, color=red];
m21_3361 -> m21_3362  [key=0, style=solid, color=red];
m21_3361 -> m21_999  [key=2, style=dotted, color=red];
m21_3361 -> m21_3363  [key=1, style=dashed, color=red, label=product];
m21_3361 -> m21_3364  [key=1, style=dashed, color=red, label=product];
m21_3361 -> m21_3365  [key=1, style=dashed, color=red, label=product];
m21_3361 -> m21_3366  [key=1, style=dashed, color=red, label=product];
m21_3361 -> m21_3367  [key=1, style=dashed, color=red, label=product];
m21_3362 -> m21_3363  [key=0, style=solid, color=red];
m21_3363 -> m21_3364  [key=0, style=solid, color=red];
m21_3363 -> m21_1000  [key=2, style=dotted, color=red];
m21_3364 -> m21_3365  [key=0, style=solid, color=red];
m21_3365 -> m21_3366  [key=0, style=solid, color=red];
m21_3366 -> m21_3367  [key=0, style=solid];
m21_3366 -> m21_142  [key=2, style=dotted];
m21_3367 -> m21_3368  [key=0, style=solid];
m21_3367 -> m21_188  [key=2, style=dotted];
m21_3367 -> m21_3373  [key=2, style=dotted];
m21_3367 -> m21_3374  [key=2, style=dotted];
m21_3367 -> m21_189  [key=2, style=dotted];
m21_3368 -> m21_3369  [key=0, style=solid];
m21_3368 -> m21_42  [key=2, style=dotted];
m21_3369 -> m21_3370  [key=0, style=solid];
m21_3370 -> m21_3371  [key=0, style=solid];
m21_3370 -> m21_188  [key=2, style=dotted];
m21_3370 -> m21_3373  [key=2, style=dotted];
m21_3370 -> m21_3374  [key=2, style=dotted];
m21_3370 -> m21_3375  [key=2, style=dotted];
m21_3370 -> m21_189  [key=2, style=dotted];
m21_3371 -> m21_3372  [key=0, style=solid];
m21_3371 -> m21_42  [key=2, style=dotted];
m21_3372 -> m21_3360  [key=0, style=bold, color=blue];
m21_370 -> m21_371  [key=0, style=solid];
m21_371 -> m21_372  [key=0, style=solid];
m21_371 -> m21_51  [key=2, style=dotted];
m21_371 -> m21_373  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_372 -> m21_373  [key=0, style=solid];
m21_372 -> m21_24  [key=2, style=dotted];
m21_373 -> m21_374  [key=0, style=solid];
m21_373 -> m21_24  [key=2, style=dotted];
m21_374 -> m21_370  [key=0, style=bold, color=blue];
m21_1517 -> m21_1518  [key=0, style=solid];
m21_1518 -> m21_1519  [key=0, style=solid];
m21_1518 -> m21_1525  [key=2, style=dotted];
m21_1518 -> m21_1520  [key=1, style=dashed, color=darkseagreen4, label=aa];
m21_1518 -> m21_1521  [key=1, style=dashed, color=darkseagreen4, label=aa];
m21_1518 -> m21_1522  [key=1, style=dashed, color=darkseagreen4, label=aa];
m21_1519 -> m21_1520  [key=0, style=solid];
m21_1520 -> m21_1521  [key=0, style=solid];
m21_1521 -> m21_1522  [key=0, style=solid];
m21_1522 -> m21_1523  [key=0, style=solid];
m21_1522 -> m21_142  [key=2, style=dotted];
m21_1523 -> m21_1524  [key=0, style=solid];
m21_1523 -> m21_24  [key=2, style=dotted];
m21_1524 -> m21_1517  [key=0, style=bold, color=blue];
m21_4132 -> m21_4133  [key=0, style=solid];
m21_4133 -> m21_4134  [key=0, style=solid];
m21_4133 -> m21_4133  [key=3, color=darkorchid, style=bold, label="Local variable string content"];
m21_4134 -> m21_4135  [key=0, style=solid];
m21_4134 -> m21_51  [key=2, style=dotted];
m21_4135 -> m21_4136  [key=0, style=solid];
m21_4136 -> m21_4137  [key=0, style=solid];
m21_4136 -> m21_24  [key=2, style=dotted];
m21_4137 -> m21_4132  [key=0, style=bold, color=blue];
m21_4 -> m21_5  [key=0, style=solid];
m21_2524 -> m21_2525  [key=0, style=solid];
m21_2525 -> m21_2526  [key=0, style=solid];
m21_2525 -> m21_209  [key=2, style=dotted];
m21_2525 -> m21_2527  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m21_2525 -> m21_2528  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m21_2526 -> m21_2527  [key=0, style=solid];
m21_2526 -> m21_2523  [key=2, style=dotted];
m21_2526 -> m21_878  [key=2, style=dotted];
m21_2527 -> m21_2528  [key=0, style=solid];
m21_2527 -> m21_2523  [key=2, style=dotted];
m21_2527 -> m21_878  [key=2, style=dotted];
m21_2528 -> m21_2529  [key=0, style=solid];
m21_2528 -> m21_41  [key=2, style=dotted];
m21_2528 -> m21_2530  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2529 -> m21_2530  [key=0, style=solid];
m21_2529 -> m21_42  [key=2, style=dotted];
m21_2530 -> m21_2531  [key=0, style=solid];
m21_2530 -> m21_51  [key=2, style=dotted];
m21_2531 -> m21_2532  [key=0, style=solid];
m21_2531 -> m21_24  [key=2, style=dotted];
m21_2532 -> m21_2524  [key=0, style=bold, color=blue];
m21_2062 -> m21_2063  [key=0, style=solid];
m21_2063 -> m21_2064  [key=0, style=solid];
m21_2063 -> m21_2063  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2064 -> m21_2065  [key=0, style=solid];
m21_2064 -> m21_51  [key=2, style=dotted];
m21_2064 -> m21_2066  [key=1, style=dashed, color=darkseagreen4, label=dic];
m21_2064 -> m21_2067  [key=1, style=dashed, color=darkseagreen4, label=dic];
m21_2064 -> m21_2068  [key=1, style=dashed, color=darkseagreen4, label=dic];
m21_2065 -> m21_2066  [key=0, style=solid];
m21_2065 -> m21_24  [key=2, style=dotted];
m21_2066 -> m21_2067  [key=0, style=solid];
m21_2066 -> m21_24  [key=2, style=dotted];
m21_2067 -> m21_2068  [key=0, style=solid];
m21_2067 -> m21_24  [key=2, style=dotted];
m21_2068 -> m21_2069  [key=0, style=solid];
m21_2068 -> m21_24  [key=2, style=dotted];
m21_2069 -> m21_2062  [key=0, style=bold, color=blue];
m21_3028 -> m21_3029  [key=0, style=solid];
m21_3029 -> m21_3030  [key=0, style=solid];
m21_3029 -> m21_3029  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m21_3030 -> m21_3031  [key=0, style=solid];
m21_3030 -> m21_1752  [key=2, style=dotted];
m21_3030 -> m21_3033  [key=1, style=dashed, color=darkseagreen4, label=uri];
m21_3031 -> m21_3032  [key=0, style=solid];
m21_3031 -> m21_142  [key=2, style=dotted];
m21_3033 -> m21_3034  [key=0, style=solid];
m21_3033 -> m21_24  [key=2, style=dotted];
m21_3032 -> m21_3033  [key=0, style=solid];
m21_3032 -> m21_51  [key=2, style=dotted];
m21_3034 -> m21_3028  [key=0, style=bold, color=blue];
m21_2181 -> m21_2182  [key=0, style=solid];
m21_2182 -> m21_2183  [key=0, style=solid];
m21_2182 -> m21_2184  [key=2, style=dotted];
m21_2183 -> m21_2181  [key=0, style=bold, color=blue];
m21_2941 -> m21_2942  [key=0, style=solid];
m21_2942 -> m21_2943  [key=0, style=solid];
m21_2943 -> m21_2941  [key=0, style=bold, color=blue];
m21_271 -> m21_272  [key=0, style=solid];
m21_272 -> m21_273  [key=0, style=solid];
m21_273 -> m21_271  [key=0, style=bold, color=blue];
m21_3111 -> m21_3112  [key=0, style=solid];
m21_3112 -> m21_3113  [key=0, style=solid];
m21_3112 -> m21_147  [key=2, style=dotted];
m21_3112 -> m21_3115  [key=1, style=dashed, color=darkseagreen4, label=d1];
m21_3112 -> m21_3116  [key=1, style=dashed, color=darkseagreen4, label=d1];
m21_3113 -> m21_3114  [key=0, style=solid];
m21_3113 -> m21_142  [key=2, style=dotted];
m21_3115 -> m21_3116  [key=0, style=solid];
m21_3115 -> m21_24  [key=2, style=dotted];
m21_3116 -> m21_3117  [key=0, style=solid];
m21_3116 -> m21_24  [key=2, style=dotted];
m21_3114 -> m21_3115  [key=0, style=solid];
m21_3114 -> m21_51  [key=2, style=dotted];
m21_3114 -> m21_3116  [key=1, style=dashed, color=darkseagreen4, label=d2];
m21_3117 -> m21_3111  [key=0, style=bold, color=blue];
m21_4234 -> m21_4235  [key=0, style=solid];
m21_4235 -> m21_4236  [key=0, style=solid];
m21_4235 -> m21_4240  [key=2, style=dotted];
m21_4236 -> m21_4237  [key=0, style=solid];
m21_4236 -> m21_41  [key=2, style=dotted];
m21_4236 -> m21_4238  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4237 -> m21_4238  [key=0, style=solid];
m21_4237 -> m21_42  [key=2, style=dotted];
m21_4238 -> m21_4239  [key=0, style=solid];
m21_4238 -> m21_51  [key=2, style=dotted];
m21_4239 -> m21_4234  [key=0, style=bold, color=blue];
m21_14 -> m21_0  [key=0, style=bold, color=blue];
m21_2035 -> m21_2036  [key=0, style=solid];
m21_2036 -> m21_2037  [key=0, style=solid];
m21_2036 -> m21_878  [key=2, style=dotted];
m21_2037 -> m21_2035  [key=0, style=bold, color=blue];
m21_3804 -> m21_3805  [key=0, style=solid];
m21_3805 -> m21_3806  [key=0, style=solid];
m21_3805 -> m21_3812  [key=2, style=dotted];
m21_3806 -> m21_3807  [key=0, style=solid];
m21_3806 -> m21_142  [key=2, style=dotted];
m21_3806 -> m21_3808  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3807 -> m21_3808  [key=0, style=solid];
m21_3807 -> m21_24  [key=2, style=dotted];
m21_3808 -> m21_3809  [key=0, style=solid];
m21_3808 -> m21_51  [key=2, style=dotted];
m21_3808 -> m21_3810  [key=1, style=dashed, color=darkseagreen4, label=tuple2];
m21_3809 -> m21_3810  [key=0, style=solid];
m21_3809 -> m21_24  [key=2, style=dotted];
m21_3810 -> m21_3811  [key=0, style=solid];
m21_3810 -> m21_24  [key=2, style=dotted];
m21_3811 -> m21_3804  [key=0, style=bold, color=blue];
m21_3388 -> m21_3389  [key=0, style=solid];
m21_3389 -> m21_3390  [key=0, style=solid];
m21_3390 -> m21_3388  [key=0, style=bold, color=blue];
m21_2106 -> m21_2108  [key=0, style=solid];
m21_2108 -> m21_2109  [key=0, style=solid];
m21_2109 -> m21_2106  [key=0, style=bold, color=blue];
m21_2758 -> m21_2759  [key=0, style=solid];
m21_2759 -> m21_2760  [key=0, style=solid];
m21_2759 -> m21_51  [key=2, style=dotted];
m21_2760 -> m21_2761  [key=0, style=solid];
m21_2760 -> m21_24  [key=2, style=dotted];
m21_2761 -> m21_2758  [key=0, style=bold, color=blue];
m21_3757 -> m21_3758  [key=0, style=solid];
m21_3758 -> m21_3759  [key=0, style=solid];
m21_3759 -> m21_3757  [key=0, style=bold, color=blue];
m21_348 -> m21_349  [key=0, style=solid];
m21_349 -> m21_350  [key=0, style=solid];
m21_349 -> m21_51  [key=2, style=dotted];
m21_349 -> m21_351  [key=1, style=dashed, color=darkseagreen4, label=otc];
m21_349 -> m21_352  [key=1, style=dashed, color=darkseagreen4, label=otc];
m21_349 -> m21_353  [key=1, style=dashed, color=darkseagreen4, label=otc];
m21_349 -> m21_354  [key=1, style=dashed, color=darkseagreen4, label=otc];
m21_350 -> m21_351  [key=0, style=solid];
m21_350 -> m21_165  [key=2, style=dotted];
m21_351 -> m21_352  [key=0, style=solid];
m21_351 -> m21_24  [key=2, style=dotted];
m21_352 -> m21_353  [key=0, style=solid];
m21_352 -> m21_24  [key=2, style=dotted];
m21_353 -> m21_354  [key=0, style=solid];
m21_353 -> m21_24  [key=2, style=dotted];
m21_354 -> m21_355  [key=0, style=solid];
m21_354 -> m21_165  [key=2, style=dotted];
m21_355 -> m21_348  [key=0, style=bold, color=blue];
m21_2660 -> m21_2661  [key=0, style=solid];
m21_2661 -> m21_2662  [key=0, style=solid];
m21_2661 -> m21_2661  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2662 -> m21_2663  [key=0, style=solid];
m21_2662 -> m21_16  [key=2, style=dotted];
m21_2662 -> m21_386  [key=2, style=dotted];
m21_2662 -> m21_2665  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_2663 -> m21_2664  [key=0, style=solid];
m21_2665 -> m21_2666  [key=0, style=solid];
m21_2665 -> m21_20  [key=2, style=dotted];
m21_2664 -> m21_2665  [key=0, style=solid];
m21_2664 -> m21_19  [key=2, style=dotted];
m21_2666 -> m21_2667  [key=0, style=solid];
m21_2666 -> m21_24  [key=2, style=dotted];
m21_2667 -> m21_2660  [key=0, style=bold, color=blue];
m21_2594 -> m21_2595  [key=0, style=solid];
m21_2595 -> m21_2596  [key=0, style=solid];
m21_2595 -> m21_2604  [key=2, style=dotted];
m21_2595 -> m21_2605  [key=2, style=dotted];
m21_2595 -> m21_1000  [key=2, style=dotted];
m21_2595 -> m21_1155  [key=2, style=dotted];
m21_2595 -> m21_142  [key=2, style=dotted];
m21_2595 -> m21_2597  [key=1, style=dashed, color=red, label=serializeObject];
m21_2596 -> m21_2597  [key=0, style=solid, color=red];
m21_2596 -> m21_24  [key=2, style=dotted];
m21_2597 -> m21_2598  [key=0, style=solid, color=red];
m21_2597 -> m21_16  [key=2, style=dotted, color=red];
m21_2597 -> m21_386  [key=2, style=dotted, color=red];
m21_2597 -> m21_2600  [key=1, style=dashed, color=red, label=reader];
m21_2598 -> m21_2599  [key=0, style=solid, color=red];
m21_2600 -> m21_2601  [key=0, style=solid];
m21_2600 -> m21_20  [key=2, style=dotted];
m21_2600 -> m21_2602  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m21_2599 -> m21_2600  [key=0, style=solid];
m21_2599 -> m21_19  [key=2, style=dotted];
m21_2601 -> m21_2602  [key=0, style=solid];
m21_2601 -> m21_1155  [key=2, style=dotted];
m21_2601 -> m21_24  [key=2, style=dotted];
m21_2602 -> m21_2603  [key=0, style=solid];
m21_2602 -> m21_1000  [key=2, style=dotted];
m21_2602 -> m21_24  [key=2, style=dotted];
m21_2603 -> m21_2594  [key=0, style=bold, color=blue];
m21_2832 -> m21_2833  [key=0, style=solid];
m21_2833 -> m21_2834  [key=0, style=solid];
m21_2833 -> m21_2836  [key=2, style=dotted];
m21_2833 -> m21_142  [key=2, style=dotted];
m21_2834 -> m21_2835  [key=0, style=solid];
m21_2834 -> m21_51  [key=2, style=dotted];
m21_2835 -> m21_2832  [key=0, style=bold, color=blue];
m21_906 -> m21_907  [key=0, style=solid];
m21_907 -> m21_908  [key=0, style=solid];
m21_907 -> m21_915  [key=2, style=dotted];
m21_907 -> m21_909  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_907 -> m21_910  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_907 -> m21_911  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_907 -> m21_912  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_908 -> m21_909  [key=0, style=solid];
m21_909 -> m21_910  [key=0, style=solid];
m21_910 -> m21_911  [key=0, style=solid];
m21_911 -> m21_912  [key=0, style=solid];
m21_912 -> m21_913  [key=0, style=solid];
m21_912 -> m21_916  [key=2, style=dotted];
m21_913 -> m21_914  [key=0, style=solid];
m21_913 -> m21_42  [key=2, style=dotted];
m21_914 -> m21_906  [key=0, style=bold, color=blue];
m21_3838 -> m21_3839  [key=0, style=solid];
m21_3839 -> m21_3840  [key=0, style=solid];
m21_3839 -> m21_3842  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3839 -> m21_3845  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3839 -> m21_3839  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3840 -> m21_3841  [key=0, style=solid];
m21_3840 -> m21_51  [key=2, style=dotted];
m21_3842 -> m21_3843  [key=0, style=solid];
m21_3842 -> m21_73  [key=2, style=dotted];
m21_3842 -> m21_3844  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3841 -> m21_3842  [key=0, style=solid];
m21_3841 -> m21_2401  [key=2, style=dotted];
m21_3841 -> m21_24  [key=2, style=dotted];
m21_3843 -> m21_3838  [key=0, style=bold, color=blue];
m21_645 -> m21_646  [key=0, style=solid];
m21_646 -> m21_647  [key=0, style=solid];
m21_646 -> m21_715  [key=2, style=dotted];
m21_646 -> m21_716  [key=2, style=dotted];
m21_646 -> m21_19  [key=2, style=dotted];
m21_646 -> m21_648  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_649  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_650  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_651  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_652  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_653  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_718  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_654  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_655  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_656  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_657  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_658  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_659  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_661  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_662  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_663  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_664  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_665  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_666  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_667  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_668  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_669  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_670  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_671  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_672  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_673  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_674  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_675  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_676  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_677  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_678  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_679  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_680  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_681  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_682  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_683  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_684  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_685  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_686  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_687  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_688  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_689  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_690  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_691  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_692  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_693  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_694  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_695  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_696  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_698  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_699  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_700  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_701  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_703  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_704  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_705  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_706  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_707  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_708  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_709  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_710  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_711  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_712  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_646 -> m21_713  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_647 -> m21_648  [key=0, style=solid];
m21_647 -> m21_558  [key=2, style=dotted];
m21_647 -> m21_649  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m21_647 -> m21_651  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m21_647 -> m21_652  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m21_648 -> m21_649  [key=0, style=solid];
m21_649 -> m21_650  [key=0, style=solid];
m21_649 -> m21_24  [key=2, style=dotted];
m21_650 -> m21_651  [key=0, style=solid];
m21_650 -> m21_559  [key=2, style=dotted];
m21_651 -> m21_652  [key=0, style=solid];
m21_652 -> m21_653  [key=0, style=solid];
m21_652 -> m21_24  [key=2, style=dotted];
m21_653 -> m21_654  [key=0, style=solid];
m21_653 -> m21_73  [key=2, style=dotted];
m21_653 -> m21_717  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_654 -> m21_655  [key=0, style=solid];
m21_655 -> m21_656  [key=0, style=solid];
m21_655 -> m21_24  [key=2, style=dotted];
m21_656 -> m21_657  [key=0, style=solid];
m21_657 -> m21_658  [key=0, style=solid];
m21_657 -> m21_24  [key=2, style=dotted];
m21_658 -> m21_659  [key=0, style=solid];
m21_658 -> m21_560  [key=2, style=dotted];
m21_659 -> m21_660  [key=0, style=solid];
m21_659 -> m21_560  [key=2, style=dotted];
m21_659 -> m21_24  [key=2, style=dotted];
m21_661 -> m21_662  [key=0, style=solid];
m21_662 -> m21_663  [key=0, style=solid];
m21_662 -> m21_24  [key=2, style=dotted];
m21_663 -> m21_664  [key=0, style=solid];
m21_663 -> m21_248  [key=2, style=dotted];
m21_663 -> m21_562  [key=2, style=dotted];
m21_664 -> m21_665  [key=0, style=solid];
m21_664 -> m21_24  [key=2, style=dotted];
m21_665 -> m21_666  [key=0, style=solid];
m21_665 -> m21_563  [key=2, style=dotted];
m21_666 -> m21_667  [key=0, style=solid];
m21_666 -> m21_564  [key=2, style=dotted];
m21_666 -> m21_24  [key=2, style=dotted];
m21_667 -> m21_668  [key=0, style=solid];
m21_668 -> m21_669  [key=0, style=solid];
m21_668 -> m21_24  [key=2, style=dotted];
m21_669 -> m21_670  [key=0, style=solid];
m21_670 -> m21_671  [key=0, style=solid];
m21_670 -> m21_24  [key=2, style=dotted];
m21_671 -> m21_672  [key=0, style=solid];
m21_672 -> m21_673  [key=0, style=solid];
m21_672 -> m21_24  [key=2, style=dotted];
m21_673 -> m21_674  [key=0, style=solid];
m21_674 -> m21_675  [key=0, style=solid];
m21_674 -> m21_24  [key=2, style=dotted];
m21_675 -> m21_676  [key=0, style=solid];
m21_676 -> m21_677  [key=0, style=solid];
m21_676 -> m21_24  [key=2, style=dotted];
m21_677 -> m21_678  [key=0, style=solid];
m21_678 -> m21_679  [key=0, style=solid];
m21_678 -> m21_24  [key=2, style=dotted];
m21_679 -> m21_680  [key=0, style=solid];
m21_680 -> m21_681  [key=0, style=solid];
m21_680 -> m21_24  [key=2, style=dotted];
m21_681 -> m21_682  [key=0, style=solid];
m21_682 -> m21_683  [key=0, style=solid];
m21_682 -> m21_24  [key=2, style=dotted];
m21_683 -> m21_684  [key=0, style=solid];
m21_684 -> m21_685  [key=0, style=solid];
m21_684 -> m21_24  [key=2, style=dotted];
m21_685 -> m21_686  [key=0, style=solid];
m21_686 -> m21_687  [key=0, style=solid];
m21_686 -> m21_24  [key=2, style=dotted];
m21_687 -> m21_688  [key=0, style=solid];
m21_688 -> m21_689  [key=0, style=solid];
m21_688 -> m21_24  [key=2, style=dotted];
m21_689 -> m21_690  [key=0, style=solid];
m21_690 -> m21_691  [key=0, style=solid];
m21_690 -> m21_24  [key=2, style=dotted];
m21_691 -> m21_692  [key=0, style=solid];
m21_692 -> m21_693  [key=0, style=solid];
m21_692 -> m21_24  [key=2, style=dotted];
m21_693 -> m21_694  [key=0, style=solid];
m21_694 -> m21_695  [key=0, style=solid];
m21_694 -> m21_24  [key=2, style=dotted];
m21_695 -> m21_696  [key=0, style=solid];
m21_696 -> m21_697  [key=0, style=solid];
m21_696 -> m21_24  [key=2, style=dotted];
m21_698 -> m21_699  [key=0, style=solid];
m21_699 -> m21_700  [key=0, style=solid];
m21_699 -> m21_24  [key=2, style=dotted];
m21_700 -> m21_701  [key=0, style=solid];
m21_701 -> m21_702  [key=0, style=solid];
m21_701 -> m21_24  [key=2, style=dotted];
m21_703 -> m21_704  [key=0, style=solid];
m21_704 -> m21_705  [key=0, style=solid];
m21_704 -> m21_24  [key=2, style=dotted];
m21_705 -> m21_706  [key=0, style=solid];
m21_706 -> m21_707  [key=0, style=solid];
m21_706 -> m21_24  [key=2, style=dotted];
m21_707 -> m21_708  [key=0, style=solid];
m21_707 -> m21_24  [key=2, style=dotted];
m21_708 -> m21_709  [key=0, style=solid];
m21_709 -> m21_710  [key=0, style=solid];
m21_709 -> m21_24  [key=2, style=dotted];
m21_710 -> m21_711  [key=0, style=solid];
m21_711 -> m21_712  [key=0, style=solid];
m21_711 -> m21_24  [key=2, style=dotted];
m21_712 -> m21_713  [key=0, style=solid];
m21_713 -> m21_714  [key=0, style=solid];
m21_713 -> m21_24  [key=2, style=dotted];
m21_660 -> m21_661  [key=0, style=solid];
m21_660 -> m21_561  [key=2, style=dotted];
m21_660 -> m21_662  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m21_697 -> m21_698  [key=0, style=solid];
m21_697 -> m21_565  [key=2, style=dotted];
m21_697 -> m21_699  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m21_702 -> m21_703  [key=0, style=solid];
m21_702 -> m21_566  [key=2, style=dotted];
m21_702 -> m21_704  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m21_714 -> m21_645  [key=0, style=bold, color=blue];
m21_3155 -> m21_3156  [key=0, style=solid];
m21_3156 -> m21_3157  [key=0, style=solid];
m21_3156 -> m21_3160  [key=2, style=dotted];
m21_3156 -> m21_3161  [key=2, style=dotted];
m21_3157 -> m21_3158  [key=0, style=solid];
m21_3157 -> m21_41  [key=2, style=dotted];
m21_3158 -> m21_3159  [key=0, style=solid];
m21_3158 -> m21_42  [key=2, style=dotted];
m21_3159 -> m21_3155  [key=0, style=bold, color=blue];
m21_4366 -> m21_4367  [key=0, style=solid];
m21_4367 -> m21_4368  [key=0, style=solid];
m21_4367 -> m21_4374  [key=2, style=dotted];
m21_4368 -> m21_4369  [key=0, style=solid];
m21_4368 -> m21_24  [key=2, style=dotted];
m21_4369 -> m21_4370  [key=0, style=solid];
m21_4369 -> m21_4372  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m21_4369 -> m21_4369  [key=3, color=darkorchid, style=bold, label="Local variable string propertyValue"];
m21_4370 -> m21_4371  [key=0, style=solid];
m21_4372 -> m21_4373  [key=0, style=solid];
m21_4372 -> m21_4375  [key=2, style=dotted];
m21_4372 -> m21_24  [key=2, style=dotted];
m21_4371 -> m21_4372  [key=0, style=solid];
m21_4371 -> m21_51  [key=2, style=dotted];
m21_4373 -> m21_4366  [key=0, style=bold, color=blue];
m21_2806 -> m21_2807  [key=0, style=solid];
m21_2807 -> m21_2808  [key=0, style=solid];
m21_2807 -> m21_2811  [key=2, style=dotted];
m21_2808 -> m21_2809  [key=0, style=solid];
m21_2808 -> m21_41  [key=2, style=dotted];
m21_2809 -> m21_2810  [key=0, style=solid];
m21_2809 -> m21_24  [key=2, style=dotted];
m21_2810 -> m21_2806  [key=0, style=bold, color=blue];
m21_2133 -> m21_2134  [key=0, style=solid];
m21_2133 -> m21_2135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_2133 -> m21_2136  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_2134 -> m21_2135  [key=0, style=solid];
m21_2134 -> m21_2136  [key=0, style=solid];
m21_2135 -> m21_2138  [key=0, style=solid];
m21_2135 -> m21_2139  [key=2, style=dotted];
m21_2135 -> m21_2140  [key=2, style=dotted];
m21_2136 -> m21_2137  [key=0, style=solid];
m21_2136 -> m21_2138  [key=0, style=solid];
m21_2137 -> m21_2136  [key=0, style=solid];
m21_2137 -> m21_878  [key=2, style=dotted];
m21_2137 -> m21_2137  [key=1, style=dashed, color=darkseagreen4, label=entry];
m21_2138 -> m21_2133  [key=0, style=bold, color=blue];
m21_2910 -> m21_2911  [key=0, style=solid];
m21_2911 -> m21_2912  [key=0, style=solid];
m21_2911 -> m21_2439  [key=2, style=dotted];
m21_2912 -> m21_2910  [key=0, style=bold, color=blue];
m21_3851 -> m21_3852  [key=0, style=solid];
m21_3852 -> m21_3853  [key=0, style=solid];
m21_3852 -> m21_3847  [key=2, style=dotted];
m21_3852 -> m21_3857  [key=1, style=dashed, color=darkseagreen4, label=p];
m21_3853 -> m21_3854  [key=0, style=solid];
m21_3853 -> m21_142  [key=2, style=dotted];
m21_3857 -> m21_3858  [key=0, style=solid];
m21_3857 -> m21_188  [key=2, style=dotted];
m21_3857 -> m21_189  [key=2, style=dotted];
m21_3854 -> m21_3855  [key=0, style=solid];
m21_3854 -> m21_24  [key=2, style=dotted];
m21_3855 -> m21_3856  [key=0, style=solid];
m21_3855 -> m21_1909  [key=2, style=dotted];
m21_3856 -> m21_3857  [key=0, style=solid];
m21_3856 -> m21_3856  [key=1, style=dashed, color=darkseagreen4, label=r];
m21_3858 -> m21_3859  [key=0, style=solid];
m21_3858 -> m21_24  [key=2, style=dotted];
m21_3859 -> m21_3851  [key=0, style=bold, color=blue];
m21_1488 -> m21_1489  [key=0, style=solid];
m21_1489 -> m21_1490  [key=0, style=solid];
m21_1489 -> m21_1489  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1490 -> m21_1491  [key=0, style=solid];
m21_1490 -> m21_51  [key=2, style=dotted];
m21_1490 -> m21_1492  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1490 -> m21_1493  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1491 -> m21_1492  [key=0, style=solid];
m21_1491 -> m21_24  [key=2, style=dotted];
m21_1492 -> m21_1493  [key=0, style=solid];
m21_1492 -> m21_24  [key=2, style=dotted];
m21_1493 -> m21_1494  [key=0, style=solid];
m21_1493 -> m21_24  [key=2, style=dotted];
m21_1494 -> m21_1488  [key=0, style=bold, color=blue];
m21_3483 -> m21_3484  [key=0, style=solid];
m21_3484 -> m21_3485  [key=0, style=solid];
m21_3484 -> m21_209  [key=2, style=dotted];
m21_3484 -> m21_389  [key=2, style=dotted];
m21_3485 -> m21_3486  [key=0, style=solid];
m21_3485 -> m21_41  [key=2, style=dotted];
m21_3485 -> m21_3487  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3486 -> m21_3487  [key=0, style=solid];
m21_3486 -> m21_42  [key=2, style=dotted];
m21_3487 -> m21_3488  [key=0, style=solid];
m21_3487 -> m21_51  [key=2, style=dotted];
m21_3487 -> m21_3489  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3487 -> m21_3490  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3488 -> m21_3489  [key=0, style=solid];
m21_3488 -> m21_24  [key=2, style=dotted];
m21_3489 -> m21_3490  [key=0, style=solid];
m21_3489 -> m21_389  [key=2, style=dotted];
m21_3489 -> m21_24  [key=2, style=dotted];
m21_3490 -> m21_3491  [key=0, style=solid];
m21_3490 -> m21_389  [key=2, style=dotted];
m21_3490 -> m21_24  [key=2, style=dotted];
m21_3491 -> m21_3483  [key=0, style=bold, color=blue];
m21_3699 -> m21_3700  [key=0, style=solid];
m21_3700 -> m21_3701  [key=0, style=solid];
m21_3700 -> m21_3703  [key=2, style=dotted];
m21_3700 -> m21_188  [key=2, style=dotted];
m21_3700 -> m21_561  [key=2, style=dotted];
m21_3700 -> m21_211  [key=2, style=dotted];
m21_3701 -> m21_3702  [key=0, style=solid];
m21_3701 -> m21_42  [key=2, style=dotted];
m21_3702 -> m21_3699  [key=0, style=bold, color=blue];
m21_2450 -> m21_2451  [key=0, style=solid];
m21_2451 -> m21_2452  [key=0, style=solid];
m21_2451 -> m21_2439  [key=2, style=dotted];
m21_2452 -> m21_2450  [key=0, style=bold, color=blue];
m21_1848 -> m21_1849  [key=0, style=solid];
m21_1849 -> m21_1850  [key=0, style=solid];
m21_1849 -> m21_1853  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1849 -> m21_1821  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1850 -> m21_1851  [key=0, style=solid];
m21_1850 -> m21_73  [key=2, style=dotted];
m21_1850 -> m21_1852  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1851 -> m21_1848  [key=0, style=bold, color=blue];
m21_837 -> m21_838  [key=0, style=solid];
m21_838 -> m21_839  [key=0, style=solid];
m21_838 -> m21_832  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_839 -> m21_840  [key=0, style=solid];
m21_839 -> m21_51  [key=2, style=dotted];
m21_839 -> m21_841  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_840 -> m21_841  [key=0, style=solid];
m21_840 -> m21_843  [key=2, style=dotted];
m21_841 -> m21_842  [key=0, style=solid];
m21_841 -> m21_24  [key=2, style=dotted];
m21_842 -> m21_837  [key=0, style=bold, color=blue];
m21_2141 -> m21_2142  [key=0, style=solid];
m21_2142 -> m21_2143  [key=0, style=solid];
m21_2142 -> m21_335  [key=2, style=dotted];
m21_2143 -> m21_2141  [key=0, style=bold, color=blue];
m21_2511 -> m21_2512  [key=0, style=solid];
m21_2512 -> m21_2513  [key=0, style=solid];
m21_2512 -> m21_2512  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2513 -> m21_2514  [key=0, style=solid];
m21_2513 -> m21_188  [key=2, style=dotted];
m21_2513 -> m21_309  [key=2, style=dotted];
m21_2513 -> m21_2515  [key=1, style=dashed, color=darkseagreen4, label=dic];
m21_2514 -> m21_2515  [key=0, style=solid];
m21_2514 -> m21_388  [key=2, style=dotted];
m21_2514 -> m21_24  [key=2, style=dotted];
m21_2515 -> m21_2516  [key=0, style=solid];
m21_2515 -> m21_24  [key=2, style=dotted];
m21_2516 -> m21_2511  [key=0, style=bold, color=blue];
m21_2652 -> m21_2653  [key=0, style=solid];
m21_2653 -> m21_2654  [key=0, style=solid];
m21_2653 -> m21_51  [key=2, style=dotted];
m21_2654 -> m21_2655  [key=0, style=solid];
m21_2654 -> m21_24  [key=2, style=dotted];
m21_2655 -> m21_2652  [key=0, style=bold, color=blue];
m21_2388 -> m21_2389  [key=0, style=solid];
m21_2389 -> m21_2390  [key=0, style=solid];
m21_2389 -> m21_2400  [key=2, style=dotted];
m21_2389 -> m21_2391  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m21_2389 -> m21_2392  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m21_2389 -> m21_2396  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m21_2389 -> m21_2397  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m21_2390 -> m21_2391  [key=0, style=solid];
m21_2390 -> m21_2401  [key=2, style=dotted];
m21_2391 -> m21_2392  [key=0, style=solid];
m21_2391 -> m21_2401  [key=2, style=dotted];
m21_2392 -> m21_2393  [key=0, style=solid];
m21_2392 -> m21_41  [key=2, style=dotted];
m21_2392 -> m21_2394  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2392 -> m21_2395  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2396 -> m21_2397  [key=0, style=solid];
m21_2396 -> m21_2402  [key=2, style=dotted];
m21_2396 -> m21_24  [key=2, style=dotted];
m21_2397 -> m21_2398  [key=0, style=solid];
m21_2397 -> m21_2402  [key=2, style=dotted];
m21_2397 -> m21_24  [key=2, style=dotted];
m21_2393 -> m21_2394  [key=0, style=solid];
m21_2393 -> m21_2393  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m21_2394 -> m21_2395  [key=0, style=solid];
m21_2394 -> m21_42  [key=2, style=dotted];
m21_2395 -> m21_2396  [key=0, style=solid];
m21_2395 -> m21_51  [key=2, style=dotted];
m21_2395 -> m21_2397  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m21_2395 -> m21_2398  [key=1, style=dashed, color=darkseagreen4, label=newTestObject];
m21_2398 -> m21_2399  [key=0, style=solid];
m21_2398 -> m21_165  [key=2, style=dotted];
m21_2399 -> m21_2388  [key=0, style=bold, color=blue];
m21_1044 -> m21_1045  [key=0, style=solid];
m21_1045 -> m21_1046  [key=0, style=solid];
m21_1045 -> m21_1045  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m21_1046 -> m21_1047  [key=0, style=solid];
m21_1046 -> m21_982  [key=2, style=dotted];
m21_1046 -> m21_1048  [key=1, style=dashed, color=darkseagreen4, label=p];
m21_1047 -> m21_1048  [key=0, style=solid];
m21_1047 -> m21_571  [key=2, style=dotted];
m21_1047 -> m21_24  [key=2, style=dotted];
m21_1048 -> m21_1049  [key=0, style=solid];
m21_1048 -> m21_571  [key=2, style=dotted];
m21_1048 -> m21_42  [key=2, style=dotted];
m21_1049 -> m21_1044  [key=0, style=bold, color=blue];
m21_2147 -> m21_2148  [key=0, style=solid];
m21_2148 -> m21_2149  [key=0, style=solid];
m21_2148 -> m21_2150  [key=2, style=dotted];
m21_2149 -> m21_2147  [key=0, style=bold, color=blue];
m21_1398 -> m21_1399  [key=0, style=solid];
m21_1399 -> m21_1400  [key=0, style=solid];
m21_1399 -> m21_1408  [key=2, style=dotted];
m21_1399 -> m21_1401  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_1399 -> m21_1402  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_1400 -> m21_1401  [key=0, style=solid];
m21_1400 -> m21_1332  [key=2, style=dotted];
m21_1401 -> m21_1402  [key=0, style=solid];
m21_1401 -> m21_1332  [key=2, style=dotted];
m21_1402 -> m21_1403  [key=0, style=solid];
m21_1402 -> m21_1340  [key=2, style=dotted];
m21_1402 -> m21_1341  [key=2, style=dotted];
m21_1402 -> m21_1404  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1403 -> m21_1404  [key=0, style=solid];
m21_1403 -> m21_24  [key=2, style=dotted];
m21_1404 -> m21_1405  [key=0, style=solid];
m21_1404 -> m21_1340  [key=2, style=dotted];
m21_1404 -> m21_249  [key=2, style=dotted];
m21_1404 -> m21_1406  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_1405 -> m21_1406  [key=0, style=solid];
m21_1405 -> m21_24  [key=2, style=dotted];
m21_1406 -> m21_1407  [key=0, style=solid];
m21_1406 -> m21_24  [key=2, style=dotted];
m21_1407 -> m21_1398  [key=0, style=bold, color=blue];
m21_1910 -> m21_1911  [key=0, style=solid];
m21_1911 -> m21_1912  [key=0, style=solid];
m21_1911 -> m21_1135  [key=2, style=dotted];
m21_1911 -> m21_1913  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1912 -> m21_1910  [key=0, style=bold, color=blue];
m21_2701 -> m21_2702  [key=0, style=solid];
m21_2702 -> m21_2701  [key=0, style=bold, color=blue];
m21_2330 -> m21_2377  [key=0, style=solid];
m21_2330 -> m21_2378  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2330 -> m21_2379  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2330 -> m21_2380  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2330 -> m21_2381  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2330 -> m21_2382  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2330 -> m21_2383  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2330 -> m21_2384  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2330 -> m21_2385  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2330 -> m21_2386  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2377 -> m21_2378  [key=0, style=solid];
m21_2378 -> m21_2379  [key=0, style=solid];
m21_2379 -> m21_2380  [key=0, style=solid];
m21_2380 -> m21_2381  [key=0, style=solid];
m21_2381 -> m21_2382  [key=0, style=solid];
m21_2382 -> m21_2383  [key=0, style=solid];
m21_2383 -> m21_2384  [key=0, style=solid];
m21_2384 -> m21_2385  [key=0, style=solid];
m21_2385 -> m21_2386  [key=0, style=solid];
m21_2386 -> m21_2387  [key=0, style=solid];
m21_2387 -> m21_2330  [key=0, style=bold, color=blue];
m21_894 -> m21_895  [key=0, style=solid];
m21_895 -> m21_896  [key=0, style=solid];
m21_895 -> m21_898  [key=2, style=dotted];
m21_896 -> m21_897  [key=0, style=solid];
m21_896 -> m21_876  [key=2, style=dotted];
m21_896 -> m21_899  [key=2, style=dotted];
m21_897 -> m21_894  [key=0, style=bold, color=blue];
m21_3404 -> m21_3405  [key=0, style=solid];
m21_3405 -> m21_3406  [key=0, style=solid];
m21_3405 -> m21_880  [key=2, style=dotted];
m21_3405 -> m21_3410  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_3406 -> m21_3407  [key=0, style=solid];
m21_3406 -> m21_3417  [key=2, style=dotted];
m21_3406 -> m21_3408  [key=1, style=dashed, color=darkseagreen4, label=writer];
m21_3406 -> m21_3409  [key=1, style=dashed, color=darkseagreen4, label=writer];
m21_3410 -> m21_3411  [key=0, style=solid];
m21_3410 -> m21_962  [key=2, style=dotted];
m21_3407 -> m21_3408  [key=0, style=solid];
m21_3407 -> m21_3418  [key=2, style=dotted];
m21_3408 -> m21_3409  [key=0, style=solid];
m21_3408 -> m21_3419  [key=2, style=dotted];
m21_3409 -> m21_3410  [key=0, style=solid];
m21_3409 -> m21_3420  [key=2, style=dotted];
m21_3411 -> m21_3412  [key=0, style=solid];
m21_3411 -> m21_3421  [key=2, style=dotted];
m21_3411 -> m21_1120  [key=2, style=dotted];
m21_3412 -> m21_3413  [key=0, style=solid];
m21_3412 -> m21_3422  [key=2, style=dotted];
m21_3412 -> m21_3415  [key=1, style=dashed, color=darkseagreen4, label=a];
m21_3413 -> m21_3414  [key=0, style=solid];
m21_3415 -> m21_3416  [key=0, style=solid];
m21_3415 -> m21_816  [key=2, style=dotted];
m21_3415 -> m21_42  [key=2, style=dotted];
m21_3414 -> m21_3415  [key=0, style=solid];
m21_3414 -> m21_388  [key=2, style=dotted];
m21_3414 -> m21_24  [key=2, style=dotted];
m21_3416 -> m21_3404  [key=0, style=bold, color=blue];
m21_1422 -> m21_1423  [key=0, style=solid];
m21_1423 -> m21_1424  [key=0, style=solid];
m21_1424 -> m21_1425  [key=0, style=solid];
m21_1424 -> m21_142  [key=2, style=dotted];
m21_1425 -> m21_1426  [key=0, style=solid];
m21_1425 -> m21_24  [key=2, style=dotted];
m21_1426 -> m21_1427  [key=0, style=solid];
m21_1426 -> m21_142  [key=2, style=dotted];
m21_1427 -> m21_1428  [key=0, style=solid];
m21_1427 -> m21_24  [key=2, style=dotted];
m21_1428 -> m21_1422  [key=0, style=bold, color=blue];
m21_1760 -> m21_1761  [key=0, style=solid];
m21_1761 -> m21_1762  [key=0, style=solid];
m21_1761 -> m21_1765  [key=2, style=dotted];
m21_1761 -> m21_147  [key=2, style=dotted];
m21_1762 -> m21_1763  [key=0, style=solid];
m21_1762 -> m21_41  [key=2, style=dotted];
m21_1763 -> m21_1764  [key=0, style=solid];
m21_1763 -> m21_42  [key=2, style=dotted];
m21_1764 -> m21_1760  [key=0, style=bold, color=blue];
m21_2823 -> m21_2824  [key=0, style=solid];
m21_2824 -> m21_2825  [key=0, style=solid];
m21_2825 -> m21_2823  [key=0, style=bold, color=blue];
m21_3131 -> m21_3132  [key=0, style=solid];
m21_3132 -> m21_3133  [key=0, style=solid];
m21_3132 -> m21_3132  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3133 -> m21_3134  [key=0, style=solid];
m21_3133 -> m21_188  [key=2, style=dotted];
m21_3133 -> m21_309  [key=2, style=dotted];
m21_3133 -> m21_3135  [key=1, style=dashed, color=darkseagreen4, label=value];
m21_3134 -> m21_3135  [key=0, style=solid];
m21_3134 -> m21_843  [key=2, style=dotted];
m21_3135 -> m21_3136  [key=0, style=solid];
m21_3135 -> m21_3123  [key=2, style=dotted];
m21_3135 -> m21_3055  [key=2, style=dotted];
m21_3136 -> m21_3131  [key=0, style=bold, color=blue];
m21_3917 -> m21_3918  [key=0, style=solid];
m21_3918 -> m21_3919  [key=0, style=solid];
m21_3918 -> m21_3918  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3919 -> m21_3920  [key=0, style=solid];
m21_3919 -> m21_51  [key=2, style=dotted];
m21_3920 -> m21_3921  [key=0, style=solid];
m21_3920 -> m21_24  [key=2, style=dotted];
m21_3921 -> m21_3917  [key=0, style=bold, color=blue];
m21_2269 -> m21_2270  [key=0, style=solid];
m21_2270 -> m21_2271  [key=0, style=solid];
m21_2270 -> m21_1557  [key=2, style=dotted];
m21_2270 -> m21_2272  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_2270 -> m21_2273  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_2270 -> m21_2274  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_2270 -> m21_2278  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_2271 -> m21_2272  [key=0, style=solid];
m21_2271 -> m21_1147  [key=2, style=dotted];
m21_2272 -> m21_2273  [key=0, style=solid];
m21_2273 -> m21_2274  [key=0, style=solid];
m21_2274 -> m21_2275  [key=0, style=solid];
m21_2278 -> m21_2279  [key=0, style=solid];
m21_2278 -> m21_2198  [key=2, style=dotted];
m21_2275 -> m21_2276  [key=0, style=solid];
m21_2275 -> m21_389  [key=2, style=dotted];
m21_2275 -> m21_1155  [key=2, style=dotted];
m21_2275 -> m21_2278  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m21_2275 -> m21_2284  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m21_2276 -> m21_2277  [key=0, style=solid];
m21_2284 -> m21_2285  [key=0, style=solid];
m21_2284 -> m21_24  [key=2, style=dotted];
m21_2277 -> m21_2278  [key=0, style=solid];
m21_2277 -> m21_2280  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m21_2280 -> m21_2281  [key=0, style=solid];
m21_2280 -> m21_42  [key=2, style=dotted];
m21_2279 -> m21_2280  [key=0, style=solid];
m21_2279 -> m21_41  [key=2, style=dotted];
m21_2279 -> m21_2281  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2281 -> m21_2282  [key=0, style=solid];
m21_2281 -> m21_51  [key=2, style=dotted];
m21_2281 -> m21_2283  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2281 -> m21_2284  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2281 -> m21_2285  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2281 -> m21_2286  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2281 -> m21_2287  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2282 -> m21_2283  [key=0, style=solid];
m21_2282 -> m21_24  [key=2, style=dotted];
m21_2283 -> m21_2284  [key=0, style=solid];
m21_2283 -> m21_24  [key=2, style=dotted];
m21_2285 -> m21_2286  [key=0, style=solid];
m21_2285 -> m21_24  [key=2, style=dotted];
m21_2286 -> m21_2287  [key=0, style=solid];
m21_2286 -> m21_24  [key=2, style=dotted];
m21_2287 -> m21_2288  [key=0, style=solid];
m21_2287 -> m21_24  [key=2, style=dotted];
m21_2288 -> m21_2269  [key=0, style=bold, color=blue];
m21_3137 -> m21_3138  [key=0, style=solid];
m21_3138 -> m21_3139  [key=0, style=solid];
m21_3138 -> m21_3147  [key=2, style=dotted];
m21_3138 -> m21_3140  [key=1, style=dashed, color=darkseagreen4, label=b];
m21_3138 -> m21_3142  [key=1, style=dashed, color=darkseagreen4, label=b];
m21_3139 -> m21_3140  [key=0, style=solid];
m21_3140 -> m21_3141  [key=0, style=solid];
m21_3140 -> m21_3138  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.TestObjects.Aa a"];
m21_3142 -> m21_3143  [key=0, style=solid];
m21_3142 -> m21_142  [key=2, style=dotted];
m21_3142 -> m21_3144  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3141 -> m21_3142  [key=0, style=solid];
m21_3143 -> m21_3144  [key=0, style=solid];
m21_3143 -> m21_24  [key=2, style=dotted];
m21_3144 -> m21_3145  [key=0, style=solid];
m21_3144 -> m21_51  [key=2, style=dotted];
m21_3145 -> m21_3146  [key=0, style=solid];
m21_3145 -> m21_24  [key=2, style=dotted];
m21_3146 -> m21_3137  [key=0, style=bold, color=blue];
m21_1479 -> m21_1480  [key=0, style=solid];
m21_1480 -> m21_1481  [key=0, style=solid];
m21_1480 -> m21_1487  [key=2, style=dotted];
m21_1480 -> m21_1147  [key=2, style=dotted];
m21_1481 -> m21_1482  [key=0, style=solid];
m21_1481 -> m21_41  [key=2, style=dotted];
m21_1481 -> m21_1483  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1482 -> m21_1483  [key=0, style=solid];
m21_1482 -> m21_42  [key=2, style=dotted];
m21_1483 -> m21_1484  [key=0, style=solid];
m21_1483 -> m21_51  [key=2, style=dotted];
m21_1483 -> m21_1485  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_1484 -> m21_1485  [key=0, style=solid];
m21_1484 -> m21_24  [key=2, style=dotted];
m21_1485 -> m21_1486  [key=0, style=solid];
m21_1485 -> m21_1147  [key=2, style=dotted];
m21_1485 -> m21_24  [key=2, style=dotted];
m21_1486 -> m21_1479  [key=0, style=bold, color=blue];
m21_2871 -> m21_2872  [key=0, style=solid];
m21_2872 -> m21_2873  [key=0, style=solid];
m21_2873 -> m21_2874  [key=0, style=solid];
m21_2873 -> m21_147  [key=2, style=dotted];
m21_2874 -> m21_2871  [key=0, style=bold, color=blue];
m21_2081 -> m21_2082  [key=0, style=solid];
m21_2082 -> m21_2083  [key=0, style=solid];
m21_2082 -> m21_2086  [key=2, style=dotted];
m21_2083 -> m21_2084  [key=0, style=solid];
m21_2083 -> m21_41  [key=2, style=dotted];
m21_2084 -> m21_2085  [key=0, style=solid];
m21_2084 -> m21_42  [key=2, style=dotted];
m21_2085 -> m21_2081  [key=0, style=bold, color=blue];
m21_1652 -> m21_1653  [key=0, style=solid];
m21_1653 -> m21_1654  [key=0, style=solid];
m21_1654 -> m21_1655  [key=0, style=solid];
m21_1654 -> m21_73  [key=2, style=dotted];
m21_1654 -> m21_1656  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1655 -> m21_1652  [key=0, style=bold, color=blue];
m21_4392 -> m21_4393  [key=0, style=solid];
m21_4393 -> m21_4394  [key=0, style=solid];
m21_4394 -> m21_4395  [key=0, style=solid];
m21_4395 -> m21_4392  [key=0, style=bold, color=blue];
m21_4260 -> m21_4261  [key=0, style=solid];
m21_4261 -> m21_4262  [key=0, style=solid];
m21_4262 -> m21_4260  [key=0, style=bold, color=blue];
m21_1495 -> m21_1496  [key=0, style=solid];
m21_1496 -> m21_1497  [key=0, style=solid];
m21_1496 -> m21_1496  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1497 -> m21_1498  [key=0, style=solid];
m21_1497 -> m21_51  [key=2, style=dotted];
m21_1498 -> m21_1499  [key=0, style=solid];
m21_1498 -> m21_1501  [key=0, style=solid];
m21_1498 -> m21_21  [key=2, style=dotted];
m21_1499 -> m21_1500  [key=0, style=solid];
m21_1500 -> m21_1501  [key=0, style=solid];
m21_1500 -> m21_1502  [key=2, style=dotted];
m21_1500 -> m21_22  [key=2, style=dotted];
m21_1501 -> m21_1495  [key=0, style=bold, color=blue];
m21_3776 -> m21_3777  [key=0, style=solid];
m21_3777 -> m21_3778  [key=0, style=solid];
m21_3777 -> m21_563  [key=2, style=dotted];
m21_3777 -> m21_3779  [key=1, style=dashed, color=darkseagreen4, label=culture];
m21_3777 -> m21_3781  [key=1, style=dashed, color=darkseagreen4, label=culture];
m21_3778 -> m21_3779  [key=0, style=solid];
m21_3779 -> m21_3780  [key=0, style=solid];
m21_3781 -> m21_3782  [key=0, style=solid];
m21_3781 -> m21_188  [key=2, style=dotted];
m21_3781 -> m21_211  [key=2, style=dotted];
m21_3780 -> m21_3781  [key=0, style=solid];
m21_3780 -> m21_147  [key=2, style=dotted];
m21_3780 -> m21_1147  [key=2, style=dotted];
m21_3780 -> m21_389  [key=2, style=dotted];
m21_3780 -> m21_1155  [key=2, style=dotted];
m21_3782 -> m21_3783  [key=0, style=solid];
m21_3782 -> m21_42  [key=2, style=dotted];
m21_3783 -> m21_3776  [key=0, style=bold, color=blue];
m21_184 -> m21_185  [key=0, style=solid];
m21_185 -> m21_186  [key=0, style=solid];
m21_185 -> m21_183  [key=2, style=dotted];
m21_185 -> m21_188  [key=2, style=dotted];
m21_185 -> m21_189  [key=2, style=dotted];
m21_186 -> m21_187  [key=0, style=solid];
m21_186 -> m21_24  [key=2, style=dotted];
m21_187 -> m21_184  [key=0, style=bold, color=blue];
m21_4268 -> m21_4269  [key=0, style=solid];
m21_4269 -> m21_4270  [key=0, style=solid];
m21_4269 -> m21_2439  [key=2, style=dotted];
m21_4270 -> m21_4268  [key=0, style=bold, color=blue];
m21_2144 -> m21_2145  [key=0, style=solid];
m21_2144 -> m21_2191  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m21_2145 -> m21_2146  [key=0, style=solid];
m21_2145 -> m21_878  [key=2, style=dotted];
m21_2146 -> m21_2144  [key=0, style=bold, color=blue];
m21_891 -> m21_892  [key=0, style=solid];
m21_892 -> m21_893  [key=0, style=solid];
m21_893 -> m21_891  [key=0, style=bold, color=blue];
m21_1957 -> m21_1958  [key=0, style=solid];
m21_1958 -> m21_1959  [key=0, style=solid];
m21_1958 -> m21_1970  [key=2, style=dotted];
m21_1958 -> m21_1960  [key=1, style=dashed, color=darkseagreen4, label=f];
m21_1958 -> m21_1961  [key=1, style=dashed, color=darkseagreen4, label=f];
m21_1958 -> m21_1962  [key=1, style=dashed, color=darkseagreen4, label=f];
m21_1959 -> m21_1960  [key=0, style=solid];
m21_1959 -> m21_1971  [key=2, style=dotted];
m21_1959 -> m21_1936  [key=2, style=dotted];
m21_1960 -> m21_1961  [key=0, style=solid];
m21_1960 -> m21_1971  [key=2, style=dotted];
m21_1960 -> m21_1936  [key=2, style=dotted];
m21_1961 -> m21_1962  [key=0, style=solid];
m21_1961 -> m21_1971  [key=2, style=dotted];
m21_1961 -> m21_1936  [key=2, style=dotted];
m21_1962 -> m21_1963  [key=0, style=solid];
m21_1962 -> m21_41  [key=2, style=dotted];
m21_1962 -> m21_1964  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1963 -> m21_1964  [key=0, style=solid];
m21_1963 -> m21_42  [key=2, style=dotted];
m21_1964 -> m21_1965  [key=0, style=solid];
m21_1964 -> m21_51  [key=2, style=dotted];
m21_1964 -> m21_1966  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m21_1964 -> m21_1967  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m21_1964 -> m21_1968  [key=1, style=dashed, color=darkseagreen4, label=newFoo];
m21_1965 -> m21_1966  [key=0, style=solid];
m21_1965 -> m21_24  [key=2, style=dotted];
m21_1966 -> m21_1967  [key=0, style=solid];
m21_1966 -> m21_24  [key=2, style=dotted];
m21_1967 -> m21_1968  [key=0, style=solid];
m21_1967 -> m21_24  [key=2, style=dotted];
m21_1968 -> m21_1969  [key=0, style=solid];
m21_1968 -> m21_24  [key=2, style=dotted];
m21_1969 -> m21_1957  [key=0, style=bold, color=blue];
m21_2237 -> m21_2238  [key=0, style=solid];
m21_2237 -> m21_2239  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2240  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2241  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2242  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2243  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2244  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2245  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2246  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2247  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2248  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2249  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2250  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2251  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2252  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2253  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2254  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2237 -> m21_2255  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2238 -> m21_2239  [key=0, style=solid];
m21_2238 -> m21_748  [key=2, style=dotted];
m21_2239 -> m21_2240  [key=0, style=solid];
m21_2239 -> m21_749  [key=2, style=dotted];
m21_2240 -> m21_2241  [key=0, style=solid];
m21_2240 -> m21_748  [key=2, style=dotted];
m21_2241 -> m21_2242  [key=0, style=solid];
m21_2241 -> m21_748  [key=2, style=dotted];
m21_2242 -> m21_2243  [key=0, style=solid];
m21_2242 -> m21_748  [key=2, style=dotted];
m21_2243 -> m21_2244  [key=0, style=solid];
m21_2243 -> m21_748  [key=2, style=dotted];
m21_2244 -> m21_2245  [key=0, style=solid];
m21_2244 -> m21_2257  [key=2, style=dotted];
m21_2245 -> m21_2246  [key=0, style=solid];
m21_2245 -> m21_2258  [key=2, style=dotted];
m21_2246 -> m21_2247  [key=0, style=solid];
m21_2246 -> m21_2259  [key=2, style=dotted];
m21_2247 -> m21_2248  [key=0, style=solid];
m21_2247 -> m21_2260  [key=2, style=dotted];
m21_2248 -> m21_2249  [key=0, style=solid];
m21_2248 -> m21_2261  [key=2, style=dotted];
m21_2249 -> m21_2250  [key=0, style=solid];
m21_2249 -> m21_2262  [key=2, style=dotted];
m21_2250 -> m21_2251  [key=0, style=solid];
m21_2250 -> m21_2263  [key=2, style=dotted];
m21_2251 -> m21_2252  [key=0, style=solid];
m21_2251 -> m21_2264  [key=2, style=dotted];
m21_2252 -> m21_2253  [key=0, style=solid];
m21_2252 -> m21_2265  [key=2, style=dotted];
m21_2253 -> m21_2254  [key=0, style=solid];
m21_2253 -> m21_2266  [key=2, style=dotted];
m21_2254 -> m21_2255  [key=0, style=solid];
m21_2254 -> m21_2267  [key=2, style=dotted];
m21_2255 -> m21_2256  [key=0, style=solid];
m21_2255 -> m21_2268  [key=2, style=dotted];
m21_2256 -> m21_2237  [key=0, style=bold, color=blue];
m21_2965 -> m21_2966  [key=0, style=solid];
m21_2966 -> m21_2967  [key=0, style=solid];
m21_2966 -> m21_147  [key=2, style=dotted];
m21_2967 -> m21_2965  [key=0, style=bold, color=blue];
m21_1464 -> m21_1465  [key=0, style=solid];
m21_1465 -> m21_1466  [key=0, style=solid];
m21_1465 -> m21_1468  [key=1, style=dashed, color=darkseagreen4, label=boolRef];
m21_1466 -> m21_1467  [key=0, style=solid];
m21_1466 -> m21_1478  [key=2, style=dotted];
m21_1468 -> m21_1469  [key=0, style=solid];
m21_1468 -> m21_24  [key=2, style=dotted];
m21_1467 -> m21_1468  [key=0, style=solid];
m21_1467 -> m21_142  [key=2, style=dotted];
m21_1467 -> m21_1469  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1469 -> m21_1470  [key=0, style=solid];
m21_1469 -> m21_51  [key=2, style=dotted];
m21_1470 -> m21_1471  [key=0, style=solid];
m21_1470 -> m21_24  [key=2, style=dotted];
m21_1471 -> m21_1472  [key=0, style=solid];
m21_1471 -> m21_1474  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializerTestRef];
m21_1472 -> m21_1473  [key=0, style=solid];
m21_1472 -> m21_1478  [key=2, style=dotted];
m21_1474 -> m21_1475  [key=0, style=solid];
m21_1474 -> m21_24  [key=2, style=dotted];
m21_1473 -> m21_1474  [key=0, style=solid];
m21_1473 -> m21_142  [key=2, style=dotted];
m21_1473 -> m21_1475  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1475 -> m21_1476  [key=0, style=solid];
m21_1475 -> m21_51  [key=2, style=dotted];
m21_1476 -> m21_1477  [key=0, style=solid];
m21_1476 -> m21_24  [key=2, style=dotted];
m21_1477 -> m21_1464  [key=0, style=bold, color=blue];
m21_89 -> m21_90  [key=0, style=solid];
m21_90 -> m21_91  [key=0, style=solid];
m21_90 -> m21_73  [key=2, style=dotted];
m21_90 -> m21_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_91 -> m21_89  [key=0, style=bold, color=blue];
m21_4113 -> m21_4114  [key=0, style=solid];
m21_4114 -> m21_4115  [key=0, style=solid];
m21_4114 -> m21_4079  [key=2, style=dotted];
m21_4115 -> m21_4113  [key=0, style=bold, color=blue];
m21_3789 -> m21_3790  [key=0, style=solid];
m21_3790 -> m21_3791  [key=0, style=solid];
m21_3790 -> m21_563  [key=2, style=dotted];
m21_3790 -> m21_3792  [key=1, style=dashed, color=darkseagreen4, label=culture];
m21_3790 -> m21_3796  [key=1, style=dashed, color=darkseagreen4, label=culture];
m21_3791 -> m21_3792  [key=0, style=solid];
m21_3792 -> m21_3793  [key=0, style=solid];
m21_3796 -> m21_3797  [key=0, style=solid];
m21_3796 -> m21_188  [key=2, style=dotted];
m21_3796 -> m21_879  [key=2, style=dotted];
m21_3793 -> m21_3794  [key=0, style=solid];
m21_3793 -> m21_147  [key=2, style=dotted];
m21_3793 -> m21_1147  [key=2, style=dotted];
m21_3793 -> m21_389  [key=2, style=dotted];
m21_3793 -> m21_1155  [key=2, style=dotted];
m21_3793 -> m21_3797  [key=1, style=dashed, color=darkseagreen4, label=dates];
m21_3794 -> m21_3795  [key=0, style=solid];
m21_3794 -> m21_3015  [key=2, style=dotted];
m21_3794 -> m21_3801  [key=1, style=dashed, color=darkseagreen4, label=sw];
m21_3797 -> m21_3798  [key=0, style=solid];
m21_3797 -> m21_3052  [key=2, style=dotted];
m21_3795 -> m21_3796  [key=0, style=solid];
m21_3795 -> m21_3016  [key=2, style=dotted];
m21_3795 -> m21_3797  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m21_3795 -> m21_3798  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m21_3795 -> m21_3799  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m21_3795 -> m21_3800  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m21_3801 -> m21_3802  [key=0, style=solid];
m21_3801 -> m21_3020  [key=2, style=dotted];
m21_3798 -> m21_3799  [key=0, style=solid];
m21_3798 -> m21_165  [key=2, style=dotted];
m21_3799 -> m21_3800  [key=0, style=solid];
m21_3799 -> m21_24  [key=2, style=dotted];
m21_3800 -> m21_3801  [key=0, style=solid];
m21_3800 -> m21_24  [key=2, style=dotted];
m21_3802 -> m21_3803  [key=0, style=solid];
m21_3802 -> m21_42  [key=2, style=dotted];
m21_3803 -> m21_3789  [key=0, style=bold, color=blue];
m21_1827 -> m21_1828  [key=0, style=solid];
m21_1828 -> m21_1829  [key=0, style=solid];
m21_1828 -> m21_1832  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1828 -> m21_1821  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1829 -> m21_1830  [key=0, style=solid];
m21_1829 -> m21_73  [key=2, style=dotted];
m21_1829 -> m21_1831  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1830 -> m21_1827  [key=0, style=bold, color=blue];
m21_3 -> m21_4  [key=0, style=solid];
m21_2891 -> m21_2892  [key=0, style=solid];
m21_2892 -> m21_2893  [key=0, style=solid];
m21_2892 -> m21_2887  [key=2, style=dotted];
m21_2892 -> m21_2894  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2892 -> m21_2895  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2892 -> m21_2898  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2892 -> m21_2899  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2893 -> m21_2894  [key=0, style=solid];
m21_2893 -> m21_2903  [key=2, style=dotted];
m21_2894 -> m21_2895  [key=0, style=solid];
m21_2894 -> m21_2903  [key=2, style=dotted];
m21_2895 -> m21_2896  [key=0, style=solid];
m21_2895 -> m21_41  [key=2, style=dotted];
m21_2895 -> m21_2897  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2898 -> m21_2899  [key=0, style=solid];
m21_2898 -> m21_24  [key=2, style=dotted];
m21_2899 -> m21_2900  [key=0, style=solid];
m21_2899 -> m21_24  [key=2, style=dotted];
m21_2896 -> m21_2897  [key=0, style=solid];
m21_2896 -> m21_42  [key=2, style=dotted];
m21_2897 -> m21_2898  [key=0, style=solid];
m21_2897 -> m21_51  [key=2, style=dotted];
m21_2897 -> m21_2899  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2897 -> m21_2900  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2897 -> m21_2901  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2900 -> m21_2901  [key=0, style=solid];
m21_2900 -> m21_24  [key=2, style=dotted];
m21_2901 -> m21_2902  [key=0, style=solid];
m21_2901 -> m21_24  [key=2, style=dotted];
m21_2902 -> m21_2891  [key=0, style=bold, color=blue];
m21_3640 -> m21_3641  [key=0, style=solid];
m21_3641 -> m21_3642  [key=0, style=solid];
m21_3641 -> m21_3643  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3641 -> m21_3641  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3642 -> m21_3643  [key=0, style=solid];
m21_3642 -> m21_19  [key=2, style=dotted];
m21_3642 -> m21_3644  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3643 -> m21_3644  [key=0, style=solid];
m21_3643 -> m21_16  [key=2, style=dotted];
m21_3643 -> m21_386  [key=2, style=dotted];
m21_3644 -> m21_3645  [key=0, style=solid];
m21_3644 -> m21_2568  [key=2, style=dotted];
m21_3645 -> m21_3646  [key=0, style=solid];
m21_3645 -> m21_24  [key=2, style=dotted];
m21_3646 -> m21_3640  [key=0, style=bold, color=blue];
m21_3968 -> m21_3969  [key=0, style=solid];
m21_3968 -> m21_3971  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ITypeDescriptorContext"];
m21_3968 -> m21_3975  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m21_3968 -> m21_3982  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ITypeDescriptorContext"];
m21_3968 -> m21_3308  [key=3, color=darkorchid, style=bold, label="method methodReturn object ConvertFrom"];
m21_3969 -> m21_3970  [key=0, style=solid];
m21_3969 -> m21_3972  [key=1, style=dashed, color=darkseagreen4, label=str];
m21_3971 -> m21_3987  [key=0, style=solid];
m21_3971 -> m21_3988  [key=2, style=dotted];
m21_3975 -> m21_3976  [key=0, style=solid];
m21_3975 -> m21_3977  [key=0, style=solid];
m21_3982 -> m21_3983  [key=0, style=solid];
m21_3982 -> m21_3991  [key=2, style=dotted];
m21_3970 -> m21_3971  [key=0, style=solid];
m21_3970 -> m21_3972  [key=0, style=solid];
m21_3972 -> m21_3973  [key=0, style=solid];
m21_3972 -> m21_3989  [key=2, style=dotted];
m21_3972 -> m21_3977  [key=1, style=dashed, color=darkseagreen4, label=str2];
m21_3973 -> m21_3974  [key=0, style=solid];
m21_3973 -> m21_3975  [key=0, style=solid];
m21_3977 -> m21_3978  [key=0, style=solid];
m21_3977 -> m21_898  [key=2, style=dotted];
m21_3977 -> m21_3982  [key=1, style=dashed, color=darkseagreen4, label=strArray];
m21_3974 -> m21_3987  [key=0, style=solid];
m21_3976 -> m21_3977  [key=0, style=solid];
m21_3976 -> m21_3982  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m21_3978 -> m21_3979  [key=0, style=solid];
m21_3978 -> m21_3981  [key=1, style=dashed, color=darkseagreen4, label=numArray];
m21_3978 -> m21_3982  [key=1, style=dashed, color=darkseagreen4, label=numArray];
m21_3978 -> m21_3984  [key=1, style=dashed, color=darkseagreen4, label=numArray];
m21_3978 -> m21_3985  [key=1, style=dashed, color=darkseagreen4, label=numArray];
m21_3979 -> m21_3980  [key=0, style=solid];
m21_3979 -> m21_3990  [key=2, style=dotted];
m21_3979 -> m21_3982  [key=1, style=dashed, color=darkseagreen4, label=converter];
m21_3981 -> m21_3982  [key=0, style=solid];
m21_3981 -> m21_3984  [key=0, style=solid];
m21_3981 -> m21_97  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m21_3984 -> m21_3985  [key=0, style=solid];
m21_3984 -> m21_3986  [key=0, style=solid];
m21_3985 -> m21_3987  [key=0, style=solid];
m21_3985 -> m21_3956  [key=2, style=dotted];
m21_3980 -> m21_3981  [key=0, style=solid];
m21_3980 -> m21_3982  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_3980 -> m21_3983  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_3983 -> m21_3981  [key=0, style=solid];
m21_3983 -> m21_3983  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_3986 -> m21_3987  [key=0, style=solid];
m21_3986 -> m21_3992  [key=2, style=dotted];
m21_3987 -> m21_3968  [key=0, style=bold, color=blue];
m21_2331 -> m21_2332  [key=0, style=solid];
m21_2332 -> m21_2333  [key=0, style=solid];
m21_2332 -> m21_51  [key=2, style=dotted];
m21_2332 -> m21_2334  [key=1, style=dashed, color=darkseagreen4, label=myA];
m21_2332 -> m21_2335  [key=1, style=dashed, color=darkseagreen4, label=myA];
m21_2332 -> m21_2336  [key=1, style=dashed, color=darkseagreen4, label=myA];
m21_2332 -> m21_2337  [key=1, style=dashed, color=darkseagreen4, label=myA];
m21_2332 -> m21_2338  [key=1, style=dashed, color=darkseagreen4, label=myA];
m21_2332 -> m21_2339  [key=1, style=dashed, color=darkseagreen4, label=myA];
m21_2332 -> m21_2340  [key=1, style=dashed, color=darkseagreen4, label=myA];
m21_2333 -> m21_2334  [key=0, style=solid];
m21_2333 -> m21_2361  [key=2, style=dotted];
m21_2333 -> m21_2362  [key=2, style=dotted];
m21_2333 -> m21_24  [key=2, style=dotted];
m21_2334 -> m21_2335  [key=0, style=solid];
m21_2334 -> m21_2361  [key=2, style=dotted];
m21_2334 -> m21_2362  [key=2, style=dotted];
m21_2334 -> m21_24  [key=2, style=dotted];
m21_2335 -> m21_2336  [key=0, style=solid];
m21_2335 -> m21_2363  [key=2, style=dotted];
m21_2335 -> m21_2362  [key=2, style=dotted];
m21_2335 -> m21_24  [key=2, style=dotted];
m21_2336 -> m21_2337  [key=0, style=solid];
m21_2336 -> m21_2363  [key=2, style=dotted];
m21_2336 -> m21_2362  [key=2, style=dotted];
m21_2336 -> m21_24  [key=2, style=dotted];
m21_2337 -> m21_2338  [key=0, style=solid];
m21_2337 -> m21_2363  [key=2, style=dotted];
m21_2337 -> m21_2362  [key=2, style=dotted];
m21_2337 -> m21_24  [key=2, style=dotted];
m21_2338 -> m21_2339  [key=0, style=solid];
m21_2338 -> m21_2363  [key=2, style=dotted];
m21_2338 -> m21_2362  [key=2, style=dotted];
m21_2338 -> m21_24  [key=2, style=dotted];
m21_2339 -> m21_2340  [key=0, style=solid];
m21_2339 -> m21_2363  [key=2, style=dotted];
m21_2339 -> m21_2362  [key=2, style=dotted];
m21_2339 -> m21_24  [key=2, style=dotted];
m21_2340 -> m21_2341  [key=0, style=solid];
m21_2340 -> m21_2363  [key=2, style=dotted];
m21_2340 -> m21_2362  [key=2, style=dotted];
m21_2340 -> m21_24  [key=2, style=dotted];
m21_2341 -> m21_2342  [key=0, style=solid];
m21_2341 -> m21_51  [key=2, style=dotted];
m21_2341 -> m21_2343  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2344  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2345  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2346  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2347  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2348  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2349  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2350  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2351  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2352  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2353  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2354  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2355  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2356  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2357  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2358  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2341 -> m21_2359  [key=1, style=dashed, color=darkseagreen4, label=myB];
m21_2342 -> m21_2343  [key=0, style=solid];
m21_2342 -> m21_2361  [key=2, style=dotted];
m21_2342 -> m21_2362  [key=2, style=dotted];
m21_2342 -> m21_24  [key=2, style=dotted];
m21_2343 -> m21_2344  [key=0, style=solid];
m21_2343 -> m21_2361  [key=2, style=dotted];
m21_2343 -> m21_2362  [key=2, style=dotted];
m21_2343 -> m21_24  [key=2, style=dotted];
m21_2344 -> m21_2345  [key=0, style=solid];
m21_2344 -> m21_2363  [key=2, style=dotted];
m21_2344 -> m21_2362  [key=2, style=dotted];
m21_2344 -> m21_24  [key=2, style=dotted];
m21_2345 -> m21_2346  [key=0, style=solid];
m21_2345 -> m21_2363  [key=2, style=dotted];
m21_2345 -> m21_2362  [key=2, style=dotted];
m21_2345 -> m21_24  [key=2, style=dotted];
m21_2346 -> m21_2347  [key=0, style=solid];
m21_2346 -> m21_2363  [key=2, style=dotted];
m21_2346 -> m21_2362  [key=2, style=dotted];
m21_2346 -> m21_24  [key=2, style=dotted];
m21_2347 -> m21_2348  [key=0, style=solid];
m21_2347 -> m21_2363  [key=2, style=dotted];
m21_2347 -> m21_2362  [key=2, style=dotted];
m21_2347 -> m21_24  [key=2, style=dotted];
m21_2348 -> m21_2349  [key=0, style=solid];
m21_2348 -> m21_2363  [key=2, style=dotted];
m21_2348 -> m21_2362  [key=2, style=dotted];
m21_2348 -> m21_24  [key=2, style=dotted];
m21_2349 -> m21_2350  [key=0, style=solid];
m21_2349 -> m21_2363  [key=2, style=dotted];
m21_2349 -> m21_2362  [key=2, style=dotted];
m21_2349 -> m21_24  [key=2, style=dotted];
m21_2350 -> m21_2351  [key=0, style=solid];
m21_2350 -> m21_24  [key=2, style=dotted];
m21_2351 -> m21_2352  [key=0, style=solid];
m21_2351 -> m21_24  [key=2, style=dotted];
m21_2352 -> m21_2353  [key=0, style=solid];
m21_2352 -> m21_24  [key=2, style=dotted];
m21_2353 -> m21_2354  [key=0, style=solid];
m21_2353 -> m21_24  [key=2, style=dotted];
m21_2354 -> m21_2355  [key=0, style=solid];
m21_2354 -> m21_2363  [key=2, style=dotted];
m21_2354 -> m21_2362  [key=2, style=dotted];
m21_2354 -> m21_24  [key=2, style=dotted];
m21_2355 -> m21_2356  [key=0, style=solid];
m21_2355 -> m21_2363  [key=2, style=dotted];
m21_2355 -> m21_2362  [key=2, style=dotted];
m21_2355 -> m21_24  [key=2, style=dotted];
m21_2356 -> m21_2357  [key=0, style=solid];
m21_2356 -> m21_24  [key=2, style=dotted];
m21_2357 -> m21_2358  [key=0, style=solid];
m21_2357 -> m21_2363  [key=2, style=dotted];
m21_2357 -> m21_2362  [key=2, style=dotted];
m21_2357 -> m21_24  [key=2, style=dotted];
m21_2358 -> m21_2359  [key=0, style=solid];
m21_2358 -> m21_2363  [key=2, style=dotted];
m21_2358 -> m21_2362  [key=2, style=dotted];
m21_2358 -> m21_24  [key=2, style=dotted];
m21_2359 -> m21_2360  [key=0, style=solid];
m21_2359 -> m21_2363  [key=2, style=dotted];
m21_2359 -> m21_2362  [key=2, style=dotted];
m21_2359 -> m21_24  [key=2, style=dotted];
m21_2360 -> m21_2331  [key=0, style=bold, color=blue];
m21_2696 -> m21_2697  [key=0, style=solid];
m21_2697 -> m21_2696  [key=0, style=bold, color=blue];
m21_4396 -> m21_4397  [key=0, style=solid];
m21_4397 -> m21_4398  [key=0, style=solid];
m21_4398 -> m21_4399  [key=0, style=solid];
m21_4399 -> m21_4396  [key=0, style=bold, color=blue];
m21_787 -> m21_788  [key=0, style=solid];
m21_788 -> m21_789  [key=0, style=solid];
m21_788 -> m21_478  [key=2, style=dotted];
m21_788 -> m21_790  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_789 -> m21_790  [key=0, style=solid];
m21_789 -> m21_792  [key=2, style=dotted];
m21_790 -> m21_791  [key=0, style=solid];
m21_790 -> m21_793  [key=2, style=dotted];
m21_790 -> m21_22  [key=2, style=dotted];
m21_791 -> m21_787  [key=0, style=bold, color=blue];
m21_4101 -> m21_4102  [key=0, style=solid];
m21_4102 -> m21_4103  [key=0, style=solid];
m21_4103 -> m21_4101  [key=0, style=bold, color=blue];
m21_1582 -> m21_1583  [key=0, style=solid];
m21_1583 -> m21_1584  [key=0, style=solid];
m21_1583 -> m21_1583  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1584 -> m21_1585  [key=0, style=solid];
m21_1584 -> m21_51  [key=2, style=dotted];
m21_1584 -> m21_1586  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1584 -> m21_1587  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1584 -> m21_1588  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1584 -> m21_1589  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1585 -> m21_1586  [key=0, style=solid];
m21_1585 -> m21_843  [key=2, style=dotted];
m21_1586 -> m21_1587  [key=0, style=solid];
m21_1586 -> m21_24  [key=2, style=dotted];
m21_1587 -> m21_1588  [key=0, style=solid];
m21_1587 -> m21_24  [key=2, style=dotted];
m21_1588 -> m21_1589  [key=0, style=solid];
m21_1588 -> m21_24  [key=2, style=dotted];
m21_1589 -> m21_1590  [key=0, style=solid];
m21_1589 -> m21_24  [key=2, style=dotted];
m21_1590 -> m21_1582  [key=0, style=bold, color=blue];
m21_1225 -> m21_1226  [key=0, style=solid];
m21_1226 -> m21_1227  [key=0, style=solid];
m21_1226 -> m21_1229  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1226 -> m21_1216  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1227 -> m21_1228  [key=0, style=solid];
m21_1227 -> m21_19  [key=2, style=dotted];
m21_1227 -> m21_1229  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1229 -> m21_1230  [key=0, style=solid];
m21_1229 -> m21_386  [key=2, style=dotted];
m21_1229 -> m21_886  [key=2, style=dotted];
m21_1229 -> m21_1231  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1228 -> m21_1229  [key=0, style=solid];
m21_1230 -> m21_1231  [key=0, style=solid];
m21_1230 -> m21_24  [key=2, style=dotted];
m21_1231 -> m21_1232  [key=0, style=solid];
m21_1231 -> m21_24  [key=2, style=dotted];
m21_1232 -> m21_1225  [key=0, style=bold, color=blue];
m21_1632 -> m21_1633  [key=0, style=solid];
m21_1633 -> m21_1634  [key=0, style=solid];
m21_1633 -> m21_1643  [key=2, style=dotted];
m21_1633 -> m21_1635  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1633 -> m21_1636  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1633 -> m21_1637  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1633 -> m21_1638  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1633 -> m21_1640  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1634 -> m21_1635  [key=0, style=solid];
m21_1635 -> m21_1636  [key=0, style=solid];
m21_1636 -> m21_1637  [key=0, style=solid];
m21_1637 -> m21_1638  [key=0, style=solid];
m21_1638 -> m21_1639  [key=0, style=solid];
m21_1638 -> m21_41  [key=2, style=dotted];
m21_1640 -> m21_1641  [key=0, style=solid];
m21_1640 -> m21_188  [key=2, style=dotted];
m21_1640 -> m21_211  [key=2, style=dotted];
m21_1639 -> m21_1640  [key=0, style=solid];
m21_1639 -> m21_42  [key=2, style=dotted];
m21_1641 -> m21_1642  [key=0, style=solid];
m21_1641 -> m21_42  [key=2, style=dotted];
m21_1642 -> m21_1632  [key=0, style=bold, color=blue];
m21_4345 -> m21_4346  [key=0, style=solid];
m21_4346 -> m21_4347  [key=0, style=solid];
m21_4346 -> m21_4348  [key=2, style=dotted];
m21_4347 -> m21_4345  [key=0, style=bold, color=blue];
m21_166 -> m21_167  [key=0, style=solid];
m21_167 -> m21_168  [key=0, style=solid];
m21_167 -> m21_73  [key=2, style=dotted];
m21_167 -> m21_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_168 -> m21_166  [key=0, style=bold, color=blue];
m21_4021 -> m21_4022  [key=0, style=solid];
m21_4022 -> m21_4023  [key=0, style=solid];
m21_4022 -> m21_3929  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_4023 -> m21_4024  [key=0, style=solid];
m21_4023 -> m21_188  [key=2, style=dotted];
m21_4023 -> m21_309  [key=2, style=dotted];
m21_4023 -> m21_4025  [key=1, style=dashed, color=darkseagreen4, label=people];
m21_4023 -> m21_4026  [key=1, style=dashed, color=darkseagreen4, label=people];
m21_4024 -> m21_4025  [key=0, style=solid];
m21_4024 -> m21_24  [key=2, style=dotted];
m21_4025 -> m21_4026  [key=0, style=solid];
m21_4025 -> m21_4027  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_4025 -> m21_4028  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_4026 -> m21_4027  [key=0, style=solid];
m21_4026 -> m21_4028  [key=1, style=dashed, color=darkseagreen4, label=jane];
m21_4027 -> m21_4028  [key=0, style=solid];
m21_4027 -> m21_24  [key=2, style=dotted];
m21_4028 -> m21_4029  [key=0, style=solid];
m21_4028 -> m21_24  [key=2, style=dotted];
m21_4029 -> m21_4021  [key=0, style=bold, color=blue];
m21_1170 -> m21_1171  [key=0, style=solid];
m21_1171 -> m21_1172  [key=0, style=solid];
m21_1171 -> m21_999  [key=2, style=dotted];
m21_1171 -> m21_1174  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1172 -> m21_1173  [key=0, style=solid];
m21_1172 -> m21_142  [key=2, style=dotted];
m21_1172 -> m21_1174  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1174 -> m21_1175  [key=0, style=solid];
m21_1174 -> m21_1183  [key=2, style=dotted];
m21_1174 -> m21_1174  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1174 -> m21_1176  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1174 -> m21_1177  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1174 -> m21_1178  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1174 -> m21_1179  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1174 -> m21_1180  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1174 -> m21_1181  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1173 -> m21_1174  [key=0, style=solid];
m21_1173 -> m21_24  [key=2, style=dotted];
m21_1175 -> m21_1176  [key=0, style=solid];
m21_1175 -> m21_24  [key=2, style=dotted];
m21_1176 -> m21_1177  [key=0, style=solid];
m21_1176 -> m21_24  [key=2, style=dotted];
m21_1177 -> m21_1178  [key=0, style=solid];
m21_1177 -> m21_24  [key=2, style=dotted];
m21_1178 -> m21_1179  [key=0, style=solid];
m21_1178 -> m21_24  [key=2, style=dotted];
m21_1179 -> m21_1180  [key=0, style=solid];
m21_1179 -> m21_24  [key=2, style=dotted];
m21_1180 -> m21_1181  [key=0, style=solid];
m21_1180 -> m21_24  [key=2, style=dotted];
m21_1181 -> m21_1182  [key=0, style=solid];
m21_1181 -> m21_24  [key=2, style=dotted];
m21_1182 -> m21_1170  [key=0, style=bold, color=blue];
m21_2504 -> m21_2505  [key=0, style=solid];
m21_2505 -> m21_2506  [key=0, style=solid];
m21_2505 -> m21_2505  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2506 -> m21_2507  [key=0, style=solid];
m21_2506 -> m21_51  [key=2, style=dotted];
m21_2506 -> m21_2508  [key=1, style=dashed, color=darkseagreen4, label=cc];
m21_2506 -> m21_2509  [key=1, style=dashed, color=darkseagreen4, label=cc];
m21_2507 -> m21_2508  [key=0, style=solid];
m21_2507 -> m21_24  [key=2, style=dotted];
m21_2508 -> m21_2509  [key=0, style=solid];
m21_2508 -> m21_24  [key=2, style=dotted];
m21_2509 -> m21_2510  [key=0, style=solid];
m21_2509 -> m21_24  [key=2, style=dotted];
m21_2510 -> m21_2504  [key=0, style=bold, color=blue];
m21_3666 -> m21_3667  [key=0, style=solid];
m21_3667 -> m21_3668  [key=0, style=solid];
m21_3667 -> m21_51  [key=2, style=dotted];
m21_3667 -> m21_3669  [key=1, style=dashed, color=darkseagreen4, label=uris];
m21_3668 -> m21_3669  [key=0, style=solid];
m21_3668 -> m21_24  [key=2, style=dotted];
m21_3669 -> m21_3670  [key=0, style=solid];
m21_3669 -> m21_1752  [key=2, style=dotted];
m21_3669 -> m21_24  [key=2, style=dotted];
m21_3670 -> m21_3671  [key=0, style=solid];
m21_3670 -> m21_51  [key=2, style=dotted];
m21_3671 -> m21_3672  [key=0, style=solid];
m21_3671 -> m21_843  [key=2, style=dotted];
m21_3672 -> m21_3673  [key=0, style=solid];
m21_3672 -> m21_3679  [key=2, style=dotted];
m21_3672 -> m21_3674  [key=1, style=dashed, color=darkseagreen4, label=i1];
m21_3673 -> m21_3674  [key=0, style=solid];
m21_3673 -> m21_1752  [key=2, style=dotted];
m21_3674 -> m21_3675  [key=0, style=solid];
m21_3674 -> m21_24  [key=2, style=dotted];
m21_3675 -> m21_3676  [key=0, style=solid];
m21_3675 -> m21_51  [key=2, style=dotted];
m21_3675 -> m21_3677  [key=1, style=dashed, color=darkseagreen4, label=uri];
m21_3676 -> m21_3677  [key=0, style=solid];
m21_3676 -> m21_843  [key=2, style=dotted];
m21_3677 -> m21_3678  [key=0, style=solid];
m21_3677 -> m21_3679  [key=2, style=dotted];
m21_3677 -> m21_24  [key=2, style=dotted];
m21_3678 -> m21_3666  [key=0, style=bold, color=blue];
m21_155 -> m21_156  [key=0, style=solid];
m21_156 -> m21_157  [key=0, style=solid];
m21_156 -> m21_73  [key=2, style=dotted];
m21_156 -> m21_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_157 -> m21_155  [key=0, style=bold, color=blue];
m21_212 -> m21_213  [key=0, style=solid];
m21_213 -> m21_214  [key=0, style=solid];
m21_213 -> m21_73  [key=2, style=dotted];
m21_213 -> m21_221  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_214 -> m21_215  [key=0, style=solid];
m21_214 -> m21_73  [key=2, style=dotted];
m21_214 -> m21_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_215 -> m21_216  [key=0, style=solid];
m21_215 -> m21_73  [key=2, style=dotted];
m21_215 -> m21_227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_216 -> m21_217  [key=0, style=solid];
m21_216 -> m21_73  [key=2, style=dotted];
m21_216 -> m21_230  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_217 -> m21_218  [key=0, style=solid];
m21_217 -> m21_73  [key=2, style=dotted];
m21_217 -> m21_233  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_218 -> m21_219  [key=0, style=solid];
m21_218 -> m21_73  [key=2, style=dotted];
m21_218 -> m21_236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_219 -> m21_220  [key=0, style=solid];
m21_219 -> m21_73  [key=2, style=dotted];
m21_219 -> m21_239  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_220 -> m21_212  [key=0, style=bold, color=blue];
m21_2959 -> m21_2960  [key=0, style=solid];
m21_2960 -> m21_2961  [key=0, style=solid];
m21_2960 -> m21_2964  [key=2, style=dotted];
m21_2961 -> m21_2962  [key=0, style=solid];
m21_2961 -> m21_41  [key=2, style=dotted];
m21_2962 -> m21_2963  [key=0, style=solid];
m21_2962 -> m21_42  [key=2, style=dotted];
m21_2963 -> m21_2959  [key=0, style=bold, color=blue];
m21_2968 -> m21_2969  [key=0, style=solid];
m21_2969 -> m21_2970  [key=0, style=solid];
m21_2969 -> m21_2965  [key=2, style=dotted];
m21_2969 -> m21_2972  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m21_2969 -> m21_2973  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m21_2969 -> m21_2976  [key=1, style=dashed, color=darkseagreen4, label=classWithException];
m21_2970 -> m21_2973  [key=0, style=solid];
m21_2970 -> m21_295  [key=2, style=dotted];
m21_2972 -> m21_2973  [key=0, style=solid];
m21_2972 -> m21_335  [key=2, style=dotted];
m21_2973 -> m21_2974  [key=0, style=solid];
m21_2973 -> m21_142  [key=2, style=dotted];
m21_2976 -> m21_2977  [key=0, style=solid];
m21_2976 -> m21_41  [key=2, style=dotted];
m21_2971 -> m21_2972  [key=0, style=solid];
m21_2974 -> m21_2975  [key=0, style=solid];
m21_2974 -> m21_51  [key=2, style=dotted];
m21_2975 -> m21_2976  [key=0, style=solid];
m21_2975 -> m21_2980  [key=2, style=dotted];
m21_2975 -> m21_24  [key=2, style=dotted];
m21_2977 -> m21_2978  [key=0, style=solid];
m21_2977 -> m21_51  [key=2, style=dotted];
m21_2978 -> m21_2979  [key=0, style=solid];
m21_2978 -> m21_2980  [key=2, style=dotted];
m21_2978 -> m21_24  [key=2, style=dotted];
m21_2979 -> m21_2968  [key=0, style=bold, color=blue];
m21_2403 -> m21_2404  [key=0, style=solid];
m21_2404 -> m21_2405  [key=0, style=solid];
m21_2404 -> m21_2414  [key=2, style=dotted];
m21_2404 -> m21_2407  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m21_2404 -> m21_2408  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m21_2404 -> m21_2412  [key=1, style=dashed, color=darkseagreen4, label=testObject];
m21_2405 -> m21_2406  [key=0, style=solid];
m21_2405 -> m21_2415  [key=2, style=dotted];
m21_2405 -> m21_2407  [key=1, style=dashed, color=darkseagreen4, label=document];
m21_2407 -> m21_2408  [key=0, style=solid];
m21_2408 -> m21_2409  [key=0, style=solid];
m21_2408 -> m21_41  [key=2, style=dotted];
m21_2408 -> m21_2410  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2408 -> m21_2411  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2412 -> m21_2413  [key=0, style=solid];
m21_2412 -> m21_24  [key=2, style=dotted];
m21_2406 -> m21_2407  [key=0, style=solid];
m21_2406 -> m21_2416  [key=2, style=dotted];
m21_2409 -> m21_2410  [key=0, style=solid];
m21_2409 -> m21_2409  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m21_2410 -> m21_2411  [key=0, style=solid];
m21_2410 -> m21_42  [key=2, style=dotted];
m21_2411 -> m21_2412  [key=0, style=solid];
m21_2411 -> m21_51  [key=2, style=dotted];
m21_2413 -> m21_2403  [key=0, style=bold, color=blue];
m21_2163 -> m21_2164  [key=0, style=solid];
m21_2164 -> m21_2165  [key=0, style=solid];
m21_2164 -> m21_2166  [key=2, style=dotted];
m21_2165 -> m21_2163  [key=0, style=bold, color=blue];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_18  [key=2, style=dotted];
m21_7 -> m21_7  [key=1, style=dashed, color=green, label=p];
m21_7 -> m21_8  [key=0, style=solid, color=green];
m21_7 -> m21_964  [key=2, style=dotted, color=green];
m21_7 -> m21_1759  [key=2, style=dotted, color=green];
m21_7 -> m21_2749  [key=2, style=dotted, color=green];
m21_7 -> m21_14  [key=2, style=dotted, color=green];
m21_7 -> m21_813  [key=2, style=dotted, color=green];
m21_7 -> m21_9  [key=1, style=dashed, color=green, label=rss];
m21_6 -> m21_7  [key=0, style=solid, color=green];
m21_6 -> m21_0  [key=2, style=dotted];
m21_6 -> m21_19  [key=2, style=dotted];
m21_6 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label=ser];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_16  [key=2, style=dotted];
m21_8 -> m21_17  [key=2, style=dotted];
m21_8 -> m21_20  [key=2, style=dotted];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_16  [key=2, style=dotted];
m21_9 -> m21_18  [key=2, style=dotted];
m21_9 -> m21_14  [key=0, style=solid];
m21_9 -> m21_21  [key=2, style=dotted];
m21_10 -> m21_5  [key=0, style=bold, color=blue];
m21_10 -> m21_11  [key=0, style=solid];
m21_3543 -> m21_3544  [key=0, style=solid];
m21_3543 -> m21_3537  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m21_3543 -> m21_3548  [key=3, color=darkorchid, style=bold, label="method methodReturn T SerializeAndDeserialize"];
m21_3544 -> m21_3545  [key=0, style=solid];
m21_3544 -> m21_3547  [key=2, style=dotted];
m21_3545 -> m21_3546  [key=0, style=solid];
m21_3545 -> m21_3548  [key=2, style=dotted];
m21_3546 -> m21_3543  [key=0, style=bold, color=blue];
m21_2685 -> m21_2686  [key=0, style=solid];
m21_2686 -> m21_2687  [key=0, style=solid];
m21_2686 -> m21_2694  [key=2, style=dotted];
m21_2686 -> m21_2688  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_2687 -> m21_2688  [key=0, style=solid];
m21_2687 -> m21_2695  [key=2, style=dotted];
m21_2688 -> m21_2689  [key=0, style=solid];
m21_2688 -> m21_142  [key=2, style=dotted];
m21_2689 -> m21_2690  [key=0, style=solid];
m21_2689 -> m21_51  [key=2, style=dotted];
m21_2689 -> m21_2691  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_2689 -> m21_2692  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_2690 -> m21_2691  [key=0, style=solid];
m21_2690 -> m21_24  [key=2, style=dotted];
m21_2691 -> m21_2692  [key=0, style=solid];
m21_2691 -> m21_24  [key=2, style=dotted];
m21_2692 -> m21_2693  [key=0, style=solid];
m21_2692 -> m21_24  [key=2, style=dotted];
m21_2693 -> m21_2685  [key=0, style=bold, color=blue];
m21_1696 -> m21_1697  [key=0, style=solid];
m21_1697 -> m21_1698  [key=0, style=solid];
m21_1697 -> m21_1687  [key=2, style=dotted];
m21_1697 -> m21_1699  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1698 -> m21_1699  [key=0, style=solid];
m21_1699 -> m21_1700  [key=0, style=solid];
m21_1699 -> m21_41  [key=2, style=dotted];
m21_1699 -> m21_1701  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1700 -> m21_1701  [key=0, style=solid];
m21_1700 -> m21_42  [key=2, style=dotted];
m21_1701 -> m21_1702  [key=0, style=solid];
m21_1701 -> m21_51  [key=2, style=dotted];
m21_1702 -> m21_1703  [key=0, style=solid];
m21_1702 -> m21_1693  [key=2, style=dotted];
m21_1702 -> m21_24  [key=2, style=dotted];
m21_1703 -> m21_1696  [key=0, style=bold, color=blue];
m21_3285 -> m21_3286  [key=0, style=solid];
m21_3286 -> m21_3287  [key=0, style=solid];
m21_3286 -> m21_73  [key=2, style=dotted];
m21_3286 -> m21_3288  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3287 -> m21_3285  [key=0, style=bold, color=blue];
m21_2933 -> m21_2934  [key=0, style=solid];
m21_2933 -> m21_2935  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_2933 -> m21_2936  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_2934 -> m21_2935  [key=0, style=solid];
m21_2935 -> m21_2936  [key=0, style=solid];
m21_2936 -> m21_2937  [key=0, style=solid];
m21_2937 -> m21_2933  [key=0, style=bold, color=blue];
m21_2087 -> m21_2088  [key=0, style=solid];
m21_2088 -> m21_2089  [key=0, style=solid];
m21_2088 -> m21_2090  [key=1, style=dashed, color=darkseagreen4, label=jsonIsoText];
m21_2088 -> m21_2088  [key=3, color=darkorchid, style=bold, label="Local variable string jsonIsoText"];
m21_2089 -> m21_2090  [key=0, style=solid];
m21_2089 -> m21_188  [key=2, style=dotted];
m21_2089 -> m21_1194  [key=2, style=dotted];
m21_2089 -> m21_309  [key=2, style=dotted];
m21_2089 -> m21_2091  [key=1, style=dashed, color=darkseagreen4, label=cISO];
m21_2090 -> m21_2091  [key=0, style=solid];
m21_2090 -> m21_188  [key=2, style=dotted];
m21_2090 -> m21_309  [key=2, style=dotted];
m21_2091 -> m21_2092  [key=0, style=solid];
m21_2091 -> m21_24  [key=2, style=dotted];
m21_2092 -> m21_2087  [key=0, style=bold, color=blue];
m21_3760 -> m21_3761  [key=0, style=solid];
m21_3761 -> m21_3762  [key=0, style=solid];
m21_3761 -> m21_3763  [key=1, style=dashed, color=darkseagreen4, label=content];
m21_3761 -> m21_3761  [key=3, color=darkorchid, style=bold, label="Local variable string content"];
m21_3762 -> m21_3763  [key=0, style=solid];
m21_3762 -> m21_188  [key=2, style=dotted];
m21_3763 -> m21_3764  [key=0, style=solid];
m21_3763 -> m21_3768  [key=2, style=dotted];
m21_3764 -> m21_3765  [key=0, style=solid];
m21_3765 -> m21_3766  [key=0, style=solid];
m21_3765 -> m21_1155  [key=2, style=dotted];
m21_3765 -> m21_24  [key=2, style=dotted];
m21_3765 -> m21_3765  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m21_3766 -> m21_3767  [key=0, style=solid];
m21_3766 -> m21_3769  [key=2, style=dotted];
m21_3766 -> m21_24  [key=2, style=dotted];
m21_3766 -> m21_3766  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m21_3767 -> m21_3760  [key=0, style=bold, color=blue];
m21_4405 -> m21_4406  [key=0, style=solid];
m21_4406 -> m21_4407  [key=0, style=solid];
m21_4407 -> m21_4405  [key=0, style=bold, color=blue];
m21_1325 -> m21_1326  [key=0, style=solid];
m21_1326 -> m21_1327  [key=0, style=solid];
m21_1326 -> m21_1332  [key=2, style=dotted];
m21_1327 -> m21_1328  [key=0, style=solid];
m21_1327 -> m21_142  [key=2, style=dotted];
m21_1327 -> m21_1329  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1328 -> m21_1329  [key=0, style=solid];
m21_1328 -> m21_24  [key=2, style=dotted];
m21_1329 -> m21_1330  [key=0, style=solid];
m21_1329 -> m21_51  [key=2, style=dotted];
m21_1330 -> m21_1331  [key=0, style=solid];
m21_1330 -> m21_24  [key=2, style=dotted];
m21_1331 -> m21_1325  [key=0, style=bold, color=blue];
m21_290 -> m21_291  [key=0, style=solid];
m21_290 -> m21_293  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m21_291 -> m21_292  [key=0, style=solid];
m21_291 -> m21_293  [key=0, style=solid];
m21_293 -> m21_294  [key=0, style=solid];
m21_293 -> m21_296  [key=2, style=dotted];
m21_292 -> m21_294  [key=0, style=solid];
m21_292 -> m21_295  [key=2, style=dotted];
m21_294 -> m21_290  [key=0, style=bold, color=blue];
m21_2198 -> m21_2199  [key=0, style=solid];
m21_2198 -> m21_2200  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2198 -> m21_2201  [key=1, style=dashed, color=darkseagreen4, label="System.DateTimeOffset"];
m21_2198 -> m21_2202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.TestObjects.Organization.Person"];
m21_2199 -> m21_2200  [key=0, style=solid];
m21_2200 -> m21_2201  [key=0, style=solid];
m21_2201 -> m21_2202  [key=0, style=solid];
m21_2202 -> m21_2203  [key=0, style=solid];
m21_2203 -> m21_2204  [key=0, style=solid];
m21_2203 -> m21_1351  [key=2, style=dotted];
m21_2204 -> m21_2198  [key=0, style=bold, color=blue];
m21_1644 -> m21_1645  [key=0, style=solid];
m21_1645 -> m21_1646  [key=0, style=solid];
m21_1645 -> m21_162  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1646 -> m21_1647  [key=0, style=solid];
m21_1646 -> m21_51  [key=2, style=dotted];
m21_1646 -> m21_1648  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1646 -> m21_1649  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1646 -> m21_1650  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1647 -> m21_1648  [key=0, style=solid];
m21_1647 -> m21_24  [key=2, style=dotted];
m21_1648 -> m21_1649  [key=0, style=solid];
m21_1648 -> m21_24  [key=2, style=dotted];
m21_1649 -> m21_1650  [key=0, style=solid];
m21_1649 -> m21_24  [key=2, style=dotted];
m21_1650 -> m21_1651  [key=0, style=solid];
m21_1650 -> m21_24  [key=2, style=dotted];
m21_1651 -> m21_1644  [key=0, style=bold, color=blue];
m21_70 -> m21_71  [key=0, style=solid];
m21_71 -> m21_72  [key=0, style=solid];
m21_71 -> m21_73  [key=2, style=dotted];
m21_71 -> m21_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_72 -> m21_70  [key=0, style=bold, color=blue];
m21_3547 -> m21_3549  [key=0, style=solid];
m21_3547 -> m21_3552  [key=1, style=dashed, color=darkseagreen4, label=T];
m21_3547 -> m21_3543  [key=3, color=darkorchid, style=bold, label="Parameter variable T obj"];
m21_3549 -> m21_3550  [key=0, style=solid];
m21_3549 -> m21_3015  [key=2, style=dotted];
m21_3549 -> m21_3552  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m21_3549 -> m21_3553  [key=1, style=dashed, color=darkseagreen4, label=stringWriter];
m21_3552 -> m21_3553  [key=0, style=solid];
m21_3552 -> m21_882  [key=2, style=dotted];
m21_3550 -> m21_3551  [key=0, style=solid];
m21_3550 -> m21_19  [key=2, style=dotted];
m21_3550 -> m21_3552  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3553 -> m21_3554  [key=0, style=solid];
m21_3553 -> m21_3020  [key=2, style=dotted];
m21_3551 -> m21_3552  [key=0, style=solid];
m21_3551 -> m21_1909  [key=2, style=dotted];
m21_3554 -> m21_3547  [key=0, style=bold, color=blue];
m21_3225 -> m21_3226  [key=0, style=solid];
m21_3226 -> m21_3227  [key=0, style=solid];
m21_3226 -> m21_3235  [key=2, style=dotted];
m21_3226 -> m21_1291  [key=2, style=dotted];
m21_3226 -> m21_1147  [key=2, style=dotted];
m21_3227 -> m21_3228  [key=0, style=solid];
m21_3227 -> m21_41  [key=2, style=dotted];
m21_3227 -> m21_3229  [key=1, style=dashed, color=darkseagreen4, label=jsonString];
m21_3228 -> m21_3229  [key=0, style=solid];
m21_3228 -> m21_3236  [key=2, style=dotted];
m21_3228 -> m21_42  [key=2, style=dotted];
m21_3229 -> m21_3230  [key=0, style=solid];
m21_3229 -> m21_51  [key=2, style=dotted];
m21_3229 -> m21_3231  [key=1, style=dashed, color=darkseagreen4, label=actual];
m21_3229 -> m21_3232  [key=1, style=dashed, color=darkseagreen4, label=actual];
m21_3230 -> m21_3231  [key=0, style=solid];
m21_3230 -> m21_1291  [key=2, style=dotted];
m21_3230 -> m21_24  [key=2, style=dotted];
m21_3231 -> m21_3232  [key=0, style=solid];
m21_3231 -> m21_1291  [key=2, style=dotted];
m21_3231 -> m21_24  [key=2, style=dotted];
m21_3232 -> m21_3233  [key=0, style=solid];
m21_3233 -> m21_3234  [key=0, style=solid];
m21_3233 -> m21_443  [key=2, style=dotted];
m21_3233 -> m21_3055  [key=2, style=dotted];
m21_3234 -> m21_3225  [key=0, style=bold, color=blue];
m21_407 -> m21_408  [key=0, style=solid];
m21_408 -> m21_409  [key=0, style=solid];
m21_408 -> m21_415  [key=2, style=dotted];
m21_408 -> m21_411  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_408 -> m21_412  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_408 -> m21_413  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_409 -> m21_410  [key=0, style=solid];
m21_409 -> m21_142  [key=2, style=dotted];
m21_411 -> m21_412  [key=0, style=solid];
m21_411 -> m21_24  [key=2, style=dotted];
m21_412 -> m21_413  [key=0, style=solid];
m21_412 -> m21_24  [key=2, style=dotted];
m21_413 -> m21_414  [key=0, style=solid];
m21_413 -> m21_24  [key=2, style=dotted];
m21_410 -> m21_411  [key=0, style=solid];
m21_410 -> m21_51  [key=2, style=dotted];
m21_410 -> m21_412  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_410 -> m21_413  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_414 -> m21_407  [key=0, style=bold, color=blue];
m21_3582 -> m21_3583  [key=0, style=solid];
m21_3583 -> m21_3584  [key=0, style=solid];
m21_3583 -> m21_3586  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3583 -> m21_3591  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3583 -> m21_3594  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3583 -> m21_3583  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3584 -> m21_3585  [key=0, style=solid];
m21_3584 -> m21_188  [key=2, style=dotted];
m21_3584 -> m21_3589  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_3584 -> m21_3590  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_3586 -> m21_3587  [key=0, style=solid];
m21_3586 -> m21_16  [key=2, style=dotted];
m21_3586 -> m21_386  [key=2, style=dotted];
m21_3586 -> m21_20  [key=2, style=dotted];
m21_3586 -> m21_3588  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_3591 -> m21_3592  [key=0, style=solid];
m21_3591 -> m21_73  [key=2, style=dotted];
m21_3591 -> m21_3593  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3585 -> m21_3586  [key=0, style=solid];
m21_3585 -> m21_879  [key=2, style=dotted];
m21_3589 -> m21_3590  [key=0, style=solid];
m21_3590 -> m21_3591  [key=0, style=solid];
m21_3590 -> m21_879  [key=2, style=dotted];
m21_3590 -> m21_3594  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_3587 -> m21_3588  [key=0, style=solid];
m21_3587 -> m21_843  [key=2, style=dotted];
m21_3588 -> m21_3589  [key=0, style=solid];
m21_3588 -> m21_24  [key=2, style=dotted];
m21_3592 -> m21_3582  [key=0, style=bold, color=blue];
m21_2321 -> m21_2322  [key=0, style=solid];
m21_2322 -> m21_2323  [key=0, style=solid];
m21_2322 -> m21_2329  [key=2, style=dotted];
m21_2323 -> m21_2324  [key=0, style=solid];
m21_2323 -> m21_41  [key=2, style=dotted];
m21_2324 -> m21_2325  [key=0, style=solid];
m21_2324 -> m21_42  [key=2, style=dotted];
m21_2325 -> m21_2326  [key=0, style=solid];
m21_2325 -> m21_2330  [key=2, style=dotted];
m21_2326 -> m21_2327  [key=0, style=solid];
m21_2326 -> m21_41  [key=2, style=dotted];
m21_2327 -> m21_2328  [key=0, style=solid];
m21_2327 -> m21_42  [key=2, style=dotted];
m21_2328 -> m21_2321  [key=0, style=bold, color=blue];
m21_4095 -> m21_4096  [key=0, style=solid];
m21_4096 -> m21_4097  [key=0, style=solid];
m21_4096 -> m21_4079  [key=2, style=dotted];
m21_4097 -> m21_4095  [key=0, style=bold, color=blue];
m21_4356 -> m21_4357  [key=0, style=solid];
m21_4357 -> m21_4358  [key=0, style=solid];
m21_4357 -> m21_2439  [key=2, style=dotted];
m21_4358 -> m21_4356  [key=0, style=bold, color=blue];
m21_2738 -> m21_2739  [key=0, style=solid];
m21_2738 -> m21_2727  [key=3, color=darkorchid, style=bold, label="Parameter variable string serStr"];
m21_2739 -> m21_2740  [key=0, style=solid];
m21_2739 -> m21_188  [key=2, style=dotted];
m21_2739 -> m21_309  [key=2, style=dotted];
m21_2740 -> m21_2738  [key=0, style=bold, color=blue];
m21_3297 -> m21_3298  [key=0, style=solid];
m21_3298 -> m21_3299  [key=0, style=solid];
m21_3298 -> m21_73  [key=2, style=dotted];
m21_3298 -> m21_3300  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3299 -> m21_3297  [key=0, style=bold, color=blue];
m21_4408 -> m21_4409  [key=0, style=solid];
m21_4408 -> m21_4410  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_4408 -> m21_4411  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_4408 -> m21_4412  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_4409 -> m21_4410  [key=0, style=solid];
m21_4410 -> m21_4411  [key=0, style=solid];
m21_4411 -> m21_4412  [key=0, style=solid];
m21_4412 -> m21_4413  [key=0, style=solid];
m21_4413 -> m21_4408  [key=0, style=bold, color=blue];
m21_1538 -> m21_1539  [key=0, style=solid];
m21_1539 -> m21_1540  [key=0, style=solid];
m21_1539 -> m21_1539  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1540 -> m21_1541  [key=0, style=solid];
m21_1540 -> m21_51  [key=2, style=dotted];
m21_1541 -> m21_1538  [key=0, style=bold, color=blue];
m21_2904 -> m21_2905  [key=0, style=solid];
m21_2905 -> m21_2906  [key=0, style=solid];
m21_2905 -> m21_2439  [key=2, style=dotted];
m21_2906 -> m21_2904  [key=0, style=bold, color=blue];
m21_3931 -> m21_3932  [key=0, style=solid];
m21_3932 -> m21_3933  [key=0, style=solid];
m21_3932 -> m21_786  [key=2, style=dotted];
m21_3932 -> m21_1291  [key=2, style=dotted];
m21_3932 -> m21_3934  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_3932 -> m21_3935  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_3932 -> m21_3936  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_3933 -> m21_3934  [key=0, style=solid];
m21_3933 -> m21_786  [key=2, style=dotted];
m21_3933 -> m21_1291  [key=2, style=dotted];
m21_3933 -> m21_3935  [key=1, style=dashed, color=darkseagreen4, label=jane];
m21_3933 -> m21_3936  [key=1, style=dashed, color=darkseagreen4, label=jane];
m21_3934 -> m21_3935  [key=0, style=solid];
m21_3935 -> m21_3936  [key=0, style=solid];
m21_3936 -> m21_3937  [key=0, style=solid];
m21_3936 -> m21_147  [key=2, style=dotted];
m21_3937 -> m21_3938  [key=0, style=solid];
m21_3937 -> m21_188  [key=2, style=dotted];
m21_3937 -> m21_189  [key=2, style=dotted];
m21_3938 -> m21_3939  [key=0, style=solid];
m21_3938 -> m21_42  [key=2, style=dotted];
m21_3939 -> m21_3931  [key=0, style=bold, color=blue];
m21_2023 -> m21_2024  [key=0, style=solid];
m21_2024 -> m21_2025  [key=0, style=solid];
m21_2024 -> m21_51  [key=2, style=dotted];
m21_2024 -> m21_2026  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2024 -> m21_2027  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2024 -> m21_2028  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2024 -> m21_2029  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2024 -> m21_2030  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2024 -> m21_2031  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2024 -> m21_2032  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2024 -> m21_2033  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2025 -> m21_2026  [key=0, style=solid];
m21_2025 -> m21_843  [key=2, style=dotted];
m21_2026 -> m21_2027  [key=0, style=solid];
m21_2026 -> m21_843  [key=2, style=dotted];
m21_2027 -> m21_2028  [key=0, style=solid];
m21_2027 -> m21_388  [key=2, style=dotted];
m21_2027 -> m21_24  [key=2, style=dotted];
m21_2028 -> m21_2029  [key=0, style=solid];
m21_2028 -> m21_388  [key=2, style=dotted];
m21_2028 -> m21_24  [key=2, style=dotted];
m21_2029 -> m21_2030  [key=0, style=solid];
m21_2029 -> m21_24  [key=2, style=dotted];
m21_2030 -> m21_2031  [key=0, style=solid];
m21_2030 -> m21_24  [key=2, style=dotted];
m21_2031 -> m21_2032  [key=0, style=solid];
m21_2031 -> m21_24  [key=2, style=dotted];
m21_2032 -> m21_2033  [key=0, style=solid];
m21_2032 -> m21_24  [key=2, style=dotted];
m21_2033 -> m21_2034  [key=0, style=solid];
m21_2033 -> m21_24  [key=2, style=dotted];
m21_2034 -> m21_2023  [key=0, style=bold, color=blue];
m21_459 -> m21_460  [key=0, style=solid];
m21_460 -> m21_461  [key=0, style=solid];
m21_460 -> m21_467  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_460 -> m21_460  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_461 -> m21_462  [key=0, style=solid];
m21_461 -> m21_478  [key=2, style=dotted];
m21_461 -> m21_463  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_461 -> m21_464  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_461 -> m21_465  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_461 -> m21_466  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_461 -> m21_467  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_467 -> m21_468  [key=0, style=solid];
m21_467 -> m21_480  [key=2, style=dotted];
m21_467 -> m21_481  [key=2, style=dotted];
m21_467 -> m21_22  [key=2, style=dotted];
m21_462 -> m21_463  [key=0, style=solid];
m21_462 -> m21_24  [key=2, style=dotted];
m21_463 -> m21_464  [key=0, style=solid];
m21_463 -> m21_24  [key=2, style=dotted];
m21_464 -> m21_465  [key=0, style=solid];
m21_464 -> m21_24  [key=2, style=dotted];
m21_465 -> m21_466  [key=0, style=solid];
m21_465 -> m21_479  [key=2, style=dotted];
m21_465 -> m21_24  [key=2, style=dotted];
m21_466 -> m21_467  [key=0, style=solid];
m21_466 -> m21_24  [key=2, style=dotted];
m21_468 -> m21_469  [key=0, style=solid];
m21_468 -> m21_471  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_469 -> m21_470  [key=0, style=solid];
m21_469 -> m21_478  [key=2, style=dotted];
m21_469 -> m21_471  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_471 -> m21_472  [key=0, style=solid];
m21_471 -> m21_480  [key=2, style=dotted];
m21_471 -> m21_481  [key=2, style=dotted];
m21_471 -> m21_22  [key=2, style=dotted];
m21_470 -> m21_471  [key=0, style=solid];
m21_470 -> m21_24  [key=2, style=dotted];
m21_472 -> m21_473  [key=0, style=solid];
m21_472 -> m21_476  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_473 -> m21_474  [key=0, style=solid];
m21_473 -> m21_478  [key=2, style=dotted];
m21_473 -> m21_475  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_473 -> m21_476  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_476 -> m21_477  [key=0, style=solid];
m21_476 -> m21_480  [key=2, style=dotted];
m21_476 -> m21_481  [key=2, style=dotted];
m21_476 -> m21_22  [key=2, style=dotted];
m21_474 -> m21_475  [key=0, style=solid];
m21_474 -> m21_24  [key=2, style=dotted];
m21_475 -> m21_476  [key=0, style=solid];
m21_475 -> m21_24  [key=2, style=dotted];
m21_477 -> m21_459  [key=0, style=bold, color=blue];
m21_1855 -> m21_1856  [key=0, style=solid];
m21_1856 -> m21_1857  [key=0, style=solid];
m21_1856 -> m21_1860  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1856 -> m21_1821  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1857 -> m21_1858  [key=0, style=solid];
m21_1857 -> m21_73  [key=2, style=dotted];
m21_1857 -> m21_1859  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1858 -> m21_1855  [key=0, style=bold, color=blue];
m21_404 -> m21_405  [key=0, style=solid];
m21_405 -> m21_406  [key=0, style=solid];
m21_406 -> m21_404  [key=0, style=bold, color=blue];
m21_984 -> m21_985  [key=0, style=solid];
m21_985 -> m21_986  [key=0, style=solid];
m21_985 -> m21_999  [key=2, style=dotted];
m21_985 -> m21_987  [key=1, style=dashed, color=darkseagreen4, label=product];
m21_985 -> m21_988  [key=1, style=dashed, color=darkseagreen4, label=product];
m21_985 -> m21_989  [key=1, style=dashed, color=darkseagreen4, label=product];
m21_985 -> m21_990  [key=1, style=dashed, color=darkseagreen4, label=product];
m21_986 -> m21_987  [key=0, style=solid];
m21_987 -> m21_988  [key=0, style=solid];
m21_987 -> m21_1000  [key=2, style=dotted];
m21_988 -> m21_989  [key=0, style=solid];
m21_989 -> m21_990  [key=0, style=solid];
m21_990 -> m21_991  [key=0, style=solid];
m21_990 -> m21_142  [key=2, style=dotted];
m21_991 -> m21_992  [key=0, style=solid];
m21_991 -> m21_982  [key=2, style=dotted];
m21_991 -> m21_993  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_991 -> m21_994  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_991 -> m21_995  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_991 -> m21_996  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_991 -> m21_997  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_992 -> m21_993  [key=0, style=solid];
m21_992 -> m21_24  [key=2, style=dotted];
m21_993 -> m21_994  [key=0, style=solid];
m21_993 -> m21_1000  [key=2, style=dotted];
m21_993 -> m21_24  [key=2, style=dotted];
m21_994 -> m21_995  [key=0, style=solid];
m21_994 -> m21_24  [key=2, style=dotted];
m21_995 -> m21_996  [key=0, style=solid];
m21_995 -> m21_24  [key=2, style=dotted];
m21_996 -> m21_997  [key=0, style=solid];
m21_996 -> m21_24  [key=2, style=dotted];
m21_997 -> m21_998  [key=0, style=solid];
m21_997 -> m21_24  [key=2, style=dotted];
m21_998 -> m21_984  [key=0, style=bold, color=blue];
m21_4068 -> m21_4069  [key=0, style=solid];
m21_4068 -> m21_4071  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m21_4068 -> m21_4073  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m21_4068 -> m21_4075  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m21_4069 -> m21_4070  [key=0, style=solid];
m21_4069 -> m21_4071  [key=0, style=solid];
m21_4071 -> m21_4072  [key=0, style=solid];
m21_4071 -> m21_4073  [key=0, style=solid];
m21_4073 -> m21_4074  [key=0, style=solid];
m21_4073 -> m21_4075  [key=0, style=solid];
m21_4075 -> m21_4076  [key=0, style=solid];
m21_4075 -> m21_4077  [key=0, style=solid];
m21_4070 -> m21_4078  [key=0, style=solid];
m21_4072 -> m21_4078  [key=0, style=solid];
m21_4074 -> m21_4078  [key=0, style=solid];
m21_4076 -> m21_4078  [key=0, style=solid];
m21_4076 -> m21_877  [key=2, style=dotted];
m21_4077 -> m21_4078  [key=0, style=solid];
m21_4077 -> m21_4079  [key=2, style=dotted];
m21_4078 -> m21_4068  [key=0, style=bold, color=blue];
m21_2629 -> m21_2630  [key=0, style=solid];
m21_2630 -> m21_2631  [key=0, style=solid];
m21_2630 -> m21_2650  [key=2, style=dotted];
m21_2630 -> m21_2632  [key=1, style=dashed, color=darkseagreen4, label=expando];
m21_2630 -> m21_2633  [key=1, style=dashed, color=darkseagreen4, label=expando];
m21_2630 -> m21_2634  [key=1, style=dashed, color=darkseagreen4, label=expando];
m21_2630 -> m21_2635  [key=1, style=dashed, color=darkseagreen4, label=expando];
m21_2630 -> m21_2636  [key=1, style=dashed, color=darkseagreen4, label=expando];
m21_2630 -> m21_2640  [key=1, style=dashed, color=darkseagreen4, label=expando];
m21_2630 -> m21_2642  [key=1, style=dashed, color=darkseagreen4, label=expando];
m21_2630 -> m21_2646  [key=1, style=dashed, color=darkseagreen4, label=expando];
m21_2630 -> m21_2648  [key=1, style=dashed, color=darkseagreen4, label=expando];
m21_2631 -> m21_2632  [key=0, style=solid];
m21_2632 -> m21_2633  [key=0, style=solid];
m21_2633 -> m21_2634  [key=0, style=solid];
m21_2633 -> m21_2650  [key=2, style=dotted];
m21_2634 -> m21_2635  [key=0, style=solid];
m21_2635 -> m21_2636  [key=0, style=solid];
m21_2635 -> m21_1147  [key=2, style=dotted];
m21_2636 -> m21_2637  [key=0, style=solid];
m21_2636 -> m21_2651  [key=2, style=dotted];
m21_2636 -> m21_2638  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2640 -> m21_2641  [key=0, style=solid];
m21_2640 -> m21_24  [key=2, style=dotted];
m21_2642 -> m21_2643  [key=0, style=solid];
m21_2642 -> m21_24  [key=2, style=dotted];
m21_2646 -> m21_2647  [key=0, style=solid];
m21_2646 -> m21_24  [key=2, style=dotted];
m21_2648 -> m21_2649  [key=0, style=solid];
m21_2648 -> m21_24  [key=2, style=dotted];
m21_2637 -> m21_2638  [key=0, style=solid];
m21_2637 -> m21_42  [key=2, style=dotted];
m21_2638 -> m21_2639  [key=0, style=solid];
m21_2638 -> m21_51  [key=2, style=dotted];
m21_2638 -> m21_2640  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m21_2638 -> m21_2641  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m21_2638 -> m21_2642  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m21_2638 -> m21_2643  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m21_2638 -> m21_2644  [key=1, style=dashed, color=darkseagreen4, label=newExpando];
m21_2639 -> m21_2640  [key=0, style=solid];
m21_2639 -> m21_792  [key=2, style=dotted];
m21_2641 -> m21_2642  [key=0, style=solid];
m21_2641 -> m21_792  [key=2, style=dotted];
m21_2643 -> m21_2644  [key=0, style=solid];
m21_2643 -> m21_792  [key=2, style=dotted];
m21_2644 -> m21_2645  [key=0, style=solid];
m21_2644 -> m21_2646  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_2644 -> m21_2647  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_2644 -> m21_2648  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_2645 -> m21_2646  [key=0, style=solid];
m21_2645 -> m21_792  [key=2, style=dotted];
m21_2647 -> m21_2648  [key=0, style=solid];
m21_2647 -> m21_792  [key=2, style=dotted];
m21_2649 -> m21_2629  [key=0, style=bold, color=blue];
m21_737 -> m21_738  [key=0, style=solid];
m21_738 -> m21_739  [key=0, style=solid];
m21_739 -> m21_737  [key=0, style=bold, color=blue];
m21_4083 -> m21_4084  [key=0, style=solid];
m21_4084 -> m21_4085  [key=0, style=solid];
m21_4084 -> m21_4079  [key=2, style=dotted];
m21_4085 -> m21_4083  [key=0, style=bold, color=blue];
m21_1898 -> m21_1899  [key=0, style=solid];
m21_1899 -> m21_1900  [key=0, style=solid];
m21_1899 -> m21_1899  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1900 -> m21_1901  [key=0, style=solid];
m21_1900 -> m21_51  [key=2, style=dotted];
m21_1901 -> m21_1902  [key=0, style=solid];
m21_1901 -> m21_24  [key=2, style=dotted];
m21_1902 -> m21_1898  [key=0, style=bold, color=blue];
m21_204 -> m21_205  [key=0, style=solid];
m21_205 -> m21_206  [key=0, style=solid];
m21_205 -> m21_209  [key=2, style=dotted];
m21_206 -> m21_207  [key=0, style=solid];
m21_206 -> m21_188  [key=2, style=dotted];
m21_206 -> m21_210  [key=2, style=dotted];
m21_206 -> m21_211  [key=2, style=dotted];
m21_207 -> m21_208  [key=0, style=solid];
m21_207 -> m21_24  [key=2, style=dotted];
m21_208 -> m21_204  [key=0, style=bold, color=blue];
m21_63 -> m21_64  [key=0, style=solid];
m21_64 -> m21_65  [key=0, style=solid];
m21_64 -> m21_51  [key=2, style=dotted];
m21_65 -> m21_66  [key=0, style=solid];
m21_65 -> m21_69  [key=2, style=dotted];
m21_65 -> m21_65  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_65 -> m21_67  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_66 -> m21_67  [key=0, style=solid];
m21_66 -> m21_24  [key=2, style=dotted];
m21_67 -> m21_68  [key=0, style=solid];
m21_67 -> m21_24  [key=2, style=dotted];
m21_67 -> m21_67  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_68 -> m21_63  [key=0, style=bold, color=blue];
m21_3628 -> m21_3629  [key=0, style=solid];
m21_3629 -> m21_3630  [key=0, style=solid];
m21_3629 -> m21_73  [key=2, style=dotted];
m21_3629 -> m21_3631  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3629 -> m21_3629  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3630 -> m21_3628  [key=0, style=bold, color=blue];
m21_4193 -> m21_4194  [key=0, style=solid];
m21_4194 -> m21_4195  [key=0, style=solid];
m21_4194 -> m21_1000  [key=2, style=dotted];
m21_4194 -> m21_4197  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4194 -> m21_4200  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4195 -> m21_4196  [key=0, style=solid];
m21_4195 -> m21_4147  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m21_4197 -> m21_4198  [key=0, style=solid];
m21_4197 -> m21_209  [key=2, style=dotted];
m21_4197 -> m21_189  [key=2, style=dotted];
m21_4197 -> m21_4199  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4200 -> m21_4201  [key=0, style=solid];
m21_4200 -> m21_1725  [key=2, style=dotted];
m21_4200 -> m21_24  [key=2, style=dotted];
m21_4196 -> m21_4197  [key=0, style=solid];
m21_4196 -> m21_188  [key=2, style=dotted];
m21_4196 -> m21_4199  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_4199 -> m21_4200  [key=0, style=solid];
m21_4199 -> m21_309  [key=2, style=dotted];
m21_4198 -> m21_4199  [key=0, style=solid];
m21_4198 -> m21_42  [key=2, style=dotted];
m21_4201 -> m21_4193  [key=0, style=bold, color=blue];
m21_1946 -> m21_1947  [key=0, style=solid];
m21_1947 -> m21_1948  [key=0, style=solid];
m21_1947 -> m21_1956  [key=2, style=dotted];
m21_1947 -> m21_1951  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m21_1948 -> m21_1949  [key=0, style=solid];
m21_1948 -> m21_41  [key=2, style=dotted];
m21_1948 -> m21_1950  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1951 -> m21_1952  [key=0, style=solid];
m21_1951 -> m21_24  [key=2, style=dotted];
m21_1951 -> m21_1951  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m21_1951 -> m21_1953  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m21_1949 -> m21_1950  [key=0, style=solid];
m21_1949 -> m21_42  [key=2, style=dotted];
m21_1950 -> m21_1951  [key=0, style=solid];
m21_1950 -> m21_51  [key=2, style=dotted];
m21_1952 -> m21_1953  [key=0, style=solid];
m21_1952 -> m21_24  [key=2, style=dotted];
m21_1953 -> m21_1954  [key=0, style=solid];
m21_1953 -> m21_24  [key=2, style=dotted];
m21_1953 -> m21_1953  [key=1, style=dashed, color=darkseagreen4, label=structTest];
m21_1954 -> m21_1955  [key=0, style=solid];
m21_1954 -> m21_24  [key=2, style=dotted];
m21_1955 -> m21_1946  [key=0, style=bold, color=blue];
m21_3183 -> m21_3184  [key=0, style=solid];
m21_3184 -> m21_3185  [key=0, style=solid];
m21_3184 -> m21_73  [key=2, style=dotted];
m21_3184 -> m21_3186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3184 -> m21_3184  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3185 -> m21_3183  [key=0, style=bold, color=blue];
m21_3956 -> m21_3957  [key=0, style=solid];
m21_3956 -> m21_3958  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_3957 -> m21_3958  [key=0, style=solid];
m21_3957 -> m21_4489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize"];
m21_3958 -> m21_3959  [key=0, style=solid];
m21_3958 -> m21_4489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSize"];
m21_3959 -> m21_3956  [key=0, style=bold, color=blue];
m21_4211 -> m21_4212  [key=0, style=solid];
m21_4212 -> m21_4213  [key=0, style=solid];
m21_4212 -> m21_389  [key=2, style=dotted];
m21_4212 -> m21_4215  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4212 -> m21_4218  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4213 -> m21_4214  [key=0, style=solid];
m21_4213 -> m21_4204  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m21_4215 -> m21_4216  [key=0, style=solid];
m21_4215 -> m21_209  [key=2, style=dotted];
m21_4215 -> m21_189  [key=2, style=dotted];
m21_4215 -> m21_4217  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4218 -> m21_4219  [key=0, style=solid];
m21_4218 -> m21_1725  [key=2, style=dotted];
m21_4218 -> m21_24  [key=2, style=dotted];
m21_4214 -> m21_4215  [key=0, style=solid];
m21_4214 -> m21_188  [key=2, style=dotted];
m21_4214 -> m21_4217  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_4217 -> m21_4218  [key=0, style=solid];
m21_4217 -> m21_309  [key=2, style=dotted];
m21_4216 -> m21_4217  [key=0, style=solid];
m21_4216 -> m21_42  [key=2, style=dotted];
m21_4219 -> m21_4211  [key=0, style=bold, color=blue];
m21_25 -> m21_26  [key=0, style=solid];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_28  [key=2, style=dotted];
m21_27 -> m21_25  [key=0, style=bold, color=blue];
m21_1105 -> m21_1106  [key=0, style=solid];
m21_1106 -> m21_1107  [key=0, style=solid];
m21_1106 -> m21_1110  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1106 -> m21_1106  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1107 -> m21_1108  [key=0, style=solid];
m21_1107 -> m21_73  [key=2, style=dotted];
m21_1107 -> m21_1109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1108 -> m21_1105  [key=0, style=bold, color=blue];
m21_1613 -> m21_1614  [key=0, style=solid];
m21_1614 -> m21_1615  [key=0, style=solid];
m21_1614 -> m21_1622  [key=2, style=dotted];
m21_1614 -> m21_1616  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_1615 -> m21_1616  [key=0, style=solid];
m21_1616 -> m21_1617  [key=0, style=solid];
m21_1616 -> m21_142  [key=2, style=dotted];
m21_1616 -> m21_1618  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1617 -> m21_1618  [key=0, style=solid];
m21_1617 -> m21_24  [key=2, style=dotted];
m21_1618 -> m21_1619  [key=0, style=solid];
m21_1618 -> m21_51  [key=2, style=dotted];
m21_1619 -> m21_1620  [key=0, style=solid];
m21_1619 -> m21_142  [key=2, style=dotted];
m21_1620 -> m21_1621  [key=0, style=solid];
m21_1620 -> m21_24  [key=2, style=dotted];
m21_1621 -> m21_1613  [key=0, style=bold, color=blue];
m21_3523 -> m21_3524  [key=0, style=solid];
m21_3524 -> m21_3525  [key=0, style=solid];
m21_3524 -> m21_209  [key=2, style=dotted];
m21_3524 -> m21_1147  [key=2, style=dotted];
m21_3525 -> m21_3526  [key=0, style=solid];
m21_3525 -> m21_188  [key=2, style=dotted];
m21_3525 -> m21_211  [key=2, style=dotted];
m21_3525 -> m21_3527  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3526 -> m21_3527  [key=0, style=solid];
m21_3526 -> m21_42  [key=2, style=dotted];
m21_3527 -> m21_3528  [key=0, style=solid];
m21_3527 -> m21_51  [key=2, style=dotted];
m21_3527 -> m21_3529  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3527 -> m21_3530  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3528 -> m21_3529  [key=0, style=solid];
m21_3528 -> m21_24  [key=2, style=dotted];
m21_3529 -> m21_3530  [key=0, style=solid];
m21_3529 -> m21_1147  [key=2, style=dotted];
m21_3529 -> m21_24  [key=2, style=dotted];
m21_3530 -> m21_3531  [key=0, style=solid];
m21_3530 -> m21_1147  [key=2, style=dotted];
m21_3530 -> m21_24  [key=2, style=dotted];
m21_3531 -> m21_3523  [key=0, style=bold, color=blue];
m21_829 -> m21_830  [key=0, style=solid];
m21_830 -> m21_831  [key=0, style=solid];
m21_830 -> m21_835  [key=2, style=dotted];
m21_830 -> m21_836  [key=2, style=dotted];
m21_831 -> m21_832  [key=0, style=solid];
m21_831 -> m21_142  [key=2, style=dotted];
m21_831 -> m21_833  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_832 -> m21_833  [key=0, style=solid];
m21_832 -> m21_832  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m21_833 -> m21_834  [key=0, style=solid];
m21_833 -> m21_24  [key=2, style=dotted];
m21_834 -> m21_829  [key=0, style=bold, color=blue];
m21_2981 -> m21_2982  [key=0, style=solid];
m21_2982 -> m21_2983  [key=0, style=solid];
m21_2982 -> m21_2992  [key=2, style=dotted];
m21_2982 -> m21_2986  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2982 -> m21_2987  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2982 -> m21_2988  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2982 -> m21_2989  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2982 -> m21_2990  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2983 -> m21_2984  [key=0, style=solid];
m21_2983 -> m21_41  [key=2, style=dotted];
m21_2983 -> m21_2985  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2986 -> m21_2987  [key=0, style=solid];
m21_2986 -> m21_24  [key=2, style=dotted];
m21_2987 -> m21_2988  [key=0, style=solid];
m21_2987 -> m21_24  [key=2, style=dotted];
m21_2988 -> m21_2989  [key=0, style=solid];
m21_2988 -> m21_24  [key=2, style=dotted];
m21_2989 -> m21_2990  [key=0, style=solid];
m21_2989 -> m21_24  [key=2, style=dotted];
m21_2990 -> m21_2991  [key=0, style=solid];
m21_2990 -> m21_24  [key=2, style=dotted];
m21_2984 -> m21_2985  [key=0, style=solid];
m21_2984 -> m21_42  [key=2, style=dotted];
m21_2985 -> m21_2986  [key=0, style=solid];
m21_2985 -> m21_51  [key=2, style=dotted];
m21_2985 -> m21_2987  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2985 -> m21_2988  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2985 -> m21_2989  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2985 -> m21_2990  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2991 -> m21_2981  [key=0, style=bold, color=blue];
m21_4012 -> m21_4013  [key=0, style=solid];
m21_4013 -> m21_4014  [key=0, style=solid];
m21_4013 -> m21_3929  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_4014 -> m21_4015  [key=0, style=solid];
m21_4014 -> m21_188  [key=2, style=dotted];
m21_4014 -> m21_565  [key=2, style=dotted];
m21_4014 -> m21_309  [key=2, style=dotted];
m21_4014 -> m21_4016  [key=1, style=dashed, color=darkseagreen4, label=people];
m21_4014 -> m21_4017  [key=1, style=dashed, color=darkseagreen4, label=people];
m21_4015 -> m21_4016  [key=0, style=solid];
m21_4015 -> m21_24  [key=2, style=dotted];
m21_4016 -> m21_4017  [key=0, style=solid];
m21_4016 -> m21_4018  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_4016 -> m21_4019  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_4017 -> m21_4018  [key=0, style=solid];
m21_4017 -> m21_4019  [key=1, style=dashed, color=darkseagreen4, label=jane];
m21_4018 -> m21_4019  [key=0, style=solid];
m21_4018 -> m21_24  [key=2, style=dotted];
m21_4019 -> m21_4020  [key=0, style=solid];
m21_4019 -> m21_24  [key=2, style=dotted];
m21_4020 -> m21_4012  [key=0, style=bold, color=blue];
m21_1834 -> m21_1835  [key=0, style=solid];
m21_1835 -> m21_1836  [key=0, style=solid];
m21_1835 -> m21_1839  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1835 -> m21_1821  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1836 -> m21_1837  [key=0, style=solid];
m21_1836 -> m21_73  [key=2, style=dotted];
m21_1836 -> m21_1838  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1837 -> m21_1834  [key=0, style=bold, color=blue];
m21_53 -> m21_54  [key=0, style=solid];
m21_54 -> m21_55  [key=0, style=solid];
m21_54 -> m21_56  [key=2, style=dotted];
m21_55 -> m21_53  [key=0, style=bold, color=blue];
m21_3730 -> m21_3731  [key=0, style=solid];
m21_3731 -> m21_3732  [key=0, style=solid];
m21_3731 -> m21_3731  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3732 -> m21_3733  [key=0, style=solid];
m21_3732 -> m21_51  [key=2, style=dotted];
m21_3732 -> m21_3734  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_3733 -> m21_3734  [key=0, style=solid];
m21_3733 -> m21_24  [key=2, style=dotted];
m21_3734 -> m21_3735  [key=0, style=solid];
m21_3734 -> m21_24  [key=2, style=dotted];
m21_3735 -> m21_3730  [key=0, style=bold, color=blue];
m21_4313 -> m21_4314  [key=0, style=solid];
m21_4313 -> m21_3308  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m21_4314 -> m21_4315  [key=0, style=solid];
m21_4314 -> m21_20  [key=2, style=dotted];
m21_4314 -> m21_4317  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m21_4314 -> m21_4320  [key=1, style=dashed, color=darkseagreen4, label=messageJObject];
m21_4315 -> m21_4316  [key=0, style=solid];
m21_4315 -> m21_4317  [key=0, style=solid];
m21_4317 -> m21_4318  [key=0, style=solid];
m21_4317 -> m21_4324  [key=2, style=dotted];
m21_4317 -> m21_4325  [key=2, style=dotted];
m21_4317 -> m21_4321  [key=1, style=dashed, color=darkseagreen4, label=address];
m21_4317 -> m21_4322  [key=1, style=dashed, color=darkseagreen4, label=address];
m21_4320 -> m21_4321  [key=0, style=solid];
m21_4320 -> m21_4322  [key=0, style=solid];
m21_4320 -> m21_4326  [key=2, style=dotted];
m21_4320 -> m21_4325  [key=2, style=dotted];
m21_4320 -> m21_4327  [key=2, style=dotted];
m21_4320 -> m21_4320  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m21_4316 -> m21_4323  [key=0, style=solid];
m21_4318 -> m21_4319  [key=0, style=solid];
m21_4318 -> m21_4320  [key=1, style=dashed, color=darkseagreen4, label=displayNameToken];
m21_4321 -> m21_4323  [key=0, style=solid];
m21_4321 -> m21_4328  [key=2, style=dotted];
m21_4322 -> m21_4323  [key=0, style=solid];
m21_4322 -> m21_4329  [key=2, style=dotted];
m21_4319 -> m21_4320  [key=0, style=solid];
m21_4323 -> m21_4313  [key=0, style=bold, color=blue];
m21_4385 -> m21_4386  [key=0, style=solid];
m21_4386 -> m21_4387  [key=0, style=solid];
m21_4387 -> m21_4388  [key=0, style=solid];
m21_4388 -> m21_4385  [key=0, style=bold, color=blue];
m21_1876 -> m21_1877  [key=0, style=solid];
m21_1877 -> m21_1878  [key=0, style=solid];
m21_1877 -> m21_162  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1878 -> m21_1879  [key=0, style=solid];
m21_1878 -> m21_51  [key=2, style=dotted];
m21_1879 -> m21_1880  [key=0, style=solid];
m21_1879 -> m21_1882  [key=0, style=solid];
m21_1879 -> m21_21  [key=2, style=dotted];
m21_1880 -> m21_1881  [key=0, style=solid];
m21_1881 -> m21_1882  [key=0, style=solid];
m21_1881 -> m21_1502  [key=2, style=dotted];
m21_1881 -> m21_22  [key=2, style=dotted];
m21_1882 -> m21_1876  [key=0, style=bold, color=blue];
m21_572 -> m21_573  [key=0, style=solid];
m21_573 -> m21_574  [key=0, style=solid];
m21_573 -> m21_188  [key=2, style=dotted];
m21_573 -> m21_575  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_576  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_577  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_578  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_579  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_580  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_581  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_582  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_584  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_585  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_586  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_587  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_588  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_589  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_590  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_591  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_592  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_593  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_594  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_595  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_596  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_597  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_598  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_599  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_600  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_601  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_602  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_603  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_604  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_605  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_606  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_607  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_608  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_609  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_610  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_611  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_612  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_613  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_614  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_615  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_616  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_617  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_618  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_619  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_621  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_622  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_623  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_624  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_625  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_626  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_627  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_629  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_630  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_631  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_632  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_633  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_634  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_635  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_636  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_637  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_638  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_573 -> m21_639  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_574 -> m21_575  [key=0, style=solid];
m21_574 -> m21_558  [key=2, style=dotted];
m21_574 -> m21_576  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m21_575 -> m21_576  [key=0, style=solid];
m21_576 -> m21_577  [key=0, style=solid];
m21_576 -> m21_24  [key=2, style=dotted];
m21_577 -> m21_578  [key=0, style=solid];
m21_578 -> m21_579  [key=0, style=solid];
m21_578 -> m21_24  [key=2, style=dotted];
m21_579 -> m21_580  [key=0, style=solid];
m21_580 -> m21_581  [key=0, style=solid];
m21_580 -> m21_24  [key=2, style=dotted];
m21_581 -> m21_582  [key=0, style=solid];
m21_581 -> m21_560  [key=2, style=dotted];
m21_582 -> m21_583  [key=0, style=solid];
m21_582 -> m21_560  [key=2, style=dotted];
m21_582 -> m21_24  [key=2, style=dotted];
m21_584 -> m21_585  [key=0, style=solid];
m21_585 -> m21_586  [key=0, style=solid];
m21_585 -> m21_24  [key=2, style=dotted];
m21_586 -> m21_587  [key=0, style=solid];
m21_586 -> m21_248  [key=2, style=dotted];
m21_586 -> m21_335  [key=2, style=dotted];
m21_587 -> m21_588  [key=0, style=solid];
m21_587 -> m21_24  [key=2, style=dotted];
m21_588 -> m21_589  [key=0, style=solid];
m21_588 -> m21_563  [key=2, style=dotted];
m21_589 -> m21_590  [key=0, style=solid];
m21_589 -> m21_564  [key=2, style=dotted];
m21_589 -> m21_24  [key=2, style=dotted];
m21_590 -> m21_591  [key=0, style=solid];
m21_591 -> m21_592  [key=0, style=solid];
m21_591 -> m21_24  [key=2, style=dotted];
m21_592 -> m21_593  [key=0, style=solid];
m21_593 -> m21_594  [key=0, style=solid];
m21_593 -> m21_24  [key=2, style=dotted];
m21_594 -> m21_595  [key=0, style=solid];
m21_595 -> m21_596  [key=0, style=solid];
m21_595 -> m21_24  [key=2, style=dotted];
m21_596 -> m21_597  [key=0, style=solid];
m21_597 -> m21_598  [key=0, style=solid];
m21_597 -> m21_24  [key=2, style=dotted];
m21_598 -> m21_599  [key=0, style=solid];
m21_599 -> m21_600  [key=0, style=solid];
m21_599 -> m21_24  [key=2, style=dotted];
m21_600 -> m21_601  [key=0, style=solid];
m21_601 -> m21_602  [key=0, style=solid];
m21_601 -> m21_24  [key=2, style=dotted];
m21_602 -> m21_603  [key=0, style=solid];
m21_603 -> m21_604  [key=0, style=solid];
m21_603 -> m21_24  [key=2, style=dotted];
m21_604 -> m21_605  [key=0, style=solid];
m21_605 -> m21_606  [key=0, style=solid];
m21_605 -> m21_24  [key=2, style=dotted];
m21_606 -> m21_607  [key=0, style=solid];
m21_607 -> m21_608  [key=0, style=solid];
m21_607 -> m21_24  [key=2, style=dotted];
m21_608 -> m21_609  [key=0, style=solid];
m21_609 -> m21_610  [key=0, style=solid];
m21_609 -> m21_24  [key=2, style=dotted];
m21_610 -> m21_611  [key=0, style=solid];
m21_611 -> m21_612  [key=0, style=solid];
m21_611 -> m21_24  [key=2, style=dotted];
m21_612 -> m21_613  [key=0, style=solid];
m21_613 -> m21_614  [key=0, style=solid];
m21_613 -> m21_24  [key=2, style=dotted];
m21_614 -> m21_615  [key=0, style=solid];
m21_615 -> m21_616  [key=0, style=solid];
m21_615 -> m21_24  [key=2, style=dotted];
m21_616 -> m21_617  [key=0, style=solid];
m21_617 -> m21_618  [key=0, style=solid];
m21_617 -> m21_24  [key=2, style=dotted];
m21_618 -> m21_619  [key=0, style=solid];
m21_619 -> m21_620  [key=0, style=solid];
m21_619 -> m21_24  [key=2, style=dotted];
m21_621 -> m21_622  [key=0, style=solid];
m21_622 -> m21_623  [key=0, style=solid];
m21_622 -> m21_24  [key=2, style=dotted];
m21_623 -> m21_624  [key=0, style=solid];
m21_623 -> m21_641  [key=2, style=dotted];
m21_623 -> m21_24  [key=2, style=dotted];
m21_624 -> m21_625  [key=0, style=solid];
m21_625 -> m21_626  [key=0, style=solid];
m21_625 -> m21_641  [key=2, style=dotted];
m21_625 -> m21_24  [key=2, style=dotted];
m21_626 -> m21_627  [key=0, style=solid];
m21_627 -> m21_628  [key=0, style=solid];
m21_627 -> m21_24  [key=2, style=dotted];
m21_629 -> m21_630  [key=0, style=solid];
m21_630 -> m21_631  [key=0, style=solid];
m21_630 -> m21_24  [key=2, style=dotted];
m21_631 -> m21_632  [key=0, style=solid];
m21_632 -> m21_633  [key=0, style=solid];
m21_632 -> m21_24  [key=2, style=dotted];
m21_633 -> m21_634  [key=0, style=solid];
m21_633 -> m21_24  [key=2, style=dotted];
m21_634 -> m21_635  [key=0, style=solid];
m21_635 -> m21_636  [key=0, style=solid];
m21_635 -> m21_24  [key=2, style=dotted];
m21_636 -> m21_637  [key=0, style=solid];
m21_637 -> m21_638  [key=0, style=solid];
m21_637 -> m21_24  [key=2, style=dotted];
m21_638 -> m21_639  [key=0, style=solid];
m21_639 -> m21_640  [key=0, style=solid];
m21_639 -> m21_24  [key=2, style=dotted];
m21_583 -> m21_584  [key=0, style=solid];
m21_583 -> m21_561  [key=2, style=dotted];
m21_583 -> m21_585  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m21_620 -> m21_621  [key=0, style=solid];
m21_620 -> m21_565  [key=2, style=dotted];
m21_620 -> m21_622  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m21_620 -> m21_623  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m21_620 -> m21_624  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m21_620 -> m21_643  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m21_620 -> m21_625  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m21_628 -> m21_629  [key=0, style=solid];
m21_628 -> m21_566  [key=2, style=dotted];
m21_628 -> m21_630  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m21_640 -> m21_572  [key=0, style=bold, color=blue];
m21_876 -> m21_888  [key=0, style=solid];
m21_876 -> m21_889  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_888 -> m21_889  [key=0, style=solid];
m21_889 -> m21_890  [key=0, style=solid];
m21_890 -> m21_876  [key=0, style=bold, color=blue];
m21_2706 -> m21_2707  [key=0, style=solid];
m21_2707 -> m21_2708  [key=0, style=solid];
m21_2707 -> m21_2698  [key=2, style=dotted];
m21_2707 -> m21_2709  [key=1, style=dashed, color=darkseagreen4, label=derived];
m21_2708 -> m21_2709  [key=0, style=solid];
m21_2708 -> m21_188  [key=2, style=dotted];
m21_2708 -> m21_2710  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_2709 -> m21_2710  [key=0, style=solid];
m21_2709 -> m21_211  [key=2, style=dotted];
m21_2710 -> m21_2711  [key=0, style=solid];
m21_2710 -> m21_309  [key=2, style=dotted];
m21_2710 -> m21_2712  [key=1, style=dashed, color=darkseagreen4, label=meh];
m21_2711 -> m21_2712  [key=0, style=solid];
m21_2711 -> m21_24  [key=2, style=dotted];
m21_2712 -> m21_2713  [key=0, style=solid];
m21_2712 -> m21_24  [key=2, style=dotted];
m21_2713 -> m21_2706  [key=0, style=bold, color=blue];
m21_1862 -> m21_1863  [key=0, style=solid];
m21_1863 -> m21_1864  [key=0, style=solid];
m21_1863 -> m21_1867  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1863 -> m21_1863  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1864 -> m21_1865  [key=0, style=solid];
m21_1864 -> m21_73  [key=2, style=dotted];
m21_1864 -> m21_1866  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1865 -> m21_1862  [key=0, style=bold, color=blue];
m21_416 -> m21_417  [key=0, style=solid];
m21_417 -> m21_418  [key=0, style=solid];
m21_417 -> m21_424  [key=2, style=dotted];
m21_417 -> m21_420  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_417 -> m21_421  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_417 -> m21_422  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_418 -> m21_419  [key=0, style=solid];
m21_418 -> m21_142  [key=2, style=dotted];
m21_420 -> m21_421  [key=0, style=solid];
m21_420 -> m21_24  [key=2, style=dotted];
m21_421 -> m21_422  [key=0, style=solid];
m21_421 -> m21_24  [key=2, style=dotted];
m21_422 -> m21_423  [key=0, style=solid];
m21_422 -> m21_24  [key=2, style=dotted];
m21_419 -> m21_420  [key=0, style=solid];
m21_419 -> m21_51  [key=2, style=dotted];
m21_419 -> m21_421  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_419 -> m21_422  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_423 -> m21_416  [key=0, style=bold, color=blue];
m21_2681 -> m21_2682  [key=0, style=solid];
m21_2682 -> m21_2683  [key=0, style=solid];
m21_2682 -> m21_2684  [key=2, style=dotted];
m21_2683 -> m21_2681  [key=0, style=bold, color=blue];
m21_3912 -> m21_3913  [key=0, style=solid];
m21_3912 -> m21_3914  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_3912 -> m21_3915  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_3913 -> m21_3914  [key=0, style=solid];
m21_3913 -> m21_3915  [key=0, style=solid];
m21_3914 -> m21_3916  [key=0, style=solid];
m21_3914 -> m21_2139  [key=2, style=dotted];
m21_3914 -> m21_2140  [key=2, style=dotted];
m21_3915 -> m21_3916  [key=0, style=solid];
m21_3916 -> m21_3912  [key=0, style=bold, color=blue];
m21_4089 -> m21_4090  [key=0, style=solid];
m21_4090 -> m21_4091  [key=0, style=solid];
m21_4090 -> m21_4079  [key=2, style=dotted];
m21_4091 -> m21_4089  [key=0, style=bold, color=blue];
m21_3704 -> m21_3705  [key=0, style=solid];
m21_3705 -> m21_3706  [key=0, style=solid];
m21_3706 -> m21_3704  [key=0, style=bold, color=blue];
m21_2887 -> m21_2888  [key=0, style=solid];
m21_2888 -> m21_2889  [key=0, style=solid];
m21_2889 -> m21_2890  [key=0, style=solid];
m21_2889 -> m21_209  [key=2, style=dotted];
m21_2890 -> m21_2887  [key=0, style=bold, color=blue];
m21_2673 -> m21_2674  [key=0, style=solid];
m21_2674 -> m21_2675  [key=0, style=solid];
m21_2674 -> m21_2674  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2675 -> m21_2676  [key=0, style=solid];
m21_2675 -> m21_16  [key=2, style=dotted];
m21_2675 -> m21_386  [key=2, style=dotted];
m21_2675 -> m21_2678  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_2676 -> m21_2677  [key=0, style=solid];
m21_2678 -> m21_2679  [key=0, style=solid];
m21_2678 -> m21_20  [key=2, style=dotted];
m21_2677 -> m21_2678  [key=0, style=solid];
m21_2677 -> m21_19  [key=2, style=dotted];
m21_2679 -> m21_2680  [key=0, style=solid];
m21_2679 -> m21_24  [key=2, style=dotted];
m21_2680 -> m21_2673  [key=0, style=bold, color=blue];
m21_2938 -> m21_2939  [key=0, style=solid];
m21_2939 -> m21_2940  [key=0, style=solid];
m21_2940 -> m21_2938  [key=0, style=bold, color=blue];
m21_1299 -> m21_1300  [key=0, style=solid];
m21_1300 -> m21_1301  [key=0, style=solid];
m21_1300 -> m21_1306  [key=2, style=dotted];
m21_1300 -> m21_1304  [key=1, style=dashed, color=darkseagreen4, label=ts];
m21_1301 -> m21_1302  [key=0, style=solid];
m21_1301 -> m21_1307  [key=2, style=dotted];
m21_1301 -> m21_41  [key=2, style=dotted];
m21_1301 -> m21_1303  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1304 -> m21_1305  [key=0, style=solid];
m21_1304 -> m21_24  [key=2, style=dotted];
m21_1302 -> m21_1303  [key=0, style=solid];
m21_1302 -> m21_42  [key=2, style=dotted];
m21_1303 -> m21_1304  [key=0, style=solid];
m21_1303 -> m21_51  [key=2, style=dotted];
m21_1305 -> m21_1299  [key=0, style=bold, color=blue];
m21_3736 -> m21_3737  [key=0, style=solid];
m21_3737 -> m21_3738  [key=0, style=solid];
m21_3737 -> m21_3704  [key=2, style=dotted];
m21_3738 -> m21_3739  [key=0, style=solid];
m21_3738 -> m21_142  [key=2, style=dotted];
m21_3738 -> m21_3741  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3738 -> m21_3747  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3739 -> m21_3740  [key=0, style=solid];
m21_3739 -> m21_24  [key=2, style=dotted];
m21_3741 -> m21_3742  [key=0, style=solid];
m21_3741 -> m21_3741  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Serialization.Action doStuff"];
m21_3740 -> m21_3741  [key=0, style=solid];
m21_3740 -> m21_3308  [key=3, color=darkorchid, style=bold, label="Local variable Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<int> obj"];
m21_3742 -> m21_3743  [key=0, style=solid];
m21_3742 -> m21_3745  [key=2, style=dotted];
m21_3743 -> m21_3744  [key=0, style=solid];
m21_3743 -> m21_24  [key=2, style=dotted];
m21_3744 -> m21_3736  [key=0, style=bold, color=blue];
m21_2205 -> m21_2206  [key=0, style=solid];
m21_2205 -> m21_2207  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2208  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2209  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2210  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2211  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2212  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2213  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2214  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2215  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2216  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2217  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2218  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2219  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2220  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2221  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2222  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2205 -> m21_2223  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_2206 -> m21_2207  [key=0, style=solid];
m21_2206 -> m21_762  [key=2, style=dotted];
m21_2207 -> m21_2208  [key=0, style=solid];
m21_2207 -> m21_763  [key=2, style=dotted];
m21_2208 -> m21_2209  [key=0, style=solid];
m21_2208 -> m21_764  [key=2, style=dotted];
m21_2209 -> m21_2210  [key=0, style=solid];
m21_2209 -> m21_764  [key=2, style=dotted];
m21_2210 -> m21_2211  [key=0, style=solid];
m21_2210 -> m21_764  [key=2, style=dotted];
m21_2211 -> m21_2212  [key=0, style=solid];
m21_2211 -> m21_764  [key=2, style=dotted];
m21_2212 -> m21_2213  [key=0, style=solid];
m21_2212 -> m21_2225  [key=2, style=dotted];
m21_2213 -> m21_2214  [key=0, style=solid];
m21_2213 -> m21_2226  [key=2, style=dotted];
m21_2214 -> m21_2215  [key=0, style=solid];
m21_2214 -> m21_2227  [key=2, style=dotted];
m21_2215 -> m21_2216  [key=0, style=solid];
m21_2215 -> m21_2228  [key=2, style=dotted];
m21_2216 -> m21_2217  [key=0, style=solid];
m21_2216 -> m21_2229  [key=2, style=dotted];
m21_2217 -> m21_2218  [key=0, style=solid];
m21_2217 -> m21_2230  [key=2, style=dotted];
m21_2218 -> m21_2219  [key=0, style=solid];
m21_2218 -> m21_2231  [key=2, style=dotted];
m21_2219 -> m21_2220  [key=0, style=solid];
m21_2219 -> m21_2232  [key=2, style=dotted];
m21_2220 -> m21_2221  [key=0, style=solid];
m21_2220 -> m21_2233  [key=2, style=dotted];
m21_2221 -> m21_2222  [key=0, style=solid];
m21_2221 -> m21_2234  [key=2, style=dotted];
m21_2222 -> m21_2223  [key=0, style=solid];
m21_2222 -> m21_2235  [key=2, style=dotted];
m21_2223 -> m21_2224  [key=0, style=solid];
m21_2223 -> m21_2236  [key=2, style=dotted];
m21_2224 -> m21_2205  [key=0, style=bold, color=blue];
m21_721 -> m21_722  [key=0, style=solid];
m21_722 -> m21_723  [key=0, style=solid];
m21_722 -> m21_729  [key=2, style=dotted];
m21_722 -> m21_726  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m21_723 -> m21_724  [key=0, style=solid];
m21_723 -> m21_142  [key=2, style=dotted];
m21_723 -> m21_725  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_726 -> m21_727  [key=0, style=solid];
m21_726 -> m21_24  [key=2, style=dotted];
m21_726 -> m21_726  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m21_724 -> m21_725  [key=0, style=solid];
m21_724 -> m21_24  [key=2, style=dotted];
m21_725 -> m21_726  [key=0, style=solid];
m21_725 -> m21_51  [key=2, style=dotted];
m21_727 -> m21_728  [key=0, style=solid];
m21_727 -> m21_24  [key=2, style=dotted];
m21_727 -> m21_727  [key=1, style=dashed, color=darkseagreen4, label=ratio];
m21_728 -> m21_721  [key=0, style=bold, color=blue];
m21_3237 -> m21_3238  [key=0, style=solid];
m21_3238 -> m21_3239  [key=0, style=solid];
m21_3238 -> m21_188  [key=2, style=dotted];
m21_3238 -> m21_879  [key=2, style=dotted];
m21_3239 -> m21_3240  [key=0, style=solid];
m21_3239 -> m21_16  [key=2, style=dotted];
m21_3239 -> m21_386  [key=2, style=dotted];
m21_3239 -> m21_20  [key=2, style=dotted];
m21_3239 -> m21_3241  [key=1, style=dashed, color=darkseagreen4, label=dict];
m21_3240 -> m21_3241  [key=0, style=solid];
m21_3240 -> m21_24  [key=2, style=dotted];
m21_3241 -> m21_3242  [key=0, style=solid];
m21_3241 -> m21_24  [key=2, style=dotted];
m21_3242 -> m21_3237  [key=0, style=bold, color=blue];
m21_2916 -> m21_2917  [key=0, style=solid];
m21_2917 -> m21_2918  [key=0, style=solid];
m21_2917 -> m21_2439  [key=2, style=dotted];
m21_2918 -> m21_2916  [key=0, style=bold, color=blue];
m21_161 -> m21_162  [key=0, style=solid];
m21_162 -> m21_163  [key=0, style=solid];
m21_162 -> m21_51  [key=2, style=dotted];
m21_163 -> m21_164  [key=0, style=solid];
m21_163 -> m21_165  [key=2, style=dotted];
m21_164 -> m21_161  [key=0, style=bold, color=blue];
m21_3532 -> m21_3533  [key=0, style=solid];
m21_3533 -> m21_3534  [key=0, style=solid];
m21_3533 -> m21_19  [key=2, style=dotted];
m21_3533 -> m21_16  [key=2, style=dotted];
m21_3533 -> m21_386  [key=2, style=dotted];
m21_3533 -> m21_3054  [key=2, style=dotted];
m21_3534 -> m21_3535  [key=0, style=solid];
m21_3534 -> m21_24  [key=2, style=dotted];
m21_3535 -> m21_3532  [key=0, style=bold, color=blue];
m21_3694 -> m21_3695  [key=0, style=solid];
m21_3695 -> m21_3696  [key=0, style=solid];
m21_3695 -> m21_51  [key=2, style=dotted];
m21_3696 -> m21_3697  [key=0, style=solid];
m21_3696 -> m21_24  [key=2, style=dotted];
m21_3696 -> m21_3696  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_3697 -> m21_3698  [key=0, style=solid];
m21_3697 -> m21_24  [key=2, style=dotted];
m21_3697 -> m21_3697  [key=1, style=dashed, color=darkseagreen4, label=result];
m21_3698 -> m21_3694  [key=0, style=bold, color=blue];
m21_2131 -> m21_2132  [key=0, style=solid];
m21_2132 -> m21_2131  [key=0, style=bold, color=blue];
m21_3960 -> m21_3961  [key=0, style=solid];
m21_3961 -> m21_3962  [key=0, style=solid];
m21_3961 -> m21_3963  [key=2, style=dotted];
m21_3962 -> m21_3960  [key=0, style=bold, color=blue];
m21_1001 -> m21_1002  [key=0, style=solid];
m21_1002 -> m21_1003  [key=0, style=solid];
m21_1002 -> m21_1002  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m21_1003 -> m21_1004  [key=0, style=solid];
m21_1003 -> m21_982  [key=2, style=dotted];
m21_1003 -> m21_1005  [key=1, style=dashed, color=darkseagreen4, label=p];
m21_1003 -> m21_1006  [key=1, style=dashed, color=darkseagreen4, label=p];
m21_1004 -> m21_1005  [key=0, style=solid];
m21_1004 -> m21_24  [key=2, style=dotted];
m21_1005 -> m21_1006  [key=0, style=solid];
m21_1005 -> m21_1008  [key=2, style=dotted];
m21_1005 -> m21_24  [key=2, style=dotted];
m21_1006 -> m21_1007  [key=0, style=solid];
m21_1006 -> m21_24  [key=2, style=dotted];
m21_1007 -> m21_1001  [key=0, style=bold, color=blue];
m21_1553 -> m21_1554  [key=0, style=solid];
m21_1554 -> m21_1555  [key=0, style=solid];
m21_1554 -> m21_1557  [key=2, style=dotted];
m21_1554 -> m21_1147  [key=2, style=dotted];
m21_1555 -> m21_1556  [key=0, style=solid];
m21_1556 -> m21_1553  [key=0, style=bold, color=blue];
m21_1606 -> m21_1607  [key=0, style=solid];
m21_1607 -> m21_1608  [key=0, style=solid];
m21_1607 -> m21_1595  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1608 -> m21_1609  [key=0, style=solid];
m21_1608 -> m21_51  [key=2, style=dotted];
m21_1609 -> m21_1610  [key=0, style=solid];
m21_1609 -> m21_1612  [key=0, style=solid];
m21_1609 -> m21_21  [key=2, style=dotted];
m21_1610 -> m21_1611  [key=0, style=solid];
m21_1611 -> m21_1612  [key=0, style=solid];
m21_1611 -> m21_1502  [key=2, style=dotted];
m21_1611 -> m21_22  [key=2, style=dotted];
m21_1612 -> m21_1606  [key=0, style=bold, color=blue];
m21_1510 -> m21_1511  [key=0, style=solid];
m21_1511 -> m21_1512  [key=0, style=solid];
m21_1511 -> m21_1511  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1512 -> m21_1513  [key=0, style=solid];
m21_1512 -> m21_51  [key=2, style=dotted];
m21_1513 -> m21_1514  [key=0, style=solid];
m21_1513 -> m21_1516  [key=0, style=solid];
m21_1513 -> m21_21  [key=2, style=dotted];
m21_1514 -> m21_1515  [key=0, style=solid];
m21_1515 -> m21_1516  [key=0, style=solid];
m21_1515 -> m21_1502  [key=2, style=dotted];
m21_1515 -> m21_22  [key=2, style=dotted];
m21_1516 -> m21_1510  [key=0, style=bold, color=blue];
m21_1503 -> m21_1504  [key=0, style=solid];
m21_1504 -> m21_1505  [key=0, style=solid];
m21_1504 -> m21_73  [key=2, style=dotted];
m21_1504 -> m21_1506  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1505 -> m21_1503  [key=0, style=bold, color=blue];
m21_3687 -> m21_3688  [key=0, style=solid];
m21_3688 -> m21_3689  [key=0, style=solid];
m21_3689 -> m21_3687  [key=0, style=bold, color=blue];
m21_2717 -> m21_2718  [key=0, style=solid];
m21_2718 -> m21_2719  [key=0, style=solid];
m21_2718 -> m21_748  [key=2, style=dotted];
m21_2719 -> m21_2717  [key=0, style=bold, color=blue];
m21_4119 -> m21_4120  [key=0, style=solid];
m21_4120 -> m21_4121  [key=0, style=solid];
m21_4120 -> m21_4079  [key=2, style=dotted];
m21_4121 -> m21_4119  [key=0, style=bold, color=blue];
m21_3351 -> m21_3352  [key=0, style=solid];
m21_3352 -> m21_3353  [key=0, style=solid];
m21_3352 -> m21_3359  [key=2, style=dotted];
m21_3352 -> m21_3354  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_3352 -> m21_3355  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_3352 -> m21_3357  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_3353 -> m21_3354  [key=0, style=solid];
m21_3354 -> m21_3355  [key=0, style=solid];
m21_3355 -> m21_3356  [key=0, style=solid];
m21_3355 -> m21_142  [key=2, style=dotted];
m21_3357 -> m21_3358  [key=0, style=solid];
m21_3357 -> m21_24  [key=2, style=dotted];
m21_3356 -> m21_3357  [key=0, style=solid];
m21_3356 -> m21_51  [key=2, style=dotted];
m21_3358 -> m21_3351  [key=0, style=bold, color=blue];
m21_4389 -> m21_4390  [key=0, style=solid];
m21_4390 -> m21_4391  [key=0, style=solid];
m21_4391 -> m21_4389  [key=0, style=bold, color=blue];
m21_1726 -> m21_1727  [key=0, style=solid];
m21_1727 -> m21_1728  [key=0, style=solid];
m21_1727 -> m21_1727  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1728 -> m21_1729  [key=0, style=solid];
m21_1728 -> m21_982  [key=2, style=dotted];
m21_1728 -> m21_1730  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_1728 -> m21_1731  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_1728 -> m21_1732  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_1728 -> m21_1733  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_1728 -> m21_1734  [key=1, style=dashed, color=darkseagreen4, label=deserializedProduct];
m21_1729 -> m21_1730  [key=0, style=solid];
m21_1729 -> m21_24  [key=2, style=dotted];
m21_1730 -> m21_1731  [key=0, style=solid];
m21_1730 -> m21_1147  [key=2, style=dotted];
m21_1730 -> m21_24  [key=2, style=dotted];
m21_1731 -> m21_1732  [key=0, style=solid];
m21_1731 -> m21_24  [key=2, style=dotted];
m21_1732 -> m21_1733  [key=0, style=solid];
m21_1732 -> m21_24  [key=2, style=dotted];
m21_1733 -> m21_1734  [key=0, style=solid];
m21_1733 -> m21_24  [key=2, style=dotted];
m21_1734 -> m21_1735  [key=0, style=solid];
m21_1734 -> m21_24  [key=2, style=dotted];
m21_1735 -> m21_1726  [key=0, style=bold, color=blue];
m21_973 -> m21_974  [key=0, style=solid];
m21_974 -> m21_975  [key=0, style=solid];
m21_974 -> m21_981  [key=2, style=dotted];
m21_974 -> m21_977  [key=1, style=dashed, color=darkseagreen4, label=store];
m21_974 -> m21_978  [key=1, style=dashed, color=darkseagreen4, label=store];
m21_975 -> m21_976  [key=0, style=solid];
m21_975 -> m21_142  [key=2, style=dotted];
m21_975 -> m21_979  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m21_977 -> m21_978  [key=0, style=solid];
m21_977 -> m21_24  [key=2, style=dotted];
m21_978 -> m21_979  [key=0, style=solid];
m21_978 -> m21_24  [key=2, style=dotted];
m21_976 -> m21_977  [key=0, style=solid];
m21_976 -> m21_982  [key=2, style=dotted];
m21_976 -> m21_978  [key=1, style=dashed, color=darkseagreen4, label=deserializedStore];
m21_979 -> m21_980  [key=0, style=solid];
m21_979 -> m21_983  [key=2, style=dotted];
m21_980 -> m21_973  [key=0, style=bold, color=blue];
m21_3830 -> m21_3831  [key=0, style=solid];
m21_3831 -> m21_3830  [key=0, style=bold, color=blue];
m21_3560 -> m21_3561  [key=0, style=solid];
m21_3561 -> m21_3562  [key=0, style=solid];
m21_3561 -> m21_3565  [key=2, style=dotted];
m21_3561 -> m21_147  [key=2, style=dotted];
m21_3561 -> m21_3566  [key=2, style=dotted];
m21_3562 -> m21_3563  [key=0, style=solid];
m21_3562 -> m21_41  [key=2, style=dotted];
m21_3563 -> m21_3564  [key=0, style=solid];
m21_3563 -> m21_42  [key=2, style=dotted];
m21_3564 -> m21_3560  [key=0, style=bold, color=blue];
m21_1233 -> m21_1234  [key=0, style=solid];
m21_1234 -> m21_1235  [key=0, style=solid];
m21_1234 -> m21_1249  [key=2, style=dotted];
m21_1234 -> m21_1236  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1234 -> m21_1237  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1234 -> m21_1238  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1234 -> m21_1239  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1235 -> m21_1236  [key=0, style=solid];
m21_1236 -> m21_1237  [key=0, style=solid];
m21_1236 -> m21_335  [key=2, style=dotted];
m21_1237 -> m21_1238  [key=0, style=solid];
m21_1237 -> m21_335  [key=2, style=dotted];
m21_1238 -> m21_1239  [key=0, style=solid];
m21_1238 -> m21_335  [key=2, style=dotted];
m21_1239 -> m21_1240  [key=0, style=solid];
m21_1239 -> m21_142  [key=2, style=dotted];
m21_1240 -> m21_1241  [key=0, style=solid];
m21_1240 -> m21_51  [key=2, style=dotted];
m21_1240 -> m21_1242  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m21_1240 -> m21_1243  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m21_1240 -> m21_1244  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m21_1240 -> m21_1245  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m21_1240 -> m21_1246  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m21_1240 -> m21_1247  [key=1, style=dashed, color=darkseagreen4, label=wibbleOut];
m21_1241 -> m21_1242  [key=0, style=solid];
m21_1241 -> m21_24  [key=2, style=dotted];
m21_1242 -> m21_1243  [key=0, style=solid];
m21_1242 -> m21_24  [key=2, style=dotted];
m21_1243 -> m21_1244  [key=0, style=solid];
m21_1243 -> m21_24  [key=2, style=dotted];
m21_1244 -> m21_1245  [key=0, style=solid];
m21_1244 -> m21_24  [key=2, style=dotted];
m21_1245 -> m21_1246  [key=0, style=solid];
m21_1245 -> m21_24  [key=2, style=dotted];
m21_1246 -> m21_1247  [key=0, style=solid];
m21_1246 -> m21_24  [key=2, style=dotted];
m21_1247 -> m21_1248  [key=0, style=solid];
m21_1247 -> m21_24  [key=2, style=dotted];
m21_1248 -> m21_1233  [key=0, style=bold, color=blue];
m21_2289 -> m21_2290  [key=0, style=solid];
m21_2290 -> m21_2291  [key=0, style=solid];
m21_2290 -> m21_1557  [key=2, style=dotted];
m21_2290 -> m21_2292  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_2290 -> m21_2293  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_2290 -> m21_2294  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_2290 -> m21_2298  [key=1, style=dashed, color=darkseagreen4, label=person];
m21_2291 -> m21_2292  [key=0, style=solid];
m21_2291 -> m21_1147  [key=2, style=dotted];
m21_2292 -> m21_2293  [key=0, style=solid];
m21_2293 -> m21_2294  [key=0, style=solid];
m21_2294 -> m21_2295  [key=0, style=solid];
m21_2298 -> m21_2299  [key=0, style=solid];
m21_2298 -> m21_2198  [key=2, style=dotted];
m21_2295 -> m21_2296  [key=0, style=solid];
m21_2295 -> m21_389  [key=2, style=dotted];
m21_2295 -> m21_1155  [key=2, style=dotted];
m21_2295 -> m21_2298  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m21_2295 -> m21_2304  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffset];
m21_2296 -> m21_2297  [key=0, style=solid];
m21_2304 -> m21_2305  [key=0, style=solid];
m21_2304 -> m21_24  [key=2, style=dotted];
m21_2297 -> m21_2298  [key=0, style=solid];
m21_2297 -> m21_2300  [key=1, style=dashed, color=darkseagreen4, label=dateTimeOffsetText];
m21_2300 -> m21_2301  [key=0, style=solid];
m21_2300 -> m21_42  [key=2, style=dotted];
m21_2299 -> m21_2300  [key=0, style=solid];
m21_2299 -> m21_188  [key=2, style=dotted];
m21_2299 -> m21_211  [key=2, style=dotted];
m21_2299 -> m21_2301  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2301 -> m21_2302  [key=0, style=solid];
m21_2301 -> m21_51  [key=2, style=dotted];
m21_2301 -> m21_2303  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2301 -> m21_2304  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2301 -> m21_2305  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2301 -> m21_2306  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2301 -> m21_2307  [key=1, style=dashed, color=darkseagreen4, label=o2];
m21_2302 -> m21_2303  [key=0, style=solid];
m21_2302 -> m21_24  [key=2, style=dotted];
m21_2303 -> m21_2304  [key=0, style=solid];
m21_2303 -> m21_24  [key=2, style=dotted];
m21_2305 -> m21_2306  [key=0, style=solid];
m21_2305 -> m21_24  [key=2, style=dotted];
m21_2306 -> m21_2307  [key=0, style=solid];
m21_2306 -> m21_24  [key=2, style=dotted];
m21_2307 -> m21_2308  [key=0, style=solid];
m21_2307 -> m21_24  [key=2, style=dotted];
m21_2308 -> m21_2289  [key=0, style=bold, color=blue];
m21_3770 -> m21_3771  [key=0, style=solid];
m21_3771 -> m21_3772  [key=0, style=solid];
m21_3771 -> m21_3775  [key=2, style=dotted];
m21_3772 -> m21_3773  [key=0, style=solid];
m21_3772 -> m21_188  [key=2, style=dotted];
m21_3772 -> m21_211  [key=2, style=dotted];
m21_3773 -> m21_3774  [key=0, style=solid];
m21_3773 -> m21_42  [key=2, style=dotted];
m21_3774 -> m21_3770  [key=0, style=bold, color=blue];
m21_4382 -> m21_4383  [key=0, style=solid];
m21_4383 -> m21_4384  [key=0, style=solid];
m21_4384 -> m21_4382  [key=0, style=bold, color=blue];
m21_1380 -> m21_1381  [key=0, style=solid];
m21_1381 -> m21_1382  [key=0, style=solid];
m21_1381 -> m21_1351  [key=2, style=dotted];
m21_1381 -> m21_1386  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m21_1381 -> m21_1387  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m21_1382 -> m21_1383  [key=0, style=solid];
m21_1382 -> m21_1352  [key=2, style=dotted];
m21_1386 -> m21_1387  [key=0, style=solid];
m21_1386 -> m21_24  [key=2, style=dotted];
m21_1387 -> m21_1388  [key=0, style=solid];
m21_1387 -> m21_24  [key=2, style=dotted];
m21_1383 -> m21_1384  [key=0, style=solid];
m21_1383 -> m21_1389  [key=2, style=dotted];
m21_1383 -> m21_1341  [key=2, style=dotted];
m21_1383 -> m21_1385  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1384 -> m21_1385  [key=0, style=solid];
m21_1384 -> m21_24  [key=2, style=dotted];
m21_1385 -> m21_1386  [key=0, style=solid];
m21_1385 -> m21_1389  [key=2, style=dotted];
m21_1385 -> m21_249  [key=2, style=dotted];
m21_1385 -> m21_1387  [key=1, style=dashed, color=darkseagreen4, label=m2];
m21_1388 -> m21_1380  [key=0, style=bold, color=blue];
m21_3197 -> m21_3198  [key=0, style=solid];
m21_3198 -> m21_3199  [key=0, style=solid];
m21_3198 -> m21_3198  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3199 -> m21_3200  [key=0, style=solid];
m21_3199 -> m21_51  [key=2, style=dotted];
m21_3200 -> m21_3201  [key=0, style=solid];
m21_3200 -> m21_24  [key=2, style=dotted];
m21_3201 -> m21_3202  [key=0, style=solid];
m21_3202 -> m21_3203  [key=0, style=solid];
m21_3202 -> m21_51  [key=2, style=dotted];
m21_3203 -> m21_3204  [key=0, style=solid];
m21_3203 -> m21_1291  [key=2, style=dotted];
m21_3203 -> m21_24  [key=2, style=dotted];
m21_3204 -> m21_3197  [key=0, style=bold, color=blue];
m21_1766 -> m21_1767  [key=0, style=solid];
m21_1767 -> m21_1768  [key=0, style=solid];
m21_1767 -> m21_1763  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1768 -> m21_1769  [key=0, style=solid];
m21_1768 -> m21_51  [key=2, style=dotted];
m21_1768 -> m21_1770  [key=1, style=dashed, color=darkseagreen4, label=content];
m21_1768 -> m21_1771  [key=1, style=dashed, color=darkseagreen4, label=content];
m21_1768 -> m21_1772  [key=1, style=dashed, color=darkseagreen4, label=content];
m21_1769 -> m21_1770  [key=0, style=solid];
m21_1769 -> m21_24  [key=2, style=dotted];
m21_1770 -> m21_1771  [key=0, style=solid];
m21_1770 -> m21_24  [key=2, style=dotted];
m21_1771 -> m21_1772  [key=0, style=solid];
m21_1771 -> m21_24  [key=2, style=dotted];
m21_1772 -> m21_1773  [key=0, style=solid];
m21_1772 -> m21_24  [key=2, style=dotted];
m21_1773 -> m21_1766  [key=0, style=bold, color=blue];
m21_4363 -> m21_4364  [key=0, style=solid];
m21_74 -> m21_75  [key=0, style=solid];
m21_75 -> m21_76  [key=0, style=solid];
m21_75 -> m21_51  [key=2, style=dotted];
m21_76 -> m21_74  [key=0, style=bold, color=blue];
m21_80 -> m21_81  [key=0, style=solid];
m21_81 -> m21_82  [key=0, style=solid];
m21_81 -> m21_51  [key=2, style=dotted];
m21_82 -> m21_80  [key=0, style=bold, color=blue];
m21_86 -> m21_87  [key=0, style=solid];
m21_87 -> m21_88  [key=0, style=solid];
m21_87 -> m21_51  [key=2, style=dotted];
m21_88 -> m21_86  [key=0, style=bold, color=blue];
m21_92 -> m21_93  [key=0, style=solid];
m21_93 -> m21_94  [key=0, style=solid];
m21_93 -> m21_51  [key=2, style=dotted];
m21_94 -> m21_92  [key=0, style=bold, color=blue];
m21_152 -> m21_153  [key=0, style=solid];
m21_153 -> m21_154  [key=0, style=solid];
m21_153 -> m21_51  [key=2, style=dotted];
m21_154 -> m21_152  [key=0, style=bold, color=blue];
m21_158 -> m21_159  [key=0, style=solid];
m21_159 -> m21_160  [key=0, style=solid];
m21_159 -> m21_51  [key=2, style=dotted];
m21_160 -> m21_158  [key=0, style=bold, color=blue];
m21_169 -> m21_170  [key=0, style=solid];
m21_170 -> m21_171  [key=0, style=solid];
m21_170 -> m21_51  [key=2, style=dotted];
m21_171 -> m21_169  [key=0, style=bold, color=blue];
m21_180 -> m21_181  [key=0, style=solid];
m21_181 -> m21_182  [key=0, style=solid];
m21_181 -> m21_183  [key=2, style=dotted];
m21_181 -> m21_142  [key=2, style=dotted];
m21_182 -> m21_180  [key=0, style=bold, color=blue];
m21_193 -> m21_194  [key=0, style=solid];
m21_194 -> m21_195  [key=0, style=solid];
m21_194 -> m21_196  [key=2, style=dotted];
m21_194 -> m21_142  [key=2, style=dotted];
m21_195 -> m21_193  [key=0, style=bold, color=blue];
m21_221 -> m21_222  [key=0, style=solid];
m21_224 -> m21_225  [key=0, style=solid];
m21_227 -> m21_228  [key=0, style=solid];
m21_230 -> m21_231  [key=0, style=solid];
m21_233 -> m21_234  [key=0, style=solid];
m21_236 -> m21_237  [key=0, style=solid];
m21_239 -> m21_240  [key=0, style=solid];
m21_222 -> m21_223  [key=0, style=solid];
m21_222 -> m21_51  [key=2, style=dotted];
m21_223 -> m21_221  [key=0, style=bold, color=blue];
m21_225 -> m21_226  [key=0, style=solid];
m21_225 -> m21_51  [key=2, style=dotted];
m21_226 -> m21_224  [key=0, style=bold, color=blue];
m21_228 -> m21_229  [key=0, style=solid];
m21_228 -> m21_51  [key=2, style=dotted];
m21_229 -> m21_227  [key=0, style=bold, color=blue];
m21_231 -> m21_232  [key=0, style=solid];
m21_231 -> m21_51  [key=2, style=dotted];
m21_232 -> m21_230  [key=0, style=bold, color=blue];
m21_234 -> m21_235  [key=0, style=solid];
m21_234 -> m21_51  [key=2, style=dotted];
m21_235 -> m21_233  [key=0, style=bold, color=blue];
m21_237 -> m21_238  [key=0, style=solid];
m21_237 -> m21_51  [key=2, style=dotted];
m21_238 -> m21_236  [key=0, style=bold, color=blue];
m21_240 -> m21_241  [key=0, style=solid];
m21_240 -> m21_51  [key=2, style=dotted];
m21_241 -> m21_239  [key=0, style=bold, color=blue];
m21_263 -> m21_264  [key=0, style=solid];
m21_263 -> m21_142  [key=2, style=dotted];
m21_262 -> m21_263  [key=0, style=solid];
m21_265 -> m21_266  [key=0, style=solid];
m21_268 -> m21_269  [key=0, style=solid];
m21_264 -> m21_262  [key=0, style=bold, color=blue];
m21_266 -> m21_267  [key=0, style=solid];
m21_266 -> m21_51  [key=2, style=dotted];
m21_267 -> m21_265  [key=0, style=bold, color=blue];
m21_269 -> m21_270  [key=0, style=solid];
m21_269 -> m21_51  [key=2, style=dotted];
m21_270 -> m21_268  [key=0, style=bold, color=blue];
m21_285 -> m21_286  [key=0, style=solid];
m21_285 -> m21_142  [key=2, style=dotted];
m21_284 -> m21_285  [key=0, style=solid];
m21_287 -> m21_288  [key=0, style=solid];
m21_286 -> m21_284  [key=0, style=bold, color=blue];
m21_288 -> m21_289  [key=0, style=solid];
m21_288 -> m21_51  [key=2, style=dotted];
m21_289 -> m21_287  [key=0, style=bold, color=blue];
m21_362 -> m21_363  [key=0, style=solid];
m21_361 -> m21_362  [key=0, style=solid];
m21_363 -> m21_361  [key=0, style=bold, color=blue];
m21_457 -> m21_458  [key=0, style=solid];
m21_457 -> m21_51  [key=2, style=dotted];
m21_456 -> m21_457  [key=0, style=solid];
m21_458 -> m21_456  [key=0, style=bold, color=blue];
m21_568 -> m21_569  [key=0, style=solid];
m21_567 -> m21_568  [key=0, style=solid];
m21_569 -> m21_570  [key=0, style=solid];
m21_569 -> m21_571  [key=2, style=dotted];
m21_570 -> m21_567  [key=0, style=bold, color=blue];
m21_643 -> m21_644  [key=0, style=solid];
m21_642 -> m21_643  [key=0, style=solid];
m21_644 -> m21_642  [key=0, style=bold, color=blue];
m21_718 -> m21_719  [key=0, style=solid];
m21_717 -> m21_718  [key=0, style=solid];
m21_719 -> m21_720  [key=0, style=solid];
m21_719 -> m21_571  [key=2, style=dotted];
m21_720 -> m21_717  [key=0, style=bold, color=blue];
m21_967 -> m21_968  [key=0, style=solid];
m21_970 -> m21_971  [key=0, style=solid];
m21_968 -> m21_969  [key=0, style=solid];
m21_969 -> m21_967  [key=0, style=bold, color=blue];
m21_971 -> m21_972  [key=0, style=solid];
m21_972 -> m21_970  [key=0, style=bold, color=blue];
m21_1101 -> m21_1102  [key=0, style=solid];
m21_1102 -> m21_1103  [key=0, style=solid];
m21_1102 -> m21_1104  [key=2, style=dotted];
m21_1102 -> m21_142  [key=2, style=dotted];
m21_1103 -> m21_1101  [key=0, style=bold, color=blue];
m21_1110 -> m21_1111  [key=0, style=solid];
m21_1110 -> m21_51  [key=2, style=dotted];
m21_1109 -> m21_1110  [key=0, style=solid];
m21_1111 -> m21_1109  [key=0, style=bold, color=blue];
m21_1412 -> m21_1413  [key=0, style=solid];
m21_1413 -> m21_1414  [key=0, style=solid];
m21_1413 -> m21_1416  [key=2, style=dotted];
m21_1414 -> m21_1415  [key=0, style=solid];
m21_1414 -> m21_142  [key=2, style=dotted];
m21_1415 -> m21_1412  [key=0, style=bold, color=blue];
m21_1506 -> m21_1507  [key=0, style=solid];
m21_1507 -> m21_1508  [key=0, style=solid];
m21_1507 -> m21_1487  [key=2, style=dotted];
m21_1507 -> m21_1147  [key=2, style=dotted];
m21_1508 -> m21_1509  [key=0, style=solid];
m21_1508 -> m21_142  [key=2, style=dotted];
m21_1509 -> m21_1506  [key=0, style=bold, color=blue];
m21_1551 -> m21_1552  [key=0, style=solid];
m21_1551 -> m21_982  [key=2, style=dotted];
m21_1550 -> m21_1551  [key=0, style=solid];
m21_1552 -> m21_1550  [key=0, style=bold, color=blue];
m21_1656 -> m21_1657  [key=0, style=solid];
m21_1657 -> m21_1658  [key=0, style=solid];
m21_1657 -> m21_1643  [key=2, style=dotted];
m21_1657 -> m21_1659  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1658 -> m21_1659  [key=0, style=solid];
m21_1659 -> m21_1660  [key=0, style=solid];
m21_1659 -> m21_188  [key=2, style=dotted];
m21_1659 -> m21_211  [key=2, style=dotted];
m21_1660 -> m21_1656  [key=0, style=bold, color=blue];
m21_1798 -> m21_1799  [key=0, style=solid];
m21_1798 -> m21_51  [key=2, style=dotted];
m21_1797 -> m21_1798  [key=0, style=solid];
m21_1799 -> m21_1797  [key=0, style=bold, color=blue];
m21_1825 -> m21_1826  [key=0, style=solid];
m21_1825 -> m21_51  [key=2, style=dotted];
m21_1824 -> m21_1825  [key=0, style=solid];
m21_1826 -> m21_1824  [key=0, style=bold, color=blue];
m21_1832 -> m21_1833  [key=0, style=solid];
m21_1832 -> m21_51  [key=2, style=dotted];
m21_1831 -> m21_1832  [key=0, style=solid];
m21_1833 -> m21_1831  [key=0, style=bold, color=blue];
m21_1839 -> m21_1840  [key=0, style=solid];
m21_1839 -> m21_51  [key=2, style=dotted];
m21_1838 -> m21_1839  [key=0, style=solid];
m21_1840 -> m21_1838  [key=0, style=bold, color=blue];
m21_1846 -> m21_1847  [key=0, style=solid];
m21_1846 -> m21_51  [key=2, style=dotted];
m21_1845 -> m21_1846  [key=0, style=solid];
m21_1847 -> m21_1845  [key=0, style=bold, color=blue];
m21_1853 -> m21_1854  [key=0, style=solid];
m21_1853 -> m21_51  [key=2, style=dotted];
m21_1852 -> m21_1853  [key=0, style=solid];
m21_1854 -> m21_1852  [key=0, style=bold, color=blue];
m21_1860 -> m21_1861  [key=0, style=solid];
m21_1860 -> m21_51  [key=2, style=dotted];
m21_1859 -> m21_1860  [key=0, style=solid];
m21_1861 -> m21_1859  [key=0, style=bold, color=blue];
m21_1867 -> m21_1868  [key=0, style=solid];
m21_1867 -> m21_51  [key=2, style=dotted];
m21_1866 -> m21_1867  [key=0, style=solid];
m21_1868 -> m21_1866  [key=0, style=bold, color=blue];
m21_1874 -> m21_1875  [key=0, style=solid];
m21_1874 -> m21_51  [key=2, style=dotted];
m21_1873 -> m21_1874  [key=0, style=solid];
m21_1875 -> m21_1873  [key=0, style=bold, color=blue];
m21_1888 -> m21_1889  [key=0, style=solid];
m21_1888 -> m21_1557  [key=2, style=dotted];
m21_1888 -> m21_1890  [key=2, style=dotted];
m21_1887 -> m21_1888  [key=0, style=solid];
m21_1889 -> m21_1887  [key=0, style=bold, color=blue];
m21_1896 -> m21_1897  [key=0, style=solid];
m21_1896 -> m21_147  [key=2, style=dotted];
m21_1896 -> m21_1890  [key=2, style=dotted];
m21_1895 -> m21_1896  [key=0, style=solid];
m21_1897 -> m21_1895  [key=0, style=bold, color=blue];
m21_1906 -> m21_1907  [key=0, style=solid];
m21_1907 -> m21_1908  [key=0, style=solid];
m21_1907 -> m21_880  [key=2, style=dotted];
m21_1907 -> m21_188  [key=2, style=dotted];
m21_1907 -> m21_1909  [key=2, style=dotted];
m21_1907 -> m21_189  [key=2, style=dotted];
m21_1908 -> m21_1906  [key=0, style=bold, color=blue];
m21_1913 -> m21_1914  [key=0, style=solid];
m21_1914 -> m21_1915  [key=0, style=solid];
m21_1914 -> m21_188  [key=2, style=dotted];
m21_1914 -> m21_1909  [key=2, style=dotted];
m21_1914 -> m21_309  [key=2, style=dotted];
m21_1915 -> m21_1913  [key=0, style=bold, color=blue];
m21_1919 -> m21_1920  [key=0, style=solid];
m21_1920 -> m21_1921  [key=0, style=solid];
m21_1920 -> m21_188  [key=2, style=dotted];
m21_1920 -> m21_1909  [key=2, style=dotted];
m21_1920 -> m21_309  [key=2, style=dotted];
m21_1921 -> m21_1919  [key=0, style=bold, color=blue];
m21_1925 -> m21_1926  [key=0, style=solid];
m21_1926 -> m21_1927  [key=0, style=solid];
m21_1926 -> m21_188  [key=2, style=dotted];
m21_1926 -> m21_1909  [key=2, style=dotted];
m21_1926 -> m21_309  [key=2, style=dotted];
m21_1927 -> m21_1925  [key=0, style=bold, color=blue];
m21_2038 -> m21_2039  [key=0, style=solid];
m21_2039 -> m21_2040  [key=0, style=solid];
m21_2040 -> m21_2038  [key=0, style=bold, color=blue];
m21_2075 -> m21_2076  [key=0, style=solid];
m21_2075 -> m21_188  [key=2, style=dotted];
m21_2075 -> m21_309  [key=2, style=dotted];
m21_2074 -> m21_2075  [key=0, style=solid];
m21_2076 -> m21_2074  [key=0, style=bold, color=blue];
m21_2468 -> m21_2469  [key=0, style=solid];
m21_2468 -> m21_51  [key=2, style=dotted];
m21_2467 -> m21_2468  [key=0, style=solid];
m21_2469 -> m21_2467  [key=0, style=bold, color=blue];
m21_2473 -> m21_2474  [key=0, style=solid];
m21_2474 -> m21_2475  [key=0, style=solid];
m21_2474 -> m21_209  [key=2, style=dotted];
m21_2474 -> m21_2476  [key=1, style=dashed, color=darkseagreen4, label=reference];
m21_2474 -> m21_2480  [key=1, style=dashed, color=darkseagreen4, label=reference];
m21_2475 -> m21_2476  [key=0, style=solid];
m21_2475 -> m21_878  [key=2, style=dotted];
m21_2476 -> m21_2477  [key=0, style=solid];
m21_2476 -> m21_878  [key=2, style=dotted];
m21_2480 -> m21_2481  [key=0, style=solid];
m21_2480 -> m21_878  [key=2, style=dotted];
m21_2477 -> m21_2478  [key=0, style=solid];
m21_2477 -> m21_209  [key=2, style=dotted];
m21_2477 -> m21_2479  [key=1, style=dashed, color=darkseagreen4, label=child];
m21_2477 -> m21_2480  [key=1, style=dashed, color=darkseagreen4, label=child];
m21_2477 -> m21_2481  [key=1, style=dashed, color=darkseagreen4, label=child];
m21_2478 -> m21_2479  [key=0, style=solid];
m21_2478 -> m21_878  [key=2, style=dotted];
m21_2479 -> m21_2480  [key=0, style=solid];
m21_2479 -> m21_878  [key=2, style=dotted];
m21_2481 -> m21_2482  [key=0, style=solid];
m21_2481 -> m21_41  [key=2, style=dotted];
m21_2482 -> m21_2483  [key=0, style=solid];
m21_2482 -> m21_51  [key=2, style=dotted];
m21_2483 -> m21_2473  [key=0, style=bold, color=blue];
m21_2584 -> m21_2585  [key=0, style=solid];
m21_2584 -> m21_51  [key=2, style=dotted];
m21_2583 -> m21_2584  [key=0, style=solid];
m21_2585 -> m21_2583  [key=0, style=bold, color=blue];
m21_2799 -> m21_2800  [key=0, style=solid];
m21_2800 -> m21_2801  [key=0, style=solid];
m21_2800 -> m21_982  [key=2, style=dotted];
m21_2801 -> m21_2799  [key=0, style=bold, color=blue];
m21_3129 -> m21_3130  [key=0, style=solid];
m21_3129 -> m21_188  [key=2, style=dotted];
m21_3129 -> m21_309  [key=2, style=dotted];
m21_3128 -> m21_3129  [key=0, style=solid];
m21_3130 -> m21_3128  [key=0, style=bold, color=blue];
m21_3153 -> m21_3154  [key=0, style=solid];
m21_3153 -> m21_51  [key=2, style=dotted];
m21_3152 -> m21_3153  [key=0, style=solid];
m21_3154 -> m21_3152  [key=0, style=bold, color=blue];
m21_3167 -> m21_3168  [key=0, style=solid];
m21_3167 -> m21_51  [key=2, style=dotted];
m21_3166 -> m21_3167  [key=0, style=solid];
m21_3168 -> m21_3166  [key=0, style=bold, color=blue];
m21_3186 -> m21_3187  [key=0, style=solid];
m21_3187 -> m21_3188  [key=0, style=solid];
m21_3188 -> m21_3189  [key=0, style=solid];
m21_3188 -> m21_51  [key=2, style=dotted];
m21_3189 -> m21_3186  [key=0, style=bold, color=blue];
m21_3193 -> m21_3194  [key=0, style=solid];
m21_3194 -> m21_3195  [key=0, style=solid];
m21_3195 -> m21_3196  [key=0, style=solid];
m21_3195 -> m21_51  [key=2, style=dotted];
m21_3196 -> m21_3193  [key=0, style=bold, color=blue];
m21_3288 -> m21_3289  [key=0, style=solid];
m21_3289 -> m21_3290  [key=0, style=solid];
m21_3289 -> m21_51  [key=2, style=dotted];
m21_3290 -> m21_3288  [key=0, style=bold, color=blue];
m21_3294 -> m21_3295  [key=0, style=solid];
m21_3295 -> m21_3296  [key=0, style=solid];
m21_3295 -> m21_51  [key=2, style=dotted];
m21_3296 -> m21_3294  [key=0, style=bold, color=blue];
m21_3300 -> m21_3301  [key=0, style=solid];
m21_3301 -> m21_3302  [key=0, style=solid];
m21_3301 -> m21_51  [key=2, style=dotted];
m21_3302 -> m21_3300  [key=0, style=bold, color=blue];
m21_3310 -> m21_3311  [key=0, style=solid];
m21_3311 -> m21_3312  [key=0, style=solid];
m21_3311 -> m21_51  [key=2, style=dotted];
m21_3312 -> m21_3310  [key=0, style=bold, color=blue];
m21_3316 -> m21_3317  [key=0, style=solid];
m21_3317 -> m21_3318  [key=0, style=solid];
m21_3317 -> m21_478  [key=2, style=dotted];
m21_3318 -> m21_3316  [key=0, style=bold, color=blue];
m21_3436 -> m21_3437  [key=0, style=solid];
m21_3436 -> m21_335  [key=2, style=dotted];
m21_3437 -> m21_3438  [key=0, style=solid];
m21_3435 -> m21_3436  [key=0, style=solid];
m21_3435 -> m21_3437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_3438 -> m21_3435  [key=0, style=bold, color=blue];
m21_3451 -> m21_3452  [key=0, style=solid];
m21_3451 -> m21_335  [key=2, style=dotted];
m21_3452 -> m21_3453  [key=0, style=solid];
m21_3450 -> m21_3451  [key=0, style=solid];
m21_3450 -> m21_3452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_3453 -> m21_3450  [key=0, style=bold, color=blue];
m21_3466 -> m21_3467  [key=0, style=solid];
m21_3466 -> m21_335  [key=2, style=dotted];
m21_3467 -> m21_3468  [key=0, style=solid];
m21_3465 -> m21_3466  [key=0, style=solid];
m21_3465 -> m21_3467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_3468 -> m21_3465  [key=0, style=bold, color=blue];
m21_3594 -> m21_3595  [key=0, style=solid];
m21_3594 -> m21_16  [key=2, style=dotted];
m21_3594 -> m21_386  [key=2, style=dotted];
m21_3594 -> m21_20  [key=2, style=dotted];
m21_3593 -> m21_3594  [key=0, style=solid];
m21_3595 -> m21_3593  [key=0, style=bold, color=blue];
m21_3619 -> m21_3620  [key=0, style=solid];
m21_3619 -> m21_16  [key=2, style=dotted];
m21_3619 -> m21_386  [key=2, style=dotted];
m21_3619 -> m21_20  [key=2, style=dotted];
m21_3618 -> m21_3619  [key=0, style=solid];
m21_3620 -> m21_3618  [key=0, style=bold, color=blue];
m21_3631 -> m21_3632  [key=0, style=solid];
m21_3632 -> m21_3633  [key=0, style=solid];
m21_3632 -> m21_3635  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3633 -> m21_3634  [key=0, style=solid];
m21_3633 -> m21_19  [key=2, style=dotted];
m21_3633 -> m21_3638  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3635 -> m21_3636  [key=0, style=solid];
m21_3635 -> m21_16  [key=2, style=dotted];
m21_3635 -> m21_386  [key=2, style=dotted];
m21_3635 -> m21_3637  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_3635 -> m21_3638  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_3634 -> m21_3635  [key=0, style=solid];
m21_3638 -> m21_3639  [key=0, style=solid];
m21_3638 -> m21_2568  [key=2, style=dotted];
m21_3636 -> m21_3637  [key=0, style=solid];
m21_3636 -> m21_18  [key=2, style=dotted];
m21_3637 -> m21_3638  [key=0, style=solid];
m21_3637 -> m21_18  [key=2, style=dotted];
m21_3639 -> m21_3631  [key=0, style=bold, color=blue];
m21_3664 -> m21_3665  [key=0, style=solid];
m21_3664 -> m21_2568  [key=2, style=dotted];
m21_3663 -> m21_3664  [key=0, style=solid];
m21_3665 -> m21_3663  [key=0, style=bold, color=blue];
m21_3747 -> m21_3748  [key=0, style=solid];
m21_3747 -> m21_51  [key=2, style=dotted];
m21_3747 -> m21_3743  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_3746 -> m21_3747  [key=0, style=solid];
m21_3748 -> m21_3746  [key=0, style=bold, color=blue];
m21_3827 -> m21_3828  [key=0, style=solid];
m21_3828 -> m21_3829  [key=0, style=solid];
m21_3828 -> m21_51  [key=2, style=dotted];
m21_3829 -> m21_3827  [key=0, style=bold, color=blue];
m21_3835 -> m21_3836  [key=0, style=solid];
m21_3836 -> m21_3837  [key=0, style=solid];
m21_3836 -> m21_51  [key=2, style=dotted];
m21_3837 -> m21_3835  [key=0, style=bold, color=blue];
m21_3845 -> m21_3846  [key=0, style=solid];
m21_3845 -> m21_51  [key=2, style=dotted];
m21_3844 -> m21_3845  [key=0, style=solid];
m21_3846 -> m21_3844  [key=0, style=bold, color=blue];
m21_4030 -> m21_4031  [key=0, style=solid];
m21_4031 -> m21_4032  [key=0, style=solid];
m21_4031 -> m21_565  [key=2, style=dotted];
m21_4032 -> m21_4030  [key=0, style=bold, color=blue];
m21_4277 -> m21_4278  [key=0, style=solid];
m21_4278 -> m21_4279  [key=0, style=solid];
m21_4278 -> m21_4280  [key=2, style=dotted];
m21_4278 -> m21_142  [key=2, style=dotted];
m21_4279 -> m21_4277  [key=0, style=bold, color=blue];
m21_4284 -> m21_4285  [key=0, style=solid];
m21_4285 -> m21_4286  [key=0, style=solid];
m21_4285 -> m21_51  [key=2, style=dotted];
m21_4286 -> m21_4284  [key=0, style=bold, color=blue];
m21_4305 -> m21_4306  [key=0, style=solid];
m21_4305 -> m21_4307  [key=2, style=dotted];
m21_4305 -> m21_4308  [key=2, style=dotted];
m21_4305 -> m21_4309  [key=2, style=dotted];
m21_4305 -> m21_249  [key=2, style=dotted];
m21_4304 -> m21_4305  [key=0, style=solid];
m21_4306 -> m21_4304  [key=0, style=bold, color=blue];
m21_4364 -> m21_4365  [key=0, style=solid];
m21_4364 -> m21_51  [key=2, style=dotted];
m21_4365 -> m21_4363  [key=0, style=bold, color=blue];
m21_3710 -> m21_3711  [key=0, style=solid];
m21_3711 -> m21_3712  [key=0, style=solid];
m21_3712 -> m21_3713  [key=0, style=solid];
m21_3712 -> m21_147  [key=2, style=dotted];
m21_3712 -> m21_3714  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_3712 -> m21_3715  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_3713 -> m21_3714  [key=0, style=solid];
m21_3713 -> m21_142  [key=2, style=dotted];
m21_3714 -> m21_3715  [key=0, style=solid];
m21_3714 -> m21_188  [key=2, style=dotted];
m21_3714 -> m21_189  [key=2, style=dotted];
m21_3715 -> m21_3716  [key=0, style=solid];
m21_3715 -> m21_188  [key=2, style=dotted];
m21_3715 -> m21_189  [key=2, style=dotted];
m21_3716 -> m21_3717  [key=0, style=solid];
m21_3716 -> m21_24  [key=2, style=dotted];
m21_3717 -> m21_3710  [key=0, style=bold, color=blue];
m21_4138 -> m21_4139  [key=0, style=solid];
m21_4139 -> m21_4140  [key=0, style=solid];
m21_4139 -> m21_4143  [key=1, style=dashed, color=darkseagreen4, label=originalUri];
m21_4139 -> m21_4139  [key=3, color=darkorchid, style=bold, label="Local variable string originalUri"];
m21_4140 -> m21_4141  [key=0, style=solid];
m21_4140 -> m21_1752  [key=2, style=dotted];
m21_4143 -> m21_4144  [key=0, style=solid];
m21_4143 -> m21_24  [key=2, style=dotted];
m21_4141 -> m21_4142  [key=0, style=solid];
m21_4141 -> m21_142  [key=2, style=dotted];
m21_4142 -> m21_4143  [key=0, style=solid];
m21_4142 -> m21_51  [key=2, style=dotted];
m21_4144 -> m21_4138  [key=0, style=bold, color=blue];
m21_1390 -> m21_1391  [key=0, style=solid];
m21_1391 -> m21_1392  [key=0, style=solid];
m21_1391 -> m21_1396  [key=2, style=dotted];
m21_1391 -> m21_1397  [key=2, style=dotted];
m21_1392 -> m21_1393  [key=0, style=solid];
m21_1392 -> m21_1352  [key=2, style=dotted];
m21_1393 -> m21_1394  [key=0, style=solid];
m21_1393 -> m21_41  [key=2, style=dotted];
m21_1394 -> m21_1395  [key=0, style=solid];
m21_1394 -> m21_42  [key=2, style=dotted];
m21_1395 -> m21_1390  [key=0, style=bold, color=blue];
m21_3832 -> m21_3833  [key=0, style=solid];
m21_3833 -> m21_3834  [key=0, style=solid];
m21_3833 -> m21_73  [key=2, style=dotted];
m21_3833 -> m21_3835  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3834 -> m21_3832  [key=0, style=bold, color=blue];
m21_1916 -> m21_1917  [key=0, style=solid];
m21_1917 -> m21_1918  [key=0, style=solid];
m21_1917 -> m21_1135  [key=2, style=dotted];
m21_1917 -> m21_1919  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1918 -> m21_1916  [key=0, style=bold, color=blue];
m21_356 -> m21_357  [key=0, style=solid];
m21_357 -> m21_358  [key=0, style=solid];
m21_357 -> m21_357  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_358 -> m21_359  [key=0, style=solid];
m21_358 -> m21_188  [key=2, style=dotted];
m21_358 -> m21_309  [key=2, style=dotted];
m21_358 -> m21_362  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_359 -> m21_360  [key=0, style=solid];
m21_359 -> m21_24  [key=2, style=dotted];
m21_360 -> m21_356  [key=0, style=bold, color=blue];
m21_364 -> m21_365  [key=0, style=solid];
m21_365 -> m21_366  [key=0, style=solid];
m21_365 -> m21_51  [key=2, style=dotted];
m21_365 -> m21_367  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_365 -> m21_368  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_366 -> m21_367  [key=0, style=solid];
m21_366 -> m21_24  [key=2, style=dotted];
m21_367 -> m21_368  [key=0, style=solid];
m21_367 -> m21_24  [key=2, style=dotted];
m21_368 -> m21_369  [key=0, style=solid];
m21_368 -> m21_24  [key=2, style=dotted];
m21_369 -> m21_364  [key=0, style=bold, color=blue];
m21_1993 -> m21_1994  [key=0, style=solid];
m21_1994 -> m21_1995  [key=0, style=solid];
m21_1994 -> m21_1994  [key=3, color=darkorchid, style=bold, label="Local variable string googleSearchText"];
m21_1995 -> m21_1996  [key=0, style=solid];
m21_1995 -> m21_480  [key=2, style=dotted];
m21_1996 -> m21_1997  [key=0, style=solid];
m21_1996 -> m21_1086  [key=2, style=dotted];
m21_1996 -> m21_443  [key=2, style=dotted];
m21_1996 -> m21_1998  [key=1, style=dashed, color=darkseagreen4, label=results];
m21_1997 -> m21_1998  [key=0, style=solid];
m21_1997 -> m21_147  [key=2, style=dotted];
m21_1997 -> m21_2000  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m21_1997 -> m21_2001  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m21_1997 -> m21_2002  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m21_1997 -> m21_2003  [key=1, style=dashed, color=darkseagreen4, label=searchResults];
m21_1998 -> m21_1999  [key=0, style=solid];
m21_1998 -> m21_2001  [key=0, style=solid];
m21_2000 -> m21_1998  [key=0, style=solid];
m21_2000 -> m21_335  [key=2, style=dotted];
m21_2001 -> m21_2002  [key=0, style=solid];
m21_2001 -> m21_24  [key=2, style=dotted];
m21_2002 -> m21_2003  [key=0, style=solid];
m21_2002 -> m21_24  [key=2, style=dotted];
m21_2003 -> m21_2004  [key=0, style=solid];
m21_2003 -> m21_24  [key=2, style=dotted];
m21_1999 -> m21_2000  [key=0, style=solid];
m21_1999 -> m21_816  [key=2, style=dotted];
m21_1999 -> m21_51  [key=2, style=dotted];
m21_2004 -> m21_1993  [key=0, style=bold, color=blue];
m21_859 -> m21_860  [key=0, style=solid];
m21_860 -> m21_861  [key=0, style=solid];
m21_860 -> m21_209  [key=2, style=dotted];
m21_860 -> m21_863  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m21_860 -> m21_869  [key=1, style=dashed, color=darkseagreen4, label=dictStore];
m21_861 -> m21_862  [key=0, style=solid];
m21_861 -> m21_863  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_861 -> m21_864  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_861 -> m21_97  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m21_863 -> m21_864  [key=0, style=solid];
m21_863 -> m21_876  [key=2, style=dotted];
m21_863 -> m21_877  [key=2, style=dotted];
m21_863 -> m21_878  [key=2, style=dotted];
m21_869 -> m21_870  [key=0, style=solid];
m21_869 -> m21_882  [key=2, style=dotted];
m21_862 -> m21_863  [key=0, style=solid];
m21_862 -> m21_865  [key=0, style=solid];
m21_864 -> m21_862  [key=0, style=solid];
m21_864 -> m21_864  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_865 -> m21_866  [key=0, style=solid];
m21_865 -> m21_188  [key=2, style=dotted];
m21_866 -> m21_867  [key=0, style=solid];
m21_866 -> m21_879  [key=2, style=dotted];
m21_866 -> m21_869  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m21_866 -> m21_873  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m21_867 -> m21_868  [key=0, style=solid];
m21_867 -> m21_880  [key=2, style=dotted];
m21_867 -> m21_871  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_867 -> m21_873  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_873 -> m21_874  [key=0, style=solid];
m21_873 -> m21_17  [key=2, style=dotted];
m21_873 -> m21_886  [key=2, style=dotted];
m21_868 -> m21_869  [key=0, style=solid];
m21_868 -> m21_881  [key=2, style=dotted];
m21_868 -> m21_870  [key=1, style=dashed, color=darkseagreen4, label=streamWriter];
m21_871 -> m21_872  [key=0, style=solid];
m21_871 -> m21_884  [key=2, style=dotted];
m21_870 -> m21_871  [key=0, style=solid];
m21_870 -> m21_883  [key=2, style=dotted];
m21_872 -> m21_873  [key=0, style=solid];
m21_872 -> m21_885  [key=2, style=dotted];
m21_872 -> m21_874  [key=1, style=dashed, color=darkseagreen4, label=stopWatch];
m21_874 -> m21_875  [key=0, style=solid];
m21_874 -> m21_887  [key=2, style=dotted];
m21_875 -> m21_859  [key=0, style=bold, color=blue];
m21_1542 -> m21_1543  [key=0, style=solid];
m21_1543 -> m21_1544  [key=0, style=solid];
m21_1543 -> m21_1548  [key=2, style=dotted];
m21_1543 -> m21_1545  [key=1, style=dashed, color=darkseagreen4, label=testClass];
m21_1544 -> m21_1545  [key=0, style=solid];
m21_1544 -> m21_1549  [key=2, style=dotted];
m21_1545 -> m21_1546  [key=0, style=solid];
m21_1545 -> m21_142  [key=2, style=dotted];
m21_1545 -> m21_1551  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m21_1546 -> m21_1547  [key=0, style=solid];
m21_1546 -> m21_73  [key=2, style=dotted];
m21_1546 -> m21_1550  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1547 -> m21_1542  [key=0, style=bold, color=blue];
m21_2313 -> m21_2314  [key=0, style=solid];
m21_2314 -> m21_2315  [key=0, style=solid];
m21_2314 -> m21_51  [key=2, style=dotted];
m21_2314 -> m21_2316  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m21_2314 -> m21_2317  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m21_2314 -> m21_2318  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m21_2314 -> m21_2319  [key=1, style=dashed, color=darkseagreen4, label=kvPairs];
m21_2315 -> m21_2316  [key=0, style=solid];
m21_2315 -> m21_24  [key=2, style=dotted];
m21_2316 -> m21_2317  [key=0, style=solid];
m21_2316 -> m21_24  [key=2, style=dotted];
m21_2317 -> m21_2318  [key=0, style=solid];
m21_2317 -> m21_24  [key=2, style=dotted];
m21_2318 -> m21_2319  [key=0, style=solid];
m21_2318 -> m21_24  [key=2, style=dotted];
m21_2319 -> m21_2320  [key=0, style=solid];
m21_2319 -> m21_24  [key=2, style=dotted];
m21_2320 -> m21_2313  [key=0, style=bold, color=blue];
m21_3690 -> m21_3691  [key=0, style=solid];
m21_3691 -> m21_3692  [key=0, style=solid];
m21_3691 -> m21_51  [key=2, style=dotted];
m21_3692 -> m21_3693  [key=0, style=solid];
m21_3692 -> m21_24  [key=2, style=dotted];
m21_3693 -> m21_3690  [key=0, style=bold, color=blue];
m21_4098 -> m21_4099  [key=0, style=solid];
m21_4099 -> m21_4100  [key=0, style=solid];
m21_4100 -> m21_4098  [key=0, style=bold, color=blue];
m21_2107 -> m21_2110  [key=0, style=solid];
m21_2110 -> m21_2111  [key=0, style=solid];
m21_2111 -> m21_2107  [key=0, style=bold, color=blue];
m21_3307 -> m21_3308  [key=0, style=solid];
m21_3308 -> m21_3309  [key=0, style=solid];
m21_3308 -> m21_73  [key=2, style=dotted];
m21_3308 -> m21_3310  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3309 -> m21_3307  [key=0, style=bold, color=blue];
m21_1979 -> m21_1980  [key=0, style=solid];
m21_1980 -> m21_1981  [key=0, style=solid];
m21_1980 -> m21_209  [key=2, style=dotted];
m21_1980 -> m21_1982  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m21_1980 -> m21_1983  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m21_1981 -> m21_1982  [key=0, style=solid];
m21_1981 -> m21_1557  [key=2, style=dotted];
m21_1981 -> m21_878  [key=2, style=dotted];
m21_1982 -> m21_1983  [key=0, style=solid];
m21_1982 -> m21_1557  [key=2, style=dotted];
m21_1982 -> m21_878  [key=2, style=dotted];
m21_1983 -> m21_1984  [key=0, style=solid];
m21_1983 -> m21_41  [key=2, style=dotted];
m21_1984 -> m21_1985  [key=0, style=solid];
m21_1984 -> m21_42  [key=2, style=dotted];
m21_1985 -> m21_1979  [key=0, style=bold, color=blue];
m21_482 -> m21_483  [key=0, style=solid];
m21_483 -> m21_484  [key=0, style=solid];
m21_483 -> m21_51  [key=2, style=dotted];
m21_484 -> m21_485  [key=0, style=solid];
m21_484 -> m21_24  [key=2, style=dotted];
m21_485 -> m21_486  [key=0, style=solid];
m21_485 -> m21_51  [key=2, style=dotted];
m21_486 -> m21_487  [key=0, style=solid];
m21_486 -> m21_24  [key=2, style=dotted];
m21_487 -> m21_482  [key=0, style=bold, color=blue];
m21_1293 -> m21_1294  [key=0, style=solid];
m21_1294 -> m21_1295  [key=0, style=solid];
m21_1294 -> m21_142  [key=2, style=dotted];
m21_1294 -> m21_1296  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1295 -> m21_1296  [key=0, style=solid];
m21_1295 -> m21_24  [key=2, style=dotted];
m21_1296 -> m21_1297  [key=0, style=solid];
m21_1296 -> m21_51  [key=2, style=dotted];
m21_1297 -> m21_1298  [key=0, style=solid];
m21_1297 -> m21_24  [key=2, style=dotted];
m21_1298 -> m21_1293  [key=0, style=bold, color=blue];
m21_3269 -> m21_3270  [key=0, style=solid];
m21_3270 -> m21_3271  [key=0, style=solid];
m21_3270 -> m21_51  [key=2, style=dotted];
m21_3271 -> m21_3272  [key=0, style=solid];
m21_3271 -> m21_165  [key=2, style=dotted];
m21_3272 -> m21_3273  [key=0, style=solid];
m21_3272 -> m21_51  [key=2, style=dotted];
m21_3273 -> m21_3274  [key=0, style=solid];
m21_3273 -> m21_165  [key=2, style=dotted];
m21_3274 -> m21_3275  [key=0, style=solid];
m21_3274 -> m21_51  [key=2, style=dotted];
m21_3275 -> m21_3276  [key=0, style=solid];
m21_3275 -> m21_165  [key=2, style=dotted];
m21_3276 -> m21_3277  [key=0, style=solid];
m21_3276 -> m21_51  [key=2, style=dotted];
m21_3277 -> m21_3278  [key=0, style=solid];
m21_3277 -> m21_165  [key=2, style=dotted];
m21_3278 -> m21_3279  [key=0, style=solid];
m21_3278 -> m21_51  [key=2, style=dotted];
m21_3279 -> m21_3280  [key=0, style=solid];
m21_3279 -> m21_165  [key=2, style=dotted];
m21_3280 -> m21_3281  [key=0, style=solid];
m21_3280 -> m21_51  [key=2, style=dotted];
m21_3281 -> m21_3282  [key=0, style=solid];
m21_3281 -> m21_165  [key=2, style=dotted];
m21_3282 -> m21_3283  [key=0, style=solid];
m21_3282 -> m21_51  [key=2, style=dotted];
m21_3283 -> m21_3284  [key=0, style=solid];
m21_3283 -> m21_165  [key=2, style=dotted];
m21_3284 -> m21_3269  [key=0, style=bold, color=blue];
m21_3877 -> m21_3878  [key=0, style=solid];
m21_3878 -> m21_3879  [key=0, style=solid];
m21_3878 -> m21_3878  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3879 -> m21_3880  [key=0, style=solid];
m21_3879 -> m21_51  [key=2, style=dotted];
m21_3879 -> m21_3881  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3879 -> m21_3882  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3879 -> m21_3883  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3879 -> m21_3884  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3880 -> m21_3881  [key=0, style=solid];
m21_3880 -> m21_165  [key=2, style=dotted];
m21_3881 -> m21_3882  [key=0, style=solid];
m21_3881 -> m21_165  [key=2, style=dotted];
m21_3882 -> m21_3883  [key=0, style=solid];
m21_3882 -> m21_165  [key=2, style=dotted];
m21_3883 -> m21_3884  [key=0, style=solid];
m21_3883 -> m21_165  [key=2, style=dotted];
m21_3884 -> m21_3885  [key=0, style=solid];
m21_3884 -> m21_165  [key=2, style=dotted];
m21_3885 -> m21_3877  [key=0, style=bold, color=blue];
m21_3169 -> m21_3170  [key=0, style=solid];
m21_3170 -> m21_3171  [key=0, style=solid];
m21_3170 -> m21_3174  [key=2, style=dotted];
m21_3170 -> m21_3175  [key=2, style=dotted];
m21_3171 -> m21_3172  [key=0, style=solid];
m21_3171 -> m21_142  [key=2, style=dotted];
m21_3172 -> m21_3173  [key=0, style=solid];
m21_3172 -> m21_24  [key=2, style=dotted];
m21_3173 -> m21_3169  [key=0, style=bold, color=blue];
m21_1261 -> m21_1262  [key=0, style=solid];
m21_1262 -> m21_1263  [key=0, style=solid];
m21_1262 -> m21_1269  [key=2, style=dotted];
m21_1262 -> m21_1264  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1262 -> m21_1265  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1262 -> m21_1266  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1263 -> m21_1264  [key=0, style=solid];
m21_1263 -> m21_1270  [key=2, style=dotted];
m21_1264 -> m21_1265  [key=0, style=solid];
m21_1264 -> m21_1270  [key=2, style=dotted];
m21_1265 -> m21_1266  [key=0, style=solid];
m21_1265 -> m21_1270  [key=2, style=dotted];
m21_1266 -> m21_1267  [key=0, style=solid];
m21_1266 -> m21_142  [key=2, style=dotted];
m21_1267 -> m21_1268  [key=0, style=solid];
m21_1267 -> m21_24  [key=2, style=dotted];
m21_1268 -> m21_1261  [key=0, style=bold, color=blue];
m21_1136 -> m21_1137  [key=0, style=solid];
m21_1137 -> m21_1138  [key=0, style=solid];
m21_1137 -> m21_147  [key=2, style=dotted];
m21_1137 -> m21_1147  [key=2, style=dotted];
m21_1137 -> m21_1140  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m21_1137 -> m21_1144  [key=1, style=dashed, color=darkseagreen4, label=testDates];
m21_1138 -> m21_1139  [key=0, style=solid];
m21_1138 -> m21_880  [key=2, style=dotted];
m21_1138 -> m21_1140  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_1138 -> m21_1141  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_1138 -> m21_1142  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_1140 -> m21_1141  [key=0, style=solid];
m21_1140 -> m21_961  [key=2, style=dotted];
m21_1144 -> m21_1145  [key=0, style=solid];
m21_1144 -> m21_188  [key=2, style=dotted];
m21_1144 -> m21_189  [key=2, style=dotted];
m21_1139 -> m21_1140  [key=0, style=solid];
m21_1139 -> m21_960  [key=2, style=dotted];
m21_1141 -> m21_1142  [key=0, style=solid];
m21_1141 -> m21_884  [key=2, style=dotted];
m21_1142 -> m21_1143  [key=0, style=solid];
m21_1142 -> m21_17  [key=2, style=dotted];
m21_1143 -> m21_1144  [key=0, style=solid];
m21_1143 -> m21_1148  [key=2, style=dotted];
m21_1143 -> m21_1145  [key=1, style=dashed, color=darkseagreen4, label=expected];
m21_1145 -> m21_1146  [key=0, style=solid];
m21_1145 -> m21_24  [key=2, style=dotted];
m21_1146 -> m21_1136  [key=0, style=bold, color=blue];
m21_3647 -> m21_3648  [key=0, style=solid];
m21_3648 -> m21_3649  [key=0, style=solid];
m21_3648 -> m21_3650  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3648 -> m21_3648  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3649 -> m21_3650  [key=0, style=solid];
m21_3649 -> m21_19  [key=2, style=dotted];
m21_3649 -> m21_3651  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3650 -> m21_3651  [key=0, style=solid];
m21_3650 -> m21_16  [key=2, style=dotted];
m21_3650 -> m21_386  [key=2, style=dotted];
m21_3651 -> m21_3652  [key=0, style=solid];
m21_3651 -> m21_2568  [key=2, style=dotted];
m21_3652 -> m21_3653  [key=0, style=solid];
m21_3652 -> m21_24  [key=2, style=dotted];
m21_3653 -> m21_3647  [key=0, style=bold, color=blue];
m21_1693 -> m21_1694  [key=0, style=solid];
m21_1694 -> m21_1695  [key=0, style=solid];
m21_1695 -> m21_1693  [key=0, style=bold, color=blue];
m21_3035 -> m21_3036  [key=0, style=solid];
m21_3036 -> m21_3037  [key=0, style=solid];
m21_3036 -> m21_3051  [key=2, style=dotted];
m21_3036 -> m21_3042  [key=1, style=dashed, color=darkseagreen4, label=test];
m21_3037 -> m21_3038  [key=0, style=solid];
m21_3037 -> m21_19  [key=2, style=dotted];
m21_3037 -> m21_3042  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3037 -> m21_3047  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3042 -> m21_3043  [key=0, style=solid];
m21_3042 -> m21_3052  [key=2, style=dotted];
m21_3038 -> m21_3039  [key=0, style=solid];
m21_3047 -> m21_3048  [key=0, style=solid];
m21_3047 -> m21_3054  [key=2, style=dotted];
m21_3047 -> m21_3049  [key=1, style=dashed, color=darkseagreen4, label=newObject];
m21_3039 -> m21_3040  [key=0, style=solid];
m21_3040 -> m21_3041  [key=0, style=solid];
m21_3040 -> m21_880  [key=2, style=dotted];
m21_3040 -> m21_3044  [key=1, style=dashed, color=darkseagreen4, label=stream];
m21_3041 -> m21_3042  [key=0, style=solid];
m21_3041 -> m21_3016  [key=2, style=dotted];
m21_3041 -> m21_881  [key=2, style=dotted];
m21_3041 -> m21_3043  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m21_3044 -> m21_3045  [key=0, style=solid];
m21_3044 -> m21_962  [key=2, style=dotted];
m21_3043 -> m21_3044  [key=0, style=solid];
m21_3043 -> m21_3053  [key=2, style=dotted];
m21_3045 -> m21_3046  [key=0, style=solid];
m21_3045 -> m21_1120  [key=2, style=dotted];
m21_3046 -> m21_3047  [key=0, style=solid];
m21_3046 -> m21_16  [key=2, style=dotted];
m21_3046 -> m21_17  [key=2, style=dotted];
m21_3048 -> m21_3049  [key=0, style=solid];
m21_3048 -> m21_24  [key=2, style=dotted];
m21_3049 -> m21_3050  [key=0, style=solid];
m21_3049 -> m21_3055  [key=2, style=dotted];
m21_3050 -> m21_3035  [key=0, style=bold, color=blue];
m21_2151 -> m21_2152  [key=0, style=solid];
m21_2152 -> m21_2153  [key=0, style=solid];
m21_2152 -> m21_2154  [key=2, style=dotted];
m21_2153 -> m21_2151  [key=0, style=bold, color=blue];
m21_1057 -> m21_1058  [key=0, style=solid];
m21_1058 -> m21_1059  [key=0, style=solid];
m21_1058 -> m21_1062  [key=2, style=dotted];
m21_1058 -> m21_142  [key=2, style=dotted];
m21_1059 -> m21_1060  [key=0, style=solid];
m21_1059 -> m21_51  [key=2, style=dotted];
m21_1060 -> m21_1061  [key=0, style=solid];
m21_1060 -> m21_24  [key=2, style=dotted];
m21_1061 -> m21_1057  [key=0, style=bold, color=blue];
m21_274 -> m21_275  [key=0, style=solid];
m21_275 -> m21_276  [key=0, style=solid];
m21_275 -> m21_271  [key=2, style=dotted];
m21_275 -> m21_285  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_276 -> m21_277  [key=0, style=solid];
m21_276 -> m21_73  [key=2, style=dotted];
m21_276 -> m21_284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_277 -> m21_278  [key=0, style=solid];
m21_277 -> m21_271  [key=2, style=dotted];
m21_278 -> m21_279  [key=0, style=solid];
m21_278 -> m21_142  [key=2, style=dotted];
m21_279 -> m21_280  [key=0, style=solid];
m21_279 -> m21_24  [key=2, style=dotted];
m21_280 -> m21_281  [key=0, style=solid];
m21_280 -> m21_73  [key=2, style=dotted];
m21_280 -> m21_287  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_281 -> m21_282  [key=0, style=solid];
m21_281 -> m21_51  [key=2, style=dotted];
m21_282 -> m21_283  [key=0, style=solid];
m21_282 -> m21_24  [key=2, style=dotted];
m21_283 -> m21_274  [key=0, style=bold, color=blue];
m21_3423 -> m21_3424  [key=0, style=solid];
m21_3424 -> m21_3425  [key=0, style=solid];
m21_3424 -> m21_3427  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3424 -> m21_162  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3425 -> m21_3426  [key=0, style=solid];
m21_3425 -> m21_147  [key=2, style=dotted];
m21_3425 -> m21_3436  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3425 -> m21_3429  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3425 -> m21_3430  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3425 -> m21_3431  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3425 -> m21_3432  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3425 -> m21_3433  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3427 -> m21_3428  [key=0, style=solid];
m21_3427 -> m21_188  [key=2, style=dotted];
m21_3427 -> m21_309  [key=2, style=dotted];
m21_3426 -> m21_3427  [key=0, style=solid];
m21_3426 -> m21_3436  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_3426 -> m21_3437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_3426 -> m21_3426  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m21_3429 -> m21_3430  [key=0, style=solid];
m21_3429 -> m21_24  [key=2, style=dotted];
m21_3430 -> m21_3431  [key=0, style=solid];
m21_3430 -> m21_1502  [key=2, style=dotted];
m21_3430 -> m21_22  [key=2, style=dotted];
m21_3431 -> m21_3432  [key=0, style=solid];
m21_3431 -> m21_1502  [key=2, style=dotted];
m21_3431 -> m21_22  [key=2, style=dotted];
m21_3432 -> m21_3433  [key=0, style=solid];
m21_3432 -> m21_1502  [key=2, style=dotted];
m21_3432 -> m21_22  [key=2, style=dotted];
m21_3433 -> m21_3434  [key=0, style=solid];
m21_3433 -> m21_1502  [key=2, style=dotted];
m21_3433 -> m21_22  [key=2, style=dotted];
m21_3428 -> m21_3429  [key=0, style=solid];
m21_3428 -> m21_843  [key=2, style=dotted];
m21_3434 -> m21_3423  [key=0, style=bold, color=blue];
m21_402 -> m21_403  [key=0, style=solid];
m21_403 -> m21_402  [key=0, style=bold, color=blue];
m21_3073 -> m21_3074  [key=0, style=solid];
m21_3074 -> m21_3075  [key=0, style=solid];
m21_3074 -> m21_3085  [key=2, style=dotted];
m21_3074 -> m21_3078  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m21_3074 -> m21_3080  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m21_3075 -> m21_3076  [key=0, style=solid];
m21_3075 -> m21_3072  [key=2, style=dotted];
m21_3075 -> m21_3078  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_3078 -> m21_3079  [key=0, style=solid];
m21_3078 -> m21_188  [key=2, style=dotted];
m21_3078 -> m21_211  [key=2, style=dotted];
m21_3080 -> m21_3081  [key=0, style=solid];
m21_3080 -> m21_188  [key=2, style=dotted];
m21_3080 -> m21_309  [key=2, style=dotted];
m21_3076 -> m21_3077  [key=0, style=solid];
m21_3077 -> m21_3078  [key=0, style=solid];
m21_3079 -> m21_3080  [key=0, style=solid];
m21_3079 -> m21_42  [key=2, style=dotted];
m21_3081 -> m21_3082  [key=0, style=solid];
m21_3081 -> m21_24  [key=2, style=dotted];
m21_3082 -> m21_3083  [key=0, style=solid];
m21_3082 -> m21_24  [key=2, style=dotted];
m21_3083 -> m21_3084  [key=0, style=solid];
m21_3083 -> m21_24  [key=2, style=dotted];
m21_3084 -> m21_3073  [key=0, style=bold, color=blue];
m21_2922 -> m21_2923  [key=0, style=solid];
m21_2923 -> m21_2924  [key=0, style=solid];
m21_2923 -> m21_2439  [key=2, style=dotted];
m21_2924 -> m21_2922  [key=0, style=bold, color=blue];
m21_1362 -> m21_1363  [key=0, style=solid];
m21_1363 -> m21_1364  [key=0, style=solid];
m21_1363 -> m21_1351  [key=2, style=dotted];
m21_1364 -> m21_1365  [key=0, style=solid];
m21_1364 -> m21_1352  [key=2, style=dotted];
m21_1365 -> m21_1366  [key=0, style=solid];
m21_1365 -> m21_188  [key=2, style=dotted];
m21_1365 -> m21_189  [key=2, style=dotted];
m21_1365 -> m21_1367  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1366 -> m21_1367  [key=0, style=solid];
m21_1366 -> m21_24  [key=2, style=dotted];
m21_1367 -> m21_1368  [key=0, style=solid];
m21_1367 -> m21_188  [key=2, style=dotted];
m21_1367 -> m21_309  [key=2, style=dotted];
m21_1367 -> m21_1369  [key=1, style=dashed, color=darkseagreen4, label=m2];
m21_1368 -> m21_1369  [key=0, style=solid];
m21_1368 -> m21_1000  [key=2, style=dotted];
m21_1368 -> m21_24  [key=2, style=dotted];
m21_1369 -> m21_1370  [key=0, style=solid];
m21_1369 -> m21_1000  [key=2, style=dotted];
m21_1369 -> m21_24  [key=2, style=dotted];
m21_1370 -> m21_1362  [key=0, style=bold, color=blue];
m21_3860 -> m21_3861  [key=0, style=solid];
m21_3861 -> m21_3862  [key=0, style=solid];
m21_3861 -> m21_3866  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3861 -> m21_3861  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3862 -> m21_3863  [key=0, style=solid];
m21_3862 -> m21_51  [key=2, style=dotted];
m21_3862 -> m21_3864  [key=1, style=dashed, color=darkseagreen4, label=floats];
m21_3862 -> m21_3865  [key=1, style=dashed, color=darkseagreen4, label=floats];
m21_3866 -> m21_3867  [key=0, style=solid];
m21_3866 -> m21_51  [key=2, style=dotted];
m21_3866 -> m21_3868  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m21_3866 -> m21_3869  [key=1, style=dashed, color=darkseagreen4, label=doubles];
m21_3863 -> m21_3864  [key=0, style=solid];
m21_3863 -> m21_24  [key=2, style=dotted];
m21_3864 -> m21_3865  [key=0, style=solid];
m21_3864 -> m21_24  [key=2, style=dotted];
m21_3865 -> m21_3866  [key=0, style=solid];
m21_3865 -> m21_24  [key=2, style=dotted];
m21_3867 -> m21_3868  [key=0, style=solid];
m21_3867 -> m21_24  [key=2, style=dotted];
m21_3868 -> m21_3869  [key=0, style=solid];
m21_3868 -> m21_24  [key=2, style=dotted];
m21_3869 -> m21_3870  [key=0, style=solid];
m21_3869 -> m21_24  [key=2, style=dotted];
m21_3870 -> m21_3860  [key=0, style=bold, color=blue];
m21_2177 -> m21_2178  [key=0, style=solid];
m21_2178 -> m21_2179  [key=0, style=solid];
m21_2178 -> m21_2180  [key=2, style=dotted];
m21_2179 -> m21_2177  [key=0, style=bold, color=blue];
m21_2783 -> m21_2784  [key=0, style=solid];
m21_2784 -> m21_2785  [key=0, style=solid];
m21_2784 -> m21_2788  [key=2, style=dotted];
m21_2785 -> m21_2786  [key=0, style=solid];
m21_2785 -> m21_41  [key=2, style=dotted];
m21_2786 -> m21_2787  [key=0, style=solid];
m21_2786 -> m21_42  [key=2, style=dotted];
m21_2787 -> m21_2783  [key=0, style=bold, color=blue];
m21_1841 -> m21_1842  [key=0, style=solid];
m21_1842 -> m21_1843  [key=0, style=solid];
m21_1842 -> m21_1846  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1842 -> m21_1821  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1843 -> m21_1844  [key=0, style=solid];
m21_1843 -> m21_73  [key=2, style=dotted];
m21_1843 -> m21_1845  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1844 -> m21_1841  [key=0, style=bold, color=blue];
m21_3339 -> m21_3340  [key=0, style=solid];
m21_3340 -> m21_3341  [key=0, style=solid];
m21_3340 -> m21_188  [key=2, style=dotted];
m21_3340 -> m21_309  [key=2, style=dotted];
m21_3340 -> m21_3342  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_3340 -> m21_3343  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_3340 -> m21_3344  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_3341 -> m21_3342  [key=0, style=solid];
m21_3341 -> m21_3336  [key=2, style=dotted];
m21_3341 -> m21_3337  [key=2, style=dotted];
m21_3341 -> m21_24  [key=2, style=dotted];
m21_3342 -> m21_3343  [key=0, style=solid];
m21_3342 -> m21_3338  [key=2, style=dotted];
m21_3342 -> m21_24  [key=2, style=dotted];
m21_3343 -> m21_3344  [key=0, style=solid];
m21_3343 -> m21_24  [key=2, style=dotted];
m21_3344 -> m21_3345  [key=0, style=solid];
m21_3344 -> m21_24  [key=2, style=dotted];
m21_3345 -> m21_3346  [key=0, style=solid];
m21_3345 -> m21_51  [key=2, style=dotted];
m21_3345 -> m21_3347  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3345 -> m21_3348  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3345 -> m21_3349  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3346 -> m21_3347  [key=0, style=solid];
m21_3346 -> m21_24  [key=2, style=dotted];
m21_3347 -> m21_3348  [key=0, style=solid];
m21_3347 -> m21_24  [key=2, style=dotted];
m21_3348 -> m21_3349  [key=0, style=solid];
m21_3348 -> m21_24  [key=2, style=dotted];
m21_3349 -> m21_3350  [key=0, style=solid];
m21_3349 -> m21_24  [key=2, style=dotted];
m21_3350 -> m21_3339  [key=0, style=bold, color=blue];
m21_375 -> m21_376  [key=0, style=solid];
m21_376 -> m21_377  [key=0, style=solid];
m21_376 -> m21_16  [key=2, style=dotted];
m21_376 -> m21_386  [key=2, style=dotted];
m21_376 -> m21_381  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_376 -> m21_384  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_377 -> m21_378  [key=0, style=solid];
m21_377 -> m21_24  [key=2, style=dotted];
m21_381 -> m21_382  [key=0, style=solid];
m21_381 -> m21_387  [key=2, style=dotted];
m21_384 -> m21_385  [key=0, style=solid];
m21_384 -> m21_24  [key=2, style=dotted];
m21_378 -> m21_379  [key=0, style=solid];
m21_378 -> m21_19  [key=2, style=dotted];
m21_378 -> m21_381  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_379 -> m21_380  [key=0, style=solid];
m21_380 -> m21_381  [key=0, style=solid];
m21_380 -> m21_147  [key=2, style=dotted];
m21_380 -> m21_382  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_380 -> m21_383  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_382 -> m21_383  [key=0, style=solid];
m21_382 -> m21_388  [key=2, style=dotted];
m21_382 -> m21_24  [key=2, style=dotted];
m21_383 -> m21_384  [key=0, style=solid];
m21_383 -> m21_389  [key=2, style=dotted];
m21_383 -> m21_24  [key=2, style=dotted];
m21_385 -> m21_375  [key=0, style=bold, color=blue];
m21_2436 -> m21_2437  [key=0, style=solid];
m21_2437 -> m21_2438  [key=0, style=solid];
m21_2437 -> m21_2439  [key=2, style=dotted];
m21_2438 -> m21_2436  [key=0, style=bold, color=blue];
m21_4274 -> m21_4275  [key=0, style=solid];
m21_4275 -> m21_4276  [key=0, style=solid];
m21_4275 -> m21_73  [key=2, style=dotted];
m21_4275 -> m21_4277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_4276 -> m21_4274  [key=0, style=bold, color=blue];
m21_4330 -> m21_4331  [key=0, style=solid];
m21_4331 -> m21_4332  [key=0, style=solid];
m21_4331 -> m21_2439  [key=2, style=dotted];
m21_4332 -> m21_4330  [key=0, style=bold, color=blue];
m21_1342 -> m21_1343  [key=0, style=solid];
m21_1343 -> m21_1344  [key=0, style=solid];
m21_1343 -> m21_1351  [key=2, style=dotted];
m21_1343 -> m21_1348  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m21_1343 -> m21_1349  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m21_1344 -> m21_1345  [key=0, style=solid];
m21_1344 -> m21_1352  [key=2, style=dotted];
m21_1348 -> m21_1349  [key=0, style=solid];
m21_1348 -> m21_24  [key=2, style=dotted];
m21_1349 -> m21_1350  [key=0, style=solid];
m21_1349 -> m21_24  [key=2, style=dotted];
m21_1345 -> m21_1346  [key=0, style=solid];
m21_1345 -> m21_142  [key=2, style=dotted];
m21_1345 -> m21_1347  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1346 -> m21_1347  [key=0, style=solid];
m21_1346 -> m21_24  [key=2, style=dotted];
m21_1347 -> m21_1348  [key=0, style=solid];
m21_1347 -> m21_51  [key=2, style=dotted];
m21_1347 -> m21_1349  [key=1, style=dashed, color=darkseagreen4, label=m2];
m21_1350 -> m21_1342  [key=0, style=bold, color=blue];
m21_4122 -> m21_4123  [key=0, style=solid];
m21_4123 -> m21_4124  [key=0, style=solid];
m21_4123 -> m21_4079  [key=2, style=dotted];
m21_4124 -> m21_4122  [key=0, style=bold, color=blue];
m21_2155 -> m21_2156  [key=0, style=solid];
m21_2156 -> m21_2157  [key=0, style=solid];
m21_2156 -> m21_2158  [key=2, style=dotted];
m21_2157 -> m21_2155  [key=0, style=bold, color=blue];
m21_2427 -> m21_2428  [key=0, style=solid];
m21_2427 -> m21_2430  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m21_2427 -> m21_2431  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m21_2428 -> m21_2429  [key=0, style=solid];
m21_2428 -> m21_2430  [key=1, style=dashed, color=darkseagreen4, label=p];
m21_2430 -> m21_2432  [key=0, style=solid];
m21_2430 -> m21_2433  [key=2, style=dotted];
m21_2430 -> m21_2434  [key=2, style=dotted];
m21_2431 -> m21_2432  [key=0, style=solid];
m21_2431 -> m21_2435  [key=2, style=dotted];
m21_2429 -> m21_2430  [key=0, style=solid];
m21_2429 -> m21_2431  [key=0, style=solid];
m21_2432 -> m21_2427  [key=0, style=bold, color=blue];
m21_1820 -> m21_1821  [key=0, style=solid];
m21_1821 -> m21_1822  [key=0, style=solid];
m21_1821 -> m21_1825  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1821 -> m21_1821  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1822 -> m21_1823  [key=0, style=solid];
m21_1822 -> m21_73  [key=2, style=dotted];
m21_1822 -> m21_1824  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1823 -> m21_1820  [key=0, style=bold, color=blue];
m21_390 -> m21_391  [key=0, style=solid];
m21_391 -> m21_392  [key=0, style=solid];
m21_391 -> m21_395  [key=2, style=dotted];
m21_391 -> m21_142  [key=2, style=dotted];
m21_391 -> m21_24  [key=2, style=dotted];
m21_392 -> m21_393  [key=0, style=solid];
m21_392 -> m21_51  [key=2, style=dotted];
m21_393 -> m21_394  [key=0, style=solid];
m21_393 -> m21_24  [key=2, style=dotted];
m21_394 -> m21_390  [key=0, style=bold, color=blue];
m21_3439 -> m21_3440  [key=0, style=solid];
m21_3440 -> m21_3441  [key=0, style=solid];
m21_3440 -> m21_3443  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3440 -> m21_3440  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3441 -> m21_3442  [key=0, style=solid];
m21_3441 -> m21_147  [key=2, style=dotted];
m21_3441 -> m21_3451  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3441 -> m21_3445  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3441 -> m21_3446  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3441 -> m21_3447  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3441 -> m21_3448  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3443 -> m21_3444  [key=0, style=solid];
m21_3443 -> m21_188  [key=2, style=dotted];
m21_3443 -> m21_309  [key=2, style=dotted];
m21_3442 -> m21_3443  [key=0, style=solid];
m21_3442 -> m21_3451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_3442 -> m21_3452  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_3442 -> m21_3442  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m21_3445 -> m21_3446  [key=0, style=solid];
m21_3445 -> m21_24  [key=2, style=dotted];
m21_3446 -> m21_3447  [key=0, style=solid];
m21_3446 -> m21_1502  [key=2, style=dotted];
m21_3446 -> m21_22  [key=2, style=dotted];
m21_3447 -> m21_3448  [key=0, style=solid];
m21_3447 -> m21_1502  [key=2, style=dotted];
m21_3447 -> m21_22  [key=2, style=dotted];
m21_3448 -> m21_3449  [key=0, style=solid];
m21_3448 -> m21_1502  [key=2, style=dotted];
m21_3448 -> m21_22  [key=2, style=dotted];
m21_3444 -> m21_3445  [key=0, style=solid];
m21_3444 -> m21_843  [key=2, style=dotted];
m21_3449 -> m21_3439  [key=0, style=bold, color=blue];
m21_3536 -> m21_3537  [key=0, style=solid];
m21_3537 -> m21_3538  [key=0, style=solid];
m21_3537 -> m21_3542  [key=2, style=dotted];
m21_3537 -> m21_3539  [key=1, style=dashed, color=darkseagreen4, label=testObj];
m21_3538 -> m21_3539  [key=0, style=solid];
m21_3538 -> m21_3543  [key=2, style=dotted];
m21_3538 -> m21_3540  [key=1, style=dashed, color=darkseagreen4, label=objDeserialized];
m21_3539 -> m21_3540  [key=0, style=solid];
m21_3539 -> m21_24  [key=2, style=dotted];
m21_3540 -> m21_3541  [key=0, style=solid];
m21_3540 -> m21_24  [key=2, style=dotted];
m21_3541 -> m21_3536  [key=0, style=bold, color=blue];
m21_2019 -> m21_2020  [key=0, style=solid];
m21_2020 -> m21_2021  [key=0, style=solid];
m21_2020 -> m21_209  [key=2, style=dotted];
m21_2021 -> m21_2022  [key=0, style=solid];
m21_2021 -> m21_147  [key=2, style=dotted];
m21_2022 -> m21_2019  [key=0, style=bold, color=blue];
m21_2773 -> m21_2774  [key=0, style=solid];
m21_2774 -> m21_2775  [key=0, style=solid];
m21_2774 -> m21_2782  [key=2, style=dotted];
m21_2774 -> m21_147  [key=2, style=dotted];
m21_2775 -> m21_2776  [key=0, style=solid];
m21_2775 -> m21_41  [key=2, style=dotted];
m21_2775 -> m21_2777  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2776 -> m21_2777  [key=0, style=solid];
m21_2776 -> m21_42  [key=2, style=dotted];
m21_2777 -> m21_2778  [key=0, style=solid];
m21_2777 -> m21_51  [key=2, style=dotted];
m21_2777 -> m21_2779  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2777 -> m21_2780  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2778 -> m21_2779  [key=0, style=solid];
m21_2778 -> m21_1725  [key=2, style=dotted];
m21_2778 -> m21_24  [key=2, style=dotted];
m21_2779 -> m21_2780  [key=0, style=solid];
m21_2779 -> m21_1725  [key=2, style=dotted];
m21_2779 -> m21_24  [key=2, style=dotted];
m21_2780 -> m21_2781  [key=0, style=solid];
m21_2780 -> m21_1725  [key=2, style=dotted];
m21_2780 -> m21_24  [key=2, style=dotted];
m21_2781 -> m21_2773  [key=0, style=bold, color=blue];
m21_2309 -> m21_2310  [key=0, style=solid];
m21_2309 -> m21_2311  [key=1, style=dashed, color=darkseagreen4, label=TValue];
m21_2310 -> m21_2311  [key=0, style=solid];
m21_2311 -> m21_2312  [key=0, style=solid];
m21_2312 -> m21_2309  [key=0, style=bold, color=blue];
m21_3176 -> m21_3177  [key=0, style=solid];
m21_3177 -> m21_3178  [key=0, style=solid];
m21_3177 -> m21_3177  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3178 -> m21_3179  [key=0, style=solid];
m21_3178 -> m21_51  [key=2, style=dotted];
m21_3178 -> m21_3180  [key=1, style=dashed, color=darkseagreen4, label=w];
m21_3178 -> m21_3181  [key=1, style=dashed, color=darkseagreen4, label=w];
m21_3179 -> m21_3180  [key=0, style=solid];
m21_3179 -> m21_3175  [key=2, style=dotted];
m21_3179 -> m21_24  [key=2, style=dotted];
m21_3180 -> m21_3181  [key=0, style=solid];
m21_3180 -> m21_3175  [key=2, style=dotted];
m21_3180 -> m21_24  [key=2, style=dotted];
m21_3181 -> m21_3182  [key=0, style=solid];
m21_3181 -> m21_24  [key=2, style=dotted];
m21_3182 -> m21_3176  [key=0, style=bold, color=blue];
m21_3949 -> m21_3950  [key=0, style=solid];
m21_3950 -> m21_3951  [key=0, style=solid];
m21_3950 -> m21_209  [key=2, style=dotted];
m21_3950 -> m21_3956  [key=2, style=dotted];
m21_3950 -> m21_142  [key=2, style=dotted];
m21_3950 -> m21_3952  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3951 -> m21_3952  [key=0, style=solid];
m21_3951 -> m21_24  [key=2, style=dotted];
m21_3952 -> m21_3953  [key=0, style=solid];
m21_3952 -> m21_51  [key=2, style=dotted];
m21_3952 -> m21_3954  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_3953 -> m21_3954  [key=0, style=solid];
m21_3953 -> m21_3956  [key=2, style=dotted];
m21_3953 -> m21_3948  [key=2, style=dotted];
m21_3953 -> m21_24  [key=2, style=dotted];
m21_3954 -> m21_3955  [key=0, style=solid];
m21_3954 -> m21_3956  [key=2, style=dotted];
m21_3954 -> m21_3948  [key=2, style=dotted];
m21_3954 -> m21_24  [key=2, style=dotted];
m21_3955 -> m21_3949  [key=0, style=bold, color=blue];
m21_1353 -> m21_1354  [key=0, style=solid];
m21_1354 -> m21_1355  [key=0, style=solid];
m21_1354 -> m21_1351  [key=2, style=dotted];
m21_1354 -> m21_1359  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m21_1354 -> m21_1360  [key=1, style=dashed, color=darkseagreen4, label=testDate];
m21_1355 -> m21_1356  [key=0, style=solid];
m21_1355 -> m21_1352  [key=2, style=dotted];
m21_1359 -> m21_1360  [key=0, style=solid];
m21_1359 -> m21_24  [key=2, style=dotted];
m21_1360 -> m21_1361  [key=0, style=solid];
m21_1360 -> m21_24  [key=2, style=dotted];
m21_1356 -> m21_1357  [key=0, style=solid];
m21_1356 -> m21_188  [key=2, style=dotted];
m21_1356 -> m21_189  [key=2, style=dotted];
m21_1356 -> m21_1358  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1357 -> m21_1358  [key=0, style=solid];
m21_1357 -> m21_24  [key=2, style=dotted];
m21_1358 -> m21_1359  [key=0, style=solid];
m21_1358 -> m21_51  [key=2, style=dotted];
m21_1358 -> m21_1360  [key=1, style=dashed, color=darkseagreen4, label=m2];
m21_1361 -> m21_1353  [key=0, style=bold, color=blue];
m21_3262 -> m21_3263  [key=0, style=solid];
m21_3263 -> m21_3264  [key=0, style=solid];
m21_3263 -> m21_188  [key=2, style=dotted];
m21_3263 -> m21_879  [key=2, style=dotted];
m21_3263 -> m21_3266  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3264 -> m21_3265  [key=0, style=solid];
m21_3264 -> m21_16  [key=2, style=dotted];
m21_3264 -> m21_386  [key=2, style=dotted];
m21_3264 -> m21_20  [key=2, style=dotted];
m21_3264 -> m21_3267  [key=1, style=dashed, color=darkseagreen4, label=dict];
m21_3266 -> m21_3267  [key=0, style=solid];
m21_3266 -> m21_20  [key=2, style=dotted];
m21_3265 -> m21_3266  [key=0, style=solid];
m21_3265 -> m21_16  [key=2, style=dotted];
m21_3265 -> m21_386  [key=2, style=dotted];
m21_3267 -> m21_3268  [key=0, style=solid];
m21_3267 -> m21_24  [key=2, style=dotted];
m21_3268 -> m21_3262  [key=0, style=bold, color=blue];
m21_172 -> m21_173  [key=0, style=solid];
m21_173 -> m21_174  [key=0, style=solid];
m21_173 -> m21_51  [key=2, style=dotted];
m21_173 -> m21_175  [key=1, style=dashed, color=darkseagreen4, label=p];
m21_174 -> m21_175  [key=0, style=solid];
m21_174 -> m21_165  [key=2, style=dotted];
m21_175 -> m21_176  [key=0, style=solid];
m21_175 -> m21_165  [key=2, style=dotted];
m21_176 -> m21_172  [key=0, style=bold, color=blue];
m21_916 -> m21_947  [key=0, style=solid];
m21_916 -> m21_948  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_916 -> m21_949  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_916 -> m21_953  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_916 -> m21_907  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m21_916 -> m21_928  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m21_916 -> m21_938  [key=3, color=darkorchid, style=bold, label="Parameter variable object o"];
m21_947 -> m21_948  [key=0, style=solid];
m21_947 -> m21_880  [key=2, style=dotted];
m21_947 -> m21_949  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_947 -> m21_950  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_948 -> m21_949  [key=0, style=solid];
m21_948 -> m21_960  [key=2, style=dotted];
m21_948 -> m21_388  [key=2, style=dotted];
m21_949 -> m21_950  [key=0, style=solid];
m21_949 -> m21_961  [key=2, style=dotted];
m21_953 -> m21_954  [key=0, style=solid];
m21_953 -> m21_142  [key=2, style=dotted];
m21_953 -> m21_480  [key=2, style=dotted];
m21_950 -> m21_951  [key=0, style=solid];
m21_950 -> m21_962  [key=2, style=dotted];
m21_951 -> m21_952  [key=0, style=solid];
m21_951 -> m21_963  [key=2, style=dotted];
m21_951 -> m21_480  [key=2, style=dotted];
m21_952 -> m21_953  [key=0, style=solid];
m21_952 -> m21_964  [key=2, style=dotted];
m21_952 -> m21_965  [key=2, style=dotted];
m21_952 -> m21_966  [key=2, style=dotted];
m21_952 -> m21_952  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m21_952 -> m21_967  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_952 -> m21_955  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m21_952 -> m21_956  [key=1, style=dashed, color=darkseagreen4, label=dataContractJson];
m21_955 -> m21_956  [key=0, style=solid];
m21_955 -> m21_24  [key=2, style=dotted];
m21_956 -> m21_957  [key=0, style=solid];
m21_956 -> m21_958  [key=0, style=solid];
m21_954 -> m21_955  [key=0, style=solid];
m21_954 -> m21_964  [key=2, style=dotted];
m21_954 -> m21_965  [key=2, style=dotted];
m21_954 -> m21_966  [key=2, style=dotted];
m21_954 -> m21_954  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m21_954 -> m21_970  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_954 -> m21_957  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m21_954 -> m21_958  [key=1, style=dashed, color=darkseagreen4, label=jsonNetJson];
m21_957 -> m21_956  [key=0, style=solid];
m21_957 -> m21_481  [key=2, style=dotted];
m21_957 -> m21_22  [key=2, style=dotted];
m21_957 -> m21_957  [key=1, style=dashed, color=darkseagreen4, label=property];
m21_958 -> m21_959  [key=0, style=solid];
m21_958 -> m21_816  [key=2, style=dotted];
m21_959 -> m21_916  [key=0, style=bold, color=blue];
m21_4202 -> m21_4203  [key=0, style=solid];
m21_4203 -> m21_4204  [key=0, style=solid];
m21_4203 -> m21_389  [key=2, style=dotted];
m21_4203 -> m21_4206  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4203 -> m21_4209  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4204 -> m21_4205  [key=0, style=solid];
m21_4204 -> m21_4204  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m21_4206 -> m21_4207  [key=0, style=solid];
m21_4206 -> m21_209  [key=2, style=dotted];
m21_4206 -> m21_189  [key=2, style=dotted];
m21_4206 -> m21_4208  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4209 -> m21_4210  [key=0, style=solid];
m21_4209 -> m21_1725  [key=2, style=dotted];
m21_4209 -> m21_24  [key=2, style=dotted];
m21_4205 -> m21_4206  [key=0, style=solid];
m21_4205 -> m21_188  [key=2, style=dotted];
m21_4205 -> m21_4208  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_4208 -> m21_4209  [key=0, style=solid];
m21_4208 -> m21_309  [key=2, style=dotted];
m21_4207 -> m21_4208  [key=0, style=solid];
m21_4207 -> m21_42  [key=2, style=dotted];
m21_4210 -> m21_4202  [key=0, style=bold, color=blue];
m21_3454 -> m21_3455  [key=0, style=solid];
m21_3455 -> m21_3456  [key=0, style=solid];
m21_3455 -> m21_147  [key=2, style=dotted];
m21_3455 -> m21_3466  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3455 -> m21_3459  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3455 -> m21_3460  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3455 -> m21_3461  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3455 -> m21_3462  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_3456 -> m21_3457  [key=0, style=solid];
m21_3456 -> m21_3466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_3456 -> m21_3467  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m21_3456 -> m21_3456  [key=3, color=darkorchid, style=bold, label="Local variable System.EventHandler<Newtonsoft.Json.Serialization.ErrorEventArgs> error"];
m21_3459 -> m21_3460  [key=0, style=solid];
m21_3459 -> m21_24  [key=2, style=dotted];
m21_3460 -> m21_3461  [key=0, style=solid];
m21_3460 -> m21_24  [key=2, style=dotted];
m21_3461 -> m21_3462  [key=0, style=solid];
m21_3461 -> m21_24  [key=2, style=dotted];
m21_3462 -> m21_3463  [key=0, style=solid];
m21_3462 -> m21_24  [key=2, style=dotted];
m21_3457 -> m21_3458  [key=0, style=solid];
m21_3457 -> m21_3464  [key=2, style=dotted];
m21_3457 -> m21_188  [key=2, style=dotted];
m21_3457 -> m21_189  [key=2, style=dotted];
m21_3458 -> m21_3459  [key=0, style=solid];
m21_3458 -> m21_42  [key=2, style=dotted];
m21_3463 -> m21_3454  [key=0, style=bold, color=blue];
m21_1205 -> m21_1206  [key=0, style=solid];
m21_1206 -> m21_1207  [key=0, style=solid];
m21_1206 -> m21_1206  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1207 -> m21_1208  [key=0, style=solid];
m21_1207 -> m21_51  [key=2, style=dotted];
m21_1207 -> m21_1209  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1207 -> m21_1210  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1207 -> m21_1211  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1207 -> m21_1212  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1207 -> m21_1213  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1208 -> m21_1209  [key=0, style=solid];
m21_1208 -> m21_24  [key=2, style=dotted];
m21_1209 -> m21_1210  [key=0, style=solid];
m21_1209 -> m21_24  [key=2, style=dotted];
m21_1210 -> m21_1211  [key=0, style=solid];
m21_1210 -> m21_24  [key=2, style=dotted];
m21_1211 -> m21_1212  [key=0, style=solid];
m21_1211 -> m21_24  [key=2, style=dotted];
m21_1212 -> m21_1213  [key=0, style=solid];
m21_1212 -> m21_24  [key=2, style=dotted];
m21_1213 -> m21_1214  [key=0, style=solid];
m21_1213 -> m21_24  [key=2, style=dotted];
m21_1214 -> m21_1205  [key=0, style=bold, color=blue];
m21_320 -> m21_321  [key=0, style=solid];
m21_321 -> m21_322  [key=0, style=solid];
m21_321 -> m21_323  [key=2, style=dotted];
m21_322 -> m21_320  [key=0, style=bold, color=blue];
m21_1161 -> m21_1162  [key=0, style=solid];
m21_1162 -> m21_1163  [key=0, style=solid];
m21_1162 -> m21_209  [key=2, style=dotted];
m21_1162 -> m21_1164  [key=1, style=dashed, color=darkseagreen4, label=values];
m21_1162 -> m21_1165  [key=1, style=dashed, color=darkseagreen4, label=values];
m21_1162 -> m21_1168  [key=1, style=dashed, color=darkseagreen4, label=values];
m21_1163 -> m21_1164  [key=0, style=solid];
m21_1163 -> m21_878  [key=2, style=dotted];
m21_1164 -> m21_1165  [key=0, style=solid];
m21_1164 -> m21_878  [key=2, style=dotted];
m21_1165 -> m21_1166  [key=0, style=solid];
m21_1165 -> m21_142  [key=2, style=dotted];
m21_1165 -> m21_1167  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1168 -> m21_1169  [key=0, style=solid];
m21_1168 -> m21_24  [key=2, style=dotted];
m21_1166 -> m21_1167  [key=0, style=solid];
m21_1166 -> m21_24  [key=2, style=dotted];
m21_1167 -> m21_1168  [key=0, style=solid];
m21_1167 -> m21_51  [key=2, style=dotted];
m21_1169 -> m21_1161  [key=0, style=bold, color=blue];
m21_2453 -> m21_2454  [key=0, style=solid];
m21_2454 -> m21_2455  [key=0, style=solid];
m21_2455 -> m21_2453  [key=0, style=bold, color=blue];
m21_177 -> m21_178  [key=0, style=solid];
m21_178 -> m21_179  [key=0, style=solid];
m21_178 -> m21_73  [key=2, style=dotted];
m21_178 -> m21_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_179 -> m21_177  [key=0, style=bold, color=blue];
m21_4033 -> m21_4034  [key=0, style=solid];
m21_4034 -> m21_4035  [key=0, style=solid];
m21_4034 -> m21_4053  [key=2, style=dotted];
m21_4034 -> m21_4036  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m21_4034 -> m21_4041  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m21_4034 -> m21_4047  [key=1, style=dashed, color=darkseagreen4, label=consoleWriter];
m21_4035 -> m21_4036  [key=0, style=solid];
m21_4035 -> m21_188  [key=2, style=dotted];
m21_4035 -> m21_4054  [key=2, style=dotted];
m21_4035 -> m21_4055  [key=2, style=dotted];
m21_4035 -> m21_4038  [key=1, style=dashed, color=darkseagreen4, label=options];
m21_4035 -> m21_4042  [key=1, style=dashed, color=darkseagreen4, label=options];
m21_4035 -> m21_4044  [key=1, style=dashed, color=darkseagreen4, label=options];
m21_4035 -> m21_4048  [key=1, style=dashed, color=darkseagreen4, label=options];
m21_4035 -> m21_4050  [key=1, style=dashed, color=darkseagreen4, label=options];
m21_4036 -> m21_4037  [key=0, style=solid];
m21_4036 -> m21_211  [key=2, style=dotted];
m21_4036 -> m21_4038  [key=1, style=dashed, color=darkseagreen4, label=text1];
m21_4041 -> m21_4042  [key=0, style=solid];
m21_4041 -> m21_878  [key=2, style=dotted];
m21_4047 -> m21_4048  [key=0, style=solid];
m21_4047 -> m21_878  [key=2, style=dotted];
m21_4038 -> m21_4039  [key=0, style=solid];
m21_4038 -> m21_309  [key=2, style=dotted];
m21_4042 -> m21_4043  [key=0, style=solid];
m21_4042 -> m21_211  [key=2, style=dotted];
m21_4042 -> m21_4044  [key=1, style=dashed, color=darkseagreen4, label=text2];
m21_4044 -> m21_4045  [key=0, style=solid];
m21_4044 -> m21_309  [key=2, style=dotted];
m21_4048 -> m21_4049  [key=0, style=solid];
m21_4048 -> m21_211  [key=2, style=dotted];
m21_4048 -> m21_4050  [key=1, style=dashed, color=darkseagreen4, label=text3];
m21_4050 -> m21_4051  [key=0, style=solid];
m21_4050 -> m21_309  [key=2, style=dotted];
m21_4037 -> m21_4038  [key=0, style=solid];
m21_4037 -> m21_24  [key=2, style=dotted];
m21_4039 -> m21_4040  [key=0, style=solid];
m21_4039 -> m21_4056  [key=2, style=dotted];
m21_4039 -> m21_24  [key=2, style=dotted];
m21_4040 -> m21_4041  [key=0, style=solid];
m21_4040 -> m21_209  [key=2, style=dotted];
m21_4040 -> m21_4042  [key=1, style=dashed, color=darkseagreen4, label=dict2];
m21_4043 -> m21_4044  [key=0, style=solid];
m21_4043 -> m21_42  [key=2, style=dotted];
m21_4045 -> m21_4046  [key=0, style=solid];
m21_4045 -> m21_3948  [key=2, style=dotted];
m21_4045 -> m21_4056  [key=2, style=dotted];
m21_4045 -> m21_24  [key=2, style=dotted];
m21_4046 -> m21_4047  [key=0, style=solid];
m21_4046 -> m21_209  [key=2, style=dotted];
m21_4046 -> m21_4048  [key=1, style=dashed, color=darkseagreen4, label=dict3];
m21_4049 -> m21_4050  [key=0, style=solid];
m21_4049 -> m21_42  [key=2, style=dotted];
m21_4051 -> m21_4052  [key=0, style=solid];
m21_4051 -> m21_3948  [key=2, style=dotted];
m21_4051 -> m21_4056  [key=2, style=dotted];
m21_4051 -> m21_24  [key=2, style=dotted];
m21_4052 -> m21_4033  [key=0, style=bold, color=blue];
m21_2005 -> m21_2006  [key=0, style=solid];
m21_2006 -> m21_2007  [key=0, style=solid];
m21_2006 -> m21_2018  [key=2, style=dotted];
m21_2006 -> m21_2013  [key=1, style=dashed, color=darkseagreen4, label=personPropertyClass];
m21_2007 -> m21_2008  [key=0, style=solid];
m21_2007 -> m21_2009  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m21_2007 -> m21_2010  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m21_2007 -> m21_2011  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m21_2007 -> m21_2012  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m21_2007 -> m21_2016  [key=1, style=dashed, color=darkseagreen4, label=wagePerson];
m21_2013 -> m21_2014  [key=0, style=solid];
m21_2013 -> m21_41  [key=2, style=dotted];
m21_2013 -> m21_2015  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2008 -> m21_2009  [key=0, style=solid];
m21_2008 -> m21_1147  [key=2, style=dotted];
m21_2009 -> m21_2010  [key=0, style=solid];
m21_2010 -> m21_2011  [key=0, style=solid];
m21_2011 -> m21_2012  [key=0, style=solid];
m21_2011 -> m21_1147  [key=2, style=dotted];
m21_2012 -> m21_2013  [key=0, style=solid];
m21_2016 -> m21_2017  [key=0, style=solid];
m21_2016 -> m21_24  [key=2, style=dotted];
m21_2014 -> m21_2015  [key=0, style=solid];
m21_2014 -> m21_42  [key=2, style=dotted];
m21_2015 -> m21_2016  [key=0, style=solid];
m21_2015 -> m21_51  [key=2, style=dotted];
m21_2017 -> m21_2005  [key=0, style=bold, color=blue];
m21_1409 -> m21_1410  [key=0, style=solid];
m21_1410 -> m21_1411  [key=0, style=solid];
m21_1410 -> m21_73  [key=2, style=dotted];
m21_1410 -> m21_1412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1411 -> m21_1409  [key=0, style=bold, color=blue];
m21_2070 -> m21_2071  [key=0, style=solid];
m21_2071 -> m21_2072  [key=0, style=solid];
m21_2071 -> m21_2075  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2071 -> m21_2071  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2072 -> m21_2073  [key=0, style=solid];
m21_2072 -> m21_73  [key=2, style=dotted];
m21_2072 -> m21_2074  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_2073 -> m21_2070  [key=0, style=bold, color=blue];
m21_4271 -> m21_4272  [key=0, style=solid];
m21_4272 -> m21_4273  [key=0, style=solid];
m21_4272 -> m21_2439  [key=2, style=dotted];
m21_4273 -> m21_4271  [key=0, style=bold, color=blue];
m21_1077 -> m21_1078  [key=0, style=solid];
m21_1078 -> m21_1079  [key=0, style=solid];
m21_1078 -> m21_1078  [key=3, color=darkorchid, style=bold, label="Local variable string jsonText"];
m21_1079 -> m21_1080  [key=0, style=solid];
m21_1079 -> m21_478  [key=2, style=dotted];
m21_1079 -> m21_1081  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1080 -> m21_1081  [key=0, style=solid];
m21_1080 -> m21_1085  [key=2, style=dotted];
m21_1080 -> m21_479  [key=2, style=dotted];
m21_1080 -> m21_24  [key=2, style=dotted];
m21_1081 -> m21_1082  [key=0, style=solid];
m21_1082 -> m21_1083  [key=0, style=solid];
m21_1083 -> m21_1084  [key=0, style=solid];
m21_1083 -> m21_1086  [key=2, style=dotted];
m21_1083 -> m21_479  [key=2, style=dotted];
m21_1083 -> m21_24  [key=2, style=dotted];
m21_1084 -> m21_1077  [key=0, style=bold, color=blue];
m21_434 -> m21_435  [key=0, style=solid];
m21_435 -> m21_436  [key=0, style=solid];
m21_435 -> m21_415  [key=2, style=dotted];
m21_435 -> m21_442  [key=2, style=dotted];
m21_435 -> m21_443  [key=2, style=dotted];
m21_435 -> m21_438  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_435 -> m21_439  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_435 -> m21_440  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_436 -> m21_437  [key=0, style=solid];
m21_436 -> m21_142  [key=2, style=dotted];
m21_438 -> m21_439  [key=0, style=solid];
m21_438 -> m21_24  [key=2, style=dotted];
m21_439 -> m21_440  [key=0, style=solid];
m21_439 -> m21_24  [key=2, style=dotted];
m21_440 -> m21_441  [key=0, style=solid];
m21_440 -> m21_24  [key=2, style=dotted];
m21_437 -> m21_438  [key=0, style=solid];
m21_437 -> m21_51  [key=2, style=dotted];
m21_437 -> m21_439  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_437 -> m21_440  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_441 -> m21_434  [key=0, style=bold, color=blue];
m21_2757 -> m21_4380  [key=0, style=solid];
m21_4380 -> m21_4381  [key=0, style=solid];
m21_4381 -> m21_2757  [key=0, style=bold, color=blue];
m21_1623 -> m21_1624  [key=0, style=solid];
m21_1624 -> m21_1625  [key=0, style=solid];
m21_1624 -> m21_1622  [key=2, style=dotted];
m21_1624 -> m21_1626  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_1625 -> m21_1626  [key=0, style=solid];
m21_1626 -> m21_1627  [key=0, style=solid];
m21_1626 -> m21_188  [key=2, style=dotted];
m21_1626 -> m21_189  [key=2, style=dotted];
m21_1626 -> m21_1628  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1627 -> m21_1628  [key=0, style=solid];
m21_1627 -> m21_24  [key=2, style=dotted];
m21_1628 -> m21_1629  [key=0, style=solid];
m21_1628 -> m21_188  [key=2, style=dotted];
m21_1628 -> m21_309  [key=2, style=dotted];
m21_1629 -> m21_1630  [key=0, style=solid];
m21_1629 -> m21_188  [key=2, style=dotted];
m21_1629 -> m21_189  [key=2, style=dotted];
m21_1630 -> m21_1631  [key=0, style=solid];
m21_1630 -> m21_24  [key=2, style=dotted];
m21_1631 -> m21_1623  [key=0, style=bold, color=blue];
m21_3718 -> m21_3719  [key=0, style=solid];
m21_3719 -> m21_3720  [key=0, style=solid];
m21_3719 -> m21_3719  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3720 -> m21_3721  [key=0, style=solid];
m21_3720 -> m21_51  [key=2, style=dotted];
m21_3721 -> m21_3722  [key=0, style=solid];
m21_3722 -> m21_3723  [key=0, style=solid];
m21_3722 -> m21_2401  [key=2, style=dotted];
m21_3722 -> m21_24  [key=2, style=dotted];
m21_3723 -> m21_3718  [key=0, style=bold, color=blue];
m21_3319 -> m21_3320  [key=0, style=solid];
m21_3320 -> m21_3321  [key=0, style=solid];
m21_3320 -> m21_3320  [key=3, color=darkorchid, style=bold, label="Local variable string jsonIsoText"];
m21_3321 -> m21_3322  [key=0, style=solid];
m21_3321 -> m21_1194  [key=2, style=dotted];
m21_3321 -> m21_249  [key=2, style=dotted];
m21_3322 -> m21_3323  [key=0, style=solid];
m21_3322 -> m21_24  [key=2, style=dotted];
m21_3323 -> m21_3319  [key=0, style=bold, color=blue];
m21_83 -> m21_84  [key=0, style=solid];
m21_84 -> m21_85  [key=0, style=solid];
m21_84 -> m21_73  [key=2, style=dotted];
m21_84 -> m21_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_85 -> m21_83  [key=0, style=bold, color=blue];
m21_488 -> m21_489  [key=0, style=solid];
m21_489 -> m21_490  [key=0, style=solid];
m21_489 -> m21_19  [key=2, style=dotted];
m21_489 -> m21_491  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_492  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_493  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_494  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_495  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_496  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_568  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_497  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_498  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_499  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_500  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_501  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_502  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_504  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_505  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_506  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_507  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_508  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_509  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_510  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_511  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_512  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_513  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_514  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_515  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_516  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_517  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_518  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_519  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_520  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_521  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_522  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_523  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_524  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_525  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_526  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_527  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_528  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_529  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_530  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_531  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_532  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_533  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_534  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_535  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_536  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_537  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_538  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_539  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_541  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_542  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_543  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_544  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_546  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_547  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_548  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_549  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_550  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_551  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_552  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_553  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_554  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_555  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_489 -> m21_556  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_490 -> m21_491  [key=0, style=solid];
m21_490 -> m21_558  [key=2, style=dotted];
m21_490 -> m21_492  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m21_490 -> m21_494  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m21_490 -> m21_495  [key=1, style=dashed, color=darkseagreen4, label=customBinder];
m21_491 -> m21_492  [key=0, style=solid];
m21_492 -> m21_493  [key=0, style=solid];
m21_492 -> m21_24  [key=2, style=dotted];
m21_493 -> m21_494  [key=0, style=solid];
m21_493 -> m21_559  [key=2, style=dotted];
m21_494 -> m21_495  [key=0, style=solid];
m21_495 -> m21_496  [key=0, style=solid];
m21_495 -> m21_24  [key=2, style=dotted];
m21_496 -> m21_497  [key=0, style=solid];
m21_496 -> m21_73  [key=2, style=dotted];
m21_496 -> m21_567  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_497 -> m21_498  [key=0, style=solid];
m21_498 -> m21_499  [key=0, style=solid];
m21_498 -> m21_24  [key=2, style=dotted];
m21_499 -> m21_500  [key=0, style=solid];
m21_500 -> m21_501  [key=0, style=solid];
m21_500 -> m21_24  [key=2, style=dotted];
m21_501 -> m21_502  [key=0, style=solid];
m21_501 -> m21_560  [key=2, style=dotted];
m21_502 -> m21_503  [key=0, style=solid];
m21_502 -> m21_560  [key=2, style=dotted];
m21_502 -> m21_24  [key=2, style=dotted];
m21_504 -> m21_505  [key=0, style=solid];
m21_505 -> m21_506  [key=0, style=solid];
m21_505 -> m21_24  [key=2, style=dotted];
m21_506 -> m21_507  [key=0, style=solid];
m21_506 -> m21_248  [key=2, style=dotted];
m21_506 -> m21_562  [key=2, style=dotted];
m21_507 -> m21_508  [key=0, style=solid];
m21_507 -> m21_24  [key=2, style=dotted];
m21_508 -> m21_509  [key=0, style=solid];
m21_508 -> m21_563  [key=2, style=dotted];
m21_509 -> m21_510  [key=0, style=solid];
m21_509 -> m21_564  [key=2, style=dotted];
m21_509 -> m21_24  [key=2, style=dotted];
m21_510 -> m21_511  [key=0, style=solid];
m21_511 -> m21_512  [key=0, style=solid];
m21_511 -> m21_24  [key=2, style=dotted];
m21_512 -> m21_513  [key=0, style=solid];
m21_513 -> m21_514  [key=0, style=solid];
m21_513 -> m21_24  [key=2, style=dotted];
m21_514 -> m21_515  [key=0, style=solid];
m21_515 -> m21_516  [key=0, style=solid];
m21_515 -> m21_24  [key=2, style=dotted];
m21_516 -> m21_517  [key=0, style=solid];
m21_517 -> m21_518  [key=0, style=solid];
m21_517 -> m21_24  [key=2, style=dotted];
m21_518 -> m21_519  [key=0, style=solid];
m21_519 -> m21_520  [key=0, style=solid];
m21_519 -> m21_24  [key=2, style=dotted];
m21_520 -> m21_521  [key=0, style=solid];
m21_521 -> m21_522  [key=0, style=solid];
m21_521 -> m21_24  [key=2, style=dotted];
m21_522 -> m21_523  [key=0, style=solid];
m21_523 -> m21_524  [key=0, style=solid];
m21_523 -> m21_24  [key=2, style=dotted];
m21_524 -> m21_525  [key=0, style=solid];
m21_525 -> m21_526  [key=0, style=solid];
m21_525 -> m21_24  [key=2, style=dotted];
m21_526 -> m21_527  [key=0, style=solid];
m21_527 -> m21_528  [key=0, style=solid];
m21_527 -> m21_24  [key=2, style=dotted];
m21_528 -> m21_529  [key=0, style=solid];
m21_529 -> m21_530  [key=0, style=solid];
m21_529 -> m21_24  [key=2, style=dotted];
m21_530 -> m21_531  [key=0, style=solid];
m21_531 -> m21_532  [key=0, style=solid];
m21_531 -> m21_24  [key=2, style=dotted];
m21_532 -> m21_533  [key=0, style=solid];
m21_533 -> m21_534  [key=0, style=solid];
m21_533 -> m21_24  [key=2, style=dotted];
m21_534 -> m21_535  [key=0, style=solid];
m21_535 -> m21_536  [key=0, style=solid];
m21_535 -> m21_24  [key=2, style=dotted];
m21_536 -> m21_537  [key=0, style=solid];
m21_537 -> m21_538  [key=0, style=solid];
m21_537 -> m21_24  [key=2, style=dotted];
m21_538 -> m21_539  [key=0, style=solid];
m21_539 -> m21_540  [key=0, style=solid];
m21_539 -> m21_24  [key=2, style=dotted];
m21_541 -> m21_542  [key=0, style=solid];
m21_542 -> m21_543  [key=0, style=solid];
m21_542 -> m21_24  [key=2, style=dotted];
m21_543 -> m21_544  [key=0, style=solid];
m21_544 -> m21_545  [key=0, style=solid];
m21_544 -> m21_24  [key=2, style=dotted];
m21_546 -> m21_547  [key=0, style=solid];
m21_547 -> m21_548  [key=0, style=solid];
m21_547 -> m21_24  [key=2, style=dotted];
m21_548 -> m21_549  [key=0, style=solid];
m21_549 -> m21_550  [key=0, style=solid];
m21_549 -> m21_24  [key=2, style=dotted];
m21_550 -> m21_551  [key=0, style=solid];
m21_550 -> m21_24  [key=2, style=dotted];
m21_551 -> m21_552  [key=0, style=solid];
m21_552 -> m21_553  [key=0, style=solid];
m21_552 -> m21_24  [key=2, style=dotted];
m21_553 -> m21_554  [key=0, style=solid];
m21_554 -> m21_555  [key=0, style=solid];
m21_554 -> m21_24  [key=2, style=dotted];
m21_555 -> m21_556  [key=0, style=solid];
m21_556 -> m21_557  [key=0, style=solid];
m21_556 -> m21_24  [key=2, style=dotted];
m21_503 -> m21_504  [key=0, style=solid];
m21_503 -> m21_561  [key=2, style=dotted];
m21_503 -> m21_505  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m21_540 -> m21_541  [key=0, style=solid];
m21_540 -> m21_565  [key=2, style=dotted];
m21_540 -> m21_542  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m21_545 -> m21_546  [key=0, style=solid];
m21_545 -> m21_566  [key=2, style=dotted];
m21_545 -> m21_547  [key=1, style=dashed, color=darkseagreen4, label=traceWriter];
m21_557 -> m21_488  [key=0, style=bold, color=blue];
m21_2741 -> m21_2742  [key=0, style=solid];
m21_2742 -> m21_2743  [key=0, style=solid];
m21_2742 -> m21_2748  [key=2, style=dotted];
m21_2742 -> m21_2749  [key=2, style=dotted];
m21_2742 -> m21_1759  [key=2, style=dotted];
m21_2742 -> m21_2746  [key=1, style=dashed, color=darkseagreen4, label=response];
m21_2743 -> m21_2744  [key=0, style=solid];
m21_2743 -> m21_41  [key=2, style=dotted];
m21_2746 -> m21_2747  [key=0, style=solid];
m21_2746 -> m21_2750  [key=2, style=dotted];
m21_2746 -> m21_22  [key=2, style=dotted];
m21_2744 -> m21_2745  [key=0, style=solid];
m21_2744 -> m21_51  [key=2, style=dotted];
m21_2744 -> m21_2746  [key=1, style=dashed, color=darkseagreen4, label=deserializedResponse];
m21_2745 -> m21_2746  [key=0, style=solid];
m21_2745 -> m21_24  [key=2, style=dotted];
m21_2747 -> m21_2741  [key=0, style=bold, color=blue];
m21_2714 -> m21_2715  [key=0, style=solid];
m21_2715 -> m21_2716  [key=0, style=solid];
m21_2715 -> m21_762  [key=2, style=dotted];
m21_2715 -> m21_4463  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m21_2716 -> m21_2714  [key=0, style=bold, color=blue];
m21_1986 -> m21_1987  [key=0, style=solid];
m21_1987 -> m21_1988  [key=0, style=solid];
m21_1987 -> m21_1984  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1988 -> m21_1989  [key=0, style=solid];
m21_1988 -> m21_51  [key=2, style=dotted];
m21_1989 -> m21_1990  [key=0, style=solid];
m21_1989 -> m21_1992  [key=0, style=solid];
m21_1989 -> m21_21  [key=2, style=dotted];
m21_1990 -> m21_1991  [key=0, style=solid];
m21_1991 -> m21_1992  [key=0, style=solid];
m21_1991 -> m21_1502  [key=2, style=dotted];
m21_1991 -> m21_22  [key=2, style=dotted];
m21_1992 -> m21_1986  [key=0, style=bold, color=blue];
m21_3784 -> m21_3785  [key=0, style=solid];
m21_3785 -> m21_3786  [key=0, style=solid];
m21_3785 -> m21_147  [key=2, style=dotted];
m21_3785 -> m21_1147  [key=2, style=dotted];
m21_3785 -> m21_389  [key=2, style=dotted];
m21_3785 -> m21_1155  [key=2, style=dotted];
m21_3786 -> m21_3787  [key=0, style=solid];
m21_3786 -> m21_188  [key=2, style=dotted];
m21_3786 -> m21_211  [key=2, style=dotted];
m21_3787 -> m21_3788  [key=0, style=solid];
m21_3787 -> m21_42  [key=2, style=dotted];
m21_3788 -> m21_3784  [key=0, style=bold, color=blue];
m21_2762 -> m21_2763  [key=0, style=solid];
m21_2763 -> m21_2764  [key=0, style=solid];
m21_2763 -> m21_51  [key=2, style=dotted];
m21_2763 -> m21_2765  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_2764 -> m21_2765  [key=0, style=solid];
m21_2764 -> m21_24  [key=2, style=dotted];
m21_2765 -> m21_2766  [key=0, style=solid];
m21_2765 -> m21_24  [key=2, style=dotted];
m21_2766 -> m21_2762  [key=0, style=bold, color=blue];
m21_4092 -> m21_4093  [key=0, style=solid];
m21_4093 -> m21_4094  [key=0, style=solid];
m21_4093 -> m21_4079  [key=2, style=dotted];
m21_4094 -> m21_4092  [key=0, style=bold, color=blue];
m21_4281 -> m21_4282  [key=0, style=solid];
m21_4282 -> m21_4283  [key=0, style=solid];
m21_4282 -> m21_73  [key=2, style=dotted];
m21_4282 -> m21_4284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_4283 -> m21_4281  [key=0, style=bold, color=blue];
m21_1112 -> m21_1113  [key=0, style=solid];
m21_1113 -> m21_1114  [key=0, style=solid];
m21_1113 -> m21_1115  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1113 -> m21_1116  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1113 -> m21_1113  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1114 -> m21_1115  [key=0, style=solid];
m21_1114 -> m21_960  [key=2, style=dotted];
m21_1115 -> m21_1116  [key=0, style=solid];
m21_1115 -> m21_1120  [key=2, style=dotted];
m21_1115 -> m21_1121  [key=2, style=dotted];
m21_1115 -> m21_1122  [key=2, style=dotted];
m21_1115 -> m21_1118  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m21_1116 -> m21_1117  [key=0, style=solid];
m21_1116 -> m21_51  [key=2, style=dotted];
m21_1116 -> m21_1118  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m21_1118 -> m21_1119  [key=0, style=solid];
m21_1118 -> m21_24  [key=2, style=dotted];
m21_1117 -> m21_1118  [key=0, style=solid];
m21_1117 -> m21_24  [key=2, style=dotted];
m21_1119 -> m21_1112  [key=0, style=bold, color=blue];
m21_4065 -> m21_4066  [key=0, style=solid];
m21_4065 -> m21_36  [key=3, color=darkorchid, style=bold, label="method methodReturn System.TypeCode System.IConvertible.GetTypeCode"];
m21_4066 -> m21_4067  [key=0, style=solid];
m21_4067 -> m21_4065  [key=0, style=bold, color=blue];
m21_2865 -> m21_2866  [key=0, style=solid];
m21_2866 -> m21_2867  [key=0, style=solid];
m21_2866 -> m21_2870  [key=2, style=dotted];
m21_2866 -> m21_1147  [key=2, style=dotted];
m21_2867 -> m21_2868  [key=0, style=solid];
m21_2867 -> m21_41  [key=2, style=dotted];
m21_2868 -> m21_2869  [key=0, style=solid];
m21_2868 -> m21_42  [key=2, style=dotted];
m21_2869 -> m21_2865  [key=0, style=bold, color=blue];
m21_3680 -> m21_3681  [key=0, style=solid];
m21_3681 -> m21_3682  [key=0, style=solid];
m21_3681 -> m21_3683  [key=2, style=dotted];
m21_3682 -> m21_3680  [key=0, style=bold, color=blue];
m21_3060 -> m21_3061  [key=0, style=solid];
m21_3061 -> m21_3062  [key=0, style=solid];
m21_3061 -> m21_1909  [key=2, style=dotted];
m21_3061 -> m21_3065  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m21_3061 -> m21_3067  [key=1, style=dashed, color=darkseagreen4, label=contractResolver];
m21_3062 -> m21_3063  [key=0, style=solid];
m21_3062 -> m21_3072  [key=2, style=dotted];
m21_3062 -> m21_3065  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_3065 -> m21_3066  [key=0, style=solid];
m21_3065 -> m21_188  [key=2, style=dotted];
m21_3065 -> m21_211  [key=2, style=dotted];
m21_3067 -> m21_3068  [key=0, style=solid];
m21_3067 -> m21_188  [key=2, style=dotted];
m21_3067 -> m21_309  [key=2, style=dotted];
m21_3063 -> m21_3064  [key=0, style=solid];
m21_3064 -> m21_3065  [key=0, style=solid];
m21_3066 -> m21_3067  [key=0, style=solid];
m21_3066 -> m21_42  [key=2, style=dotted];
m21_3068 -> m21_3069  [key=0, style=solid];
m21_3068 -> m21_24  [key=2, style=dotted];
m21_3069 -> m21_3070  [key=0, style=solid];
m21_3069 -> m21_24  [key=2, style=dotted];
m21_3070 -> m21_3071  [key=0, style=solid];
m21_3070 -> m21_24  [key=2, style=dotted];
m21_3071 -> m21_3060  [key=0, style=bold, color=blue];
m21_3964 -> m21_3965  [key=0, style=solid];
m21_3965 -> m21_3966  [key=0, style=solid];
m21_3965 -> m21_3967  [key=2, style=dotted];
m21_3966 -> m21_3964  [key=0, style=bold, color=blue];
m21_141 -> m21_143  [key=0, style=solid];
m21_141 -> m21_144  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m21_141 -> m21_145  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m21_143 -> m21_144  [key=0, style=solid];
m21_143 -> m21_147  [key=2, style=dotted];
m21_144 -> m21_145  [key=0, style=solid];
m21_144 -> m21_146  [key=0, style=solid];
m21_145 -> m21_146  [key=0, style=solid];
m21_145 -> m21_148  [key=2, style=dotted];
m21_146 -> m21_141  [key=0, style=bold, color=blue];
m21_900 -> m21_901  [key=0, style=solid];
m21_901 -> m21_902  [key=0, style=solid];
m21_901 -> m21_905  [key=2, style=dotted];
m21_902 -> m21_903  [key=0, style=solid];
m21_902 -> m21_142  [key=2, style=dotted];
m21_903 -> m21_904  [key=0, style=solid];
m21_903 -> m21_24  [key=2, style=dotted];
m21_904 -> m21_900  [key=0, style=bold, color=blue];
m21_1009 -> m21_1010  [key=0, style=solid];
m21_1010 -> m21_1011  [key=0, style=solid];
m21_1010 -> m21_1000  [key=2, style=dotted];
m21_1010 -> m21_1012  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m21_1010 -> m21_1021  [key=1, style=dashed, color=darkseagreen4, label=dateValue];
m21_1011 -> m21_1012  [key=0, style=solid];
m21_1011 -> m21_209  [key=2, style=dotted];
m21_1011 -> m21_1013  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m21_1011 -> m21_1016  [key=1, style=dashed, color=darkseagreen4, label=testDictionary];
m21_1012 -> m21_1013  [key=0, style=solid];
m21_1021 -> m21_1022  [key=0, style=solid];
m21_1021 -> m21_24  [key=2, style=dotted];
m21_1013 -> m21_1014  [key=0, style=solid];
m21_1013 -> m21_142  [key=2, style=dotted];
m21_1013 -> m21_1019  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m21_1016 -> m21_1017  [key=0, style=solid];
m21_1016 -> m21_961  [key=2, style=dotted];
m21_1014 -> m21_1015  [key=0, style=solid];
m21_1014 -> m21_880  [key=2, style=dotted];
m21_1014 -> m21_1016  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_1014 -> m21_1017  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_1019 -> m21_1020  [key=0, style=solid];
m21_1019 -> m21_982  [key=2, style=dotted];
m21_1015 -> m21_1016  [key=0, style=solid];
m21_1015 -> m21_960  [key=2, style=dotted];
m21_1017 -> m21_1018  [key=0, style=solid];
m21_1017 -> m21_962  [key=2, style=dotted];
m21_1018 -> m21_1019  [key=0, style=solid];
m21_1018 -> m21_963  [key=2, style=dotted];
m21_1020 -> m21_1021  [key=0, style=solid];
m21_1022 -> m21_1009  [key=0, style=bold, color=blue];
m21_2913 -> m21_2914  [key=0, style=solid];
m21_2914 -> m21_2915  [key=0, style=solid];
m21_2914 -> m21_2439  [key=2, style=dotted];
m21_2915 -> m21_2913  [key=0, style=bold, color=blue];
m21_2185 -> m21_2186  [key=0, style=solid];
m21_2186 -> m21_2187  [key=0, style=solid];
m21_2186 -> m21_2188  [key=2, style=dotted];
m21_2187 -> m21_2185  [key=0, style=bold, color=blue];
m21_1711 -> m21_1712  [key=0, style=solid];
m21_1712 -> m21_1713  [key=0, style=solid];
m21_1712 -> m21_1712  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1713 -> m21_1714  [key=0, style=solid];
m21_1713 -> m21_188  [key=2, style=dotted];
m21_1713 -> m21_309  [key=2, style=dotted];
m21_1713 -> m21_1715  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1713 -> m21_1716  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1713 -> m21_1717  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1713 -> m21_1718  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1713 -> m21_1719  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1713 -> m21_1720  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1713 -> m21_1721  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1713 -> m21_1722  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1713 -> m21_1723  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1714 -> m21_1715  [key=0, style=solid];
m21_1714 -> m21_24  [key=2, style=dotted];
m21_1715 -> m21_1716  [key=0, style=solid];
m21_1715 -> m21_24  [key=2, style=dotted];
m21_1716 -> m21_1717  [key=0, style=solid];
m21_1716 -> m21_24  [key=2, style=dotted];
m21_1717 -> m21_1718  [key=0, style=solid];
m21_1717 -> m21_24  [key=2, style=dotted];
m21_1718 -> m21_1719  [key=0, style=solid];
m21_1718 -> m21_24  [key=2, style=dotted];
m21_1719 -> m21_1720  [key=0, style=solid];
m21_1719 -> m21_1725  [key=2, style=dotted];
m21_1719 -> m21_24  [key=2, style=dotted];
m21_1720 -> m21_1721  [key=0, style=solid];
m21_1720 -> m21_1725  [key=2, style=dotted];
m21_1720 -> m21_24  [key=2, style=dotted];
m21_1721 -> m21_1722  [key=0, style=solid];
m21_1721 -> m21_24  [key=2, style=dotted];
m21_1722 -> m21_1723  [key=0, style=solid];
m21_1722 -> m21_24  [key=2, style=dotted];
m21_1723 -> m21_1724  [key=0, style=solid];
m21_1723 -> m21_843  [key=2, style=dotted];
m21_1724 -> m21_1711  [key=0, style=bold, color=blue];
m21_4249 -> m21_4250  [key=0, style=solid];
m21_4250 -> m21_4251  [key=0, style=solid];
m21_4250 -> m21_4257  [key=2, style=dotted];
m21_4250 -> m21_4252  [key=1, style=dashed, color=darkseagreen4, label=original];
m21_4251 -> m21_4252  [key=0, style=solid];
m21_4251 -> m21_188  [key=2, style=dotted];
m21_4251 -> m21_4253  [key=1, style=dashed, color=darkseagreen4, label=serializerSettings];
m21_4252 -> m21_4253  [key=0, style=solid];
m21_4252 -> m21_189  [key=2, style=dotted];
m21_4253 -> m21_4254  [key=0, style=solid];
m21_4253 -> m21_309  [key=2, style=dotted];
m21_4253 -> m21_4255  [key=1, style=dashed, color=darkseagreen4, label=clonedObject];
m21_4254 -> m21_4255  [key=0, style=solid];
m21_4254 -> m21_24  [key=2, style=dotted];
m21_4255 -> m21_4256  [key=0, style=solid];
m21_4255 -> m21_24  [key=2, style=dotted];
m21_4256 -> m21_4249  [key=0, style=bold, color=blue];
m21_1429 -> m21_1430  [key=0, style=solid];
m21_1430 -> m21_1431  [key=0, style=solid];
m21_1430 -> m21_1435  [key=2, style=dotted];
m21_1430 -> m21_1436  [key=2, style=dotted];
m21_1430 -> m21_1432  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m21_1431 -> m21_1432  [key=0, style=solid];
m21_1432 -> m21_1433  [key=0, style=solid];
m21_1432 -> m21_142  [key=2, style=dotted];
m21_1433 -> m21_1434  [key=0, style=solid];
m21_1433 -> m21_24  [key=2, style=dotted];
m21_1434 -> m21_1429  [key=0, style=bold, color=blue];
m21_3707 -> m21_3708  [key=0, style=solid];
m21_3708 -> m21_3709  [key=0, style=solid];
m21_3709 -> m21_3707  [key=0, style=bold, color=blue];
m21_937 -> m21_938  [key=0, style=solid];
m21_938 -> m21_939  [key=0, style=solid];
m21_938 -> m21_946  [key=2, style=dotted];
m21_938 -> m21_940  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_938 -> m21_941  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_938 -> m21_942  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_938 -> m21_943  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_939 -> m21_940  [key=0, style=solid];
m21_940 -> m21_941  [key=0, style=solid];
m21_941 -> m21_942  [key=0, style=solid];
m21_942 -> m21_943  [key=0, style=solid];
m21_943 -> m21_944  [key=0, style=solid];
m21_943 -> m21_916  [key=2, style=dotted];
m21_944 -> m21_945  [key=0, style=solid];
m21_944 -> m21_42  [key=2, style=dotted];
m21_945 -> m21_937  [key=0, style=bold, color=blue];
m21_2443 -> m21_2444  [key=0, style=solid];
m21_2443 -> m21_2446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m21_2443 -> m21_2447  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m21_2444 -> m21_2445  [key=0, style=solid];
m21_2444 -> m21_2446  [key=1, style=dashed, color=darkseagreen4, label=p];
m21_2446 -> m21_2448  [key=0, style=solid];
m21_2446 -> m21_2449  [key=2, style=dotted];
m21_2446 -> m21_2434  [key=2, style=dotted];
m21_2447 -> m21_2448  [key=0, style=solid];
m21_2447 -> m21_2435  [key=2, style=dotted];
m21_2445 -> m21_2446  [key=0, style=solid];
m21_2445 -> m21_2447  [key=0, style=solid];
m21_2448 -> m21_2443  [key=0, style=bold, color=blue];
m21_2159 -> m21_2160  [key=0, style=solid];
m21_2160 -> m21_2161  [key=0, style=solid];
m21_2160 -> m21_2162  [key=2, style=dotted];
m21_2161 -> m21_2159  [key=0, style=bold, color=blue];
m21_4263 -> m21_4264  [key=0, style=solid];
m21_4264 -> m21_4263  [key=0, style=bold, color=blue];
m21_3572 -> m21_3573  [key=0, style=solid];
m21_3573 -> m21_3574  [key=0, style=solid];
m21_3573 -> m21_3580  [key=2, style=dotted];
m21_3574 -> m21_3575  [key=0, style=solid];
m21_3574 -> m21_41  [key=2, style=dotted];
m21_3575 -> m21_3576  [key=0, style=solid];
m21_3575 -> m21_42  [key=2, style=dotted];
m21_3576 -> m21_3577  [key=0, style=solid];
m21_3576 -> m21_3581  [key=2, style=dotted];
m21_3577 -> m21_3578  [key=0, style=solid];
m21_3577 -> m21_41  [key=2, style=dotted];
m21_3578 -> m21_3579  [key=0, style=solid];
m21_3578 -> m21_42  [key=2, style=dotted];
m21_3579 -> m21_3572  [key=0, style=bold, color=blue];
m21_4349 -> m21_4350  [key=0, style=solid];
m21_4349 -> m21_3308  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m21_4350 -> m21_4351  [key=0, style=solid];
m21_4350 -> m21_20  [key=2, style=dotted];
m21_4350 -> m21_4353  [key=1, style=dashed, color=darkseagreen4, label=encodingName];
m21_4351 -> m21_4352  [key=0, style=solid];
m21_4351 -> m21_4353  [key=0, style=solid];
m21_4353 -> m21_4354  [key=0, style=solid];
m21_4353 -> m21_4355  [key=2, style=dotted];
m21_4352 -> m21_4354  [key=0, style=solid];
m21_4354 -> m21_4349  [key=0, style=bold, color=blue];
m21_927 -> m21_928  [key=0, style=solid];
m21_928 -> m21_929  [key=0, style=solid];
m21_928 -> m21_936  [key=2, style=dotted];
m21_928 -> m21_930  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_928 -> m21_931  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_928 -> m21_932  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_928 -> m21_933  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_929 -> m21_930  [key=0, style=solid];
m21_930 -> m21_931  [key=0, style=solid];
m21_931 -> m21_932  [key=0, style=solid];
m21_932 -> m21_933  [key=0, style=solid];
m21_933 -> m21_934  [key=0, style=solid];
m21_933 -> m21_916  [key=2, style=dotted];
m21_934 -> m21_935  [key=0, style=solid];
m21_934 -> m21_42  [key=2, style=dotted];
m21_935 -> m21_927  [key=0, style=bold, color=blue];
m21_2517 -> m21_2518  [key=0, style=solid];
m21_2518 -> m21_2519  [key=0, style=solid];
m21_2519 -> m21_2517  [key=0, style=bold, color=blue];
m21_2606 -> m21_2607  [key=0, style=solid];
m21_2607 -> m21_2608  [key=0, style=solid];
m21_2607 -> m21_51  [key=2, style=dotted];
m21_2608 -> m21_2609  [key=0, style=solid];
m21_2608 -> m21_2605  [key=2, style=dotted];
m21_2608 -> m21_1000  [key=2, style=dotted];
m21_2608 -> m21_1155  [key=2, style=dotted];
m21_2608 -> m21_24  [key=2, style=dotted];
m21_2609 -> m21_2606  [key=0, style=bold, color=blue];
m21_2812 -> m21_2813  [key=0, style=solid];
m21_2813 -> m21_2814  [key=0, style=solid];
m21_2813 -> m21_2813  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2814 -> m21_2815  [key=0, style=solid];
m21_2814 -> m21_51  [key=2, style=dotted];
m21_2814 -> m21_2816  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m21_2814 -> m21_2817  [key=1, style=dashed, color=darkseagreen4, label=commentTestClass];
m21_2815 -> m21_2816  [key=0, style=solid];
m21_2815 -> m21_24  [key=2, style=dotted];
m21_2816 -> m21_2817  [key=0, style=solid];
m21_2816 -> m21_24  [key=2, style=dotted];
m21_2817 -> m21_2818  [key=0, style=solid];
m21_2817 -> m21_24  [key=2, style=dotted];
m21_2818 -> m21_2812  [key=0, style=bold, color=blue];
m21_2364 -> m21_2365  [key=0, style=solid];
m21_2365 -> m21_2364  [key=0, style=bold, color=blue];
m21_1788 -> m21_1789  [key=0, style=solid];
m21_1789 -> m21_1790  [key=0, style=solid];
m21_1789 -> m21_1789  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1790 -> m21_1791  [key=0, style=solid];
m21_1790 -> m21_51  [key=2, style=dotted];
m21_1791 -> m21_1792  [key=0, style=solid];
m21_1791 -> m21_24  [key=2, style=dotted];
m21_1792 -> m21_1788  [key=0, style=bold, color=blue];
m21_3822 -> m21_3823  [key=0, style=solid];
m21_3823 -> m21_3822  [key=0, style=bold, color=blue];
m21_1149 -> m21_1150  [key=0, style=solid];
m21_1150 -> m21_1151  [key=0, style=solid];
m21_1150 -> m21_147  [key=2, style=dotted];
m21_1150 -> m21_1154  [key=2, style=dotted];
m21_1150 -> m21_1147  [key=2, style=dotted];
m21_1150 -> m21_389  [key=2, style=dotted];
m21_1150 -> m21_1155  [key=2, style=dotted];
m21_1151 -> m21_1152  [key=0, style=solid];
m21_1151 -> m21_142  [key=2, style=dotted];
m21_1152 -> m21_1153  [key=0, style=solid];
m21_1152 -> m21_24  [key=2, style=dotted];
m21_1153 -> m21_1149  [key=0, style=bold, color=blue];
m21_2767 -> m21_2768  [key=0, style=solid];
m21_2768 -> m21_2769  [key=0, style=solid];
m21_2768 -> m21_51  [key=2, style=dotted];
m21_2768 -> m21_2770  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_2768 -> m21_2771  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_2769 -> m21_2770  [key=0, style=solid];
m21_2769 -> m21_24  [key=2, style=dotted];
m21_2770 -> m21_2771  [key=0, style=solid];
m21_2770 -> m21_24  [key=2, style=dotted];
m21_2771 -> m21_2772  [key=0, style=solid];
m21_2771 -> m21_24  [key=2, style=dotted];
m21_2772 -> m21_2767  [key=0, style=bold, color=blue];
m21_3291 -> m21_3292  [key=0, style=solid];
m21_3292 -> m21_3293  [key=0, style=solid];
m21_3292 -> m21_73  [key=2, style=dotted];
m21_3292 -> m21_3294  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3293 -> m21_3291  [key=0, style=bold, color=blue];
m21_3548 -> m21_3555  [key=0, style=solid];
m21_3548 -> m21_3544  [key=3, color=darkorchid, style=bold, label="Parameter variable string json"];
m21_3555 -> m21_3556  [key=0, style=solid];
m21_3555 -> m21_16  [key=2, style=dotted];
m21_3555 -> m21_386  [key=2, style=dotted];
m21_3555 -> m21_3558  [key=1, style=dashed, color=darkseagreen4, label=jsonReader];
m21_3556 -> m21_3557  [key=0, style=solid];
m21_3556 -> m21_19  [key=2, style=dotted];
m21_3556 -> m21_3558  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3558 -> m21_3559  [key=0, style=solid];
m21_3558 -> m21_2568  [key=2, style=dotted];
m21_3557 -> m21_3558  [key=0, style=solid];
m21_3557 -> m21_1909  [key=2, style=dotted];
m21_3559 -> m21_3548  [key=0, style=bold, color=blue];
m21_3243 -> m21_3244  [key=0, style=solid];
m21_3244 -> m21_3245  [key=0, style=solid];
m21_3244 -> m21_3253  [key=2, style=dotted];
m21_3244 -> m21_142  [key=2, style=dotted];
m21_3244 -> m21_3246  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3245 -> m21_3246  [key=0, style=solid];
m21_3245 -> m21_24  [key=2, style=dotted];
m21_3246 -> m21_3247  [key=0, style=solid];
m21_3246 -> m21_51  [key=2, style=dotted];
m21_3247 -> m21_3248  [key=0, style=solid];
m21_3247 -> m21_24  [key=2, style=dotted];
m21_3248 -> m21_3249  [key=0, style=solid];
m21_3248 -> m21_3253  [key=2, style=dotted];
m21_3248 -> m21_142  [key=2, style=dotted];
m21_3248 -> m21_3250  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3249 -> m21_3250  [key=0, style=solid];
m21_3249 -> m21_24  [key=2, style=dotted];
m21_3250 -> m21_3251  [key=0, style=solid];
m21_3250 -> m21_51  [key=2, style=dotted];
m21_3251 -> m21_3252  [key=0, style=solid];
m21_3251 -> m21_24  [key=2, style=dotted];
m21_3252 -> m21_3243  [key=0, style=bold, color=blue];
m21_3056 -> m21_3057  [key=0, style=solid];
m21_3057 -> m21_3058  [key=0, style=solid];
m21_3057 -> m21_3059  [key=2, style=dotted];
m21_3058 -> m21_3056  [key=0, style=bold, color=blue];
m21_1156 -> m21_1157  [key=0, style=solid];
m21_1157 -> m21_1158  [key=0, style=solid];
m21_1157 -> m21_147  [key=2, style=dotted];
m21_1157 -> m21_1154  [key=2, style=dotted];
m21_1157 -> m21_1147  [key=2, style=dotted];
m21_1157 -> m21_389  [key=2, style=dotted];
m21_1157 -> m21_1155  [key=2, style=dotted];
m21_1158 -> m21_1159  [key=0, style=solid];
m21_1158 -> m21_188  [key=2, style=dotted];
m21_1158 -> m21_189  [key=2, style=dotted];
m21_1159 -> m21_1160  [key=0, style=solid];
m21_1159 -> m21_24  [key=2, style=dotted];
m21_1160 -> m21_1156  [key=0, style=bold, color=blue];
m21_4057 -> m21_4058  [key=0, style=solid];
m21_4058 -> m21_4059  [key=0, style=solid];
m21_4058 -> m21_4064  [key=2, style=dotted];
m21_4058 -> m21_4060  [key=1, style=dashed, color=darkseagreen4, label=product];
m21_4059 -> m21_4060  [key=0, style=solid];
m21_4059 -> m21_209  [key=2, style=dotted];
m21_4060 -> m21_4061  [key=0, style=solid];
m21_4060 -> m21_142  [key=2, style=dotted];
m21_4060 -> m21_4062  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4061 -> m21_4062  [key=0, style=solid];
m21_4061 -> m21_24  [key=2, style=dotted];
m21_4062 -> m21_4063  [key=0, style=solid];
m21_4062 -> m21_51  [key=2, style=dotted];
m21_4063 -> m21_4057  [key=0, style=bold, color=blue];
m21_1271 -> m21_1272  [key=0, style=solid];
m21_1272 -> m21_1273  [key=0, style=solid];
m21_1272 -> m21_1274  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_1272 -> m21_1275  [key=1, style=dashed, color=darkseagreen4, label=obj];
m21_1273 -> m21_1274  [key=0, style=solid];
m21_1273 -> m21_188  [key=2, style=dotted];
m21_1273 -> m21_1275  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_1274 -> m21_1275  [key=0, style=solid];
m21_1274 -> m21_189  [key=2, style=dotted];
m21_1274 -> m21_1276  [key=1, style=dashed, color=darkseagreen4, label=indented];
m21_1275 -> m21_1276  [key=0, style=solid];
m21_1275 -> m21_211  [key=2, style=dotted];
m21_1276 -> m21_1277  [key=0, style=solid];
m21_1276 -> m21_1278  [key=2, style=dotted];
m21_1277 -> m21_1271  [key=0, style=bold, color=blue];
m21_3902 -> m21_3903  [key=0, style=solid];
m21_3903 -> m21_3904  [key=0, style=solid];
m21_3903 -> m21_3906  [key=2, style=dotted];
m21_3903 -> m21_188  [key=2, style=dotted];
m21_3903 -> m21_1909  [key=2, style=dotted];
m21_3903 -> m21_211  [key=2, style=dotted];
m21_3904 -> m21_3905  [key=0, style=solid];
m21_3904 -> m21_42  [key=2, style=dotted];
m21_3905 -> m21_3902  [key=0, style=bold, color=blue];
m21_3190 -> m21_3191  [key=0, style=solid];
m21_3191 -> m21_3192  [key=0, style=solid];
m21_3191 -> m21_73  [key=2, style=dotted];
m21_3191 -> m21_3193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3191 -> m21_3191  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3192 -> m21_3190  [key=0, style=bold, color=blue];
m21_2796 -> m21_2797  [key=0, style=solid];
m21_2797 -> m21_2798  [key=0, style=solid];
m21_2797 -> m21_73  [key=2, style=dotted];
m21_2797 -> m21_2799  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_2798 -> m21_2796  [key=0, style=bold, color=blue];
m21_2189 -> m21_2190  [key=0, style=solid];
m21_2190 -> m21_2191  [key=0, style=solid];
m21_2190 -> m21_2131  [key=2, style=dotted];
m21_2190 -> m21_2192  [key=1, style=dashed, color=darkseagreen4, label=modelStateDictionary];
m21_2191 -> m21_2192  [key=0, style=solid];
m21_2191 -> m21_2144  [key=2, style=dotted];
m21_2192 -> m21_2193  [key=0, style=solid];
m21_2192 -> m21_142  [key=2, style=dotted];
m21_2192 -> m21_2194  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2193 -> m21_2194  [key=0, style=solid];
m21_2193 -> m21_24  [key=2, style=dotted];
m21_2194 -> m21_2195  [key=0, style=solid];
m21_2194 -> m21_51  [key=2, style=dotted];
m21_2194 -> m21_2196  [key=1, style=dashed, color=darkseagreen4, label=newModelStateDictionary];
m21_2195 -> m21_2196  [key=0, style=solid];
m21_2195 -> m21_24  [key=2, style=dotted];
m21_2196 -> m21_2197  [key=0, style=solid];
m21_2196 -> m21_24  [key=2, style=dotted];
m21_2197 -> m21_2189  [key=0, style=bold, color=blue];
m21_43 -> m21_44  [key=0, style=solid];
m21_44 -> m21_45  [key=0, style=solid];
m21_44 -> m21_44  [key=3, color=darkorchid, style=bold, label="Local variable string deserialized"];
m21_45 -> m21_46  [key=0, style=solid];
m21_45 -> m21_51  [key=2, style=dotted];
m21_46 -> m21_47  [key=0, style=solid];
m21_46 -> m21_52  [key=2, style=dotted];
m21_46 -> m21_48  [key=1, style=dashed, color=darkseagreen4, label=enumerableObject];
m21_46 -> m21_49  [key=1, style=dashed, color=darkseagreen4, label=enumerableObject];
m21_47 -> m21_48  [key=0, style=solid];
m21_47 -> m21_24  [key=2, style=dotted];
m21_48 -> m21_49  [key=0, style=solid];
m21_48 -> m21_24  [key=2, style=dotted];
m21_49 -> m21_50  [key=0, style=solid];
m21_49 -> m21_24  [key=2, style=dotted];
m21_50 -> m21_43  [key=0, style=bold, color=blue];
m21_4257 -> m21_4258  [key=0, style=solid];
m21_4258 -> m21_4259  [key=0, style=solid];
m21_4259 -> m21_4257  [key=0, style=bold, color=blue];
m21_3684 -> m21_3685  [key=0, style=solid];
m21_3684 -> m21_3681  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m21_3685 -> m21_3686  [key=0, style=solid];
m21_3686 -> m21_3684  [key=0, style=bold, color=blue];
m21_2843 -> m21_2844  [key=0, style=solid];
m21_2844 -> m21_2845  [key=0, style=solid];
m21_2844 -> m21_2842  [key=2, style=dotted];
m21_2844 -> m21_2847  [key=1, style=dashed, color=darkseagreen4, label=cc];
m21_2845 -> m21_2846  [key=0, style=solid];
m21_2845 -> m21_2851  [key=2, style=dotted];
m21_2845 -> m21_2847  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_2847 -> m21_2848  [key=0, style=solid];
m21_2847 -> m21_961  [key=2, style=dotted];
m21_2846 -> m21_2847  [key=0, style=solid];
m21_2846 -> m21_880  [key=2, style=dotted];
m21_2846 -> m21_2848  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_2848 -> m21_2849  [key=0, style=solid];
m21_2848 -> m21_962  [key=2, style=dotted];
m21_2848 -> m21_2852  [key=2, style=dotted];
m21_2848 -> m21_963  [key=2, style=dotted];
m21_2849 -> m21_2850  [key=0, style=solid];
m21_2849 -> m21_24  [key=2, style=dotted];
m21_2850 -> m21_2843  [key=0, style=bold, color=blue];
m21_2853 -> m21_2854  [key=0, style=solid];
m21_2854 -> m21_2855  [key=0, style=solid];
m21_2854 -> m21_2858  [key=2, style=dotted];
m21_2855 -> m21_2856  [key=0, style=solid];
m21_2855 -> m21_142  [key=2, style=dotted];
m21_2856 -> m21_2857  [key=0, style=solid];
m21_2856 -> m21_24  [key=2, style=dotted];
m21_2857 -> m21_2853  [key=0, style=bold, color=blue];
m21_4164 -> m21_4165  [key=0, style=solid];
m21_4165 -> m21_4166  [key=0, style=solid];
m21_4165 -> m21_563  [key=2, style=dotted];
m21_4165 -> m21_4168  [key=1, style=dashed, color=darkseagreen4, label=culture];
m21_4165 -> m21_4173  [key=1, style=dashed, color=darkseagreen4, label=culture];
m21_4165 -> m21_4178  [key=1, style=dashed, color=darkseagreen4, label=culture];
m21_4166 -> m21_4167  [key=0, style=solid];
m21_4166 -> m21_1000  [key=2, style=dotted];
m21_4166 -> m21_4169  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4166 -> m21_4172  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4166 -> m21_4177  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4168 -> m21_4169  [key=0, style=solid];
m21_4168 -> m21_188  [key=2, style=dotted];
m21_4168 -> m21_4171  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_4173 -> m21_4174  [key=0, style=solid];
m21_4173 -> m21_16  [key=2, style=dotted];
m21_4173 -> m21_386  [key=2, style=dotted];
m21_4178 -> m21_4179  [key=0, style=solid];
m21_4178 -> m21_16  [key=2, style=dotted];
m21_4178 -> m21_386  [key=2, style=dotted];
m21_4167 -> m21_4168  [key=0, style=solid];
m21_4167 -> m21_4173  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m21_4167 -> m21_4178  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m21_4167 -> m21_4147  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m21_4169 -> m21_4170  [key=0, style=solid];
m21_4169 -> m21_189  [key=2, style=dotted];
m21_4169 -> m21_4171  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4169 -> m21_4173  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4172 -> m21_4173  [key=0, style=solid];
m21_4172 -> m21_24  [key=2, style=dotted];
m21_4177 -> m21_4178  [key=0, style=solid];
m21_4177 -> m21_24  [key=2, style=dotted];
m21_4171 -> m21_4172  [key=0, style=solid];
m21_4171 -> m21_309  [key=2, style=dotted];
m21_4170 -> m21_4171  [key=0, style=solid];
m21_4170 -> m21_24  [key=2, style=dotted];
m21_4174 -> m21_4175  [key=0, style=solid];
m21_4174 -> m21_3422  [key=2, style=dotted];
m21_4174 -> m21_4176  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4174 -> m21_4177  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4175 -> m21_4176  [key=0, style=solid];
m21_4175 -> m21_24  [key=2, style=dotted];
m21_4176 -> m21_4177  [key=0, style=solid];
m21_4176 -> m21_388  [key=2, style=dotted];
m21_4176 -> m21_24  [key=2, style=dotted];
m21_4179 -> m21_4180  [key=0, style=solid];
m21_4179 -> m21_3422  [key=2, style=dotted];
m21_4179 -> m21_4181  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4179 -> m21_4182  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4180 -> m21_4181  [key=0, style=solid];
m21_4180 -> m21_24  [key=2, style=dotted];
m21_4181 -> m21_4182  [key=0, style=solid];
m21_4181 -> m21_388  [key=2, style=dotted];
m21_4181 -> m21_24  [key=2, style=dotted];
m21_4182 -> m21_4183  [key=0, style=solid];
m21_4182 -> m21_24  [key=2, style=dotted];
m21_4183 -> m21_4164  [key=0, style=bold, color=blue];
m21_4300 -> m21_4301  [key=0, style=solid];
m21_4301 -> m21_4302  [key=0, style=solid];
m21_4301 -> m21_4305  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m21_4301 -> m21_4301  [key=3, color=darkorchid, style=bold, label="Local variable string JsonMessage"];
m21_4302 -> m21_4303  [key=0, style=solid];
m21_4302 -> m21_73  [key=2, style=dotted];
m21_4302 -> m21_4304  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_4303 -> m21_4300  [key=0, style=bold, color=blue];
m21_1928 -> m21_1929  [key=0, style=solid];
m21_1929 -> m21_1930  [key=0, style=solid];
m21_1929 -> m21_147  [key=2, style=dotted];
m21_1929 -> m21_1931  [key=1, style=dashed, color=darkseagreen4, label=strings];
m21_1929 -> m21_1932  [key=1, style=dashed, color=darkseagreen4, label=strings];
m21_1929 -> m21_1933  [key=1, style=dashed, color=darkseagreen4, label=strings];
m21_1930 -> m21_1931  [key=0, style=solid];
m21_1930 -> m21_1936  [key=2, style=dotted];
m21_1931 -> m21_1932  [key=0, style=solid];
m21_1931 -> m21_1936  [key=2, style=dotted];
m21_1932 -> m21_1933  [key=0, style=solid];
m21_1932 -> m21_1936  [key=2, style=dotted];
m21_1933 -> m21_1934  [key=0, style=solid];
m21_1933 -> m21_142  [key=2, style=dotted];
m21_1934 -> m21_1935  [key=0, style=solid];
m21_1934 -> m21_24  [key=2, style=dotted];
m21_1935 -> m21_1928  [key=0, style=bold, color=blue];
m21_1937 -> m21_1938  [key=0, style=solid];
m21_1938 -> m21_1939  [key=0, style=solid];
m21_1938 -> m21_1945  [key=2, style=dotted];
m21_1939 -> m21_1940  [key=0, style=solid];
m21_1939 -> m21_41  [key=2, style=dotted];
m21_1939 -> m21_1941  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1940 -> m21_1941  [key=0, style=solid];
m21_1940 -> m21_42  [key=2, style=dotted];
m21_1941 -> m21_1942  [key=0, style=solid];
m21_1941 -> m21_51  [key=2, style=dotted];
m21_1941 -> m21_1943  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_1942 -> m21_1943  [key=0, style=solid];
m21_1942 -> m21_24  [key=2, style=dotted];
m21_1943 -> m21_1944  [key=0, style=solid];
m21_1943 -> m21_24  [key=2, style=dotted];
m21_1944 -> m21_1937  [key=0, style=bold, color=blue];
m21_33 -> m21_34  [key=0, style=solid];
m21_34 -> m21_35  [key=0, style=solid];
m21_34 -> m21_25  [key=2, style=dotted];
m21_34 -> m21_36  [key=1, style=dashed, color=darkseagreen4, label=mySubclass];
m21_35 -> m21_36  [key=0, style=solid];
m21_35 -> m21_29  [key=2, style=dotted];
m21_35 -> m21_38  [key=1, style=dashed, color=darkseagreen4, label=myMainClass];
m21_36 -> m21_37  [key=0, style=solid];
m21_36 -> m21_41  [key=2, style=dotted];
m21_38 -> m21_39  [key=0, style=solid];
m21_38 -> m21_41  [key=2, style=dotted];
m21_37 -> m21_38  [key=0, style=solid];
m21_37 -> m21_42  [key=2, style=dotted];
m21_39 -> m21_40  [key=0, style=solid];
m21_39 -> m21_42  [key=2, style=dotted];
m21_40 -> m21_33  [key=0, style=bold, color=blue];
m21_3254 -> m21_3255  [key=0, style=solid];
m21_3255 -> m21_3256  [key=0, style=solid];
m21_3255 -> m21_3260  [key=2, style=dotted];
m21_3255 -> m21_3261  [key=2, style=dotted];
m21_3255 -> m21_142  [key=2, style=dotted];
m21_3256 -> m21_3257  [key=0, style=solid];
m21_3256 -> m21_24  [key=2, style=dotted];
m21_3257 -> m21_3258  [key=0, style=solid];
m21_3257 -> m21_51  [key=2, style=dotted];
m21_3258 -> m21_3259  [key=0, style=solid];
m21_3258 -> m21_3261  [key=2, style=dotted];
m21_3258 -> m21_24  [key=2, style=dotted];
m21_3259 -> m21_3254  [key=0, style=bold, color=blue];
m21_3469 -> m21_3470  [key=0, style=solid];
m21_3470 -> m21_3471  [key=0, style=solid];
m21_3470 -> m21_3477  [key=2, style=dotted];
m21_3471 -> m21_3472  [key=0, style=solid];
m21_3471 -> m21_51  [key=2, style=dotted];
m21_3471 -> m21_3473  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3471 -> m21_3474  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3471 -> m21_3475  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3472 -> m21_3473  [key=0, style=solid];
m21_3472 -> m21_843  [key=2, style=dotted];
m21_3473 -> m21_3474  [key=0, style=solid];
m21_3473 -> m21_24  [key=2, style=dotted];
m21_3474 -> m21_3475  [key=0, style=solid];
m21_3474 -> m21_24  [key=2, style=dotted];
m21_3475 -> m21_3476  [key=0, style=solid];
m21_3475 -> m21_24  [key=2, style=dotted];
m21_3476 -> m21_3469  [key=0, style=bold, color=blue];
m21_3324 -> m21_3325  [key=0, style=solid];
m21_3325 -> m21_3326  [key=0, style=solid];
m21_3325 -> m21_188  [key=2, style=dotted];
m21_3325 -> m21_309  [key=2, style=dotted];
m21_3325 -> m21_3327  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_3325 -> m21_3328  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_3325 -> m21_3329  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_3326 -> m21_3327  [key=0, style=solid];
m21_3326 -> m21_3336  [key=2, style=dotted];
m21_3326 -> m21_3337  [key=2, style=dotted];
m21_3326 -> m21_24  [key=2, style=dotted];
m21_3327 -> m21_3328  [key=0, style=solid];
m21_3327 -> m21_3338  [key=2, style=dotted];
m21_3327 -> m21_24  [key=2, style=dotted];
m21_3328 -> m21_3329  [key=0, style=solid];
m21_3328 -> m21_24  [key=2, style=dotted];
m21_3329 -> m21_3330  [key=0, style=solid];
m21_3329 -> m21_24  [key=2, style=dotted];
m21_3330 -> m21_3331  [key=0, style=solid];
m21_3330 -> m21_188  [key=2, style=dotted];
m21_3330 -> m21_309  [key=2, style=dotted];
m21_3330 -> m21_3332  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3330 -> m21_3333  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3330 -> m21_3334  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3331 -> m21_3332  [key=0, style=solid];
m21_3331 -> m21_3336  [key=2, style=dotted];
m21_3331 -> m21_3337  [key=2, style=dotted];
m21_3331 -> m21_24  [key=2, style=dotted];
m21_3332 -> m21_3333  [key=0, style=solid];
m21_3332 -> m21_3338  [key=2, style=dotted];
m21_3332 -> m21_24  [key=2, style=dotted];
m21_3333 -> m21_3334  [key=0, style=solid];
m21_3333 -> m21_24  [key=2, style=dotted];
m21_3334 -> m21_3335  [key=0, style=solid];
m21_3334 -> m21_24  [key=2, style=dotted];
m21_3335 -> m21_3324  [key=0, style=bold, color=blue];
m21_1308 -> m21_1309  [key=0, style=solid];
m21_1309 -> m21_1310  [key=0, style=solid];
m21_1309 -> m21_1315  [key=2, style=dotted];
m21_1309 -> m21_142  [key=2, style=dotted];
m21_1310 -> m21_1311  [key=0, style=solid];
m21_1310 -> m21_24  [key=2, style=dotted];
m21_1311 -> m21_1312  [key=0, style=solid];
m21_1311 -> m21_51  [key=2, style=dotted];
m21_1311 -> m21_1313  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1312 -> m21_1313  [key=0, style=solid];
m21_1312 -> m21_24  [key=2, style=dotted];
m21_1313 -> m21_1314  [key=0, style=solid];
m21_1313 -> m21_24  [key=2, style=dotted];
m21_1314 -> m21_1308  [key=0, style=bold, color=blue];
m21_2925 -> m21_2926  [key=0, style=solid];
m21_2926 -> m21_2927  [key=0, style=solid];
m21_2926 -> m21_2931  [key=2, style=dotted];
m21_2926 -> m21_41  [key=2, style=dotted];
m21_2927 -> m21_2928  [key=0, style=solid];
m21_2927 -> m21_42  [key=2, style=dotted];
m21_2928 -> m21_2929  [key=0, style=solid];
m21_2928 -> m21_2932  [key=2, style=dotted];
m21_2928 -> m21_41  [key=2, style=dotted];
m21_2929 -> m21_2930  [key=0, style=solid];
m21_2929 -> m21_42  [key=2, style=dotted];
m21_2930 -> m21_2925  [key=0, style=bold, color=blue];
m21_4400 -> m21_4401  [key=0, style=solid];
m21_4400 -> m21_4402  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_4401 -> m21_4402  [key=0, style=solid];
m21_4402 -> m21_4403  [key=0, style=solid];
m21_4403 -> m21_4404  [key=0, style=solid];
m21_4404 -> m21_4400  [key=0, style=bold, color=blue];
m21_2819 -> m21_2820  [key=0, style=solid];
m21_2820 -> m21_2821  [key=0, style=solid];
m21_2821 -> m21_2822  [key=0, style=solid];
m21_2822 -> m21_2819  [key=0, style=bold, color=blue];
m21_131 -> m21_132  [key=0, style=solid];
m21_132 -> m21_133  [key=0, style=solid];
m21_132 -> m21_141  [key=2, style=dotted];
m21_132 -> m21_136  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m21_132 -> m21_137  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m21_132 -> m21_138  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m21_132 -> m21_139  [key=1, style=dashed, color=darkseagreen4, label=foo1];
m21_133 -> m21_134  [key=0, style=solid];
m21_133 -> m21_142  [key=2, style=dotted];
m21_133 -> m21_135  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_136 -> m21_137  [key=0, style=solid];
m21_136 -> m21_24  [key=2, style=dotted];
m21_137 -> m21_138  [key=0, style=solid];
m21_137 -> m21_24  [key=2, style=dotted];
m21_138 -> m21_139  [key=0, style=solid];
m21_138 -> m21_24  [key=2, style=dotted];
m21_139 -> m21_140  [key=0, style=solid];
m21_139 -> m21_24  [key=2, style=dotted];
m21_134 -> m21_135  [key=0, style=solid];
m21_134 -> m21_42  [key=2, style=dotted];
m21_135 -> m21_136  [key=0, style=solid];
m21_135 -> m21_51  [key=2, style=dotted];
m21_135 -> m21_137  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m21_135 -> m21_138  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m21_135 -> m21_139  [key=1, style=dashed, color=darkseagreen4, label=foo2];
m21_140 -> m21_131  [key=0, style=bold, color=blue];
m21_1883 -> m21_1884  [key=0, style=solid];
m21_1884 -> m21_1885  [key=0, style=solid];
m21_1884 -> m21_1888  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1884 -> m21_1821  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1885 -> m21_1886  [key=0, style=solid];
m21_1885 -> m21_73  [key=2, style=dotted];
m21_1885 -> m21_1887  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1886 -> m21_1883  [key=0, style=bold, color=blue];
m21_310 -> m21_311  [key=0, style=solid, color=red];
m21_311 -> m21_312  [key=0, style=solid, color=red];
m21_311 -> m21_318  [key=2, style=dotted, color=red];
m21_311 -> m21_313  [key=1, style=dashed, color=red, label=c];
m21_312 -> m21_313  [key=0, style=solid, color=red];
m21_312 -> m21_319  [key=2, style=dotted, color=red];
m21_313 -> m21_314  [key=0, style=solid];
m21_313 -> m21_142  [key=2, style=dotted];
m21_314 -> m21_315  [key=0, style=solid];
m21_314 -> m21_24  [key=2, style=dotted];
m21_315 -> m21_316  [key=0, style=solid];
m21_315 -> m21_51  [key=2, style=dotted];
m21_316 -> m21_317  [key=0, style=solid];
m21_316 -> m21_24  [key=2, style=dotted];
m21_317 -> m21_310  [key=0, style=bold, color=blue];
m21_3501 -> m21_3502  [key=0, style=solid];
m21_3502 -> m21_3503  [key=0, style=solid];
m21_3502 -> m21_209  [key=2, style=dotted];
m21_3502 -> m21_1147  [key=2, style=dotted];
m21_3503 -> m21_3504  [key=0, style=solid];
m21_3503 -> m21_41  [key=2, style=dotted];
m21_3503 -> m21_3505  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3504 -> m21_3505  [key=0, style=solid];
m21_3504 -> m21_42  [key=2, style=dotted];
m21_3505 -> m21_3506  [key=0, style=solid];
m21_3505 -> m21_51  [key=2, style=dotted];
m21_3505 -> m21_3507  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3505 -> m21_3508  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3506 -> m21_3507  [key=0, style=solid];
m21_3506 -> m21_24  [key=2, style=dotted];
m21_3507 -> m21_3508  [key=0, style=solid];
m21_3507 -> m21_1147  [key=2, style=dotted];
m21_3507 -> m21_24  [key=2, style=dotted];
m21_3508 -> m21_3509  [key=0, style=solid];
m21_3508 -> m21_1147  [key=2, style=dotted];
m21_3508 -> m21_24  [key=2, style=dotted];
m21_3509 -> m21_3501  [key=0, style=bold, color=blue];
m21_1781 -> m21_1782  [key=0, style=solid];
m21_1782 -> m21_1783  [key=0, style=solid];
m21_1782 -> m21_1782  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1783 -> m21_1784  [key=0, style=solid];
m21_1783 -> m21_51  [key=2, style=dotted];
m21_1783 -> m21_1785  [key=1, style=dashed, color=darkseagreen4, label=values];
m21_1783 -> m21_1786  [key=1, style=dashed, color=darkseagreen4, label=values];
m21_1784 -> m21_1785  [key=0, style=solid];
m21_1784 -> m21_24  [key=2, style=dotted];
m21_1785 -> m21_1786  [key=0, style=solid];
m21_1785 -> m21_24  [key=2, style=dotted];
m21_1786 -> m21_1787  [key=0, style=solid];
m21_1786 -> m21_24  [key=2, style=dotted];
m21_1787 -> m21_1781  [key=0, style=bold, color=blue];
m21_2041 -> m21_2042  [key=0, style=solid];
m21_2042 -> m21_2043  [key=0, style=solid];
m21_2042 -> m21_41  [key=2, style=dotted];
m21_2043 -> m21_2041  [key=0, style=bold, color=blue];
m21_4375 -> m21_4376  [key=0, style=solid];
m21_4376 -> m21_4377  [key=0, style=solid];
m21_4377 -> m21_4375  [key=0, style=bold, color=blue];
m21_4145 -> m21_4146  [key=0, style=solid];
m21_4146 -> m21_4147  [key=0, style=solid];
m21_4146 -> m21_1000  [key=2, style=dotted];
m21_4146 -> m21_4149  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4146 -> m21_4152  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4146 -> m21_4157  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4147 -> m21_4148  [key=0, style=solid];
m21_4147 -> m21_4153  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m21_4147 -> m21_4158  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m21_4147 -> m21_4147  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m21_4149 -> m21_4150  [key=0, style=solid];
m21_4149 -> m21_189  [key=2, style=dotted];
m21_4149 -> m21_4151  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4149 -> m21_4153  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4152 -> m21_4153  [key=0, style=solid];
m21_4152 -> m21_24  [key=2, style=dotted];
m21_4157 -> m21_4158  [key=0, style=solid];
m21_4157 -> m21_24  [key=2, style=dotted];
m21_4148 -> m21_4149  [key=0, style=solid];
m21_4148 -> m21_188  [key=2, style=dotted];
m21_4148 -> m21_4151  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_4153 -> m21_4154  [key=0, style=solid];
m21_4153 -> m21_16  [key=2, style=dotted];
m21_4153 -> m21_386  [key=2, style=dotted];
m21_4158 -> m21_4159  [key=0, style=solid];
m21_4158 -> m21_16  [key=2, style=dotted];
m21_4158 -> m21_386  [key=2, style=dotted];
m21_4151 -> m21_4152  [key=0, style=solid];
m21_4151 -> m21_309  [key=2, style=dotted];
m21_4150 -> m21_4151  [key=0, style=solid];
m21_4150 -> m21_24  [key=2, style=dotted];
m21_4154 -> m21_4155  [key=0, style=solid];
m21_4154 -> m21_3422  [key=2, style=dotted];
m21_4154 -> m21_4156  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4154 -> m21_4157  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4155 -> m21_4156  [key=0, style=solid];
m21_4155 -> m21_24  [key=2, style=dotted];
m21_4156 -> m21_4157  [key=0, style=solid];
m21_4156 -> m21_388  [key=2, style=dotted];
m21_4156 -> m21_24  [key=2, style=dotted];
m21_4159 -> m21_4160  [key=0, style=solid];
m21_4159 -> m21_3422  [key=2, style=dotted];
m21_4159 -> m21_4161  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4159 -> m21_4162  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4160 -> m21_4161  [key=0, style=solid];
m21_4160 -> m21_24  [key=2, style=dotted];
m21_4161 -> m21_4162  [key=0, style=solid];
m21_4161 -> m21_388  [key=2, style=dotted];
m21_4161 -> m21_24  [key=2, style=dotted];
m21_4162 -> m21_4163  [key=0, style=solid];
m21_4162 -> m21_24  [key=2, style=dotted];
m21_4163 -> m21_4145  [key=0, style=bold, color=blue];
m21_2668 -> m21_2669  [key=0, style=solid];
m21_2669 -> m21_2670  [key=0, style=solid];
m21_2669 -> m21_2669  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2670 -> m21_2671  [key=0, style=solid];
m21_2670 -> m21_51  [key=2, style=dotted];
m21_2671 -> m21_2672  [key=0, style=solid];
m21_2671 -> m21_24  [key=2, style=dotted];
m21_2672 -> m21_2668  [key=0, style=bold, color=blue];
m21_4265 -> m21_4266  [key=0, style=solid];
m21_4266 -> m21_4267  [key=0, style=solid];
m21_4266 -> m21_2439  [key=2, style=dotted];
m21_4267 -> m21_4265  [key=0, style=bold, color=blue];
m21_1809 -> m21_1810  [key=0, style=solid];
m21_1810 -> m21_1811  [key=0, style=solid];
m21_1810 -> m21_1810  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1811 -> m21_1812  [key=0, style=solid];
m21_1811 -> m21_51  [key=2, style=dotted];
m21_1812 -> m21_1809  [key=0, style=bold, color=blue];
m21_1333 -> m21_1334  [key=0, style=solid];
m21_1334 -> m21_1335  [key=0, style=solid];
m21_1334 -> m21_1332  [key=2, style=dotted];
m21_1335 -> m21_1336  [key=0, style=solid];
m21_1335 -> m21_1340  [key=2, style=dotted];
m21_1335 -> m21_1341  [key=2, style=dotted];
m21_1335 -> m21_1337  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1336 -> m21_1337  [key=0, style=solid];
m21_1336 -> m21_24  [key=2, style=dotted];
m21_1337 -> m21_1338  [key=0, style=solid];
m21_1337 -> m21_1340  [key=2, style=dotted];
m21_1337 -> m21_249  [key=2, style=dotted];
m21_1338 -> m21_1339  [key=0, style=solid];
m21_1338 -> m21_24  [key=2, style=dotted];
m21_1339 -> m21_1333  [key=0, style=bold, color=blue];
m21_3749 -> m21_3750  [key=0, style=solid];
m21_3750 -> m21_3751  [key=0, style=solid];
m21_3750 -> m21_3756  [key=2, style=dotted];
m21_3751 -> m21_3752  [key=0, style=solid];
m21_3751 -> m21_188  [key=2, style=dotted];
m21_3751 -> m21_3757  [key=2, style=dotted];
m21_3751 -> m21_189  [key=2, style=dotted];
m21_3751 -> m21_3753  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3752 -> m21_3753  [key=0, style=solid];
m21_3752 -> m21_24  [key=2, style=dotted];
m21_3753 -> m21_3754  [key=0, style=solid];
m21_3753 -> m21_188  [key=2, style=dotted];
m21_3753 -> m21_3757  [key=2, style=dotted];
m21_3753 -> m21_309  [key=2, style=dotted];
m21_3754 -> m21_3755  [key=0, style=solid];
m21_3754 -> m21_24  [key=2, style=dotted];
m21_3755 -> m21_3749  [key=0, style=bold, color=blue];
m21_1445 -> m21_1446  [key=0, style=solid];
m21_1446 -> m21_1447  [key=0, style=solid];
m21_1446 -> m21_1458  [key=2, style=dotted];
m21_1446 -> m21_1291  [key=2, style=dotted];
m21_1447 -> m21_1448  [key=0, style=solid];
m21_1447 -> m21_142  [key=2, style=dotted];
m21_1447 -> m21_1449  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1448 -> m21_1449  [key=0, style=solid];
m21_1448 -> m21_24  [key=2, style=dotted];
m21_1449 -> m21_1450  [key=0, style=solid];
m21_1449 -> m21_51  [key=2, style=dotted];
m21_1449 -> m21_1451  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m21_1449 -> m21_1452  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m21_1449 -> m21_1453  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m21_1449 -> m21_1454  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m21_1449 -> m21_1455  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m21_1449 -> m21_1456  [key=1, style=dashed, color=darkseagreen4, label=userNullablleDeserialized];
m21_1450 -> m21_1451  [key=0, style=solid];
m21_1450 -> m21_1291  [key=2, style=dotted];
m21_1450 -> m21_24  [key=2, style=dotted];
m21_1451 -> m21_1452  [key=0, style=solid];
m21_1451 -> m21_24  [key=2, style=dotted];
m21_1452 -> m21_1453  [key=0, style=solid];
m21_1452 -> m21_24  [key=2, style=dotted];
m21_1453 -> m21_1454  [key=0, style=solid];
m21_1453 -> m21_24  [key=2, style=dotted];
m21_1454 -> m21_1455  [key=0, style=solid];
m21_1454 -> m21_24  [key=2, style=dotted];
m21_1455 -> m21_1456  [key=0, style=solid];
m21_1455 -> m21_24  [key=2, style=dotted];
m21_1456 -> m21_1457  [key=0, style=solid];
m21_1456 -> m21_24  [key=2, style=dotted];
m21_1457 -> m21_1445  [key=0, style=bold, color=blue];
m21_1922 -> m21_1923  [key=0, style=solid];
m21_1923 -> m21_1924  [key=0, style=solid];
m21_1923 -> m21_1135  [key=2, style=dotted];
m21_1923 -> m21_1925  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1924 -> m21_1922  [key=0, style=bold, color=blue];
m21_2944 -> m21_2945  [key=0, style=solid];
m21_2945 -> m21_2946  [key=0, style=solid];
m21_2945 -> m21_2933  [key=2, style=dotted];
m21_2946 -> m21_2947  [key=0, style=solid];
m21_2946 -> m21_41  [key=2, style=dotted];
m21_2946 -> m21_2948  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2947 -> m21_2948  [key=0, style=solid];
m21_2947 -> m21_42  [key=2, style=dotted];
m21_2948 -> m21_2949  [key=0, style=solid];
m21_2948 -> m21_51  [key=2, style=dotted];
m21_2949 -> m21_2950  [key=0, style=solid];
m21_2949 -> m21_2941  [key=2, style=dotted];
m21_2949 -> m21_24  [key=2, style=dotted];
m21_2950 -> m21_2944  [key=0, style=bold, color=blue];
m21_3813 -> m21_3814  [key=0, style=solid];
m21_3814 -> m21_3815  [key=0, style=solid];
m21_3814 -> m21_3015  [key=2, style=dotted];
m21_3814 -> m21_3819  [key=1, style=dashed, color=darkseagreen4, label=sw];
m21_3815 -> m21_3816  [key=0, style=solid];
m21_3815 -> m21_3016  [key=2, style=dotted];
m21_3815 -> m21_3817  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m21_3815 -> m21_3818  [key=1, style=dashed, color=darkseagreen4, label=jsonWriter];
m21_3819 -> m21_3820  [key=0, style=solid];
m21_3819 -> m21_3020  [key=2, style=dotted];
m21_3816 -> m21_3817  [key=0, style=solid];
m21_3816 -> m21_188  [key=2, style=dotted];
m21_3816 -> m21_879  [key=2, style=dotted];
m21_3817 -> m21_3818  [key=0, style=solid];
m21_3817 -> m21_3052  [key=2, style=dotted];
m21_3818 -> m21_3819  [key=0, style=solid];
m21_3818 -> m21_24  [key=2, style=dotted];
m21_3820 -> m21_3821  [key=0, style=solid];
m21_3820 -> m21_42  [key=2, style=dotted];
m21_3821 -> m21_3813  [key=0, style=bold, color=blue];
m21_190 -> m21_191  [key=0, style=solid];
m21_191 -> m21_192  [key=0, style=solid];
m21_191 -> m21_73  [key=2, style=dotted];
m21_191 -> m21_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_192 -> m21_190  [key=0, style=bold, color=blue];
m21_1869 -> m21_1870  [key=0, style=solid];
m21_1870 -> m21_1871  [key=0, style=solid];
m21_1870 -> m21_1874  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1870 -> m21_1870  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1871 -> m21_1872  [key=0, style=solid];
m21_1871 -> m21_73  [key=2, style=dotted];
m21_1871 -> m21_1873  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1872 -> m21_1869  [key=0, style=bold, color=blue];
m21_794 -> m21_795  [key=0, style=solid];
m21_795 -> m21_796  [key=0, style=solid];
m21_795 -> m21_801  [key=2, style=dotted];
m21_796 -> m21_797  [key=0, style=solid];
m21_796 -> m21_41  [key=2, style=dotted];
m21_797 -> m21_798  [key=0, style=solid];
m21_797 -> m21_51  [key=2, style=dotted];
m21_797 -> m21_799  [key=1, style=dashed, color=darkseagreen4, label=r2];
m21_798 -> m21_799  [key=0, style=solid];
m21_798 -> m21_802  [key=2, style=dotted];
m21_798 -> m21_24  [key=2, style=dotted];
m21_799 -> m21_800  [key=0, style=solid];
m21_799 -> m21_24  [key=2, style=dotted];
m21_800 -> m21_794  [key=0, style=bold, color=blue];
m21_1672 -> m21_1673  [key=0, style=solid];
m21_1673 -> m21_1674  [key=0, style=solid];
m21_1673 -> m21_1684  [key=2, style=dotted];
m21_1673 -> m21_1675  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m21_1673 -> m21_1676  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m21_1673 -> m21_1677  [key=1, style=dashed, color=darkseagreen4, label=optInClass];
m21_1674 -> m21_1675  [key=0, style=solid];
m21_1675 -> m21_1676  [key=0, style=solid];
m21_1676 -> m21_1677  [key=0, style=solid];
m21_1677 -> m21_1678  [key=0, style=solid];
m21_1677 -> m21_41  [key=2, style=dotted];
m21_1678 -> m21_1679  [key=0, style=solid];
m21_1678 -> m21_42  [key=2, style=dotted];
m21_1679 -> m21_1680  [key=0, style=solid];
m21_1679 -> m21_51  [key=2, style=dotted];
m21_1679 -> m21_1681  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m21_1679 -> m21_1682  [key=1, style=dashed, color=darkseagreen4, label=newOptInClass];
m21_1680 -> m21_1681  [key=0, style=solid];
m21_1680 -> m21_24  [key=2, style=dotted];
m21_1681 -> m21_1682  [key=0, style=solid];
m21_1681 -> m21_24  [key=2, style=dotted];
m21_1682 -> m21_1683  [key=0, style=solid];
m21_1682 -> m21_24  [key=2, style=dotted];
m21_1683 -> m21_1672  [key=0, style=bold, color=blue];
m21_200 -> m21_201  [key=0, style=solid];
m21_201 -> m21_202  [key=0, style=solid];
m21_201 -> m21_203  [key=2, style=dotted];
m21_202 -> m21_200  [key=0, style=bold, color=blue];
m21_1559 -> m21_1560  [key=0, style=solid];
m21_1559 -> m21_1567  [key=2, style=dotted];
m21_1559 -> m21_1147  [key=2, style=dotted];
m21_1559 -> m21_1561  [key=1, style=dashed, color=darkseagreen4, label=entry];
m21_1559 -> m21_1562  [key=1, style=dashed, color=darkseagreen4, label=entry];
m21_1558 -> m21_1559  [key=0, style=solid];
m21_1560 -> m21_1561  [key=0, style=solid];
m21_1560 -> m21_142  [key=2, style=dotted];
m21_1560 -> m21_1563  [key=1, style=dashed, color=darkseagreen4, label=defaultJson];
m21_1561 -> m21_1562  [key=0, style=solid];
m21_1561 -> m21_1194  [key=2, style=dotted];
m21_1561 -> m21_1341  [key=2, style=dotted];
m21_1561 -> m21_1564  [key=1, style=dashed, color=darkseagreen4, label=isoJson];
m21_1562 -> m21_1563  [key=0, style=solid];
m21_1562 -> m21_1389  [key=2, style=dotted];
m21_1562 -> m21_1341  [key=2, style=dotted];
m21_1562 -> m21_1565  [key=1, style=dashed, color=darkseagreen4, label=javascriptJson];
m21_1563 -> m21_1564  [key=0, style=solid];
m21_1563 -> m21_24  [key=2, style=dotted];
m21_1564 -> m21_1565  [key=0, style=solid];
m21_1564 -> m21_24  [key=2, style=dotted];
m21_1565 -> m21_1566  [key=0, style=solid];
m21_1565 -> m21_24  [key=2, style=dotted];
m21_1566 -> m21_1558  [key=0, style=bold, color=blue];
m21_1023 -> m21_1024  [key=0, style=solid];
m21_1024 -> m21_1025  [key=0, style=solid];
m21_1024 -> m21_1036  [key=2, style=dotted];
m21_1024 -> m21_1026  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m21_1024 -> m21_1027  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m21_1024 -> m21_1028  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m21_1024 -> m21_1030  [key=1, style=dashed, color=darkseagreen4, label=executorObject];
m21_1025 -> m21_1026  [key=0, style=solid];
m21_1026 -> m21_1027  [key=0, style=solid];
m21_1027 -> m21_1028  [key=0, style=solid];
m21_1028 -> m21_1029  [key=0, style=solid];
m21_1028 -> m21_142  [key=2, style=dotted];
m21_1030 -> m21_1031  [key=0, style=solid];
m21_1030 -> m21_1037  [key=2, style=dotted];
m21_1029 -> m21_1030  [key=0, style=solid];
m21_1029 -> m21_982  [key=2, style=dotted];
m21_1029 -> m21_1031  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m21_1029 -> m21_1032  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m21_1029 -> m21_1033  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m21_1029 -> m21_1034  [key=1, style=dashed, color=darkseagreen4, label=executorObject2];
m21_1031 -> m21_1032  [key=0, style=solid];
m21_1031 -> m21_24  [key=2, style=dotted];
m21_1032 -> m21_1033  [key=0, style=solid];
m21_1032 -> m21_24  [key=2, style=dotted];
m21_1033 -> m21_1034  [key=0, style=solid];
m21_1033 -> m21_1038  [key=2, style=dotted];
m21_1034 -> m21_1035  [key=0, style=solid];
m21_1034 -> m21_24  [key=2, style=dotted];
m21_1035 -> m21_1023  [key=0, style=bold, color=blue];
m21_149 -> m21_150  [key=0, style=solid];
m21_150 -> m21_151  [key=0, style=solid];
m21_150 -> m21_73  [key=2, style=dotted];
m21_150 -> m21_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_151 -> m21_149  [key=0, style=bold, color=blue];
m21_824 -> m21_825  [key=0, style=solid];
m21_825 -> m21_826  [key=0, style=solid];
m21_825 -> m21_820  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_826 -> m21_827  [key=0, style=solid];
m21_826 -> m21_51  [key=2, style=dotted];
m21_827 -> m21_828  [key=0, style=solid];
m21_827 -> m21_24  [key=2, style=dotted];
m21_828 -> m21_824  [key=0, style=bold, color=blue];
m21_3376 -> m21_3377  [key=0, style=solid];
m21_3376 -> m21_3379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m21_3377 -> m21_3378  [key=0, style=solid];
m21_3379 -> m21_3380  [key=0, style=solid];
m21_3379 -> m21_3381  [key=2, style=dotted];
m21_3379 -> m21_2402  [key=2, style=dotted];
m21_3379 -> m21_3382  [key=2, style=dotted];
m21_3379 -> m21_3383  [key=2, style=dotted];
m21_3378 -> m21_3379  [key=0, style=solid];
m21_3380 -> m21_3376  [key=0, style=bold, color=blue];
m21_4116 -> m21_4117  [key=0, style=solid];
m21_4117 -> m21_4118  [key=0, style=solid];
m21_4117 -> m21_4079  [key=2, style=dotted];
m21_4118 -> m21_4116  [key=0, style=bold, color=blue];
m21_2586 -> m21_2587  [key=0, style=solid];
m21_2587 -> m21_2588  [key=0, style=solid];
m21_2587 -> m21_2593  [key=2, style=dotted];
m21_2588 -> m21_2589  [key=0, style=solid];
m21_2588 -> m21_41  [key=2, style=dotted];
m21_2588 -> m21_2590  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2589 -> m21_2590  [key=0, style=solid];
m21_2589 -> m21_42  [key=2, style=dotted];
m21_2590 -> m21_2591  [key=0, style=solid];
m21_2590 -> m21_51  [key=2, style=dotted];
m21_2591 -> m21_2592  [key=0, style=solid];
m21_2591 -> m21_24  [key=2, style=dotted];
m21_2591 -> m21_2591  [key=1, style=dashed, color=darkseagreen4, label=newStruct];
m21_2592 -> m21_2586  [key=0, style=bold, color=blue];
m21_112 -> m21_113  [key=0, style=solid];
m21_113 -> m21_114  [key=0, style=solid];
m21_113 -> m21_51  [key=2, style=dotted];
m21_113 -> m21_115  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_116  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_117  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_118  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_119  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_120  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_121  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_122  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_123  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_124  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_125  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_126  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_127  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_128  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_113 -> m21_129  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_114 -> m21_115  [key=0, style=solid];
m21_114 -> m21_97  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m21_115 -> m21_116  [key=0, style=solid];
m21_115 -> m21_24  [key=2, style=dotted];
m21_115 -> m21_115  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_116 -> m21_117  [key=0, style=solid];
m21_116 -> m21_24  [key=2, style=dotted];
m21_116 -> m21_116  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_117 -> m21_118  [key=0, style=solid];
m21_117 -> m21_24  [key=2, style=dotted];
m21_117 -> m21_117  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_118 -> m21_119  [key=0, style=solid];
m21_118 -> m21_24  [key=2, style=dotted];
m21_118 -> m21_118  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_119 -> m21_120  [key=0, style=solid];
m21_119 -> m21_24  [key=2, style=dotted];
m21_119 -> m21_119  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_120 -> m21_121  [key=0, style=solid];
m21_120 -> m21_24  [key=2, style=dotted];
m21_120 -> m21_120  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_121 -> m21_122  [key=0, style=solid];
m21_121 -> m21_24  [key=2, style=dotted];
m21_121 -> m21_121  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_122 -> m21_123  [key=0, style=solid];
m21_122 -> m21_24  [key=2, style=dotted];
m21_122 -> m21_122  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_123 -> m21_124  [key=0, style=solid];
m21_123 -> m21_24  [key=2, style=dotted];
m21_123 -> m21_123  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_124 -> m21_125  [key=0, style=solid];
m21_124 -> m21_24  [key=2, style=dotted];
m21_124 -> m21_124  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_125 -> m21_126  [key=0, style=solid];
m21_125 -> m21_24  [key=2, style=dotted];
m21_125 -> m21_125  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_126 -> m21_127  [key=0, style=solid];
m21_126 -> m21_24  [key=2, style=dotted];
m21_126 -> m21_126  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_127 -> m21_128  [key=0, style=solid];
m21_127 -> m21_24  [key=2, style=dotted];
m21_127 -> m21_127  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_128 -> m21_129  [key=0, style=solid];
m21_128 -> m21_24  [key=2, style=dotted];
m21_128 -> m21_128  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_129 -> m21_130  [key=0, style=solid];
m21_129 -> m21_24  [key=2, style=dotted];
m21_129 -> m21_129  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_130 -> m21_112  [key=0, style=bold, color=blue];
m21_1594 -> m21_1595  [key=0, style=solid];
m21_1595 -> m21_1596  [key=0, style=solid];
m21_1595 -> m21_1599  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1595 -> m21_1595  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1596 -> m21_1597  [key=0, style=solid];
m21_1596 -> m21_188  [key=2, style=dotted];
m21_1596 -> m21_309  [key=2, style=dotted];
m21_1596 -> m21_1598  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1599 -> m21_1600  [key=0, style=solid];
m21_1599 -> m21_188  [key=2, style=dotted];
m21_1599 -> m21_309  [key=2, style=dotted];
m21_1599 -> m21_1601  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1597 -> m21_1598  [key=0, style=solid];
m21_1597 -> m21_24  [key=2, style=dotted];
m21_1598 -> m21_1599  [key=0, style=solid];
m21_1598 -> m21_24  [key=2, style=dotted];
m21_1600 -> m21_1601  [key=0, style=solid];
m21_1600 -> m21_24  [key=2, style=dotted];
m21_1601 -> m21_1602  [key=0, style=solid];
m21_1601 -> m21_24  [key=2, style=dotted];
m21_1602 -> m21_1594  [key=0, style=bold, color=blue];
m21_2802 -> m21_2803  [key=0, style=solid];
m21_2803 -> m21_2804  [key=0, style=solid];
m21_2803 -> m21_982  [key=2, style=dotted];
m21_2804 -> m21_2805  [key=0, style=solid];
m21_2804 -> m21_165  [key=2, style=dotted];
m21_2805 -> m21_2802  [key=0, style=bold, color=blue];
m21_3567 -> m21_3568  [key=0, style=solid];
m21_3568 -> m21_3569  [key=0, style=solid];
m21_3568 -> m21_3571  [key=2, style=dotted];
m21_3568 -> m21_41  [key=2, style=dotted];
m21_3569 -> m21_3570  [key=0, style=solid];
m21_3569 -> m21_24  [key=2, style=dotted];
m21_3570 -> m21_3567  [key=0, style=bold, color=blue];
m21_3104 -> m21_3105  [key=0, style=solid];
m21_3105 -> m21_3106  [key=0, style=solid];
m21_3105 -> m21_147  [key=2, style=dotted];
m21_3105 -> m21_3108  [key=1, style=dashed, color=darkseagreen4, label=d1];
m21_3105 -> m21_3109  [key=1, style=dashed, color=darkseagreen4, label=d1];
m21_3106 -> m21_3107  [key=0, style=solid];
m21_3106 -> m21_142  [key=2, style=dotted];
m21_3108 -> m21_3109  [key=0, style=solid];
m21_3108 -> m21_24  [key=2, style=dotted];
m21_3109 -> m21_3110  [key=0, style=solid];
m21_3109 -> m21_24  [key=2, style=dotted];
m21_3107 -> m21_3108  [key=0, style=solid];
m21_3107 -> m21_51  [key=2, style=dotted];
m21_3107 -> m21_3109  [key=1, style=dashed, color=darkseagreen4, label=d2];
m21_3110 -> m21_3104  [key=0, style=bold, color=blue];
m21_3824 -> m21_3825  [key=0, style=solid];
m21_3825 -> m21_3826  [key=0, style=solid];
m21_3825 -> m21_73  [key=2, style=dotted];
m21_3825 -> m21_3827  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3826 -> m21_3824  [key=0, style=bold, color=blue];
m21_3724 -> m21_3725  [key=0, style=solid];
m21_3725 -> m21_3726  [key=0, style=solid];
m21_3725 -> m21_3725  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3726 -> m21_3727  [key=0, style=solid];
m21_3726 -> m21_51  [key=2, style=dotted];
m21_3727 -> m21_3728  [key=0, style=solid];
m21_3728 -> m21_3729  [key=0, style=solid];
m21_3728 -> m21_24  [key=2, style=dotted];
m21_3729 -> m21_3724  [key=0, style=bold, color=blue];
m21_817 -> m21_818  [key=0, style=solid];
m21_818 -> m21_819  [key=0, style=solid];
m21_818 -> m21_823  [key=2, style=dotted];
m21_819 -> m21_820  [key=0, style=solid];
m21_819 -> m21_142  [key=2, style=dotted];
m21_819 -> m21_821  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_820 -> m21_821  [key=0, style=solid];
m21_820 -> m21_820  [key=3, color=darkorchid, style=bold, label="Local variable string expectedJson"];
m21_821 -> m21_822  [key=0, style=solid];
m21_821 -> m21_24  [key=2, style=dotted];
m21_822 -> m21_817  [key=0, style=bold, color=blue];
m21_2610 -> m21_2611  [key=0, style=solid];
m21_2611 -> m21_2612  [key=0, style=solid];
m21_2611 -> m21_2604  [key=2, style=dotted];
m21_2611 -> m21_2605  [key=2, style=dotted];
m21_2611 -> m21_1000  [key=2, style=dotted];
m21_2611 -> m21_1155  [key=2, style=dotted];
m21_2611 -> m21_188  [key=2, style=dotted];
m21_2611 -> m21_211  [key=2, style=dotted];
m21_2611 -> m21_2613  [key=1, style=dashed, color=darkseagreen4, label=serializeObject];
m21_2612 -> m21_2613  [key=0, style=solid];
m21_2612 -> m21_24  [key=2, style=dotted];
m21_2613 -> m21_2614  [key=0, style=solid];
m21_2613 -> m21_16  [key=2, style=dotted];
m21_2613 -> m21_386  [key=2, style=dotted];
m21_2613 -> m21_2616  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_2614 -> m21_2615  [key=0, style=solid];
m21_2614 -> m21_19  [key=2, style=dotted];
m21_2614 -> m21_2616  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_2616 -> m21_2617  [key=0, style=solid];
m21_2616 -> m21_20  [key=2, style=dotted];
m21_2616 -> m21_2618  [key=1, style=dashed, color=darkseagreen4, label=deserializeObject];
m21_2615 -> m21_2616  [key=0, style=solid];
m21_2617 -> m21_2618  [key=0, style=solid];
m21_2617 -> m21_1155  [key=2, style=dotted];
m21_2617 -> m21_24  [key=2, style=dotted];
m21_2618 -> m21_2619  [key=0, style=solid];
m21_2618 -> m21_1000  [key=2, style=dotted];
m21_2618 -> m21_24  [key=2, style=dotted];
m21_2619 -> m21_2610  [key=0, style=bold, color=blue];
m21_751 -> m21_752  [key=0, style=solid];
m21_752 -> m21_753  [key=0, style=solid];
m21_752 -> m21_754  [key=0, style=solid];
m21_753 -> m21_761  [key=0, style=solid];
m21_754 -> m21_755  [key=0, style=solid];
m21_754 -> m21_762  [key=2, style=dotted];
m21_755 -> m21_756  [key=0, style=solid];
m21_755 -> m21_763  [key=2, style=dotted];
m21_756 -> m21_757  [key=0, style=solid];
m21_756 -> m21_764  [key=2, style=dotted];
m21_757 -> m21_758  [key=0, style=solid];
m21_757 -> m21_764  [key=2, style=dotted];
m21_758 -> m21_759  [key=0, style=solid];
m21_758 -> m21_764  [key=2, style=dotted];
m21_759 -> m21_760  [key=0, style=solid];
m21_759 -> m21_764  [key=2, style=dotted];
m21_760 -> m21_761  [key=0, style=solid];
m21_761 -> m21_751  [key=0, style=bold, color=blue];
m21_1437 -> m21_1438  [key=0, style=solid];
m21_1438 -> m21_1439  [key=0, style=solid];
m21_1438 -> m21_1438  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1439 -> m21_1440  [key=0, style=solid];
m21_1439 -> m21_51  [key=2, style=dotted];
m21_1439 -> m21_1441  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m21_1439 -> m21_1442  [key=1, style=dashed, color=darkseagreen4, label=personRaw];
m21_1440 -> m21_1441  [key=0, style=solid];
m21_1440 -> m21_24  [key=2, style=dotted];
m21_1441 -> m21_1442  [key=0, style=solid];
m21_1441 -> m21_1444  [key=2, style=dotted];
m21_1441 -> m21_24  [key=2, style=dotted];
m21_1442 -> m21_1443  [key=0, style=solid];
m21_1442 -> m21_24  [key=2, style=dotted];
m21_1443 -> m21_1437  [key=0, style=bold, color=blue];
m21_2329 -> m21_2366  [key=0, style=solid];
m21_2329 -> m21_2367  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2329 -> m21_2368  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2329 -> m21_2369  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2329 -> m21_2370  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2329 -> m21_2371  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2329 -> m21_2372  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2329 -> m21_2373  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2366 -> m21_2367  [key=0, style=solid];
m21_2367 -> m21_2368  [key=0, style=solid];
m21_2368 -> m21_2369  [key=0, style=solid];
m21_2369 -> m21_2370  [key=0, style=solid];
m21_2370 -> m21_2371  [key=0, style=solid];
m21_2371 -> m21_2372  [key=0, style=solid];
m21_2372 -> m21_2373  [key=0, style=solid];
m21_2373 -> m21_2374  [key=0, style=solid];
m21_2374 -> m21_2329  [key=0, style=bold, color=blue];
m21_2533 -> m21_2534  [key=0, style=solid];
m21_2534 -> m21_2535  [key=0, style=solid];
m21_2534 -> m21_41  [key=2, style=dotted];
m21_2535 -> m21_2536  [key=0, style=solid];
m21_2535 -> m21_42  [key=2, style=dotted];
m21_2536 -> m21_2533  [key=0, style=bold, color=blue];
m21_4342 -> m21_4343  [key=0, style=solid];
m21_4343 -> m21_4344  [key=0, style=solid];
m21_4343 -> m21_2439  [key=2, style=dotted];
m21_4344 -> m21_4342  [key=0, style=bold, color=blue];
m21_1316 -> m21_1317  [key=0, style=solid];
m21_1317 -> m21_1318  [key=0, style=solid];
m21_1317 -> m21_1324  [key=2, style=dotted];
m21_1318 -> m21_1319  [key=0, style=solid];
m21_1318 -> m21_142  [key=2, style=dotted];
m21_1319 -> m21_1320  [key=0, style=solid];
m21_1319 -> m21_51  [key=2, style=dotted];
m21_1319 -> m21_1321  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_1319 -> m21_1322  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_1320 -> m21_1321  [key=0, style=solid];
m21_1320 -> m21_24  [key=2, style=dotted];
m21_1321 -> m21_1322  [key=0, style=solid];
m21_1321 -> m21_24  [key=2, style=dotted];
m21_1322 -> m21_1323  [key=0, style=solid];
m21_1322 -> m21_24  [key=2, style=dotted];
m21_1323 -> m21_1316  [key=0, style=bold, color=blue];
m21_95 -> m21_96  [key=0, style=solid];
m21_96 -> m21_97  [key=0, style=solid];
m21_96 -> m21_51  [key=2, style=dotted];
m21_96 -> m21_98  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_99  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_100  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_101  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_102  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_103  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_104  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_105  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_106  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_107  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_108  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_109  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_96 -> m21_110  [key=1, style=dashed, color=darkseagreen4, label=l];
m21_97 -> m21_98  [key=0, style=solid];
m21_97 -> m21_97  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m21_98 -> m21_99  [key=0, style=solid];
m21_98 -> m21_24  [key=2, style=dotted];
m21_98 -> m21_98  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_99 -> m21_100  [key=0, style=solid];
m21_99 -> m21_24  [key=2, style=dotted];
m21_99 -> m21_99  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_100 -> m21_101  [key=0, style=solid];
m21_100 -> m21_24  [key=2, style=dotted];
m21_100 -> m21_100  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_101 -> m21_102  [key=0, style=solid];
m21_101 -> m21_24  [key=2, style=dotted];
m21_101 -> m21_101  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_102 -> m21_103  [key=0, style=solid];
m21_102 -> m21_24  [key=2, style=dotted];
m21_102 -> m21_102  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_103 -> m21_104  [key=0, style=solid];
m21_103 -> m21_24  [key=2, style=dotted];
m21_103 -> m21_103  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_104 -> m21_105  [key=0, style=solid];
m21_104 -> m21_24  [key=2, style=dotted];
m21_104 -> m21_104  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_105 -> m21_106  [key=0, style=solid];
m21_105 -> m21_24  [key=2, style=dotted];
m21_105 -> m21_105  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_106 -> m21_107  [key=0, style=solid];
m21_106 -> m21_24  [key=2, style=dotted];
m21_106 -> m21_106  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_107 -> m21_108  [key=0, style=solid];
m21_107 -> m21_24  [key=2, style=dotted];
m21_107 -> m21_107  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_108 -> m21_109  [key=0, style=solid];
m21_108 -> m21_24  [key=2, style=dotted];
m21_108 -> m21_108  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_109 -> m21_110  [key=0, style=solid];
m21_109 -> m21_24  [key=2, style=dotted];
m21_109 -> m21_109  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_110 -> m21_111  [key=0, style=solid];
m21_110 -> m21_24  [key=2, style=dotted];
m21_110 -> m21_110  [key=1, style=dashed, color=darkseagreen4, label=i];
m21_111 -> m21_95  [key=0, style=bold, color=blue];
m21_452 -> m21_453  [key=0, style=solid];
m21_453 -> m21_454  [key=0, style=solid];
m21_453 -> m21_457  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_453 -> m21_453  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_454 -> m21_455  [key=0, style=solid];
m21_454 -> m21_73  [key=2, style=dotted];
m21_454 -> m21_456  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_455 -> m21_452  [key=0, style=bold, color=blue];
m21_2569 -> m21_2570  [key=0, style=solid];
m21_2570 -> m21_2571  [key=0, style=solid];
m21_2570 -> m21_2579  [key=1, style=dashed, color=darkseagreen4, label=classRef];
m21_2571 -> m21_2572  [key=0, style=solid];
m21_2571 -> m21_2581  [key=2, style=dotted];
m21_2571 -> m21_2582  [key=2, style=dotted];
m21_2571 -> m21_2573  [key=1, style=dashed, color=darkseagreen4, label=s1];
m21_2579 -> m21_2580  [key=0, style=solid];
m21_2579 -> m21_73  [key=2, style=dotted];
m21_2579 -> m21_2583  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_2572 -> m21_2573  [key=0, style=solid];
m21_2572 -> m21_41  [key=2, style=dotted];
m21_2572 -> m21_2574  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2572 -> m21_2579  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2572 -> m21_2584  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2573 -> m21_2574  [key=0, style=solid];
m21_2573 -> m21_2579  [key=0, style=solid];
m21_2574 -> m21_2575  [key=0, style=solid];
m21_2574 -> m21_51  [key=2, style=dotted];
m21_2574 -> m21_2576  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2574 -> m21_2577  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2574 -> m21_2578  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2575 -> m21_2576  [key=0, style=solid];
m21_2575 -> m21_24  [key=2, style=dotted];
m21_2576 -> m21_2577  [key=0, style=solid];
m21_2576 -> m21_24  [key=2, style=dotted];
m21_2577 -> m21_2578  [key=0, style=solid];
m21_2577 -> m21_24  [key=2, style=dotted];
m21_2578 -> m21_2580  [key=0, style=solid];
m21_2578 -> m21_24  [key=2, style=dotted];
m21_2580 -> m21_2569  [key=0, style=bold, color=blue];
m21_2093 -> m21_2094  [key=0, style=solid];
m21_2094 -> m21_2095  [key=0, style=solid];
m21_2094 -> m21_2106  [key=2, style=dotted];
m21_2094 -> m21_2096  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2094 -> m21_2097  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2094 -> m21_2098  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2095 -> m21_2096  [key=0, style=solid];
m21_2095 -> m21_2107  [key=2, style=dotted];
m21_2095 -> m21_2097  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2096 -> m21_2097  [key=0, style=solid];
m21_2097 -> m21_2098  [key=0, style=solid];
m21_2098 -> m21_2099  [key=0, style=solid];
m21_2098 -> m21_188  [key=2, style=dotted];
m21_2098 -> m21_189  [key=2, style=dotted];
m21_2099 -> m21_2100  [key=0, style=solid];
m21_2099 -> m21_42  [key=2, style=dotted];
m21_2100 -> m21_2101  [key=0, style=solid];
m21_2100 -> m21_51  [key=2, style=dotted];
m21_2100 -> m21_2102  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m21_2100 -> m21_2103  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m21_2100 -> m21_2104  [key=1, style=dashed, color=darkseagreen4, label=newC1];
m21_2101 -> m21_2102  [key=0, style=solid];
m21_2101 -> m21_24  [key=2, style=dotted];
m21_2102 -> m21_2103  [key=0, style=solid];
m21_2102 -> m21_24  [key=2, style=dotted];
m21_2103 -> m21_2104  [key=0, style=solid];
m21_2103 -> m21_24  [key=2, style=dotted];
m21_2104 -> m21_2105  [key=0, style=solid];
m21_2104 -> m21_24  [key=2, style=dotted];
m21_2105 -> m21_2093  [key=0, style=bold, color=blue];
m21_3118 -> m21_3119  [key=0, style=solid];
m21_3119 -> m21_3120  [key=0, style=solid];
m21_3119 -> m21_3119  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3120 -> m21_3121  [key=0, style=solid];
m21_3120 -> m21_188  [key=2, style=dotted];
m21_3120 -> m21_309  [key=2, style=dotted];
m21_3121 -> m21_3122  [key=0, style=solid];
m21_3121 -> m21_3123  [key=2, style=dotted];
m21_3121 -> m21_3055  [key=2, style=dotted];
m21_3122 -> m21_3118  [key=0, style=bold, color=blue];
m21_1284 -> m21_1285  [key=0, style=solid];
m21_1285 -> m21_1286  [key=0, style=solid];
m21_1285 -> m21_1291  [key=2, style=dotted];
m21_1285 -> m21_1289  [key=1, style=dashed, color=darkseagreen4, label=guid];
m21_1286 -> m21_1287  [key=0, style=solid];
m21_1286 -> m21_1292  [key=2, style=dotted];
m21_1286 -> m21_142  [key=2, style=dotted];
m21_1286 -> m21_1288  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1289 -> m21_1290  [key=0, style=solid];
m21_1289 -> m21_24  [key=2, style=dotted];
m21_1287 -> m21_1288  [key=0, style=solid];
m21_1287 -> m21_24  [key=2, style=dotted];
m21_1288 -> m21_1289  [key=0, style=solid];
m21_1288 -> m21_51  [key=2, style=dotted];
m21_1290 -> m21_1284  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=2, style=dotted];
m21_1 -> m21_4  [key=2, style=dotted];
m21_1 -> m21_15  [key=2, style=dotted];
m21_1 -> m21_11  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1 -> m21_12  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1 -> m21_13  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_2 -> m21_0  [key=0, style=bold, color=blue];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_16  [key=2, style=dotted];
m21_2 -> m21_17  [key=2, style=dotted];
m21_2 -> m21_4  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_2 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_2 -> m21_8  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_2698 -> m21_2699  [key=0, style=solid];
m21_2699 -> m21_2700  [key=0, style=solid];
m21_2700 -> m21_2698  [key=0, style=bold, color=blue];
m21_3313 -> m21_3314  [key=0, style=solid];
m21_3314 -> m21_3315  [key=0, style=solid];
m21_3314 -> m21_73  [key=2, style=dotted];
m21_3314 -> m21_3316  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3315 -> m21_3313  [key=0, style=bold, color=blue];
m21_1196 -> m21_1197  [key=0, style=solid];
m21_1197 -> m21_1198  [key=0, style=solid];
m21_1197 -> m21_1200  [key=2, style=dotted];
m21_1197 -> m21_142  [key=2, style=dotted];
m21_1198 -> m21_1199  [key=0, style=solid];
m21_1198 -> m21_24  [key=2, style=dotted];
m21_1199 -> m21_1196  [key=0, style=bold, color=blue];
m21_3654 -> m21_3655  [key=0, style=solid];
m21_3655 -> m21_3656  [key=0, style=solid];
m21_3655 -> m21_3658  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3655 -> m21_3655  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3656 -> m21_3657  [key=0, style=solid];
m21_3656 -> m21_19  [key=2, style=dotted];
m21_3656 -> m21_3661  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3656 -> m21_3664  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_3658 -> m21_3659  [key=0, style=solid];
m21_3658 -> m21_16  [key=2, style=dotted];
m21_3658 -> m21_386  [key=2, style=dotted];
m21_3658 -> m21_3660  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_3658 -> m21_3661  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_3658 -> m21_3664  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_3657 -> m21_3658  [key=0, style=solid];
m21_3661 -> m21_3662  [key=0, style=solid];
m21_3661 -> m21_73  [key=2, style=dotted];
m21_3661 -> m21_3663  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3659 -> m21_3660  [key=0, style=solid];
m21_3659 -> m21_18  [key=2, style=dotted];
m21_3660 -> m21_3661  [key=0, style=solid];
m21_3660 -> m21_18  [key=2, style=dotted];
m21_3662 -> m21_3654  [key=0, style=bold, color=blue];
m21_2520 -> m21_2521  [key=0, style=solid];
m21_2521 -> m21_2522  [key=0, style=solid];
m21_2521 -> m21_2523  [key=2, style=dotted];
m21_2522 -> m21_2520  [key=0, style=bold, color=blue];
m21_2837 -> m21_2838  [key=0, style=solid];
m21_2838 -> m21_2839  [key=0, style=solid];
m21_2838 -> m21_2842  [key=2, style=dotted];
m21_2839 -> m21_2840  [key=0, style=solid];
m21_2839 -> m21_41  [key=2, style=dotted];
m21_2840 -> m21_2841  [key=0, style=solid];
m21_2840 -> m21_42  [key=2, style=dotted];
m21_2841 -> m21_2837  [key=0, style=bold, color=blue];
m21_1591 -> m21_1592  [key=0, style=solid];
m21_1592 -> m21_1593  [key=0, style=solid];
m21_1593 -> m21_1591  [key=0, style=bold, color=blue];
m21_29 -> m21_30  [key=0, style=solid];
m21_30 -> m21_31  [key=0, style=solid];
m21_30 -> m21_32  [key=2, style=dotted];
m21_30 -> m21_25  [key=2, style=dotted];
m21_31 -> m21_29  [key=0, style=bold, color=blue];
m21_1250 -> m21_1251  [key=0, style=solid];
m21_1251 -> m21_1252  [key=0, style=solid];
m21_1251 -> m21_1260  [key=2, style=dotted];
m21_1251 -> m21_41  [key=2, style=dotted];
m21_1251 -> m21_1254  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1251 -> m21_1255  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1252 -> m21_1253  [key=0, style=solid];
m21_1252 -> m21_3308  [key=3, color=darkorchid, style=bold, label="Local variable string expected"];
m21_1254 -> m21_1255  [key=0, style=solid];
m21_1254 -> m21_42  [key=2, style=dotted];
m21_1255 -> m21_1256  [key=0, style=solid];
m21_1255 -> m21_51  [key=2, style=dotted];
m21_1255 -> m21_1257  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1255 -> m21_1258  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1253 -> m21_1254  [key=0, style=solid];
m21_1256 -> m21_1257  [key=0, style=solid];
m21_1256 -> m21_24  [key=2, style=dotted];
m21_1257 -> m21_1258  [key=0, style=solid];
m21_1257 -> m21_24  [key=2, style=dotted];
m21_1258 -> m21_1259  [key=0, style=solid];
m21_1258 -> m21_24  [key=2, style=dotted];
m21_1259 -> m21_1250  [key=0, style=bold, color=blue];
m21_2557 -> m21_2558  [key=0, style=solid];
m21_2558 -> m21_2559  [key=0, style=solid];
m21_2558 -> m21_19  [key=2, style=dotted];
m21_2558 -> m21_2560  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m21_2558 -> m21_2563  [key=1, style=dashed, color=darkseagreen4, label=serializer1];
m21_2559 -> m21_2560  [key=0, style=solid];
m21_2559 -> m21_1194  [key=2, style=dotted];
m21_2559 -> m21_562  [key=2, style=dotted];
m21_2560 -> m21_2561  [key=0, style=solid];
m21_2563 -> m21_2564  [key=0, style=solid];
m21_2563 -> m21_2568  [key=2, style=dotted];
m21_2563 -> m21_2565  [key=1, style=dashed, color=darkseagreen4, label=z];
m21_2563 -> m21_2566  [key=1, style=dashed, color=darkseagreen4, label=z];
m21_2561 -> m21_2562  [key=0, style=solid];
m21_2561 -> m21_2561  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2562 -> m21_2563  [key=0, style=solid];
m21_2562 -> m21_16  [key=2, style=dotted];
m21_2562 -> m21_386  [key=2, style=dotted];
m21_2564 -> m21_2565  [key=0, style=solid];
m21_2564 -> m21_24  [key=2, style=dotted];
m21_2565 -> m21_2566  [key=0, style=solid];
m21_2565 -> m21_24  [key=2, style=dotted];
m21_2566 -> m21_2567  [key=0, style=solid];
m21_2566 -> m21_24  [key=2, style=dotted];
m21_2567 -> m21_2557  [key=0, style=bold, color=blue];
m21_1736 -> m21_1737  [key=0, style=solid];
m21_1737 -> m21_1738  [key=0, style=solid];
m21_1737 -> m21_1737  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1738 -> m21_1739  [key=0, style=solid];
m21_1738 -> m21_480  [key=2, style=dotted];
m21_1739 -> m21_1740  [key=0, style=solid];
m21_1739 -> m21_816  [key=2, style=dotted];
m21_1739 -> m21_51  [key=2, style=dotted];
m21_1739 -> m21_1741  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1739 -> m21_1742  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1739 -> m21_1743  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1740 -> m21_1741  [key=0, style=solid];
m21_1740 -> m21_843  [key=2, style=dotted];
m21_1741 -> m21_1742  [key=0, style=solid];
m21_1741 -> m21_24  [key=2, style=dotted];
m21_1742 -> m21_1743  [key=0, style=solid];
m21_1742 -> m21_24  [key=2, style=dotted];
m21_1743 -> m21_1744  [key=0, style=solid];
m21_1743 -> m21_24  [key=2, style=dotted];
m21_1744 -> m21_1736  [key=0, style=bold, color=blue];
m21_336 -> m21_337  [key=0, style=solid];
m21_337 -> m21_338  [key=0, style=solid];
m21_337 -> m21_347  [key=2, style=dotted];
m21_337 -> m21_339  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_337 -> m21_340  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_337 -> m21_341  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_338 -> m21_339  [key=0, style=solid];
m21_339 -> m21_340  [key=0, style=solid];
m21_339 -> m21_334  [key=2, style=dotted];
m21_339 -> m21_335  [key=2, style=dotted];
m21_340 -> m21_341  [key=0, style=solid];
m21_341 -> m21_342  [key=0, style=solid];
m21_341 -> m21_41  [key=2, style=dotted];
m21_341 -> m21_343  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_342 -> m21_343  [key=0, style=solid];
m21_342 -> m21_42  [key=2, style=dotted];
m21_343 -> m21_344  [key=0, style=solid];
m21_343 -> m21_51  [key=2, style=dotted];
m21_343 -> m21_345  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_344 -> m21_345  [key=0, style=solid];
m21_344 -> m21_24  [key=2, style=dotted];
m21_345 -> m21_346  [key=0, style=solid];
m21_345 -> m21_24  [key=2, style=dotted];
m21_346 -> m21_336  [key=0, style=bold, color=blue];
m21_3086 -> m21_3087  [key=0, style=solid];
m21_3087 -> m21_3088  [key=0, style=solid];
m21_3088 -> m21_3089  [key=0, style=solid];
m21_3088 -> m21_3096  [key=2, style=dotted];
m21_3088 -> m21_3090  [key=1, style=dashed, color=darkseagreen4, label=testCulture];
m21_3089 -> m21_3090  [key=0, style=solid];
m21_3090 -> m21_3091  [key=0, style=solid];
m21_3091 -> m21_3092  [key=0, style=solid];
m21_3091 -> m21_3091  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3092 -> m21_3093  [key=0, style=solid];
m21_3092 -> m21_51  [key=2, style=dotted];
m21_3092 -> m21_3094  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_3093 -> m21_3094  [key=0, style=solid];
m21_3093 -> m21_24  [key=2, style=dotted];
m21_3094 -> m21_3095  [key=0, style=solid];
m21_3094 -> m21_24  [key=2, style=dotted];
m21_3095 -> m21_3086  [key=0, style=bold, color=blue];
m21_1568 -> m21_1569  [key=0, style=solid];
m21_1569 -> m21_1570  [key=0, style=solid];
m21_1569 -> m21_1581  [key=2, style=dotted];
m21_1569 -> m21_1571  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1569 -> m21_1572  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1569 -> m21_1573  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1569 -> m21_1577  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1569 -> m21_1578  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1569 -> m21_1579  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_1570 -> m21_1571  [key=0, style=solid];
m21_1570 -> m21_209  [key=2, style=dotted];
m21_1571 -> m21_1572  [key=0, style=solid];
m21_1571 -> m21_147  [key=2, style=dotted];
m21_1572 -> m21_1573  [key=0, style=solid];
m21_1572 -> m21_147  [key=2, style=dotted];
m21_1573 -> m21_1574  [key=0, style=solid];
m21_1573 -> m21_41  [key=2, style=dotted];
m21_1573 -> m21_1575  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1577 -> m21_1578  [key=0, style=solid];
m21_1577 -> m21_52  [key=2, style=dotted];
m21_1577 -> m21_24  [key=2, style=dotted];
m21_1578 -> m21_1579  [key=0, style=solid];
m21_1578 -> m21_52  [key=2, style=dotted];
m21_1578 -> m21_24  [key=2, style=dotted];
m21_1579 -> m21_1580  [key=0, style=solid];
m21_1579 -> m21_52  [key=2, style=dotted];
m21_1579 -> m21_24  [key=2, style=dotted];
m21_1574 -> m21_1575  [key=0, style=solid];
m21_1574 -> m21_24  [key=2, style=dotted];
m21_1575 -> m21_1576  [key=0, style=solid];
m21_1575 -> m21_51  [key=2, style=dotted];
m21_1575 -> m21_1577  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m21_1575 -> m21_1578  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m21_1575 -> m21_1579  [key=1, style=dashed, color=darkseagreen4, label=deserializedObject];
m21_1576 -> m21_1577  [key=0, style=solid];
m21_1576 -> m21_843  [key=2, style=dotted];
m21_1580 -> m21_1568  [key=0, style=bold, color=blue];
m21_3021 -> m21_3022  [key=0, style=solid];
m21_3022 -> m21_3023  [key=0, style=solid];
m21_3022 -> m21_3022  [key=3, color=darkorchid, style=bold, label="Local variable string input"];
m21_3023 -> m21_3024  [key=0, style=solid];
m21_3023 -> m21_1752  [key=2, style=dotted];
m21_3023 -> m21_3026  [key=1, style=dashed, color=darkseagreen4, label=uri];
m21_3024 -> m21_3025  [key=0, style=solid];
m21_3024 -> m21_142  [key=2, style=dotted];
m21_3026 -> m21_3027  [key=0, style=solid];
m21_3026 -> m21_24  [key=2, style=dotted];
m21_3025 -> m21_3026  [key=0, style=solid];
m21_3025 -> m21_51  [key=2, style=dotted];
m21_3027 -> m21_3021  [key=0, style=bold, color=blue];
m21_4104 -> m21_4105  [key=0, style=solid];
m21_4105 -> m21_4106  [key=0, style=solid];
m21_4106 -> m21_4104  [key=0, style=bold, color=blue];
m21_1661 -> m21_1662  [key=0, style=solid];
m21_1662 -> m21_1663  [key=0, style=solid];
m21_1662 -> m21_1665  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1662 -> m21_1662  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1663 -> m21_1664  [key=0, style=solid];
m21_1663 -> m21_51  [key=2, style=dotted];
m21_1665 -> m21_1666  [key=0, style=solid];
m21_1665 -> m21_51  [key=2, style=dotted];
m21_1665 -> m21_1667  [key=1, style=dashed, color=darkseagreen4, label=n];
m21_1665 -> m21_1668  [key=1, style=dashed, color=darkseagreen4, label=n];
m21_1665 -> m21_1669  [key=1, style=dashed, color=darkseagreen4, label=n];
m21_1665 -> m21_1670  [key=1, style=dashed, color=darkseagreen4, label=n];
m21_1664 -> m21_1665  [key=0, style=solid];
m21_1664 -> m21_24  [key=2, style=dotted];
m21_1666 -> m21_1667  [key=0, style=solid];
m21_1666 -> m21_1291  [key=2, style=dotted];
m21_1666 -> m21_24  [key=2, style=dotted];
m21_1667 -> m21_1668  [key=0, style=solid];
m21_1667 -> m21_1291  [key=2, style=dotted];
m21_1667 -> m21_24  [key=2, style=dotted];
m21_1668 -> m21_1669  [key=0, style=solid];
m21_1668 -> m21_24  [key=2, style=dotted];
m21_1669 -> m21_1670  [key=0, style=solid];
m21_1669 -> m21_24  [key=2, style=dotted];
m21_1670 -> m21_1671  [key=0, style=solid];
m21_1670 -> m21_24  [key=2, style=dotted];
m21_1671 -> m21_1661  [key=0, style=bold, color=blue];
m21_4359 -> m21_4360  [key=0, style=solid];
m21_4360 -> m21_4361  [key=0, style=solid];
m21_4360 -> m21_4364  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_4360 -> m21_4360  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m21_4361 -> m21_4362  [key=0, style=solid];
m21_4361 -> m21_73  [key=2, style=dotted];
m21_4361 -> m21_4363  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_4362 -> m21_4359  [key=0, style=bold, color=blue];
m21_2720 -> m21_2721  [key=0, style=solid, color=red];
m21_2721 -> m21_2722  [key=0, style=solid, color=red];
m21_2721 -> m21_2736  [key=2, style=dotted, color=red];
m21_2721 -> m21_2723  [key=1, style=dashed, color=red, label=nullableStructPropertyClass];
m21_2721 -> m21_2727  [key=1, style=dashed, color=red, label=nullableStructPropertyClass];
m21_2722 -> m21_2723  [key=0, style=solid, color=red];
m21_2722 -> m21_2737  [key=2, style=dotted, color=red];
m21_2723 -> m21_2724  [key=0, style=solid, color=red];
m21_2723 -> m21_2737  [key=2, style=dotted, color=red];
m21_2727 -> m21_2728  [key=0, style=solid];
m21_2727 -> m21_142  [key=2, style=dotted];
m21_2724 -> m21_2725  [key=0, style=solid, color=red];
m21_2724 -> m21_2736  [key=2, style=dotted, color=red];
m21_2724 -> m21_2726  [key=1, style=dashed, color=red, label=barWithNull];
m21_2724 -> m21_2731  [key=1, style=dashed, color=red, label=barWithNull];
m21_2725 -> m21_2726  [key=0, style=solid, color=red];
m21_2725 -> m21_2737  [key=2, style=dotted, color=red];
m21_2726 -> m21_2727  [key=0, style=solid, color=red];
m21_2731 -> m21_2732  [key=0, style=solid];
m21_2731 -> m21_142  [key=2, style=dotted];
m21_2728 -> m21_2729  [key=0, style=solid];
m21_2728 -> m21_2738  [key=2, style=dotted];
m21_2728 -> m21_2730  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_2729 -> m21_2730  [key=0, style=solid];
m21_2729 -> m21_24  [key=2, style=dotted];
m21_2730 -> m21_2731  [key=0, style=solid];
m21_2730 -> m21_24  [key=2, style=dotted];
m21_2732 -> m21_2733  [key=0, style=solid];
m21_2732 -> m21_2738  [key=2, style=dotted];
m21_2732 -> m21_2734  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_2733 -> m21_2734  [key=0, style=solid];
m21_2733 -> m21_24  [key=2, style=dotted];
m21_2734 -> m21_2735  [key=0, style=solid];
m21_2734 -> m21_24  [key=2, style=dotted];
m21_2735 -> m21_2720  [key=0, style=bold, color=blue];
m21_3940 -> m21_3941  [key=0, style=solid];
m21_3941 -> m21_3942  [key=0, style=solid];
m21_3941 -> m21_209  [key=2, style=dotted];
m21_3941 -> m21_3947  [key=2, style=dotted];
m21_3941 -> m21_142  [key=2, style=dotted];
m21_3941 -> m21_3943  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3942 -> m21_3943  [key=0, style=solid];
m21_3942 -> m21_24  [key=2, style=dotted];
m21_3943 -> m21_3944  [key=0, style=solid];
m21_3943 -> m21_51  [key=2, style=dotted];
m21_3943 -> m21_3945  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_3944 -> m21_3945  [key=0, style=solid];
m21_3944 -> m21_3947  [key=2, style=dotted];
m21_3944 -> m21_3948  [key=2, style=dotted];
m21_3944 -> m21_24  [key=2, style=dotted];
m21_3945 -> m21_3946  [key=0, style=solid];
m21_3945 -> m21_3947  [key=2, style=dotted];
m21_3945 -> m21_3948  [key=2, style=dotted];
m21_3945 -> m21_24  [key=2, style=dotted];
m21_3946 -> m21_3940  [key=0, style=bold, color=blue];
m21_1459 -> m21_1460  [key=0, style=solid];
m21_1460 -> m21_1461  [key=0, style=solid];
m21_1460 -> m21_1460  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1461 -> m21_1462  [key=0, style=solid];
m21_1461 -> m21_51  [key=2, style=dotted];
m21_1462 -> m21_1463  [key=0, style=solid];
m21_1462 -> m21_24  [key=2, style=dotted];
m21_1463 -> m21_1459  [key=0, style=bold, color=blue];
m21_3604 -> m21_3605  [key=0, style=solid];
m21_3605 -> m21_3606  [key=0, style=solid];
m21_3605 -> m21_3608  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3605 -> m21_3605  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3606 -> m21_3607  [key=0, style=solid];
m21_3606 -> m21_188  [key=2, style=dotted];
m21_3608 -> m21_3609  [key=0, style=solid];
m21_3608 -> m21_16  [key=2, style=dotted];
m21_3608 -> m21_386  [key=2, style=dotted];
m21_3608 -> m21_20  [key=2, style=dotted];
m21_3608 -> m21_3610  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_3607 -> m21_3608  [key=0, style=solid];
m21_3607 -> m21_879  [key=2, style=dotted];
m21_3609 -> m21_3610  [key=0, style=solid];
m21_3609 -> m21_843  [key=2, style=dotted];
m21_3610 -> m21_3611  [key=0, style=solid];
m21_3610 -> m21_24  [key=2, style=dotted];
m21_3611 -> m21_3604  [key=0, style=bold, color=blue];
m21_3510 -> m21_3511  [key=0, style=solid];
m21_3511 -> m21_3512  [key=0, style=solid];
m21_3511 -> m21_209  [key=2, style=dotted];
m21_3511 -> m21_1147  [key=2, style=dotted];
m21_3512 -> m21_3513  [key=0, style=solid];
m21_3512 -> m21_188  [key=2, style=dotted];
m21_3512 -> m21_211  [key=2, style=dotted];
m21_3512 -> m21_3516  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3513 -> m21_3514  [key=0, style=solid];
m21_3513 -> m21_480  [key=2, style=dotted];
m21_3513 -> m21_3515  [key=1, style=dashed, color=darkseagreen4, label=o];
m21_3516 -> m21_3517  [key=0, style=solid];
m21_3516 -> m21_188  [key=2, style=dotted];
m21_3516 -> m21_309  [key=2, style=dotted];
m21_3516 -> m21_3518  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3516 -> m21_3519  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3514 -> m21_3515  [key=0, style=solid];
m21_3514 -> m21_965  [key=2, style=dotted];
m21_3514 -> m21_1725  [key=2, style=dotted];
m21_3514 -> m21_3521  [key=2, style=dotted];
m21_3514 -> m21_3522  [key=2, style=dotted];
m21_3515 -> m21_3516  [key=0, style=solid];
m21_3515 -> m21_965  [key=2, style=dotted];
m21_3515 -> m21_1725  [key=2, style=dotted];
m21_3515 -> m21_3521  [key=2, style=dotted];
m21_3515 -> m21_3522  [key=2, style=dotted];
m21_3517 -> m21_3518  [key=0, style=solid];
m21_3517 -> m21_24  [key=2, style=dotted];
m21_3518 -> m21_3519  [key=0, style=solid];
m21_3518 -> m21_1147  [key=2, style=dotted];
m21_3518 -> m21_24  [key=2, style=dotted];
m21_3519 -> m21_3520  [key=0, style=solid];
m21_3519 -> m21_1147  [key=2, style=dotted];
m21_3519 -> m21_24  [key=2, style=dotted];
m21_3520 -> m21_3510  [key=0, style=bold, color=blue];
m21_2751 -> m21_2752  [key=0, style=solid];
m21_2752 -> m21_2753  [key=0, style=solid];
m21_2752 -> m21_2757  [key=2, style=dotted];
m21_2753 -> m21_2754  [key=0, style=solid];
m21_2753 -> m21_142  [key=2, style=dotted];
m21_2754 -> m21_2755  [key=0, style=solid];
m21_2754 -> m21_188  [key=2, style=dotted];
m21_2754 -> m21_309  [key=2, style=dotted];
m21_2755 -> m21_2756  [key=0, style=solid];
m21_2755 -> m21_24  [key=2, style=dotted];
m21_2756 -> m21_2751  [key=0, style=bold, color=blue];
m21_11 -> m21_12  [key=0, style=solid];
m21_11 -> m21_22  [key=2, style=dotted];
m21_12 -> m21_13  [key=0, style=solid];
m21_12 -> m21_23  [key=2, style=dotted];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_24  [key=2, style=dotted];
m21_2417 -> m21_2418  [key=0, style=solid];
m21_2418 -> m21_2419  [key=0, style=solid];
m21_2418 -> m21_2422  [key=2, style=dotted];
m21_2418 -> m21_2423  [key=2, style=dotted];
m21_2418 -> m21_2424  [key=2, style=dotted];
m21_2419 -> m21_2420  [key=0, style=solid];
m21_2419 -> m21_2425  [key=2, style=dotted];
m21_2419 -> m21_2426  [key=2, style=dotted];
m21_2419 -> m21_1341  [key=2, style=dotted];
m21_2420 -> m21_2421  [key=0, style=solid];
m21_2420 -> m21_24  [key=2, style=dotted];
m21_2421 -> m21_2417  [key=0, style=bold, color=blue];
m21_4287 -> m21_4288  [key=0, style=solid];
m21_4288 -> m21_4289  [key=0, style=solid];
m21_4288 -> m21_4288  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_4289 -> m21_4290  [key=0, style=solid];
m21_4289 -> m21_51  [key=2, style=dotted];
m21_4289 -> m21_4291  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_4290 -> m21_4291  [key=0, style=solid];
m21_4290 -> m21_24  [key=2, style=dotted];
m21_4291 -> m21_4292  [key=0, style=solid];
m21_4291 -> m21_24  [key=2, style=dotted];
m21_4292 -> m21_4287  [key=0, style=bold, color=blue];
m21_2919 -> m21_2920  [key=0, style=solid];
m21_2920 -> m21_2921  [key=0, style=solid];
m21_2920 -> m21_2439  [key=2, style=dotted];
m21_2921 -> m21_2919  [key=0, style=bold, color=blue];
m21_3993 -> m21_3994  [key=0, style=solid];
m21_3993 -> m21_3996  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_3993 -> m21_3997  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m21_3993 -> m21_3998  [key=1, style=dashed, color=darkseagreen4, label=object];
m21_3993 -> m21_3999  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m21_3993 -> m21_4004  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ITypeDescriptorContext"];
m21_3993 -> m21_4005  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ITypeDescriptorContext"];
m21_3993 -> m21_4007  [key=1, style=dashed, color=darkseagreen4, label="System.ComponentModel.ITypeDescriptorContext"];
m21_3994 -> m21_3995  [key=0, style=solid];
m21_3994 -> m21_3996  [key=0, style=solid];
m21_3996 -> m21_3997  [key=0, style=solid];
m21_3996 -> m21_4007  [key=0, style=solid];
m21_3997 -> m21_3998  [key=0, style=solid];
m21_3997 -> m21_4007  [key=0, style=solid];
m21_3998 -> m21_3999  [key=0, style=solid];
m21_3998 -> m21_4004  [key=1, style=dashed, color=darkseagreen4, label=size];
m21_3999 -> m21_4000  [key=0, style=solid];
m21_3999 -> m21_4001  [key=0, style=solid];
m21_4004 -> m21_4005  [key=0, style=solid];
m21_4004 -> m21_4009  [key=2, style=dotted];
m21_4004 -> m21_4004  [key=1, style=dashed, color=darkseagreen4, label=num];
m21_4005 -> m21_4006  [key=0, style=solid];
m21_4005 -> m21_4009  [key=2, style=dotted];
m21_4005 -> m21_4005  [key=1, style=dashed, color=darkseagreen4, label=num];
m21_4007 -> m21_4008  [key=0, style=solid];
m21_4007 -> m21_4011  [key=2, style=dotted];
m21_3995 -> m21_4008  [key=0, style=solid];
m21_3995 -> m21_2139  [key=2, style=dotted];
m21_4000 -> m21_4001  [key=0, style=solid];
m21_4000 -> m21_4004  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m21_4000 -> m21_4005  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m21_4000 -> m21_4007  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m21_4001 -> m21_4002  [key=0, style=solid];
m21_4001 -> m21_3990  [key=2, style=dotted];
m21_4001 -> m21_4004  [key=1, style=dashed, color=darkseagreen4, label=converter];
m21_4001 -> m21_4005  [key=1, style=dashed, color=darkseagreen4, label=converter];
m21_4002 -> m21_4003  [key=0, style=solid];
m21_4002 -> m21_4004  [key=1, style=dashed, color=darkseagreen4, label=strArray];
m21_4002 -> m21_4005  [key=1, style=dashed, color=darkseagreen4, label=strArray];
m21_4002 -> m21_4006  [key=1, style=dashed, color=darkseagreen4, label=strArray];
m21_4003 -> m21_4004  [key=0, style=solid];
m21_4003 -> m21_97  [key=3, color=darkorchid, style=bold, label="Local variable int num"];
m21_4006 -> m21_4008  [key=0, style=solid];
m21_4006 -> m21_4010  [key=2, style=dotted];
m21_4008 -> m21_3993  [key=0, style=bold, color=blue];
m21_3005 -> m21_3006  [key=0, style=solid];
m21_3006 -> m21_3007  [key=0, style=solid];
m21_3007 -> m21_3008  [key=0, style=solid];
m21_3007 -> m21_814  [key=2, style=dotted];
m21_3007 -> m21_3010  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3008 -> m21_3009  [key=0, style=solid];
m21_3008 -> m21_3015  [key=2, style=dotted];
m21_3008 -> m21_3012  [key=1, style=dashed, color=darkseagreen4, label=sw];
m21_3010 -> m21_3011  [key=0, style=solid];
m21_3010 -> m21_3017  [key=2, style=dotted];
m21_3010 -> m21_3018  [key=2, style=dotted];
m21_3009 -> m21_3010  [key=0, style=solid];
m21_3009 -> m21_3016  [key=2, style=dotted];
m21_3009 -> m21_3011  [key=1, style=dashed, color=darkseagreen4, label=jw];
m21_3012 -> m21_3013  [key=0, style=solid];
m21_3012 -> m21_3020  [key=2, style=dotted];
m21_3011 -> m21_3012  [key=0, style=solid];
m21_3011 -> m21_3019  [key=2, style=dotted];
m21_3013 -> m21_3014  [key=0, style=solid];
m21_3013 -> m21_24  [key=2, style=dotted];
m21_3014 -> m21_3005  [key=0, style=bold, color=blue];
m21_4378 -> m21_4379  [key=0, style=solid];
m21_4379 -> m21_4378  [key=0, style=bold, color=blue];
m21_2554 -> m21_2555  [key=0, style=solid];
m21_2555 -> m21_2556  [key=0, style=solid];
m21_2556 -> m21_2554  [key=0, style=bold, color=blue];
m21_3217 -> m21_3219  [key=0, style=solid];
m21_3219 -> m21_3217  [key=0, style=bold, color=blue];
m21_3220 -> m21_3221  [key=0, style=solid];
m21_3221 -> m21_3222  [key=0, style=solid];
m21_3221 -> m21_3224  [key=2, style=dotted];
m21_3222 -> m21_3223  [key=0, style=solid];
m21_3223 -> m21_3220  [key=0, style=bold, color=blue];
m21_1685 -> m21_1686  [key=0, style=solid];
m21_1686 -> m21_1685  [key=0, style=bold, color=blue];
m21_3124 -> m21_3125  [key=0, style=solid];
m21_3125 -> m21_3126  [key=0, style=solid];
m21_3125 -> m21_3129  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3125 -> m21_3125  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3126 -> m21_3127  [key=0, style=solid];
m21_3126 -> m21_73  [key=2, style=dotted];
m21_3126 -> m21_3128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3127 -> m21_3124  [key=0, style=bold, color=blue];
m21_2167 -> m21_2168  [key=0, style=solid];
m21_2167 -> m21_2170  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_2168 -> m21_2169  [key=0, style=solid];
m21_2168 -> m21_2170  [key=0, style=solid];
m21_2170 -> m21_2171  [key=0, style=solid];
m21_2170 -> m21_2172  [key=0, style=solid];
m21_2169 -> m21_2172  [key=0, style=solid];
m21_2171 -> m21_2170  [key=0, style=solid];
m21_2171 -> m21_2171  [key=1, style=dashed, color=darkseagreen4, label=entry];
m21_2172 -> m21_2167  [key=0, style=bold, color=blue];
m21_2624 -> m21_2625  [key=0, style=solid];
m21_2625 -> m21_2626  [key=0, style=solid];
m21_2625 -> m21_2628  [key=2, style=dotted];
m21_2625 -> m21_41  [key=2, style=dotted];
m21_2626 -> m21_2627  [key=0, style=solid];
m21_2626 -> m21_42  [key=2, style=dotted];
m21_2627 -> m21_2624  [key=0, style=bold, color=blue];
m21_1215 -> m21_1216  [key=0, style=solid];
m21_1216 -> m21_1217  [key=0, style=solid];
m21_1216 -> m21_1216  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1217 -> m21_1218  [key=0, style=solid];
m21_1217 -> m21_51  [key=2, style=dotted];
m21_1217 -> m21_1219  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1217 -> m21_1220  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1217 -> m21_1221  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1217 -> m21_1222  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1217 -> m21_1223  [key=1, style=dashed, color=darkseagreen4, label=wibble];
m21_1218 -> m21_1219  [key=0, style=solid];
m21_1218 -> m21_24  [key=2, style=dotted];
m21_1219 -> m21_1220  [key=0, style=solid];
m21_1219 -> m21_24  [key=2, style=dotted];
m21_1220 -> m21_1221  [key=0, style=solid];
m21_1220 -> m21_24  [key=2, style=dotted];
m21_1221 -> m21_1222  [key=0, style=solid];
m21_1221 -> m21_24  [key=2, style=dotted];
m21_1222 -> m21_1223  [key=0, style=solid];
m21_1222 -> m21_24  [key=2, style=dotted];
m21_1223 -> m21_1224  [key=0, style=solid];
m21_1223 -> m21_24  [key=2, style=dotted];
m21_1224 -> m21_1215  [key=0, style=bold, color=blue];
m21_1063 -> m21_1064  [key=0, style=solid];
m21_1064 -> m21_1065  [key=0, style=solid];
m21_1064 -> m21_1070  [key=2, style=dotted];
m21_1064 -> m21_142  [key=2, style=dotted];
m21_1065 -> m21_1066  [key=0, style=solid];
m21_1065 -> m21_24  [key=2, style=dotted];
m21_1066 -> m21_1067  [key=0, style=solid];
m21_1066 -> m21_51  [key=2, style=dotted];
m21_1066 -> m21_1068  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1067 -> m21_1068  [key=0, style=solid];
m21_1067 -> m21_24  [key=2, style=dotted];
m21_1068 -> m21_1069  [key=0, style=solid];
m21_1068 -> m21_24  [key=2, style=dotted];
m21_1069 -> m21_1063  [key=0, style=bold, color=blue];
m21_297 -> m21_298  [key=0, style=solid];
m21_298 -> m21_299  [key=0, style=solid];
m21_298 -> m21_306  [key=2, style=dotted];
m21_299 -> m21_300  [key=0, style=solid];
m21_299 -> m21_307  [key=2, style=dotted];
m21_299 -> m21_147  [key=2, style=dotted];
m21_299 -> m21_209  [key=2, style=dotted];
m21_300 -> m21_301  [key=0, style=solid];
m21_300 -> m21_188  [key=2, style=dotted];
m21_300 -> m21_308  [key=2, style=dotted];
m21_300 -> m21_211  [key=2, style=dotted];
m21_301 -> m21_302  [key=0, style=solid];
m21_301 -> m21_24  [key=2, style=dotted];
m21_302 -> m21_303  [key=0, style=solid];
m21_302 -> m21_302  [key=3, color=darkorchid, style=bold, label="Local variable string deserializeJson"];
m21_303 -> m21_304  [key=0, style=solid];
m21_303 -> m21_188  [key=2, style=dotted];
m21_303 -> m21_308  [key=2, style=dotted];
m21_303 -> m21_309  [key=2, style=dotted];
m21_304 -> m21_305  [key=0, style=solid];
m21_304 -> m21_24  [key=2, style=dotted];
m21_305 -> m21_297  [key=0, style=bold, color=blue];
m21_2537 -> m21_2538  [key=0, style=solid];
m21_2538 -> m21_2539  [key=0, style=solid];
m21_2538 -> m21_982  [key=2, style=dotted];
m21_2538 -> m21_2540  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2538 -> m21_2541  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2538 -> m21_2542  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2539 -> m21_2540  [key=0, style=solid];
m21_2539 -> m21_24  [key=2, style=dotted];
m21_2540 -> m21_2541  [key=0, style=solid];
m21_2540 -> m21_24  [key=2, style=dotted];
m21_2541 -> m21_2542  [key=0, style=solid];
m21_2541 -> m21_24  [key=2, style=dotted];
m21_2542 -> m21_2543  [key=0, style=solid];
m21_2542 -> m21_24  [key=2, style=dotted];
m21_2543 -> m21_2537  [key=0, style=bold, color=blue];
m21_851 -> m21_852  [key=0, style=solid];
m21_852 -> m21_853  [key=0, style=solid];
m21_852 -> m21_847  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_853 -> m21_854  [key=0, style=solid];
m21_853 -> m21_51  [key=2, style=dotted];
m21_853 -> m21_855  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_853 -> m21_856  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_853 -> m21_857  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_854 -> m21_855  [key=0, style=solid];
m21_854 -> m21_843  [key=2, style=dotted];
m21_855 -> m21_856  [key=0, style=solid];
m21_855 -> m21_24  [key=2, style=dotted];
m21_856 -> m21_857  [key=0, style=solid];
m21_856 -> m21_843  [key=2, style=dotted];
m21_857 -> m21_858  [key=0, style=solid];
m21_857 -> m21_24  [key=2, style=dotted];
m21_858 -> m21_851  [key=0, style=bold, color=blue];
m21_1123 -> m21_1124  [key=0, style=solid];
m21_1124 -> m21_1125  [key=0, style=solid];
m21_1124 -> m21_1126  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1124 -> m21_1128  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1124 -> m21_1129  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1124 -> m21_1124  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1125 -> m21_1126  [key=0, style=solid];
m21_1125 -> m21_1134  [key=2, style=dotted];
m21_1126 -> m21_1127  [key=0, style=solid];
m21_1126 -> m21_1135  [key=2, style=dotted];
m21_1126 -> m21_1132  [key=1, style=dashed, color=darkseagreen4, label=javaScriptSerializerResult];
m21_1128 -> m21_1129  [key=0, style=solid];
m21_1128 -> m21_1120  [key=2, style=dotted];
m21_1128 -> m21_1121  [key=2, style=dotted];
m21_1128 -> m21_1122  [key=2, style=dotted];
m21_1128 -> m21_1131  [key=1, style=dashed, color=darkseagreen4, label=dataContractResult];
m21_1129 -> m21_1130  [key=0, style=solid];
m21_1129 -> m21_51  [key=2, style=dotted];
m21_1129 -> m21_1131  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m21_1129 -> m21_1132  [key=1, style=dashed, color=darkseagreen4, label=jsonNetResult];
m21_1127 -> m21_1128  [key=0, style=solid];
m21_1127 -> m21_960  [key=2, style=dotted];
m21_1132 -> m21_1133  [key=0, style=solid];
m21_1132 -> m21_24  [key=2, style=dotted];
m21_1131 -> m21_1132  [key=0, style=solid];
m21_1131 -> m21_24  [key=2, style=dotted];
m21_1130 -> m21_1131  [key=0, style=solid];
m21_1130 -> m21_24  [key=2, style=dotted];
m21_1133 -> m21_1123  [key=0, style=bold, color=blue];
m21_4110 -> m21_4111  [key=0, style=solid];
m21_4111 -> m21_4112  [key=0, style=solid];
m21_4111 -> m21_4079  [key=2, style=dotted];
m21_4112 -> m21_4110  [key=0, style=bold, color=blue];
m21_1098 -> m21_1099  [key=0, style=solid];
m21_1099 -> m21_1100  [key=0, style=solid];
m21_1099 -> m21_73  [key=2, style=dotted];
m21_1099 -> m21_1101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1100 -> m21_1098  [key=0, style=bold, color=blue];
m21_3384 -> m21_3385  [key=0, style=solid];
m21_3385 -> m21_3386  [key=0, style=solid];
m21_3385 -> m21_571  [key=2, style=dotted];
m21_3385 -> m21_3387  [key=2, style=dotted];
m21_3386 -> m21_3384  [key=0, style=bold, color=blue];
m21_917 -> m21_918  [key=0, style=solid];
m21_918 -> m21_919  [key=0, style=solid];
m21_918 -> m21_926  [key=2, style=dotted];
m21_918 -> m21_920  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_918 -> m21_921  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_918 -> m21_922  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_918 -> m21_923  [key=1, style=dashed, color=darkseagreen4, label=baseWith];
m21_919 -> m21_920  [key=0, style=solid];
m21_920 -> m21_921  [key=0, style=solid];
m21_921 -> m21_922  [key=0, style=solid];
m21_922 -> m21_923  [key=0, style=solid];
m21_923 -> m21_924  [key=0, style=solid];
m21_923 -> m21_41  [key=2, style=dotted];
m21_924 -> m21_925  [key=0, style=solid];
m21_924 -> m21_42  [key=2, style=dotted];
m21_925 -> m21_917  [key=0, style=bold, color=blue];
m21_4241 -> m21_4242  [key=0, style=solid];
m21_4242 -> m21_4243  [key=0, style=solid];
m21_4242 -> m21_4248  [key=2, style=dotted];
m21_4243 -> m21_4244  [key=0, style=solid];
m21_4243 -> m21_41  [key=2, style=dotted];
m21_4243 -> m21_4245  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4244 -> m21_4245  [key=0, style=solid];
m21_4244 -> m21_42  [key=2, style=dotted];
m21_4245 -> m21_4246  [key=0, style=solid];
m21_4245 -> m21_51  [key=2, style=dotted];
m21_4246 -> m21_4247  [key=0, style=solid];
m21_4246 -> m21_24  [key=2, style=dotted];
m21_4247 -> m21_4241  [key=0, style=bold, color=blue];
m21_444 -> m21_445  [key=0, style=solid];
m21_445 -> m21_446  [key=0, style=solid];
m21_445 -> m21_445  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_446 -> m21_447  [key=0, style=solid];
m21_446 -> m21_51  [key=2, style=dotted];
m21_446 -> m21_448  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_446 -> m21_449  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_446 -> m21_450  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_447 -> m21_448  [key=0, style=solid];
m21_447 -> m21_24  [key=2, style=dotted];
m21_448 -> m21_449  [key=0, style=solid];
m21_448 -> m21_24  [key=2, style=dotted];
m21_449 -> m21_450  [key=0, style=solid];
m21_449 -> m21_24  [key=2, style=dotted];
m21_450 -> m21_451  [key=0, style=solid];
m21_450 -> m21_24  [key=2, style=dotted];
m21_451 -> m21_444  [key=0, style=bold, color=blue];
m21_4220 -> m21_4221  [key=0, style=solid];
m21_4221 -> m21_4222  [key=0, style=solid];
m21_4221 -> m21_1154  [key=2, style=dotted];
m21_4221 -> m21_1000  [key=2, style=dotted];
m21_4221 -> m21_4224  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4221 -> m21_4227  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4221 -> m21_4232  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4222 -> m21_4223  [key=0, style=solid];
m21_4222 -> m21_4228  [key=1, style=dashed, color=darkseagreen4, label=dateFormatString];
m21_4222 -> m21_4147  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m21_4224 -> m21_4225  [key=0, style=solid];
m21_4224 -> m21_189  [key=2, style=dotted];
m21_4224 -> m21_4226  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4224 -> m21_4228  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4227 -> m21_4228  [key=0, style=solid];
m21_4227 -> m21_24  [key=2, style=dotted];
m21_4232 -> m21_4233  [key=0, style=solid];
m21_4232 -> m21_24  [key=2, style=dotted];
m21_4223 -> m21_4224  [key=0, style=solid];
m21_4223 -> m21_188  [key=2, style=dotted];
m21_4223 -> m21_4226  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_4228 -> m21_4229  [key=0, style=solid];
m21_4228 -> m21_16  [key=2, style=dotted];
m21_4228 -> m21_386  [key=2, style=dotted];
m21_4226 -> m21_4227  [key=0, style=solid];
m21_4226 -> m21_309  [key=2, style=dotted];
m21_4225 -> m21_4226  [key=0, style=solid];
m21_4225 -> m21_24  [key=2, style=dotted];
m21_4229 -> m21_4230  [key=0, style=solid];
m21_4229 -> m21_3422  [key=2, style=dotted];
m21_4229 -> m21_4231  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4229 -> m21_4232  [key=1, style=dashed, color=darkseagreen4, label=v];
m21_4230 -> m21_4231  [key=0, style=solid];
m21_4230 -> m21_24  [key=2, style=dotted];
m21_4231 -> m21_4232  [key=0, style=solid];
m21_4231 -> m21_388  [key=2, style=dotted];
m21_4231 -> m21_24  [key=2, style=dotted];
m21_4233 -> m21_4220  [key=0, style=bold, color=blue];
m21_2703 -> m21_2704  [key=0, style=solid];
m21_2704 -> m21_2705  [key=0, style=solid];
m21_2705 -> m21_2703  [key=0, style=bold, color=blue];
m21_3847 -> m21_3848  [key=0, style=solid];
m21_3847 -> m21_3849  [key=1, style=dashed, color=darkseagreen4, label=TSecond];
m21_3848 -> m21_3849  [key=0, style=solid];
m21_3849 -> m21_3850  [key=0, style=solid];
m21_3850 -> m21_3847  [key=0, style=bold, color=blue];
m21_4336 -> m21_4337  [key=0, style=solid];
m21_4336 -> m21_4338  [key=3, color=darkorchid, style=bold, label="method methodReturn object ReadJson"];
m21_4337 -> m21_4338  [key=0, style=solid];
m21_4337 -> m21_20  [key=2, style=dotted];
m21_4338 -> m21_4339  [key=0, style=solid];
m21_4338 -> m21_4341  [key=2, style=dotted];
m21_4338 -> m21_1120  [key=2, style=dotted];
m21_4338 -> m21_3123  [key=2, style=dotted];
m21_4339 -> m21_4340  [key=0, style=solid];
m21_4340 -> m21_4336  [key=0, style=bold, color=blue];
m21_2993 -> m21_2994  [key=0, style=solid];
m21_2994 -> m21_2995  [key=0, style=solid];
m21_2994 -> m21_2992  [key=2, style=dotted];
m21_2994 -> m21_1291  [key=2, style=dotted];
m21_2994 -> m21_3004  [key=2, style=dotted];
m21_2994 -> m21_1155  [key=2, style=dotted];
m21_2994 -> m21_1752  [key=2, style=dotted];
m21_2994 -> m21_2998  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2994 -> m21_2999  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2994 -> m21_3000  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2994 -> m21_3001  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2994 -> m21_3002  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2995 -> m21_2996  [key=0, style=solid];
m21_2995 -> m21_41  [key=2, style=dotted];
m21_2995 -> m21_2997  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2998 -> m21_2999  [key=0, style=solid];
m21_2998 -> m21_24  [key=2, style=dotted];
m21_2999 -> m21_3000  [key=0, style=solid];
m21_2999 -> m21_24  [key=2, style=dotted];
m21_3000 -> m21_3001  [key=0, style=solid];
m21_3000 -> m21_24  [key=2, style=dotted];
m21_3001 -> m21_3002  [key=0, style=solid];
m21_3001 -> m21_24  [key=2, style=dotted];
m21_3002 -> m21_3003  [key=0, style=solid];
m21_3002 -> m21_24  [key=2, style=dotted];
m21_2996 -> m21_2997  [key=0, style=solid];
m21_2996 -> m21_42  [key=2, style=dotted];
m21_2997 -> m21_2998  [key=0, style=solid];
m21_2997 -> m21_51  [key=2, style=dotted];
m21_2997 -> m21_2999  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2997 -> m21_3000  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2997 -> m21_3001  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2997 -> m21_3002  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_3003 -> m21_2993  [key=0, style=bold, color=blue];
m21_2375 -> m21_2376  [key=0, style=solid];
m21_2376 -> m21_2375  [key=0, style=bold, color=blue];
m21_2500 -> m21_2501  [key=0, style=solid];
m21_2500 -> m21_2502  [key=1, style=dashed, color=darkseagreen4, label=int];
m21_2501 -> m21_2502  [key=0, style=solid];
m21_2502 -> m21_2503  [key=0, style=solid];
m21_2503 -> m21_2500  [key=0, style=bold, color=blue];
m21_242 -> m21_243  [key=0, style=solid];
m21_243 -> m21_244  [key=0, style=solid];
m21_243 -> m21_51  [key=2, style=dotted];
m21_244 -> m21_245  [key=0, style=solid];
m21_244 -> m21_24  [key=2, style=dotted];
m21_245 -> m21_246  [key=0, style=solid];
m21_245 -> m21_248  [key=2, style=dotted];
m21_245 -> m21_249  [key=2, style=dotted];
m21_246 -> m21_247  [key=0, style=solid];
m21_246 -> m21_24  [key=2, style=dotted];
m21_247 -> m21_242  [key=0, style=bold, color=blue];
m21_2907 -> m21_2908  [key=0, style=solid];
m21_2908 -> m21_2909  [key=0, style=solid];
m21_2908 -> m21_2439  [key=2, style=dotted];
m21_2909 -> m21_2907  [key=0, style=bold, color=blue];
m21_2875 -> m21_2876  [key=0, style=solid];
m21_2876 -> m21_2877  [key=0, style=solid];
m21_2876 -> m21_2871  [key=2, style=dotted];
m21_2876 -> m21_2878  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2876 -> m21_2879  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2876 -> m21_2882  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2876 -> m21_2883  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_2877 -> m21_2878  [key=0, style=solid];
m21_2877 -> m21_335  [key=2, style=dotted];
m21_2878 -> m21_2879  [key=0, style=solid];
m21_2878 -> m21_335  [key=2, style=dotted];
m21_2879 -> m21_2880  [key=0, style=solid];
m21_2879 -> m21_41  [key=2, style=dotted];
m21_2879 -> m21_2881  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2882 -> m21_2883  [key=0, style=solid];
m21_2882 -> m21_24  [key=2, style=dotted];
m21_2883 -> m21_2884  [key=0, style=solid];
m21_2883 -> m21_24  [key=2, style=dotted];
m21_2880 -> m21_2881  [key=0, style=solid];
m21_2880 -> m21_42  [key=2, style=dotted];
m21_2881 -> m21_2882  [key=0, style=solid];
m21_2881 -> m21_51  [key=2, style=dotted];
m21_2881 -> m21_2883  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2881 -> m21_2884  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2881 -> m21_2885  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_2884 -> m21_2885  [key=0, style=solid];
m21_2884 -> m21_24  [key=2, style=dotted];
m21_2885 -> m21_2886  [key=0, style=solid];
m21_2885 -> m21_24  [key=2, style=dotted];
m21_2886 -> m21_2875  [key=0, style=bold, color=blue];
m21_19 -> m21_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Documentation.Samples.Linq.CreateJsonDeclaratively"];
m21_1704 -> m21_1705  [key=0, style=solid];
m21_1705 -> m21_1706  [key=0, style=solid];
m21_1705 -> m21_1705  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1706 -> m21_1707  [key=0, style=solid];
m21_1706 -> m21_188  [key=2, style=dotted];
m21_1706 -> m21_309  [key=2, style=dotted];
m21_1706 -> m21_1708  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1706 -> m21_1709  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1707 -> m21_1708  [key=0, style=solid];
m21_1707 -> m21_24  [key=2, style=dotted];
m21_1708 -> m21_1709  [key=0, style=solid];
m21_1708 -> m21_24  [key=2, style=dotted];
m21_1709 -> m21_1710  [key=0, style=solid];
m21_1709 -> m21_24  [key=2, style=dotted];
m21_1710 -> m21_1704  [key=0, style=bold, color=blue];
m21_1800 -> m21_1801  [key=0, style=solid];
m21_1801 -> m21_1802  [key=0, style=solid];
m21_1801 -> m21_1801  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1802 -> m21_1803  [key=0, style=solid];
m21_1802 -> m21_51  [key=2, style=dotted];
m21_1803 -> m21_1804  [key=0, style=solid];
m21_1803 -> m21_1808  [key=2, style=dotted];
m21_1803 -> m21_1805  [key=1, style=dashed, color=darkseagreen4, label=a];
m21_1803 -> m21_1806  [key=1, style=dashed, color=darkseagreen4, label=a];
m21_1804 -> m21_1805  [key=0, style=solid];
m21_1804 -> m21_24  [key=2, style=dotted];
m21_1805 -> m21_1806  [key=0, style=solid];
m21_1805 -> m21_24  [key=2, style=dotted];
m21_1806 -> m21_1807  [key=0, style=solid];
m21_1806 -> m21_24  [key=2, style=dotted];
m21_1807 -> m21_1800  [key=0, style=bold, color=blue];
m21_3922 -> m21_3923  [key=0, style=solid];
m21_3923 -> m21_3924  [key=0, style=solid];
m21_3923 -> m21_786  [key=2, style=dotted];
m21_3923 -> m21_1291  [key=2, style=dotted];
m21_3923 -> m21_3925  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_3923 -> m21_3926  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_3923 -> m21_3927  [key=1, style=dashed, color=darkseagreen4, label=john];
m21_3924 -> m21_3925  [key=0, style=solid];
m21_3924 -> m21_786  [key=2, style=dotted];
m21_3924 -> m21_1291  [key=2, style=dotted];
m21_3924 -> m21_3926  [key=1, style=dashed, color=darkseagreen4, label=jane];
m21_3924 -> m21_3927  [key=1, style=dashed, color=darkseagreen4, label=jane];
m21_3925 -> m21_3926  [key=0, style=solid];
m21_3926 -> m21_3927  [key=0, style=solid];
m21_3927 -> m21_3928  [key=0, style=solid];
m21_3927 -> m21_147  [key=2, style=dotted];
m21_3928 -> m21_3929  [key=0, style=solid];
m21_3928 -> m21_188  [key=2, style=dotted];
m21_3928 -> m21_565  [key=2, style=dotted];
m21_3928 -> m21_189  [key=2, style=dotted];
m21_3929 -> m21_3930  [key=0, style=solid];
m21_3929 -> m21_42  [key=2, style=dotted];
m21_3930 -> m21_3922  [key=0, style=bold, color=blue];
m21_2112 -> m21_2113  [key=0, style=solid];
m21_2113 -> m21_2114  [key=0, style=solid];
m21_2113 -> m21_2113  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2114 -> m21_2115  [key=0, style=solid];
m21_2114 -> m21_51  [key=2, style=dotted];
m21_2115 -> m21_2116  [key=0, style=solid];
m21_2115 -> m21_24  [key=2, style=dotted];
m21_2116 -> m21_2112  [key=0, style=bold, color=blue];
m21_1891 -> m21_1892  [key=0, style=solid];
m21_1892 -> m21_1893  [key=0, style=solid];
m21_1892 -> m21_1896  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1892 -> m21_162  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1893 -> m21_1894  [key=0, style=solid];
m21_1893 -> m21_73  [key=2, style=dotted];
m21_1893 -> m21_1895  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1894 -> m21_1891  [key=0, style=bold, color=blue];
m21_4293 -> m21_4294  [key=0, style=solid];
m21_4294 -> m21_4295  [key=0, style=solid];
m21_4294 -> m21_4299  [key=2, style=dotted];
m21_4295 -> m21_4296  [key=0, style=solid];
m21_4295 -> m21_142  [key=2, style=dotted];
m21_4296 -> m21_4297  [key=0, style=solid];
m21_4296 -> m21_51  [key=2, style=dotted];
m21_4297 -> m21_4298  [key=0, style=solid];
m21_4297 -> m21_24  [key=2, style=dotted];
m21_4298 -> m21_4293  [key=0, style=bold, color=blue];
m21_57 -> m21_58  [key=0, style=solid];
m21_58 -> m21_59  [key=0, style=solid];
m21_58 -> m21_51  [key=2, style=dotted];
m21_59 -> m21_60  [key=0, style=solid];
m21_59 -> m21_24  [key=2, style=dotted];
m21_60 -> m21_61  [key=0, style=solid];
m21_60 -> m21_51  [key=2, style=dotted];
m21_61 -> m21_62  [key=0, style=solid];
m21_61 -> m21_24  [key=2, style=dotted];
m21_62 -> m21_57  [key=0, style=bold, color=blue];
m21_4080 -> m21_4081  [key=0, style=solid];
m21_4081 -> m21_4082  [key=0, style=solid];
m21_4081 -> m21_4079  [key=2, style=dotted];
m21_4082 -> m21_4080  [key=0, style=bold, color=blue];
m21_2117 -> m21_2118  [key=0, style=solid, color=red];
m21_2118 -> m21_2119  [key=0, style=solid, color=red];
m21_2118 -> m21_2128  [key=2, style=dotted, color=red];
m21_2118 -> m21_2120  [key=1, style=dashed, color=red, label=c];
m21_2118 -> m21_2121  [key=1, style=dashed, color=red, label=c];
m21_2118 -> m21_2124  [key=1, style=dashed, color=red, label=c];
m21_2119 -> m21_2120  [key=0, style=solid, color=red];
m21_2119 -> m21_2129  [key=2, style=dotted, color=red];
m21_2120 -> m21_2121  [key=0, style=solid, color=red];
m21_2120 -> m21_1291  [key=2, style=dotted, color=red];
m21_2121 -> m21_2122  [key=0, style=solid, color=red];
m21_2121 -> m21_2130  [key=2, style=dotted, color=red];
m21_2124 -> m21_2125  [key=0, style=solid];
m21_2124 -> m21_961  [key=2, style=dotted];
m21_2122 -> m21_2123  [key=0, style=solid];
m21_2122 -> m21_880  [key=2, style=dotted];
m21_2122 -> m21_2124  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_2122 -> m21_2125  [key=1, style=dashed, color=darkseagreen4, label=ms];
m21_2123 -> m21_2124  [key=0, style=solid];
m21_2123 -> m21_960  [key=2, style=dotted];
m21_2125 -> m21_2126  [key=0, style=solid];
m21_2125 -> m21_962  [key=2, style=dotted];
m21_2126 -> m21_2127  [key=0, style=solid];
m21_2126 -> m21_963  [key=2, style=dotted];
m21_2127 -> m21_2117  [key=0, style=bold, color=blue];
m21_3895 -> m21_3896  [key=0, style=solid];
m21_3896 -> m21_3897  [key=0, style=solid];
m21_3896 -> m21_16  [key=2, style=dotted];
m21_3896 -> m21_386  [key=2, style=dotted];
m21_3896 -> m21_3899  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_3897 -> m21_3898  [key=0, style=solid];
m21_3897 -> m21_188  [key=2, style=dotted];
m21_3899 -> m21_3900  [key=0, style=solid];
m21_3899 -> m21_20  [key=2, style=dotted];
m21_3898 -> m21_3899  [key=0, style=solid];
m21_3898 -> m21_879  [key=2, style=dotted];
m21_3900 -> m21_3901  [key=0, style=solid];
m21_3900 -> m21_24  [key=2, style=dotted];
m21_3901 -> m21_3895  [key=0, style=bold, color=blue];
m21_1039 -> m21_1040  [key=0, style=solid];
m21_1040 -> m21_1041  [key=0, style=solid];
m21_1040 -> m21_1002  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m21_1041 -> m21_1042  [key=0, style=solid];
m21_1041 -> m21_982  [key=2, style=dotted];
m21_1042 -> m21_1043  [key=0, style=solid];
m21_1042 -> m21_571  [key=2, style=dotted];
m21_1042 -> m21_24  [key=2, style=dotted];
m21_1043 -> m21_1039  [key=0, style=bold, color=blue];
m21_1972 -> m21_1973  [key=0, style=solid];
m21_1973 -> m21_1974  [key=0, style=solid];
m21_1973 -> m21_209  [key=2, style=dotted];
m21_1973 -> m21_1975  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m21_1973 -> m21_1976  [key=1, style=dashed, color=darkseagreen4, label=dictionary];
m21_1974 -> m21_1975  [key=0, style=solid];
m21_1974 -> m21_1291  [key=2, style=dotted];
m21_1974 -> m21_878  [key=2, style=dotted];
m21_1975 -> m21_1976  [key=0, style=solid];
m21_1975 -> m21_1291  [key=2, style=dotted];
m21_1975 -> m21_878  [key=2, style=dotted];
m21_1976 -> m21_1977  [key=0, style=solid];
m21_1976 -> m21_41  [key=2, style=dotted];
m21_1977 -> m21_1978  [key=0, style=solid];
m21_1977 -> m21_42  [key=2, style=dotted];
m21_1978 -> m21_1972  [key=0, style=bold, color=blue];
m21_2656 -> m21_2657  [key=0, style=solid];
m21_2657 -> m21_2658  [key=0, style=solid];
m21_2657 -> m21_51  [key=2, style=dotted];
m21_2658 -> m21_2659  [key=0, style=solid];
m21_2658 -> m21_24  [key=2, style=dotted];
m21_2659 -> m21_2656  [key=0, style=bold, color=blue];
m21_4184 -> m21_4185  [key=0, style=solid];
m21_4185 -> m21_4186  [key=0, style=solid];
m21_4185 -> m21_1000  [key=2, style=dotted];
m21_4185 -> m21_4188  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4185 -> m21_4191  [key=1, style=dashed, color=darkseagreen4, label=dt];
m21_4186 -> m21_4187  [key=0, style=solid];
m21_4186 -> m21_4147  [key=3, color=darkorchid, style=bold, label="Local variable string dateFormatString"];
m21_4188 -> m21_4189  [key=0, style=solid];
m21_4188 -> m21_209  [key=2, style=dotted];
m21_4188 -> m21_189  [key=2, style=dotted];
m21_4188 -> m21_4190  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4191 -> m21_4192  [key=0, style=solid];
m21_4191 -> m21_1725  [key=2, style=dotted];
m21_4191 -> m21_24  [key=2, style=dotted];
m21_4187 -> m21_4188  [key=0, style=solid];
m21_4187 -> m21_188  [key=2, style=dotted];
m21_4187 -> m21_4190  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_4190 -> m21_4191  [key=0, style=solid];
m21_4190 -> m21_309  [key=2, style=dotted];
m21_4189 -> m21_4190  [key=0, style=solid];
m21_4189 -> m21_42  [key=2, style=dotted];
m21_4192 -> m21_4184  [key=0, style=bold, color=blue];
m21_1603 -> m21_1604  [key=0, style=solid];
m21_1604 -> m21_1605  [key=0, style=solid];
m21_1605 -> m21_1603  [key=0, style=bold, color=blue];
m21_2544 -> m21_2545  [key=0, style=solid];
m21_2545 -> m21_2546  [key=0, style=solid];
m21_2545 -> m21_323  [key=2, style=dotted];
m21_2545 -> m21_41  [key=2, style=dotted];
m21_2545 -> m21_2547  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m21_2546 -> m21_2547  [key=0, style=solid];
m21_2546 -> m21_42  [key=2, style=dotted];
m21_2547 -> m21_2548  [key=0, style=solid];
m21_2547 -> m21_51  [key=2, style=dotted];
m21_2547 -> m21_2549  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2547 -> m21_2550  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2547 -> m21_2551  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_2548 -> m21_2549  [key=0, style=solid];
m21_2548 -> m21_24  [key=2, style=dotted];
m21_2549 -> m21_2550  [key=0, style=solid];
m21_2549 -> m21_2553  [key=2, style=dotted];
m21_2549 -> m21_22  [key=2, style=dotted];
m21_2550 -> m21_2551  [key=0, style=solid];
m21_2550 -> m21_2553  [key=2, style=dotted];
m21_2550 -> m21_22  [key=2, style=dotted];
m21_2551 -> m21_2552  [key=0, style=solid];
m21_2551 -> m21_2553  [key=2, style=dotted];
m21_2551 -> m21_22  [key=2, style=dotted];
m21_2552 -> m21_2544  [key=0, style=bold, color=blue];
m21_1745 -> m21_1746  [key=0, style=solid];
m21_1746 -> m21_1747  [key=0, style=solid];
m21_1746 -> m21_1752  [key=2, style=dotted];
m21_1746 -> m21_1748  [key=1, style=dashed, color=darkseagreen4, label=uri];
m21_1746 -> m21_1750  [key=1, style=dashed, color=darkseagreen4, label=uri];
m21_1747 -> m21_1748  [key=0, style=solid];
m21_1747 -> m21_142  [key=2, style=dotted];
m21_1747 -> m21_1749  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1748 -> m21_1749  [key=0, style=solid];
m21_1748 -> m21_1753  [key=2, style=dotted];
m21_1748 -> m21_24  [key=2, style=dotted];
m21_1750 -> m21_1751  [key=0, style=solid];
m21_1750 -> m21_24  [key=2, style=dotted];
m21_1749 -> m21_1750  [key=0, style=solid];
m21_1749 -> m21_51  [key=2, style=dotted];
m21_1751 -> m21_1745  [key=0, style=bold, color=blue];
m21_2456 -> m21_2457  [key=0, style=solid];
m21_2457 -> m21_2458  [key=0, style=solid];
m21_2457 -> m21_209  [key=2, style=dotted];
m21_2457 -> m21_2459  [key=1, style=dashed, color=darkseagreen4, label=reference];
m21_2457 -> m21_2463  [key=1, style=dashed, color=darkseagreen4, label=reference];
m21_2458 -> m21_2459  [key=0, style=solid];
m21_2458 -> m21_878  [key=2, style=dotted];
m21_2459 -> m21_2460  [key=0, style=solid];
m21_2459 -> m21_878  [key=2, style=dotted];
m21_2463 -> m21_2464  [key=0, style=solid];
m21_2463 -> m21_878  [key=2, style=dotted];
m21_2460 -> m21_2461  [key=0, style=solid];
m21_2460 -> m21_209  [key=2, style=dotted];
m21_2460 -> m21_2462  [key=1, style=dashed, color=darkseagreen4, label=child];
m21_2460 -> m21_2463  [key=1, style=dashed, color=darkseagreen4, label=child];
m21_2460 -> m21_2464  [key=1, style=dashed, color=darkseagreen4, label=child];
m21_2461 -> m21_2462  [key=0, style=solid];
m21_2461 -> m21_878  [key=2, style=dotted];
m21_2462 -> m21_2463  [key=0, style=solid];
m21_2462 -> m21_878  [key=2, style=dotted];
m21_2464 -> m21_2465  [key=0, style=solid];
m21_2464 -> m21_41  [key=2, style=dotted];
m21_2464 -> m21_2468  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2465 -> m21_2466  [key=0, style=solid];
m21_2465 -> m21_73  [key=2, style=dotted];
m21_2465 -> m21_2467  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_2466 -> m21_2456  [key=0, style=bold, color=blue];
m21_197 -> m21_198  [key=0, style=solid];
m21_197 -> m21_197  [key=3, color=darkorchid, style=bold, label="method methodReturn string ResolveDictionaryKey"];
m21_198 -> m21_199  [key=0, style=solid];
m21_199 -> m21_197  [key=0, style=bold, color=blue];
m21_3478 -> m21_3479  [key=0, style=solid];
m21_3479 -> m21_3480  [key=0, style=solid];
m21_3479 -> m21_3477  [key=2, style=dotted];
m21_3480 -> m21_3481  [key=0, style=solid];
m21_3480 -> m21_142  [key=2, style=dotted];
m21_3481 -> m21_3482  [key=0, style=solid];
m21_3481 -> m21_24  [key=2, style=dotted];
m21_3482 -> m21_3478  [key=0, style=bold, color=blue];
m21_3148 -> m21_3149  [key=0, style=solid];
m21_3149 -> m21_3150  [key=0, style=solid];
m21_3149 -> m21_3153  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3149 -> m21_3149  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3150 -> m21_3151  [key=0, style=solid];
m21_3150 -> m21_73  [key=2, style=dotted];
m21_3150 -> m21_3152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3151 -> m21_3148  [key=0, style=bold, color=blue];
m21_4086 -> m21_4087  [key=0, style=solid];
m21_4087 -> m21_4088  [key=0, style=solid];
m21_4087 -> m21_4079  [key=2, style=dotted];
m21_4088 -> m21_4086  [key=0, style=bold, color=blue];
m21_3886 -> m21_3887  [key=0, style=solid];
m21_3887 -> m21_3888  [key=0, style=solid];
m21_3887 -> m21_3894  [key=2, style=dotted];
m21_3887 -> m21_3890  [key=1, style=dashed, color=darkseagreen4, label=s1];
m21_3887 -> m21_3891  [key=1, style=dashed, color=darkseagreen4, label=s1];
m21_3888 -> m21_3889  [key=0, style=solid];
m21_3888 -> m21_142  [key=2, style=dotted];
m21_3890 -> m21_3891  [key=0, style=solid];
m21_3890 -> m21_24  [key=2, style=dotted];
m21_3891 -> m21_3892  [key=0, style=solid];
m21_3891 -> m21_3893  [key=0, style=solid];
m21_3889 -> m21_3890  [key=0, style=solid];
m21_3889 -> m21_51  [key=2, style=dotted];
m21_3889 -> m21_3892  [key=1, style=dashed, color=darkseagreen4, label=s2];
m21_3892 -> m21_3891  [key=0, style=solid];
m21_3892 -> m21_2154  [key=2, style=dotted];
m21_3892 -> m21_22  [key=2, style=dotted];
m21_3893 -> m21_3886  [key=0, style=bold, color=blue];
m21_1071 -> m21_1072  [key=0, style=solid];
m21_1072 -> m21_1073  [key=0, style=solid];
m21_1072 -> m21_1072  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_1073 -> m21_1074  [key=0, style=solid];
m21_1073 -> m21_478  [key=2, style=dotted];
m21_1074 -> m21_1075  [key=0, style=solid];
m21_1074 -> m21_1074  [key=3, color=darkorchid, style=bold, label="Local variable string s"];
m21_1075 -> m21_1076  [key=0, style=solid];
m21_1075 -> m21_1075  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_1076 -> m21_1071  [key=0, style=bold, color=blue];
m21_2440 -> m21_2441  [key=0, style=solid];
m21_2441 -> m21_2442  [key=0, style=solid];
m21_2442 -> m21_2440  [key=0, style=bold, color=blue];
m21_4107 -> m21_4108  [key=0, style=solid];
m21_4108 -> m21_4109  [key=0, style=solid];
m21_4108 -> m21_4079  [key=2, style=dotted];
m21_4109 -> m21_4107  [key=0, style=bold, color=blue];
m21_2056 -> m21_2057  [key=0, style=solid];
m21_2057 -> m21_2058  [key=0, style=solid];
m21_2057 -> m21_51  [key=2, style=dotted];
m21_2058 -> m21_2059  [key=0, style=solid];
m21_2058 -> m21_1444  [key=2, style=dotted];
m21_2058 -> m21_24  [key=2, style=dotted];
m21_2059 -> m21_2060  [key=0, style=solid];
m21_2059 -> m21_51  [key=2, style=dotted];
m21_2060 -> m21_2061  [key=0, style=solid];
m21_2060 -> m21_1444  [key=2, style=dotted];
m21_2060 -> m21_24  [key=2, style=dotted];
m21_2061 -> m21_2056  [key=0, style=bold, color=blue];
m21_3871 -> m21_3872  [key=0, style=solid];
m21_3872 -> m21_3873  [key=0, style=solid];
m21_3872 -> m21_209  [key=2, style=dotted];
m21_3872 -> m21_1147  [key=2, style=dotted];
m21_3872 -> m21_389  [key=2, style=dotted];
m21_3872 -> m21_1155  [key=2, style=dotted];
m21_3872 -> m21_3874  [key=1, style=dashed, color=darkseagreen4, label=dates];
m21_3873 -> m21_3874  [key=0, style=solid];
m21_3873 -> m21_41  [key=2, style=dotted];
m21_3873 -> m21_3875  [key=1, style=dashed, color=darkseagreen4, label=expected];
m21_3874 -> m21_3875  [key=0, style=solid];
m21_3874 -> m21_188  [key=2, style=dotted];
m21_3874 -> m21_211  [key=2, style=dotted];
m21_3875 -> m21_3876  [key=0, style=solid];
m21_3875 -> m21_24  [key=2, style=dotted];
m21_3876 -> m21_3871  [key=0, style=bold, color=blue];
m21_3492 -> m21_3493  [key=0, style=solid];
m21_3493 -> m21_3494  [key=0, style=solid];
m21_3493 -> m21_209  [key=2, style=dotted];
m21_3493 -> m21_389  [key=2, style=dotted];
m21_3494 -> m21_3495  [key=0, style=solid];
m21_3494 -> m21_188  [key=2, style=dotted];
m21_3494 -> m21_211  [key=2, style=dotted];
m21_3494 -> m21_3496  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3495 -> m21_3496  [key=0, style=solid];
m21_3495 -> m21_42  [key=2, style=dotted];
m21_3496 -> m21_3497  [key=0, style=solid];
m21_3496 -> m21_51  [key=2, style=dotted];
m21_3496 -> m21_3498  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3496 -> m21_3499  [key=1, style=dashed, color=darkseagreen4, label=dic2];
m21_3497 -> m21_3498  [key=0, style=solid];
m21_3497 -> m21_24  [key=2, style=dotted];
m21_3498 -> m21_3499  [key=0, style=solid];
m21_3498 -> m21_389  [key=2, style=dotted];
m21_3498 -> m21_24  [key=2, style=dotted];
m21_3499 -> m21_3500  [key=0, style=solid];
m21_3499 -> m21_389  [key=2, style=dotted];
m21_3499 -> m21_24  [key=2, style=dotted];
m21_3500 -> m21_3492  [key=0, style=bold, color=blue];
m21_77 -> m21_78  [key=0, style=solid];
m21_78 -> m21_79  [key=0, style=solid];
m21_78 -> m21_73  [key=2, style=dotted];
m21_78 -> m21_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_79 -> m21_77  [key=0, style=bold, color=blue];
m21_1050 -> m21_1051  [key=0, style=solid];
m21_1051 -> m21_1052  [key=0, style=solid];
m21_1051 -> m21_1056  [key=2, style=dotted];
m21_1051 -> m21_142  [key=2, style=dotted];
m21_1052 -> m21_1053  [key=0, style=solid];
m21_1052 -> m21_51  [key=2, style=dotted];
m21_1052 -> m21_1054  [key=1, style=dashed, color=darkseagreen4, label=c];
m21_1053 -> m21_1054  [key=0, style=solid];
m21_1053 -> m21_24  [key=2, style=dotted];
m21_1054 -> m21_1055  [key=0, style=solid];
m21_1054 -> m21_24  [key=2, style=dotted];
m21_1055 -> m21_1050  [key=0, style=bold, color=blue];
m21_1184 -> m21_1185  [key=0, style=solid];
m21_1185 -> m21_1186  [key=0, style=solid];
m21_1185 -> m21_1000  [key=2, style=dotted];
m21_1185 -> m21_1192  [key=1, style=dashed, color=darkseagreen4, label=d];
m21_1186 -> m21_1187  [key=0, style=solid];
m21_1186 -> m21_1189  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1186 -> m21_1191  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1192 -> m21_1193  [key=0, style=solid];
m21_1192 -> m21_24  [key=2, style=dotted];
m21_1187 -> m21_1188  [key=0, style=solid];
m21_1187 -> m21_188  [key=2, style=dotted];
m21_1187 -> m21_1189  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_1187 -> m21_1191  [key=1, style=dashed, color=darkseagreen4, label=settings];
m21_1189 -> m21_1190  [key=0, style=solid];
m21_1189 -> m21_189  [key=2, style=dotted];
m21_1189 -> m21_1191  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_1191 -> m21_1192  [key=0, style=solid];
m21_1191 -> m21_1195  [key=2, style=dotted];
m21_1191 -> m21_1191  [key=1, style=dashed, color=darkseagreen4, label=anonymous];
m21_1188 -> m21_1189  [key=0, style=solid];
m21_1188 -> m21_1194  [key=2, style=dotted];
m21_1188 -> m21_335  [key=2, style=dotted];
m21_1190 -> m21_1191  [key=0, style=solid];
m21_1190 -> m21_24  [key=2, style=dotted];
m21_1193 -> m21_1184  [key=0, style=bold, color=blue];
m21_2826 -> m21_2827  [key=0, style=solid];
m21_2827 -> m21_2828  [key=0, style=solid];
m21_2827 -> m21_2829  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2827 -> m21_2827  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_2828 -> m21_2829  [key=0, style=solid];
m21_2828 -> m21_51  [key=2, style=dotted];
m21_2828 -> m21_2830  [key=1, style=dashed, color=darkseagreen4, label=withoutParameterisedConstructor];
m21_2829 -> m21_2830  [key=0, style=solid];
m21_2829 -> m21_51  [key=2, style=dotted];
m21_2830 -> m21_2831  [key=0, style=solid];
m21_2830 -> m21_24  [key=2, style=dotted];
m21_2831 -> m21_2826  [key=0, style=bold, color=blue];
m21_3391 -> m21_3392  [key=0, style=solid];
m21_3392 -> m21_3393  [key=0, style=solid];
m21_3392 -> m21_147  [key=2, style=dotted];
m21_3392 -> m21_3399  [key=1, style=dashed, color=darkseagreen4, label=values];
m21_3392 -> m21_3400  [key=1, style=dashed, color=darkseagreen4, label=values];
m21_3392 -> m21_3401  [key=1, style=dashed, color=darkseagreen4, label=values];
m21_3392 -> m21_3402  [key=1, style=dashed, color=darkseagreen4, label=values];
m21_3393 -> m21_3394  [key=0, style=solid];
m21_3393 -> m21_16  [key=2, style=dotted];
m21_3393 -> m21_386  [key=2, style=dotted];
m21_3393 -> m21_3396  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_3393 -> m21_3398  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_3399 -> m21_3395  [key=0, style=solid];
m21_3399 -> m21_335  [key=2, style=dotted];
m21_3400 -> m21_3401  [key=0, style=solid];
m21_3400 -> m21_24  [key=2, style=dotted];
m21_3401 -> m21_3402  [key=0, style=solid];
m21_3401 -> m21_24  [key=2, style=dotted];
m21_3402 -> m21_3403  [key=0, style=solid];
m21_3402 -> m21_24  [key=2, style=dotted];
m21_3394 -> m21_3395  [key=0, style=solid];
m21_3396 -> m21_3397  [key=0, style=solid];
m21_3396 -> m21_3400  [key=0, style=solid];
m21_3396 -> m21_18  [key=2, style=dotted];
m21_3398 -> m21_3399  [key=0, style=solid];
m21_3398 -> m21_20  [key=2, style=dotted];
m21_3395 -> m21_3396  [key=0, style=solid];
m21_3395 -> m21_3400  [key=0, style=solid];
m21_3397 -> m21_3398  [key=0, style=solid];
m21_3397 -> m21_19  [key=2, style=dotted];
m21_3403 -> m21_3391  [key=0, style=bold, color=blue];
m21_324 -> m21_325  [key=0, style=solid, color=red];
m21_325 -> m21_326  [key=0, style=solid, color=red];
m21_325 -> m21_320  [key=2, style=dotted, color=red];
m21_325 -> m21_327  [key=1, style=dashed, color=red, label=c];
m21_325 -> m21_328  [key=1, style=dashed, color=red, label=c];
m21_326 -> m21_327  [key=0, style=solid, color=red];
m21_327 -> m21_328  [key=0, style=solid, color=red];
m21_327 -> m21_334  [key=2, style=dotted, color=red];
m21_327 -> m21_335  [key=2, style=dotted, color=red];
m21_328 -> m21_329  [key=0, style=solid];
m21_328 -> m21_41  [key=2, style=dotted];
m21_328 -> m21_330  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_329 -> m21_330  [key=0, style=solid];
m21_329 -> m21_42  [key=2, style=dotted];
m21_330 -> m21_331  [key=0, style=solid];
m21_330 -> m21_51  [key=2, style=dotted];
m21_330 -> m21_332  [key=1, style=dashed, color=darkseagreen4, label=c2];
m21_331 -> m21_332  [key=0, style=solid];
m21_331 -> m21_24  [key=2, style=dotted];
m21_332 -> m21_333  [key=0, style=solid];
m21_332 -> m21_24  [key=2, style=dotted];
m21_333 -> m21_324  [key=0, style=bold, color=blue];
m21_3621 -> m21_3622  [key=0, style=solid];
m21_3622 -> m21_3623  [key=0, style=solid];
m21_3622 -> m21_3622  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3623 -> m21_3624  [key=0, style=solid];
m21_3623 -> m21_51  [key=2, style=dotted];
m21_3623 -> m21_3625  [key=1, style=dashed, color=darkseagreen4, label=exception];
m21_3623 -> m21_3626  [key=1, style=dashed, color=darkseagreen4, label=exception];
m21_3624 -> m21_3625  [key=0, style=solid];
m21_3624 -> m21_843  [key=2, style=dotted];
m21_3625 -> m21_3626  [key=0, style=solid];
m21_3625 -> m21_792  [key=2, style=dotted];
m21_3626 -> m21_3627  [key=0, style=solid];
m21_3626 -> m21_24  [key=2, style=dotted];
m21_3627 -> m21_3621  [key=0, style=bold, color=blue];
m21_425 -> m21_426  [key=0, style=solid];
m21_426 -> m21_427  [key=0, style=solid];
m21_426 -> m21_433  [key=2, style=dotted];
m21_426 -> m21_429  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_426 -> m21_430  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_426 -> m21_431  [key=1, style=dashed, color=darkseagreen4, label=input];
m21_427 -> m21_428  [key=0, style=solid];
m21_427 -> m21_142  [key=2, style=dotted];
m21_429 -> m21_430  [key=0, style=solid];
m21_429 -> m21_24  [key=2, style=dotted];
m21_430 -> m21_431  [key=0, style=solid];
m21_430 -> m21_24  [key=2, style=dotted];
m21_431 -> m21_432  [key=0, style=solid];
m21_431 -> m21_24  [key=2, style=dotted];
m21_428 -> m21_429  [key=0, style=solid];
m21_428 -> m21_51  [key=2, style=dotted];
m21_428 -> m21_430  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_428 -> m21_431  [key=1, style=dashed, color=darkseagreen4, label=deserialized];
m21_432 -> m21_425  [key=0, style=bold, color=blue];
m21_2044 -> m21_2045  [key=0, style=solid];
m21_2045 -> m21_2046  [key=0, style=solid];
m21_2045 -> m21_2054  [key=2, style=dotted];
m21_2045 -> m21_2047  [key=1, style=dashed, color=darkseagreen4, label=g];
m21_2045 -> m21_2048  [key=1, style=dashed, color=darkseagreen4, label=g];
m21_2045 -> m21_2049  [key=1, style=dashed, color=darkseagreen4, label=g];
m21_2046 -> m21_2047  [key=0, style=solid];
m21_2046 -> m21_2055  [key=2, style=dotted];
m21_2046 -> m21_2035  [key=2, style=dotted];
m21_2047 -> m21_2048  [key=0, style=solid];
m21_2047 -> m21_2055  [key=2, style=dotted];
m21_2047 -> m21_2035  [key=2, style=dotted];
m21_2048 -> m21_2049  [key=0, style=solid];
m21_2049 -> m21_2050  [key=0, style=solid];
m21_2049 -> m21_2041  [key=2, style=dotted];
m21_2049 -> m21_2051  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_2050 -> m21_2051  [key=0, style=solid];
m21_2050 -> m21_42  [key=2, style=dotted];
m21_2051 -> m21_2052  [key=0, style=solid];
m21_2051 -> m21_51  [key=2, style=dotted];
m21_2052 -> m21_2053  [key=0, style=solid];
m21_2052 -> m21_24  [key=2, style=dotted];
m21_2053 -> m21_2044  [key=0, style=bold, color=blue];
m21_740 -> m21_741  [key=0, style=solid];
m21_740 -> m21_742  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_740 -> m21_743  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_740 -> m21_744  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_740 -> m21_745  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_740 -> m21_746  [key=1, style=dashed, color=darkseagreen4, label="System.Runtime.Serialization.SerializationInfo"];
m21_741 -> m21_742  [key=0, style=solid];
m21_741 -> m21_748  [key=2, style=dotted];
m21_742 -> m21_743  [key=0, style=solid];
m21_742 -> m21_749  [key=2, style=dotted];
m21_743 -> m21_744  [key=0, style=solid];
m21_743 -> m21_750  [key=2, style=dotted];
m21_744 -> m21_745  [key=0, style=solid];
m21_744 -> m21_750  [key=2, style=dotted];
m21_745 -> m21_746  [key=0, style=solid];
m21_745 -> m21_750  [key=2, style=dotted];
m21_746 -> m21_747  [key=0, style=solid];
m21_746 -> m21_750  [key=2, style=dotted];
m21_747 -> m21_740  [key=0, style=bold, color=blue];
m21_1417 -> m21_1418  [key=0, style=solid];
m21_1418 -> m21_1419  [key=0, style=solid];
m21_1418 -> m21_1421  [key=2, style=dotted];
m21_1418 -> m21_142  [key=2, style=dotted];
m21_1419 -> m21_1420  [key=0, style=solid];
m21_1419 -> m21_24  [key=2, style=dotted];
m21_1420 -> m21_1417  [key=0, style=bold, color=blue];
m21_3907 -> m21_3908  [key=0, style=solid];
m21_3908 -> m21_3909  [key=0, style=solid];
m21_3908 -> m21_2401  [key=2, style=dotted];
m21_3909 -> m21_3910  [key=0, style=solid];
m21_3909 -> m21_41  [key=2, style=dotted];
m21_3910 -> m21_3911  [key=0, style=solid];
m21_3910 -> m21_42  [key=2, style=dotted];
m21_3911 -> m21_3907  [key=0, style=bold, color=blue];
m21_396 -> m21_397  [key=0, style=solid];
m21_397 -> m21_398  [key=0, style=solid];
m21_397 -> m21_401  [key=2, style=dotted];
m21_397 -> m21_142  [key=2, style=dotted];
m21_397 -> m21_24  [key=2, style=dotted];
m21_398 -> m21_399  [key=0, style=solid];
m21_398 -> m21_51  [key=2, style=dotted];
m21_399 -> m21_400  [key=0, style=solid];
m21_399 -> m21_24  [key=2, style=dotted];
m21_400 -> m21_396  [key=0, style=bold, color=blue];
m21_1903 -> m21_1904  [key=0, style=solid];
m21_1904 -> m21_1905  [key=0, style=solid];
m21_1904 -> m21_1135  [key=2, style=dotted];
m21_1904 -> m21_1906  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_1905 -> m21_1903  [key=0, style=bold, color=blue];
m21_1087 -> m21_1088  [key=0, style=solid];
m21_1088 -> m21_1089  [key=0, style=solid];
m21_1088 -> m21_1097  [key=2, style=dotted];
m21_1088 -> m21_1090  [key=1, style=dashed, color=darkseagreen4, label=test];
m21_1088 -> m21_1091  [key=1, style=dashed, color=darkseagreen4, label=test];
m21_1088 -> m21_1094  [key=1, style=dashed, color=darkseagreen4, label=test];
m21_1088 -> m21_1095  [key=1, style=dashed, color=darkseagreen4, label=test];
m21_1089 -> m21_1090  [key=0, style=solid];
m21_1090 -> m21_1091  [key=0, style=solid];
m21_1091 -> m21_1092  [key=0, style=solid];
m21_1091 -> m21_142  [key=2, style=dotted];
m21_1091 -> m21_1093  [key=1, style=dashed, color=darkseagreen4, label=jsonText];
m21_1094 -> m21_1095  [key=0, style=solid];
m21_1094 -> m21_24  [key=2, style=dotted];
m21_1095 -> m21_1096  [key=0, style=solid];
m21_1095 -> m21_24  [key=2, style=dotted];
m21_1092 -> m21_1093  [key=0, style=solid];
m21_1092 -> m21_24  [key=2, style=dotted];
m21_1093 -> m21_1094  [key=0, style=solid];
m21_1093 -> m21_51  [key=2, style=dotted];
m21_1093 -> m21_1095  [key=1, style=dashed, color=darkseagreen4, label=test2];
m21_1096 -> m21_1087  [key=0, style=bold, color=blue];
m21_3303 -> m21_3304  [key=0, style=solid];
m21_3304 -> m21_3305  [key=0, style=solid];
m21_3304 -> m21_51  [key=2, style=dotted];
m21_3305 -> m21_3306  [key=0, style=solid];
m21_3305 -> m21_165  [key=2, style=dotted];
m21_3306 -> m21_3303  [key=0, style=bold, color=blue];
m21_2859 -> m21_2860  [key=0, style=solid];
m21_2860 -> m21_2861  [key=0, style=solid];
m21_2860 -> m21_2864  [key=2, style=dotted];
m21_2861 -> m21_2862  [key=0, style=solid];
m21_2861 -> m21_142  [key=2, style=dotted];
m21_2862 -> m21_2863  [key=0, style=solid];
m21_2862 -> m21_24  [key=2, style=dotted];
m21_2863 -> m21_2859  [key=0, style=bold, color=blue];
m21_3162 -> m21_3163  [key=0, style=solid];
m21_3163 -> m21_3164  [key=0, style=solid];
m21_3163 -> m21_3167  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_3163 -> m21_3158  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m21_3164 -> m21_3165  [key=0, style=solid];
m21_3164 -> m21_73  [key=2, style=dotted];
m21_3164 -> m21_3166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_3165 -> m21_3162  [key=0, style=bold, color=blue];
m21_2951 -> m21_2952  [key=0, style=solid];
m21_2952 -> m21_2953  [key=0, style=solid];
m21_2952 -> m21_51  [key=2, style=dotted];
m21_2952 -> m21_2954  [key=1, style=dashed, color=darkseagreen4, label=r];
m21_2952 -> m21_2955  [key=1, style=dashed, color=darkseagreen4, label=r];
m21_2952 -> m21_2956  [key=1, style=dashed, color=darkseagreen4, label=r];
m21_2952 -> m21_2957  [key=1, style=dashed, color=darkseagreen4, label=r];
m21_2953 -> m21_2954  [key=0, style=solid];
m21_2953 -> m21_388  [key=2, style=dotted];
m21_2953 -> m21_24  [key=2, style=dotted];
m21_2954 -> m21_2955  [key=0, style=solid];
m21_2954 -> m21_479  [key=2, style=dotted];
m21_2954 -> m21_24  [key=2, style=dotted];
m21_2955 -> m21_2956  [key=0, style=solid];
m21_2955 -> m21_1725  [key=2, style=dotted];
m21_2955 -> m21_843  [key=2, style=dotted];
m21_2956 -> m21_2957  [key=0, style=solid];
m21_2956 -> m21_1725  [key=2, style=dotted];
m21_2956 -> m21_843  [key=2, style=dotted];
m21_2957 -> m21_2958  [key=0, style=solid];
m21_2957 -> m21_1725  [key=2, style=dotted];
m21_2957 -> m21_165  [key=2, style=dotted];
m21_2958 -> m21_2951  [key=0, style=bold, color=blue];
m21_4414 -> m21_143  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired"];
m21_4414 -> m21_145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooRequired"];
m21_4415 -> m21_263  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_4416 -> m21_272  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.RequiredPropertyConstructorTestClass"];
m21_4417 -> m21_285  [key=1, style=dashed, color=darkseagreen4, label=c1];
m21_4418 -> m21_293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.IgnoredPropertiesContractResolver"];
m21_4419 -> m21_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FaqItem"];
m21_4420 -> m21_405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.SimpleResponse"];
m21_4421 -> m21_457  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4422 -> m21_568  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_4423 -> m21_643  [key=1, style=dashed, color=darkseagreen4, label=referenceResolver];
m21_4424 -> m21_718  [key=1, style=dashed, color=darkseagreen4, label=serializerProxy];
m21_4425 -> m21_731  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_732  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_733  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_734  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_735  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_738  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_741  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_742  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_743  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_744  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_745  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_746  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_752  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_754  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_755  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_756  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_757  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_758  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_759  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4425 -> m21_760  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PreserveReferencesCallbackTestObject"];
m21_4426 -> m21_888  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m21_4426 -> m21_889  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m21_4426 -> m21_892  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKeyCast"];
m21_4427 -> m21_912  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m21_4427 -> m21_933  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m21_4427 -> m21_943  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m21_4427 -> m21_3538  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m21_4427 -> m21_3544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m21_4427 -> m21_3545  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest"];
m21_4428 -> m21_1110  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4429 -> m21_1551  [key=1, style=dashed, color=darkseagreen4, label=strFromTest];
m21_4430 -> m21_1592  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndDefaultValueAttributeTestClass"];
m21_4431 -> m21_1604  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorAndRequiredTestClass"];
m21_4432 -> m21_1688  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m21_4432 -> m21_1689  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m21_4432 -> m21_1690  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m21_4432 -> m21_1691  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m21_4432 -> m21_1694  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DataContractPrivateMembers"];
m21_4433 -> m21_1798  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4434 -> m21_1825  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4435 -> m21_1832  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4436 -> m21_1839  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4437 -> m21_1846  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4438 -> m21_1853  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4439 -> m21_1860  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4440 -> m21_1867  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4441 -> m21_1874  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4442 -> m21_1888  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4443 -> m21_1896  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4444 -> m21_2020  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m21_4444 -> m21_2021  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ExistingValueClass"];
m21_4445 -> m21_2036  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m21_4445 -> m21_2039  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m21_4445 -> m21_2042  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ThisGenericTest<T>"];
m21_4446 -> m21_2075  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4447 -> m21_2079  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryWithNoDefaultConstructor"];
m21_4448 -> m21_2108  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor1"];
m21_4449 -> m21_2110  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.CircularConstructor2"];
m21_4450 -> m21_2137  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2142  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2145  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2152  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2156  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2160  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2164  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2171  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2178  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2182  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4450 -> m21_2186  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ModelStateDictionary<T>"];
m21_4451 -> m21_2199  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2200  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2201  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2202  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2203  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2206  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2210  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2212  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2213  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2214  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2215  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2216  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2217  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2218  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2219  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2220  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2223  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2239  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2240  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2244  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2245  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2246  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2247  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2248  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2249  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2250  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2251  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2252  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2253  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2254  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4451 -> m21_2255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ISerializableTestObject"];
m21_4452 -> m21_2310  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m21_4452 -> m21_2311  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.KVPair<TKey, TValue>"];
m21_4453 -> m21_2366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m21_4453 -> m21_2367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m21_4453 -> m21_2368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m21_4453 -> m21_2369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m21_4453 -> m21_2370  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m21_4453 -> m21_2371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m21_4453 -> m21_2372  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m21_4453 -> m21_2373  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.AA"];
m21_4454 -> m21_2377  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4454 -> m21_2378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4454 -> m21_2379  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4454 -> m21_2380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4454 -> m21_2381  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4454 -> m21_2382  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4454 -> m21_2383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4454 -> m21_2384  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4454 -> m21_2385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4454 -> m21_2386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BB"];
m21_4455 -> m21_2468  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4456 -> m21_2501  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m21_4456 -> m21_2502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConstructorCompexIgnoredProperty"];
m21_4457 -> m21_2518  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DictionaryKey"];
m21_4458 -> m21_2555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyClass"];
m21_4459 -> m21_2584  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4460 -> m21_2682  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Vector"];
m21_4461 -> m21_2699  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Derived"];
m21_4462 -> m21_2704  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.Base"];
m21_4464 -> m21_2718  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.StructISerializable"];
m21_4465 -> m21_2820  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m21_4465 -> m21_2821  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithParameterisedConstructor"];
m21_4466 -> m21_2824  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DTOWithoutParameterisedConstructor"];
m21_4467 -> m21_2872  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m21_4467 -> m21_2873  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyCollectionProperty"];
m21_4468 -> m21_2888  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m21_4468 -> m21_2889  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NonDefaultConstructorWithReadOnlyDictionaryProperty"];
m21_4469 -> m21_2934  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m21_4469 -> m21_2935  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m21_4469 -> m21_2936  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m21_4469 -> m21_2939  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m21_4469 -> m21_2942  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.PrivateMembersClassWithAttributes"];
m21_4470 -> m21_2966  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ClassWithException"];
m21_4471 -> m21_3129  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4472 -> m21_3153  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4473 -> m21_3167  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4474 -> m21_3221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter"];
m21_4474 -> m21_3222  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.NullableGuidCountingJsonTextWriter"];
m21_4475 -> m21_3436  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_4476 -> m21_3451  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_4477 -> m21_3466  [key=1, style=dashed, color=darkseagreen4, label=errors];
m21_4478 -> m21_3594  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4479 -> m21_3594  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_4480 -> m21_3619  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4481 -> m21_3619  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_4482 -> m21_3664  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m21_4483 -> m21_3664  [key=1, style=dashed, color=darkseagreen4, label=reader];
m21_4484 -> m21_3705  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuple<T1>"];
m21_4485 -> m21_3708  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.MyTuplePartial<T1>"];
m21_4486 -> m21_3747  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4487 -> m21_3845  [key=1, style=dashed, color=darkseagreen4, label=json];
m21_4488 -> m21_3915  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.FooConstructor"];
m21_4490 -> m21_3961  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter"];
m21_4490 -> m21_3965  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter"];
m21_4490 -> m21_3971  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter"];
m21_4490 -> m21_4007  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.TypeConverterSizeConverter"];
m21_4491 -> m21_4070  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m21_4491 -> m21_4072  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m21_4491 -> m21_4074  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m21_4491 -> m21_4076  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m21_4491 -> m21_4099  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m21_4491 -> m21_4102  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m21_4491 -> m21_4105  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.ConvertibleId"];
m21_4492 -> m21_4258  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.DerivedConstructorType"];
m21_4493 -> m21_4261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.JsonSerializerTest.BaseConstructorType"];
m21_4494 -> m21_4305  [key=1, style=dashed, color=darkseagreen4, label=JsonMessage];
m21_4495 -> m21_4364  [key=1, style=dashed, color=darkseagreen4, label=s];
m21_4496 -> m21_4376  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ChildClassWithProtectedOverridePlusJsonProperty"];
m21_4497 -> m21_4380  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.DecimalTest"];
m21_4498 -> m21_4383  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor"];
m21_4498 -> m21_4386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor"];
m21_4498 -> m21_4387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.NonPublicConstructorWithJsonConstructor"];
m21_4499 -> m21_4390  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor"];
m21_4499 -> m21_4393  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor"];
m21_4499 -> m21_4394  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.PublicConstructorOverridenByJsonConstructor"];
m21_4500 -> m21_4397  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor"];
m21_4500 -> m21_4398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor"];
m21_4500 -> m21_4401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor"];
m21_4500 -> m21_4402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor"];
m21_4500 -> m21_4403  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.MultipleParametrizedConstructorsJsonConstructor"];
m21_4501 -> m21_4409  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest"];
m21_4501 -> m21_4410  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest"];
m21_4501 -> m21_4411  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest"];
m21_4501 -> m21_4412  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.CompletionDataRequest"];
m22_0 -> m22_1  [key=0, style=solid, color=green];
m22_1 -> m22_2  [key=0, style=solid, color=green];
m22_1 -> m22_3  [key=2, style=dotted, color=green];
m22_1 -> m22_1  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m22_2 -> m22_0  [key=0, style=bold, color=blue];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_6  [key=2, style=dotted];
m22_2 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label=starcraft];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_7  [key=2, style=dotted];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_8  [key=2, style=dotted];
m22_5 -> m22_0  [key=0, style=bold, color=blue];
m23_6 -> m23_7  [key=0, style=solid, color=green];
m23_7 -> m23_8  [key=0, style=solid, color=green];
m23_8 -> m23_6  [key=0, style=bold, color=blue];
m23_4 -> m23_5  [key=0, style=solid];
m23_5 -> m23_4  [key=0, style=bold, color=blue];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_12  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.JsonWriterException Create"];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_12  [key=2, style=dotted];
m23_11 -> m23_9  [key=0, style=bold, color=blue];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_2  [key=0, style=bold, color=blue];
m23_12 -> m23_13  [key=0, style=solid];
m23_12 -> m23_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_12 -> m23_9  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Exception ex"];
m23_13 -> m23_14  [key=0, style=solid, color=red];
m23_13 -> m23_16  [key=2, style=dotted];
m23_13 -> m23_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_14 -> m23_15  [key=0, style=solid, color=red];
m23_14 -> m23_6  [key=2, style=dotted, color=red];
m23_15 -> m23_12  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [key=0, style=bold, color=blue];
m23_17 -> m23_7  [key=1, style=dashed, color=green, label="Newtonsoft.Json.JsonWriterException"];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_2 -> m24_3  [key=0, style=solid];
m24_2 -> m24_12  [key=2, style=dotted];
m24_2 -> m24_4  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m24_2 -> m24_6  [key=1, style=dashed, color=darkseagreen4, label=resolver];
m24_3 -> m24_4  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_13  [key=2, style=dotted];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_13  [key=2, style=dotted];
m24_6 -> m24_9  [key=1, style=dashed, color=darkseagreen4, label=employeeSchema];
m24_5 -> m24_6  [key=0, style=solid];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_7  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_15  [key=2, style=dotted];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_14  [key=2, style=dotted];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_16  [key=2, style=dotted];
m24_11 -> m24_0  [key=0, style=bold, color=blue];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_8  [key=2, style=dotted];
m25_17 -> m25_18  [key=0, style=solid];
m25_17 -> m25_20  [key=3, color=darkorchid, style=bold, label="method methodReturn Newtonsoft.Json.Utilities.ReflectionObject Create"];
m25_18 -> m25_19  [key=0, style=solid];
m25_18 -> m25_20  [key=2, style=dotted];
m25_19 -> m25_17  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid, color=green];
m25_1 -> m25_2  [key=0, style=solid, color=green];
m25_1 -> m25_3  [key=2, style=dotted];
m25_2 -> m25_3  [key=0, style=solid];
m25_2 -> m25_5  [key=0, style=solid];
m25_2 -> m25_6  [key=2, style=dotted];
m25_2 -> m25_7  [key=2, style=dotted];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m25_3 -> m25_4  [key=0, style=solid];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_8  [key=2, style=dotted];
m25_4 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label=object];
m25_5 -> m25_0  [key=0, style=bold, color=blue];
m25_5 -> m25_6  [key=0, style=solid];
m25_7 -> m25_4  [key=0, style=bold, color=blue];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=object];
m25_10 -> m25_11  [key=0, style=solid];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_13  [key=2, style=dotted];
m25_12 -> m25_9  [key=0, style=bold, color=blue];
m25_20 -> m25_21  [key=0, style=solid, color=red];
m25_20 -> m25_23  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodBase"];
m25_20 -> m25_24  [key=1, style=dashed, color=red, label="System.Reflection.MethodBase"];
m25_20 -> m25_25  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m25_20 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m25_20 -> m25_28  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m25_20 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m25_20 -> m25_17  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] memberNames"];
m25_20 -> m25_18  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodBase creator"];
m25_21 -> m25_22  [key=0, style=solid, color=red];
m25_21 -> m25_0  [key=2, style=dotted, color=red];
m25_21 -> m25_24  [key=1, style=dashed, color=red, label=d];
m25_21 -> m25_27  [key=1, style=dashed, color=red, label=d];
m25_21 -> m25_57  [key=1, style=dashed, color=red, label=d];
m25_21 -> m25_58  [key=1, style=dashed, color=red, label=d];
m25_23 -> m25_24  [key=0, style=solid, color=red];
m25_23 -> m25_25  [key=0, style=solid];
m25_24 -> m25_28  [key=0, style=solid, color=red];
m25_24 -> m25_60  [key=2, style=dotted, color=red];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_28  [key=0, style=solid];
m25_25 -> m25_61  [key=2, style=dotted];
m25_26 -> m25_27  [key=0, style=solid, color=red];
m25_26 -> m25_62  [key=2, style=dotted];
m25_26 -> m25_78  [key=1, style=dashed, color=red, label=ctor];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_58  [key=0, style=solid];
m25_28 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m25_28 -> m25_57  [key=1, style=dashed, color=darkseagreen4, label=memberName];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_63  [key=2, style=dotted];
m25_29 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label=members];
m25_22 -> m25_23  [key=0, style=solid];
m25_22 -> m25_24  [key=1, style=dashed, color=red, label=delegateFactory];
m25_22 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=delegateFactory];
m25_22 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label=delegateFactory];
m25_22 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label=delegateFactory];
m25_22 -> m25_46  [key=1, style=dashed, color=darkseagreen4, label=delegateFactory];
m25_22 -> m25_49  [key=1, style=dashed, color=darkseagreen4, label=delegateFactory];
m25_22 -> m25_53  [key=1, style=dashed, color=darkseagreen4, label=delegateFactory];
m25_22 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=delegateFactory];
m25_27 -> m25_28  [key=0, style=solid, color=red];
m25_57 -> m25_28  [key=0, style=solid];
m25_58 -> m25_59  [key=0, style=solid];
m25_38 -> m25_39  [key=0, style=solid];
m25_38 -> m25_70  [key=2, style=dotted];
m25_40 -> m25_52  [key=0, style=solid];
m25_40 -> m25_72  [key=2, style=dotted];
m25_46 -> m25_47  [key=0, style=solid];
m25_46 -> m25_74  [key=2, style=dotted];
m25_46 -> m25_82  [key=1, style=dashed, color=darkseagreen4, label=call];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_74  [key=2, style=dotted];
m25_49 -> m25_86  [key=1, style=dashed, color=darkseagreen4, label=call];
m25_53 -> m25_54  [key=0, style=solid];
m25_53 -> m25_70  [key=2, style=dotted];
m25_55 -> m25_56  [key=0, style=solid];
m25_55 -> m25_72  [key=2, style=dotted];
m25_31 -> m25_59  [key=0, style=solid];
m25_31 -> m25_64  [key=2, style=dotted];
m25_31 -> m25_65  [key=2, style=dotted];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_32  [key=0, style=solid];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_66  [key=2, style=dotted];
m25_32 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_37  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_39  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_51  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_52  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_53  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_54  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_32 -> m25_56  [key=1, style=dashed, color=darkseagreen4, label=member];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_67  [key=2, style=dotted];
m25_33 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label=reflectionMember];
m25_33 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label=reflectionMember];
m25_33 -> m25_47  [key=1, style=dashed, color=darkseagreen4, label=reflectionMember];
m25_33 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label=reflectionMember];
m25_33 -> m25_53  [key=1, style=dashed, color=darkseagreen4, label=reflectionMember];
m25_33 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=reflectionMember];
m25_33 -> m25_56  [key=1, style=dashed, color=darkseagreen4, label=reflectionMember];
m25_33 -> m25_57  [key=1, style=dashed, color=darkseagreen4, label=reflectionMember];
m25_34 -> m25_35  [key=0, style=solid];
m25_34 -> m25_41  [key=0, style=solid];
m25_34 -> m25_51  [key=0, style=solid];
m25_34 -> m25_68  [key=2, style=dotted];
m25_37 -> m25_38  [key=0, style=solid];
m25_37 -> m25_39  [key=0, style=solid];
m25_37 -> m25_69  [key=2, style=dotted];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_52  [key=0, style=solid];
m25_39 -> m25_71  [key=2, style=dotted];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_44  [key=1, style=dashed, color=darkseagreen4, label=method];
m25_42 -> m25_45  [key=1, style=dashed, color=darkseagreen4, label=method];
m25_42 -> m25_46  [key=1, style=dashed, color=darkseagreen4, label=method];
m25_42 -> m25_48  [key=1, style=dashed, color=darkseagreen4, label=method];
m25_42 -> m25_49  [key=1, style=dashed, color=darkseagreen4, label=method];
m25_51 -> m25_59  [key=0, style=solid];
m25_51 -> m25_64  [key=2, style=dotted];
m25_51 -> m25_68  [key=2, style=dotted];
m25_51 -> m25_75  [key=2, style=dotted];
m25_52 -> m25_53  [key=0, style=solid];
m25_52 -> m25_54  [key=0, style=solid];
m25_52 -> m25_69  [key=2, style=dotted];
m25_54 -> m25_55  [key=0, style=solid];
m25_54 -> m25_56  [key=0, style=solid];
m25_54 -> m25_71  [key=2, style=dotted];
m25_56 -> m25_57  [key=0, style=solid];
m25_56 -> m25_76  [key=2, style=dotted];
m25_47 -> m25_52  [key=0, style=solid];
m25_47 -> m25_82  [key=1, style=dashed, color=darkseagreen4, label="?"];
m25_50 -> m25_52  [key=0, style=solid];
m25_50 -> m25_86  [key=1, style=dashed, color=darkseagreen4, label="?"];
m25_35 -> m25_36  [key=0, style=solid];
m25_41 -> m25_42  [key=0, style=solid];
m25_36 -> m25_37  [key=0, style=solid];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_52  [key=0, style=solid];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_73  [key=2, style=dotted];
m25_44 -> m25_48  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_48  [key=0, style=solid];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_52  [key=0, style=solid];
m25_59 -> m25_20  [key=0, style=bold, color=blue];
m25_14 -> m25_15  [key=0, style=solid];
m25_15 -> m25_16  [key=0, style=solid];
m25_16 -> m25_14  [key=0, style=bold, color=blue];
m25_85 -> m25_86  [key=0, style=solid];
m25_78 -> m25_79  [key=0, style=solid, color=red];
m25_78 -> m25_80  [key=2, style=dotted, color=red];
m25_82 -> m25_83  [key=0, style=solid];
m25_82 -> m25_84  [key=2, style=dotted];
m25_86 -> m25_87  [key=0, style=solid];
m25_86 -> m25_84  [key=2, style=dotted];
m25_77 -> m25_78  [key=0, style=solid, color=red];
m25_79 -> m25_77  [key=0, style=bold, color=blue];
m25_81 -> m25_82  [key=0, style=solid];
m25_83 -> m25_81  [key=0, style=bold, color=blue];
m25_87 -> m25_85  [key=0, style=bold, color=blue];
m25_88 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ReflectionObject"];
m25_88 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ReflectionObject"];
m25_88 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ReflectionObject"];
m25_88 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Utilities.ReflectionObject"];
m25_89 -> m25_78  [key=1, style=dashed, color=red, label=ctor];
m25_90 -> m25_82  [key=1, style=dashed, color=darkseagreen4, label=call];
m25_91 -> m25_86  [key=1, style=dashed, color=darkseagreen4, label=call];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_15  [key=2, style=dotted];
m26_1 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_1 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_1 -> m26_5  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_1 -> m26_6  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_1 -> m26_7  [key=1, style=dashed, color=green, label=writer];
m26_1 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_1 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_1 -> m26_10  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_1 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label=writer];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_16  [key=2, style=dotted];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_17  [key=2, style=dotted];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_18  [key=2, style=dotted];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_17  [key=2, style=dotted];
m26_6 -> m26_7  [key=0, style=solid, color=green];
m26_6 -> m26_19  [key=2, style=dotted];
m26_7 -> m26_8  [key=0, style=solid, color=green];
m26_7 -> m26_20  [key=2, style=dotted, color=green];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_20  [key=2, style=dotted];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_21  [key=2, style=dotted];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_22  [key=2, style=dotted];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label=o];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_23  [key=2, style=dotted];
m26_12 -> m26_24  [key=2, style=dotted];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_23  [key=2, style=dotted];
m26_13 -> m26_25  [key=2, style=dotted];
m26_14 -> m26_0  [key=0, style=bold, color=blue];
m27_391 -> m27_392  [key=0, style=solid];
m27_392 -> m27_394  [key=2, style=dotted];
m27_392 -> m27_393  [key=0, style=solid];
m27_393 -> m27_391  [key=0, style=bold, color=blue];
m27_95 -> m27_96  [key=0, style=solid];
m27_98 -> m27_32  [key=2, style=dotted];
m27_98 -> m27_99  [key=0, style=solid];
m27_97 -> m27_98  [key=0, style=solid];
m27_97 -> m27_44  [key=2, style=dotted];
m27_96 -> m27_97  [key=0, style=solid];
m27_96 -> m27_100  [key=2, style=dotted];
m27_99 -> m27_95  [key=0, style=bold, color=blue];
m27_151 -> m27_152  [key=0, style=solid];
m27_157 -> m27_9  [key=2, style=dotted];
m27_157 -> m27_158  [key=0, style=solid];
m27_158 -> m27_9  [key=2, style=dotted];
m27_158 -> m27_159  [key=0, style=solid];
m27_159 -> m27_9  [key=2, style=dotted];
m27_159 -> m27_160  [key=0, style=solid];
m27_153 -> m27_157  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_153 -> m27_158  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_153 -> m27_159  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_153 -> m27_154  [key=0, style=solid];
m27_153 -> m27_69  [key=2, style=dotted];
m27_153 -> m27_155  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_153 -> m27_162  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_156 -> m27_157  [key=0, style=solid];
m27_156 -> m27_71  [key=2, style=dotted];
m27_156 -> m27_72  [key=2, style=dotted];
m27_156 -> m27_131  [key=2, style=dotted];
m27_152 -> m27_153  [key=0, style=solid];
m27_152 -> m27_156  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_154 -> m27_156  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_154 -> m27_155  [key=0, style=solid];
m27_154 -> m27_114  [key=2, style=dotted];
m27_155 -> m27_156  [key=0, style=solid];
m27_155 -> m27_162  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_155 -> m27_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_160 -> m27_151  [key=0, style=bold, color=blue];
m27_301 -> m27_302  [key=0, style=solid];
m27_307 -> m27_9  [key=2, style=dotted];
m27_307 -> m27_308  [key=0, style=solid];
m27_306 -> m27_307  [key=0, style=solid];
m27_306 -> m27_312  [key=2, style=dotted];
m27_302 -> m27_306  [key=1, style=dashed, color=darkseagreen4, label=settings];
m27_302 -> m27_30  [key=2, style=dotted];
m27_302 -> m27_303  [key=0, style=solid];
m27_305 -> m27_306  [key=0, style=solid];
m27_305 -> m27_310  [key=2, style=dotted];
m27_305 -> m27_311  [key=2, style=dotted];
m27_305 -> m27_316  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_305 -> m27_319  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_305 -> m27_322  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_304 -> m27_69  [key=2, style=dotted];
m27_304 -> m27_305  [key=0, style=solid];
m27_304 -> m27_309  [key=2, style=dotted];
m27_303 -> m27_304  [key=0, style=solid];
m27_303 -> m27_314  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_308 -> m27_301  [key=0, style=bold, color=blue];
m27_24 -> m27_25  [key=0, style=solid];
m27_26 -> m27_30  [key=2, style=dotted];
m27_26 -> m27_31  [key=2, style=dotted];
m27_26 -> m27_27  [key=0, style=solid];
m27_26 -> m27_34  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_26 -> m27_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_25 -> m27_26  [key=0, style=solid];
m27_25 -> m27_29  [key=2, style=dotted];
m27_27 -> m27_27  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m27_27 -> m27_28  [key=0, style=solid];
m27_27 -> m27_32  [key=2, style=dotted];
m27_28 -> m27_24  [key=0, style=bold, color=blue];
m27_190 -> m27_442  [key=0, style=solid];
m27_442 -> m27_190  [key=0, style=bold, color=blue];
m27_362 -> m27_363  [key=0, style=solid];
m27_366 -> m27_71  [key=2, style=dotted];
m27_366 -> m27_367  [key=0, style=solid];
m27_366 -> m27_358  [key=2, style=dotted];
m27_366 -> m27_368  [key=1, style=dashed, color=darkseagreen4, label=jReader];
m27_366 -> m27_372  [key=1, style=dashed, color=darkseagreen4, label=jReader];
m27_367 -> m27_114  [key=2, style=dotted];
m27_367 -> m27_372  [key=1, style=dashed, color=darkseagreen4, label=s];
m27_367 -> m27_368  [key=0, style=solid];
m27_365 -> m27_366  [key=0, style=solid];
m27_365 -> m27_357  [key=2, style=dotted];
m27_368 -> m27_369  [key=0, style=solid];
m27_368 -> m27_370  [key=2, style=dotted];
m27_368 -> m27_371  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_364 -> m27_365  [key=0, style=solid];
m27_364 -> m27_356  [key=2, style=dotted];
m27_363 -> m27_364  [key=0, style=solid];
m27_369 -> m27_362  [key=0, style=bold, color=blue];
m27_377 -> m27_378  [key=0, style=solid];
m27_378 -> m27_131  [key=2, style=dotted];
m27_378 -> m27_379  [key=0, style=solid];
m27_379 -> m27_382  [key=0, style=solid];
m27_381 -> m27_382  [key=0, style=solid];
m27_381 -> m27_383  [key=2, style=dotted];
m27_380 -> m27_381  [key=0, style=solid];
m27_382 -> m27_377  [key=0, style=bold, color=blue];
m27_346 -> m27_347  [key=0, style=solid];
m27_350 -> m27_71  [key=2, style=dotted];
m27_350 -> m27_351  [key=0, style=solid];
m27_350 -> m27_358  [key=2, style=dotted];
m27_350 -> m27_353  [key=1, style=dashed, color=darkseagreen4, label=jReader];
m27_353 -> m27_73  [key=2, style=dotted];
m27_353 -> m27_354  [key=0, style=solid];
m27_354 -> m27_191  [key=2, style=dotted];
m27_354 -> m27_355  [key=0, style=solid];
m27_351 -> m27_114  [key=2, style=dotted];
m27_351 -> m27_353  [key=1, style=dashed, color=darkseagreen4, label=s];
m27_351 -> m27_352  [key=0, style=solid];
m27_349 -> m27_350  [key=0, style=solid];
m27_349 -> m27_357  [key=2, style=dotted];
m27_352 -> m27_353  [key=0, style=solid];
m27_352 -> m27_360  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_348 -> m27_349  [key=0, style=solid];
m27_348 -> m27_356  [key=2, style=dotted];
m27_347 -> m27_348  [key=0, style=solid];
m27_355 -> m27_346  [key=0, style=bold, color=blue];
m27_435 -> m27_436  [key=0, style=solid];
m27_437 -> m27_9  [key=2, style=dotted];
m27_437 -> m27_438  [key=0, style=solid];
m27_436 -> m27_437  [key=0, style=solid];
m27_436 -> m27_421  [key=2, style=dotted];
m27_436 -> m27_30  [key=2, style=dotted];
m27_436 -> m27_31  [key=2, style=dotted];
m27_436 -> m27_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_438 -> m27_435  [key=0, style=bold, color=blue];
m27_443 -> m27_447  [key=1, style=dashed, color=darkseagreen4, label=int];
m27_443 -> m27_450  [key=1, style=dashed, color=darkseagreen4, label=int];
m27_443 -> m27_452  [key=1, style=dashed, color=darkseagreen4, label=int];
m27_443 -> m27_444  [key=0, style=solid];
m27_443 -> m27_457  [key=1, style=dashed, color=darkseagreen4, label="char[]"];
m27_447 -> m27_72  [key=2, style=dotted];
m27_447 -> m27_448  [key=0, style=solid];
m27_447 -> m27_460  [key=2, style=dotted];
m27_447 -> m27_454  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m27_447 -> m27_457  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m27_447 -> m27_458  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m27_450 -> m27_72  [key=2, style=dotted];
m27_450 -> m27_451  [key=0, style=solid];
m27_450 -> m27_460  [key=2, style=dotted];
m27_450 -> m27_454  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m27_450 -> m27_457  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m27_450 -> m27_458  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m27_452 -> m27_72  [key=2, style=dotted];
m27_452 -> m27_453  [key=0, style=solid];
m27_452 -> m27_460  [key=2, style=dotted];
m27_452 -> m27_454  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m27_452 -> m27_457  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m27_452 -> m27_458  [key=1, style=dashed, color=darkseagreen4, label=charsRead];
m27_444 -> m27_447  [key=1, style=dashed, color=darkseagreen4, label=temp];
m27_444 -> m27_450  [key=1, style=dashed, color=darkseagreen4, label=temp];
m27_444 -> m27_452  [key=1, style=dashed, color=darkseagreen4, label=temp];
m27_444 -> m27_445  [key=0, style=solid];
m27_444 -> m27_457  [key=1, style=dashed, color=darkseagreen4, label=temp];
m27_446 -> m27_447  [key=0, style=solid];
m27_446 -> m27_449  [key=0, style=solid];
m27_448 -> m27_454  [key=0, style=solid];
m27_454 -> m27_455  [key=0, style=solid];
m27_457 -> m27_458  [key=0, style=solid];
m27_457 -> m27_462  [key=2, style=dotted];
m27_458 -> m27_459  [key=0, style=solid];
m27_449 -> m27_450  [key=0, style=solid];
m27_449 -> m27_452  [key=0, style=solid];
m27_451 -> m27_454  [key=0, style=solid];
m27_453 -> m27_454  [key=0, style=solid];
m27_445 -> m27_446  [key=0, style=solid];
m27_455 -> m27_457  [key=0, style=solid];
m27_455 -> m27_456  [key=0, style=solid];
m27_456 -> m27_459  [key=0, style=solid];
m27_456 -> m27_461  [key=2, style=dotted];
m27_459 -> m27_443  [key=0, style=bold, color=blue];
m27_414 -> m27_415  [key=0, style=solid];
m27_415 -> m27_30  [key=2, style=dotted];
m27_415 -> m27_70  [key=2, style=dotted];
m27_415 -> m27_416  [key=0, style=solid];
m27_415 -> m27_419  [key=1, style=dashed, color=darkseagreen4, label=serialiser];
m27_415 -> m27_425  [key=1, style=dashed, color=darkseagreen4, label=serialiser];
m27_416 -> m27_421  [key=2, style=dotted];
m27_416 -> m27_417  [key=0, style=solid];
m27_416 -> m27_391  [key=2, style=dotted];
m27_416 -> m27_394  [key=2, style=dotted];
m27_419 -> m27_420  [key=0, style=solid];
m27_419 -> m27_370  [key=2, style=dotted];
m27_419 -> m27_424  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_417 -> m27_419  [key=1, style=dashed, color=darkseagreen4, label=r];
m27_417 -> m27_425  [key=1, style=dashed, color=darkseagreen4, label=r];
m27_417 -> m27_418  [key=0, style=solid];
m27_417 -> m27_422  [key=2, style=dotted];
m27_418 -> m27_419  [key=0, style=solid];
m27_418 -> m27_425  [key=1, style=dashed, color=darkseagreen4, label=writer];
m27_418 -> m27_423  [key=2, style=dotted];
m27_420 -> m27_414  [key=0, style=bold, color=blue];
m27_244 -> m27_245  [key=0, style=solid];
m27_255 -> m27_9  [key=2, style=dotted];
m27_255 -> m27_256  [key=0, style=solid];
m27_256 -> m27_9  [key=2, style=dotted];
m27_256 -> m27_257  [key=0, style=solid];
m27_257 -> m27_9  [key=2, style=dotted];
m27_257 -> m27_258  [key=0, style=solid];
m27_258 -> m27_9  [key=2, style=dotted];
m27_258 -> m27_259  [key=0, style=solid];
m27_253 -> m27_9  [key=2, style=dotted];
m27_253 -> m27_254  [key=0, style=solid];
m27_254 -> m27_9  [key=2, style=dotted];
m27_254 -> m27_255  [key=0, style=solid];
m27_245 -> m27_255  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_245 -> m27_256  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_245 -> m27_257  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_245 -> m27_258  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_245 -> m27_246  [key=0, style=solid];
m27_245 -> m27_69  [key=2, style=dotted];
m27_245 -> m27_250  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_245 -> m27_261  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_251 -> m27_253  [key=1, style=dashed, color=darkseagreen4, label=logMessage];
m27_251 -> m27_254  [key=1, style=dashed, color=darkseagreen4, label=logMessage];
m27_251 -> m27_252  [key=0, style=solid];
m27_251 -> m27_73  [key=2, style=dotted];
m27_252 -> m27_253  [key=0, style=solid];
m27_252 -> m27_206  [key=2, style=dotted];
m27_246 -> m27_247  [key=0, style=solid];
m27_246 -> m27_248  [key=1, style=dashed, color=darkseagreen4, label=input];
m27_250 -> m27_251  [key=0, style=solid];
m27_250 -> m27_261  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_250 -> m27_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_248 -> m27_251  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m27_248 -> m27_71  [key=2, style=dotted];
m27_248 -> m27_72  [key=2, style=dotted];
m27_248 -> m27_249  [key=0, style=solid];
m27_249 -> m27_251  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m27_249 -> m27_30  [key=2, style=dotted];
m27_249 -> m27_250  [key=0, style=solid];
m27_249 -> m27_70  [key=2, style=dotted];
m27_247 -> m27_248  [key=0, style=solid];
m27_247 -> m27_249  [key=1, style=dashed, color=darkseagreen4, label=maxDepth];
m27_259 -> m27_244  [key=0, style=bold, color=blue];
m27_196 -> m27_197  [key=0, style=solid];
m27_200 -> m27_9  [key=2, style=dotted];
m27_200 -> m27_201  [key=0, style=solid];
m27_201 -> m27_9  [key=2, style=dotted];
m27_201 -> m27_202  [key=0, style=solid];
m27_202 -> m27_9  [key=2, style=dotted];
m27_202 -> m27_203  [key=0, style=solid];
m27_203 -> m27_9  [key=2, style=dotted];
m27_203 -> m27_204  [key=0, style=solid];
m27_197 -> m27_200  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_197 -> m27_201  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_197 -> m27_198  [key=0, style=solid];
m27_197 -> m27_69  [key=2, style=dotted];
m27_197 -> m27_208  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_199 -> m27_200  [key=0, style=solid];
m27_199 -> m27_206  [key=2, style=dotted];
m27_198 -> m27_202  [key=1, style=dashed, color=darkseagreen4, label=o];
m27_198 -> m27_203  [key=1, style=dashed, color=darkseagreen4, label=o];
m27_198 -> m27_199  [key=0, style=solid];
m27_198 -> m27_198  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_198 -> m27_30  [key=2, style=dotted];
m27_198 -> m27_205  [key=2, style=dotted];
m27_198 -> m27_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_198 -> m27_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_204 -> m27_196  [key=0, style=bold, color=blue];
m27_165 -> m27_166  [key=0, style=solid];
m27_171 -> m27_9  [key=2, style=dotted];
m27_171 -> m27_172  [key=0, style=solid];
m27_172 -> m27_9  [key=2, style=dotted];
m27_172 -> m27_173  [key=0, style=solid];
m27_170 -> m27_171  [key=0, style=solid];
m27_170 -> m27_71  [key=2, style=dotted];
m27_170 -> m27_72  [key=2, style=dotted];
m27_170 -> m27_73  [key=2, style=dotted];
m27_168 -> m27_171  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_168 -> m27_172  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_168 -> m27_169  [key=0, style=solid];
m27_168 -> m27_69  [key=2, style=dotted];
m27_168 -> m27_176  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_166 -> m27_170  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_166 -> m27_167  [key=0, style=solid];
m27_167 -> m27_170  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_167 -> m27_168  [key=0, style=solid];
m27_167 -> m27_114  [key=2, style=dotted];
m27_167 -> m27_169  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_169 -> m27_170  [key=0, style=solid];
m27_169 -> m27_175  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_169 -> m27_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_173 -> m27_165  [key=0, style=bold, color=blue];
m27_120 -> m27_121  [key=0, style=solid];
m27_128 -> m27_12  [key=2, style=dotted];
m27_128 -> m27_129  [key=0, style=solid];
m27_128 -> m27_132  [key=2, style=dotted];
m27_129 -> m27_12  [key=2, style=dotted];
m27_129 -> m27_130  [key=0, style=solid];
m27_129 -> m27_132  [key=2, style=dotted];
m27_127 -> m27_9  [key=2, style=dotted];
m27_127 -> m27_128  [key=0, style=solid];
m27_122 -> m27_128  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_122 -> m27_129  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_122 -> m27_127  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_122 -> m27_123  [key=0, style=solid];
m27_122 -> m27_69  [key=2, style=dotted];
m27_122 -> m27_125  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_122 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_126 -> m27_127  [key=0, style=solid];
m27_126 -> m27_71  [key=2, style=dotted];
m27_126 -> m27_72  [key=2, style=dotted];
m27_126 -> m27_131  [key=2, style=dotted];
m27_121 -> m27_122  [key=0, style=solid];
m27_121 -> m27_126  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_123 -> m27_126  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_123 -> m27_124  [key=0, style=solid];
m27_123 -> m27_114  [key=2, style=dotted];
m27_123 -> m27_125  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_125 -> m27_126  [key=0, style=solid];
m27_125 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_125 -> m27_135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_124 -> m27_125  [key=0, style=solid];
m27_130 -> m27_120  [key=0, style=bold, color=blue];
m27_211 -> m27_212  [key=0, style=solid];
m27_217 -> m27_9  [key=2, style=dotted];
m27_217 -> m27_218  [key=0, style=solid];
m27_218 -> m27_9  [key=2, style=dotted];
m27_218 -> m27_219  [key=0, style=solid];
m27_219 -> m27_9  [key=2, style=dotted];
m27_219 -> m27_220  [key=0, style=solid];
m27_220 -> m27_9  [key=2, style=dotted];
m27_220 -> m27_221  [key=0, style=solid];
m27_212 -> m27_217  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_212 -> m27_218  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_212 -> m27_213  [key=0, style=solid];
m27_212 -> m27_69  [key=2, style=dotted];
m27_212 -> m27_214  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_212 -> m27_225  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_216 -> m27_217  [key=0, style=solid];
m27_216 -> m27_206  [key=2, style=dotted];
m27_215 -> m27_219  [key=1, style=dashed, color=darkseagreen4, label=o];
m27_215 -> m27_220  [key=1, style=dashed, color=darkseagreen4, label=o];
m27_215 -> m27_216  [key=0, style=solid];
m27_215 -> m27_131  [key=2, style=dotted];
m27_213 -> m27_215  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_213 -> m27_214  [key=0, style=solid];
m27_213 -> m27_222  [key=2, style=dotted];
m27_213 -> m27_223  [key=2, style=dotted];
m27_214 -> m27_215  [key=0, style=solid];
m27_214 -> m27_30  [key=2, style=dotted];
m27_214 -> m27_70  [key=2, style=dotted];
m27_214 -> m27_225  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_214 -> m27_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_221 -> m27_211  [key=0, style=bold, color=blue];
m27_45 -> m27_46  [key=0, style=solid];
m27_47 -> m27_9  [key=2, style=dotted];
m27_47 -> m27_48  [key=0, style=solid];
m27_48 -> m27_9  [key=2, style=dotted];
m27_48 -> m27_49  [key=0, style=solid];
m27_48 -> m27_54  [key=2, style=dotted];
m27_49 -> m27_9  [key=2, style=dotted];
m27_49 -> m27_50  [key=0, style=solid];
m27_49 -> m27_54  [key=2, style=dotted];
m27_50 -> m27_9  [key=2, style=dotted];
m27_50 -> m27_51  [key=0, style=solid];
m27_50 -> m27_54  [key=2, style=dotted];
m27_46 -> m27_47  [key=0, style=solid];
m27_46 -> m27_48  [key=1, style=dashed, color=darkseagreen4, label=c];
m27_46 -> m27_49  [key=1, style=dashed, color=darkseagreen4, label=c];
m27_46 -> m27_50  [key=1, style=dashed, color=darkseagreen4, label=c];
m27_46 -> m27_52  [key=2, style=dotted];
m27_46 -> m27_53  [key=2, style=dotted];
m27_51 -> m27_45  [key=0, style=bold, color=blue];
m27_16 -> m27_17  [key=0, style=solid, color=green];
m27_17 -> m27_18  [key=0, style=solid, color=green];
m27_17 -> m27_8  [key=2, style=dotted, color=green];
m27_17 -> m27_19  [key=1, style=dashed, color=green, label=c];
m27_17 -> m27_20  [key=1, style=dashed, color=green, label=c];
m27_17 -> m27_21  [key=1, style=dashed, color=green, label=c];
m27_17 -> m27_22  [key=1, style=dashed, color=green, label=c];
m27_18 -> m27_9  [key=2, style=dotted];
m27_18 -> m27_19  [key=0, style=solid];
m27_19 -> m27_9  [key=2, style=dotted];
m27_19 -> m27_20  [key=0, style=solid];
m27_20 -> m27_9  [key=2, style=dotted];
m27_20 -> m27_21  [key=0, style=solid];
m27_21 -> m27_9  [key=2, style=dotted];
m27_21 -> m27_22  [key=0, style=solid];
m27_22 -> m27_9  [key=2, style=dotted];
m27_22 -> m27_23  [key=0, style=solid];
m27_23 -> m27_16  [key=0, style=bold, color=blue];
m27_82 -> m27_83  [key=0, style=solid];
m27_85 -> m27_9  [key=2, style=dotted];
m27_85 -> m27_86  [key=0, style=solid];
m27_86 -> m27_9  [key=2, style=dotted];
m27_86 -> m27_87  [key=0, style=solid];
m27_86 -> m27_54  [key=2, style=dotted];
m27_87 -> m27_9  [key=2, style=dotted];
m27_87 -> m27_88  [key=0, style=solid];
m27_87 -> m27_54  [key=2, style=dotted];
m27_88 -> m27_9  [key=2, style=dotted];
m27_88 -> m27_89  [key=0, style=solid];
m27_88 -> m27_54  [key=2, style=dotted];
m27_89 -> m27_9  [key=2, style=dotted];
m27_89 -> m27_90  [key=0, style=solid];
m27_84 -> m27_85  [key=0, style=solid];
m27_84 -> m27_86  [key=1, style=dashed, color=darkseagreen4, label=c];
m27_84 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label=c];
m27_84 -> m27_88  [key=1, style=dashed, color=darkseagreen4, label=c];
m27_84 -> m27_30  [key=2, style=dotted];
m27_84 -> m27_52  [key=2, style=dotted];
m27_84 -> m27_91  [key=2, style=dotted];
m27_83 -> m27_84  [key=0, style=solid];
m27_90 -> m27_82  [key=0, style=bold, color=blue];
m27_405 -> m27_406  [key=0, style=solid];
m27_408 -> m27_72  [key=2, style=dotted];
m27_408 -> m27_409  [key=0, style=solid];
m27_408 -> m27_412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_406 -> m27_30  [key=2, style=dotted];
m27_406 -> m27_70  [key=2, style=dotted];
m27_406 -> m27_407  [key=0, style=solid];
m27_406 -> m27_409  [key=1, style=dashed, color=darkseagreen4, label=serialiser];
m27_406 -> m27_412  [key=1, style=dashed, color=darkseagreen4, label=serialiser];
m27_407 -> m27_408  [key=0, style=solid];
m27_409 -> m27_410  [key=0, style=solid];
m27_409 -> m27_370  [key=2, style=dotted];
m27_409 -> m27_411  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_410 -> m27_405  [key=0, style=bold, color=blue];
m27_101 -> m27_102  [key=0, style=solid];
m27_111 -> m27_9  [key=2, style=dotted];
m27_111 -> m27_112  [key=0, style=solid];
m27_112 -> m27_9  [key=2, style=dotted];
m27_112 -> m27_113  [key=0, style=solid];
m27_110 -> m27_9  [key=2, style=dotted];
m27_110 -> m27_111  [key=0, style=solid];
m27_102 -> m27_111  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_102 -> m27_112  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_102 -> m27_103  [key=0, style=solid];
m27_102 -> m27_69  [key=2, style=dotted];
m27_102 -> m27_106  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_102 -> m27_118  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_107 -> m27_110  [key=0, style=solid];
m27_107 -> m27_108  [key=0, style=solid];
m27_107 -> m27_72  [key=2, style=dotted];
m27_107 -> m27_115  [key=2, style=dotted];
m27_109 -> m27_110  [key=0, style=solid];
m27_103 -> m27_107  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_103 -> m27_104  [key=0, style=solid];
m27_106 -> m27_107  [key=0, style=solid];
m27_106 -> m27_117  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_106 -> m27_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_105 -> m27_107  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_105 -> m27_106  [key=0, style=solid];
m27_105 -> m27_114  [key=2, style=dotted];
m27_108 -> m27_109  [key=0, style=solid];
m27_104 -> m27_105  [key=0, style=solid];
m27_113 -> m27_101  [key=0, style=bold, color=blue];
m27_359 -> m27_360  [key=0, style=solid];
m27_14 -> m27_15  [key=0, style=solid, color=green];
m27_13 -> m27_14  [key=0, style=solid, color=green];
m27_15 -> m27_13  [key=0, style=bold, color=blue];
m27_79 -> m27_80  [key=0, style=solid];
m27_93 -> m27_89  [key=1, style=dashed, color=darkseagreen4, label=eventErrorHandlerCalled];
m27_93 -> m27_94  [key=0, style=solid];
m27_75 -> m27_76  [key=0, style=solid];
m27_75 -> m27_78  [key=2, style=dotted];
m27_80 -> m27_81  [key=0, style=solid];
m27_81 -> m27_79  [key=0, style=bold, color=blue];
m27_134 -> m27_135  [key=0, style=solid];
m27_134 -> m27_78  [key=2, style=dotted];
m27_92 -> m27_93  [key=0, style=solid];
m27_94 -> m27_92  [key=0, style=bold, color=blue];
m27_118 -> m27_119  [key=0, style=solid];
m27_118 -> m27_78  [key=2, style=dotted];
m27_148 -> m27_149  [key=0, style=solid];
m27_148 -> m27_78  [key=2, style=dotted];
m27_162 -> m27_163  [key=0, style=solid];
m27_162 -> m27_78  [key=2, style=dotted];
m27_176 -> m27_177  [key=0, style=solid];
m27_176 -> m27_178  [key=2, style=dotted];
m27_193 -> m27_194  [key=0, style=solid];
m27_193 -> m27_178  [key=2, style=dotted];
m27_208 -> m27_209  [key=0, style=solid];
m27_208 -> m27_178  [key=2, style=dotted];
m27_209 -> m27_210  [key=0, style=solid];
m27_225 -> m27_226  [key=0, style=solid];
m27_225 -> m27_178  [key=2, style=dotted];
m27_241 -> m27_242  [key=0, style=solid];
m27_241 -> m27_178  [key=2, style=dotted];
m27_242 -> m27_243  [key=0, style=solid];
m27_261 -> m27_262  [key=0, style=solid];
m27_261 -> m27_178  [key=2, style=dotted];
m27_281 -> m27_282  [key=0, style=solid];
m27_281 -> m27_178  [key=2, style=dotted];
m27_298 -> m27_299  [key=0, style=solid];
m27_298 -> m27_178  [key=2, style=dotted];
m27_299 -> m27_300  [key=0, style=solid];
m27_440 -> m27_441  [key=0, style=solid];
m27_76 -> m27_77  [key=0, style=solid];
m27_74 -> m27_75  [key=0, style=solid];
m27_74 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_135 -> m27_136  [key=0, style=solid];
m27_133 -> m27_134  [key=0, style=solid];
m27_133 -> m27_135  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_372 -> m27_73  [key=2, style=dotted];
m27_372 -> m27_373  [key=0, style=solid];
m27_117 -> m27_118  [key=0, style=solid];
m27_117 -> m27_119  [key=0, style=solid];
m27_116 -> m27_118  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_116 -> m27_117  [key=0, style=solid];
m27_119 -> m27_116  [key=0, style=bold, color=blue];
m27_412 -> m27_115  [key=2, style=dotted];
m27_412 -> m27_413  [key=0, style=solid];
m27_149 -> m27_150  [key=0, style=solid];
m27_147 -> m27_148  [key=0, style=solid];
m27_147 -> m27_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_163 -> m27_164  [key=0, style=solid];
m27_161 -> m27_162  [key=0, style=solid];
m27_161 -> m27_163  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_175 -> m27_176  [key=0, style=solid];
m27_174 -> m27_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_174 -> m27_175  [key=0, style=solid];
m27_177 -> m27_174  [key=0, style=bold, color=blue];
m27_194 -> m27_195  [key=0, style=solid];
m27_192 -> m27_193  [key=0, style=solid];
m27_192 -> m27_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_207 -> m27_208  [key=0, style=solid];
m27_207 -> m27_209  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_210 -> m27_207  [key=0, style=bold, color=blue];
m27_226 -> m27_227  [key=0, style=solid];
m27_224 -> m27_225  [key=0, style=solid];
m27_224 -> m27_226  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_240 -> m27_241  [key=0, style=solid];
m27_240 -> m27_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_243 -> m27_240  [key=0, style=bold, color=blue];
m27_262 -> m27_263  [key=0, style=solid];
m27_260 -> m27_261  [key=0, style=solid];
m27_260 -> m27_262  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_282 -> m27_283  [key=0, style=solid];
m27_280 -> m27_281  [key=0, style=solid];
m27_280 -> m27_282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_297 -> m27_298  [key=0, style=solid];
m27_297 -> m27_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_300 -> m27_297  [key=0, style=bold, color=blue];
m27_316 -> m27_317  [key=0, style=solid];
m27_319 -> m27_320  [key=0, style=solid];
m27_322 -> m27_323  [key=0, style=solid];
m27_337 -> m27_338  [key=0, style=solid];
m27_340 -> m27_341  [key=0, style=solid];
m27_343 -> m27_344  [key=0, style=solid];
m27_439 -> m27_440  [key=0, style=solid];
m27_441 -> m27_439  [key=0, style=bold, color=blue];
m27_77 -> m27_74  [key=0, style=bold, color=blue];
m27_136 -> m27_133  [key=0, style=bold, color=blue];
m27_371 -> m27_372  [key=0, style=solid];
m27_373 -> m27_371  [key=0, style=bold, color=blue];
m27_34 -> m27_35  [key=0, style=solid];
m27_34 -> m27_36  [key=0, style=solid];
m27_34 -> m27_37  [key=2, style=dotted];
m27_35 -> m27_36  [key=0, style=solid];
m27_425 -> m27_426  [key=0, style=solid];
m27_425 -> m27_427  [key=2, style=dotted];
m27_433 -> m27_434  [key=0, style=solid];
m27_411 -> m27_412  [key=0, style=solid];
m27_413 -> m27_411  [key=0, style=bold, color=blue];
m27_150 -> m27_147  [key=0, style=bold, color=blue];
m27_164 -> m27_161  [key=0, style=bold, color=blue];
m27_195 -> m27_192  [key=0, style=bold, color=blue];
m27_227 -> m27_224  [key=0, style=bold, color=blue];
m27_263 -> m27_260  [key=0, style=bold, color=blue];
m27_283 -> m27_280  [key=0, style=bold, color=blue];
m27_314 -> m27_315  [key=0, style=solid];
m27_318 -> m27_316  [key=0, style=bold, color=blue];
m27_317 -> m27_318  [key=0, style=solid];
m27_321 -> m27_319  [key=0, style=bold, color=blue];
m27_320 -> m27_321  [key=0, style=solid];
m27_324 -> m27_322  [key=0, style=bold, color=blue];
m27_323 -> m27_324  [key=0, style=solid];
m27_323 -> m27_325  [key=2, style=dotted];
m27_335 -> m27_336  [key=0, style=solid];
m27_339 -> m27_337  [key=0, style=bold, color=blue];
m27_338 -> m27_339  [key=0, style=solid];
m27_342 -> m27_340  [key=0, style=bold, color=blue];
m27_341 -> m27_342  [key=0, style=solid];
m27_345 -> m27_343  [key=0, style=bold, color=blue];
m27_344 -> m27_345  [key=0, style=solid];
m27_344 -> m27_325  [key=2, style=dotted];
m27_360 -> m27_361  [key=0, style=solid];
m27_33 -> m27_34  [key=0, style=solid];
m27_33 -> m27_35  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_36 -> m27_33  [key=0, style=bold, color=blue];
m27_424 -> m27_425  [key=0, style=solid];
m27_426 -> m27_424  [key=0, style=bold, color=blue];
m27_432 -> m27_433  [key=0, style=solid];
m27_434 -> m27_432  [key=0, style=bold, color=blue];
m27_313 -> m27_314  [key=0, style=solid];
m27_315 -> m27_313  [key=0, style=bold, color=blue];
m27_334 -> m27_335  [key=0, style=solid];
m27_336 -> m27_334  [key=0, style=bold, color=blue];
m27_361 -> m27_359  [key=0, style=bold, color=blue];
m27_264 -> m27_265  [key=0, style=solid];
m27_276 -> m27_9  [key=2, style=dotted];
m27_276 -> m27_277  [key=0, style=solid];
m27_277 -> m27_9  [key=2, style=dotted];
m27_277 -> m27_278  [key=0, style=solid];
m27_278 -> m27_9  [key=2, style=dotted];
m27_278 -> m27_279  [key=0, style=solid];
m27_273 -> m27_9  [key=2, style=dotted];
m27_273 -> m27_274  [key=0, style=solid];
m27_274 -> m27_9  [key=2, style=dotted];
m27_274 -> m27_275  [key=0, style=solid];
m27_275 -> m27_9  [key=2, style=dotted];
m27_275 -> m27_276  [key=0, style=solid];
m27_265 -> m27_276  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_265 -> m27_277  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_265 -> m27_278  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_265 -> m27_266  [key=0, style=solid];
m27_265 -> m27_69  [key=2, style=dotted];
m27_265 -> m27_270  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_265 -> m27_281  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_271 -> m27_273  [key=1, style=dashed, color=darkseagreen4, label=logEvents];
m27_271 -> m27_274  [key=1, style=dashed, color=darkseagreen4, label=logEvents];
m27_271 -> m27_275  [key=1, style=dashed, color=darkseagreen4, label=logEvents];
m27_271 -> m27_272  [key=0, style=solid];
m27_271 -> m27_73  [key=2, style=dotted];
m27_272 -> m27_273  [key=0, style=solid];
m27_272 -> m27_206  [key=2, style=dotted];
m27_266 -> m27_267  [key=0, style=solid];
m27_266 -> m27_268  [key=1, style=dashed, color=darkseagreen4, label=input];
m27_270 -> m27_271  [key=0, style=solid];
m27_270 -> m27_281  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_270 -> m27_282  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_268 -> m27_271  [key=1, style=dashed, color=darkseagreen4, label=jsonTextReader];
m27_268 -> m27_71  [key=2, style=dotted];
m27_268 -> m27_72  [key=2, style=dotted];
m27_268 -> m27_269  [key=0, style=solid];
m27_269 -> m27_271  [key=1, style=dashed, color=darkseagreen4, label=jsonSerializer];
m27_269 -> m27_30  [key=2, style=dotted];
m27_269 -> m27_270  [key=0, style=solid];
m27_269 -> m27_70  [key=2, style=dotted];
m27_267 -> m27_268  [key=0, style=solid];
m27_267 -> m27_269  [key=1, style=dashed, color=darkseagreen4, label=maxDepth];
m27_279 -> m27_264  [key=0, style=bold, color=blue];
m27_38 -> m27_39  [key=0, style=solid];
m27_39 -> m27_29  [key=2, style=dotted];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_43  [key=2, style=dotted];
m27_41 -> m27_32  [key=2, style=dotted];
m27_41 -> m27_42  [key=0, style=solid];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_44  [key=2, style=dotted];
m27_42 -> m27_38  [key=0, style=bold, color=blue];
m27_179 -> m27_180  [key=0, style=solid];
m27_185 -> m27_9  [key=2, style=dotted];
m27_185 -> m27_186  [key=0, style=solid];
m27_186 -> m27_9  [key=2, style=dotted];
m27_186 -> m27_187  [key=0, style=solid];
m27_187 -> m27_9  [key=2, style=dotted];
m27_187 -> m27_188  [key=0, style=solid];
m27_188 -> m27_9  [key=2, style=dotted];
m27_188 -> m27_189  [key=0, style=solid];
m27_180 -> m27_185  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_180 -> m27_186  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_180 -> m27_187  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_180 -> m27_188  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_180 -> m27_181  [key=0, style=solid];
m27_180 -> m27_69  [key=2, style=dotted];
m27_180 -> m27_182  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_180 -> m27_193  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_184 -> m27_185  [key=0, style=solid];
m27_184 -> m27_191  [key=2, style=dotted];
m27_181 -> m27_182  [key=0, style=solid];
m27_181 -> m27_114  [key=2, style=dotted];
m27_181 -> m27_183  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_182 -> m27_183  [key=0, style=solid];
m27_182 -> m27_193  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_182 -> m27_194  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_183 -> m27_184  [key=0, style=solid];
m27_183 -> m27_71  [key=2, style=dotted];
m27_183 -> m27_73  [key=2, style=dotted];
m27_183 -> m27_190  [key=2, style=dotted];
m27_189 -> m27_179  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid, color=green];
m27_1 -> m27_2  [key=0, style=solid, color=green];
m27_1 -> m27_3  [key=1, style=dashed, color=green, label=json];
m27_2 -> m27_3  [key=0, style=solid, color=green];
m27_2 -> m27_6  [key=1, style=dashed, color=green, label=possibleMsgs];
m27_3 -> m27_4  [key=0, style=solid, color=green];
m27_3 -> m27_8  [key=2, style=dotted, color=green];
m27_3 -> m27_5  [key=1, style=dashed, color=green, label=c];
m27_3 -> m27_6  [key=1, style=dashed, color=green, label=c];
m27_3 -> m27_14  [key=1, style=dashed, color=green, label=c];
m27_6 -> m27_7  [key=0, style=solid, color=green];
m27_6 -> m27_10  [key=2, style=dotted, color=green];
m27_6 -> m27_11  [key=2, style=dotted, color=green];
m27_6 -> m27_12  [key=2, style=dotted, color=green];
m27_6 -> m27_13  [key=1, style=dashed, color=green, label="lambda expression"];
m27_4 -> m27_5  [key=0, style=solid, color=green];
m27_4 -> m27_9  [key=2, style=dotted, color=green];
m27_5 -> m27_6  [key=0, style=solid, color=green];
m27_5 -> m27_9  [key=2, style=dotted, color=green];
m27_7 -> m27_0  [key=0, style=bold, color=blue];
m27_228 -> m27_229  [key=0, style=solid];
m27_232 -> m27_9  [key=2, style=dotted];
m27_232 -> m27_233  [key=0, style=solid];
m27_233 -> m27_9  [key=2, style=dotted];
m27_233 -> m27_234  [key=0, style=solid];
m27_234 -> m27_9  [key=2, style=dotted];
m27_234 -> m27_235  [key=0, style=solid];
m27_235 -> m27_9  [key=2, style=dotted];
m27_235 -> m27_236  [key=0, style=solid];
m27_236 -> m27_9  [key=2, style=dotted];
m27_236 -> m27_237  [key=0, style=solid];
m27_237 -> m27_9  [key=2, style=dotted];
m27_237 -> m27_238  [key=0, style=solid];
m27_238 -> m27_9  [key=2, style=dotted];
m27_238 -> m27_239  [key=0, style=solid];
m27_229 -> m27_232  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_229 -> m27_233  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_229 -> m27_234  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_229 -> m27_230  [key=0, style=solid];
m27_229 -> m27_69  [key=2, style=dotted];
m27_229 -> m27_241  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_231 -> m27_232  [key=0, style=solid];
m27_231 -> m27_206  [key=2, style=dotted];
m27_230 -> m27_235  [key=1, style=dashed, color=darkseagreen4, label=o];
m27_230 -> m27_236  [key=1, style=dashed, color=darkseagreen4, label=o];
m27_230 -> m27_237  [key=1, style=dashed, color=darkseagreen4, label=o];
m27_230 -> m27_238  [key=1, style=dashed, color=darkseagreen4, label=o];
m27_230 -> m27_231  [key=0, style=solid];
m27_230 -> m27_30  [key=2, style=dotted];
m27_230 -> m27_91  [key=2, style=dotted];
m27_230 -> m27_241  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_230 -> m27_242  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_239 -> m27_228  [key=0, style=bold, color=blue];
m27_55 -> m27_56  [key=0, style=solid];
m27_65 -> m27_10  [key=2, style=dotted];
m27_65 -> m27_11  [key=2, style=dotted];
m27_65 -> m27_12  [key=2, style=dotted];
m27_65 -> m27_66  [key=0, style=solid];
m27_65 -> m27_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_63 -> m27_9  [key=2, style=dotted];
m27_63 -> m27_64  [key=0, style=solid];
m27_66 -> m27_9  [key=2, style=dotted];
m27_66 -> m27_67  [key=0, style=solid];
m27_67 -> m27_9  [key=2, style=dotted];
m27_67 -> m27_68  [key=0, style=solid];
m27_59 -> m27_9  [key=2, style=dotted];
m27_59 -> m27_60  [key=0, style=solid];
m27_60 -> m27_9  [key=2, style=dotted];
m27_60 -> m27_61  [key=0, style=solid];
m27_60 -> m27_54  [key=2, style=dotted];
m27_61 -> m27_9  [key=2, style=dotted];
m27_61 -> m27_62  [key=0, style=solid];
m27_61 -> m27_54  [key=2, style=dotted];
m27_62 -> m27_9  [key=2, style=dotted];
m27_62 -> m27_63  [key=0, style=solid];
m27_62 -> m27_54  [key=2, style=dotted];
m27_56 -> m27_65  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_56 -> m27_63  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_56 -> m27_66  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_56 -> m27_67  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_56 -> m27_57  [key=0, style=solid];
m27_56 -> m27_69  [key=2, style=dotted];
m27_56 -> m27_75  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_56 -> m27_80  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_64 -> m27_65  [key=0, style=solid];
m27_58 -> m27_59  [key=0, style=solid];
m27_58 -> m27_60  [key=1, style=dashed, color=darkseagreen4, label=c];
m27_58 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label=c];
m27_58 -> m27_62  [key=1, style=dashed, color=darkseagreen4, label=c];
m27_58 -> m27_71  [key=2, style=dotted];
m27_58 -> m27_72  [key=2, style=dotted];
m27_58 -> m27_73  [key=2, style=dotted];
m27_57 -> m27_58  [key=0, style=solid];
m27_57 -> m27_30  [key=2, style=dotted];
m27_57 -> m27_52  [key=2, style=dotted];
m27_57 -> m27_70  [key=2, style=dotted];
m27_57 -> m27_75  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_57 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_68 -> m27_55  [key=0, style=bold, color=blue];
m27_137 -> m27_138  [key=0, style=solid];
m27_143 -> m27_9  [key=2, style=dotted];
m27_143 -> m27_144  [key=0, style=solid];
m27_144 -> m27_9  [key=2, style=dotted];
m27_144 -> m27_145  [key=0, style=solid];
m27_145 -> m27_9  [key=2, style=dotted];
m27_145 -> m27_146  [key=0, style=solid];
m27_139 -> m27_143  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_139 -> m27_144  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_139 -> m27_145  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_139 -> m27_140  [key=0, style=solid];
m27_139 -> m27_69  [key=2, style=dotted];
m27_139 -> m27_141  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_139 -> m27_148  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_142 -> m27_143  [key=0, style=solid];
m27_142 -> m27_71  [key=2, style=dotted];
m27_142 -> m27_72  [key=2, style=dotted];
m27_142 -> m27_131  [key=2, style=dotted];
m27_138 -> m27_139  [key=0, style=solid];
m27_138 -> m27_142  [key=1, style=dashed, color=darkseagreen4, label=json];
m27_140 -> m27_142  [key=1, style=dashed, color=darkseagreen4, label=serializer];
m27_140 -> m27_141  [key=0, style=solid];
m27_140 -> m27_114  [key=2, style=dotted];
m27_141 -> m27_142  [key=0, style=solid];
m27_141 -> m27_148  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_141 -> m27_149  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_146 -> m27_137  [key=0, style=bold, color=blue];
m27_284 -> m27_285  [key=0, style=solid];
m27_293 -> m27_9  [key=2, style=dotted];
m27_293 -> m27_294  [key=0, style=solid];
m27_294 -> m27_9  [key=2, style=dotted];
m27_294 -> m27_295  [key=0, style=solid];
m27_295 -> m27_9  [key=2, style=dotted];
m27_295 -> m27_296  [key=0, style=solid];
m27_288 -> m27_9  [key=2, style=dotted];
m27_288 -> m27_289  [key=0, style=solid];
m27_290 -> m27_9  [key=2, style=dotted];
m27_290 -> m27_291  [key=0, style=solid];
m27_291 -> m27_9  [key=2, style=dotted];
m27_291 -> m27_292  [key=0, style=solid];
m27_292 -> m27_9  [key=2, style=dotted];
m27_292 -> m27_293  [key=0, style=solid];
m27_285 -> m27_293  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_285 -> m27_294  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_285 -> m27_295  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_285 -> m27_286  [key=0, style=solid];
m27_285 -> m27_69  [key=2, style=dotted];
m27_285 -> m27_287  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_285 -> m27_298  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_287 -> m27_288  [key=0, style=solid];
m27_287 -> m27_30  [key=2, style=dotted];
m27_287 -> m27_91  [key=2, style=dotted];
m27_287 -> m27_298  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_287 -> m27_299  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_287 -> m27_289  [key=1, style=dashed, color=darkseagreen4, label=newDynamicObject];
m27_289 -> m27_290  [key=0, style=solid];
m27_289 -> m27_291  [key=1, style=dashed, color=darkseagreen4, label=d];
m27_289 -> m27_292  [key=1, style=dashed, color=darkseagreen4, label=d];
m27_286 -> m27_287  [key=0, style=solid];
m27_296 -> m27_284  [key=0, style=bold, color=blue];
m27_326 -> m27_327  [key=0, style=solid];
m27_332 -> m27_9  [key=2, style=dotted];
m27_332 -> m27_333  [key=0, style=solid];
m27_331 -> m27_332  [key=0, style=solid];
m27_331 -> m27_312  [key=2, style=dotted];
m27_327 -> m27_331  [key=1, style=dashed, color=darkseagreen4, label=settings];
m27_327 -> m27_30  [key=2, style=dotted];
m27_327 -> m27_328  [key=0, style=solid];
m27_330 -> m27_331  [key=0, style=solid];
m27_330 -> m27_310  [key=2, style=dotted];
m27_330 -> m27_311  [key=2, style=dotted];
m27_330 -> m27_337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_330 -> m27_340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_330 -> m27_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_329 -> m27_69  [key=2, style=dotted];
m27_329 -> m27_330  [key=0, style=solid];
m27_329 -> m27_329  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m27_329 -> m27_309  [key=2, style=dotted];
m27_328 -> m27_329  [key=0, style=solid];
m27_328 -> m27_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_333 -> m27_326  [key=0, style=bold, color=blue];
m27_428 -> m27_429  [key=0, style=solid];
m27_429 -> m27_30  [key=2, style=dotted];
m27_429 -> m27_91  [key=2, style=dotted];
m27_429 -> m27_430  [key=0, style=solid];
m27_429 -> m27_433  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.ErrorEventArgs"];
m27_430 -> m27_191  [key=2, style=dotted];
m27_430 -> m27_431  [key=0, style=solid];
m27_431 -> m27_428  [key=0, style=bold, color=blue];
m27_384 -> m27_386  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m27_384 -> m27_385  [key=0, style=solid];
m27_388 -> m27_383  [key=2, style=dotted];
m27_388 -> m27_389  [key=0, style=solid];
m27_387 -> m27_388  [key=0, style=solid];
m27_386 -> m27_387  [key=0, style=solid];
m27_386 -> m27_389  [key=0, style=solid];
m27_386 -> m27_390  [key=2, style=dotted];
m27_385 -> m27_386  [key=0, style=solid];
m27_389 -> m27_384  [key=0, style=bold, color=blue];
m27_465 -> m27_14  [key=1, style=dashed, color=green, label=c];
m27_466 -> m27_75  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_466 -> m27_80  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_468 -> m27_134  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_467 -> m27_118  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_469 -> m27_148  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_470 -> m27_162  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_471 -> m27_176  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_472 -> m27_193  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_473 -> m27_208  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_474 -> m27_225  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_475 -> m27_241  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_476 -> m27_261  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_477 -> m27_281  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_478 -> m27_298  [key=1, style=dashed, color=darkseagreen4, label=errors];
m27_479 -> m27_372  [key=1, style=dashed, color=darkseagreen4, label=jReader];
m27_480 -> m27_372  [key=1, style=dashed, color=darkseagreen4, label=s];
m27_482 -> m27_412  [key=1, style=dashed, color=darkseagreen4, label=serialiser];
m27_483 -> m27_412  [key=1, style=dashed, color=darkseagreen4, label=reader];
m27_487 -> m27_446  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader"];
m27_487 -> m27_448  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader"];
m27_487 -> m27_454  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader"];
m27_487 -> m27_449  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader"];
m27_487 -> m27_451  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader"];
m27_487 -> m27_453  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader"];
m27_487 -> m27_455  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ThrowingReader"];
m27_484 -> m27_425  [key=1, style=dashed, color=darkseagreen4, label=serialiser];
m27_485 -> m27_425  [key=1, style=dashed, color=darkseagreen4, label=r];
m27_486 -> m27_425  [key=1, style=dashed, color=darkseagreen4, label=writer];
m27_481 -> m27_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.SerializationErrorHandlingTests.Something"];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_0 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_6  [key=2, style=dotted];
m28_1 -> m28_7  [key=2, style=dotted];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_8  [key=2, style=dotted];
m28_2 -> m28_9  [key=2, style=dotted];
m28_2 -> m28_4  [key=1, style=dashed, color=red, label=json];
m28_2 -> m28_6  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid, color=red];
m28_3 -> m28_10  [key=2, style=dotted];
m28_3 -> m28_6  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid, color=red];
m28_4 -> m28_11  [key=2, style=dotted, color=red];
m28_5 -> m28_0  [key=0, style=bold, color=blue];
m28_9 -> m28_10  [key=0, style=solid, color=green];
m28_9 -> m28_12  [key=1, style=dashed, color=green, label=string];
m28_9 -> m28_20  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_9 -> m28_21  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_9 -> m28_22  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_9 -> m28_23  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_9 -> m28_24  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_9 -> m28_25  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_10 -> m28_11  [key=0, style=solid, color=green];
m28_10 -> m28_0  [key=2, style=dotted, color=green];
m28_11 -> m28_12  [key=0, style=solid, color=green];
m28_11 -> m28_15  [key=2, style=dotted, color=green];
m28_11 -> m28_16  [key=2, style=dotted, color=green];
m28_11 -> m28_13  [key=1, style=dashed, color=green, label=json];
m28_12 -> m28_13  [key=0, style=solid, color=green];
m28_12 -> m28_17  [key=2, style=dotted, color=green];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_11  [key=2, style=dotted];
m28_14 -> m28_9  [key=0, style=bold, color=blue];
m28_40 -> m28_41  [key=0, style=solid];
m28_44 -> m28_45  [key=0, style=solid, color=green];
m28_44 -> m28_28  [key=2, style=dotted, color=green];
m28_43 -> m28_44  [key=0, style=solid, color=green];
m28_43 -> m28_28  [key=2, style=dotted];
m28_45 -> m28_46  [key=0, style=solid, color=green];
m28_45 -> m28_28  [key=2, style=dotted, color=green];
m28_46 -> m28_47  [key=0, style=solid, color=green];
m28_46 -> m28_28  [key=2, style=dotted, color=green];
m28_47 -> m28_48  [key=0, style=solid, color=green];
m28_47 -> m28_28  [key=2, style=dotted, color=green];
m28_41 -> m28_28  [key=2, style=dotted];
m28_41 -> m28_42  [key=0, style=solid];
m28_42 -> m28_28  [key=2, style=dotted];
m28_42 -> m28_43  [key=0, style=solid];
m28_48 -> m28_40  [key=0, style=bold, color=blue];
m28_49 -> m28_50  [key=0, style=solid];
m28_54 -> m28_39  [key=2, style=dotted];
m28_54 -> m28_55  [key=0, style=solid];
m28_51 -> m28_54  [key=1, style=dashed, color=darkseagreen4, label=reportJSON];
m28_51 -> m28_52  [key=0, style=solid];
m28_51 -> m28_57  [key=2, style=dotted];
m28_53 -> m28_54  [key=0, style=solid];
m28_53 -> m28_57  [key=2, style=dotted];
m28_50 -> m28_51  [key=0, style=solid];
m28_50 -> m28_56  [key=2, style=dotted];
m28_52 -> m28_53  [key=0, style=solid];
m28_52 -> m28_58  [key=2, style=dotted];
m28_55 -> m28_49  [key=0, style=bold, color=blue];
m28_19 -> m28_20  [key=0, style=solid, color=green];
m28_20 -> m28_21  [key=0, style=solid, color=green];
m28_20 -> m28_9  [key=2, style=dotted, color=green];
m28_21 -> m28_22  [key=0, style=solid, color=green];
m28_21 -> m28_9  [key=2, style=dotted, color=green];
m28_22 -> m28_23  [key=0, style=solid, color=green];
m28_22 -> m28_9  [key=2, style=dotted, color=green];
m28_23 -> m28_24  [key=0, style=solid, color=green];
m28_23 -> m28_9  [key=2, style=dotted, color=green];
m28_24 -> m28_25  [key=0, style=solid, color=green];
m28_24 -> m28_9  [key=2, style=dotted, color=green];
m28_25 -> m28_26  [key=0, style=solid, color=green];
m28_25 -> m28_9  [key=2, style=dotted, color=green];
m28_26 -> m28_27  [key=0, style=solid, color=green];
m28_26 -> m28_9  [key=2, style=dotted, color=green];
m28_27 -> m28_19  [key=0, style=bold, color=blue];
m28_28 -> m28_20  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_28 -> m28_21  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_28 -> m28_22  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_28 -> m28_23  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_28 -> m28_24  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_28 -> m28_25  [key=3, color=green, style=bold, label="Parameter variable string version2"];
m28_28 -> m28_29  [key=0, style=solid];
m28_28 -> m28_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_28 -> m28_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_34 -> m28_35  [key=0, style=solid, color=green];
m28_34 -> m28_39  [key=2, style=dotted, color=green];
m28_30 -> m28_34  [key=1, style=dashed, color=green, label=expectedVersion1];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> m28_6  [key=2, style=dotted];
m28_32 -> m28_34  [key=1, style=dashed, color=green, label=versionClass];
m28_32 -> m28_35  [key=1, style=dashed, color=green, label=versionClass];
m28_32 -> m28_33  [key=0, style=solid, color=green];
m28_32 -> m28_36  [key=1, style=dashed, color=green, label=versionClass];
m28_32 -> m28_15  [key=2, style=dotted];
m28_32 -> m28_38  [key=2, style=dotted];
m28_33 -> m28_34  [key=0, style=solid, color=green];
m28_33 -> m28_39  [key=2, style=dotted, color=green];
m28_35 -> m28_36  [key=0, style=solid, color=green];
m28_35 -> m28_39  [key=2, style=dotted, color=green];
m28_31 -> m28_35  [key=1, style=dashed, color=green, label=expectedVersion2];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_6  [key=2, style=dotted];
m28_36 -> m28_37  [key=0, style=solid, color=green];
m28_36 -> m28_39  [key=2, style=dotted, color=green];
m28_29 -> m28_17  [key=2, style=dotted];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_32  [key=1, style=dashed, color=darkseagreen4, label=json];
m28_37 -> m28_28  [key=0, style=bold, color=blue];
m28_60 -> m28_20  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_21  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_22  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_23  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_24  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_25  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_26  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_44  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_45  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_46  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_47  [key=1, style=dashed, color=green, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_42  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_60 -> m28_43  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.VersionConverterTests"];
m28_59 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.VersionClass"];
m28_59 -> m28_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.VersionClass"];
m28_59 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.VersionClass"];
m28_59 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Converters.VersionClass"];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_7  [key=2, style=dotted];
m30_1 -> m30_3  [key=1, style=dashed, color=darkseagreen4, label=o];
m30_1 -> m30_4  [key=1, style=dashed, color=darkseagreen4, label=o];
m30_1 -> m30_5  [key=1, style=dashed, color=darkseagreen4, label=o];
m30_2 -> m30_3  [key=0, style=solid];
m30_2 -> m30_8  [key=2, style=dotted];
m30_2 -> m30_9  [key=2, style=dotted];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_10  [key=2, style=dotted];
m30_3 -> m30_9  [key=2, style=dotted];
m30_4 -> m30_5  [key=0, style=solid];
m30_4 -> m30_11  [key=2, style=dotted];
m30_4 -> m30_10  [key=2, style=dotted];
m30_4 -> m30_9  [key=2, style=dotted];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_11  [key=2, style=dotted];
m30_5 -> m30_10  [key=2, style=dotted];
m30_5 -> m30_12  [key=2, style=dotted];
m30_6 -> m30_0  [key=0, style=bold, color=blue];
m30_7 -> m30_7  [key=3, color=darkorchid, style=bold, label="Local variable decimal d"];
}
