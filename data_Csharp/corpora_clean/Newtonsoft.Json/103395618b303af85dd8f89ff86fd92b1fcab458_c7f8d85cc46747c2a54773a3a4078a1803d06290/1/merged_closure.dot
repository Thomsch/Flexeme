digraph  {
m0_7 [cluster="Unk.CreateComment", file="ExtensionsTests.cs", label="Entry Unk.CreateComment", span=""];
m0_452 [cluster="XmlDocument.cstr", file="ExtensionsTests.cs", label="Entry XmlDocument.cstr", span=""];
m0_160 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="136-136"];
m0_499 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1223-1223"];
m0_501 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.String", span="1225-1225"];
m0_502 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="return reader.Value.ToString();", span="1227-1227"];
m0_503 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.Integer", span="1229-1229"];
m0_504 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1231-1231"];
m0_505 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.Float", span="1233-1233"];
m0_506 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1235-1235"];
m0_507 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.Boolean", span="1237-1237"];
m0_508 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1239-1239"];
m0_509 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.Date", span="1241-1241"];
m0_510 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1243-1243"];
m0_512 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.Null", span="1246-1246"];
m0_514 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="throw new Exception(''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1252-1252"];
m0_511 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1244-1244"];
m0_513 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="return null;", span="1248-1248"];
m0_515 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1223-1223"];
m0_28 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="80-80"];
m0_29 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs", label="return new XmlNodeWrapper(_document.CreateProcessingInstruction(target, data));", span="82-82"];
m0_30 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="80-80"];
m0_409 [cluster="Unk.All", file="ExtensionsTests.cs", label="Entry Unk.All", span=""];
m0_226 [cluster="XAttributeWrapper.cstr", file="ExtensionsTests.cs", label="Entry XAttributeWrapper.cstr", span=""];
m0_123 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="379-379"];
m0_124 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs", label="return new XObjectWrapper(new XComment(text));", span="381-381"];
m0_125 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="379-379"];
m0_90 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="277-277"];
m0_91 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="277-277"];
m0_102 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="283-283"];
m0_103 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="283-283"];
m0_474 [cluster="object.ToString()", file="ExtensionsTests.cs", label="Entry object.ToString()", span="0-0"];
m0_654 [cluster="string.StartsWith(string, System.StringComparison)", file="ExtensionsTests.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m0_189 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="574-574"];
m0_190 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="node is XDocument", span="576-576"];
m0_191 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="return new XDocumentWrapper((XDocument)node);", span="577-577"];
m0_192 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="node is XElement", span="578-578"];
m0_193 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="return new XElementWrapper((XElement)node);", span="579-579"];
m0_194 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="node is XContainer", span="580-580"];
m0_195 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="return new XContainerWrapper((XContainer)node);", span="581-581"];
m0_196 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="node is XProcessingInstruction", span="582-582"];
m0_197 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="return new XProcessingInstructionWrapper((XProcessingInstruction)node);", span="583-583"];
m0_198 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="node is XText", span="584-584"];
m0_199 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="return new XTextWrapper((XText)node);", span="585-585"];
m0_200 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="node is XComment", span="586-586"];
m0_201 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="return new XCommentWrapper((XComment)node);", span="587-587"];
m0_202 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="node is XAttribute", span="588-588"];
m0_203 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="return new XAttributeWrapper((XAttribute) node);", span="589-589"];
m0_204 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="return new XObjectWrapper(node);", span="591-591"];
m0_205 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="574-574"];
m0_156 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="419-419"];
m0_157 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="421-421"];
m0_158 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs", label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceURI)));", span="422-422"];
m0_159 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="419-419"];
m0_453 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1172-1172"];
m0_477 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="string.IsNullOrEmpty(propertyName)", span="1174-1174"];
m0_479 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1177-1177"];
m0_480 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1179-1179"];
m0_481 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="IXmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="1181-1181"];
m0_482 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="currentNode.AppendChild(element)", span="1183-1183"];
m0_485 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                               ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix), nameValue.Value)\r\n                               : document.CreateAttribute(nameValue.Key, nameValue.Value)", span="1190-1192"];
m0_487 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.String\r\n        || reader.TokenType == JsonToken.Integer\r\n        || reader.TokenType == JsonToken.Float\r\n        || reader.TokenType == JsonToken.Boolean\r\n        || reader.TokenType == JsonToken.Date", span="1197-1201"];
m0_488 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="element.AppendChild(document.CreateTextNode(ConvertTokenToXmlValue(reader)))", span="1203-1203"];
m0_489 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.Null", span="1205-1205"];
m0_490 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="reader.TokenType != JsonToken.EndObject", span="1212-1212"];
m0_491 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="manager.PushScope()", span="1214-1214"];
m0_492 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="DeserializeNode(reader, document, manager, element)", span="1216-1216"];
m0_493 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="manager.PopScope()", span="1218-1218"];
m0_478 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1175-1175"];
m0_483 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label=attributeNameValues, span="1186-1186"];
m0_486 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="element.SetAttributeNode(attribute)", span="1194-1194"];
m0_484 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1188-1188"];
m0_494 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1172-1172"];
m0_45 [cluster="Unk.CreateAttribute", file="ExtensionsTests.cs", label="Entry Unk.CreateAttribute", span=""];
m0_110 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="287-287"];
m0_111 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="287-287"];
m0_538 [cluster="System.Collections.IEnumerable.CastValid<T>()", file="ExtensionsTests.cs", label="Entry System.Collections.IEnumerable.CastValid<T>()", span="38-38"];
m0_165 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="664-664"];
m0_217 [cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="664-664"];
m0_306 [cluster="JsonSerializationException.cstr", file="ExtensionsTests.cs", label="Entry JsonSerializationException.cstr", span=""];
m0_139 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="399-399"];
m0_140 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs", label="return new XObjectWrapper(new XText(text));", span="401-401"];
m0_141 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="399-399"];
m0_66 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="178-178"];
m0_67 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="ExtensionsTests.cs", label="_node = node", span="180-180"];
m0_68 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="178-178"];
m0_51 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="127-127"];
m0_52 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="ExtensionsTests.cs", label="_element = element", span="130-130"];
m0_53 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="127-127"];
m0_316 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="896-896"];
m0_317 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="899-899"];
m0_319 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="i < node.ChildNodes.Count", span="901-901"];
m0_320 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="IXmlNode childNode = node.ChildNodes[i]", span="903-903"];
m0_321 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="string nodeName = GetPropertyName(childNode, manager)", span="904-904"];
m0_335 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="934-934"];
m0_337 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label=writePropertyName, span="940-940"];
m0_338 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WritePropertyName(elementNames)", span="941-941"];
m0_339 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteStartArray()", span="943-943"];
m0_342 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="SerializeNode(writer, groupedNodes[i], manager, false)", span="947-947"];
m0_344 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteEndArray()", span="950-950"];
m0_318 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="int i = 0", span="901-901"];
m0_323 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="907-907"];
m0_325 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="nodesGroupedByName.Add(nodeName, nodes)", span="910-910"];
m0_328 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label=nodesGroupedByName, span="918-918"];
m0_327 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="i++", span="901-901"];
m0_326 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="nodes.Add(childNode)", span="913-913"];
m0_322 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="List<IXmlNode> nodes", span="906-906"];
m0_324 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="nodes = new List<IXmlNode>()", span="909-909"];
m0_329 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="920-920"];
m0_330 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="bool writeArray", span="921-921"];
m0_331 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="groupedNodes.Count == 1", span="923-923"];
m0_332 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writeArray = IsArray(groupedNodes[0])", span="925-925"];
m0_336 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="string elementNames = nodeNameGroup.Key", span="938-938"];
m0_341 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="i < groupedNodes.Count", span="945-945"];
m0_333 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writeArray = true", span="929-929"];
m0_334 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="!writeArray", span="932-932"];
m0_340 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="int i = 0", span="945-945"];
m0_343 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="i++", span="945-945"];
m0_345 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="896-896"];
m0_11 [cluster="Unk.CreateTextNode", file="ExtensionsTests.cs", label="Entry Unk.CreateTextNode", span=""];
m0_73 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="208-208"];
m0_74 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs", label="node.NodeType", span="210-210"];
m0_76 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs", label="return new XmlElementWrapper((XmlElement) node);", span="213-213"];
m0_78 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs", label="return new XmlDeclarationWrapper((XmlDeclaration) node);", span="215-215"];
m0_79 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs", label="return new XmlNodeWrapper(node);", span="217-217"];
m0_75 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs", label="XmlNodeType.Element", span="212-212"];
m0_77 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs", label="XmlNodeType.XmlDeclaration", span="214-214"];
m0_80 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="208-208"];
m0_588 [cluster="string.Substring(int)", file="ExtensionsTests.cs", label="Entry string.Substring(int)", span="0-0"];
m0_63 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="150-150"];
m0_64 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="ExtensionsTests.cs", label="_declaration = declaration", span="153-153"];
m0_65 [cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="150-150"];
m0_58 [cluster="Unk.SetAttributeNode", file="ExtensionsTests.cs", label="Entry Unk.SetAttributeNode", span=""];
m0_92 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="278-278"];
m0_93 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="278-278"];
m0_171 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="447-447"];
m0_172 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="449-449"];
m0_176 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="return base.AppendChild(newChild);", span="457-457"];
m0_173 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="declarationWrapper != null", span="450-450"];
m0_174 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Document.Declaration = declarationWrapper._declaration", span="452-452"];
m0_175 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="return declarationWrapper;", span="453-453"];
m0_177 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="447-447"];
m0_520 [cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="ExtensionsTests.cs", label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0"];
m0_658 [cluster="Unk.Where", file="ExtensionsTests.cs", label="Entry Unk.Where", span=""];
m0_24 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="75-75"];
m0_25 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs", label="return new XmlNodeWrapper(_document.CreateXmlDeclaration(version, encoding, standalone));", span="77-77"];
m0_26 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="75-75"];
m0_167 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="430-430"];
m0_168 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="432-432"];
m0_169 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceURI), value));", span="433-433"];
m0_170 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="430-430"];
m0_210 [cluster="Unk.Add", file="ExtensionsTests.cs", label="Entry Unk.Add", span=""];
m0_413 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="73-73"];
m0_131 [cluster="XText.cstr", file="ExtensionsTests.cs", label="Entry XText.cstr", span=""];
m0_522 [cluster="System.Exception.Exception(string)", file="ExtensionsTests.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m0_516 [cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="ExtensionsTests.cs", label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0"];
m0_523 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="ExtensionsTests.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m0_54 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="133-133"];
m0_55 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="135-135"];
m0_56 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="_element.SetAttributeNode((XmlAttribute) xmlAttributeWrapper.WrappedNode)", span="137-137"];
m0_57 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="133-133"];
m0_411 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m0_273 [cluster="Unk.AddNamespace", file="ExtensionsTests.cs", label="Entry Unk.AddNamespace", span=""];
m0_475 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1388-1388"];
m0_591 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="propertyName == DeclarationName", span="1390-1390"];
m0_595 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1395-1395"];
m0_596 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="reader.Value.ToString()", span="1397-1397"];
m0_598 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="reader.Read()", span="1400-1400"];
m0_599 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="version = reader.Value.ToString()", span="1401-1401"];
m0_601 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="reader.Read()", span="1404-1404"];
m0_602 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="encoding = reader.Value.ToString()", span="1405-1405"];
m0_604 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="reader.Read()", span="1408-1408"];
m0_605 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="standalone = reader.Value.ToString()", span="1409-1409"];
m0_606 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1412-1412"];
m0_607 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1416-1416"];
m0_608 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="currentNode.AppendChild(declaration)", span="1417-1417"];
m0_609 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1421-1421"];
m0_610 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="currentNode.AppendChild(instruction)", span="1422-1422"];
m0_592 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="string version = null", span="1392-1392"];
m0_593 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="string encoding = null", span="1393-1393"];
m0_594 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="string standalone = null", span="1394-1394"];
m0_597 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="''@version''", span="1399-1399"];
m0_600 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="''@encoding''", span="1403-1403"];
m0_603 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="''@standalone''", span="1407-1407"];
m0_611 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1388-1388"];
m0_213 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="646-646"];
m0_214 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="throw new InvalidOperationException();", span="648-648"];
m0_215 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="646-646"];
m0_8 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="55-55"];
m0_9 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs", label="return new XmlNodeWrapper(_document.CreateTextNode(text));", span="57-57"];
m0_10 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="55-55"];
m0_19 [cluster="Unk.CreateWhitespace", file="ExtensionsTests.cs", label="Entry Unk.CreateWhitespace", span=""];
m0_0 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="44-44"];
m0_1 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="ExtensionsTests.cs", label="_document = document", span="47-47"];
m0_2 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="44-44"];
m0_496 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="127-127"];
m0_27 [cluster="Unk.CreateXmlDeclaration", file="ExtensionsTests.cs", label="Entry Unk.CreateXmlDeclaration", span=""];
m0_518 [cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="ExtensionsTests.cs", label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0"];
m0_106 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="285-285"];
m0_107 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="285-285"];
m0_135 [cluster="XCData.cstr", file="ExtensionsTests.cs", label="Entry XCData.cstr", span=""];
m0_348 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ExtensionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_142 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="404-404"];
m0_143 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs", label="return new XDeclarationWrapper(new XDeclaration(version, encoding, standalone));", span="406-406"];
m0_144 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="404-404"];
m0_655 [cluster="string.Substring(int, int)", file="ExtensionsTests.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_3 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="50-50"];
m0_4 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs", label="return new XmlNodeWrapper(_document.CreateComment(data));", span="52-52"];
m0_5 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="50-50"];
m0_450 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m0_20 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="70-70"];
m0_21 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs", label="return new XmlNodeWrapper(_document.CreateSignificantWhitespace(text));", span="72-72"];
m0_22 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="70-70"];
m0_6 [cluster="XmlNodeWrapper.cstr", file="ExtensionsTests.cs", label="Entry XmlNodeWrapper.cstr", span=""];
m0_457 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1133-1133"];
m0_458 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label=propertyName, span="1135-1135"];
m0_460 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1138-1138"];
m0_462 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1141-1141"];
m0_464 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1144-1144"];
m0_466 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1147-1147"];
m0_467 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1151-1151"];
m0_468 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="CreateInstruction(reader, document, currentNode, propertyName)", span="1153-1153"];
m0_469 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.StartArray", span="1157-1157"];
m0_470 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1160-1160"];
m0_472 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1166-1166"];
m0_459 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label=TextName, span="1137-1137"];
m0_461 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label=CDataName, span="1140-1140"];
m0_463 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label=WhitespaceName, span="1143-1143"];
m0_465 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label=SignificantWhitespaceName, span="1146-1146"];
m0_471 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="return;", span="1161-1161"];
m0_473 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1133-1133"];
m0_519 [cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="ExtensionsTests.cs", label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0"];
m0_181 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="499-499"];
m0_182 [cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="499-499"];
m0_312 [cluster="Unk.ToBoolean", file="ExtensionsTests.cs", label="Entry Unk.ToBoolean", span=""];
m0_89 [cluster="Unk.AppendChild", file="ExtensionsTests.cs", label="Entry Unk.AppendChild", span=""];
m0_521 [cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="27-27"];
m0_154 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="704-704"];
m0_218 [cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="704-704"];
m0_274 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="845-845"];
m0_275 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="string prefix = (node.NamespaceURI == null || (node.LocalName == ''xmlns'' && node.NamespaceURI == ''http://www.w3.org/2000/xmlns/''))\r\n                        ? null\r\n                        : manager.LookupPrefix(node.NamespaceURI)", span="847-849"];
m0_277 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return prefix + '':'' + node.LocalName;", span="852-852"];
m0_278 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return node.LocalName;", span="854-854"];
m0_276 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="!string.IsNullOrEmpty(prefix)", span="851-851"];
m0_279 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="845-845"];
m0_253 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ExtensionsTests.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m0_414 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="640-640"];
m0_227 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="736-736"];
m0_228 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs", label="return Element.GetPrefixOfNamespace(namespaceURI);", span="738-738"];
m0_229 [cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="736-736"];
m0_410 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1512-1512"];
m0_656 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="ExtensionsTests.cs", label="return c.Where(a => a.NamespaceURI != JsonNamespaceUri);", span="1514-1514"];
m0_657 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1512-1512"];
m0_271 [cluster="System.Collections.Generic.List<T>.Reverse()", file="ExtensionsTests.cs", label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0"];
m0_98 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="281-281"];
m0_99 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="281-281"];
m0_178 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="594-594"];
m0_207 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Container.Add(newChild.WrappedNode)", span="596-596"];
m0_208 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="return newChild;", span="597-597"];
m0_209 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="594-594"];
m0_307 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="887-887"];
m0_308 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="IXmlNode jsonArrayAttribute = (node.Attributes != null)\r\n                                      ? node.Attributes.SingleOrDefault(a => a.LocalName == ''Array'' && a.NamespaceURI == JsonNamespaceUri)\r\n                                      : null", span="889-891"];
m0_309 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="return (jsonArrayAttribute != null && XmlConvert.ToBoolean(jsonArrayAttribute.Value));", span="893-893"];
m0_310 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="887-887"];
m0_146 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="409-409"];
m0_147 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs", label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="411-411"];
m0_148 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="409-409"];
m0_72 [cluster="Unk.WrapNode", file="ExtensionsTests.cs", label="Entry Unk.WrapNode", span=""];
m0_23 [cluster="Unk.CreateSignificantWhitespace", file="ExtensionsTests.cs", label="Entry Unk.CreateSignificantWhitespace", span=""];
m0_35 [cluster="XmlElementWrapper.cstr", file="ExtensionsTests.cs", label="Entry XmlElementWrapper.cstr", span=""];
m0_282 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="857-857"];
m0_283 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="node.NodeType", span="859-859"];
m0_285 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="node.NamespaceURI == JsonNamespaceUri", span="862-862"];
m0_286 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return ''$'' + node.LocalName;", span="863-863"];
m0_287 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return ''@'' + ResolveFullName(node, manager);", span="865-865"];
m0_293 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return ResolveFullName(node, manager);", span="871-871"];
m0_295 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return ''?'' + ResolveFullName(node, manager);", span="873-873"];
m0_304 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="883-883"];
m0_284 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="XmlNodeType.Attribute", span="861-861"];
m0_288 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="XmlNodeType.CDATA", span="866-866"];
m0_290 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="XmlNodeType.Comment", span="868-868"];
m0_292 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="XmlNodeType.Element", span="870-870"];
m0_294 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="XmlNodeType.ProcessingInstruction", span="872-872"];
m0_296 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="XmlNodeType.XmlDeclaration", span="874-874"];
m0_298 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="XmlNodeType.SignificantWhitespace", span="876-876"];
m0_300 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="XmlNodeType.Text", span="878-878"];
m0_302 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="XmlNodeType.Whitespace", span="880-880"];
m0_289 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return CDataName;", span="867-867"];
m0_291 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return CommentName;", span="869-869"];
m0_297 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return DeclarationName;", span="875-875"];
m0_299 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return SignificantWhitespaceName;", span="877-877"];
m0_301 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return TextName;", span="879-879"];
m0_303 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return WhitespaceName;", span="881-881"];
m0_305 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="857-857"];
m0_454 [cluster="Newtonsoft.Json.JsonReader.Read()", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="222-222"];
m0_151 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="414-414"];
m0_152 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs", label="return new XElementWrapper(new XElement(elementName));", span="416-416"];
m0_153 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="414-414"];
m0_150 [cluster="XProcessingInstruction.cstr", file="ExtensionsTests.cs", label="Entry XProcessingInstruction.cstr", span=""];
m0_419 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1073-1073"];
m0_420 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1075-1075"];
m0_423 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="typeof(XObject).IsAssignableFrom(objectType)", span="1080-1080"];
m0_424 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="objectType != typeof (XDocument) && objectType != typeof (XElement)", span="1082-1082"];
m0_429 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1091-1091"];
m0_430 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="objectType != typeof (XmlDocument)", span="1093-1093"];
m0_436 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1103-1103"];
m0_437 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="reader.TokenType != JsonToken.StartObject", span="1105-1105"];
m0_440 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1112-1112"];
m0_441 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="reader.Read()", span="1116-1116"];
m0_442 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="DeserializeNode(reader, document, manager, rootNode)", span="1117-1117"];
m0_443 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="objectType == typeof(XElement)", span="1121-1121"];
m0_421 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="IXmlDocument document = null", span="1076-1076"];
m0_422 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="IXmlNode rootNode = null", span="1077-1077"];
m0_435 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="document == null || rootNode == null", span="1102-1102"];
m0_444 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1123-1123"];
m0_447 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="return document.WrappedNode;", span="1130-1130"];
m0_425 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1083-1083"];
m0_426 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="XDocument d = new XDocument()", span="1085-1085"];
m0_427 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="document = new XDocumentWrapper(d)", span="1086-1086"];
m0_428 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="rootNode = document", span="1087-1087"];
m0_431 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1094-1094"];
m0_432 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="XmlDocument d = new XmlDocument()", span="1096-1096"];
m0_433 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="document = new XmlDocumentWrapper(d)", span="1097-1097"];
m0_434 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="rootNode = document", span="1098-1098"];
m0_438 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1106-1106"];
m0_439 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1108-1108"];
m0_445 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="element.Remove()", span="1124-1124"];
m0_446 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="return element;", span="1126-1126"];
m0_448 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1073-1073"];
m0_132 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="389-389"];
m0_133 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs", label="return new XObjectWrapper(new XCData(data));", span="391-391"];
m0_134 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="389-389"];
m0_500 [cluster="Unk.PopScope", file="ExtensionsTests.cs", label="Entry Unk.PopScope", span=""];
m0_241 [cluster="XmlNamespaceManager.cstr", file="ExtensionsTests.cs", label="Entry XmlNamespaceManager.cstr", span=""];
m0_270 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ExtensionsTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_415 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1178-1178"];
m0_162 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="425-425"];
m0_163 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="return new XAttributeWrapper(new XAttribute(name, value));", span="427-427"];
m0_164 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="425-425"];
m0_412 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="676-676"];
m0_346 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ExtensionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_476 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1256-1256"];
m0_524 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1258-1258"];
m0_525 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1260-1260"];
m0_526 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="currentNode.AppendChild(nestedArrayElement)", span="1262-1262"];
m0_528 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1265-1265"];
m0_529 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1267-1267"];
m0_532 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1273-1273"];
m0_534 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="IXmlElement arrayElement = nestedArrayElement.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1278-1278"];
m0_535 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1279-1279"];
m0_527 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="int count = 0", span="1264-1264"];
m0_530 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="count++", span="1268-1268"];
m0_533 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="count == 1 && WriteArrayAttribute", span="1276-1276"];
m0_531 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label=WriteArrayAttribute, span="1271-1271"];
m0_536 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1256-1256"];
m0_118 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="325-325"];
m0_119 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="ExtensionsTests.cs", label="_declaration = declaration", span="328-328"];
m0_120 [cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="325-325"];
m0_349 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="292-292"];
m0_112 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="301-301"];
m0_113 [cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="301-301"];
m0_126 [cluster="XObjectWrapper.cstr", file="ExtensionsTests.cs", label="Entry XObjectWrapper.cstr", span=""];
m0_149 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="529-529"];
m0_183 [cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="529-529"];
m0_136 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="394-394"];
m0_137 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs", label="return new XObjectWrapper(new XText(text));", span="396-396"];
m0_138 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="394-394"];
m0_517 [cluster="Unk.ToString", file="ExtensionsTests.cs", label="Entry Unk.ToString", span=""];
m0_589 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1493-1493"];
m0_644 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="1495-1495"];
m0_645 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="attributeName.Length == 5", span="1497-1497"];
m0_648 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="attributeName[5] == ':'", span="1502-1502"];
m0_649 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="1504-1504"];
m0_651 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="prefix = null", span="1508-1508"];
m0_646 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="prefix = string.Empty", span="1499-1499"];
m0_647 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="return true;", span="1500-1500"];
m0_650 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="return true;", span="1505-1505"];
m0_652 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="return false;", span="1509-1509"];
m0_653 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1493-1493"];
m0_12 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="60-60"];
m0_13 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs", label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="62-62"];
m0_14 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="60-60"];
m0_166 [cluster="XAttribute.cstr", file="ExtensionsTests.cs", label="Entry XAttribute.cstr", span=""];
m0_351 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265"];
m0_179 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="469-469"];
m0_180 [cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="469-469"];
m0_100 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="282-282"];
m0_101 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="282-282"];
m0_104 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="284-284"];
m0_105 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="284-284"];
m0_206 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="605-605"];
m0_211 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="ExtensionsTests.cs", label="_xmlObject = xmlObject", span="607-607"];
m0_212 [cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="605-605"];
m0_662 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1525-1525"];
m0_663 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs", label="typeof(XObject).IsAssignableFrom(valueType)", span="1528-1528"];
m0_665 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs", label="typeof(XmlNode).IsAssignableFrom(valueType)", span="1532-1532"];
m0_664 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs", label="return true;", span="1529-1529"];
m0_666 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs", label="return true;", span="1533-1533"];
m0_667 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs", label="return false;", span="1536-1536"];
m0_668 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1525-1525"];
m0_46 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="103-103"];
m0_47 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceURI))", span="105-105"];
m0_48 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="attribute.Value = value", span="106-106"];
m0_49 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="return attribute;", span="108-108"];
m0_50 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="103-103"];
m0_449 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ExtensionsTests.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m0_128 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="384-384"];
m0_129 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs", label="return new XObjectWrapper(new XText(text));", span="386-386"];
m0_130 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="384-384"];
m0_537 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1283-1283"];
m0_543 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs", label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1285-1285"];
m0_544 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs", label="element is XElementWrapper", span="1289-1289"];
m0_545 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs", label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1291-1291"];
m0_546 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs", label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1293-1293"];
m0_547 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1283-1283"];
m0_659 [cluster="lambda expression", file="ExtensionsTests.cs", label="Entry lambda expression", span="1514-1514"];
m0_69 [cluster="lambda expression", file="ExtensionsTests.cs", label="Entry lambda expression", span="205-205"];
m0_70 [cluster="lambda expression", file="ExtensionsTests.cs", label="WrapNode(n)", span="205-205"];
m0_71 [cluster="lambda expression", file="ExtensionsTests.cs", label="Exit lambda expression", span="205-205"];
m0_81 [cluster="lambda expression", file="ExtensionsTests.cs", label="Entry lambda expression", span="228-228"];
m0_82 [cluster="lambda expression", file="ExtensionsTests.cs", label="WrapNode(a)", span="228-228"];
m0_83 [cluster="lambda expression", file="ExtensionsTests.cs", label="Exit lambda expression", span="228-228"];
m0_186 [cluster="lambda expression", file="ExtensionsTests.cs", label="Entry lambda expression", span="560-560"];
m0_187 [cluster="lambda expression", file="ExtensionsTests.cs", label="WrapNode(n)", span="560-560"];
m0_188 [cluster="lambda expression", file="ExtensionsTests.cs", label="Exit lambda expression", span="560-560"];
m0_223 [cluster="lambda expression", file="ExtensionsTests.cs", label="Entry lambda expression", span="717-717"];
m0_224 [cluster="lambda expression", file="ExtensionsTests.cs", label="new XAttributeWrapper(a)", span="717-717"];
m0_225 [cluster="lambda expression", file="ExtensionsTests.cs", label="Exit lambda expression", span="717-717"];
m0_313 [cluster="lambda expression", file="ExtensionsTests.cs", label="Entry lambda expression", span="890-890"];
m0_314 [cluster="lambda expression", file="ExtensionsTests.cs", label="a.LocalName == ''Array'' && a.NamespaceURI == JsonNamespaceUri", span="890-890"];
m0_315 [cluster="lambda expression", file="ExtensionsTests.cs", label="Exit lambda expression", span="890-890"];
m0_417 [cluster="lambda expression", file="ExtensionsTests.cs", label="n.LocalName == node.LocalName", span="964-964"];
m0_416 [cluster="lambda expression", file="ExtensionsTests.cs", label="Entry lambda expression", span="964-964"];
m0_418 [cluster="lambda expression", file="ExtensionsTests.cs", label="Exit lambda expression", span="964-964"];
m0_541 [cluster="lambda expression", file="ExtensionsTests.cs", label="n.LocalName == propertyName", span="1278-1278"];
m0_540 [cluster="lambda expression", file="ExtensionsTests.cs", label="Entry lambda expression", span="1278-1278"];
m0_542 [cluster="lambda expression", file="ExtensionsTests.cs", label="Exit lambda expression", span="1278-1278"];
m0_642 [cluster="lambda expression", file="ExtensionsTests.cs", label="n.LocalName == propertyName", span="1457-1457"];
m0_641 [cluster="lambda expression", file="ExtensionsTests.cs", label="Entry lambda expression", span="1457-1457"];
m0_643 [cluster="lambda expression", file="ExtensionsTests.cs", label="Exit lambda expression", span="1457-1457"];
m0_660 [cluster="lambda expression", file="ExtensionsTests.cs", label="a.NamespaceURI != JsonNamespaceUri", span="1514-1514"];
m0_661 [cluster="lambda expression", file="ExtensionsTests.cs", label="Exit lambda expression", span="1514-1514"];
m0_451 [cluster="XDocument.cstr", file="ExtensionsTests.cs", label="Entry XDocument.cstr", span=""];
m0_281 [cluster="string.IsNullOrEmpty(string)", file="ExtensionsTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m0_121 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="361-361"];
m0_122 [cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="361-361"];
m0_116 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="313-313"];
m0_117 [cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="313-313"];
m0_37 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="90-90"];
m0_38 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs", label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceURI));", span="92-92"];
m0_39 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="90-90"];
m0_36 [cluster="Unk.CreateElement", file="ExtensionsTests.cs", label="Entry Unk.CreateElement", span=""];
m0_114 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="302-302"];
m0_115 [cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="302-302"];
m0_244 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239"];
m0_347 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ExtensionsTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m0_216 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ExtensionsTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m0_539 [cluster="Unk.Single", file="ExtensionsTests.cs", label="Entry Unk.Single", span=""];
m0_269 [cluster="System.Collections.Generic.List<T>.List()", file="ExtensionsTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_590 [cluster="System.Nullable<T>.GetValueOrDefault()", file="ExtensionsTests.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m0_184 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="553-553"];
m0_185 [cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="553-553"];
m0_94 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="279-279"];
m0_95 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="279-279"];
m0_350 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256"];
m0_59 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="140-140"];
m0_60 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs", label="return _element.GetPrefixOfNamespace(namespaceURI);", span="142-142"];
m0_61 [cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="140-140"];
m0_230 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="783-783"];
m0_231 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="IXmlNode node = WrapXml(value)", span="785-785"];
m0_235 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="writer.WriteStartObject()", span="791-791"];
m0_236 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="SerializeNode(writer, node, manager, !OmitRootObject)", span="793-793"];
m0_238 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="writer.WriteEndObject()", span="796-796"];
m0_232 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="787-787"];
m0_233 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="PushParentNamespaces(node, manager)", span="788-788"];
m0_234 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="!OmitRootObject", span="790-790"];
m0_237 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="!OmitRootObject", span="795-795"];
m0_239 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="783-783"];
m0_145 [cluster="XDeclaration.cstr", file="ExtensionsTests.cs", label="Entry XDeclaration.cstr", span=""];
m0_155 [cluster="XElement.cstr", file="ExtensionsTests.cs", label="Entry XElement.cstr", span=""];
m0_32 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="85-85"];
m0_33 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs", label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="87-87"];
m0_34 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="85-85"];
m0_219 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="709-709"];
m0_220 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="711-711"];
m0_221 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Element.Add(wrapper.WrappedNode)", span="712-712"];
m0_222 [cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="709-709"];
m0_242 [cluster="NameTable.cstr", file="ExtensionsTests.cs", label="Entry NameTable.cstr", span=""];
m0_127 [cluster="XComment.cstr", file="ExtensionsTests.cs", label="Entry XComment.cstr", span=""];
m0_15 [cluster="Unk.CreateCDataSection", file="ExtensionsTests.cs", label="Entry Unk.CreateCDataSection", span=""];
m0_240 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="799-799"];
m0_247 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs", label="value is XObject", span="802-802"];
m0_248 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs", label="return XContainerWrapper.WrapNode((XObject)value);", span="803-803"];
m0_249 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs", label="value is XmlNode", span="806-806"];
m0_250 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs", label="return new XmlNodeWrapper((XmlNode)value);", span="807-807"];
m0_251 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs", label="throw new ArgumentException(''Value must be an XML object.'', ''value'');", span="810-810"];
m0_252 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="799-799"];
m0_16 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="65-65"];
m0_17 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs", label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="67-67"];
m0_18 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="65-65"];
m0_31 [cluster="Unk.CreateProcessingInstruction", file="ExtensionsTests.cs", label="Entry Unk.CreateProcessingInstruction", span=""];
m0_246 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248"];
m0_40 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="95-95"];
m0_41 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="97-97"];
m0_42 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="attribute.Value = value", span="98-98"];
m0_43 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="return attribute;", span="100-100"];
m0_44 [cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="95-95"];
m0_96 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="280-280"];
m0_97 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="280-280"];
m0_108 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="286-286"];
m0_109 [cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="286-286"];
m0_161 [cluster="Unk.Get", file="ExtensionsTests.cs", label="Entry Unk.Get", span=""];
m0_497 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1426-1426"];
m0_612 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return (!string.IsNullOrEmpty(elementPrefix))\r\n               ? document.CreateElement(elementName, manager.LookupNamespace(elementPrefix))\r\n               : document.CreateElement(elementName);", span="1428-1430"];
m0_613 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1426-1426"];
m0_62 [cluster="Unk.GetPrefixOfNamespace", file="ExtensionsTests.cs", label="Entry Unk.GetPrefixOfNamespace", span=""];
m0_456 [cluster="Unk.Remove", file="ExtensionsTests.cs", label="Entry Unk.Remove", span=""];
m0_84 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="253-253"];
m0_85 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper) newChild", span="255-255"];
m0_87 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="return newChild;", span="258-258"];
m0_86 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="_node.AppendChild(xmlNodeWrapper._node)", span="256-256"];
m0_88 [cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="253-253"];
m0_245 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="955-955"];
m0_352 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="node.NodeType", span="957-957"];
m0_355 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="961-961"];
m0_357 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="IsArray(node) && node.ChildNodes.All(n => n.LocalName == node.LocalName) && node.ChildNodes.Count > 0", span="964-964"];
m0_358 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="SerializeGroupedNodes(writer, node, manager, false)", span="966-966"];
m0_359 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="node.Attributes", span="970-970"];
m0_362 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="manager.AddNamespace(prefix, attribute.Value)", span="978-978"];
m0_363 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label=writePropertyName, span="982-982"];
m0_364 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="983-983"];
m0_365 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="ValueAttributes(node.Attributes).Count() == 0 && node.ChildNodes.Count == 1\r\n                && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="985-986"];
m0_366 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteValue(node.ChildNodes[0].Value)", span="989-989"];
m0_367 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="991-991"];
m0_368 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteNull()", span="994-994"];
m0_369 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteStartObject()", span="998-998"];
m0_371 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="i < node.Attributes.Count", span="1000-1000"];
m0_372 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1002-1002"];
m0_374 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="SerializeGroupedNodes(writer, node, manager, true)", span="1005-1005"];
m0_375 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteEndObject()", span="1007-1007"];
m0_377 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label=writePropertyName, span="1013-1013"];
m0_378 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteComment(node.Value)", span="1014-1014"];
m0_385 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="node.NamespaceURI == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1022-1022"];
m0_387 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="node.NamespaceURI == JsonNamespaceUri", span="1025-1025"];
m0_388 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="node.LocalName == ''Array''", span="1027-1027"];
m0_390 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label=writePropertyName, span="1031-1031"];
m0_391 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1032-1032"];
m0_392 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteValue(node.Value)", span="1033-1033"];
m0_394 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1036-1036"];
m0_395 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1037-1037"];
m0_396 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteStartObject()", span="1038-1038"];
m0_398 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WritePropertyName(''@version'')", span="1042-1042"];
m0_399 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteValue(declaration.Version)", span="1043-1043"];
m0_401 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WritePropertyName(''@encoding'')", span="1047-1047"];
m0_402 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteValue(declaration.Encoding)", span="1048-1048"];
m0_404 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WritePropertyName(''@standalone'')", span="1052-1052"];
m0_405 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteValue(declaration.Standalone)", span="1053-1053"];
m0_406 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="writer.WriteEndObject()", span="1056-1056"];
m0_407 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1059-1059"];
m0_353 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.Document", span="959-959"];
m0_356 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.Element", span="963-963"];
m0_376 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.Comment", span="1012-1012"];
m0_379 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.Attribute", span="1016-1016"];
m0_393 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.XmlDeclaration", span="1035-1035"];
m0_354 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.DocumentFragment", span="960-960"];
m0_360 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="attribute.NamespaceURI == ''http://www.w3.org/2000/xmlns/''", span="972-972"];
m0_361 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="string prefix = (attribute.LocalName != ''xmlns'')\r\n                                  ? attribute.LocalName\r\n                                  : string.Empty", span="974-976"];
m0_370 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="int i = 0", span="1000-1000"];
m0_373 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="i++", span="1000-1000"];
m0_380 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.Text", span="1017-1017"];
m0_381 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.CDATA", span="1018-1018"];
m0_382 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.ProcessingInstruction", span="1019-1019"];
m0_383 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.Whitespace", span="1020-1020"];
m0_384 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="XmlNodeType.SignificantWhitespace", span="1021-1021"];
m0_386 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="return;", span="1023-1023"];
m0_389 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="return;", span="1028-1028"];
m0_397 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="!string.IsNullOrEmpty(declaration.Version)", span="1040-1040"];
m0_400 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="!string.IsNullOrEmpty(declaration.Encoding)", span="1045-1045"];
m0_403 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="!string.IsNullOrEmpty(declaration.Standalone)", span="1050-1050"];
m0_408 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="955-955"];
m0_243 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="813-813"];
m0_254 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="List<IXmlNode> parentElements = null", span="815-815"];
m0_255 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="IXmlNode parent = node", span="817-817"];
m0_264 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="manager.PushScope()", span="835-835"];
m0_267 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="839-839"];
m0_258 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="parentElements == null", span="822-822"];
m0_260 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="parentElements.Add(parent)", span="825-825"];
m0_261 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="parentElements != null", span="829-829"];
m0_262 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="parentElements.Reverse()", span="831-831"];
m0_263 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label=parentElements, span="833-833"];
m0_256 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="(parent = parent.ParentNode) != null", span="818-818"];
m0_257 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="parent.NodeType == XmlNodeType.Element", span="820-820"];
m0_259 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="parentElements = new List<IXmlNode>()", span="823-823"];
m0_265 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="parentElement.Attributes", span="836-836"];
m0_266 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="attribute.NamespaceURI == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="838-838"];
m0_268 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="813-813"];
m0_498 [cluster="Unk.LookupNamespace", file="ExtensionsTests.cs", label="Entry Unk.LookupNamespace", span=""];
m0_495 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1299-1299"];
m0_548 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1301-1301"];
m0_551 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="reader.TokenType != JsonToken.String\r\n          && reader.TokenType != JsonToken.Null\r\n          && reader.TokenType != JsonToken.Boolean\r\n          && reader.TokenType != JsonToken.Integer\r\n          && reader.TokenType != JsonToken.Float\r\n          && reader.TokenType != JsonToken.Date\r\n          && reader.TokenType != JsonToken.StartConstructor", span="1306-1312"];
m0_552 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="!finishedAttributes && !finishedElement && reader.Read()", span="1315-1315"];
m0_553 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="reader.TokenType", span="1317-1317"];
m0_555 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="string attributeName = reader.Value.ToString()", span="1320-1320"];
m0_562 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="reader.Read()", span="1331-1331"];
m0_563 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="attributeValue = ConvertTokenToXmlValue(reader)", span="1332-1332"];
m0_567 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1338-1338"];
m0_570 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="reader.Read()", span="1343-1343"];
m0_571 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="attributeValue = reader.Value.ToString()", span="1344-1344"];
m0_572 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1348-1348"];
m0_575 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="manager.LookupNamespace(''json'' + i) != null", span="1353-1353"];
m0_579 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1360-1360"];
m0_585 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="1380-1380"];
m0_549 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="bool finishedAttributes = false", span="1302-1302"];
m0_564 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="attributeNameValues.Add(attributeName, attributeValue)", span="1333-1333"];
m0_578 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1359-1359"];
m0_580 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1363-1363"];
m0_586 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="return attributeNameValues;", span="1385-1385"];
m0_550 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="bool finishedElement = false", span="1303-1303"];
m0_554 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="JsonToken.PropertyName", span="1319-1319"];
m0_583 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="JsonToken.EndObject", span="1376-1376"];
m0_556 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="string attributeValue", span="1321-1321"];
m0_557 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="!string.IsNullOrEmpty(attributeName)", span="1323-1323"];
m0_558 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="char firstChar = attributeName[0]", span="1325-1325"];
m0_561 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="attributeName = attributeName.Substring(1)", span="1330-1330"];
m0_582 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="finishedAttributes = true", span="1372-1372"];
m0_559 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label=firstChar, span="1327-1327"];
m0_560 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="'@'", span="1329-1329"];
m0_568 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="'$'", span="1341-1341"];
m0_581 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="finishedAttributes = true", span="1366-1366"];
m0_566 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1336-1336"];
m0_569 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="attributeName = attributeName.Substring(1)", span="1342-1342"];
m0_565 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="string namespacePrefix", span="1335-1335"];
m0_573 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="jsonPrefix == null", span="1349-1349"];
m0_574 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="int? i = null", span="1352-1352"];
m0_576 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="i = i.GetValueOrDefault() + 1", span="1355-1355"];
m0_577 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="jsonPrefix = ''json'' + i", span="1357-1357"];
m0_584 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="finishedElement = true", span="1377-1377"];
m0_587 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1299-1299"];
m0_311 [cluster="Unk.SingleOrDefault", file="ExtensionsTests.cs", label="Entry Unk.SingleOrDefault", span=""];
m0_280 [cluster="Unk.LookupPrefix", file="ExtensionsTests.cs", label="Entry Unk.LookupPrefix", span=""];
m0_455 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1433-1433"];
m0_614 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="reader.TokenType", span="1437-1437"];
m0_616 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1440-1440"];
m0_618 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="string propertyName = reader.Value.ToString()", span="1443-1443"];
m0_619 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="reader.Read()", span="1444-1444"];
m0_620 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.StartArray", span="1446-1446"];
m0_622 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1449-1449"];
m0_623 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1451-1451"];
m0_626 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="IXmlElement arrayElement = currentNode.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1457-1457"];
m0_627 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="AddJsonArrayAttribute(arrayElement, document)", span="1458-1458"];
m0_628 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1463-1463"];
m0_630 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="string constructorName = reader.Value.ToString()", span="1467-1467"];
m0_631 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="1469-1469"];
m0_632 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="1471-1471"];
m0_634 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="1475-1475"];
m0_638 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="1481-1481"];
m0_639 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="1483-1483"];
m0_615 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="JsonToken.PropertyName", span="1439-1439"];
m0_629 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="JsonToken.StartConstructor", span="1466-1466"];
m0_633 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="JsonToken.Comment", span="1474-1474"];
m0_635 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="JsonToken.EndObject", span="1477-1477"];
m0_617 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", span="1441-1441"];
m0_621 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="int count = 0", span="1448-1448"];
m0_624 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="count++", span="1452-1452"];
m0_625 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="count == 1 && WriteArrayAttribute", span="1455-1455"];
m0_636 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="JsonToken.EndArray", span="1478-1478"];
m0_637 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="return;", span="1479-1479"];
m0_640 [cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs", label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1433-1433"];
m0_272 [cluster="Unk.PushScope", file="ExtensionsTests.cs", label="Entry Unk.PushScope", span=""];
m0_669 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span=""];
m0_670 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XmlElementWrapper", span=""];
m0_671 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span=""];
m0_672 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XmlNodeWrapper", span=""];
m0_673 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XDeclarationWrapper", span=""];
m0_674 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XDocumentWrapper", span=""];
m0_675 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XContainerWrapper", span=""];
m0_676 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XObjectWrapper", span=""];
m0_677 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XElementWrapper", span=""];
m0_678 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.XmlNodeConverter", span=""];
m0_679 [file="ExtensionsTests.cs", label="Newtonsoft.Json.Converters.IXmlNode", span=""];
m0_680 [file="ExtensionsTests.cs", label=string, span=""];
m0_681 [file="ExtensionsTests.cs", label=propertyName, span=""];
m2_27 [cluster="Newtonsoft.Json.Utilities.MethodCall<T>.Invoke(T, params object[])", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T>.Invoke(T, params object[])", span="27-27"];
m2_14 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="638-638"];
m2_26 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall(System.Reflection.MethodBase)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall(System.Reflection.MethodBase)", span="59-59"];
m2_12 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="94-94"];
m2_9 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="150-150"];
m2_15 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="70-70"];
m2_16 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs", label="list is IList && (CollectionItemType == null || !_isCollectionItemTypeNullableType)", span="72-72"];
m2_17 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs", label="return new CollectionWrapper<object>((IList)list);", span="73-73"];
m2_22 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs", label="return (IWrappedCollection)_genericWrapperCreator(null, list);", span="83-83"];
m2_18 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs", label="_genericWrapperType == null", span="75-75"];
m2_19 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs", label="_genericWrapperType = ReflectionUtils.MakeGenericType(typeof(CollectionWrapper<>), CollectionItemType)", span="77-77"];
m2_20 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs", label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { _genericCollectionDefinitionType })", span="79-79"];
m2_21 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs", label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall(genericWrapperConstructor)", span="80-80"];
m2_23 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="70-70"];
m2_13 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="86-86"];
m2_28 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs", label="!type.IsGenericType", span="88-88"];
m2_30 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs", label="Type genericDefinition = type.GetGenericTypeDefinition()", span="91-91"];
m2_29 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs", label="return false;", span="89-89"];
m2_31 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs", label="return (genericDefinition == typeof(IList<>)\r\n              || genericDefinition == typeof(ICollection<>)\r\n              || genericDefinition == typeof(IEnumerable<>));", span="93-95"];
m2_32 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="86-86"];
m2_10 [cluster="System.Type.GetGenericArguments()", file="JTokenReader.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m2_25 [cluster="System.Type.GetConstructor(System.Type[])", file="JTokenReader.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m2_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="268-268"];
m2_24 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="46-46"];
m2_33 [cluster="System.Type.GetGenericTypeDefinition()", file="JTokenReader.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m2_0 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="49-49"];
m2_1 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs", label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="52-52"];
m2_2 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs", label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="54-54"];
m2_3 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs", label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="58-58"];
m2_4 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs", label="CollectionItemType != null", span="61-61"];
m2_5 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs", label="_isCollectionItemTypeNullableType = ReflectionUtils.IsNullableType(CollectionItemType)", span="62-62"];
m2_6 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs", label="IsTypeGenericCollectionInterface(UnderlyingType)", span="64-64"];
m2_7 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs", label="CreatedType = ReflectionUtils.MakeGenericType(typeof(List<>), CollectionItemType)", span="66-66"];
m2_8 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="49-49"];
m2_34 [file="JTokenReader.cs", label="Newtonsoft.Json.Serialization.JsonArrayContract", span=""];
m4_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.Employee.Employee()", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.Employee.Employee()", span="17-17"];
m4_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", file="TypeNameHandlingTests.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", span="25-25"];
m4_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", color=green, community=0, file="TypeNameHandlingTests.cs", label="return new Employee();", prediction=0, span="27-27"];
m4_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", file="TypeNameHandlingTests.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", span="25-25"];
m0_499 -> m0_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_499 -> m0_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_499 -> m0_504  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_499 -> m0_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_499 -> m0_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_499 -> m0_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_499 -> m0_508  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_499 -> m0_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_499 -> m0_512  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_499 -> m0_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_189 -> m0_191  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_192  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_193  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_194  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_195  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_196  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_197  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_198  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_199  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_200  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_201  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_202  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_203  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_189 -> m0_204  [color=darkseagreen4, key=1, label=XObject, style=dashed];
m0_156 -> m0_158  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_453 -> m0_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_453 -> m0_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_453 -> m0_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_453 -> m0_489  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_453 -> m0_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_453 -> m0_491  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m0_453 -> m0_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_453 -> m0_493  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m0_479 -> m0_483  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m0_481 -> m0_486  [color=darkseagreen4, key=1, label=element, style=dashed];
m0_481 -> m0_488  [color=darkseagreen4, key=1, label=element, style=dashed];
m0_481 -> m0_492  [color=darkseagreen4, key=1, label=element, style=dashed];
m0_316 -> m0_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_316 -> m0_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_316 -> m0_337  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_316 -> m0_338  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_316 -> m0_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_316 -> m0_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_316 -> m0_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_317 -> m0_323  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m0_317 -> m0_325  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m0_317 -> m0_328  [color=darkseagreen4, key=1, label=nodesGroupedByName, style=dashed];
m0_320 -> m0_326  [color=darkseagreen4, key=1, label=childNode, style=dashed];
m0_321 -> m0_323  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m0_321 -> m0_325  [color=darkseagreen4, key=1, label=nodeName, style=dashed];
m0_318 -> m0_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_327 -> m0_327  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_324 -> m0_326  [color=darkseagreen4, key=1, label=nodes, style=dashed];
m0_329 -> m0_331  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m0_329 -> m0_335  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m0_329 -> m0_341  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m0_329 -> m0_342  [color=darkseagreen4, key=1, label=groupedNodes, style=dashed];
m0_336 -> m0_338  [color=darkseagreen4, key=1, label=elementNames, style=dashed];
m0_340 -> m0_342  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_340 -> m0_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_343 -> m0_343  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_73 -> m0_76  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m0_73 -> m0_78  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m0_73 -> m0_79  [color=darkseagreen4, key=1, label=XmlNode, style=dashed];
m0_171 -> m0_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_172 -> m0_175  [color=darkseagreen4, key=1, label=declarationWrapper, style=dashed];
m0_167 -> m0_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_475 -> m0_595  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_475 -> m0_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_475 -> m0_598  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_475 -> m0_601  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_475 -> m0_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_475 -> m0_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_475 -> m0_608  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_475 -> m0_610  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_457 -> m0_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_457 -> m0_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_457 -> m0_464  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_457 -> m0_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_457 -> m0_467  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_457 -> m0_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_457 -> m0_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_457 -> m0_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_457 -> m0_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_274 -> m0_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_274 -> m0_278  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_275 -> m0_277  [color=darkseagreen4, key=1, label=prefix, style=dashed];
m0_656 -> m0_659  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_178 -> m0_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_308 -> m0_313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_282 -> m0_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_282 -> m0_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_282 -> m0_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_282 -> m0_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_282 -> m0_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_282 -> m0_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_419 -> m0_423  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_419 -> m0_424  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_419 -> m0_429  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_419 -> m0_430  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_419 -> m0_436  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_419 -> m0_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_419 -> m0_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_419 -> m0_441  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_419 -> m0_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_419 -> m0_443  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_420 -> m0_440  [color=darkseagreen4, key=1, label=manager, style=dashed];
m0_420 -> m0_442  [color=darkseagreen4, key=1, label=manager, style=dashed];
m0_421 -> m0_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_421 -> m0_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_421 -> m0_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_421 -> m0_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_422 -> m0_435  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m0_422 -> m0_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m0_422 -> m0_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m0_444 -> m0_446  [color=darkseagreen4, key=1, label=element, style=dashed];
m0_427 -> m0_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_427 -> m0_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_427 -> m0_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_427 -> m0_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_428 -> m0_435  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m0_428 -> m0_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m0_428 -> m0_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m0_433 -> m0_435  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_433 -> m0_440  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_433 -> m0_442  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_433 -> m0_447  [color=darkseagreen4, key=1, label=document, style=dashed];
m0_434 -> m0_440  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m0_434 -> m0_442  [color=darkseagreen4, key=1, label=rootNode, style=dashed];
m0_476 -> m0_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_476 -> m0_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_476 -> m0_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_476 -> m0_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m0_476 -> m0_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_476 -> m0_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m0_525 -> m0_529  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m0_525 -> m0_532  [color=darkseagreen4, key=1, label=nestedArrayElement, style=dashed];
m0_534 -> m0_540  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_527 -> m0_530  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_527 -> m0_533  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_530 -> m0_530  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_530 -> m0_533  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_589 -> m0_645  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_589 -> m0_648  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_651 -> m0_653  [color=darkseagreen4, key=1, label="out string", style=dashed];
m0_662 -> m0_665  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_537 -> m0_544  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m0_537 -> m0_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m0_537 -> m0_546  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlElement", style=dashed];
m0_230 -> m0_235  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_230 -> m0_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_230 -> m0_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_231 -> m0_233  [color=darkseagreen4, key=1, label=node, style=dashed];
m0_231 -> m0_236  [color=darkseagreen4, key=1, label=node, style=dashed];
m0_232 -> m0_236  [color=darkseagreen4, key=1, label=manager, style=dashed];
m0_240 -> m0_248  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_240 -> m0_249  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_240 -> m0_250  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_41 -> m0_43  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_84 -> m0_87  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_362  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m0_245 -> m0_363  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_245 -> m0_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_366  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_367  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_371  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_375  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_377  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_245 -> m0_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_385  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_387  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_388  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_245 -> m0_390  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_245 -> m0_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_401  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_405  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m0_245 -> m0_407  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_357 -> m0_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_359 -> m0_362  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_394 -> m0_397  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m0_394 -> m0_399  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m0_394 -> m0_400  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m0_394 -> m0_402  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m0_394 -> m0_403  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m0_394 -> m0_405  [color=darkseagreen4, key=1, label=declaration, style=dashed];
m0_370 -> m0_372  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_370 -> m0_373  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_373 -> m0_373  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_243 -> m0_264  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m0_243 -> m0_267  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m0_254 -> m0_258  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m0_254 -> m0_260  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m0_254 -> m0_261  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m0_254 -> m0_262  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m0_254 -> m0_263  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m0_263 -> m0_265  [color=darkseagreen4, key=1, label=parentElement, style=dashed];
m0_256 -> m0_260  [color=darkseagreen4, key=1, label=parent, style=dashed];
m0_259 -> m0_261  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m0_259 -> m0_262  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m0_259 -> m0_263  [color=darkseagreen4, key=1, label=parentElements, style=dashed];
m0_265 -> m0_267  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m0_495 -> m0_551  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_495 -> m0_552  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_495 -> m0_553  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_495 -> m0_562  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_495 -> m0_567  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m0_495 -> m0_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_495 -> m0_575  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m0_495 -> m0_579  [color=darkseagreen4, key=1, label=XmlNamespaceManager, style=dashed];
m0_495 -> m0_585  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_548 -> m0_564  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m0_548 -> m0_578  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m0_548 -> m0_580  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m0_548 -> m0_586  [color=darkseagreen4, key=1, label=attributeNameValues, style=dashed];
m0_555 -> m0_557  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m0_563 -> m0_567  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m0_571 -> m0_580  [color=darkseagreen4, key=1, label=attributeValue, style=dashed];
m0_572 -> m0_580  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m0_549 -> m0_552  [color=darkseagreen4, key=1, label=finishedAttributes, style=dashed];
m0_550 -> m0_552  [color=darkseagreen4, key=1, label=finishedElement, style=dashed];
m0_561 -> m0_564  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m0_561 -> m0_566  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m0_569 -> m0_580  [color=darkseagreen4, key=1, label=attributeName, style=dashed];
m0_577 -> m0_579  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m0_577 -> m0_580  [color=darkseagreen4, key=1, label=jsonPrefix, style=dashed];
m0_455 -> m0_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m0_455 -> m0_619  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_455 -> m0_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_455 -> m0_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_455 -> m0_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_455 -> m0_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlDocument", style=dashed];
m0_455 -> m0_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_455 -> m0_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_455 -> m0_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_455 -> m0_634  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_455 -> m0_638  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_455 -> m0_639  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m0_618 -> m0_623  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m0_618 -> m0_642  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m0_618 -> m0_628  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m0_626 -> m0_641  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_630 -> m0_632  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m0_621 -> m0_624  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_621 -> m0_625  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_624 -> m0_624  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_624 -> m0_625  [color=darkseagreen4, key=1, label=count, style=dashed];
m0_669 -> m0_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m0_669 -> m0_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m0_669 -> m0_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m0_669 -> m0_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m0_669 -> m0_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m0_669 -> m0_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m0_669 -> m0_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m0_669 -> m0_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m0_669 -> m0_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlDocumentWrapper", style=dashed];
m0_670 -> m0_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m0_670 -> m0_60  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlElementWrapper", style=dashed];
m0_672 -> m0_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m0_672 -> m0_82  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m0_672 -> m0_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeWrapper", style=dashed];
m0_674 -> m0_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XDocumentWrapper", style=dashed];
m0_675 -> m0_187  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m0_675 -> m0_207  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XContainerWrapper", style=dashed];
m0_677 -> m0_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m0_677 -> m0_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XElementWrapper", style=dashed];
m0_678 -> m0_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_236  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_295  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_335  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_357  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_358  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_364  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_372  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_391  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_440  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_442  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_468  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_470  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_492  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_535  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_566  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_678 -> m0_632  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.XmlNodeConverter", style=dashed];
m0_679 -> m0_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Converters.IXmlNode", style=dashed];
m0_680 -> m0_541  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_681 -> m0_642  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m2_15 -> m2_17  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_15 -> m2_22  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_34 -> m2_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m2_34 -> m2_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m2_34 -> m2_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m2_34 -> m2_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m2_34 -> m2_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m2_34 -> m2_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
}
