digraph  {
m0_7 [label="Entry Unk.CreateComment", span="", cluster="Unk.CreateComment", file="ExtensionsTests.cs"];
m0_452 [label="Entry XmlDocument.cstr", span="", cluster="XmlDocument.cstr", file="ExtensionsTests.cs"];
m0_160 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", span="136-136", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetLocalName(string)", file="ExtensionsTests.cs"];
m0_499 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1223-1223", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_501 [label="reader.TokenType == JsonToken.String", span="1225-1225", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_502 [label="return reader.Value.ToString();", span="1227-1227", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_503 [label="reader.TokenType == JsonToken.Integer", span="1229-1229", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_504 [label="return XmlConvert.ToString(Convert.ToInt64(reader.Value, CultureInfo.InvariantCulture));", span="1231-1231", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_505 [label="reader.TokenType == JsonToken.Float", span="1233-1233", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_506 [label="return XmlConvert.ToString(Convert.ToDouble(reader.Value, CultureInfo.InvariantCulture));", span="1235-1235", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_507 [label="reader.TokenType == JsonToken.Boolean", span="1237-1237", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_508 [label="return XmlConvert.ToString(Convert.ToBoolean(reader.Value, CultureInfo.InvariantCulture));", span="1239-1239", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_509 [label="reader.TokenType == JsonToken.Date", span="1241-1241", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_510 [label="DateTime d = Convert.ToDateTime(reader.Value, CultureInfo.InvariantCulture)", span="1243-1243", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_512 [label="reader.TokenType == JsonToken.Null", span="1246-1246", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_514 [label="throw new Exception(''Cannot get an XML string value from token type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, reader.TokenType));", span="1252-1252", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_511 [label="return XmlConvert.ToString(d, DateTimeUtils.ToSerializationMode(d.Kind));", span="1244-1244", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_513 [label="return null;", span="1248-1248", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_515 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", span="1223-1223", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ConvertTokenToXmlValue(Newtonsoft.Json.JsonReader)", file="ExtensionsTests.cs"];
m0_28 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="80-80", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs"];
m0_29 [label="return new XmlNodeWrapper(_document.CreateProcessingInstruction(target, data));", span="82-82", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs"];
m0_30 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", span="80-80", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs"];
m0_409 [label="Entry Unk.All", span="", cluster="Unk.All", file="ExtensionsTests.cs"];
m0_226 [label="Entry XAttributeWrapper.cstr", span="", cluster="XAttributeWrapper.cstr", file="ExtensionsTests.cs"];
m0_123 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="379-379", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs"];
m0_124 [label="return new XObjectWrapper(new XComment(text));", span="381-381", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs"];
m0_125 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", span="379-379", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs"];
m0_90 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="277-277", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="ExtensionsTests.cs"];
m0_91 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", span="277-277", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateComment(string)", file="ExtensionsTests.cs"];
m0_102 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="283-283", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs"];
m0_103 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", span="283-283", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs"];
m0_474 [label="Entry object.ToString()", span="0-0", cluster="object.ToString()", file="ExtensionsTests.cs"];
m0_654 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="ExtensionsTests.cs"];
m0_189 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="574-574", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_190 [label="node is XDocument", span="576-576", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_191 [label="return new XDocumentWrapper((XDocument)node);", span="577-577", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_192 [label="node is XElement", span="578-578", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_193 [label="return new XElementWrapper((XElement)node);", span="579-579", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_194 [label="node is XContainer", span="580-580", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_195 [label="return new XContainerWrapper((XContainer)node);", span="581-581", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_196 [label="node is XProcessingInstruction", span="582-582", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_197 [label="return new XProcessingInstructionWrapper((XProcessingInstruction)node);", span="583-583", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_198 [label="node is XText", span="584-584", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_199 [label="return new XTextWrapper((XText)node);", span="585-585", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_200 [label="node is XComment", span="586-586", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_201 [label="return new XCommentWrapper((XComment)node);", span="587-587", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_202 [label="node is XAttribute", span="588-588", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_203 [label="return new XAttributeWrapper((XAttribute) node);", span="589-589", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_204 [label="return new XObjectWrapper(node);", span="591-591", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_205 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", span="574-574", cluster="Newtonsoft.Json.Converters.XContainerWrapper.WrapNode(XObject)", file="ExtensionsTests.cs"];
m0_156 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="419-419", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs"];
m0_157 [label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="421-421", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs"];
m0_158 [label="return new XElementWrapper(new XElement(XName.Get(localName, namespaceURI)));", span="422-422", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs"];
m0_159 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", span="419-419", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs"];
m0_453 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1172-1172", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_477 [label="string.IsNullOrEmpty(propertyName)", span="1174-1174", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_479 [label="Dictionary<string, string> attributeNameValues = ReadAttributeElements(reader, manager)", span="1177-1177", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_480 [label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1179-1179", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_481 [label="IXmlElement element = CreateElement(propertyName, document, elementPrefix, manager)", span="1181-1181", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_482 [label="currentNode.AppendChild(element)", span="1183-1183", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_485 [label="IXmlNode attribute = (!string.IsNullOrEmpty(attributePrefix))\r\n                               ? document.CreateAttribute(nameValue.Key, manager.LookupNamespace(attributePrefix), nameValue.Value)\r\n                               : document.CreateAttribute(nameValue.Key, nameValue.Value)", span="1190-1192", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_487 [label="reader.TokenType == JsonToken.String\r\n        || reader.TokenType == JsonToken.Integer\r\n        || reader.TokenType == JsonToken.Float\r\n        || reader.TokenType == JsonToken.Boolean\r\n        || reader.TokenType == JsonToken.Date", span="1197-1201", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_488 [label="element.AppendChild(document.CreateTextNode(ConvertTokenToXmlValue(reader)))", span="1203-1203", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_489 [label="reader.TokenType == JsonToken.Null", span="1205-1205", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_490 [label="reader.TokenType != JsonToken.EndObject", span="1212-1212", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_491 [label="manager.PushScope()", span="1214-1214", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_492 [label="DeserializeNode(reader, document, manager, element)", span="1216-1216", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_493 [label="manager.PopScope()", span="1218-1218", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_478 [label="throw new JsonSerializationException(''XmlNodeConverter cannot convert JSON with an empty property name to XML.'');", span="1175-1175", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_483 [label=attributeNameValues, span="1186-1186", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_486 [label="element.SetAttributeNode(attribute)", span="1194-1194", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_484 [label="string attributePrefix = MiscellaneousUtils.GetPrefix(nameValue.Key)", span="1188-1188", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_494 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", span="1172-1172", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadElement(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_45 [label="Entry Unk.CreateAttribute", span="", cluster="Unk.CreateAttribute", file="ExtensionsTests.cs"];
m0_110 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="287-287", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_111 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", span="287-287", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_538 [label="Entry System.Collections.IEnumerable.CastValid<T>()", span="38-38", cluster="System.Collections.IEnumerable.CastValid<T>()", file="ExtensionsTests.cs"];
m0_165 [label="Entry Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="664-664", cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="ExtensionsTests.cs"];
m0_217 [label="Exit Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", span="664-664", cluster="Newtonsoft.Json.Converters.XAttributeWrapper.XAttributeWrapper(XAttribute)", file="ExtensionsTests.cs"];
m0_306 [label="Entry JsonSerializationException.cstr", span="", cluster="JsonSerializationException.cstr", file="ExtensionsTests.cs"];
m0_139 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="399-399", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs"];
m0_140 [label="return new XObjectWrapper(new XText(text));", span="401-401", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs"];
m0_141 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", span="399-399", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs"];
m0_66 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="178-178", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="ExtensionsTests.cs"];
m0_67 [label="_node = node", span="180-180", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="ExtensionsTests.cs"];
m0_68 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", span="178-178", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.XmlNodeWrapper(XmlNode)", file="ExtensionsTests.cs"];
m0_51 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="127-127", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="ExtensionsTests.cs"];
m0_52 [label="_element = element", span="130-130", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="ExtensionsTests.cs"];
m0_53 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", span="127-127", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.XmlElementWrapper(XmlElement)", file="ExtensionsTests.cs"];
m0_316 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="896-896", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_317 [label="Dictionary<string, List<IXmlNode>> nodesGroupedByName = new Dictionary<string, List<IXmlNode>>()", span="899-899", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_319 [label="i < node.ChildNodes.Count", span="901-901", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_320 [label="IXmlNode childNode = node.ChildNodes[i]", span="903-903", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_321 [label="string nodeName = GetPropertyName(childNode, manager)", span="904-904", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_335 [label="SerializeNode(writer, groupedNodes[0], manager, writePropertyName)", span="934-934", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_337 [label=writePropertyName, span="940-940", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_338 [label="writer.WritePropertyName(elementNames)", span="941-941", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_339 [label="writer.WriteStartArray()", span="943-943", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_342 [label="SerializeNode(writer, groupedNodes[i], manager, false)", span="947-947", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_344 [label="writer.WriteEndArray()", span="950-950", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_318 [label="int i = 0", span="901-901", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_323 [label="!nodesGroupedByName.TryGetValue(nodeName, out nodes)", span="907-907", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_325 [label="nodesGroupedByName.Add(nodeName, nodes)", span="910-910", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_328 [label=nodesGroupedByName, span="918-918", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_327 [label="i++", span="901-901", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_326 [label="nodes.Add(childNode)", span="913-913", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_322 [label="List<IXmlNode> nodes", span="906-906", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_324 [label="nodes = new List<IXmlNode>()", span="909-909", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_329 [label="List<IXmlNode> groupedNodes = nodeNameGroup.Value", span="920-920", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_330 [label="bool writeArray", span="921-921", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_331 [label="groupedNodes.Count == 1", span="923-923", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_332 [label="writeArray = IsArray(groupedNodes[0])", span="925-925", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_336 [label="string elementNames = nodeNameGroup.Key", span="938-938", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_341 [label="i < groupedNodes.Count", span="945-945", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_333 [label="writeArray = true", span="929-929", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_334 [label="!writeArray", span="932-932", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_340 [label="int i = 0", span="945-945", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_343 [label="i++", span="945-945", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_345 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="896-896", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeGroupedNodes(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_11 [label="Entry Unk.CreateTextNode", span="", cluster="Unk.CreateTextNode", file="ExtensionsTests.cs"];
m0_73 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="208-208", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs"];
m0_74 [label="node.NodeType", span="210-210", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs"];
m0_76 [label="return new XmlElementWrapper((XmlElement) node);", span="213-213", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs"];
m0_78 [label="return new XmlDeclarationWrapper((XmlDeclaration) node);", span="215-215", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs"];
m0_79 [label="return new XmlNodeWrapper(node);", span="217-217", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs"];
m0_75 [label="XmlNodeType.Element", span="212-212", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs"];
m0_77 [label="XmlNodeType.XmlDeclaration", span="214-214", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs"];
m0_80 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", span="208-208", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.WrapNode(XmlNode)", file="ExtensionsTests.cs"];
m0_588 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="ExtensionsTests.cs"];
m0_63 [label="Entry Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="150-150", cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="ExtensionsTests.cs"];
m0_64 [label="_declaration = declaration", span="153-153", cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="ExtensionsTests.cs"];
m0_65 [label="Exit Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", span="150-150", cluster="Newtonsoft.Json.Converters.XmlDeclarationWrapper.XmlDeclarationWrapper(XmlDeclaration)", file="ExtensionsTests.cs"];
m0_58 [label="Entry Unk.SetAttributeNode", span="", cluster="Unk.SetAttributeNode", file="ExtensionsTests.cs"];
m0_92 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="278-278", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="ExtensionsTests.cs"];
m0_93 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", span="278-278", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateTextNode(string)", file="ExtensionsTests.cs"];
m0_171 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="447-447", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_172 [label="XDeclarationWrapper declarationWrapper = newChild as XDeclarationWrapper", span="449-449", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_176 [label="return base.AppendChild(newChild);", span="457-457", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_173 [label="declarationWrapper != null", span="450-450", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_174 [label="Document.Declaration = declarationWrapper._declaration", span="452-452", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_175 [label="return declarationWrapper;", span="453-453", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_177 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="447-447", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_520 [label="Entry System.Convert.ToDateTime(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDateTime(object, System.IFormatProvider)", file="ExtensionsTests.cs"];
m0_658 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="ExtensionsTests.cs"];
m0_24 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="75-75", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs"];
m0_25 [label="return new XmlNodeWrapper(_document.CreateXmlDeclaration(version, encoding, standalone));", span="77-77", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs"];
m0_26 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="75-75", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs"];
m0_167 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="430-430", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_168 [label="string localName = MiscellaneousUtils.GetLocalName(qualifiedName)", span="432-432", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_169 [label="return new XAttributeWrapper(new XAttribute(XName.Get(localName, namespaceURI), value));", span="433-433", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_170 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", span="430-430", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_210 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="ExtensionsTests.cs"];
m0_413 [label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", span="73-73", cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsNullOrEmpty<T>(System.Collections.Generic.ICollection<T>)", file="ExtensionsTests.cs"];
m0_131 [label="Entry XText.cstr", span="", cluster="XText.cstr", file="ExtensionsTests.cs"];
m0_522 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)", file="ExtensionsTests.cs"];
m0_516 [label="Entry System.Convert.ToInt64(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToInt64(object, System.IFormatProvider)", file="ExtensionsTests.cs"];
m0_523 [label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48", cluster="string.FormatWith(System.IFormatProvider, params object[])", file="ExtensionsTests.cs"];
m0_54 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="133-133", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_55 [label="XmlNodeWrapper xmlAttributeWrapper = (XmlNodeWrapper)attribute", span="135-135", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_56 [label="_element.SetAttributeNode((XmlAttribute) xmlAttributeWrapper.WrappedNode)", span="137-137", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_57 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="133-133", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_411 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ExtensionsTests.cs"];
m0_273 [label="Entry Unk.AddNamespace", span="", cluster="Unk.AddNamespace", file="ExtensionsTests.cs"];
m0_475 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1388-1388", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_591 [label="propertyName == DeclarationName", span="1390-1390", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_595 [label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="1395-1395", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_596 [label="reader.Value.ToString()", span="1397-1397", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_598 [label="reader.Read()", span="1400-1400", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_599 [label="version = reader.Value.ToString()", span="1401-1401", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_601 [label="reader.Read()", span="1404-1404", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_602 [label="encoding = reader.Value.ToString()", span="1405-1405", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_604 [label="reader.Read()", span="1408-1408", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_605 [label="standalone = reader.Value.ToString()", span="1409-1409", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_606 [label="throw new JsonSerializationException(''Unexpected property name encountered while deserializing XmlDeclaration: '' + reader.Value);", span="1412-1412", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_607 [label="IXmlNode declaration = document.CreateXmlDeclaration(version, encoding, standalone)", span="1416-1416", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_608 [label="currentNode.AppendChild(declaration)", span="1417-1417", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_609 [label="IXmlNode instruction = document.CreateProcessingInstruction(propertyName.Substring(1), reader.Value.ToString())", span="1421-1421", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_610 [label="currentNode.AppendChild(instruction)", span="1422-1422", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_592 [label="string version = null", span="1392-1392", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_593 [label="string encoding = null", span="1393-1393", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_594 [label="string standalone = null", span="1394-1394", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_597 [label="''@version''", span="1399-1399", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_600 [label="''@encoding''", span="1403-1403", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_603 [label="''@standalone''", span="1407-1407", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_611 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", span="1388-1388", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateInstruction(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, Newtonsoft.Json.Converters.IXmlNode, string)", file="ExtensionsTests.cs"];
m0_213 [label="Entry Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="646-646", cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_214 [label="throw new InvalidOperationException();", span="648-648", cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_215 [label="Exit Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="646-646", cluster="Newtonsoft.Json.Converters.XObjectWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_8 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="55-55", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs"];
m0_9 [label="return new XmlNodeWrapper(_document.CreateTextNode(text));", span="57-57", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs"];
m0_10 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", span="55-55", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs"];
m0_19 [label="Entry Unk.CreateWhitespace", span="", cluster="Unk.CreateWhitespace", file="ExtensionsTests.cs"];
m0_0 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="44-44", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="ExtensionsTests.cs"];
m0_1 [label="_document = document", span="47-47", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="ExtensionsTests.cs"];
m0_2 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", span="44-44", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.XmlDocumentWrapper(XmlDocument)", file="ExtensionsTests.cs"];
m0_496 [label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", span="127-127", cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.GetPrefix(string)", file="ExtensionsTests.cs"];
m0_27 [label="Entry Unk.CreateXmlDeclaration", span="", cluster="Unk.CreateXmlDeclaration", file="ExtensionsTests.cs"];
m0_518 [label="Entry System.Convert.ToDouble(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToDouble(object, System.IFormatProvider)", file="ExtensionsTests.cs"];
m0_106 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="285-285", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="ExtensionsTests.cs"];
m0_107 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", span="285-285", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string, string)", file="ExtensionsTests.cs"];
m0_135 [label="Entry XCData.cstr", span="", cluster="XCData.cstr", file="ExtensionsTests.cs"];
m0_348 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ExtensionsTests.cs"];
m0_142 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="404-404", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs"];
m0_143 [label="return new XDeclarationWrapper(new XDeclaration(version, encoding, standalone));", span="406-406", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs"];
m0_144 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", span="404-404", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs"];
m0_655 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ExtensionsTests.cs"];
m0_3 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="50-50", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs"];
m0_4 [label="return new XmlNodeWrapper(_document.CreateComment(data));", span="52-52", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs"];
m0_5 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", span="50-50", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateComment(string)", file="ExtensionsTests.cs"];
m0_450 [label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52", cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="ExtensionsTests.cs"];
m0_20 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="70-70", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs"];
m0_21 [label="return new XmlNodeWrapper(_document.CreateSignificantWhitespace(text));", span="72-72", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs"];
m0_22 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", span="70-70", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs"];
m0_6 [label="Entry XmlNodeWrapper.cstr", span="", cluster="XmlNodeWrapper.cstr", file="ExtensionsTests.cs"];
m0_457 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1133-1133", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_458 [label=propertyName, span="1135-1135", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_460 [label="currentNode.AppendChild(document.CreateTextNode(reader.Value.ToString()))", span="1138-1138", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_462 [label="currentNode.AppendChild(document.CreateCDataSection(reader.Value.ToString()))", span="1141-1141", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_464 [label="currentNode.AppendChild(document.CreateWhitespace(reader.Value.ToString()))", span="1144-1144", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_466 [label="currentNode.AppendChild(document.CreateSignificantWhitespace(reader.Value.ToString()))", span="1147-1147", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_467 [label="!string.IsNullOrEmpty(propertyName) && propertyName[0] == '?'", span="1151-1151", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_468 [label="CreateInstruction(reader, document, currentNode, propertyName)", span="1153-1153", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_469 [label="reader.TokenType == JsonToken.StartArray", span="1157-1157", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_470 [label="ReadArrayElements(reader, document, propertyName, currentNode, manager)", span="1160-1160", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_472 [label="ReadElement(reader, document, currentNode, propertyName, manager)", span="1166-1166", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_459 [label=TextName, span="1137-1137", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_461 [label=CDataName, span="1140-1140", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_463 [label=WhitespaceName, span="1143-1143", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_465 [label=SignificantWhitespaceName, span="1146-1146", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_471 [label="return;", span="1161-1161", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_473 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", span="1133-1133", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeValue(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, string, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_519 [label="Entry System.Convert.ToBoolean(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToBoolean(object, System.IFormatProvider)", file="ExtensionsTests.cs"];
m0_181 [label="Entry Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="499-499", cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="ExtensionsTests.cs"];
m0_182 [label="Exit Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", span="499-499", cluster="Newtonsoft.Json.Converters.XCommentWrapper.XCommentWrapper(XComment)", file="ExtensionsTests.cs"];
m0_312 [label="Entry Unk.ToBoolean", span="", cluster="Unk.ToBoolean", file="ExtensionsTests.cs"];
m0_89 [label="Entry Unk.AppendChild", span="", cluster="Unk.AppendChild", file="ExtensionsTests.cs"];
m0_521 [label="Entry Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", span="27-27", cluster="Newtonsoft.Json.Utilities.DateTimeUtils.ToSerializationMode(System.DateTimeKind)", file="ExtensionsTests.cs"];
m0_154 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="704-704", cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="ExtensionsTests.cs"];
m0_218 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", span="704-704", cluster="Newtonsoft.Json.Converters.XElementWrapper.XElementWrapper(XElement)", file="ExtensionsTests.cs"];
m0_274 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="845-845", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_275 [label="string prefix = (node.NamespaceURI == null || (node.LocalName == ''xmlns'' && node.NamespaceURI == ''http://www.w3.org/2000/xmlns/''))\r\n                        ? null\r\n                        : manager.LookupPrefix(node.NamespaceURI)", span="847-849", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_277 [label="return prefix + '':'' + node.LocalName;", span="852-852", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_278 [label="return node.LocalName;", span="854-854", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_276 [label="!string.IsNullOrEmpty(prefix)", span="851-851", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_279 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="845-845", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ResolveFullName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_253 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="ExtensionsTests.cs"];
m0_414 [label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="640-640", cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="ExtensionsTests.cs"];
m0_227 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="736-736", cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs"];
m0_228 [label="return Element.GetPrefixOfNamespace(namespaceURI);", span="738-738", cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs"];
m0_229 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", span="736-736", cluster="Newtonsoft.Json.Converters.XElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs"];
m0_410 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1512-1512", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="ExtensionsTests.cs"];
m0_656 [label="return c.Where(a => a.NamespaceURI != JsonNamespaceUri);", span="1514-1514", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="ExtensionsTests.cs"];
m0_657 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", span="1512-1512", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ValueAttributes(System.Collections.Generic.IEnumerable<Newtonsoft.Json.Converters.IXmlNode>)", file="ExtensionsTests.cs"];
m0_271 [label="Entry System.Collections.Generic.List<T>.Reverse()", span="0-0", cluster="System.Collections.Generic.List<T>.Reverse()", file="ExtensionsTests.cs"];
m0_98 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="281-281", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs"];
m0_99 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", span="281-281", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateSignificantWhitespace(string)", file="ExtensionsTests.cs"];
m0_178 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="594-594", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_207 [label="Container.Add(newChild.WrappedNode)", span="596-596", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_208 [label="return newChild;", span="597-597", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_209 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="594-594", cluster="Newtonsoft.Json.Converters.XContainerWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_307 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="887-887", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_308 [label="IXmlNode jsonArrayAttribute = (node.Attributes != null)\r\n                                      ? node.Attributes.SingleOrDefault(a => a.LocalName == ''Array'' && a.NamespaceURI == JsonNamespaceUri)\r\n                                      : null", span="889-891", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_309 [label="return (jsonArrayAttribute != null && XmlConvert.ToBoolean(jsonArrayAttribute.Value));", span="893-893", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_310 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", span="887-887", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsArray(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_146 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="409-409", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs"];
m0_147 [label="return new XProcessingInstructionWrapper(new XProcessingInstruction(target, data));", span="411-411", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs"];
m0_148 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", span="409-409", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateProcessingInstruction(string, string)", file="ExtensionsTests.cs"];
m0_72 [label="Entry Unk.WrapNode", span="", cluster="Unk.WrapNode", file="ExtensionsTests.cs"];
m0_23 [label="Entry Unk.CreateSignificantWhitespace", span="", cluster="Unk.CreateSignificantWhitespace", file="ExtensionsTests.cs"];
m0_35 [label="Entry XmlElementWrapper.cstr", span="", cluster="XmlElementWrapper.cstr", file="ExtensionsTests.cs"];
m0_282 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="857-857", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_283 [label="node.NodeType", span="859-859", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_285 [label="node.NamespaceURI == JsonNamespaceUri", span="862-862", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_286 [label="return ''$'' + node.LocalName;", span="863-863", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_287 [label="return ''@'' + ResolveFullName(node, manager);", span="865-865", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_293 [label="return ResolveFullName(node, manager);", span="871-871", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_295 [label="return ''?'' + ResolveFullName(node, manager);", span="873-873", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_304 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when getting node name: '' + node.NodeType);", span="883-883", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_284 [label="XmlNodeType.Attribute", span="861-861", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_288 [label="XmlNodeType.CDATA", span="866-866", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_290 [label="XmlNodeType.Comment", span="868-868", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_292 [label="XmlNodeType.Element", span="870-870", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_294 [label="XmlNodeType.ProcessingInstruction", span="872-872", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_296 [label="XmlNodeType.XmlDeclaration", span="874-874", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_298 [label="XmlNodeType.SignificantWhitespace", span="876-876", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_300 [label="XmlNodeType.Text", span="878-878", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_302 [label="XmlNodeType.Whitespace", span="880-880", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_289 [label="return CDataName;", span="867-867", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_291 [label="return CommentName;", span="869-869", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_297 [label="return DeclarationName;", span="875-875", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_299 [label="return SignificantWhitespaceName;", span="877-877", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_301 [label="return TextName;", span="879-879", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_303 [label="return WhitespaceName;", span="881-881", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_305 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="857-857", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.GetPropertyName(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_454 [label="Entry Newtonsoft.Json.JsonReader.Read()", span="222-222", cluster="Newtonsoft.Json.JsonReader.Read()", file="ExtensionsTests.cs"];
m0_151 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="414-414", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs"];
m0_152 [label="return new XElementWrapper(new XElement(elementName));", span="416-416", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs"];
m0_153 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", span="414-414", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs"];
m0_150 [label="Entry XProcessingInstruction.cstr", span="", cluster="XProcessingInstruction.cstr", file="ExtensionsTests.cs"];
m0_419 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1073-1073", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_420 [label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="1075-1075", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_423 [label="typeof(XObject).IsAssignableFrom(objectType)", span="1080-1080", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_424 [label="objectType != typeof (XDocument) && objectType != typeof (XElement)", span="1082-1082", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_429 [label="typeof(XmlNode).IsAssignableFrom(objectType)", span="1091-1091", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_430 [label="objectType != typeof (XmlDocument)", span="1093-1093", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_436 [label="throw new JsonSerializationException(''Unexpected type when converting XML: '' + objectType);", span="1103-1103", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_437 [label="reader.TokenType != JsonToken.StartObject", span="1105-1105", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_440 [label="ReadElement(reader, document, rootNode, DeserializeRootElementName, manager)", span="1112-1112", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_441 [label="reader.Read()", span="1116-1116", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_442 [label="DeserializeNode(reader, document, manager, rootNode)", span="1117-1117", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_443 [label="objectType == typeof(XElement)", span="1121-1121", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_421 [label="IXmlDocument document = null", span="1076-1076", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_422 [label="IXmlNode rootNode = null", span="1077-1077", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_435 [label="document == null || rootNode == null", span="1102-1102", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_444 [label="XElement element = (XElement)document.DocumentElement.WrappedNode", span="1123-1123", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_447 [label="return document.WrappedNode;", span="1130-1130", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_425 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XDocument or XElement.'');", span="1083-1083", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_426 [label="XDocument d = new XDocument()", span="1085-1085", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_427 [label="document = new XDocumentWrapper(d)", span="1086-1086", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_428 [label="rootNode = document", span="1087-1087", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_431 [label="throw new JsonSerializationException(''XmlNodeConverter only supports deserializing XmlDocuments'');", span="1094-1094", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_432 [label="XmlDocument d = new XmlDocument()", span="1096-1096", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_433 [label="document = new XmlDocumentWrapper(d)", span="1097-1097", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_434 [label="rootNode = document", span="1098-1098", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_438 [label="throw new JsonSerializationException(''XmlNodeConverter can only convert JSON that begins with an object.'');", span="1106-1106", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_439 [label="!string.IsNullOrEmpty(DeserializeRootElementName)", span="1108-1108", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_445 [label="element.Remove()", span="1124-1124", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_446 [label="return element;", span="1126-1126", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_448 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="1073-1073", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_132 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="389-389", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs"];
m0_133 [label="return new XObjectWrapper(new XCData(data));", span="391-391", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs"];
m0_134 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", span="389-389", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs"];
m0_500 [label="Entry Unk.PopScope", span="", cluster="Unk.PopScope", file="ExtensionsTests.cs"];
m0_241 [label="Entry XmlNamespaceManager.cstr", span="", cluster="XmlNamespaceManager.cstr", file="ExtensionsTests.cs"];
m0_270 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="ExtensionsTests.cs"];
m0_415 [label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1178-1178", cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="ExtensionsTests.cs"];
m0_162 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="425-425", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_163 [label="return new XAttributeWrapper(new XAttribute(name, value));", span="427-427", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_164 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", span="425-425", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_412 [label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="676-676", cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="ExtensionsTests.cs"];
m0_346 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ExtensionsTests.cs"];
m0_476 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1256-1256", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_524 [label="string elementPrefix = MiscellaneousUtils.GetPrefix(propertyName)", span="1258-1258", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_525 [label="IXmlElement nestedArrayElement = CreateElement(propertyName, document, elementPrefix, manager)", span="1260-1260", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_526 [label="currentNode.AppendChild(nestedArrayElement)", span="1262-1262", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_528 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1265-1265", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_529 [label="DeserializeValue(reader, document, manager, propertyName, nestedArrayElement)", span="1267-1267", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_532 [label="AddJsonArrayAttribute(nestedArrayElement, document)", span="1273-1273", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_534 [label="IXmlElement arrayElement = nestedArrayElement.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1278-1278", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_535 [label="AddJsonArrayAttribute(arrayElement, document)", span="1279-1279", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_527 [label="int count = 0", span="1264-1264", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_530 [label="count++", span="1268-1268", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_533 [label="count == 1 && WriteArrayAttribute", span="1276-1276", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_531 [label=WriteArrayAttribute, span="1271-1271", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_536 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="1256-1256", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadArrayElements(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, string, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_118 [label="Entry Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="325-325", cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="ExtensionsTests.cs"];
m0_119 [label="_declaration = declaration", span="328-328", cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="ExtensionsTests.cs"];
m0_120 [label="Exit Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", span="325-325", cluster="Newtonsoft.Json.Converters.XDeclarationWrapper.XDeclarationWrapper(XDeclaration)", file="ExtensionsTests.cs"];
m0_349 [label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="292-292", cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="ExtensionsTests.cs"];
m0_112 [label="Entry Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="301-301", cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_113 [label="Exit Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="301-301", cluster="Newtonsoft.Json.Converters.IXmlElement.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_126 [label="Entry XObjectWrapper.cstr", span="", cluster="XObjectWrapper.cstr", file="ExtensionsTests.cs"];
m0_149 [label="Entry Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="529-529", cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="ExtensionsTests.cs"];
m0_183 [label="Exit Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", span="529-529", cluster="Newtonsoft.Json.Converters.XProcessingInstructionWrapper.XProcessingInstructionWrapper(XProcessingInstruction)", file="ExtensionsTests.cs"];
m0_136 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="394-394", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs"];
m0_137 [label="return new XObjectWrapper(new XText(text));", span="396-396", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs"];
m0_138 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", span="394-394", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs"];
m0_517 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="ExtensionsTests.cs"];
m0_589 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1493-1493", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_644 [label="attributeName.StartsWith(''xmlns'', StringComparison.Ordinal)", span="1495-1495", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_645 [label="attributeName.Length == 5", span="1497-1497", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_648 [label="attributeName[5] == ':'", span="1502-1502", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_649 [label="prefix = attributeName.Substring(6, attributeName.Length - 6)", span="1504-1504", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_651 [label="prefix = null", span="1508-1508", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_646 [label="prefix = string.Empty", span="1499-1499", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_647 [label="return true;", span="1500-1500", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_650 [label="return true;", span="1505-1505", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_652 [label="return false;", span="1509-1509", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_653 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", span="1493-1493", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.IsNamespaceAttribute(string, out string)", file="ExtensionsTests.cs"];
m0_12 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="60-60", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs"];
m0_13 [label="return new XmlNodeWrapper(_document.CreateCDataSection(data));", span="62-62", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs"];
m0_14 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", span="60-60", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateCDataSection(string)", file="ExtensionsTests.cs"];
m0_166 [label="Entry XAttribute.cstr", span="", cluster="XAttribute.cstr", file="ExtensionsTests.cs"];
m0_351 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265", cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="ExtensionsTests.cs"];
m0_179 [label="Entry Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="469-469", cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="ExtensionsTests.cs"];
m0_180 [label="Exit Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", span="469-469", cluster="Newtonsoft.Json.Converters.XTextWrapper.XTextWrapper(XText)", file="ExtensionsTests.cs"];
m0_100 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="282-282", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs"];
m0_101 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", span="282-282", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateXmlDeclaration(string, string, string)", file="ExtensionsTests.cs"];
m0_104 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="284-284", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="ExtensionsTests.cs"];
m0_105 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", span="284-284", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateElement(string)", file="ExtensionsTests.cs"];
m0_206 [label="Entry Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="605-605", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="ExtensionsTests.cs"];
m0_211 [label="_xmlObject = xmlObject", span="607-607", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="ExtensionsTests.cs"];
m0_212 [label="Exit Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", span="605-605", cluster="Newtonsoft.Json.Converters.XObjectWrapper.XObjectWrapper(XObject)", file="ExtensionsTests.cs"];
m0_662 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1525-1525", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs"];
m0_663 [label="typeof(XObject).IsAssignableFrom(valueType)", span="1528-1528", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs"];
m0_665 [label="typeof(XmlNode).IsAssignableFrom(valueType)", span="1532-1532", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs"];
m0_664 [label="return true;", span="1529-1529", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs"];
m0_666 [label="return true;", span="1533-1533", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs"];
m0_667 [label="return false;", span="1536-1536", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs"];
m0_668 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", span="1525-1525", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CanConvert(System.Type)", file="ExtensionsTests.cs"];
m0_46 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="103-103", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_47 [label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(qualifiedName, namespaceURI))", span="105-105", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_48 [label="attribute.Value = value", span="106-106", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_49 [label="return attribute;", span="108-108", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_50 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", span="103-103", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string, string)", file="ExtensionsTests.cs"];
m0_449 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ExtensionsTests.cs"];
m0_128 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="384-384", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs"];
m0_129 [label="return new XObjectWrapper(new XText(text));", span="386-386", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs"];
m0_130 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", span="384-384", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.CreateTextNode(string)", file="ExtensionsTests.cs"];
m0_537 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1283-1283", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs"];
m0_543 [label="element.SetAttributeNode(document.CreateAttribute(''json:Array'', JsonNamespaceUri, ''true''))", span="1285-1285", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs"];
m0_544 [label="element is XElementWrapper", span="1289-1289", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs"];
m0_545 [label="element.GetPrefixOfNamespace(JsonNamespaceUri) == null", span="1291-1291", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs"];
m0_546 [label="element.SetAttributeNode(document.CreateAttribute(''xmlns:json'', ''http://www.w3.org/2000/xmlns/'', JsonNamespaceUri))", span="1293-1293", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs"];
m0_547 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", span="1283-1283", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.AddJsonArrayAttribute(Newtonsoft.Json.Converters.IXmlElement, Newtonsoft.Json.Converters.IXmlDocument)", file="ExtensionsTests.cs"];
m0_659 [label="Entry lambda expression", span="1514-1514", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_69 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_70 [label="WrapNode(n)", span="205-205", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_71 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_81 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_82 [label="WrapNode(a)", span="228-228", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_83 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_186 [label="Entry lambda expression", span="560-560", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_187 [label="WrapNode(n)", span="560-560", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_188 [label="Exit lambda expression", span="560-560", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_223 [label="Entry lambda expression", span="717-717", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_224 [label="new XAttributeWrapper(a)", span="717-717", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_225 [label="Exit lambda expression", span="717-717", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_313 [label="Entry lambda expression", span="890-890", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_314 [label="a.LocalName == ''Array'' && a.NamespaceURI == JsonNamespaceUri", span="890-890", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_315 [label="Exit lambda expression", span="890-890", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_417 [label="n.LocalName == node.LocalName", span="964-964", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_416 [label="Entry lambda expression", span="964-964", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_418 [label="Exit lambda expression", span="964-964", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_541 [label="n.LocalName == propertyName", span="1278-1278", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_540 [label="Entry lambda expression", span="1278-1278", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_542 [label="Exit lambda expression", span="1278-1278", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_642 [label="n.LocalName == propertyName", span="1457-1457", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_641 [label="Entry lambda expression", span="1457-1457", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_643 [label="Exit lambda expression", span="1457-1457", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_660 [label="a.NamespaceURI != JsonNamespaceUri", span="1514-1514", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_661 [label="Exit lambda expression", span="1514-1514", cluster="lambda expression", file="ExtensionsTests.cs"];
m0_451 [label="Entry XDocument.cstr", span="", cluster="XDocument.cstr", file="ExtensionsTests.cs"];
m0_281 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ExtensionsTests.cs"];
m0_121 [label="Entry Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="361-361", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="ExtensionsTests.cs"];
m0_122 [label="Exit Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", span="361-361", cluster="Newtonsoft.Json.Converters.XDocumentWrapper.XDocumentWrapper(XDocument)", file="ExtensionsTests.cs"];
m0_116 [label="Entry Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="313-313", cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_117 [label="Exit Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="313-313", cluster="Newtonsoft.Json.Converters.IXmlNode.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_37 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="90-90", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs"];
m0_38 [label="return new XmlElementWrapper(_document.CreateElement(qualifiedName, namespaceURI));", span="92-92", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs"];
m0_39 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", span="90-90", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string, string)", file="ExtensionsTests.cs"];
m0_36 [label="Entry Unk.CreateElement", span="", cluster="Unk.CreateElement", file="ExtensionsTests.cs"];
m0_114 [label="Entry Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="302-302", cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs"];
m0_115 [label="Exit Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", span="302-302", cluster="Newtonsoft.Json.Converters.IXmlElement.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs"];
m0_244 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239", cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="ExtensionsTests.cs"];
m0_347 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="ExtensionsTests.cs"];
m0_216 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="ExtensionsTests.cs"];
m0_539 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="ExtensionsTests.cs"];
m0_269 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ExtensionsTests.cs"];
m0_590 [label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0", cluster="System.Nullable<T>.GetValueOrDefault()", file="ExtensionsTests.cs"];
m0_184 [label="Entry Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="553-553", cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="ExtensionsTests.cs"];
m0_185 [label="Exit Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", span="553-553", cluster="Newtonsoft.Json.Converters.XContainerWrapper.XContainerWrapper(XContainer)", file="ExtensionsTests.cs"];
m0_94 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="279-279", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="ExtensionsTests.cs"];
m0_95 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", span="279-279", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateCDataSection(string)", file="ExtensionsTests.cs"];
m0_350 [label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256", cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="ExtensionsTests.cs"];
m0_59 [label="Entry Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="140-140", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs"];
m0_60 [label="return _element.GetPrefixOfNamespace(namespaceURI);", span="142-142", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs"];
m0_61 [label="Exit Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", span="140-140", cluster="Newtonsoft.Json.Converters.XmlElementWrapper.GetPrefixOfNamespace(string)", file="ExtensionsTests.cs"];
m0_230 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="783-783", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_231 [label="IXmlNode node = WrapXml(value)", span="785-785", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_235 [label="writer.WriteStartObject()", span="791-791", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_236 [label="SerializeNode(writer, node, manager, !OmitRootObject)", span="793-793", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_238 [label="writer.WriteEndObject()", span="796-796", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_232 [label="XmlNamespaceManager manager = new XmlNamespaceManager(new NameTable())", span="787-787", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_233 [label="PushParentNamespaces(node, manager)", span="788-788", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_234 [label="!OmitRootObject", span="790-790", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_237 [label="!OmitRootObject", span="795-795", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_239 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="783-783", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="ExtensionsTests.cs"];
m0_145 [label="Entry XDeclaration.cstr", span="", cluster="XDeclaration.cstr", file="ExtensionsTests.cs"];
m0_155 [label="Entry XElement.cstr", span="", cluster="XElement.cstr", file="ExtensionsTests.cs"];
m0_32 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="85-85", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs"];
m0_33 [label="return new XmlElementWrapper(_document.CreateElement(elementName));", span="87-87", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs"];
m0_34 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", span="85-85", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateElement(string)", file="ExtensionsTests.cs"];
m0_219 [label="Entry Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="709-709", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_220 [label="XObjectWrapper wrapper = (XObjectWrapper)attribute", span="711-711", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_221 [label="Element.Add(wrapper.WrappedNode)", span="712-712", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_222 [label="Exit Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", span="709-709", cluster="Newtonsoft.Json.Converters.XElementWrapper.SetAttributeNode(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_242 [label="Entry NameTable.cstr", span="", cluster="NameTable.cstr", file="ExtensionsTests.cs"];
m0_127 [label="Entry XComment.cstr", span="", cluster="XComment.cstr", file="ExtensionsTests.cs"];
m0_15 [label="Entry Unk.CreateCDataSection", span="", cluster="Unk.CreateCDataSection", file="ExtensionsTests.cs"];
m0_240 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="799-799", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs"];
m0_247 [label="value is XObject", span="802-802", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs"];
m0_248 [label="return XContainerWrapper.WrapNode((XObject)value);", span="803-803", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs"];
m0_249 [label="value is XmlNode", span="806-806", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs"];
m0_250 [label="return new XmlNodeWrapper((XmlNode)value);", span="807-807", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs"];
m0_251 [label="throw new ArgumentException(''Value must be an XML object.'', ''value'');", span="810-810", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs"];
m0_252 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", span="799-799", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.WrapXml(object)", file="ExtensionsTests.cs"];
m0_16 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="65-65", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs"];
m0_17 [label="return new XmlNodeWrapper(_document.CreateWhitespace(text));", span="67-67", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs"];
m0_18 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", span="65-65", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateWhitespace(string)", file="ExtensionsTests.cs"];
m0_31 [label="Entry Unk.CreateProcessingInstruction", span="", cluster="Unk.CreateProcessingInstruction", file="ExtensionsTests.cs"];
m0_246 [label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248", cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="ExtensionsTests.cs"];
m0_40 [label="Entry Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="95-95", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_41 [label="XmlNodeWrapper attribute = new XmlNodeWrapper(_document.CreateAttribute(name))", span="97-97", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_42 [label="attribute.Value = value", span="98-98", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_43 [label="return attribute;", span="100-100", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_44 [label="Exit Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", span="95-95", cluster="Newtonsoft.Json.Converters.XmlDocumentWrapper.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_96 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="280-280", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="ExtensionsTests.cs"];
m0_97 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", span="280-280", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateWhitespace(string)", file="ExtensionsTests.cs"];
m0_108 [label="Entry Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="286-286", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_109 [label="Exit Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", span="286-286", cluster="Newtonsoft.Json.Converters.IXmlDocument.CreateAttribute(string, string)", file="ExtensionsTests.cs"];
m0_161 [label="Entry Unk.Get", span="", cluster="Unk.Get", file="ExtensionsTests.cs"];
m0_497 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1426-1426", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_612 [label="return (!string.IsNullOrEmpty(elementPrefix))\r\n               ? document.CreateElement(elementName, manager.LookupNamespace(elementPrefix))\r\n               : document.CreateElement(elementName);", span="1428-1430", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_613 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", span="1426-1426", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.CreateElement(string, Newtonsoft.Json.Converters.IXmlDocument, string, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_62 [label="Entry Unk.GetPrefixOfNamespace", span="", cluster="Unk.GetPrefixOfNamespace", file="ExtensionsTests.cs"];
m0_456 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="ExtensionsTests.cs"];
m0_84 [label="Entry Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="253-253", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_85 [label="XmlNodeWrapper xmlNodeWrapper = (XmlNodeWrapper) newChild", span="255-255", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_87 [label="return newChild;", span="258-258", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_86 [label="_node.AppendChild(xmlNodeWrapper._node)", span="256-256", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_88 [label="Exit Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", span="253-253", cluster="Newtonsoft.Json.Converters.XmlNodeWrapper.AppendChild(Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_245 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="955-955", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_352 [label="node.NodeType", span="957-957", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_355 [label="SerializeGroupedNodes(writer, node, manager, writePropertyName)", span="961-961", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_357 [label="IsArray(node) && node.ChildNodes.All(n => n.LocalName == node.LocalName) && node.ChildNodes.Count > 0", span="964-964", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_358 [label="SerializeGroupedNodes(writer, node, manager, false)", span="966-966", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_359 [label="node.Attributes", span="970-970", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_362 [label="manager.AddNamespace(prefix, attribute.Value)", span="978-978", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_363 [label=writePropertyName, span="982-982", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_364 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="983-983", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_365 [label="ValueAttributes(node.Attributes).Count() == 0 && node.ChildNodes.Count == 1\r\n                && node.ChildNodes[0].NodeType == XmlNodeType.Text", span="985-986", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_366 [label="writer.WriteValue(node.ChildNodes[0].Value)", span="989-989", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_367 [label="node.ChildNodes.Count == 0 && CollectionUtils.IsNullOrEmpty(node.Attributes)", span="991-991", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_368 [label="writer.WriteNull()", span="994-994", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_369 [label="writer.WriteStartObject()", span="998-998", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_371 [label="i < node.Attributes.Count", span="1000-1000", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_372 [label="SerializeNode(writer, node.Attributes[i], manager, true)", span="1002-1002", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_374 [label="SerializeGroupedNodes(writer, node, manager, true)", span="1005-1005", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_375 [label="writer.WriteEndObject()", span="1007-1007", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_377 [label=writePropertyName, span="1013-1013", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_378 [label="writer.WriteComment(node.Value)", span="1014-1014", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_385 [label="node.NamespaceURI == ''http://www.w3.org/2000/xmlns/'' && node.Value == JsonNamespaceUri", span="1022-1022", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_387 [label="node.NamespaceURI == JsonNamespaceUri", span="1025-1025", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_388 [label="node.LocalName == ''Array''", span="1027-1027", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_390 [label=writePropertyName, span="1031-1031", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_391 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1032-1032", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_392 [label="writer.WriteValue(node.Value)", span="1033-1033", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_394 [label="IXmlDeclaration declaration = (IXmlDeclaration)node", span="1036-1036", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_395 [label="writer.WritePropertyName(GetPropertyName(node, manager))", span="1037-1037", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_396 [label="writer.WriteStartObject()", span="1038-1038", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_398 [label="writer.WritePropertyName(''@version'')", span="1042-1042", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_399 [label="writer.WriteValue(declaration.Version)", span="1043-1043", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_401 [label="writer.WritePropertyName(''@encoding'')", span="1047-1047", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_402 [label="writer.WriteValue(declaration.Encoding)", span="1048-1048", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_404 [label="writer.WritePropertyName(''@standalone'')", span="1052-1052", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_405 [label="writer.WriteValue(declaration.Standalone)", span="1053-1053", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_406 [label="writer.WriteEndObject()", span="1056-1056", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_407 [label="throw new JsonSerializationException(''Unexpected XmlNodeType when serializing nodes: '' + node.NodeType);", span="1059-1059", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_353 [label="XmlNodeType.Document", span="959-959", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_356 [label="XmlNodeType.Element", span="963-963", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_376 [label="XmlNodeType.Comment", span="1012-1012", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_379 [label="XmlNodeType.Attribute", span="1016-1016", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_393 [label="XmlNodeType.XmlDeclaration", span="1035-1035", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_354 [label="XmlNodeType.DocumentFragment", span="960-960", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_360 [label="attribute.NamespaceURI == ''http://www.w3.org/2000/xmlns/''", span="972-972", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_361 [label="string prefix = (attribute.LocalName != ''xmlns'')\r\n                                  ? attribute.LocalName\r\n                                  : string.Empty", span="974-976", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_370 [label="int i = 0", span="1000-1000", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_373 [label="i++", span="1000-1000", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_380 [label="XmlNodeType.Text", span="1017-1017", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_381 [label="XmlNodeType.CDATA", span="1018-1018", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_382 [label="XmlNodeType.ProcessingInstruction", span="1019-1019", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_383 [label="XmlNodeType.Whitespace", span="1020-1020", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_384 [label="XmlNodeType.SignificantWhitespace", span="1021-1021", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_386 [label="return;", span="1023-1023", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_389 [label="return;", span="1028-1028", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_397 [label="!string.IsNullOrEmpty(declaration.Version)", span="1040-1040", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_400 [label="!string.IsNullOrEmpty(declaration.Encoding)", span="1045-1045", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_403 [label="!string.IsNullOrEmpty(declaration.Standalone)", span="1050-1050", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_408 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", span="955-955", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.SerializeNode(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager, bool)", file="ExtensionsTests.cs"];
m0_243 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="813-813", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_254 [label="List<IXmlNode> parentElements = null", span="815-815", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_255 [label="IXmlNode parent = node", span="817-817", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_264 [label="manager.PushScope()", span="835-835", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_267 [label="manager.AddNamespace(attribute.LocalName, attribute.Value)", span="839-839", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_258 [label="parentElements == null", span="822-822", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_260 [label="parentElements.Add(parent)", span="825-825", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_261 [label="parentElements != null", span="829-829", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_262 [label="parentElements.Reverse()", span="831-831", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_263 [label=parentElements, span="833-833", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_256 [label="(parent = parent.ParentNode) != null", span="818-818", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_257 [label="parent.NodeType == XmlNodeType.Element", span="820-820", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_259 [label="parentElements = new List<IXmlNode>()", span="823-823", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_265 [label="parentElement.Attributes", span="836-836", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_266 [label="attribute.NamespaceURI == ''http://www.w3.org/2000/xmlns/'' && attribute.LocalName != ''xmlns''", span="838-838", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_268 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", span="813-813", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.PushParentNamespaces(Newtonsoft.Json.Converters.IXmlNode, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_498 [label="Entry Unk.LookupNamespace", span="", cluster="Unk.LookupNamespace", file="ExtensionsTests.cs"];
m0_495 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1299-1299", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_548 [label="Dictionary<string, string> attributeNameValues = new Dictionary<string, string>()", span="1301-1301", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_551 [label="reader.TokenType != JsonToken.String\r\n          && reader.TokenType != JsonToken.Null\r\n          && reader.TokenType != JsonToken.Boolean\r\n          && reader.TokenType != JsonToken.Integer\r\n          && reader.TokenType != JsonToken.Float\r\n          && reader.TokenType != JsonToken.Date\r\n          && reader.TokenType != JsonToken.StartConstructor", span="1306-1312", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_552 [label="!finishedAttributes && !finishedElement && reader.Read()", span="1315-1315", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_553 [label="reader.TokenType", span="1317-1317", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_555 [label="string attributeName = reader.Value.ToString()", span="1320-1320", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_562 [label="reader.Read()", span="1331-1331", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_563 [label="attributeValue = ConvertTokenToXmlValue(reader)", span="1332-1332", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_567 [label="manager.AddNamespace(namespacePrefix, attributeValue)", span="1338-1338", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_570 [label="reader.Read()", span="1343-1343", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_571 [label="attributeValue = reader.Value.ToString()", span="1344-1344", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_572 [label="string jsonPrefix = manager.LookupPrefix(JsonNamespaceUri)", span="1348-1348", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_575 [label="manager.LookupNamespace(''json'' + i) != null", span="1353-1353", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_579 [label="manager.AddNamespace(jsonPrefix, JsonNamespaceUri)", span="1360-1360", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_585 [label="throw new JsonSerializationException(''Unexpected JsonToken: '' + reader.TokenType);", span="1380-1380", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_549 [label="bool finishedAttributes = false", span="1302-1302", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_564 [label="attributeNameValues.Add(attributeName, attributeValue)", span="1333-1333", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_578 [label="attributeNameValues.Add(''xmlns:'' + jsonPrefix, JsonNamespaceUri)", span="1359-1359", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_580 [label="attributeNameValues.Add(jsonPrefix + '':'' + attributeName, attributeValue)", span="1363-1363", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_586 [label="return attributeNameValues;", span="1385-1385", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_550 [label="bool finishedElement = false", span="1303-1303", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_554 [label="JsonToken.PropertyName", span="1319-1319", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_583 [label="JsonToken.EndObject", span="1376-1376", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_556 [label="string attributeValue", span="1321-1321", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_557 [label="!string.IsNullOrEmpty(attributeName)", span="1323-1323", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_558 [label="char firstChar = attributeName[0]", span="1325-1325", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_561 [label="attributeName = attributeName.Substring(1)", span="1330-1330", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_582 [label="finishedAttributes = true", span="1372-1372", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_559 [label=firstChar, span="1327-1327", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_560 [label="'@'", span="1329-1329", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_568 [label="'$'", span="1341-1341", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_581 [label="finishedAttributes = true", span="1366-1366", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_566 [label="IsNamespaceAttribute(attributeName, out namespacePrefix)", span="1336-1336", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_569 [label="attributeName = attributeName.Substring(1)", span="1342-1342", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_565 [label="string namespacePrefix", span="1335-1335", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_573 [label="jsonPrefix == null", span="1349-1349", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_574 [label="int? i = null", span="1352-1352", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_576 [label="i = i.GetValueOrDefault() + 1", span="1355-1355", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_577 [label="jsonPrefix = ''json'' + i", span="1357-1357", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_584 [label="finishedElement = true", span="1377-1377", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_587 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", span="1299-1299", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.ReadAttributeElements(Newtonsoft.Json.JsonReader, XmlNamespaceManager)", file="ExtensionsTests.cs"];
m0_311 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="ExtensionsTests.cs"];
m0_280 [label="Entry Unk.LookupPrefix", span="", cluster="Unk.LookupPrefix", file="ExtensionsTests.cs"];
m0_455 [label="Entry Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1433-1433", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_614 [label="reader.TokenType", span="1437-1437", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_616 [label="currentNode.NodeType == XmlNodeType.Document && document.DocumentElement != null", span="1440-1440", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_618 [label="string propertyName = reader.Value.ToString()", span="1443-1443", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_619 [label="reader.Read()", span="1444-1444", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_620 [label="reader.TokenType == JsonToken.StartArray", span="1446-1446", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_622 [label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="1449-1449", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_623 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1451-1451", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_626 [label="IXmlElement arrayElement = currentNode.ChildNodes.CastValid<IXmlElement>().Single(n => n.LocalName == propertyName)", span="1457-1457", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_627 [label="AddJsonArrayAttribute(arrayElement, document)", span="1458-1458", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_628 [label="DeserializeValue(reader, document, manager, propertyName, currentNode)", span="1463-1463", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_630 [label="string constructorName = reader.Value.ToString()", span="1467-1467", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_631 [label="reader.Read() && reader.TokenType != JsonToken.EndConstructor", span="1469-1469", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_632 [label="DeserializeValue(reader, document, manager, constructorName, currentNode)", span="1471-1471", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_634 [label="currentNode.AppendChild(document.CreateComment((string)reader.Value))", span="1475-1475", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_638 [label="throw new JsonSerializationException(''Unexpected JsonToken when deserializing node: '' + reader.TokenType);", span="1481-1481", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_639 [label="reader.TokenType == JsonToken.PropertyName || reader.Read()", span="1483-1483", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_615 [label="JsonToken.PropertyName", span="1439-1439", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_629 [label="JsonToken.StartConstructor", span="1466-1466", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_633 [label="JsonToken.Comment", span="1474-1474", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_635 [label="JsonToken.EndObject", span="1477-1477", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_617 [label="throw new JsonSerializationException(''JSON root object has multiple properties. The root object must have a single property in order to create a valid XML document. Consider specifing a DeserializeRootElementName.'');", span="1441-1441", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_621 [label="int count = 0", span="1448-1448", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_624 [label="count++", span="1452-1452", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_625 [label="count == 1 && WriteArrayAttribute", span="1455-1455", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_636 [label="JsonToken.EndArray", span="1478-1478", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_637 [label="return;", span="1479-1479", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_640 [label="Exit Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", span="1433-1433", cluster="Newtonsoft.Json.Converters.XmlNodeConverter.DeserializeNode(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Converters.IXmlDocument, XmlNamespaceManager, Newtonsoft.Json.Converters.IXmlNode)", file="ExtensionsTests.cs"];
m0_272 [label="Entry Unk.PushScope", span="", cluster="Unk.PushScope", file="ExtensionsTests.cs"];
m0_669 [label="Newtonsoft.Json.Converters.XmlDocumentWrapper", span="", file="ExtensionsTests.cs"];
m0_670 [label="Newtonsoft.Json.Converters.XmlElementWrapper", span="", file="ExtensionsTests.cs"];
m0_671 [label="Newtonsoft.Json.Converters.XmlDeclarationWrapper", span="", file="ExtensionsTests.cs"];
m0_672 [label="Newtonsoft.Json.Converters.XmlNodeWrapper", span="", file="ExtensionsTests.cs"];
m0_673 [label="Newtonsoft.Json.Converters.XDeclarationWrapper", span="", file="ExtensionsTests.cs"];
m0_674 [label="Newtonsoft.Json.Converters.XDocumentWrapper", span="", file="ExtensionsTests.cs"];
m0_675 [label="Newtonsoft.Json.Converters.XContainerWrapper", span="", file="ExtensionsTests.cs"];
m0_676 [label="Newtonsoft.Json.Converters.XObjectWrapper", span="", file="ExtensionsTests.cs"];
m0_677 [label="Newtonsoft.Json.Converters.XElementWrapper", span="", file="ExtensionsTests.cs"];
m0_678 [label="Newtonsoft.Json.Converters.XmlNodeConverter", span="", file="ExtensionsTests.cs"];
m0_679 [label="Newtonsoft.Json.Converters.IXmlNode", span="", file="ExtensionsTests.cs"];
m0_680 [label=string, span="", file="ExtensionsTests.cs"];
m0_681 [label=propertyName, span="", file="ExtensionsTests.cs"];
m2_27 [label="Entry Newtonsoft.Json.Utilities.MethodCall<T>.Invoke(T, params object[])", span="27-27", cluster="Newtonsoft.Json.Utilities.MethodCall<T>.Invoke(T, params object[])", file="JTokenReader.cs"];
m2_14 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="638-638", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JTokenReader.cs"];
m2_26 [label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall(System.Reflection.MethodBase)", span="59-59", cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall(System.Reflection.MethodBase)", file="JTokenReader.cs"];
m2_12 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="94-94", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JTokenReader.cs"];
m2_9 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="150-150", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JTokenReader.cs"];
m2_15 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="70-70", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs"];
m2_16 [label="list is IList && (CollectionItemType == null || !_isCollectionItemTypeNullableType)", span="72-72", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs"];
m2_17 [label="return new CollectionWrapper<object>((IList)list);", span="73-73", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs"];
m2_22 [label="return (IWrappedCollection)_genericWrapperCreator(null, list);", span="83-83", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs"];
m2_18 [label="_genericWrapperType == null", span="75-75", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs"];
m2_19 [label="_genericWrapperType = ReflectionUtils.MakeGenericType(typeof(CollectionWrapper<>), CollectionItemType)", span="77-77", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs"];
m2_20 [label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { _genericCollectionDefinitionType })", span="79-79", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs"];
m2_21 [label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall(genericWrapperConstructor)", span="80-80", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs"];
m2_23 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="70-70", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JTokenReader.cs"];
m2_13 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="86-86", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs"];
m2_28 [label="!type.IsGenericType", span="88-88", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs"];
m2_30 [label="Type genericDefinition = type.GetGenericTypeDefinition()", span="91-91", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs"];
m2_29 [label="return false;", span="89-89", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs"];
m2_31 [label="return (genericDefinition == typeof(IList<>)\r\n              || genericDefinition == typeof(ICollection<>)\r\n              || genericDefinition == typeof(IEnumerable<>));", span="93-95", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs"];
m2_32 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="86-86", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JTokenReader.cs"];
m2_10 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="JTokenReader.cs"];
m2_25 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="JTokenReader.cs"];
m2_11 [label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="268-268", cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JTokenReader.cs"];
m2_24 [label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="46-46", cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="JTokenReader.cs"];
m2_33 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="JTokenReader.cs"];
m2_0 [label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs"];
m2_1 [label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="52-52", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs"];
m2_2 [label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="54-54", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs"];
m2_3 [label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="58-58", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs"];
m2_4 [label="CollectionItemType != null", span="61-61", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs"];
m2_5 [label="_isCollectionItemTypeNullableType = ReflectionUtils.IsNullableType(CollectionItemType)", span="62-62", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs"];
m2_6 [label="IsTypeGenericCollectionInterface(UnderlyingType)", span="64-64", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs"];
m2_7 [label="CreatedType = ReflectionUtils.MakeGenericType(typeof(List<>), CollectionItemType)", span="66-66", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs"];
m2_8 [label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="49-49", cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JTokenReader.cs"];
m2_34 [label="Newtonsoft.Json.Serialization.JsonArrayContract", span="", file="JTokenReader.cs"];
m4_3 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.Employee.Employee()", span="17-17", cluster="Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.Employee.Employee()", file="TypeNameHandlingTests.cs"];
m4_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", span="25-25", cluster="Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", file="TypeNameHandlingTests.cs"];
m4_1 [label="return new Employee();", span="27-27", cluster="Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", color=green, community=0, file="TypeNameHandlingTests.cs"];
m4_2 [label="Exit Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", span="25-25", cluster="Newtonsoft.Json.Tests.Documentation.Examples.DeserializeCustomCreationConverter.PersonConverter.Create(System.Type)", file="TypeNameHandlingTests.cs"];
m0_499 -> m0_501  [key=0, style=solid];
m0_499 -> m0_502  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_503  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_504  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_505  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_506  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_507  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_508  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_509  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_510  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_512  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_499 -> m0_514  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_501 -> m0_502  [key=0, style=solid];
m0_501 -> m0_503  [key=0, style=solid];
m0_502 -> m0_515  [key=0, style=solid];
m0_502 -> m0_474  [key=2, style=dotted];
m0_503 -> m0_504  [key=0, style=solid];
m0_503 -> m0_505  [key=0, style=solid];
m0_504 -> m0_515  [key=0, style=solid];
m0_504 -> m0_516  [key=2, style=dotted];
m0_504 -> m0_517  [key=2, style=dotted];
m0_505 -> m0_506  [key=0, style=solid];
m0_505 -> m0_507  [key=0, style=solid];
m0_506 -> m0_515  [key=0, style=solid];
m0_506 -> m0_518  [key=2, style=dotted];
m0_506 -> m0_517  [key=2, style=dotted];
m0_507 -> m0_508  [key=0, style=solid];
m0_507 -> m0_509  [key=0, style=solid];
m0_508 -> m0_515  [key=0, style=solid];
m0_508 -> m0_519  [key=2, style=dotted];
m0_508 -> m0_517  [key=2, style=dotted];
m0_509 -> m0_510  [key=0, style=solid];
m0_509 -> m0_512  [key=0, style=solid];
m0_510 -> m0_511  [key=0, style=solid];
m0_510 -> m0_520  [key=2, style=dotted];
m0_512 -> m0_513  [key=0, style=solid];
m0_512 -> m0_514  [key=0, style=solid];
m0_514 -> m0_515  [key=0, style=solid];
m0_514 -> m0_522  [key=2, style=dotted];
m0_514 -> m0_523  [key=2, style=dotted];
m0_511 -> m0_515  [key=0, style=solid];
m0_511 -> m0_521  [key=2, style=dotted];
m0_511 -> m0_517  [key=2, style=dotted];
m0_513 -> m0_515  [key=0, style=solid];
m0_515 -> m0_499  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_6  [key=2, style=dotted];
m0_29 -> m0_31  [key=2, style=dotted];
m0_30 -> m0_28  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_126  [key=2, style=dotted];
m0_124 -> m0_127  [key=2, style=dotted];
m0_125 -> m0_123  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_90  [key=0, style=bold, color=blue];
m0_102 -> m0_103  [key=0, style=solid];
m0_103 -> m0_102  [key=0, style=bold, color=blue];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_191  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_192  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_195  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_196  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_197  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_201  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_202  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_203  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_189 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label=XObject];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_192  [key=0, style=solid];
m0_191 -> m0_205  [key=0, style=solid];
m0_191 -> m0_121  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_194  [key=0, style=solid];
m0_193 -> m0_205  [key=0, style=solid];
m0_193 -> m0_154  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_196  [key=0, style=solid];
m0_195 -> m0_205  [key=0, style=solid];
m0_195 -> m0_184  [key=2, style=dotted];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_198  [key=0, style=solid];
m0_197 -> m0_205  [key=0, style=solid];
m0_197 -> m0_149  [key=2, style=dotted];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_200  [key=0, style=solid];
m0_199 -> m0_205  [key=0, style=solid];
m0_199 -> m0_179  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_202  [key=0, style=solid];
m0_201 -> m0_205  [key=0, style=solid];
m0_201 -> m0_181  [key=2, style=dotted];
m0_202 -> m0_203  [key=0, style=solid];
m0_202 -> m0_204  [key=0, style=solid];
m0_203 -> m0_205  [key=0, style=solid];
m0_203 -> m0_165  [key=2, style=dotted];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_206  [key=2, style=dotted];
m0_205 -> m0_189  [key=0, style=bold, color=blue];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_158  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_160  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_154  [key=2, style=dotted];
m0_158 -> m0_155  [key=2, style=dotted];
m0_158 -> m0_161  [key=2, style=dotted];
m0_159 -> m0_156  [key=0, style=bold, color=blue];
m0_453 -> m0_477  [key=0, style=solid];
m0_453 -> m0_479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_453 -> m0_480  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_453 -> m0_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m0_453 -> m0_482  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_453 -> m0_485  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m0_453 -> m0_487  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_453 -> m0_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_453 -> m0_489  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_453 -> m0_490  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_453 -> m0_491  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_453 -> m0_492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_453 -> m0_493  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_477 -> m0_478  [key=0, style=solid];
m0_477 -> m0_479  [key=0, style=solid];
m0_477 -> m0_281  [key=2, style=dotted];
m0_479 -> m0_480  [key=0, style=solid];
m0_479 -> m0_495  [key=2, style=dotted];
m0_479 -> m0_483  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m0_480 -> m0_481  [key=0, style=solid];
m0_480 -> m0_496  [key=2, style=dotted];
m0_481 -> m0_482  [key=0, style=solid];
m0_481 -> m0_497  [key=2, style=dotted];
m0_481 -> m0_486  [key=1, style=dashed, color=darkseagreen4, label=element];
m0_481 -> m0_488  [key=1, style=dashed, color=darkseagreen4, label=element];
m0_481 -> m0_492  [key=1, style=dashed, color=darkseagreen4, label=element];
m0_482 -> m0_483  [key=0, style=solid];
m0_482 -> m0_116  [key=2, style=dotted];
m0_485 -> m0_486  [key=0, style=solid];
m0_485 -> m0_281  [key=2, style=dotted];
m0_485 -> m0_498  [key=2, style=dotted];
m0_485 -> m0_45  [key=2, style=dotted];
m0_485 -> m0_108  [key=2, style=dotted];
m0_485 -> m0_485  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m0_487 -> m0_488  [key=0, style=solid];
m0_487 -> m0_489  [key=0, style=solid];
m0_488 -> m0_494  [key=0, style=solid];
m0_488 -> m0_499  [key=2, style=dotted];
m0_488 -> m0_92  [key=2, style=dotted];
m0_488 -> m0_116  [key=2, style=dotted];
m0_489 -> m0_490  [key=0, style=solid];
m0_489 -> m0_494  [key=0, style=solid];
m0_490 -> m0_491  [key=0, style=solid];
m0_490 -> m0_494  [key=0, style=solid];
m0_491 -> m0_492  [key=0, style=solid];
m0_491 -> m0_272  [key=2, style=dotted];
m0_492 -> m0_493  [key=0, style=solid];
m0_492 -> m0_455  [key=2, style=dotted];
m0_493 -> m0_494  [key=0, style=solid];
m0_493 -> m0_500  [key=2, style=dotted];
m0_478 -> m0_494  [key=0, style=solid];
m0_478 -> m0_450  [key=2, style=dotted];
m0_483 -> m0_484  [key=0, style=solid];
m0_483 -> m0_487  [key=0, style=solid];
m0_486 -> m0_483  [key=0, style=solid];
m0_486 -> m0_112  [key=2, style=dotted];
m0_484 -> m0_485  [key=0, style=solid];
m0_484 -> m0_496  [key=2, style=dotted];
m0_484 -> m0_484  [key=1, style=dashed, color=darkseagreen4, label=nameValue];
m0_494 -> m0_453  [key=0, style=bold, color=blue];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_110  [key=0, style=bold, color=blue];
m0_165 -> m0_217  [key=0, style=solid];
m0_217 -> m0_165  [key=0, style=bold, color=blue];
m0_139 -> m0_140  [key=0, style=solid];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_126  [key=2, style=dotted];
m0_140 -> m0_131  [key=2, style=dotted];
m0_141 -> m0_139  [key=0, style=bold, color=blue];
m0_66 -> m0_67  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_66  [key=0, style=bold, color=blue];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_51  [key=0, style=bold, color=blue];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_319  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_316 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_316 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_316 -> m0_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_316 -> m0_337  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_316 -> m0_338  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_316 -> m0_339  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_316 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_316 -> m0_344  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_317 -> m0_318  [key=0, style=solid];
m0_317 -> m0_346  [key=2, style=dotted];
m0_317 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m0_317 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m0_317 -> m0_328  [key=1, style=dashed, color=darkseagreen4, label=nodesGroupedByName];
m0_319 -> m0_320  [key=0, style=solid];
m0_319 -> m0_328  [key=0, style=solid];
m0_320 -> m0_321  [key=0, style=solid];
m0_320 -> m0_326  [key=1, style=dashed, color=darkseagreen4, label=childNode];
m0_321 -> m0_322  [key=0, style=solid];
m0_321 -> m0_282  [key=2, style=dotted];
m0_321 -> m0_323  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m0_321 -> m0_325  [key=1, style=dashed, color=darkseagreen4, label=nodeName];
m0_335 -> m0_328  [key=0, style=solid];
m0_335 -> m0_245  [key=2, style=dotted];
m0_337 -> m0_338  [key=0, style=solid];
m0_337 -> m0_339  [key=0, style=solid];
m0_338 -> m0_339  [key=0, style=solid];
m0_338 -> m0_349  [key=2, style=dotted];
m0_339 -> m0_340  [key=0, style=solid];
m0_339 -> m0_350  [key=2, style=dotted];
m0_342 -> m0_343  [key=0, style=solid];
m0_342 -> m0_245  [key=2, style=dotted];
m0_344 -> m0_328  [key=0, style=solid];
m0_344 -> m0_351  [key=2, style=dotted];
m0_318 -> m0_319  [key=0, style=solid];
m0_318 -> m0_320  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_318 -> m0_327  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_323 -> m0_324  [key=0, style=solid];
m0_323 -> m0_326  [key=0, style=solid];
m0_323 -> m0_347  [key=2, style=dotted];
m0_325 -> m0_326  [key=0, style=solid];
m0_325 -> m0_348  [key=2, style=dotted];
m0_328 -> m0_329  [key=0, style=solid];
m0_328 -> m0_345  [key=0, style=solid];
m0_327 -> m0_319  [key=0, style=solid];
m0_327 -> m0_327  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_326 -> m0_327  [key=0, style=solid];
m0_326 -> m0_270  [key=2, style=dotted];
m0_322 -> m0_323  [key=0, style=solid];
m0_324 -> m0_325  [key=0, style=solid];
m0_324 -> m0_269  [key=2, style=dotted];
m0_324 -> m0_326  [key=1, style=dashed, color=darkseagreen4, label=nodes];
m0_329 -> m0_330  [key=0, style=solid];
m0_329 -> m0_329  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m0_329 -> m0_331  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m0_329 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m0_329 -> m0_335  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m0_329 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m0_329 -> m0_341  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m0_329 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label=groupedNodes];
m0_330 -> m0_331  [key=0, style=solid];
m0_331 -> m0_332  [key=0, style=solid];
m0_331 -> m0_333  [key=0, style=solid];
m0_332 -> m0_334  [key=0, style=solid];
m0_332 -> m0_307  [key=2, style=dotted];
m0_336 -> m0_337  [key=0, style=solid];
m0_336 -> m0_336  [key=1, style=dashed, color=darkseagreen4, label=nodeNameGroup];
m0_336 -> m0_338  [key=1, style=dashed, color=darkseagreen4, label=elementNames];
m0_341 -> m0_342  [key=0, style=solid];
m0_341 -> m0_344  [key=0, style=solid];
m0_333 -> m0_334  [key=0, style=solid];
m0_334 -> m0_335  [key=0, style=solid];
m0_334 -> m0_336  [key=0, style=solid];
m0_340 -> m0_341  [key=0, style=solid];
m0_340 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_340 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_343 -> m0_341  [key=0, style=solid];
m0_343 -> m0_343  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_345 -> m0_316  [key=0, style=bold, color=blue];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m0_73 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m0_73 -> m0_79  [key=1, style=dashed, color=darkseagreen4, label=XmlNode];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_77  [key=0, style=solid];
m0_74 -> m0_79  [key=0, style=solid];
m0_76 -> m0_80  [key=0, style=solid];
m0_76 -> m0_51  [key=2, style=dotted];
m0_78 -> m0_80  [key=0, style=solid];
m0_78 -> m0_63  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_66  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_80 -> m0_73  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_65 -> m0_63  [key=0, style=bold, color=blue];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_92  [key=0, style=bold, color=blue];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label=declarationWrapper];
m0_172 -> m0_175  [key=1, style=dashed, color=darkseagreen4, label=declarationWrapper];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_178  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_176  [key=0, style=solid];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_177  [key=0, style=solid];
m0_177 -> m0_171  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_6  [key=2, style=dotted];
m0_25 -> m0_27  [key=2, style=dotted];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_160  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_165  [key=2, style=dotted];
m0_169 -> m0_166  [key=2, style=dotted];
m0_169 -> m0_161  [key=2, style=dotted];
m0_170 -> m0_167  [key=0, style=bold, color=blue];
m0_54 -> m0_55  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_58  [key=2, style=dotted];
m0_57 -> m0_54  [key=0, style=bold, color=blue];
m0_475 -> m0_591  [key=0, style=solid];
m0_475 -> m0_595  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_596  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_598  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_599  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_601  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_602  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_604  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_605  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_606  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m0_475 -> m0_608  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_475 -> m0_609  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_475 -> m0_610  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_591 -> m0_592  [key=0, style=solid];
m0_591 -> m0_609  [key=0, style=solid];
m0_595 -> m0_596  [key=0, style=solid];
m0_595 -> m0_607  [key=0, style=solid];
m0_595 -> m0_454  [key=2, style=dotted];
m0_596 -> m0_597  [key=0, style=solid];
m0_596 -> m0_600  [key=0, style=solid];
m0_596 -> m0_603  [key=0, style=solid];
m0_596 -> m0_606  [key=0, style=solid];
m0_596 -> m0_474  [key=2, style=dotted];
m0_598 -> m0_599  [key=0, style=solid];
m0_598 -> m0_454  [key=2, style=dotted];
m0_599 -> m0_595  [key=0, style=solid];
m0_599 -> m0_474  [key=2, style=dotted];
m0_599 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label=version];
m0_601 -> m0_602  [key=0, style=solid];
m0_601 -> m0_454  [key=2, style=dotted];
m0_602 -> m0_595  [key=0, style=solid];
m0_602 -> m0_474  [key=2, style=dotted];
m0_602 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m0_604 -> m0_605  [key=0, style=solid];
m0_604 -> m0_454  [key=2, style=dotted];
m0_605 -> m0_595  [key=0, style=solid];
m0_605 -> m0_474  [key=2, style=dotted];
m0_605 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m0_606 -> m0_611  [key=0, style=solid];
m0_606 -> m0_450  [key=2, style=dotted];
m0_607 -> m0_608  [key=0, style=solid];
m0_607 -> m0_100  [key=2, style=dotted];
m0_608 -> m0_611  [key=0, style=solid];
m0_608 -> m0_116  [key=2, style=dotted];
m0_609 -> m0_610  [key=0, style=solid];
m0_609 -> m0_588  [key=2, style=dotted];
m0_609 -> m0_474  [key=2, style=dotted];
m0_609 -> m0_102  [key=2, style=dotted];
m0_610 -> m0_611  [key=0, style=solid];
m0_610 -> m0_116  [key=2, style=dotted];
m0_592 -> m0_593  [key=0, style=solid];
m0_592 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label=version];
m0_593 -> m0_594  [key=0, style=solid];
m0_593 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label=encoding];
m0_594 -> m0_595  [key=0, style=solid];
m0_594 -> m0_607  [key=1, style=dashed, color=darkseagreen4, label=standalone];
m0_597 -> m0_598  [key=0, style=solid];
m0_600 -> m0_601  [key=0, style=solid];
m0_603 -> m0_604  [key=0, style=solid];
m0_611 -> m0_475  [key=0, style=bold, color=blue];
m0_213 -> m0_214  [key=0, style=solid];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_216  [key=2, style=dotted];
m0_215 -> m0_213  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_6  [key=2, style=dotted];
m0_9 -> m0_11  [key=2, style=dotted];
m0_10 -> m0_8  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_106 -> m0_107  [key=0, style=solid];
m0_107 -> m0_106  [key=0, style=bold, color=blue];
m0_142 -> m0_143  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_118  [key=2, style=dotted];
m0_143 -> m0_145  [key=2, style=dotted];
m0_144 -> m0_142  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_3  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_6  [key=2, style=dotted];
m0_21 -> m0_23  [key=2, style=dotted];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_457 -> m0_458  [key=0, style=solid];
m0_457 -> m0_460  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_457 -> m0_462  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_457 -> m0_464  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_457 -> m0_466  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_457 -> m0_467  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_457 -> m0_468  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_457 -> m0_469  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_457 -> m0_470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_457 -> m0_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_458 -> m0_459  [key=0, style=solid];
m0_458 -> m0_461  [key=0, style=solid];
m0_458 -> m0_463  [key=0, style=solid];
m0_458 -> m0_465  [key=0, style=solid];
m0_458 -> m0_467  [key=0, style=solid];
m0_460 -> m0_473  [key=0, style=solid];
m0_460 -> m0_474  [key=2, style=dotted];
m0_460 -> m0_92  [key=2, style=dotted];
m0_460 -> m0_116  [key=2, style=dotted];
m0_462 -> m0_473  [key=0, style=solid];
m0_462 -> m0_474  [key=2, style=dotted];
m0_462 -> m0_94  [key=2, style=dotted];
m0_462 -> m0_116  [key=2, style=dotted];
m0_464 -> m0_473  [key=0, style=solid];
m0_464 -> m0_474  [key=2, style=dotted];
m0_464 -> m0_96  [key=2, style=dotted];
m0_464 -> m0_116  [key=2, style=dotted];
m0_466 -> m0_473  [key=0, style=solid];
m0_466 -> m0_474  [key=2, style=dotted];
m0_466 -> m0_98  [key=2, style=dotted];
m0_466 -> m0_116  [key=2, style=dotted];
m0_467 -> m0_468  [key=0, style=solid];
m0_467 -> m0_469  [key=0, style=solid];
m0_467 -> m0_281  [key=2, style=dotted];
m0_468 -> m0_473  [key=0, style=solid];
m0_468 -> m0_475  [key=2, style=dotted];
m0_469 -> m0_470  [key=0, style=solid];
m0_469 -> m0_472  [key=0, style=solid];
m0_470 -> m0_471  [key=0, style=solid];
m0_470 -> m0_476  [key=2, style=dotted];
m0_472 -> m0_473  [key=0, style=solid];
m0_472 -> m0_453  [key=2, style=dotted];
m0_459 -> m0_460  [key=0, style=solid];
m0_461 -> m0_462  [key=0, style=solid];
m0_463 -> m0_464  [key=0, style=solid];
m0_465 -> m0_466  [key=0, style=solid];
m0_471 -> m0_473  [key=0, style=solid];
m0_473 -> m0_457  [key=0, style=bold, color=blue];
m0_181 -> m0_182  [key=0, style=solid];
m0_182 -> m0_181  [key=0, style=bold, color=blue];
m0_154 -> m0_218  [key=0, style=solid];
m0_218 -> m0_154  [key=0, style=bold, color=blue];
m0_274 -> m0_275  [key=0, style=solid];
m0_274 -> m0_277  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_274 -> m0_278  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_280  [key=2, style=dotted];
m0_275 -> m0_277  [key=1, style=dashed, color=darkseagreen4, label=prefix];
m0_277 -> m0_279  [key=0, style=solid];
m0_278 -> m0_279  [key=0, style=solid];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_278  [key=0, style=solid];
m0_276 -> m0_281  [key=2, style=dotted];
m0_279 -> m0_274  [key=0, style=bold, color=blue];
m0_227 -> m0_228  [key=0, style=solid];
m0_228 -> m0_229  [key=0, style=solid];
m0_228 -> m0_62  [key=2, style=dotted];
m0_229 -> m0_227  [key=0, style=bold, color=blue];
m0_410 -> m0_656  [key=0, style=solid];
m0_656 -> m0_657  [key=0, style=solid];
m0_656 -> m0_658  [key=2, style=dotted];
m0_656 -> m0_659  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_657 -> m0_410  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid];
m0_99 -> m0_98  [key=0, style=bold, color=blue];
m0_178 -> m0_207  [key=0, style=solid];
m0_178 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_210  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_209 -> m0_178  [key=0, style=bold, color=blue];
m0_307 -> m0_308  [key=0, style=solid];
m0_308 -> m0_309  [key=0, style=solid];
m0_308 -> m0_311  [key=2, style=dotted];
m0_308 -> m0_313  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_309 -> m0_310  [key=0, style=solid];
m0_309 -> m0_312  [key=2, style=dotted];
m0_310 -> m0_307  [key=0, style=bold, color=blue];
m0_146 -> m0_147  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_149  [key=2, style=dotted];
m0_147 -> m0_150  [key=2, style=dotted];
m0_148 -> m0_146  [key=0, style=bold, color=blue];
m0_282 -> m0_283  [key=0, style=solid];
m0_282 -> m0_285  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_282 -> m0_286  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_282 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_282 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_282 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_282 -> m0_304  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_283 -> m0_284  [key=0, style=solid];
m0_283 -> m0_288  [key=0, style=solid];
m0_283 -> m0_290  [key=0, style=solid];
m0_283 -> m0_292  [key=0, style=solid];
m0_283 -> m0_294  [key=0, style=solid];
m0_283 -> m0_296  [key=0, style=solid];
m0_283 -> m0_298  [key=0, style=solid];
m0_283 -> m0_300  [key=0, style=solid];
m0_283 -> m0_302  [key=0, style=solid];
m0_283 -> m0_304  [key=0, style=solid];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_287  [key=0, style=solid];
m0_286 -> m0_305  [key=0, style=solid];
m0_287 -> m0_305  [key=0, style=solid];
m0_287 -> m0_274  [key=2, style=dotted];
m0_293 -> m0_305  [key=0, style=solid];
m0_293 -> m0_274  [key=2, style=dotted];
m0_295 -> m0_305  [key=0, style=solid];
m0_295 -> m0_274  [key=2, style=dotted];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_306  [key=2, style=dotted];
m0_284 -> m0_285  [key=0, style=solid];
m0_288 -> m0_289  [key=0, style=solid];
m0_290 -> m0_291  [key=0, style=solid];
m0_292 -> m0_293  [key=0, style=solid];
m0_294 -> m0_295  [key=0, style=solid];
m0_296 -> m0_297  [key=0, style=solid];
m0_298 -> m0_299  [key=0, style=solid];
m0_300 -> m0_301  [key=0, style=solid];
m0_302 -> m0_303  [key=0, style=solid];
m0_289 -> m0_305  [key=0, style=solid];
m0_291 -> m0_305  [key=0, style=solid];
m0_297 -> m0_305  [key=0, style=solid];
m0_299 -> m0_305  [key=0, style=solid];
m0_301 -> m0_305  [key=0, style=solid];
m0_303 -> m0_305  [key=0, style=solid];
m0_305 -> m0_282  [key=0, style=bold, color=blue];
m0_151 -> m0_152  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_154  [key=2, style=dotted];
m0_152 -> m0_155  [key=2, style=dotted];
m0_153 -> m0_151  [key=0, style=bold, color=blue];
m0_419 -> m0_420  [key=0, style=solid];
m0_419 -> m0_423  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_419 -> m0_424  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_419 -> m0_429  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_419 -> m0_430  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_419 -> m0_436  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_419 -> m0_437  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_419 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_419 -> m0_441  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_419 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_419 -> m0_443  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_420 -> m0_421  [key=0, style=solid];
m0_420 -> m0_241  [key=2, style=dotted];
m0_420 -> m0_242  [key=2, style=dotted];
m0_420 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=manager];
m0_420 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label=manager];
m0_423 -> m0_424  [key=0, style=solid];
m0_423 -> m0_429  [key=0, style=solid];
m0_423 -> m0_449  [key=2, style=dotted];
m0_424 -> m0_425  [key=0, style=solid];
m0_424 -> m0_426  [key=0, style=solid];
m0_429 -> m0_430  [key=0, style=solid];
m0_429 -> m0_435  [key=0, style=solid];
m0_429 -> m0_449  [key=2, style=dotted];
m0_430 -> m0_431  [key=0, style=solid];
m0_430 -> m0_432  [key=0, style=solid];
m0_436 -> m0_448  [key=0, style=solid];
m0_436 -> m0_450  [key=2, style=dotted];
m0_437 -> m0_438  [key=0, style=solid];
m0_437 -> m0_439  [key=0, style=solid];
m0_440 -> m0_443  [key=0, style=solid];
m0_440 -> m0_453  [key=2, style=dotted];
m0_441 -> m0_442  [key=0, style=solid];
m0_441 -> m0_454  [key=2, style=dotted];
m0_442 -> m0_443  [key=0, style=solid];
m0_442 -> m0_455  [key=2, style=dotted];
m0_443 -> m0_444  [key=0, style=solid];
m0_443 -> m0_447  [key=0, style=solid];
m0_421 -> m0_422  [key=0, style=solid];
m0_421 -> m0_435  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_421 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_421 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_421 -> m0_444  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_421 -> m0_447  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_422 -> m0_423  [key=0, style=solid];
m0_422 -> m0_435  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m0_422 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m0_422 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m0_435 -> m0_436  [key=0, style=solid];
m0_435 -> m0_437  [key=0, style=solid];
m0_444 -> m0_445  [key=0, style=solid];
m0_444 -> m0_446  [key=1, style=dashed, color=darkseagreen4, label=element];
m0_447 -> m0_448  [key=0, style=solid];
m0_425 -> m0_448  [key=0, style=solid];
m0_425 -> m0_450  [key=2, style=dotted];
m0_426 -> m0_427  [key=0, style=solid];
m0_426 -> m0_451  [key=2, style=dotted];
m0_427 -> m0_428  [key=0, style=solid];
m0_427 -> m0_121  [key=2, style=dotted];
m0_427 -> m0_435  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_427 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_427 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_427 -> m0_444  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_427 -> m0_447  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_428 -> m0_429  [key=0, style=solid];
m0_428 -> m0_435  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m0_428 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m0_428 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m0_431 -> m0_448  [key=0, style=solid];
m0_431 -> m0_450  [key=2, style=dotted];
m0_432 -> m0_433  [key=0, style=solid];
m0_432 -> m0_452  [key=2, style=dotted];
m0_433 -> m0_434  [key=0, style=solid];
m0_433 -> m0_0  [key=2, style=dotted];
m0_433 -> m0_435  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_433 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_433 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_433 -> m0_444  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_433 -> m0_447  [key=1, style=dashed, color=darkseagreen4, label=document];
m0_434 -> m0_435  [key=0, style=solid];
m0_434 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m0_434 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label=rootNode];
m0_438 -> m0_448  [key=0, style=solid];
m0_438 -> m0_450  [key=2, style=dotted];
m0_439 -> m0_440  [key=0, style=solid];
m0_439 -> m0_441  [key=0, style=solid];
m0_439 -> m0_281  [key=2, style=dotted];
m0_445 -> m0_446  [key=0, style=solid];
m0_445 -> m0_456  [key=2, style=dotted];
m0_446 -> m0_448  [key=0, style=solid];
m0_448 -> m0_419  [key=0, style=bold, color=blue];
m0_132 -> m0_133  [key=0, style=solid];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_126  [key=2, style=dotted];
m0_133 -> m0_135  [key=2, style=dotted];
m0_134 -> m0_132  [key=0, style=bold, color=blue];
m0_162 -> m0_163  [key=0, style=solid];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_165  [key=2, style=dotted];
m0_163 -> m0_166  [key=2, style=dotted];
m0_164 -> m0_162  [key=0, style=bold, color=blue];
m0_476 -> m0_524  [key=0, style=solid];
m0_476 -> m0_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m0_476 -> m0_526  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_476 -> m0_528  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_476 -> m0_529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_476 -> m0_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m0_476 -> m0_534  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_476 -> m0_541  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_476 -> m0_535  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m0_524 -> m0_525  [key=0, style=solid];
m0_524 -> m0_496  [key=2, style=dotted];
m0_525 -> m0_526  [key=0, style=solid];
m0_525 -> m0_497  [key=2, style=dotted];
m0_525 -> m0_529  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m0_525 -> m0_532  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m0_525 -> m0_534  [key=1, style=dashed, color=darkseagreen4, label=nestedArrayElement];
m0_526 -> m0_527  [key=0, style=solid];
m0_526 -> m0_116  [key=2, style=dotted];
m0_528 -> m0_529  [key=0, style=solid];
m0_528 -> m0_531  [key=0, style=solid];
m0_528 -> m0_454  [key=2, style=dotted];
m0_529 -> m0_530  [key=0, style=solid];
m0_529 -> m0_457  [key=2, style=dotted];
m0_532 -> m0_533  [key=0, style=solid];
m0_532 -> m0_537  [key=2, style=dotted];
m0_534 -> m0_535  [key=0, style=solid];
m0_534 -> m0_538  [key=2, style=dotted];
m0_534 -> m0_539  [key=2, style=dotted];
m0_534 -> m0_540  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_535 -> m0_536  [key=0, style=solid];
m0_535 -> m0_537  [key=2, style=dotted];
m0_527 -> m0_528  [key=0, style=solid];
m0_527 -> m0_530  [key=1, style=dashed, color=darkseagreen4, label=count];
m0_527 -> m0_533  [key=1, style=dashed, color=darkseagreen4, label=count];
m0_530 -> m0_528  [key=0, style=solid];
m0_530 -> m0_530  [key=1, style=dashed, color=darkseagreen4, label=count];
m0_530 -> m0_533  [key=1, style=dashed, color=darkseagreen4, label=count];
m0_533 -> m0_534  [key=0, style=solid];
m0_533 -> m0_536  [key=0, style=solid];
m0_531 -> m0_532  [key=0, style=solid];
m0_531 -> m0_533  [key=0, style=solid];
m0_536 -> m0_476  [key=0, style=bold, color=blue];
m0_118 -> m0_119  [key=0, style=solid];
m0_119 -> m0_120  [key=0, style=solid];
m0_120 -> m0_118  [key=0, style=bold, color=blue];
m0_112 -> m0_113  [key=0, style=solid];
m0_113 -> m0_112  [key=0, style=bold, color=blue];
m0_149 -> m0_183  [key=0, style=solid];
m0_183 -> m0_149  [key=0, style=bold, color=blue];
m0_136 -> m0_137  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_126  [key=2, style=dotted];
m0_137 -> m0_131  [key=2, style=dotted];
m0_138 -> m0_136  [key=0, style=bold, color=blue];
m0_589 -> m0_644  [key=0, style=solid];
m0_589 -> m0_645  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_589 -> m0_648  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_589 -> m0_649  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_644 -> m0_645  [key=0, style=solid];
m0_644 -> m0_651  [key=0, style=solid];
m0_644 -> m0_654  [key=2, style=dotted];
m0_645 -> m0_646  [key=0, style=solid];
m0_645 -> m0_648  [key=0, style=solid];
m0_648 -> m0_649  [key=0, style=solid];
m0_648 -> m0_651  [key=0, style=solid];
m0_649 -> m0_650  [key=0, style=solid];
m0_649 -> m0_655  [key=2, style=dotted];
m0_651 -> m0_652  [key=0, style=solid];
m0_651 -> m0_653  [key=1, style=dashed, color=darkseagreen4, label="out string"];
m0_646 -> m0_647  [key=0, style=solid];
m0_647 -> m0_653  [key=0, style=solid];
m0_650 -> m0_653  [key=0, style=solid];
m0_652 -> m0_653  [key=0, style=solid];
m0_653 -> m0_589  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_6  [key=2, style=dotted];
m0_13 -> m0_15  [key=2, style=dotted];
m0_14 -> m0_12  [key=0, style=bold, color=blue];
m0_179 -> m0_180  [key=0, style=solid];
m0_180 -> m0_179  [key=0, style=bold, color=blue];
m0_100 -> m0_101  [key=0, style=solid];
m0_101 -> m0_100  [key=0, style=bold, color=blue];
m0_104 -> m0_105  [key=0, style=solid];
m0_105 -> m0_104  [key=0, style=bold, color=blue];
m0_206 -> m0_211  [key=0, style=solid];
m0_211 -> m0_212  [key=0, style=solid];
m0_212 -> m0_206  [key=0, style=bold, color=blue];
m0_662 -> m0_663  [key=0, style=solid];
m0_662 -> m0_665  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m0_663 -> m0_664  [key=0, style=solid];
m0_663 -> m0_665  [key=0, style=solid];
m0_663 -> m0_449  [key=2, style=dotted];
m0_665 -> m0_666  [key=0, style=solid];
m0_665 -> m0_667  [key=0, style=solid];
m0_665 -> m0_449  [key=2, style=dotted];
m0_664 -> m0_668  [key=0, style=solid];
m0_666 -> m0_668  [key=0, style=solid];
m0_667 -> m0_668  [key=0, style=solid];
m0_668 -> m0_662  [key=0, style=bold, color=blue];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_6  [key=2, style=dotted];
m0_47 -> m0_45  [key=2, style=dotted];
m0_47 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m0_48 -> m0_49  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_50 -> m0_46  [key=0, style=bold, color=blue];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_126  [key=2, style=dotted];
m0_129 -> m0_131  [key=2, style=dotted];
m0_130 -> m0_128  [key=0, style=bold, color=blue];
m0_537 -> m0_543  [key=0, style=solid];
m0_537 -> m0_544  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
m0_537 -> m0_545  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
m0_537 -> m0_546  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlElement"];
m0_543 -> m0_544  [key=0, style=solid];
m0_543 -> m0_110  [key=2, style=dotted];
m0_543 -> m0_112  [key=2, style=dotted];
m0_544 -> m0_545  [key=0, style=solid];
m0_544 -> m0_547  [key=0, style=solid];
m0_545 -> m0_546  [key=0, style=solid];
m0_545 -> m0_547  [key=0, style=solid];
m0_545 -> m0_114  [key=2, style=dotted];
m0_546 -> m0_547  [key=0, style=solid];
m0_546 -> m0_110  [key=2, style=dotted];
m0_546 -> m0_112  [key=2, style=dotted];
m0_547 -> m0_537  [key=0, style=bold, color=blue];
m0_659 -> m0_660  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=2, style=dotted];
m0_71 -> m0_69  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_72  [key=2, style=dotted];
m0_83 -> m0_81  [key=0, style=bold, color=blue];
m0_186 -> m0_187  [key=0, style=solid];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_72  [key=2, style=dotted];
m0_188 -> m0_186  [key=0, style=bold, color=blue];
m0_223 -> m0_224  [key=0, style=solid];
m0_224 -> m0_225  [key=0, style=solid];
m0_224 -> m0_226  [key=2, style=dotted];
m0_225 -> m0_223  [key=0, style=bold, color=blue];
m0_313 -> m0_314  [key=0, style=solid];
m0_314 -> m0_315  [key=0, style=solid];
m0_315 -> m0_313  [key=0, style=bold, color=blue];
m0_417 -> m0_418  [key=0, style=solid];
m0_416 -> m0_417  [key=0, style=solid];
m0_418 -> m0_416  [key=0, style=bold, color=blue];
m0_541 -> m0_542  [key=0, style=solid];
m0_540 -> m0_541  [key=0, style=solid];
m0_542 -> m0_540  [key=0, style=bold, color=blue];
m0_642 -> m0_643  [key=0, style=solid];
m0_641 -> m0_642  [key=0, style=solid];
m0_643 -> m0_641  [key=0, style=bold, color=blue];
m0_660 -> m0_661  [key=0, style=solid];
m0_661 -> m0_659  [key=0, style=bold, color=blue];
m0_121 -> m0_122  [key=0, style=solid];
m0_122 -> m0_121  [key=0, style=bold, color=blue];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_116  [key=0, style=bold, color=blue];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_35  [key=2, style=dotted];
m0_38 -> m0_36  [key=2, style=dotted];
m0_39 -> m0_37  [key=0, style=bold, color=blue];
m0_114 -> m0_115  [key=0, style=solid];
m0_115 -> m0_114  [key=0, style=bold, color=blue];
m0_184 -> m0_185  [key=0, style=solid];
m0_185 -> m0_184  [key=0, style=bold, color=blue];
m0_94 -> m0_95  [key=0, style=solid];
m0_95 -> m0_94  [key=0, style=bold, color=blue];
m0_59 -> m0_60  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_62  [key=2, style=dotted];
m0_61 -> m0_59  [key=0, style=bold, color=blue];
m0_230 -> m0_231  [key=0, style=solid];
m0_230 -> m0_235  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_230 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_230 -> m0_238  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_231 -> m0_232  [key=0, style=solid];
m0_231 -> m0_240  [key=2, style=dotted];
m0_231 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label=node];
m0_231 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label=node];
m0_235 -> m0_236  [key=0, style=solid];
m0_235 -> m0_244  [key=2, style=dotted];
m0_236 -> m0_237  [key=0, style=solid];
m0_236 -> m0_245  [key=2, style=dotted];
m0_238 -> m0_239  [key=0, style=solid];
m0_238 -> m0_246  [key=2, style=dotted];
m0_232 -> m0_233  [key=0, style=solid];
m0_232 -> m0_241  [key=2, style=dotted];
m0_232 -> m0_242  [key=2, style=dotted];
m0_232 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label=manager];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_243  [key=2, style=dotted];
m0_234 -> m0_235  [key=0, style=solid];
m0_234 -> m0_236  [key=0, style=solid];
m0_237 -> m0_238  [key=0, style=solid];
m0_237 -> m0_239  [key=0, style=solid];
m0_239 -> m0_230  [key=0, style=bold, color=blue];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=2, style=dotted];
m0_33 -> m0_36  [key=2, style=dotted];
m0_34 -> m0_32  [key=0, style=bold, color=blue];
m0_219 -> m0_220  [key=0, style=solid];
m0_220 -> m0_221  [key=0, style=solid];
m0_221 -> m0_222  [key=0, style=solid];
m0_221 -> m0_210  [key=2, style=dotted];
m0_222 -> m0_219  [key=0, style=bold, color=blue];
m0_240 -> m0_247  [key=0, style=solid];
m0_240 -> m0_248  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_240 -> m0_249  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_240 -> m0_250  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_249  [key=0, style=solid];
m0_248 -> m0_252  [key=0, style=solid];
m0_248 -> m0_189  [key=2, style=dotted];
m0_249 -> m0_250  [key=0, style=solid];
m0_249 -> m0_251  [key=0, style=solid];
m0_250 -> m0_252  [key=0, style=solid];
m0_250 -> m0_66  [key=2, style=dotted];
m0_251 -> m0_252  [key=0, style=solid];
m0_251 -> m0_253  [key=2, style=dotted];
m0_252 -> m0_240  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_6  [key=2, style=dotted];
m0_17 -> m0_19  [key=2, style=dotted];
m0_18 -> m0_16  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_6  [key=2, style=dotted];
m0_41 -> m0_45  [key=2, style=dotted];
m0_41 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_40  [key=0, style=bold, color=blue];
m0_96 -> m0_97  [key=0, style=solid];
m0_97 -> m0_96  [key=0, style=bold, color=blue];
m0_108 -> m0_109  [key=0, style=solid];
m0_109 -> m0_108  [key=0, style=bold, color=blue];
m0_497 -> m0_612  [key=0, style=solid];
m0_612 -> m0_613  [key=0, style=solid];
m0_612 -> m0_281  [key=2, style=dotted];
m0_612 -> m0_498  [key=2, style=dotted];
m0_612 -> m0_36  [key=2, style=dotted];
m0_612 -> m0_104  [key=2, style=dotted];
m0_613 -> m0_497  [key=0, style=bold, color=blue];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_85 -> m0_86  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_89  [key=2, style=dotted];
m0_88 -> m0_84  [key=0, style=bold, color=blue];
m0_245 -> m0_352  [key=0, style=solid];
m0_245 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_359  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_245 -> m0_363  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_245 -> m0_364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_366  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_367  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_368  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_369  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_371  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_375  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_377  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_245 -> m0_378  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_385  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_387  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_388  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_390  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_245 -> m0_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_392  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_394  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_245 -> m0_395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_396  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_398  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_399  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_401  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_404  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_406  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonWriter"];
m0_245 -> m0_407  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_352 -> m0_353  [key=0, style=solid];
m0_352 -> m0_356  [key=0, style=solid];
m0_352 -> m0_376  [key=0, style=solid];
m0_352 -> m0_379  [key=0, style=solid];
m0_352 -> m0_393  [key=0, style=solid];
m0_352 -> m0_407  [key=0, style=solid];
m0_355 -> m0_408  [key=0, style=solid];
m0_355 -> m0_316  [key=2, style=dotted];
m0_357 -> m0_358  [key=0, style=solid];
m0_357 -> m0_359  [key=0, style=solid];
m0_357 -> m0_307  [key=2, style=dotted];
m0_357 -> m0_409  [key=2, style=dotted];
m0_357 -> m0_416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_358 -> m0_408  [key=0, style=solid];
m0_358 -> m0_316  [key=2, style=dotted];
m0_359 -> m0_360  [key=0, style=solid];
m0_359 -> m0_363  [key=0, style=solid];
m0_359 -> m0_361  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m0_359 -> m0_362  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m0_362 -> m0_359  [key=0, style=solid];
m0_362 -> m0_273  [key=2, style=dotted];
m0_363 -> m0_364  [key=0, style=solid];
m0_363 -> m0_365  [key=0, style=solid];
m0_364 -> m0_365  [key=0, style=solid];
m0_364 -> m0_282  [key=2, style=dotted];
m0_364 -> m0_349  [key=2, style=dotted];
m0_365 -> m0_366  [key=0, style=solid];
m0_365 -> m0_367  [key=0, style=solid];
m0_365 -> m0_410  [key=2, style=dotted];
m0_365 -> m0_411  [key=2, style=dotted];
m0_366 -> m0_408  [key=0, style=solid];
m0_366 -> m0_412  [key=2, style=dotted];
m0_367 -> m0_368  [key=0, style=solid];
m0_367 -> m0_369  [key=0, style=solid];
m0_367 -> m0_413  [key=2, style=dotted];
m0_368 -> m0_408  [key=0, style=solid];
m0_368 -> m0_414  [key=2, style=dotted];
m0_369 -> m0_370  [key=0, style=solid];
m0_369 -> m0_244  [key=2, style=dotted];
m0_371 -> m0_372  [key=0, style=solid];
m0_371 -> m0_374  [key=0, style=solid];
m0_372 -> m0_373  [key=0, style=solid];
m0_372 -> m0_245  [key=2, style=dotted];
m0_374 -> m0_375  [key=0, style=solid];
m0_374 -> m0_316  [key=2, style=dotted];
m0_375 -> m0_408  [key=0, style=solid];
m0_375 -> m0_246  [key=2, style=dotted];
m0_377 -> m0_378  [key=0, style=solid];
m0_377 -> m0_408  [key=0, style=solid];
m0_378 -> m0_408  [key=0, style=solid];
m0_378 -> m0_415  [key=2, style=dotted];
m0_385 -> m0_386  [key=0, style=solid];
m0_385 -> m0_387  [key=0, style=solid];
m0_387 -> m0_388  [key=0, style=solid];
m0_387 -> m0_390  [key=0, style=solid];
m0_388 -> m0_389  [key=0, style=solid];
m0_388 -> m0_390  [key=0, style=solid];
m0_390 -> m0_391  [key=0, style=solid];
m0_390 -> m0_392  [key=0, style=solid];
m0_391 -> m0_392  [key=0, style=solid];
m0_391 -> m0_282  [key=2, style=dotted];
m0_391 -> m0_349  [key=2, style=dotted];
m0_392 -> m0_408  [key=0, style=solid];
m0_392 -> m0_412  [key=2, style=dotted];
m0_394 -> m0_395  [key=0, style=solid];
m0_394 -> m0_397  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m0_394 -> m0_399  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m0_394 -> m0_400  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m0_394 -> m0_402  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m0_394 -> m0_403  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m0_394 -> m0_405  [key=1, style=dashed, color=darkseagreen4, label=declaration];
m0_395 -> m0_396  [key=0, style=solid];
m0_395 -> m0_282  [key=2, style=dotted];
m0_395 -> m0_349  [key=2, style=dotted];
m0_396 -> m0_397  [key=0, style=solid];
m0_396 -> m0_244  [key=2, style=dotted];
m0_398 -> m0_399  [key=0, style=solid];
m0_398 -> m0_349  [key=2, style=dotted];
m0_399 -> m0_400  [key=0, style=solid];
m0_399 -> m0_412  [key=2, style=dotted];
m0_401 -> m0_402  [key=0, style=solid];
m0_401 -> m0_349  [key=2, style=dotted];
m0_402 -> m0_403  [key=0, style=solid];
m0_402 -> m0_412  [key=2, style=dotted];
m0_404 -> m0_405  [key=0, style=solid];
m0_404 -> m0_349  [key=2, style=dotted];
m0_405 -> m0_406  [key=0, style=solid];
m0_405 -> m0_412  [key=2, style=dotted];
m0_406 -> m0_408  [key=0, style=solid];
m0_406 -> m0_246  [key=2, style=dotted];
m0_407 -> m0_408  [key=0, style=solid];
m0_407 -> m0_306  [key=2, style=dotted];
m0_353 -> m0_354  [key=0, style=solid];
m0_356 -> m0_357  [key=0, style=solid];
m0_376 -> m0_377  [key=0, style=solid];
m0_379 -> m0_380  [key=0, style=solid];
m0_393 -> m0_394  [key=0, style=solid];
m0_354 -> m0_355  [key=0, style=solid];
m0_360 -> m0_361  [key=0, style=solid];
m0_360 -> m0_359  [key=0, style=solid];
m0_361 -> m0_362  [key=0, style=solid];
m0_370 -> m0_371  [key=0, style=solid];
m0_370 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_370 -> m0_373  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_373 -> m0_371  [key=0, style=solid];
m0_373 -> m0_373  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_380 -> m0_381  [key=0, style=solid];
m0_381 -> m0_382  [key=0, style=solid];
m0_382 -> m0_383  [key=0, style=solid];
m0_383 -> m0_384  [key=0, style=solid];
m0_384 -> m0_385  [key=0, style=solid];
m0_386 -> m0_408  [key=0, style=solid];
m0_389 -> m0_408  [key=0, style=solid];
m0_397 -> m0_398  [key=0, style=solid];
m0_397 -> m0_400  [key=0, style=solid];
m0_397 -> m0_281  [key=2, style=dotted];
m0_400 -> m0_401  [key=0, style=solid];
m0_400 -> m0_403  [key=0, style=solid];
m0_400 -> m0_281  [key=2, style=dotted];
m0_403 -> m0_404  [key=0, style=solid];
m0_403 -> m0_406  [key=0, style=solid];
m0_403 -> m0_281  [key=2, style=dotted];
m0_408 -> m0_245  [key=0, style=bold, color=blue];
m0_243 -> m0_254  [key=0, style=solid];
m0_243 -> m0_255  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_243 -> m0_264  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_243 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_258  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m0_254 -> m0_260  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m0_254 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m0_254 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m0_254 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m0_255 -> m0_256  [key=0, style=solid];
m0_264 -> m0_265  [key=0, style=solid];
m0_264 -> m0_272  [key=2, style=dotted];
m0_267 -> m0_265  [key=0, style=solid];
m0_267 -> m0_273  [key=2, style=dotted];
m0_258 -> m0_259  [key=0, style=solid];
m0_258 -> m0_260  [key=0, style=solid];
m0_260 -> m0_256  [key=0, style=solid];
m0_260 -> m0_270  [key=2, style=dotted];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_268  [key=0, style=solid];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_271  [key=2, style=dotted];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_268  [key=0, style=solid];
m0_263 -> m0_265  [key=1, style=dashed, color=darkseagreen4, label=parentElement];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_261  [key=0, style=solid];
m0_256 -> m0_256  [key=1, style=dashed, color=darkseagreen4, label=parent];
m0_256 -> m0_260  [key=1, style=dashed, color=darkseagreen4, label=parent];
m0_257 -> m0_258  [key=0, style=solid];
m0_257 -> m0_256  [key=0, style=solid];
m0_259 -> m0_260  [key=0, style=solid];
m0_259 -> m0_269  [key=2, style=dotted];
m0_259 -> m0_261  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m0_259 -> m0_262  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m0_259 -> m0_263  [key=1, style=dashed, color=darkseagreen4, label=parentElements];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_263  [key=0, style=solid];
m0_265 -> m0_267  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_265  [key=0, style=solid];
m0_268 -> m0_243  [key=0, style=bold, color=blue];
m0_495 -> m0_548  [key=0, style=solid];
m0_495 -> m0_551  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_495 -> m0_552  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_495 -> m0_553  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_495 -> m0_555  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_495 -> m0_562  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_495 -> m0_563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_495 -> m0_567  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_495 -> m0_570  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_495 -> m0_571  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_495 -> m0_572  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_495 -> m0_575  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_495 -> m0_579  [key=1, style=dashed, color=darkseagreen4, label=XmlNamespaceManager];
m0_495 -> m0_585  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_548 -> m0_549  [key=0, style=solid];
m0_548 -> m0_346  [key=2, style=dotted];
m0_548 -> m0_564  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m0_548 -> m0_578  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m0_548 -> m0_580  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m0_548 -> m0_586  [key=1, style=dashed, color=darkseagreen4, label=attributeNameValues];
m0_551 -> m0_552  [key=0, style=solid];
m0_551 -> m0_586  [key=0, style=solid];
m0_552 -> m0_553  [key=0, style=solid];
m0_552 -> m0_586  [key=0, style=solid];
m0_552 -> m0_454  [key=2, style=dotted];
m0_553 -> m0_554  [key=0, style=solid];
m0_553 -> m0_583  [key=0, style=solid];
m0_553 -> m0_585  [key=0, style=solid];
m0_555 -> m0_556  [key=0, style=solid];
m0_555 -> m0_474  [key=2, style=dotted];
m0_555 -> m0_557  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m0_555 -> m0_558  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m0_555 -> m0_561  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m0_562 -> m0_563  [key=0, style=solid];
m0_562 -> m0_454  [key=2, style=dotted];
m0_563 -> m0_564  [key=0, style=solid];
m0_563 -> m0_499  [key=2, style=dotted];
m0_563 -> m0_567  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
m0_567 -> m0_552  [key=0, style=solid];
m0_567 -> m0_273  [key=2, style=dotted];
m0_570 -> m0_571  [key=0, style=solid];
m0_570 -> m0_454  [key=2, style=dotted];
m0_571 -> m0_572  [key=0, style=solid];
m0_571 -> m0_474  [key=2, style=dotted];
m0_571 -> m0_580  [key=1, style=dashed, color=darkseagreen4, label=attributeValue];
m0_572 -> m0_573  [key=0, style=solid];
m0_572 -> m0_280  [key=2, style=dotted];
m0_572 -> m0_580  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m0_575 -> m0_576  [key=0, style=solid];
m0_575 -> m0_577  [key=0, style=solid];
m0_575 -> m0_498  [key=2, style=dotted];
m0_579 -> m0_580  [key=0, style=solid];
m0_579 -> m0_273  [key=2, style=dotted];
m0_585 -> m0_587  [key=0, style=solid];
m0_585 -> m0_450  [key=2, style=dotted];
m0_549 -> m0_550  [key=0, style=solid];
m0_549 -> m0_552  [key=1, style=dashed, color=darkseagreen4, label=finishedAttributes];
m0_564 -> m0_565  [key=0, style=solid];
m0_564 -> m0_348  [key=2, style=dotted];
m0_578 -> m0_579  [key=0, style=solid];
m0_578 -> m0_348  [key=2, style=dotted];
m0_580 -> m0_552  [key=0, style=solid];
m0_580 -> m0_348  [key=2, style=dotted];
m0_586 -> m0_587  [key=0, style=solid];
m0_550 -> m0_551  [key=0, style=solid];
m0_550 -> m0_552  [key=1, style=dashed, color=darkseagreen4, label=finishedElement];
m0_554 -> m0_555  [key=0, style=solid];
m0_583 -> m0_584  [key=0, style=solid];
m0_556 -> m0_557  [key=0, style=solid];
m0_557 -> m0_558  [key=0, style=solid];
m0_557 -> m0_582  [key=0, style=solid];
m0_557 -> m0_281  [key=2, style=dotted];
m0_558 -> m0_559  [key=0, style=solid];
m0_561 -> m0_562  [key=0, style=solid];
m0_561 -> m0_588  [key=2, style=dotted];
m0_561 -> m0_561  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m0_561 -> m0_564  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m0_561 -> m0_566  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m0_561 -> m0_569  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m0_582 -> m0_552  [key=0, style=solid];
m0_559 -> m0_560  [key=0, style=solid];
m0_559 -> m0_568  [key=0, style=solid];
m0_559 -> m0_581  [key=0, style=solid];
m0_560 -> m0_561  [key=0, style=solid];
m0_568 -> m0_569  [key=0, style=solid];
m0_581 -> m0_552  [key=0, style=solid];
m0_566 -> m0_567  [key=0, style=solid];
m0_566 -> m0_552  [key=0, style=solid];
m0_566 -> m0_589  [key=2, style=dotted];
m0_569 -> m0_570  [key=0, style=solid];
m0_569 -> m0_588  [key=2, style=dotted];
m0_569 -> m0_569  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m0_569 -> m0_580  [key=1, style=dashed, color=darkseagreen4, label=attributeName];
m0_565 -> m0_566  [key=0, style=solid];
m0_573 -> m0_574  [key=0, style=solid];
m0_573 -> m0_580  [key=0, style=solid];
m0_574 -> m0_575  [key=0, style=solid];
m0_574 -> m0_576  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_574 -> m0_577  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_576 -> m0_575  [key=0, style=solid];
m0_576 -> m0_590  [key=2, style=dotted];
m0_576 -> m0_576  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_576 -> m0_577  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_577 -> m0_578  [key=0, style=solid];
m0_577 -> m0_579  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m0_577 -> m0_580  [key=1, style=dashed, color=darkseagreen4, label=jsonPrefix];
m0_584 -> m0_552  [key=0, style=solid];
m0_587 -> m0_495  [key=0, style=bold, color=blue];
m0_455 -> m0_614  [key=0, style=solid];
m0_455 -> m0_616  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m0_455 -> m0_618  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_619  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_620  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_622  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_626  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_455 -> m0_627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlDocument"];
m0_455 -> m0_628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_630  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_631  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_634  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_638  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_455 -> m0_639  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.JsonReader"];
m0_614 -> m0_615  [key=0, style=solid];
m0_614 -> m0_629  [key=0, style=solid];
m0_614 -> m0_633  [key=0, style=solid];
m0_614 -> m0_635  [key=0, style=solid];
m0_614 -> m0_638  [key=0, style=solid];
m0_616 -> m0_617  [key=0, style=solid];
m0_616 -> m0_618  [key=0, style=solid];
m0_618 -> m0_619  [key=0, style=solid];
m0_618 -> m0_474  [key=2, style=dotted];
m0_618 -> m0_623  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m0_618 -> m0_626  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m0_618 -> m0_642  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m0_618 -> m0_628  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m0_619 -> m0_620  [key=0, style=solid];
m0_619 -> m0_454  [key=2, style=dotted];
m0_620 -> m0_621  [key=0, style=solid];
m0_620 -> m0_628  [key=0, style=solid];
m0_622 -> m0_623  [key=0, style=solid];
m0_622 -> m0_625  [key=0, style=solid];
m0_622 -> m0_454  [key=2, style=dotted];
m0_623 -> m0_624  [key=0, style=solid];
m0_623 -> m0_457  [key=2, style=dotted];
m0_626 -> m0_627  [key=0, style=solid];
m0_626 -> m0_538  [key=2, style=dotted];
m0_626 -> m0_539  [key=2, style=dotted];
m0_626 -> m0_641  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_627 -> m0_639  [key=0, style=solid];
m0_627 -> m0_537  [key=2, style=dotted];
m0_628 -> m0_639  [key=0, style=solid];
m0_628 -> m0_457  [key=2, style=dotted];
m0_630 -> m0_631  [key=0, style=solid];
m0_630 -> m0_474  [key=2, style=dotted];
m0_630 -> m0_632  [key=1, style=dashed, color=darkseagreen4, label=constructorName];
m0_631 -> m0_632  [key=0, style=solid];
m0_631 -> m0_639  [key=0, style=solid];
m0_631 -> m0_454  [key=2, style=dotted];
m0_632 -> m0_631  [key=0, style=solid];
m0_632 -> m0_457  [key=2, style=dotted];
m0_634 -> m0_639  [key=0, style=solid];
m0_634 -> m0_90  [key=2, style=dotted];
m0_634 -> m0_116  [key=2, style=dotted];
m0_638 -> m0_640  [key=0, style=solid];
m0_638 -> m0_450  [key=2, style=dotted];
m0_639 -> m0_455  [key=0, style=solid];
m0_639 -> m0_640  [key=0, style=solid];
m0_639 -> m0_454  [key=2, style=dotted];
m0_615 -> m0_616  [key=0, style=solid];
m0_629 -> m0_630  [key=0, style=solid];
m0_633 -> m0_634  [key=0, style=solid];
m0_635 -> m0_636  [key=0, style=solid];
m0_617 -> m0_640  [key=0, style=solid];
m0_617 -> m0_450  [key=2, style=dotted];
m0_621 -> m0_622  [key=0, style=solid];
m0_621 -> m0_624  [key=1, style=dashed, color=darkseagreen4, label=count];
m0_621 -> m0_625  [key=1, style=dashed, color=darkseagreen4, label=count];
m0_624 -> m0_622  [key=0, style=solid];
m0_624 -> m0_624  [key=1, style=dashed, color=darkseagreen4, label=count];
m0_624 -> m0_625  [key=1, style=dashed, color=darkseagreen4, label=count];
m0_625 -> m0_626  [key=0, style=solid];
m0_625 -> m0_639  [key=0, style=solid];
m0_636 -> m0_637  [key=0, style=solid];
m0_637 -> m0_640  [key=0, style=solid];
m0_640 -> m0_455  [key=0, style=bold, color=blue];
m0_669 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_669 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDocumentWrapper"];
m0_670 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
m0_670 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
m0_670 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlElementWrapper"];
m0_671 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlDeclarationWrapper"];
m0_672 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m0_672 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m0_672 -> m0_82  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m0_672 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeWrapper"];
m0_673 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDeclarationWrapper"];
m0_674 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentWrapper"];
m0_674 -> m0_176  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XDocumentWrapper"];
m0_675 -> m0_187  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XContainerWrapper"];
m0_675 -> m0_207  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XContainerWrapper"];
m0_676 -> m0_211  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XObjectWrapper"];
m0_677 -> m0_221  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m0_677 -> m0_228  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XElementWrapper"];
m0_678 -> m0_231  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_233  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_234  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_236  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_237  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_287  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_293  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_295  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_321  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_332  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_335  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_342  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_355  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_357  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_358  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_364  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_365  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_372  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_374  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_391  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_395  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_439  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_440  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_442  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_468  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_470  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_472  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_479  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_481  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_488  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_492  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_525  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_529  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_531  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_532  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_533  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_535  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_563  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_566  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_623  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_625  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_627  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_628  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_678 -> m0_632  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.XmlNodeConverter"];
m0_679 -> m0_417  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Converters.IXmlNode"];
m0_680 -> m0_541  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_681 -> m0_642  [key=1, style=dashed, color=darkseagreen4, label=propertyName];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_15 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=0, style=solid];
m2_17 -> m2_23  [key=0, style=solid];
m2_17 -> m2_24  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_27  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_22  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_14  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_25  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_26  [key=2, style=dotted];
m2_23 -> m2_15  [key=0, style=bold, color=blue];
m2_13 -> m2_28  [key=0, style=solid];
m2_13 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m2_13 -> m2_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsTypeGenericCollectionInterface"];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_33  [key=2, style=dotted];
m2_29 -> m2_32  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_13  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_1 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_4  [key=0, style=solid];
m2_2 -> m2_10  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_11  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_8  [key=0, style=solid];
m2_6 -> m2_13  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_14  [key=2, style=dotted];
m2_8 -> m2_0  [key=0, style=bold, color=blue];
m2_34 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m2_34 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Serialization.JsonArrayContract"];
m4_0 -> m4_1  [key=0, style=solid, color=green];
m4_1 -> m4_2  [key=0, style=solid, color=green];
m4_1 -> m4_3  [key=2, style=dotted, color=green];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
}
