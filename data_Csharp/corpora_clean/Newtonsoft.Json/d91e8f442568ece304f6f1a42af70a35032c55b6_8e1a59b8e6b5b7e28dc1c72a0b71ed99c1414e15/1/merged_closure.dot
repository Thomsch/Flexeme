digraph  {
m2_124 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="IsoDateTimeConverterTests.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="43-43"];
m2_122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", span="211-211"];
m2_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.IndexOf(value) != -1", span="216-216"];
m2_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="referenceLoopHandling.GetValueOrDefault(Serializer.ReferenceLoopHandling)", span="218-218"];
m2_135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="throw new InvalidOperationException(''Unexpected ReferenceLoopHandling value: '{0}'''.FormatWith(CultureInfo.InvariantCulture, Serializer.ReferenceLoopHandling));", span="227-227"];
m2_125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="value == null || contract.ContractType == JsonContractType.Primitive || contract.ContractType == JsonContractType.String", span="213-213"];
m2_136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return true;", span="231-231"];
m2_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ReferenceLoopHandling.Error", span="220-220"];
m2_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ReferenceLoopHandling.Ignore", span="222-222"];
m2_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ReferenceLoopHandling.Serialize", span="224-224"];
m2_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="throw new JsonSerializationException(''Self referencing loop detected for type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, value.GetType()));", span="221-221"];
m2_126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return true;", span="214-214"];
m2_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return false;", span="223-223"];
m2_134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return true;", span="225-225"];
m2_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(object, Newtonsoft.Json.ReferenceLoopHandling?, Newtonsoft.Json.Serialization.JsonContract)", span="211-211"];
m2_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", span="629-629"];
m2_336 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", span="629-629"];
m2_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="IsoDateTimeConverterTests.cs", label="TryConvertToString(entry.Key, entry.Key.GetType(), out propertyName)", span="635-635"];
m2_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="IsoDateTimeConverterTests.cs", label="string propertyName", span="631-631"];
m2_338 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="IsoDateTimeConverterTests.cs", label="entry.Key is IConvertible", span="633-633"];
m2_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="IsoDateTimeConverterTests.cs", label="return propertyName;", span="636-636"];
m2_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="IsoDateTimeConverterTests.cs", label="return entry.Key.ToString();", span="638-638"];
m2_339 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetPropertyName(System.Collections.DictionaryEntry)", file="IsoDateTimeConverterTests.cs", label="return Convert.ToString(entry.Key, CultureInfo.InvariantCulture);", span="634-634"];
m2_74 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="100-100"];
m2_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(serializationEntry.Name)", span="486-486"];
m2_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeValue(writer, serializationEntry.Value, GetContractSafe(serializationEntry.Value), null, null)", span="487-487"];
m2_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerializing(value, Serializer.Context)", span="471-471"];
m2_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.Add(value)", span="472-472"];
m2_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionValueContract)", span="476-476"];
m2_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="478-478"];
m2_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="value.GetObjectData(serializationInfo, Serializer.Context)", span="482-482"];
m2_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="492-492"];
m2_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerialized(value, Serializer.Context)", span="493-493"];
m2_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="469-469"];
m2_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=serializationInfo, span="484-484"];
m2_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteStartObject()", span="474-474"];
m2_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, new FormatterConverter())", span="481-481"];
m2_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteEndObject()", span="490-490"];
m2_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeISerializable(Newtonsoft.Json.JsonWriter, System.Runtime.Serialization.ISerializable, Newtonsoft.Json.Serialization.JsonISerializableContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="469-469"];
m2_161 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="IsoDateTimeConverterTests.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m2_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="61-61"];
m2_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="IsoDateTimeConverterTests.cs", label="_internalSerializer == null", span="63-63"];
m2_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="IsoDateTimeConverterTests.cs", label="_internalSerializer = new JsonSerializerProxy(this)", span="64-64"];
m2_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="IsoDateTimeConverterTests.cs", label="return _internalSerializer;", span="66-66"];
m2_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetInternalSerializer()", span="61-61"];
m2_120 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="14-14"];
m2_71 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="84-84"];
m2_138 [cluster="System.Collections.Generic.List<T>.IndexOf(T)", file="IsoDateTimeConverterTests.cs", label="Entry System.Collections.Generic.List<T>.IndexOf(T)", span="0-0"];
m2_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, string, System.Exception)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, string, System.Exception)", span="100-100"];
m2_198 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m2_273 [cluster="System.Runtime.Serialization.FormatterConverter.FormatterConverter()", file="IsoDateTimeConverterTests.cs", label="Entry System.Runtime.Serialization.FormatterConverter.FormatterConverter()", span="0-0"];
m2_290 [cluster="System.Func<T, TResult>.Invoke(T)", file="IsoDateTimeConverterTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_356 [cluster="System.Predicate<T>.Invoke(T)", file="IsoDateTimeConverterTests.cs", label="Entry System.Predicate<T>.Invoke(T)", span="0-0"];
m2_68 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="551-551"];
m2_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="242-242"];
m2_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n#endif\r\n && converter.GetType() != typeof(TypeConverter)", span="248-252"];
m2_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="245-245"];
m2_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="converter.CanConvertTo(typeof(string))", span="254-254"];
m2_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="value is Type", span="274-274"];
m2_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="s = converter.ConvertToInvariantString(value)", span="257-257"];
m2_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="s = ((Type)value).AssemblyQualifiedName", span="276-276"];
m2_156 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="s = null", span="280-280"];
m2_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="return true;", span="261-261"];
m2_155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="return true;", span="277-277"];
m2_157 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="return false;", span="281-281"];
m2_158 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.TryConvertToString(object, System.Type, out string)", span="242-242"];
m2_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="IsoDateTimeConverterTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_98 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="356-356"];
m2_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="IsoDateTimeConverterTests.cs", label="return ((value & flag) == flag);", span="358-358"];
m2_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.PreserveReferencesHandling, Newtonsoft.Json.PreserveReferencesHandling)", span="356-356"];
m2_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", span="651-651"];
m2_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="property.ShouldSerialize == null", span="653-653"];
m2_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="return property.ShouldSerialize(target);", span="656-656"];
m2_353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="return true;", span="654-654"];
m2_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldSerialize(Newtonsoft.Json.Serialization.JsonProperty, object)", span="651-651"];
m2_272 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="IsoDateTimeConverterTests.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m2_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", span="504-504"];
m2_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="SerializeValue(writer, memberValue, GetContractSafe(memberValue), null, null)", span="521-521"];
m2_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerializing(value, Serializer.Context)", span="506-506"];
m2_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.Add(value)", span="507-507"];
m2_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="527-527"];
m2_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerialized(value, Serializer.Context)", span="528-528"];
m2_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="DynamicUtils.TryGetMember(value, memberName, out memberValue)", span="514-514"];
m2_282 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(resolvedPropertyName)", span="520-520"];
m2_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="value.GetDynamicMemberNames()", span="511-511"];
m2_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteStartObject()", span="509-509"];
m2_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteEndObject()", span="525-525"];
m2_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="string resolvedPropertyName = (contract.PropertyNameResolver != null)\r\n            ? contract.PropertyNameResolver(memberName)\r\n            : memberName", span="516-518"];
m2_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="object memberValue", span="513-513"];
m2_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDynamic(Newtonsoft.Json.JsonWriter, System.Dynamic.IDynamicMetaObjectProvider, Newtonsoft.Json.Serialization.JsonDynamicContract)", span="504-504"];
m2_256 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="332-332"];
m2_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalWriter)", span="162-162"];
m2_201 [cluster="System.Collections.Generic.List<T>.RemoveAt(int)", file="IsoDateTimeConverterTests.cs", label="Entry System.Collections.Generic.List<T>.RemoveAt(int)", span="0-0"];
m2_78 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="IsoDateTimeConverterTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m2_221 [cluster="Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="44-44"];
m2_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="284-284"];
m2_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerializing(value, Serializer.Context)", span="286-286"];
m2_166 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerialized(value, Serializer.Context)", span="292-292"];
m2_163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="IsoDateTimeConverterTests.cs", label="string s", span="288-288"];
m2_165 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteValue(s)", span="290-290"];
m2_164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="IsoDateTimeConverterTests.cs", label="TryConvertToString(value, contract.UnderlyingType, out s)", span="289-289"];
m2_167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeString(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonStringContract)", span="284-284"];
m2_36 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="345-345"];
m2_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="IsoDateTimeConverterTests.cs", label="writer.WriteValue(ReflectionUtils.GetTypeName(type, Serializer.TypeNameAssemblyFormat, Serializer.Binder))", span="348-348"];
m2_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(JsonTypeReflector.TypePropertyName)", span="347-347"];
m2_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteTypeProperty(Newtonsoft.Json.JsonWriter, System.Type)", span="345-345"];
m2_274 [cluster="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="IsoDateTimeConverterTests.cs", label="Entry System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="0-0"];
m2_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="361-361"];
m2_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="IsoDateTimeConverterTests.cs", label="return ((value & flag) == flag);", span="363-363"];
m2_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.TypeNameHandling)", span="361-361"];
m2_75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="558-558"];
m2_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeValue(writer, value, valueContract, null, contract.DictionaryValueContract)", span="611-611"];
m2_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerializing(values.UnderlyingDictionary, Serializer.Context)", span="560-560"];
m2_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.Add(values.UnderlyingDictionary)", span="562-562"];
m2_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="bool isReference = contract.IsReference ?? HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Objects)", span="565-565"];
m2_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteValue(Serializer.ReferenceResolver.GetReference(this, values.UnderlyingDictionary))", span="569-569"];
m2_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionValueContract)", span="571-571"];
m2_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteTypeProperty(writer, values.UnderlyingDictionary.GetType())", span="573-573"];
m2_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.DictionaryValueContract = Serializer.ContractResolver.ResolveContract(contract.DictionaryValueType ?? typeof(object))", span="577-577"];
m2_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="string propertyName = GetPropertyName(entry)", span="588-588"];
m2_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContract valueContract = dictionaryValueContract ?? GetContractSafe(value)", span="597-597"];
m2_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ShouldWriteReference(value, null, valueContract)", span="599-599"];
m2_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteReference(writer, value)", span="602-602"];
m2_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="!CheckForCircularReference(value, null, contract)", span="606-606"];
m2_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="IsErrorHandled(values.UnderlyingDictionary, contract, propertyName, writer.ContainerPath, ex)", span="616-616"];
m2_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="HandleError(writer, initialDepth)", span="617-617"];
m2_333 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="624-624"];
m2_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerialized(values.UnderlyingDictionary, Serializer.Context)", span="626-626"];
m2_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteStartObject()", span="563-563"];
m2_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName)", span="568-568"];
m2_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.DictionaryValueContract == null", span="576-576"];
m2_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContract dictionaryValueContract = (contract.DictionaryValueContract.UnderlyingType.IsSealed) ? contract.DictionaryValueContract : null", span="579-579"];
m2_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="int initialDepth = writer.Top", span="581-581"];
m2_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="IDictionary d = values", span="584-584"];
m2_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="propertyName = (contract.PropertyNameResolver != null)\r\n                         ? contract.PropertyNameResolver(propertyName)\r\n                         : propertyName", span="590-592"];
m2_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(propertyName)", span="601-601"];
m2_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(propertyName)", span="609-609"];
m2_332 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteEndObject()", span="623-623"];
m2_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="object value = entry.Value", span="596-596"];
m2_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=Exception, span="614-614"];
m2_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=d, span="586-586"];
m2_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=isReference, span="566-566"];
m2_331 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="throw;", span="619-619"];
m2_335 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeDictionary(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.Serialization.JsonDictionaryContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="558-558"];
m2_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="96-96"];
m2_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="IsoDateTimeConverterTests.cs", label="JsonDictionaryContract dictionaryContract = (JsonDictionaryContract) valueContract", prediction=0, span="132-132"];
m2_57 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContractType.Dictionary", span="131-131"];
m2_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="IsoDateTimeConverterTests.cs", label="SerializeDictionary(writer, dictionaryContract.CreateWrapper(value), dictionaryContract, member, collectionValueContract)", prediction=1, span="133-133"];
m2_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", color=green, community=0, file="IsoDateTimeConverterTests.cs", label="JsonContractType.Dynamic", prediction=2, span="136-136"];
m2_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="valueContract.ContractType", span="116-116"];
m2_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeDynamic(writer, (IDynamicMetaObjectProvider) value, (JsonDynamicContract) valueContract)", span="137-137"];
m2_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonConverter converter = (member != null) ? member.Converter : null", span="98-98"];
m2_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="value == null", span="100-100"];
m2_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteNull()", span="102-102"];
m2_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="(converter != null\r\n           || ((converter = valueContract.Converter) != null)\r\n           || ((converter = Serializer.GetMatchingConverter(valueContract.UnderlyingType)) != null)\r\n           || ((converter = valueContract.InternalConverter) != null))\r\n          && converter.CanWrite", span="106-110"];
m2_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeConvertable(writer, converter, value, valueContract)", span="112-112"];
m2_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeObject(writer, value, (JsonObjectContract) valueContract, member, collectionValueContract)", span="119-119"];
m2_51 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonArrayContract arrayContract = (JsonArrayContract) valueContract", span="122-122"];
m2_52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeList(writer, arrayContract.CreateWrapper(value), arrayContract, member, collectionValueContract)", span="123-123"];
m2_54 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializePrimitive(writer, value, (JsonPrimitiveContract) valueContract, member, collectionValueContract)", span="126-126"];
m2_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeString(writer, value, (JsonStringContract) valueContract)", span="129-129"];
m2_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeISerializable(writer, (ISerializable) value, (JsonISerializableContract) valueContract, member, collectionValueContract)", span="142-142"];
m2_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="((JToken) value).WriteTo(writer, (Serializer.Converters != null) ? Serializer.Converters.ToArray() : null)", span="146-146"];
m2_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return;", span="103-103"];
m2_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return;", span="113-113"];
m2_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContractType.Object", span="118-118"];
m2_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContractType.Array", span="121-121"];
m2_53 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContractType.Primitive", span="125-125"];
m2_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContractType.String", span="128-128"];
m2_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContractType.Serializable", span="141-141"];
m2_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContractType.Linq", span="145-145"];
m2_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="96-96"];
m2_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="151-151"];
m2_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="isReference = HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="170-170"];
m2_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="isReference = HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Objects)", span="172-172"];
m2_96 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return Serializer.ReferenceResolver.IsReferenced(this, value);", span="178-178"];
m2_84 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return false;", span="156-156"];
m2_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.ContractType == JsonContractType.Array", span="169-169"];
m2_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="!isReference.Value", span="175-175"];
m2_83 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.ContractType == JsonContractType.Primitive || contract.ContractType == JsonContractType.String", span="155-155"];
m2_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="isReference == null", span="167-167"];
m2_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="isReference = property.IsReference", span="162-162"];
m2_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="isReference = contract.IsReference", span="165-165"];
m2_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="bool? isReference = null", span="158-158"];
m2_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return false;", span="176-176"];
m2_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="value == null", span="153-153"];
m2_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="property != null", span="161-161"];
m2_82 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return false;", span="154-154"];
m2_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="isReference == null", span="164-164"];
m2_97 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteReference(object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="151-151"];
m2_205 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle, System.Runtime.Serialization.SerializationBinder)", span="65-65"];
m2_35 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="315-315"];
m2_168 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerializing(object, System.Runtime.Serialization.StreamingContext)", span="132-132"];
m2_160 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="IsoDateTimeConverterTests.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m2_195 [cluster="System.Collections.Generic.List<T>.Add(T)", file="IsoDateTimeConverterTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m2_344 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="IsoDateTimeConverterTests.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m2_118 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="IsoDateTimeConverterTests.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m2_139 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IsoDateTimeConverterTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m2_345 [cluster="object.ToString()", file="IsoDateTimeConverterTests.cs", label="Entry object.ToString()", span="0-0"];
m2_146 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="749-749"];
m2_288 [cluster="System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", file="IsoDateTimeConverterTests.cs", label="Entry System.Dynamic.IDynamicMetaObjectProvider.GetDynamicMemberNames()", span="133-133"];
m2_145 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.GetReference(object, object)", span="45-45"];
m2_39 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="324-324"];
m2_123 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m2_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="385-385"];
m2_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeValue(writer, value, valueContract, null, contract.CollectionItemContract)", span="435-435"];
m2_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerializing(values.UnderlyingCollection, Serializer.Context)", span="387-387"];
m2_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.Add(values.UnderlyingCollection)", span="389-389"];
m2_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="bool isReference = contract.IsReference ?? HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Arrays)", span="391-391"];
m2_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Arrays, contract, member, collectionValueContract)", span="392-392"];
m2_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteValue(Serializer.ReferenceResolver.GetReference(this, values.UnderlyingCollection))", span="401-401"];
m2_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteTypeProperty(writer, values.UnderlyingCollection.GetType())", span="405-405"];
m2_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.CollectionItemContract = Serializer.ContractResolver.ResolveContract(contract.CollectionItemType ?? typeof(object))", span="411-411"];
m2_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContract valueContract = collectionItemValueContract ?? GetContractSafe(value)", span="425-425"];
m2_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ShouldWriteReference(value, null, valueContract)", span="427-427"];
m2_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteReference(writer, value)", span="429-429"];
m2_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="CheckForCircularReference(value, null, contract)", span="433-433"];
m2_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="IsErrorHandled(values.UnderlyingCollection, contract, index, writer.ContainerPath, ex)", span="441-441"];
m2_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="HandleError(writer, initialDepth)", span="442-442"];
m2_253 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="459-459"];
m2_254 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerialized(values.UnderlyingCollection, Serializer.Context)", span="461-461"];
m2_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=values, span="421-421"];
m2_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=Exception, span="439-439"];
m2_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="isReference || includeTypeDetails", span="394-394"];
m2_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=isReference, span="398-398"];
m2_251 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="isReference || includeTypeDetails", span="454-454"];
m2_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=includeTypeDetails, span="403-403"];
m2_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName)", span="400-400"];
m2_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(JsonTypeReflector.ArrayValuesPropertyName)", span="407-407"];
m2_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.CollectionItemContract == null", span="410-410"];
m2_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContract collectionItemValueContract = (contract.CollectionItemContract.UnderlyingType.IsSealed) ? contract.CollectionItemContract : null", span="413-413"];
m2_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="int index = 0", span="419-419"];
m2_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="throw;", span="444-444"];
m2_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="int initialDepth = writer.Top", span="417-417"];
m2_252 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteEndObject()", span="456-456"];
m2_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteStartObject()", span="396-396"];
m2_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteStartArray()", span="415-415"];
m2_250 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteEndArray()", span="452-452"];
m2_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.Serialization.JsonArrayContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="385-385"];
m2_351 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="377-377"];
m2_37 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="368-368"];
m2_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", span="659-659"];
m2_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="property.GetIsSpecified == null", span="661-661"];
m2_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="return property.GetIsSpecified(target);", span="664-664"];
m2_358 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="return true;", span="662-662"];
m2_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.IsSpecified(Newtonsoft.Json.Serialization.JsonProperty, object)", span="659-659"];
m2_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="92-92"];
m2_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="69-69"];
m2_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="IsoDateTimeConverterTests.cs", label="return Serializer.ContractResolver.ResolveContract(value.GetType());", span="74-74"];
m2_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="IsoDateTimeConverterTests.cs", label="value == null", span="71-71"];
m2_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="IsoDateTimeConverterTests.cs", label="return null;", span="72-72"];
m2_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.GetContractSafe(object)", span="69-69"];
m2_34 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="532-532"];
m2_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="HasFlag(((member != null) ? member.TypeNameHandling : null) ?? Serializer.TypeNameHandling, typeNameHandlingFlag)", span="534-534"];
m2_294 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="(member.TypeNameHandling ?? Serializer.TypeNameHandling) == TypeNameHandling.Auto\r\n          // instance and property type are different\r\n          && contract.UnderlyingType != member.PropertyType", span="539-541"];
m2_295 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContract memberTypeContract = Serializer.ContractResolver.ResolveContract(member.PropertyType)", span="543-543"];
m2_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Serializer.TypeNameHandling == TypeNameHandling.Auto && contract.UnderlyingType != collectionValueContract.UnderlyingType", span="551-551"];
m2_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return true;", span="535-535"];
m2_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="member != null", span="537-537"];
m2_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return false;", span="555-555"];
m2_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.UnderlyingType != memberTypeContract.CreatedType", span="545-545"];
m2_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="collectionValueContract != null", span="549-549"];
m2_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return true;", span="552-552"];
m2_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return true;", span="546-546"];
m2_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.ShouldWriteType(Newtonsoft.Json.TypeNameHandling, Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="532-532"];
m2_257 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="341-341"];
m2_38 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1152-1152"];
m2_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="351-351"];
m2_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="IsoDateTimeConverterTests.cs", label="return ((value & flag) == flag);", span="353-353"];
m2_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="351-351"];
m2_289 [cluster="Newtonsoft.Json.Utilities.DynamicUtils.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.DynamicUtils.TryGetMember(System.Dynamic.IDynamicMetaObjectProvider, string, out object)", span="98-98"];
m2_67 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="713-713"];
m2_70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="295-295"];
m2_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerializing(value, Serializer.Context)", span="297-297"];
m2_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.Add(value)", span="299-299"];
m2_173 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="bool isReference = contract.IsReference ?? HasFlag(Serializer.PreserveReferencesHandling, PreserveReferencesHandling.Objects)", span="302-302"];
m2_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteValue(Serializer.ReferenceResolver.GetReference(this, value))", span="306-306"];
m2_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionValueContract)", span="308-308"];
m2_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteTypeProperty(writer, contract.UnderlyingType)", span="310-310"];
m2_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="!property.Ignored && property.Readable && ShouldSerialize(property, value) && IsSpecified(property, value)", span="319-319"];
m2_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="property.PropertyContract = Serializer.ContractResolver.ResolveContract(property.PropertyType)", span="322-322"];
m2_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="JsonContract memberContract = (property.PropertyContract.UnderlyingType.IsSealed) ? property.PropertyContract : GetContractSafe(memberValue)", span="325-325"];
m2_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteMemberInfoProperty(writer, memberValue, property, memberContract)", span="327-327"];
m2_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="IsErrorHandled(value, contract, property.PropertyName, writer.ContainerPath, ex)", span="332-332"];
m2_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="HandleError(writer, initialDepth)", span="333-333"];
m2_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="340-340"];
m2_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.InvokeOnSerialized(value, Serializer.Context)", span="342-342"];
m2_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteStartObject()", span="300-300"];
m2_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=isReference, span="303-303"];
m2_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(JsonTypeReflector.IdPropertyName)", span="305-305"];
m2_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="int initialDepth = writer.Top", span="313-313"];
m2_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.Properties", span="315-315"];
m2_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="property.PropertyContract == null", span="321-321"];
m2_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=Exception, span="330-330"];
m2_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="object memberValue = property.ValueProvider.GetValue(value)", span="324-324"];
m2_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="throw;", span="335-335"];
m2_191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteEndObject()", span="339-339"];
m2_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonObjectContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="295-295"];
m2_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", span="366-366"];
m2_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ShouldWriteReference(value, null, contract)", span="368-368"];
m2_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteReference(writer, value)", span="370-370"];
m2_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="!CheckForCircularReference(value, null, contract)", span="374-374"];
m2_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.Add(value)", span="377-377"];
m2_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="converter.WriteJson(writer, value, GetInternalSerializer())", span="379-379"];
m2_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="_serializeStack.RemoveAt(_serializeStack.Count - 1)", span="381-381"];
m2_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return;", span="375-375"];
m2_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeConvertable(Newtonsoft.Json.JsonWriter, Newtonsoft.Json.JsonConverter, object, Newtonsoft.Json.Serialization.JsonContract)", span="366-366"];
m2_79 [cluster="Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="318-318"];
m2_99 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.IsReferenced(object, object)", span="54-54"];
m2_20 [cluster="object.GetType()", file="IsoDateTimeConverterTests.cs", label="Entry object.GetType()", span="0-0"];
m2_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", span="53-53"];
m2_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="SerializeValue(jsonWriter, value, GetContractSafe(value), null, null)", span="58-58"];
m2_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="jsonWriter == null", span="55-55"];
m2_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="throw new ArgumentNullException(''jsonWriter'');", span="56-56"];
m2_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(Newtonsoft.Json.JsonWriter, object)", span="53-53"];
m2_21 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="42-42"];
m2_169 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnSerialized(object, System.Runtime.Serialization.StreamingContext)", span="140-140"];
m2_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="641-641"];
m2_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="IsoDateTimeConverterTests.cs", label="ClearErrorContext()", span="643-643"];
m2_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="IsoDateTimeConverterTests.cs", label="writer.Top > initialDepth", span="645-645"];
m2_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="IsoDateTimeConverterTests.cs", label="writer.WriteEnd()", span="647-647"];
m2_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.HandleError(Newtonsoft.Json.JsonWriter, int)", span="641-641"];
m2_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="77-77"];
m2_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="bool includeTypeDetails = ShouldWriteType(TypeNameHandling.Objects, contract, member, collectionValueContract)", span="81-81"];
m2_27 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteTypeProperty(writer, contract.CreatedType)", span="85-85"];
m2_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="contract.UnderlyingType == typeof (byte[])", span="79-79"];
m2_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label=includeTypeDetails, span="82-82"];
m2_26 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteStartObject()", span="84-84"];
m2_28 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(JsonTypeReflector.ValuePropertyName)", span="86-86"];
m2_29 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteValue(value)", span="87-87"];
m2_30 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteEndObject()", span="88-88"];
m2_32 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WriteValue(value)", span="93-93"];
m2_31 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return;", span="89-89"];
m2_33 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializePrimitive(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonPrimitiveContract, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="77-77"];
m2_121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="234-234"];
m2_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="writer.WriteValue(Serializer.ReferenceResolver.GetReference(this, value))", span="238-238"];
m2_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(JsonTypeReflector.RefPropertyName)", span="237-237"];
m2_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="writer.WriteEndObject()", span="239-239"];
m2_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="writer.WriteStartObject()", span="236-236"];
m2_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteReference(Newtonsoft.Json.JsonWriter, object)", span="234-234"];
m2_159 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="290-290"];
m2_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="181-181"];
m2_116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="SerializeValue(writer, memberValue, contract, property, null)", span="208-208"];
m2_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer.NullValueHandling) == NullValueHandling.Ignore &&\r\n          memberValue == null", span="186-187"];
m2_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer.DefaultValueHandling), DefaultValueHandling.Ignore)\r\n        && MiscellaneousUtils.ValueEquals(memberValue, defaultValue)", span="190-191"];
m2_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="ShouldWriteReference(memberValue, property, contract)", span="194-194"];
m2_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="WriteReference(writer, memberValue)", span="197-197"];
m2_111 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="!CheckForCircularReference(memberValue, property.ReferenceLoopHandling, contract)", span="201-201"];
m2_115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(propertyName)", span="207-207"];
m2_102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="object defaultValue = property.DefaultValue", span="184-184"];
m2_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return;", span="188-188"];
m2_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return;", span="192-192"];
m2_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="writer.WritePropertyName(propertyName)", span="196-196"];
m2_110 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return;", span="198-198"];
m2_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="return;", span="202-202"];
m2_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="memberValue == null && property.Required == Required.Always", span="204-204"];
m2_101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="string propertyName = property.PropertyName", span="183-183"];
m2_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="throw new JsonSerializationException(''Cannot write a null value for property '{0}'. Property requires a value.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="205-205"];
m2_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", file="IsoDateTimeConverterTests.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.WriteMemberInfoProperty(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonContract)", span="181-181"];
m2_361 [file="IsoDateTimeConverterTests.cs", label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", span=""];
m4_134 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Post.Post()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Post.Post()", span="376-376"];
m4_82 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JsonReader.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m4_89 [cluster="Newtonsoft.Json.Linq.JContainer.Descendants()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Descendants()", span="265-265"];
m4_295 [cluster="System.Guid.Guid(string)", file="JsonReader.cs", label="Entry System.Guid.Guid(string)", span="0-0"];
m4_128 [cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="81-81"];
m4_257 [cluster="Unk.IsNull", file="JsonReader.cs", label="Entry Unk.IsNull", span=""];
m4_187 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", span="569-569"];
m4_188 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n          new JProperty(''Test2'', new DateTimeOffset(2000, 10, 15, 5, 5, 5, new TimeSpan(11, 11, 0))),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="571-577"];
m4_189 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="JsonSerializer serializer = new JsonSerializer()", span="579-579"];
m4_194 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="serializer.Serialize(writer, o)", span="584-584"];
m4_190 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="serializer.Converters.Add(new JavaScriptDateTimeConverter())", span="580-580"];
m4_191 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="StringWriter sw = new StringWriter()", span="581-581"];
m4_192 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="JsonWriter writer = new JsonTextWriter(sw)", span="582-582"];
m4_195 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="string json = sw.ToString()", span="586-586"];
m4_193 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="writer.Formatting = Formatting.Indented", span="583-583"];
m4_196 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Test1'''': new Date(\r\n    971586305000\r\n  ),\r\n  ''''Test2'''': new Date(\r\n    971546045000\r\n  ),\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', json)", span="588-597"];
m4_197 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ToStringJsonConverter()", span="569-569"];
m4_103 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", span="285-285"];
m4_104 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="string json = @''{''''Color'''':2,''''Establised'''':new Date(1264118400000),''''Width'''':1.1,''''Employees'''':999,''''RoomsPerFloor'''':[1,2,3,4,5,6,7,8,9],''''Open'''':false,''''Symbol'''':''''@'''',''''Mottos'''':[''''Hello World'''',''''öäüÖÄÜ\\'{new Date(12345);}[222]_µ@²³~'''',null,'''' ''''],''''Cost'''':100980.1,''''Escape'''':''''\r\n\t\f\b?{\\r\\n\''''''''',''''product'''':[{''''Name'''':''''Rocket'''',''''ExpiryDate'''':new Date(949532490000),''''Price'''':0},{''''Name'''':''''Alien'''',''''ExpiryDate'''':new Date(-62135596800000),''''Price'''':0}]}''", span="287-287"];
m4_105 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="JObject o = JObject.Parse(json)", span="289-289"];
m4_106 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''''''Establised'''': new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').ToString())", span="291-293"];
m4_107 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''new Date(\r\n  1264118400000\r\n)'', o.Property(''Establised'').Value.ToString())", span="294-296"];
m4_108 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''''''Width'''': 1.1'', o.Property(''Width'').ToString())", span="297-297"];
m4_109 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''1.1'', ((JValue)o.Property(''Width'').Value).ToString(CultureInfo.InvariantCulture))", span="298-298"];
m4_110 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''''''Open'''': false'', o.Property(''Open'').ToString())", span="299-299"];
m4_111 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''False'', o.Property(''Open'').Value.ToString())", span="300-300"];
m4_112 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="json = @''[null,undefined]''", span="302-302"];
m4_113 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="JArray a = JArray.Parse(json)", span="304-304"];
m4_114 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Assert.AreEqual(@''[\r\n  null,\r\n  undefined\r\n]'', a.ToString())", span="305-308"];
m4_115 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Assert.AreEqual(@'''', a.Children().ElementAt(0).ToString())", span="309-309"];
m4_116 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Assert.AreEqual(@'''', a.Children().ElementAt(1).ToString())", span="310-310"];
m4_117 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToStringTypes()", span="285-285"];
m4_284 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", span="827-827"];
m4_285 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass\r\n      {\r\n        Guid = new Guid(''1924129C-F7E0-40F3-9607-9939C531395A''),\r\n        NullableGuid = new Guid(''9E9F3ADF-E017-4F72-91E0-617EBE85967D''),\r\n        TimeSpan = TimeSpan.FromDays(1),\r\n        NullableTimeSpan = TimeSpan.FromHours(1),\r\n        Uri = new Uri(''http://testuri.com'')\r\n      }", span="829-836"];
m4_286 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="JObject o = JObject.FromObject(c1)", span="837-837"];
m4_289 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="848-848"];
m4_290 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="849-849"];
m4_291 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="850-850"];
m4_292 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="851-851"];
m4_293 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="852-852"];
m4_287 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''1924129c-f7e0-40f3-9607-9939c531395a'''',\r\n  ''''NullableGuid'''': ''''9e9f3adf-e017-4f72-91e0-617ebe85967d'''',\r\n  ''''TimeSpan'''': ''''1.00:00:00'''',\r\n  ''''NullableTimeSpan'''': ''''01:00:00'''',\r\n  ''''Uri'''': ''''http://testuri.com/''''\r\n}'', o.ToString())", span="839-845"];
m4_288 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="UriGuidTimeSpanTestClass c2 = o.ToObject<UriGuidTimeSpanTestClass>()", span="847-847"];
m4_294 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassValuesTest()", span="827-827"];
m4_56 [cluster="Unk.ToList", file="JsonReader.cs", label="Entry Unk.ToList", span=""];
m4_50 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="325-325"];
m4_21 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="282-282"];
m4_101 [cluster="Newtonsoft.Json.Linq.JToken.Value<T>(object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Value<T>(object)", span="299-299"];
m4_315 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonReader.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_35 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", span="96-96"];
m4_36 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="string json = @''{\r\n        CPU: 'Intel',\r\n        Drives: [\r\n          'DVD read/writer',\r\n          ''''500 gigabyte hard drive''''\r\n        ]\r\n      }''", span="98-104"];
m4_37 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="JObject o = JObject.Parse(json)", span="106-106"];
m4_38 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="IList<JProperty> properties = o.Properties().ToList()", span="107-107"];
m4_46 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="List<object> parameterValues =\r\n        (from p in o.Properties()\r\n         where p.Value is JValue\r\n         select ((JValue)p.Value).Value).ToList()", span="118-121"];
m4_39 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Assert.AreEqual(''CPU'', properties[0].Name)", span="109-109"];
m4_40 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Assert.AreEqual(''Intel'', (string)properties[0].Value)", span="110-110"];
m4_41 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Assert.AreEqual(''Drives'', properties[1].Name)", span="111-111"];
m4_42 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="JArray list = (JArray)properties[1].Value", span="113-113"];
m4_43 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Assert.AreEqual(2, list.Children().Count())", span="114-114"];
m4_44 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Assert.AreEqual(''DVD read/writer'', (string)list.Children().ElementAt(0))", span="115-115"];
m4_45 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Assert.AreEqual(''500 gigabyte hard drive'', (string)list.Children().ElementAt(1))", span="116-116"];
m4_47 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Assert.AreEqual(1, parameterValues.Count)", span="123-123"];
m4_48 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Assert.AreEqual(''Intel'', parameterValues[0])", span="124-124"];
m4_49 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ObjectParse()", span="96-96"];
m4_64 [cluster="Newtonsoft.Json.Linq.JContainer.Values<T>()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Values<T>()", span="256-256"];
m4_19 [cluster="Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(System.DateTime)", span="109-109"];
m4_7 [cluster="Newtonsoft.Json.Linq.JArray.Parse(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JArray.Parse(string)", span="143-143"];
m4_29 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m4_205 [cluster="System.IO.StringWriter.ToString()", file="JsonReader.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m4_146 [cluster="Newtonsoft.Json.Linq.JObject.JObject(object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(object)", span="113-113"];
m4_297 [cluster="System.Uri.Uri(string)", file="JsonReader.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m4_87 [cluster="Newtonsoft.Json.Linq.JToken.Children()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children()", span="328-328"];
m4_33 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="528-528"];
m4_306 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", span="869-869"];
m4_307 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="JsonReader.cs", label="dynamic name = new JValue(''Matthew Doig'')", span="871-871"];
m4_308 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="JsonReader.cs", label="IDictionary<string, string> users = new Dictionary<string, string>()", span="873-873"];
m4_309 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="JsonReader.cs", label="ExceptionAssert.Throws<Microsoft.CSharp.RuntimeBinder.RuntimeBinderException>(''The best overloaded method match for 'System.Collections.Generic.IDictionary<string,string>.Add(string, string)' has some invalid arguments'',\r\n        () =>\r\n          {\r\n            users.Add(''name2'', name);\r\n\r\n            Assert.AreEqual(users[''name2''], ''Matthew Doig'');\r\n          })", span="876-882"];
m4_310 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ExceptionFromOverloadWithJValue()", span="869-869"];
m4_171 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m4_54 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m4_84 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values(object)", span="102-102"];
m4_131 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="384-384"];
m4_132 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="JsonReader.cs", label="return new List<Post>()\r\n      {\r\n        new Post()\r\n        {\r\n          Title = ''LINQ to JSON beta'',\r\n          Description = ''Annoucing LINQ to JSON'',\r\n          Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n          Categories = new List<string>() { ''Json.NET'', ''LINQ'' }\r\n        },\r\n        new Post()\r\n        {\r\n          Title = ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n          Description = ''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'',\r\n          Link = ''http://james.newtonking.com/projects/json-net.aspx'',\r\n          Categories = new List<string>() { ''Json.NET'', ''CodePlex'' }\r\n        }\r\n      };", span="386-402"];
m4_133 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GetPosts()", span="384-384"];
m4_147 [cluster="JArray.cstr", file="JsonReader.cs", label="Entry JArray.cstr", span=""];
m4_162 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m4_271 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="805-805"];
m4_272 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="UriGuidTimeSpanTestClass c1 = new UriGuidTimeSpanTestClass()", span="807-807"];
m4_273 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="JObject o = JObject.FromObject(c1)", span="808-808"];
m4_276 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.Guid, c2.Guid)", span="819-819"];
m4_277 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.NullableGuid, c2.NullableGuid)", span="820-820"];
m4_278 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.TimeSpan, c2.TimeSpan)", span="821-821"];
m4_279 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.NullableTimeSpan, c2.NullableTimeSpan)", span="822-822"];
m4_280 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="Assert.AreEqual(c1.Uri, c2.Uri)", span="823-823"];
m4_274 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Guid'''': ''''00000000-0000-0000-0000-000000000000'''',\r\n  ''''NullableGuid'''': null,\r\n  ''''TimeSpan'''': ''''00:00:00'''',\r\n  ''''NullableTimeSpan'''': null,\r\n  ''''Uri'''': null\r\n}'', o.ToString())", span="810-816"];
m4_275 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="UriGuidTimeSpanTestClass c2 = o.ToObject<UriGuidTimeSpanTestClass>()", span="818-818"];
m4_281 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.UriGuidTimeSpanTestClassEmptyTest()", span="805-805"];
m4_214 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime)", file="JsonReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime)", span="0-0"];
m4_83 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values()", span="112-112"];
m4_282 [cluster="Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.UriGuidTimeSpanTestClass.UriGuidTimeSpanTestClass()", span="7620-7620"];
m4_130 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string, params object[])", span="90-90"];
m4_30 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="192-192"];
m4_206 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", span="601-601"];
m4_207 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="JsonReader.cs", label="List<DateTimeOffset> testDates = new List<DateTimeOffset> {\r\n        new DateTimeOffset(new DateTime(100, 1, 1, 1, 1, 1, DateTimeKind.Utc)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(13)),\r\n        new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.FromHours(-3.5)),\r\n      }", span="603-608"];
m4_208 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="JsonReader.cs", label="JsonSerializer jsonSerializer = new JsonSerializer()", span="610-610"];
m4_211 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="JsonReader.cs", label="jsonSerializer.Serialize(jsonWriter, testDates)", span="615-615"];
m4_209 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="JsonReader.cs", label="JTokenWriter jsonWriter", span="612-612"];
m4_210 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="JsonReader.cs", label="jsonWriter = new JTokenWriter()", span="613-613"];
m4_212 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="JsonReader.cs", label="Assert.AreEqual(4, jsonWriter.Token.Children().Count())", span="618-618"];
m4_213 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DateTimeOffset()", span="601-601"];
m4_55 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m4_88 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>(object)", span="124-124"];
m4_179 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", span="557-557"];
m4_180 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="JsonReader.cs", label="ExceptionAssert.Throws<ArgumentException>(@''Accessed JConstructor values with invalid key value: ''''purple''''. Argument position index expected.'',\r\n      () =>\r\n      {\r\n        JConstructor c = new JConstructor(''ConstructorValue'');\r\n        Assert.AreEqual(null, c[''purple'']);\r\n      })", span="559-564"];
m4_181 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JConstructorStringIndex()", span="557-557"];
m4_230 [cluster="Newtonsoft.Json.Linq.JArray.FromObject(object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JArray.FromObject(object)", span="160-160"];
m4_57 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="128-128"];
m4_58 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="JsonReader.cs", label="string json = @''[0,1,2,3,4,5,6,7,8,9]''", span="130-130"];
m4_59 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="JsonReader.cs", label="JArray a = JArray.Parse(json)", span="132-132"];
m4_60 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="JsonReader.cs", label="List<int> list = a.Values<int>().ToList()", span="133-133"];
m4_61 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="JsonReader.cs", label="List<int> expected = new List<int>() { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }", span="135-135"];
m4_62 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="JsonReader.cs", label="CollectionAssert.AreEqual(expected, list)", span="137-137"];
m4_63 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateLongArray()", span="128-128"];
m4_0 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="52-52"];
m4_1 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="JsonReader.cs", label="JArray j = JArray.Parse(''[-1E+4,100.0e-2]'')", span="54-54"];
m4_2 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="JsonReader.cs", label="double value = (double)j[0]", span="56-56"];
m4_4 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="JsonReader.cs", label="value = (double)j[1]", span="59-59"];
m4_3 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="JsonReader.cs", label="Assert.AreEqual(-10000d, value)", span="57-57"];
m4_5 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="JsonReader.cs", label="Assert.AreEqual(1d, value)", span="60-60"];
m4_6 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.DoubleValue()", span="52-52"];
m4_166 [cluster="Unk.>", file="JsonReader.cs", label="Entry Unk.>", span=""];
m4_244 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="696-696"];
m4_245 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="JObject o = null", span="698-698"];
m4_246 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="IJEnumerable<JToken> enumerable = null", span="699-699"];
m4_247 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="enumerable = o.AsJEnumerable()", span="701-701"];
m4_248 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="Assert.IsNull(enumerable)", span="702-702"];
m4_249 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="o =\r\n        new JObject(\r\n          new JProperty(''Test1'', new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc)),\r\n          new JProperty(''Test2'', ''Test2Value''),\r\n          new JProperty(''Test3'', null)\r\n        )", span="704-709"];
m4_250 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="enumerable = o.AsJEnumerable()", span="711-711"];
m4_252 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="Assert.AreEqual(o, enumerable)", span="713-713"];
m4_251 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="Assert.IsNotNull(enumerable)", span="712-712"];
m4_253 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="DateTime d = enumerable[''Test1''].Value<DateTime>()", span="715-715"];
m4_254 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="Assert.AreEqual(new DateTime(2000, 10, 15, 5, 5, 5, DateTimeKind.Utc), d)", span="717-717"];
m4_255 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.AsJEnumerable()", span="696-696"];
m4_186 [cluster="Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JConstructor.JConstructor(string)", span="110-110"];
m4_256 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.AsJEnumerable()", span="289-289"];
m4_298 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", span="856-856"];
m4_299 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="JsonReader.cs", label="string json = @''/* blah */ {'hi':'hi!'}''", span="858-858"];
m4_300 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="JsonReader.cs", label="JObject o = JObject.Parse(json)", span="859-859"];
m4_301 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="JsonReader.cs", label="Assert.AreEqual(''hi!'', (string)o[''hi''])", span="860-860"];
m4_302 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="JsonReader.cs", label="json = @''/* blah */ ['hi!']''", span="862-862"];
m4_303 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="JsonReader.cs", label="JArray a = JArray.Parse(json)", span="863-863"];
m4_304 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="JsonReader.cs", label="Assert.AreEqual(''hi!'', (string)a[0])", span="864-864"];
m4_305 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ParseWithPrecendingComments()", span="856-856"];
m4_51 [cluster="Newtonsoft.Json.Linq.JObject.Properties()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.Properties()", span="195-195"];
m4_283 [cluster="Newtonsoft.Json.Linq.JToken.ToObject<T>()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject<T>()", span="1418-1418"];
m4_127 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, params object[])", span="182-182"];
m4_296 [cluster="System.TimeSpan.FromDays(double)", file="JsonReader.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m4_199 [cluster="System.TimeSpan.TimeSpan(int, int, int)", file="JsonReader.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int)", span="0-0"];
m4_231 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="659-659"];
m4_232 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="List<Post> posts = GetPosts()", span="661-661"];
m4_233 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="JObject o = JObject.FromObject(new\r\n      {\r\n        channel = new Dictionary<string, object>\r\n        {\r\n          { ''title'', ''James Newton-King'' },\r\n          { ''link'', ''http://james.newtonking.com'' },\r\n          { ''description'', ''James Newton-King's blog.'' },\r\n          { ''item'', \r\n                  (from p in posts\r\n                  orderby p.Title\r\n                  select new\r\n                  {\r\n                    title = p.Title,\r\n                    description = p.Description,\r\n                    link = p.Link,\r\n                    category = p.Categories\r\n                  })\r\n          }\r\n        }\r\n      })", span="663-682"];
m4_234 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="Console.WriteLine(o.ToString())", span="684-684"];
m4_235 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o)", span="685-685"];
m4_236 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="686-686"];
m4_237 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="687-687"];
m4_238 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="688-688"];
m4_239 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="690-690"];
m4_240 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), a)", span="691-691"];
m4_241 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="Assert.AreEqual(5, a.Count())", span="692-692"];
m4_242 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromAnonDictionary()", span="659-659"];
m4_22 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="389-389"];
m4_204 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="596-596"];
m4_31 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="391-391"];
m4_217 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", span="623-623"];
m4_218 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="List<Post> posts = GetPosts()", span="625-625"];
m4_219 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="JObject o = JObject.FromObject(new\r\n      {\r\n        channel = new\r\n        {\r\n          title = ''James Newton-King'',\r\n          link = ''http://james.newtonking.com'',\r\n          description = ''James Newton-King's blog.'',\r\n          item =\r\n              from p in posts\r\n              orderby p.Title\r\n              select new\r\n              {\r\n                title = p.Title,\r\n                description = p.Description,\r\n                link = p.Link,\r\n                category = p.Categories\r\n              }\r\n        }\r\n      })", span="627-645"];
m4_220 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="Console.WriteLine(o.ToString())", span="647-647"];
m4_221 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o)", span="648-648"];
m4_222 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o[''channel''])", span="649-649"];
m4_223 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="Assert.AreEqual(''James Newton-King'', (string)o[''channel''][''title''])", span="650-650"];
m4_224 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children().Count())", span="651-651"];
m4_225 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="JArray a = JArray.FromObject(new List<int>() { 0, 1, 2, 3, 4 })", span="653-653"];
m4_226 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), a)", span="654-654"];
m4_227 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="Assert.AreEqual(5, a.Count())", span="655-655"];
m4_228 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.FromObject()", span="623-623"];
m4_18 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="127-127"];
m4_229 [cluster="Newtonsoft.Json.Linq.JObject.FromObject(object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.FromObject(object)", span="342-342"];
m4_201 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="JsonReader.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m4_265 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="736-736"];
m4_266 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="JsonReader.cs", label="string json = @''[\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        },\r\n                        {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      ]''", span="738-789"];
m4_267 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="JsonReader.cs", label="JArray o = JArray.Parse(json)", span="791-791"];
m4_268 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="JsonReader.cs", label="Assert.AreEqual(4, o.Children()[''item''].Children()[''title''].Count())", span="793-793"];
m4_269 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="JsonReader.cs", label="CollectionAssert.AreEqual(new string[]\r\n        {\r\n          ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n          ''LINQ to JSON beta'',\r\n          ''Json.NET 1.3 + New license + Now on CodePlex'',\r\n          ''LINQ to JSON beta''\r\n        },\r\n        o.Children()[''item''].Children()[''title''].Values<string>().ToArray())", span="794-801"];
m4_270 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.ChildrenExtension()", span="736-736"];
m4_34 [cluster="System.Console.WriteLine(string)", file="JsonReader.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_172 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="546-546"];
m4_173 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="JsonReader.cs", label="ExceptionAssert.Throws<ArgumentException>(@''Accessed JArray values with invalid key value: ''''purple''''. Array position index expected.'',\r\n      () =>\r\n      {\r\n        JArray a = new JArray();\r\n        Assert.AreEqual(null, a[''purple'']);\r\n      })", span="548-553"];
m4_174 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JArrayStringIndex()", span="546-546"];
m4_243 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_8 [cluster="Unk.AreEqual", file="JsonReader.cs", label="Entry Unk.AreEqual", span=""];
m4_20 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonReader.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m4_258 [cluster="Unk.IsNotNull", file="JsonReader.cs", label="Entry Unk.IsNotNull", span=""];
m4_86 [cluster="System.Collections.Generic.IEnumerable<T>.Children<T>()", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<T>.Children<T>()", span="217-217"];
m4_148 [cluster="Unk.WriteLine", file="JsonReader.cs", label="Entry Unk.WriteLine", span=""];
m4_149 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Values<U>()", span="135-135"];
m4_198 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m4_150 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="489-489"];
m4_151 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="string json = @''{\r\n                        ''''channel'''': {\r\n                          ''''title'''': ''''James Newton-King'''',\r\n                          ''''link'''': ''''http://james.newtonking.com'''',\r\n                          ''''description'''': ''''James Newton-King's blog.'''',\r\n                          ''''item'''': [\r\n                            {\r\n                              ''''title'''': ''''Json.NET 1.3 + New license + Now on CodePlex'''',\r\n                              ''''description'''': ''''Annoucing the release of Json.NET 1.3, the MIT license and being available on CodePlex'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''CodePlex''''\r\n                              ]\r\n                            },\r\n                            {\r\n                              ''''title'''': ''''LINQ to JSON beta'''',\r\n                              ''''description'''': ''''Annoucing LINQ to JSON'''',\r\n                              ''''link'''': ''''http://james.newtonking.com/projects/json-net.aspx'''',\r\n                              ''''category'''': [\r\n                                ''''Json.NET'''',\r\n                                ''''LINQ''''\r\n                              ]\r\n                            }\r\n                          ]\r\n                        }\r\n                      }''", span="491-517"];
m4_152 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="JObject o = JObject.Parse(json)", span="519-519"];
m4_153 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="Assert.AreEqual(null, o[''purple''])", span="521-521"];
m4_154 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="Assert.AreEqual(null, o.Value<string>(''purple''))", span="522-522"];
m4_155 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JArray), o[''channel''][''item''])", span="524-524"];
m4_156 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="Assert.AreEqual(2, o[''channel''][''item''].Children()[''title''].Count())", span="526-526"];
m4_157 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="Assert.AreEqual(0, o[''channel''][''item''].Children()[''monkey''].Count())", span="527-527"];
m4_158 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="Assert.AreEqual(''Json.NET 1.3 + New license + Now on CodePlex'', (string)o[''channel''][''item''][0][''title''])", span="529-529"];
m4_159 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="CollectionAssert.AreEqual(new string[] { ''Json.NET 1.3 + New license + Now on CodePlex'', ''LINQ to JSON beta'' }, o[''channel''][''item''].Children().Values<string>(''title'').ToArray())", span="531-531"];
m4_160 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.BasicQuerying()", span="489-489"];
m4_203 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="110-110"];
m4_53 [cluster="Newtonsoft.Json.Linq.JContainer.Children()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JContainer.Children()", span="244-244"];
m4_311 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="877-882"];
m4_167 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="538-542"];
m4_168 [cluster="lambda expression", file="JsonReader.cs", label="JObject o = new JObject()", span="540-540"];
m4_169 [cluster="lambda expression", file="JsonReader.cs", label="Assert.AreEqual(null, o[0])", span="541-541"];
m4_170 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="538-542"];
m4_175 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="549-553"];
m4_176 [cluster="lambda expression", file="JsonReader.cs", label="JArray a = new JArray()", span="551-551"];
m4_177 [cluster="lambda expression", file="JsonReader.cs", label="Assert.AreEqual(null, a[''purple''])", span="552-552"];
m4_178 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="549-553"];
m4_182 [cluster="lambda expression", file="JsonReader.cs", label="Entry lambda expression", span="560-564"];
m4_183 [cluster="lambda expression", file="JsonReader.cs", label="JConstructor c = new JConstructor(''ConstructorValue'')", span="562-562"];
m4_184 [cluster="lambda expression", file="JsonReader.cs", label="Assert.AreEqual(null, c[''purple''])", span="563-563"];
m4_185 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="560-564"];
m4_312 [cluster="lambda expression", file="JsonReader.cs", label="users.Add(''name2'', name)", span="879-879"];
m4_313 [cluster="lambda expression", file="JsonReader.cs", label="Assert.AreEqual(users[''name2''], ''Matthew Doig'')", span="881-881"];
m4_314 [cluster="lambda expression", file="JsonReader.cs", label="Exit lambda expression", span="877-882"];
m4_17 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="64-64"];
m4_119 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="314-314"];
m4_120 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="JsonReader.cs", label="JObject o =\r\n        new JObject(\r\n          new JProperty(''Test1'', ''Test1Value''),\r\n          new JProperty(''Test2'', ''Test2Value''),\r\n          new JProperty(''Test3'', ''Test3Value''),\r\n          new JProperty(''Test4'', null)\r\n        )", span="316-322"];
m4_121 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="JsonReader.cs", label="Assert.AreEqual(4, o.Properties().Count())", span="324-324"];
m4_122 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="JsonReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Test1'''': ''''Test1Value'''',\r\n  ''''Test2'''': ''''Test2Value'''',\r\n  ''''Test3'''': ''''Test3Value'''',\r\n  ''''Test4'''': null\r\n}'', o.ToString())", span="326-331"];
m4_123 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="JsonReader.cs", label="JArray a =\r\n        new JArray(\r\n          o,\r\n          new DateTime(2000, 10, 10, 0, 0, 0, DateTimeKind.Utc),\r\n          55,\r\n          new JArray(\r\n            ''1'',\r\n            2,\r\n            3.0,\r\n            new DateTime(4, 5, 6, 7, 8, 9, DateTimeKind.Utc)\r\n          ),\r\n          new JConstructor(\r\n            ''ConstructorName'',\r\n            ''param1'',\r\n            2,\r\n            3.0\r\n          )\r\n        )", span="333-350"];
m4_124 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="JsonReader.cs", label="Assert.AreEqual(5, a.Count())", span="352-352"];
m4_125 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="JsonReader.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''Test1'''': ''''Test1Value'''',\r\n    ''''Test2'''': ''''Test2Value'''',\r\n    ''''Test3'''': ''''Test3Value'''',\r\n    ''''Test4'''': null\r\n  },\r\n  ''''2000-10-10T00:00:00Z'''',\r\n  55,\r\n  [\r\n    ''''1'''',\r\n    2,\r\n    3.0,\r\n    ''''0004-05-06T07:08:09Z''''\r\n  ],\r\n  new ConstructorName(\r\n    ''''param1'''',\r\n    2,\r\n    3.0\r\n  )\r\n]'', a.ToString())", span="353-373"];
m4_126 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTree()", span="314-314"];
m4_52 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_161 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="96-96"];
m4_259 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="146-146"];
m4_32 [cluster="Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenReader.JTokenReader(Newtonsoft.Json.Linq.JToken)", span="43-43"];
m4_65 [cluster="System.Collections.Generic.List<T>.List()", file="JsonReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_102 [cluster="Newtonsoft.Json.Linq.JObject.Property(string)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.Property(string)", span="205-205"];
m4_215 [cluster="System.TimeSpan.FromHours(double)", file="JsonReader.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m4_135 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="406-406"];
m4_136 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label="List<Post> posts = GetPosts()", span="408-408"];
m4_137 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label="JObject rss =\r\n        new JObject(\r\n          new JProperty(''channel'',\r\n            new JObject(\r\n              new JProperty(''title'', ''James Newton-King''),\r\n              new JProperty(''link'', ''http://james.newtonking.com''),\r\n              new JProperty(''description'', ''James Newton-King's blog.''),\r\n              new JProperty(''item'',\r\n                new JArray(\r\n                  from p in posts\r\n                  orderby p.Title\r\n                  select new JObject(\r\n                    new JProperty(''title'', p.Title),\r\n                    new JProperty(''description'', p.Description),\r\n                    new JProperty(''link'', p.Link),\r\n                    new JProperty(''category'',\r\n                      new JArray(\r\n                        from c in p.Categories\r\n                        select new JValue(c)))))))))", span="410-428"];
m4_138 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label="Console.WriteLine(rss.ToString())", span="430-430"];
m4_139 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label="var postTitles =\r\n        from p in rss[''channel''][''item'']\r\n        select p.Value<string>(''title'')", span="460-462"];
m4_142 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label="var categories =\r\n        from c in rss[''channel''][''item''].Children()[''category''].Values<string>()\r\n        group c by c into g\r\n        orderby g.Count() descending\r\n        select new { Category = g.Key, Count = g.Count() }", span="472-476"];
m4_140 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label=postTitles, span="464-464"];
m4_141 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label="Console.WriteLine(item)", span="466-466"];
m4_143 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label=categories, span="478-478"];
m4_144 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label="Console.WriteLine(c.Category + '' - Count: '' + c.Count)", span="480-480"];
m4_145 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CreateJTokenTreeNested()", span="406-406"];
m4_90 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="247-247"];
m4_91 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="string json = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="249-255"];
m4_92 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="JObject o = JObject.Parse(json)", span="257-257"];
m4_93 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="Assert.AreEqual(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer'''',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'', o.ToString())", span="259-265"];
m4_94 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="JArray list = o.Value<JArray>(''Drives'')", span="267-267"];
m4_96 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="JProperty cpuProperty = o.Property(''CPU'')", span="274-274"];
m4_98 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="JProperty drivesProperty = o.Property(''Drives'')", span="277-277"];
m4_95 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="Assert.AreEqual(@''[\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', list.ToString())", span="269-272"];
m4_97 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="Assert.AreEqual(@''''''CPU'''': ''''Intel'''''', cpuProperty.ToString())", span="275-275"];
m4_99 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="Assert.AreEqual(@''''''Drives'''': [\r\n  ''''DVD read/writer'''',\r\n  ''''500 gigabyte hard drive''''\r\n]'', drivesProperty.ToString())", span="278-281"];
m4_100 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JTokenToString()", span="247-247"];
m4_202 [cluster="System.IO.StringWriter.StringWriter()", file="JsonReader.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m4_80 [cluster="Newtonsoft.Json.Linq.JToken.Children<T>()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.Children<T>()", span="338-338"];
m4_118 [cluster="Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JValue.ToString(System.IFormatProvider)", span="691-691"];
m4_260 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="722-722"];
m4_261 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="JsonReader.cs", label="IEnumerable<JObject> o = new[]\r\n        {\r\n          JObject.FromObject(new {First = 1, Second = 2}),\r\n          JObject.FromObject(new {First = 1, Second = 2})\r\n        }", span="724-728"];
m4_262 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="JsonReader.cs", label="IJEnumerable<JToken> values = o.Properties()", span="730-730"];
m4_263 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="JsonReader.cs", label="Assert.AreEqual(4, values.Count())", span="731-731"];
m4_264 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.CovariantIJEnumerable()", span="722-722"];
m4_23 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="81-81"];
m4_24 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="JsonReader.cs", label="JObject o = new JObject(\r\n        new JProperty(''Name'', ''John Smith''),\r\n        new JProperty(''BirthDate'', new DateTime(1983, 3, 20))\r\n        )", span="83-86"];
m4_25 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="JsonReader.cs", label="JsonSerializer serializer = new JsonSerializer()", span="88-88"];
m4_26 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="JsonReader.cs", label="Person p = (Person)serializer.Deserialize(new JTokenReader(o), typeof(Person))", span="89-89"];
m4_27 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="JsonReader.cs", label="Console.WriteLine(p.Name)", span="92-92"];
m4_28 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.LinqToJsonDeserialize()", span="81-81"];
m4_81 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", file="JsonReader.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JObject>.Properties()", span="89-89"];
m4_163 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="535-535"];
m4_164 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="JsonReader.cs", label="ExceptionAssert.Throws<ArgumentException>(''Accessed JObject values with invalid key value: 0. Object property name expected.'',\r\n      () =>\r\n      {\r\n        JObject o = new JObject();\r\n        Assert.AreEqual(null, o[0]);\r\n      })", span="537-542"];
m4_165 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.JObjectIntIndex()", span="535-535"];
m4_200 [cluster="Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Converters.JavaScriptDateTimeConverter.JavaScriptDateTimeConverter()", span="34-34"];
m4_9 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="64-64"];
m4_10 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="JsonReader.cs", label="JArray array = new JArray()", span="66-66"];
m4_11 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="JsonReader.cs", label="JValue text = new JValue(''Manual text'')", span="67-67"];
m4_13 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="JsonReader.cs", label="array.Add(text)", span="70-70"];
m4_14 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="JsonReader.cs", label="array.Add(date)", span="71-71"];
m4_15 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="JsonReader.cs", label="string json = array.ToString()", span="73-73"];
m4_12 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="JsonReader.cs", label="JValue date = new JValue(new DateTime(2000, 5, 23))", span="68-68"];
m4_16 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.Manual()", span="64-64"];
m4_129 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonReader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m4_216 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="71-71"];
m4_66 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="141-141"];
m4_68 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="JObject o = JObject.Parse(json)", span="224-224"];
m4_69 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="List<JObject> resultObjects = o[''results''].Children<JObject>().ToList()", span="226-226"];
m4_73 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="Assert.AreEqual(5, o.PropertyValues().Cast<JArray>().Children().Count())", span="234-234"];
m4_74 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="List<string> resultUrls = o[''results''].Children().Values<string>(''url'').ToList()", span="236-236"];
m4_77 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="List<JToken> descendants = o.Descendants().ToList()", span="242-242"];
m4_70 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="Assert.AreEqual(32, resultObjects.Properties().Count())", span="228-228"];
m4_71 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="Assert.AreEqual(32, resultObjects.Cast<JToken>().Values().Count())", span="230-230"];
m4_72 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="Assert.AreEqual(4, resultObjects.Cast<JToken>().Values(''GsearchResultClass'').Count())", span="232-232"];
m4_75 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="List<string> expectedUrls = new List<string>() { ''http://www.google.com/'', ''http://news.google.com/'', ''http://groups.google.com/'', ''http://maps.google.com/'' }", span="238-238"];
m4_76 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="CollectionAssert.AreEqual(expectedUrls, resultUrls)", span="240-240"];
m4_78 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="Assert.AreEqual(89, descendants.Count)", span="243-243"];
m4_79 [cluster="Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", file="JsonReader.cs", label="Exit Newtonsoft.Json.Tests.Linq.LinqToJsonTest.GoogleSearchAPI()", span="141-141"];
m4_85 [cluster="Newtonsoft.Json.Linq.JObject.PropertyValues()", file="JsonReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.PropertyValues()", span="219-219"];
m4_316 [file="JsonReader.cs", label="Newtonsoft.Json.Tests.Linq.LinqToJsonTest", span=""];
m4_317 [file="JsonReader.cs", label=name, span=""];
m4_318 [file="JsonReader.cs", label=users, span=""];
m5_8 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382"];
m5_3 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="373-373"];
m5_4 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="DefaultContext = new StreamingContext()", span="375-375"];
m5_5 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="DefaultCulture = CultureInfo.InvariantCulture", span="376-376"];
m5_6 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="373-373"];
m5_9 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="Converters = new List<JsonConverter>()", span="384-384"];
m5_10 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerSettings.cs", label="Exit Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382"];
m5_7 [cluster="System.Runtime.Serialization.StreamingContext.StreamingContext()", file="JsonSerializerSettings.cs", label="Entry System.Runtime.Serialization.StreamingContext.StreamingContext()", span="0-0"];
m5_0 [cluster="lambda expression", file="JsonSerializerSettings.cs", label="Entry lambda expression", span="221-221"];
m5_2 [cluster="lambda expression", file="JsonSerializerSettings.cs", label="Exit lambda expression", span="221-221"];
m5_11 [cluster="System.Collections.Generic.List<T>.List()", file="JsonSerializerSettings.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_12 [file="JsonSerializerSettings.cs", label="Newtonsoft.Json.JsonSerializerSettings", span=""];
m6_24 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245"];
m6_14 [cluster="char.ToString()", file="JsonSerializerTest.cs", label="Entry char.ToString()", span="0-0"];
m6_10 [cluster="Unk.ToList", file="JsonSerializerTest.cs", label="Entry Unk.ToList", span=""];
m6_3 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="19-19"];
m6_4 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs", label="IList<JsonProperty> properties = base.CreateProperties(type, memberSerialization)", span="21-21"];
m6_5 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs", label="properties =\r\n          properties.Where(p => p.PropertyName.StartsWith(_startingWithChar.ToString())).ToList()", span="24-25"];
m6_6 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs", label="return properties;", span="27-27"];
m6_7 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="19-19"];
m6_9 [cluster="Unk.Where", file="JsonSerializerTest.cs", label="Entry Unk.Where", span=""];
m6_0 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.DynamicContractResolver(char)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.DynamicContractResolver(char)", span="14-14"];
m6_1 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.DynamicContractResolver(char)", file="JsonSerializerTest.cs", label="_startingWithChar = startingWithChar", span="16-16"];
m6_2 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.DynamicContractResolver(char)", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver.DynamicContractResolver(char)", span="14-14"];
m6_11 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Entry lambda expression", span="25-25"];
m6_12 [cluster="lambda expression", file="JsonSerializerTest.cs", label="p.PropertyName.StartsWith(_startingWithChar.ToString())", span="25-25"];
m6_13 [cluster="lambda expression", file="JsonSerializerTest.cs", label="Exit lambda expression", span="25-25"];
m6_15 [cluster="string.StartsWith(string)", file="JsonSerializerTest.cs", label="Entry string.StartsWith(string)", span="0-0"];
m6_8 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="862-862"];
m6_25 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m6_23 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Person.Person()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Person.Person()", span="31-31"];
m6_26 [cluster="System.Console.WriteLine(string)", file="JsonSerializerTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m6_16 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Example()", file="JsonSerializerTest.cs", label="Entry Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Example()", span="43-43"];
m6_17 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Example()", file="JsonSerializerTest.cs", label="Person person = new Person\r\n        {\r\n          FirstName = ''Dennis'',\r\n          LastName = ''Deepwater-Diver''\r\n        }", span="46-50"];
m6_18 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Example()", file="JsonSerializerTest.cs", label="string startingWithF = JsonConvert.SerializeObject(person, Formatting.Indented,\r\n        new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('F') })", span="52-53"];
m6_20 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Example()", file="JsonSerializerTest.cs", label="string startingWithL = JsonConvert.SerializeObject(person, Formatting.Indented,\r\n        new JsonSerializerSettings { ContractResolver = new DynamicContractResolver('L') })", span="61-62"];
m6_19 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Example()", file="JsonSerializerTest.cs", label="Console.WriteLine(startingWithF)", span="55-55"];
m6_21 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Example()", file="JsonSerializerTest.cs", label="Console.WriteLine(startingWithL)", span="64-64"];
m6_22 [cluster="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Example()", file="JsonSerializerTest.cs", label="Exit Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.Example()", span="43-43"];
m6_27 [file="JsonSerializerTest.cs", label="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver", span=""];
m7_270 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="837-837"];
m7_271 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="JsonTextReader.cs", label="return new CustomEnumerable<T>(newVal, this);", span="839-839"];
m7_272 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.AddFirst(T)", span="837-837"];
m7_151 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomSerializationBinder.CustomSerializationBinder()", span="525-525"];
m7_352 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameList<T>.TypeNameList()", span="1598-1598"];
m7_128 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="464-464"];
m7_130 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n        {\r\n          Name = ''Name!'',\r\n          Value = new List<int> {1, 2, 3, 4, 5}\r\n        }", span="468-472"];
m7_132 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + listRef + @'''''',\r\n    ''''$values'''': [\r\n      1,\r\n      2,\r\n      3,\r\n      4,\r\n      5\r\n    ]\r\n  }\r\n}'', json)", span="476-488"];
m7_134 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(''Name!'', deserialized.Name)", span="491-491"];
m7_137 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(5, nested.Count)", span="495-495"];
m7_138 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(1, nested[0])", span="496-496"];
m7_139 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(2, nested[1])", span="497-497"];
m7_140 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(3, nested[2])", span="498-498"];
m7_141 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(4, nested[3])", span="499-499"];
m7_142 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(5, nested[4])", span="500-500"];
m7_133 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="490-490"];
m7_135 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (List<int>), deserialized.Value)", span="492-492"];
m7_129 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof (List<int>), FormatterAssemblyStyle.Simple)", span="466-466"];
m7_131 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", span="474-474"];
m7_136 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="List<int> nested = (List<int>) deserialized.Value", span="494-494"];
m7_143 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteListTypeNameForProperty()", span="464-464"];
m7_231 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="700-700"];
m7_236 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JsonTextReader.cs", label="Message deserialized = JsonConvert.DeserializeObject<Message>(json)", span="720-720"];
m7_234 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JsonTextReader.cs", label="message.Body = new SearchDetails\r\n        {\r\n          Query = ''Json.NET'',\r\n          Language = ''en-us''\r\n        }", span="704-708"];
m7_235 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(message, Formatting.Indented)", span="710-710"];
m7_237 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JsonTextReader.cs", label="SearchDetails searchDetails = (SearchDetails) deserialized.Body", span="722-722"];
m7_232 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JsonTextReader.cs", label="Message message = new Message()", span="702-702"];
m7_233 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JsonTextReader.cs", label="message.Address = ''http://www.google.com''", span="703-703"];
m7_238 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForPropertyDemo()", span="700-700"];
m7_47 [cluster="Newtonsoft.Json.Tests.TestObjects.Person.Person()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Person.Person()", span="34-34"];
m7_531 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1539-1539"];
m7_534 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JsonTextReader.cs", label="ReferenceEquals(this, obj)", span="1542-1542"];
m7_537 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JsonTextReader.cs", label="return this.Name.Equals(((IExample)obj).Name);", span="1545-1545"];
m7_532 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JsonTextReader.cs", label="obj == null", span="1541-1541"];
m7_535 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JsonTextReader.cs", label="return true;", span="1542-1542"];
m7_536 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JsonTextReader.cs", label="obj is IExample", span="1543-1543"];
m7_533 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JsonTextReader.cs", label="return false;", span="1541-1541"];
m7_538 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JsonTextReader.cs", label="return false;", span="1549-1549"];
m7_539 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Equals(object)", span="1539-1539"];
m7_303 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Car.Car()", span="863-863"];
m7_240 [cluster="Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SearchDetails.SearchDetails()", span="1467-1467"];
m7_241 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="734-734"];
m7_242 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="Dictionary<string, object> collection = new Dictionary<string, object>()\r\n        {\r\n          {''First'', new UrlStatus {Status = 404, Url = @''http://www.bing.com''}},\r\n          {''Second'', new UrlStatus {Status = 400, Url = @''http://www.google.com''}},\r\n          {\r\n            ''List'', new List<UrlStatus>\r\n              {\r\n                new UrlStatus {Status = 300, Url = @''http://www.yahoo.com''},\r\n                new UrlStatus {Status = 200, Url = @''http://www.askjeeves.com''}\r\n              }\r\n            }\r\n        }", span="736-747"];
m7_245 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n  ''''First'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 404,\r\n    ''''Url'''': ''''http://www.bing.com''''\r\n  },\r\n  ''''Second'''': {\r\n    ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n    ''''Status'''': 400,\r\n    ''''Url'''': ''''http://www.google.com''''\r\n  },\r\n  ''''List'''': {\r\n    ''''$type'''': ''''System.Collections.Generic.List`1[['' + urlStatusTypeName + @'']], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 300,\r\n        ''''Url'''': ''''http://www.yahoo.com''''\r\n      },\r\n      {\r\n        ''''$type'''': '''''' + urlStatusTypeName + @'''''',\r\n        ''''Status'''': 200,\r\n        ''''Url'''': ''''http://www.askjeeves.com''''\r\n      }\r\n    ]\r\n  }\r\n}'', json)", span="757-784"];
m7_249 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="Assert.AreEqual(3, newCollection.Count)", span="795-795"];
m7_250 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="Assert.AreEqual(@''http://www.bing.com'', ((UrlStatus) newCollection[''First'']).Url)", span="796-796"];
m7_252 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="Assert.AreEqual(2, statues.Count)", span="799-799"];
m7_247 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (Dictionary<string, object>), c)", span="792-792"];
m7_244 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="string urlStatusTypeName = ReflectionUtils.GetTypeName(typeof (UrlStatus), FormatterAssemblyStyle.Simple)", span="755-755"];
m7_243 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(collection, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n        })", span="749-753"];
m7_246 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="object c = JsonConvert.DeserializeObject(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Simple\r\n        })", span="786-790"];
m7_248 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="Dictionary<string, object> newCollection = (Dictionary<string, object>) c", span="794-794"];
m7_251 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="List<UrlStatus> statues = (List<UrlStatus>) newCollection[''List'']", span="798-798"];
m7_253 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.GenericDictionaryObject()", span="734-734"];
m7_74 [cluster="Unk.IsTrue", file="JsonTextReader.cs", label="Entry Unk.IsTrue", span=""];
m7_219 [cluster="Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.ContentSubClass.ContentSubClass(string)", span="30-30"];
m7_313 [cluster="Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.SerializableWrapper.SerializableWrapper()", span="1486-1486"];
m7_406 [cluster="object.ToString()", file="JsonTextReader.cs", label="Entry object.ToString()", span="0-0"];
m7_335 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="177-177"];
m7_542 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1553-1553"];
m7_543 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JsonTextReader.cs", label="Name == null", span="1555-1555"];
m7_545 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JsonTextReader.cs", label="return Name.GetHashCode();", span="1558-1558"];
m7_544 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JsonTextReader.cs", label="return 0;", span="1556-1556"];
m7_546 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetHashCode()", span="1553-1553"];
m7_170 [cluster="Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Purchase.Purchase()", span="1478-1478"];
m7_506 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDynamic.PropertyItemTypeNameHandlingDynamic()", span="1570-1570"];
m7_144 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="504-504"];
m7_149 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JsonTextReader.cs", label="Assert.AreEqual(''Name!'', person.Name)", span="522-522"];
m7_147 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (Person), p)", span="518-518"];
m7_146 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JsonTextReader.cs", label="object p = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          Binder = new CustomSerializationBinder()\r\n        })", span="512-516"];
m7_148 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JsonTextReader.cs", label="Person person = (Person) p", span="520-520"];
m7_145 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JsonTextReader.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!''''\r\n}''", span="506-510"];
m7_150 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeUsingCustomBinder()", span="504-504"];
m7_405 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameObject.TypeNameObject()", span="1608-1608"];
m7_371 [cluster="Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Employee.Employee()", span="61-61"];
m7_226 [cluster="System.IO.StringWriter.ToString()", file="JsonTextReader.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m7_547 [cluster="string.GetHashCode()", file="JsonTextReader.cs", label="Entry string.GetHashCode()", span="0-0"];
m7_169 [cluster="Newtonsoft.Json.Tests.Serialization.Customer.Customer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Customer.Customer()", span="1473-1473"];
m7_155 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="535-535"];
m7_157 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", color=green, community=0, file="JsonTextReader.cs", label="IList<object> values = new List<object>\r\n        {\r\n          new Customer\r\n            {\r\n              Name = ''Caroline Customer''\r\n            },\r\n          new Purchase\r\n            {\r\n              ProductName = ''Elbow Grease'',\r\n              Price = 5.99m,\r\n              Quantity = 1\r\n            }\r\n        }", prediction=3, span="539-551"];
m7_156 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="TypeNameSerializationBinder binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')", span="537-537"];
m7_158 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", color=green, community=0, file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Auto,\r\n          Binder = binder\r\n        })", prediction=4, span="553-557"];
m7_159 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", color=green, community=0, file="JsonTextReader.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Customer'''',\r\n    ''''Name'''': ''''Caroline Customer''''\r\n  },\r\n  {\r\n    ''''$type'''': ''''Purchase'''',\r\n    ''''ProductName'''': ''''Elbow Grease'''',\r\n    ''''Price'''': 5.99,\r\n    ''''Quantity'''': 1\r\n  }\r\n]'', json)", prediction=5, span="573-584"];
m7_160 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="IList<object> newValues = JsonConvert.DeserializeObject<IList<object>>(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Auto,\r\n          Binder = new TypeNameSerializationBinder(''Newtonsoft.Json.Tests.Serialization.{0}, Newtonsoft.Json.Tests'')\r\n        })", span="586-590"];
m7_163 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="Assert.AreEqual(''Caroline Customer'', customer.Name)", span="594-594"];
m7_166 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="Assert.AreEqual(''Elbow Grease'', purchase.ProductName)", span="598-598"];
m7_161 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (Customer), newValues[0])", span="592-592"];
m7_164 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (Purchase), newValues[1])", span="596-596"];
m7_162 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="Customer customer = (Customer) newValues[0]", span="593-593"];
m7_165 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="Purchase purchase = (Purchase) newValues[1]", span="597-597"];
m7_167 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeUsingCustomBinder()", span="535-535"];
m7_181 [cluster="string.Format(string, object)", file="JsonTextReader.cs", label="Entry string.Format(string, object)", span="0-0"];
m7_49 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", span="215-215"];
m7_52 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", color=green, community=0, file="JsonTextReader.cs", label="string json = @''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''\/Date(978134400000)\/'''',\r\n    ''''LastModified'''': ''''\/Date(978134400000)\/''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]''", prediction=6, span="220-240"];
m7_50 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="string employeeRef = typeof (EmployeeReference).AssemblyQualifiedName", span="217-217"];
m7_51 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="string personRef = typeof (Person).AssemblyQualifiedName", span="218-218"];
m7_53 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", color=green, community=0, file="JsonTextReader.cs", label="List<object> values = (List<object>) JsonConvert.DeserializeObject(json, typeof (List<object>), new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n        })", prediction=7, span="242-246"];
m7_54 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(4, values.Count)", span="248-248"];
m7_55 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="EmployeeReference e = (EmployeeReference) values[0]", span="250-250"];
m7_56 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Person p = (Person) values[1]", span="251-251"];
m7_62 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(''String!'', values[2])", span="260-260"];
m7_63 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual((long) int.MinValue, values[3])", span="261-261"];
m7_57 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(''Bob'', e.Name)", span="253-253"];
m7_58 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(''Frank'', e.Manager.Name)", span="254-254"];
m7_59 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(null, p.Name)", span="256-256"];
m7_60 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.BirthDate)", span="257-257"];
m7_61 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc), p.LastModified)", span="258-258"];
m7_64 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericObjectListWithTypeName()", span="215-215"];
m7_386 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameDictionary<T>.TypeNameDictionary()", span="1603-1603"];
m7_14 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="245-245"];
m7_479 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m7_81 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="831-831"];
m7_65 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", span="265-265"];
m7_68 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="JsonTextReader.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="270-275"];
m7_69 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="JsonTextReader.cs", label="JsonConvert.DeserializeObject(json, typeof (Person), new JsonSerializerSettings\r\n          {\r\n            TypeNameHandling = TypeNameHandling.Objects,\r\n            TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n          })", span="279-283"];
m7_66 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="JsonTextReader.cs", label="string employeeRef = typeof (EmployeeReference).AssemblyQualifiedName", span="267-267"];
m7_67 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="JsonTextReader.cs", label="string personRef = typeof (Person).AssemblyQualifiedName", span="268-268"];
m7_70 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="JsonTextReader.cs", label=JsonSerializationException, span="285-285"];
m7_71 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="JsonTextReader.cs", label="Assert.IsTrue(ex.Message.StartsWith(@''Type specified in JSON ''' + employeeRef + @''' is not compatible with ''' + personRef + @'''.''))", span="287-287"];
m7_72 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeWithBadTypeName()", span="265-265"];
m7_526 [cluster="System.Runtime.Serialization.SerializationInfo.GetString(string)", file="JsonTextReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.GetString(string)", span="0-0"];
m7_106 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", span="389-389"];
m7_107 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", color=green, community=0, file="JsonTextReader.cs", label="string containerTypeName = typeof (Container).AssemblyQualifiedName", prediction=8, span="391-391"];
m7_108 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", color=green, community=0, file="JsonTextReader.cs", label="string productListTypeName = typeof (List<Product>).AssemblyQualifiedName", prediction=9, span="392-392"];
m7_111 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + containerTypeName + @'''''',\r\n  ''''In'''': {\r\n    ''''$type'''': '''''' + productListTypeName + @'''''',\r\n    ''''$values'''': []\r\n  },\r\n  ''''Out'''': {\r\n    ''''$type'''': '''''' + productListTypeName + @'''''',\r\n    ''''$values'''': []\r\n  }\r\n}'', json)", span="408-418"];
m7_109 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", color=green, community=0, file="JsonTextReader.cs", label="Container container = new Container\r\n        {\r\n          In = new List<Product>(),\r\n          Out = new List<Product>()\r\n        }", prediction=10, span="394-398"];
m7_110 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(container, Formatting.Indented,\r\n                                                new JsonSerializerSettings\r\n                                                  {\r\n                                                    NullValueHandling = NullValueHandling.Ignore,\r\n                                                    TypeNameHandling = TypeNameHandling.All,\r\n                                                    TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n                                                  })", span="400-406"];
m7_112 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeObjectWithMultipleGenericLists()", span="389-389"];
m7_183 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="626-626"];
m7_187 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="testObject.AnotherTestMember.Add(1, new List<ContentBaseClass>())", span="631-631"];
m7_202 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="Assert.AreEqual(expected, json)", span="672-672"];
m7_212 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="Assert.AreEqual(1, anotherTestObject.AnotherTestMember.Count)", span="690-690"];
m7_215 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="Assert.AreEqual(1, list.Count)", span="695-695"];
m7_210 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (ContentSubClass), anotherTestObject.TestMember)", span="688-688"];
m7_211 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (Dictionary<int, IList<ContentBaseClass>>), anotherTestObject.AnotherTestMember)", span="689-689"];
m7_214 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (List<ContentBaseClass>), list)", span="694-694"];
m7_216 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (ContentSubClass), list[0])", span="696-696"];
m7_198 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="string contentSubClassRef = ReflectionUtils.GetTypeName(typeof (ContentSubClass), FormatterAssemblyStyle.Simple)", span="648-648"];
m7_199 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="string dictionaryRef = ReflectionUtils.GetTypeName(typeof (Dictionary<int, IList<ContentBaseClass>>), FormatterAssemblyStyle.Simple)", span="649-649"];
m7_200 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="string listRef = ReflectionUtils.GetTypeName(typeof (List<ContentBaseClass>), FormatterAssemblyStyle.Simple)", span="650-650"];
m7_186 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="testObject.AnotherTestMember = new Dictionary<int, IList<ContentBaseClass>>()", span="630-630"];
m7_184 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="HolderClass testObject = new HolderClass()", span="628-628"];
m7_188 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="testObject.AnotherTestMember[1].Add(new ContentSubClass(''Second One''))", span="632-632"];
m7_197 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="string json = sw.ToString()", span="646-646"];
m7_201 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="string expected = @''{\r\n  ''''TestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''First One''''\r\n  },\r\n  ''''AnotherTestMember'''': {\r\n    ''''$type'''': '''''' + dictionaryRef + @'''''',\r\n    ''''1'''': [\r\n      {\r\n        ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n        ''''SomeString'''': ''''Second One''''\r\n      }\r\n    ]\r\n  },\r\n  ''''AThirdTestMember'''': {\r\n    ''''$type'''': '''''' + contentSubClassRef + @'''''',\r\n    ''''SomeString'''': ''''Third One''''\r\n  }\r\n}''", span="652-670"];
m7_203 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="StringReader sr = new StringReader(json)", span="674-674"];
m7_208 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="anotherTestObject = deserializingTester.Deserialize<HolderClass>(jsonReader)", span="684-684"];
m7_213 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="IList<ContentBaseClass> list = anotherTestObject.AnotherTestMember[1]", span="692-692"];
m7_209 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="Assert.IsNotNull(anotherTestObject)", span="687-687"];
m7_185 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="testObject.TestMember = new ContentSubClass(''First One'')", span="629-629"];
m7_189 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="testObject.AThirdTestMember = new ContentSubClass(''Third One'')", span="633-633"];
m7_196 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="serializingTester.Serialize(jsonWriter, testObject)", span="643-643"];
m7_192 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="StringWriter sw = new StringWriter()", span="638-638"];
m7_204 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="JsonSerializer deserializingTester = new JsonSerializer()", span="676-676"];
m7_206 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="680-680"];
m7_207 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="deserializingTester.TypeNameHandling = TypeNameHandling.Auto", span="682-682"];
m7_190 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="JsonSerializer serializingTester = new JsonSerializer()", span="635-635"];
m7_195 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="serializingTester.TypeNameHandling = TypeNameHandling.Auto", span="642-642"];
m7_193 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="639-639"];
m7_191 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="serializingTester.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="636-636"];
m7_205 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="HolderClass anotherTestObject", span="678-678"];
m7_194 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="jsonWriter.Formatting = Formatting.Indented", span="641-641"];
m7_217 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CollectionWithAbstractItems()", span="626-626"];
m7_314 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="940-940"];
m7_323 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="Assert.AreEqual(e, f, ''Objects should be equal after round trip json serialization'')", span="961-961"];
m7_322 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="SerializableWrapper f = serializer.Deserialize<SerializableWrapper>(new JsonTextReader(new StringReader(writer.ToString())))", span="958-958"];
m7_315 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="Console.WriteLine(''Type Name Handling: '' + flag.ToString())", span="942-942"];
m7_318 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="serializer.TypeNameHandling = flag", span="947-947"];
m7_319 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="serializer.Serialize(new JsonTextWriter(writer), e)", span="950-950"];
m7_316 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="StringWriter writer = new StringWriter()", span="943-943"];
m7_317 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="JsonSerializer serializer = new JsonSerializer()", span="946-946"];
m7_321 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="Console.WriteLine()", span="952-952"];
m7_320 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="Console.WriteLine(writer.ToString())", span="951-951"];
m7_324 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TestJsonSerializationRoundTrip(Newtonsoft.Json.Tests.Serialization.SerializableWrapper, Newtonsoft.Json.TypeNameHandling)", span="940-940"];
m7_387 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1108-1108"];
m7_396 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="Assert.AreEqual(expected, json)", span="1131-1131"];
m7_400 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="Assert.AreEqual(1, ((TestComponentSimple) o2.Object1).MyProperty)", span="1137-1137"];
m7_403 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''MyProperty'''': 2147483647\r\n}'', o2.ObjectNotHandled.ToString())", span="1140-1142"];
m7_397 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="TypeNameObject o2 = JsonConvert.DeserializeObject<TypeNameObject>(json)", span="1133-1133"];
m7_399 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), o2.Object1)", span="1136-1136"];
m7_401 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (long), o2.Object2)", span="1138-1138"];
m7_402 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (JObject), o2.ObjectNotHandled)", span="1139-1139"];
m7_394 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1118-1118"];
m7_395 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="string expected = @''{\r\n  ''''Object1'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Object2'''': 123,\r\n  ''''ObjectNotHandled'''': {\r\n    ''''MyProperty'''': 2147483647\r\n  },\r\n  ''''String'''': ''''String!'''',\r\n  ''''Integer'''': 2147483647\r\n}''", span="1119-1130"];
m7_398 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="Assert.IsNotNull(o2)", span="1134-1134"];
m7_388 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="TypeNameObject o1 = new TypeNameObject()", span="1110-1110"];
m7_393 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="o1.Integer = int.MaxValue", span="1116-1116"];
m7_389 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="o1.Object1 = new TestComponentSimple {MyProperty = 1}", span="1112-1112"];
m7_391 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="o1.ObjectNotHandled = new TestComponentSimple {MyProperty = int.MaxValue}", span="1114-1114"];
m7_390 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="o1.Object2 = 123", span="1113-1113"];
m7_392 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="o1.String = ''String!''", span="1115-1115"];
m7_404 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameObjectItems()", span="1108-1108"];
m7_255 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, Newtonsoft.Json.JsonSerializerSettings)", span="845-845"];
m7_182 [cluster="System.Type.GetType(string, bool)", file="JsonTextReader.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m7_33 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string, System.Type, Newtonsoft.Json.JsonSerializerSettings)", span="941-941"];
m7_273 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="842-842"];
m7_274 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="count == 0", span="844-844"];
m7_276 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="yield return value;", span="846-846"];
m7_277 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="var nextInLine = next", span="848-848"];
m7_275 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="yield break;", span="845-845"];
m7_278 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="nextInLine != null", span="849-849"];
m7_279 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="nextInLine.count != 0", span="851-851"];
m7_280 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="yield return nextInLine.value;", span="852-852"];
m7_281 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="nextInLine = nextInLine.next", span="853-853"];
m7_282 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.GetEnumerator()", span="842-842"];
m7_477 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingObject.PropertyItemTypeNameHandlingObject()", span="1563-1563"];
m7_220 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m7_407 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1146-1146"];
m7_409 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="c1.Data = new List<object>\r\n        {\r\n          1,\r\n          ''two'',\r\n          new TestComponentSimple {MyProperty = 1}\r\n        }", span="1149-1154"];
m7_411 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    1,\r\n    ''''two'''',\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    }\r\n  ]\r\n}'', json)", span="1157-1166"];
m7_413 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(3, c2.Data.Count)", span="1169-1169"];
m7_418 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1175-1175"];
m7_412 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1168-1168"];
m7_414 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (long), c2.Data[0])", span="1171-1171"];
m7_415 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (string), c2.Data[1])", span="1172-1172"];
m7_416 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), c2.Data[2])", span="1173-1173"];
m7_410 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1156-1156"];
m7_408 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling()", span="1148-1148"];
m7_417 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="TestComponentSimple c = (TestComponentSimple) c2.Data[2]", span="1174-1174"];
m7_419 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandling()", span="1146-1146"];
m7_420 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandling.PropertyItemTypeNameHandling()", span="1591-1591"];
m7_34 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", span="144-144"];
m7_38 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (Cookie), cookie)", span="158-158"];
m7_35 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="JsonTextReader.cs", label="string cookieRef = ReflectionUtils.GetTypeName(typeof (Cookie), FormatterAssemblyStyle.Simple)", span="146-146"];
m7_37 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="JsonTextReader.cs", label="object cookie = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects\r\n        })", span="153-156"];
m7_36 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="JsonTextReader.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + cookieRef + @''''''\r\n}''", span="148-151"];
m7_39 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameFromGacAssembly()", span="144-144"];
m7_256 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="804-804"];
m7_260 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''''' + productClassRef + @'''''',\r\n  ''''$values'''': []\r\n}'', json)", span="812-815"];
m7_257 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JsonTextReader.cs", label="string productClassRef = ReflectionUtils.GetTypeName(typeof (Product[]), FormatterAssemblyStyle.Simple)", span="806-806"];
m7_259 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(products, Formatting.Indented, new JsonSerializerSettings {TypeNameHandling = TypeNameHandling.All})", span="810-810"];
m7_258 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JsonTextReader.cs", label="CustomEnumerable<Product> products = new CustomEnumerable<Product>()", span="808-808"];
m7_261 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializingIEnumerableOfTShouldRetainGenericTypeInfo()", span="804-804"];
m7_507 [cluster="Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Linq.DynamicDictionary.DynamicDictionary()", span="733-733"];
m7_530 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonTextReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m7_218 [cluster="Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.HolderClass.HolderClass()", span="31-31"];
m7_540 [cluster="object.ReferenceEquals(object, object)", file="JsonTextReader.cs", label="Entry object.ReferenceEquals(object, object)", span="0-0"];
m7_229 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize<T>(Newtonsoft.Json.JsonReader)", span="516-516"];
m7_305 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="918-918"];
m7_307 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JsonTextReader.cs", label="SerializableWrapper w = new SerializableWrapper\r\n        {\r\n          Content = e\r\n        }", span="923-926"];
m7_306 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JsonTextReader.cs", label="IExample e = new Example(''Rob'')", span="921-921"];
m7_308 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JsonTextReader.cs", label="this.TestJsonSerializationRoundTrip(w, TypeNameHandling.All)", span="935-935"];
m7_309 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JsonTextReader.cs", label="this.TestJsonSerializationRoundTrip(w, TypeNameHandling.Auto)", span="936-936"];
m7_310 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JsonTextReader.cs", label="this.TestJsonSerializationRoundTrip(w, TypeNameHandling.Objects)", span="937-937"];
m7_311 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ISerializableTypeNameHandlingTest()", span="918-918"];
m7_283 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="857-857"];
m7_284 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextReader.cs", label="return GetEnumerator();", span="859-859"];
m7_285 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="857-857"];
m7_0 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="62-62"];
m7_2 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", color=green, community=0, file="JsonTextReader.cs", label="wrapper.Array = new List<EmployeeReference>\r\n        {\r\n          new EmployeeReference()\r\n        }", prediction=11, span="65-68"];
m7_1 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="JsonTextReader.cs", label="Wrapper wrapper = new Wrapper()", span="64-64"];
m7_3 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="JsonTextReader.cs", label="wrapper.Dictionary = new Dictionary<string, EmployeeReference>\r\n        {\r\n          {''First'', new EmployeeReference()}\r\n        }", span="69-72"];
m7_5 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", color=green, community=0, file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Array'''': [\r\n    {\r\n      ''''$id'''': ''''1'''',\r\n      ''''Name'''': null,\r\n      ''''Manager'''': null\r\n    }\r\n  ],\r\n  ''''Dictionary'''': {\r\n    ''''First'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''Name'''': null,\r\n      ''''Manager'''': null\r\n    }\r\n  }\r\n}'', json)", prediction=12, span="79-94"];
m7_4 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(wrapper, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Auto\r\n        })", span="74-77"];
m7_6 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", color=green, community=0, file="JsonTextReader.cs", label="Wrapper w2 = JsonConvert.DeserializeObject<Wrapper>(json)", prediction=13, span="96-96"];
m7_7 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", color=green, community=0, file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (List<EmployeeReference>), w2.Array)", prediction=14, span="97-97"];
m7_8 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", color=green, community=0, file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (Dictionary<string, EmployeeReference>), w2.Dictionary)", prediction=13, span="98-98"];
m7_9 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeWrapper()", span="62-62"];
m7_527 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1532-1532"];
m7_528 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="info.AddValue(''name'', this.Name)", span="1534-1534"];
m7_529 [cluster="Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1532-1532"];
m7_421 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1179-1179"];
m7_422 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandling c1 = new PropertyItemTypeNameHandling\r\n        {\r\n          Data = new List<object>\r\n            {\r\n              new TestComponentSimple {MyProperty = 1},\r\n              new List<object>\r\n                {\r\n                  new List<object>\r\n                    {\r\n                      new List<object>()\r\n                    }\r\n                }\r\n            }\r\n        }", span="1181-1194"];
m7_424 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n}'', json)", span="1197-1212"];
m7_426 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1215-1215"];
m7_433 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1241-1241"];
m7_439 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="Assert.AreEqual(1, (int) o[''MyProperty''])", span="1248-1248"];
m7_425 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandling c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1214-1214"];
m7_432 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandling>(json)", span="1240-1240"];
m7_427 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), c2.Data[0])", span="1217-1217"];
m7_428 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (List<object>), c2.Data[1])", span="1218-1218"];
m7_430 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (JArray), c[0])", span="1220-1220"];
m7_434 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), c2.Data[0])", span="1243-1243"];
m7_435 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (List<object>), c2.Data[1])", span="1244-1244"];
m7_437 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (JObject), c[0])", span="1246-1246"];
m7_423 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1196-1196"];
m7_431 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="json = @''{\r\n  ''''Data'''': [\r\n    {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}''", span="1222-1238"];
m7_438 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="JObject o = (JObject) c[0]", span="1247-1247"];
m7_429 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="List<object> c = (List<object>) c2.Data[1]", span="1219-1219"];
m7_436 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="c = (List<object>) c2.Data[1]", span="1245-1245"];
m7_440 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedCollections()", span="1179-1179"];
m7_228 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="70-70"];
m7_105 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="910-910"];
m7_73 [cluster="string.StartsWith(string)", file="JsonTextReader.cs", label="Entry string.StartsWith(string)", span="0-0"];
m7_113 [cluster="Newtonsoft.Json.Tests.TestObjects.Container.Container()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.Container.Container()", span="29-29"];
m7_26 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="122-122"];
m7_31 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(''Name!'', ((EmployeeReference) employee).Name)", span="139-139"];
m7_30 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (EmployeeReference), employee)", span="138-138"];
m7_27 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="JsonTextReader.cs", label="string employeeRef = ReflectionUtils.GetTypeName(typeof (EmployeeReference), FormatterAssemblyStyle.Simple)", span="124-124"];
m7_29 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="JsonTextReader.cs", label="object employee = JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects\r\n        })", span="133-136"];
m7_28 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="JsonTextReader.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="126-131"];
m7_32 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeName()", span="122-122"];
m7_461 [cluster="Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.PropertyItemTypeNameHandlingDictionary.PropertyItemTypeNameHandlingDictionary()", span="1585-1585"];
m7_372 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1081-1081"];
m7_378 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''First'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 1\r\n  },\r\n  ''''Second'''': ''''String!'''',\r\n  ''''Third'''': 9223372036854775807\r\n}'', json)", span="1089-1096"];
m7_380 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="Assert.AreEqual(3, l2.Count)", span="1099-1099"];
m7_382 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="Assert.AreEqual(1, ((TestComponentSimple) l2[''First'']).MyProperty)", span="1102-1102"];
m7_379 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="TypeNameDictionary<object> l2 = JsonConvert.DeserializeObject<TypeNameDictionary<object>>(json)", span="1098-1098"];
m7_381 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), l2[''First''])", span="1101-1101"];
m7_383 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (string), l2[''Second''])", span="1103-1103"];
m7_384 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (long), l2[''Third''])", span="1104-1104"];
m7_377 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1088-1088"];
m7_373 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="TypeNameDictionary<object> l = new TypeNameDictionary<object>()", span="1083-1083"];
m7_376 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="l.Add(''Third'', long.MaxValue)", span="1086-1086"];
m7_374 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="l.Add(''First'', new TestComponentSimple {MyProperty = 1})", span="1084-1084"];
m7_375 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="l.Add(''Second'', ''String!'')", span="1085-1085"];
m7_385 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameDictionary()", span="1081-1081"];
m7_328 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="967-967"];
m7_331 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''$type'''': '''':::MESSAGE:::, AssemblyName'''',\r\n  ''''Address'''': ''''jamesnk@testtown.com'''',\r\n  ''''Body'''': {\r\n    ''''$type'''': '''':::VERSION:::, AssemblyName'''',\r\n    ''''Major'''': 1,\r\n    ''''Minor'''': 2,\r\n    ''''Build'''': 3,\r\n    ''''Revision'''': 4,\r\n    ''''MajorRevision'''': 0,\r\n    ''''MinorRevision'''': 4\r\n  }\r\n}'', json)", span="988-1000"];
m7_330 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(message, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.All,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Full,\r\n          Binder = new MetroBinder(),\r\n          ContractResolver = new DefaultContractResolver\r\n            {\r\n#if !(SILVERLIGHT || NETFX_CORE || PORTABLE)\r\n              IgnoreSerializableAttribute = true\r\n#endif\r\n            }\r\n        })", span="975-986"];
m7_329 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JsonTextReader.cs", label="Message message = new Message\r\n        {\r\n          Address = ''jamesnk@testtown.com'',\r\n          Body = new Version(1, 2, 3, 4)\r\n        }", span="969-973"];
m7_332 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializationBinderWithFullName()", span="967-967"];
m7_95 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="357-357"];
m7_101 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(''xyz'', request.CorrelationId)", span="383-383"];
m7_102 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(2, request.RequestData.Count)", span="384-384"];
m7_103 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(''siedemnaście'', request.RequestData[''Id''])", span="385-385"];
m7_99 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (SendHttpRequest), message)", span="380-380"];
m7_98 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="ICorrelatedMessage message = JsonConvert.DeserializeObject<ICorrelatedMessage>(json, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n        })", span="374-378"];
m7_100 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="SendHttpRequest request = (SendHttpRequest) message", span="382-382"];
m7_97 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="string json = @''{\r\n''''$type'''': '''''' + typeName + @'''''',\r\n''''RequestData'''': {\r\n''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib,Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089],[System.String, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'''',\r\n''''Id'''': ''''siedemnaście'''',\r\n''''X'''': ''''323''''\r\n},\r\n''''Method'''': ''''GET'''',\r\n''''Url'''': ''''http://www.onet.pl'''',\r\n''''RequestEncoding'''': ''''UTF-8'''',\r\n''''CorrelationId'''': ''''xyz''''\r\n}''", span="361-372"];
m7_96 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="string typeName = typeof (SendHttpRequest).AssemblyQualifiedName", span="359-359"];
m7_104 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeGenericTypeName()", span="357-357"];
m7_15 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, Newtonsoft.Json.JsonSerializerSettings)", span="766-766"];
m7_286 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="877-877"];
m7_296 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="Assert.AreEqual(output, @''{\r\n  ''''$type'''': '''''' + carClassRef + @'''''',\r\n  ''''Year'''': ''''2000-10-05T01:01:01Z'''',\r\n  ''''Objects'''': {\r\n    ''''$type'''': ''''System.Object[], mscorlib'''',\r\n    ''''$values'''': [\r\n      {\r\n        ''''$type'''': ''''System.Byte[], mscorlib'''',\r\n        ''''$value'''': ''''S0FSSVJB''''\r\n      },\r\n      ''''prueba''''\r\n    ]\r\n  }\r\n}'')", span="892-905"];
m7_295 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="string carClassRef = ReflectionUtils.GetTypeName(typeof (Car), FormatterAssemblyStyle.Simple)", span="890-890"];
m7_291 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="JsonSerializerSettings jsonSettings = new JsonSerializerSettings()", span="884-884"];
m7_294 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="string output = JsonConvert.SerializeObject(testerObject, Formatting.Indented, jsonSettings)", span="888-888"];
m7_297 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="Car obj = JsonConvert.DeserializeObject<Car>(output, jsonSettings)", span="906-906"];
m7_290 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="testerObject.Objects = new object[] {data, ''prueba''}", span="882-882"];
m7_292 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="jsonSettings.NullValueHandling = NullValueHandling.Ignore", span="885-885"];
m7_293 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="jsonSettings.TypeNameHandling = TypeNameHandling.All", span="886-886"];
m7_287 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="Car testerObject = new Car()", span="879-879"];
m7_288 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="testerObject.Year = new DateTime(2000, 10, 5, 1, 1, 1, DateTimeKind.Utc)", span="880-880"];
m7_298 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="Assert.IsNotNull(obj)", span="908-908"];
m7_299 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="Assert.IsTrue(obj.Objects[0] is byte[])", span="910-910"];
m7_300 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="byte[] d = (byte[]) obj.Objects[0]", span="912-912"];
m7_289 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="byte[] data = new byte[] {75, 65, 82, 73, 82, 65}", span="881-881"];
m7_301 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="CollectionAssert.AreEquivalent(data, d)", span="913-913"];
m7_302 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.ByteArrays()", span="877-877"];
m7_82 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="389-389"];
m7_10 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Wrapper.Wrapper()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.Wrapper.Wrapper()", span="55-55"];
m7_126 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameProperty.TypeNameProperty()", span="421-421"];
m7_225 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="596-596"];
m7_222 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="391-391"];
m7_40 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="163-163"];
m7_43 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="List<object> values = new List<object>\r\n        {\r\n          new EmployeeReference\r\n            {\r\n              Name = ''Bob'',\r\n              Manager = new EmployeeReference {Name = ''Frank''}\r\n            },\r\n          new Person\r\n            {\r\n              Department = ''Department'',\r\n              BirthDate = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc),\r\n              LastModified = new DateTime(2000, 12, 30, 0, 0, 0, DateTimeKind.Utc)\r\n            },\r\n          ''String!'',\r\n          int.MinValue\r\n        }", span="168-183"];
m7_45 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$id'''': ''''1'''',\r\n    ''''$type'''': '''''' + employeeRef + @'''''',\r\n    ''''Name'''': ''''Bob'''',\r\n    ''''Manager'''': {\r\n      ''''$id'''': ''''2'''',\r\n      ''''$type'''': '''''' + employeeRef + @'''''',\r\n      ''''Name'''': ''''Frank'''',\r\n      ''''Manager'''': null\r\n    }\r\n  },\r\n  {\r\n    ''''$type'''': '''''' + personRef + @'''''',\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''2000-12-30T00:00:00Z'''',\r\n    ''''LastModified'''': ''''2000-12-30T00:00:00Z''''\r\n  },\r\n  ''''String!'''',\r\n  -2147483648\r\n]'', json)", span="191-211"];
m7_44 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(values, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects,\r\n          TypeNameAssemblyFormat = FormatterAssemblyStyle.Full\r\n        })", span="185-189"];
m7_42 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="string personRef = typeof (Person).AssemblyQualifiedName", span="166-166"];
m7_41 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="string employeeRef = typeof (EmployeeReference).AssemblyQualifiedName", span="165-165"];
m7_46 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.SerializeGenericObjectListWithTypeName()", span="163-163"];
m7_254 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.UrlStatus.UrlStatus()", span="726-726"];
m7_353 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JsonTextReader.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m7_75 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="292-292"];
m7_79 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}'', o.ToString())", span="305-308"];
m7_78 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonTextReader.cs", label="JObject o = (JObject) JsonConvert.DeserializeObject(json)", span="303-303"];
m7_77 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonTextReader.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="296-301"];
m7_76 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonTextReader.cs", label="string employeeRef = typeof (EmployeeReference).AssemblyQualifiedName", span="294-294"];
m7_80 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameWithNoTypeNameHandling()", span="292-292"];
m7_334 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.MetroBinder.MetroBinder()", span="1003-1003"];
m7_478 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTestObject.TypeNameHandlingTestObject()", span="1577-1577"];
m7_326 [cluster="System.Console.WriteLine(string)", file="JsonTextReader.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m7_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_16 [cluster="Unk.AreEqual", file="JsonTextReader.cs", label="Entry Unk.AreEqual", span=""];
m7_304 [cluster="Unk.AreEquivalent", file="JsonTextReader.cs", label="Entry Unk.AreEquivalent", span=""];
m7_230 [cluster="Unk.IsNotNull", file="JsonTextReader.cs", label="Entry Unk.IsNotNull", span=""];
m7_221 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonTextReader.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m7_173 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="610-610"];
m7_174 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="JsonTextReader.cs", label="assemblyName = null", span="612-612"];
m7_175 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="JsonTextReader.cs", label="typeName = serializedType.Name", span="613-613"];
m7_176 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToName(System.Type, out string, out string)", span="610-610"];
m7_83 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="312-312"];
m7_84 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="JsonTextReader.cs", label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Manager'''': null\r\n}''", span="314-319"];
m7_85 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="JsonTextReader.cs", label="ExceptionAssert.Throws<JsonSerializationException>(\r\n        ''Type specified in JSON 'Newtonsoft.Json.Tests.TestObjects.Employee' was not resolved. Path '$type', line 3, position 56.'',\r\n        () =>\r\n          {\r\n            JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n              {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n              });\r\n          })", span="321-329"];
m7_86 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.DeserializeTypeNameOnly()", span="312-312"];
m7_168 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="605-605"];
m7_171 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", color=green, community=0, file="JsonTextReader.cs", label="TypeFormat = typeFormat", prediction=16, span="607-607"];
m7_172 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.TypeNameSerializationBinder(string)", span="605-605"];
m7_262 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="832-832"];
m7_268 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="JsonTextReader.cs", label="count = 0", span="834-834"];
m7_269 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable()", span="832-832"];
m7_224 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="110-110"];
m7_88 [cluster="lambda expression", file="JsonTextReader.cs", label="Entry lambda expression", span="323-329"];
m7_89 [cluster="lambda expression", file="JsonTextReader.cs", label="JsonConvert.DeserializeObject(json, null, new JsonSerializerSettings\r\n              {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n              })", span="325-328"];
m7_90 [cluster="lambda expression", file="JsonTextReader.cs", label="Exit lambda expression", span="323-329"];
m7_370 [cluster="Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TestComponentSimple.TestComponentSimple()", span="7545-7545"];
m7_25 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetTypeName(System.Type, System.Runtime.Serialization.Formatters.FormatterAssemblyStyle)", span="164-164"];
m7_327 [cluster="System.Console.WriteLine()", file="JsonTextReader.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m7_344 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1023-1023"];
m7_350 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JsonTextReader.cs", label="Assert.AreEqual(@''[\r\n  1,\r\n  2,\r\n  3\r\n]'', json)", span="1031-1035"];
m7_349 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1030-1030"];
m7_345 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JsonTextReader.cs", label="TypeNameList<int> l = new TypeNameList<int>()", span="1025-1025"];
m7_348 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JsonTextReader.cs", label="l.Add(3)", span="1028-1028"];
m7_346 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JsonTextReader.cs", label="l.Add(1)", span="1026-1026"];
m7_347 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JsonTextReader.cs", label="l.Add(2)", span="1027-1027"];
m7_351 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameIntList()", span="1023-1023"];
m7_114 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="430-430"];
m7_117 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", color=green, community=0, file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(typeNameProperty, Formatting.Indented)", prediction=17, span="443-443"];
m7_116 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="TypeNameProperty typeNameProperty = new TypeNameProperty\r\n        {\r\n          Name = ''Name!'',\r\n          Value = new TypeNameProperty\r\n            {\r\n              Name = ''Nested!''\r\n            }\r\n        }", span="434-441"];
m7_118 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Value'''': {\r\n    ''''$type'''': '''''' + typeNamePropertyRef + @'''''',\r\n    ''''Name'''': ''''Nested!'''',\r\n    ''''Value'''': null\r\n  }\r\n}'', json)", span="445-452"];
m7_119 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="TypeNameProperty deserialized = JsonConvert.DeserializeObject<TypeNameProperty>(json)", span="454-454"];
m7_120 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(''Name!'', deserialized.Name)", span="455-455"];
m7_123 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(''Nested!'', nested.Name)", span="459-459"];
m7_124 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="Assert.AreEqual(null, nested.Value)", span="460-460"];
m7_121 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (TypeNameProperty), deserialized.Value)", span="456-456"];
m7_115 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="string typeNamePropertyRef = ReflectionUtils.GetTypeName(typeof (TypeNameProperty), FormatterAssemblyStyle.Simple)", span="432-432"];
m7_122 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="TypeNameProperty nested = (TypeNameProperty) deserialized.Value", span="458-458"];
m7_125 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteObjectTypeNameForProperty()", span="430-430"];
m7_18 [cluster="Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.CustomAssert.IsInstanceOfType(System.Type, object)", span="96-96"];
m7_227 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReader.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m7_19 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="102-102"];
m7_20 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", color=green, community=0, file="JsonTextReader.cs", label="string employeeRef = ReflectionUtils.GetTypeName(typeof (EmployeeReference), FormatterAssemblyStyle.Simple)", prediction=18, span="104-104"];
m7_21 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", color=green, community=0, file="JsonTextReader.cs", label="EmployeeReference employee = new EmployeeReference()", prediction=19, span="106-106"];
m7_23 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''$type'''': '''''' + employeeRef + @'''''',\r\n  ''''Name'''': null,\r\n  ''''Manager'''': null\r\n}'', json)", span="113-118"];
m7_22 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", color=green, community=0, file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(employee, Formatting.Indented, new JsonSerializerSettings\r\n        {\r\n          TypeNameHandling = TypeNameHandling.Objects\r\n        })", prediction=20, span="108-111"];
m7_24 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.WriteTypeNameForObjects()", span="102-102"];
m7_480 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1386-1386"];
m7_489 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1407-1420"];
m7_495 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="Assert.AreEqual(1, c.MyProperty)", span="1428-1428"];
m7_498 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1432-1432"];
m7_504 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="Assert.AreEqual(2, (int)o[''MyProperty''])", span="1454-1454"];
m7_490 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandlingDynamic d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1422-1422"];
m7_500 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="d2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDynamic>(json)", span="1450-1450"];
m7_488 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(d1, Formatting.Indented)", span="1406-1406"];
m7_494 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="TestComponentSimple c = (TestComponentSimple)data3.one", span="1427-1427"];
m7_496 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="dynamic data4 = data3.two", span="1430-1430"];
m7_497 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="JObject o = (JObject)data4.one", span="1431-1431"];
m7_499 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Linq.DynamicDictionary, Newtonsoft.Json.Tests'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 2\r\n      }\r\n    }\r\n  }\r\n}''", span="1434-1448"];
m7_503 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="o = (JObject)data4.one", span="1453-1453"];
m7_491 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="Assert.IsNotNull(d2)", span="1423-1423"];
m7_492 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="Assert.IsNotNull(d2.Data)", span="1424-1424"];
m7_493 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="dynamic data3 = d2.Data", span="1426-1426"];
m7_501 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="data3 = d2.Data", span="1451-1451"];
m7_481 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandlingDynamic d1 = new PropertyItemTypeNameHandlingDynamic()", span="1388-1388"];
m7_487 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="d1.Data = (DynamicDictionary)data", span="1404-1404"];
m7_483 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="data.one = new TestComponentSimple\r\n        {\r\n          MyProperty = 1\r\n        }", span="1391-1394"];
m7_485 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="data2.one = new TestComponentSimple\r\n        {\r\n          MyProperty = 2\r\n        }", span="1397-1400"];
m7_502 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="data4 = data3.two", span="1452-1452"];
m7_482 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="dynamic data = new DynamicDictionary()", span="1390-1390"];
m7_486 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="data.two = data2", span="1402-1402"];
m7_484 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="dynamic data2 = new DynamicDictionary()", span="1396-1396"];
m7_505 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingDynamic()", span="1386-1386"];
m7_333 [cluster="System.Version.Version(int, int, int, int)", file="JsonTextReader.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m7_87 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(string, System.Action)", span="121-121"];
m7_11 [cluster="System.Collections.Generic.List<T>.List()", file="JsonTextReader.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m7_325 [cluster="System.Enum.ToString()", file="JsonTextReader.cs", label="Entry System.Enum.ToString()", span="0-0"];
m7_223 [cluster="System.IO.StringWriter.StringWriter()", file="JsonTextReader.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m7_239 [cluster="Newtonsoft.Json.Tests.Serialization.Message.Message()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Message.Message()", span="1459-1459"];
m7_441 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1252-1252"];
m7_444 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''one'''': 1\r\n      }\r\n    }\r\n  }\r\n}'', json)", span="1276-1289"];
m7_446 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1292-1292"];
m7_453 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="Assert.AreEqual(2, c2.Data.Count)", span="1316-1316"];
m7_459 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="Assert.AreEqual(1, (int) o[''MyProperty''])", span="1324-1324"];
m7_445 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandlingDictionary c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1291-1291"];
m7_452 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="c2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingDictionary>(json)", span="1315-1315"];
m7_447 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), c2.Data[''one''])", span="1294-1294"];
m7_448 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1295-1295"];
m7_450 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (JObject), c[''one''])", span="1297-1297"];
m7_454 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), c2.Data[''one''])", span="1318-1318"];
m7_455 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof(Dictionary<string, object>), c2.Data[''two''])", span="1319-1319"];
m7_457 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), c[''one''])", span="1321-1321"];
m7_443 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(c1, Formatting.Indented)", span="1275-1275"];
m7_442 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandlingDictionary c1 = new PropertyItemTypeNameHandlingDictionary()\r\n        {\r\n          Data = new Dictionary<string, object>\r\n            {\r\n              {\r\n                ''one'', new TestComponentSimple {MyProperty = 1}\r\n              },\r\n              {\r\n                ''two'', new Dictionary<string, object>\r\n                  {\r\n                    {\r\n                      ''one'', new Dictionary<string, object>\r\n                      {\r\n                        {''one'', 1}\r\n                      }\r\n                    }\r\n                  }\r\n              }\r\n            }\r\n        }", span="1254-1273"];
m7_451 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="json = @''{\r\n  ''''Data'''': {\r\n    ''''one'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''two'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.Dictionary`2[[System.String, mscorlib],[System.Object, mscorlib]], mscorlib'''',\r\n      ''''one'''': {\r\n        ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n        ''''MyProperty'''': 1\r\n      }\r\n    }\r\n  }\r\n}''", span="1299-1313"];
m7_458 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="JObject o = (JObject) c[''one'']", span="1323-1323"];
m7_449 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="Dictionary<string, object> c = (Dictionary<string, object>)c2.Data[''two'']", span="1296-1296"];
m7_456 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="c = (Dictionary<string, object>)c2.Data[''two'']", span="1320-1320"];
m7_460 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingNestedDictionaries()", span="1252-1252"];
m7_462 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1328-1328"];
m7_463 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandlingObject o1 = new PropertyItemTypeNameHandlingObject\r\n        {\r\n          Data = new TypeNameHandlingTestObject\r\n            {\r\n              Prop1 = new List<object>\r\n                {\r\n                  new TestComponentSimple\r\n                    {\r\n                      MyProperty = 1\r\n                    }\r\n                },\r\n              Prop2 = new TestComponentSimple\r\n                {\r\n                  MyProperty = 1\r\n                },\r\n              Prop3 = 3,\r\n              Prop4 = new JObject()\r\n            }\r\n        }", span="1330-1348"];
m7_465 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="Assert.AreEqual(@''{\r\n  ''''Data'''': {\r\n    ''''Prop1'''': {\r\n      ''''$type'''': ''''System.Collections.Generic.List`1[[System.Object, mscorlib]], mscorlib'''',\r\n      ''''$values'''': [\r\n        {\r\n          ''''MyProperty'''': 1\r\n        }\r\n      ]\r\n    },\r\n    ''''Prop2'''': {\r\n      ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n      ''''MyProperty'''': 1\r\n    },\r\n    ''''Prop3'''': 3,\r\n    ''''Prop4'''': {}\r\n  }\r\n}'', json)", span="1351-1368"];
m7_475 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="Assert.AreEqual(1, (int)j[''MyProperty''])", span="1381-1381"];
m7_466 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="PropertyItemTypeNameHandlingObject o2 = JsonConvert.DeserializeObject<PropertyItemTypeNameHandlingObject>(json)", span="1370-1370"];
m7_469 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof(List<object>), o2.Data.Prop1)", span="1374-1374"];
m7_470 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof(TestComponentSimple), o2.Data.Prop2)", span="1375-1375"];
m7_471 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof(long), o2.Data.Prop3)", span="1376-1376"];
m7_472 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof(JObject), o2.Data.Prop4)", span="1377-1377"];
m7_464 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(o1, Formatting.Indented)", span="1350-1350"];
m7_474 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="JObject j = (JObject)o[0]", span="1380-1380"];
m7_467 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="Assert.IsNotNull(o2)", span="1371-1371"];
m7_468 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="Assert.IsNotNull(o2.Data)", span="1372-1372"];
m7_473 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="List<object> o = (List<object>)o2.Data.Prop1", span="1379-1379"];
m7_476 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.PropertyItemTypeNameHandlingObject()", span="1328-1328"];
m7_127 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="710-710"];
m7_312 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1522-1522"];
m7_521 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="JsonTextReader.cs", label="this.Name = name", span="1524-1524"];
m7_522 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(string)", span="1522-1522"];
m7_541 [cluster="string.Equals(string)", file="JsonTextReader.cs", label="Entry string.Equals(string)", span="0-0"];
m7_17 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="867-867"];
m7_263 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="825-825"];
m7_265 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JsonTextReader.cs", label="this.next = next", span="828-828"];
m7_264 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JsonTextReader.cs", label="this.value = value", span="827-827"];
m7_266 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JsonTextReader.cs", label="count = this.next.count + 1", span="829-829"];
m7_267 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>.CustomEnumerable(T, Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>)", span="825-825"];
m7_354 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1039-1039"];
m7_362 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="Assert.AreEqual(@''[\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.TestComponentSimple, Newtonsoft.Json.Tests'''',\r\n    ''''MyProperty'''': 0\r\n  },\r\n  {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.Employee, Newtonsoft.Json.Tests'''',\r\n    ''''FirstName'''': null,\r\n    ''''LastName'''': null,\r\n    ''''BirthDate'''': ''''2000-12-12T12:12:12Z'''',\r\n    ''''Department'''': ''''Department!'''',\r\n    ''''JobTitle'''': null\r\n  },\r\n  ''''String!'''',\r\n  9223372036854775807\r\n]'', json)", span="1054-1069"];
m7_364 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="Assert.AreEqual(4, l2.Count)", span="1072-1072"];
m7_363 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="TypeNameList<object> l2 = JsonConvert.DeserializeObject<TypeNameList<object>>(json)", span="1071-1071"];
m7_365 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (TestComponentSimple), l2[0])", span="1074-1074"];
m7_366 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (Employee), l2[1])", span="1075-1075"];
m7_367 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (string), l2[2])", span="1076-1076"];
m7_368 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="CustomAssert.IsInstanceOfType(typeof (long), l2[3])", span="1077-1077"];
m7_357 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="l.Add(c1)", span="1044-1044"];
m7_361 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="string json = JsonConvert.SerializeObject(l, Formatting.Indented)", span="1053-1053"];
m7_355 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="var c1 = new TestComponentSimple()", span="1041-1041"];
m7_356 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="TypeNameList<object> l = new TypeNameList<object>()", span="1043-1043"];
m7_358 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="l.Add(new Employee\r\n        {\r\n          BirthDate = new DateTime(2000, 12, 12, 12, 12, 12, DateTimeKind.Utc),\r\n          Department = ''Department!''\r\n        })", span="1045-1049"];
m7_360 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="l.Add(long.MaxValue)", span="1051-1051"];
m7_359 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="l.Add(''String!'')", span="1050-1050"];
m7_369 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameComponentList()", span="1039-1039"];
m7_48 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReader.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m7_523 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1527-1527"];
m7_524 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="this.Name = info.GetString(''name'')", span="1529-1529"];
m7_525 [cluster="Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.Example.Example(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1527-1527"];
m7_177 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="616-616"];
m7_178 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="JsonTextReader.cs", label="string resolvedTypeName = string.Format(TypeFormat, typeName)", span="618-618"];
m7_179 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="JsonTextReader.cs", label="return Type.GetType(resolvedTypeName, true);", span="620-620"];
m7_180 [cluster="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder.BindToType(string, string)", span="616-616"];
m7_12 [cluster="Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.EmployeeReference.EmployeeReference()", span="28-28"];
m7_550 [file="JsonTextReader.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.TypeNameSerializationBinder", span=""];
m7_551 [file="JsonTextReader.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", span=""];
m7_548 [file="JsonTextReader.cs", label=json, span=""];
m7_552 [file="JsonTextReader.cs", label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", span=""];
m7_554 [file="JsonTextReader.cs", label="Newtonsoft.Json.Tests.Serialization.Example", span=""];
m9_803 [cluster="char.ToString()", file="JsonTextWriterTest.cs", label="Entry char.ToString()", span="0-0"];
m9_20 [cluster="System.IO.MemoryStream.ToArray()", file="JsonTextWriterTest.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m9_986 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", span="1624-1624"];
m9_987 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1626-1626"];
m9_988 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToString(System.IFormatProvider)", span="1624-1624"];
m9_34 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTextWriterTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m9_977 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", span="1609-1609"];
m9_978 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1611-1611"];
m9_979 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToInt64(System.IFormatProvider)", span="1609-1609"];
m9_16 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartObject()", span="166-166"];
m9_18 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(bool)", span="485-485"];
m9_149 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong?)", span="1032-1032"];
m9_157 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="221-221"];
m9_158 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="223-223"];
m9_159 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="224-224"];
m9_164 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="string json = sw.ToString()", span="233-233"];
m9_160 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="char? value = 'c'", span="226-226"];
m9_161 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="228-228"];
m9_162 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((object)value)", span="229-229"];
m9_163 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="230-230"];
m9_165 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="string expected = @''[''''c'''']''", span="234-234"];
m9_166 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(expected, json)", span="236-236"];
m9_167 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithNullable()", span="221-221"];
m9_440 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="304-304"];
m9_869 [cluster="System.IO.TextWriter.Write(char[], int, int)", file="JsonTextWriterTest.cs", label="Entry System.IO.TextWriter.Write(char[], int, int)", span="0-0"];
m9_241 [cluster="Newtonsoft.Json.JsonWriter.Close()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Close()", span="349-349"];
m9_89 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char)", span="919-919"];
m9_14 [cluster="System.Text.UTF8Encoding.UTF8Encoding(bool)", file="JsonTextWriterTest.cs", label="Entry System.Text.UTF8Encoding.UTF8Encoding(bool)", span="0-0"];
m9_456 [cluster="Newtonsoft.Json.JsonWriter.WriteRawValue(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRawValue(string)", span="814-814"];
m9_788 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextWriterTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m9_904 [cluster="Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Create(Newtonsoft.Json.JsonSerializerSettings)", span="489-489"];
m9_52 [cluster="Unk.IsTrue", file="JsonTextWriterTest.cs", label="Entry Unk.IsTrue", span=""];
m9_155 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTimeOffset?)", span="1167-1167"];
m9_94 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="947-947"];
m9_242 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="356-356"];
m9_243 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="358-358"];
m9_244 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="359-359"];
m9_262 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="402-402"];
m9_245 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="361-361"];
m9_246 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="363-363"];
m9_247 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="365-365"];
m9_248 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="366-366"];
m9_249 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="367-367"];
m9_250 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="368-368"];
m9_251 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''500W'')", span="369-369"];
m9_252 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="370-370"];
m9_253 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="371-371"];
m9_254 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="372-372"];
m9_255 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteComment(''(broken)'')", span="373-373"];
m9_256 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="374-374"];
m9_257 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="375-375"];
m9_258 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEnd()", span="376-376"];
m9_259 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndObject()", span="377-377"];
m9_260 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="378-378"];
m9_261 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="392-401"];
m9_263 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="404-404"];
m9_264 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indenting()", span="356-356"];
m9_712 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1122-1122"];
m9_713 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="1124-1124"];
m9_714 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeHtml\r\n            }", span="1125-1128"];
m9_717 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="string json = sw.ToString()", span="1134-1134"];
m9_715 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="string script = @''<script type=''''text/javascript''''>alert('hi');</script>''", span="1130-1130"];
m9_716 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="writer.WriteValue(script)", span="1132-1132"];
m9_720 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(script, reader.ReadAsString())", span="1140-1140"];
m9_718 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(@''''''\u003cscript type=\u0022text/javascript\u0022\u003ealert(\u0027hi\u0027);\u003c/script\u003e'''''', json)", span="1136-1136"];
m9_719 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1138-1138"];
m9_721 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.HtmlStringEscapeHandling()", span="1122-1122"];
m9_804 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="101-101"];
m9_62 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1559-1559"];
m9_947 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonTextWriterTest.cs", label="_value = value", span="1561-1561"];
m9_948 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ConvertibleInt(int)", span="1559-1559"];
m9_21 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextWriterTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m9_314 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float)", span="873-873"];
m9_702 [cluster="Newtonsoft.Json.JsonWriter.BuildStateArray()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.BuildStateArray()", span="78-78"];
m9_498 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="782-782"];
m9_499 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="784-784"];
m9_500 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="785-785"];
m9_514 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="Console.WriteLine(sb.ToString())", span="805-805"];
m9_515 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(@''[\r\n  2147483647,\r\n  -2147483648,\r\n  0,\r\n  0,\r\n  9,\r\n  9,\r\n  9223372036854775807,\r\n  -9223372036854775808,\r\n  18446744073709551615,\r\n  0\r\n]'', sb.ToString())", span="807-818"];
m9_501 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw) { Formatting = Formatting.Indented }", span="787-787"];
m9_502 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="789-789"];
m9_503 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(int.MaxValue)", span="791-791"];
m9_504 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(int.MinValue)", span="792-792"];
m9_505 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(0)", span="793-793"];
m9_506 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(-0)", span="794-794"];
m9_507 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(9L)", span="795-795"];
m9_508 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(9UL)", span="796-796"];
m9_509 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(long.MaxValue)", span="797-797"];
m9_510 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(long.MinValue)", span="798-798"];
m9_511 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(ulong.MaxValue)", span="799-799"];
m9_512 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(ulong.MinValue)", span="800-800"];
m9_513 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="802-802"];
m9_516 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIntegerNumber()", span="782-782"];
m9_144 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(short?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(short?)", span="1080-1080"];
m9_891 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1540-1540"];
m9_939 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonTextWriterTest.cs", label="SetWriteState(JsonToken.EndObject, null)", span="1542-1542"];
m9_940 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEndObject()", span="1540-1540"];
m9_0 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", span="62-62"];
m9_1 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="MemoryStream ms = new MemoryStream()", span="64-64"];
m9_2 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="var streamWriter = new StreamWriter(ms, new UTF8Encoding(false)) { NewLine = ''\n'' }", span="66-66"];
m9_8 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="byte[] data = ms.ToArray()", span="80-80"];
m9_3 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="var jsonWriter = new JsonTextWriter(streamWriter)\r\n            {\r\n                CloseOutput = true,\r\n                Indentation = 2,\r\n                Formatting = Formatting.Indented\r\n            }", span="67-72"];
m9_4 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="74-74"];
m9_5 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''prop'')", span="75-75"];
m9_6 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(true)", span="76-76"];
m9_7 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndObject()", span="77-77"];
m9_9 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="string json = Encoding.UTF8.GetString(data, 0, data.Length)", span="82-82"];
m9_10 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(@''{'' + '\n' + @''  ''''prop'''': true'' + '\n' + ''}'', json)", span="84-84"];
m9_11 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NewLine()", span="62-62"];
m9_55 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", span="125-125"];
m9_56 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs", label="var sw = new StringWriter()", span="127-127"];
m9_57 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="128-128"];
m9_59 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''1'', sw.ToString())", span="131-131"];
m9_58 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new ConvertibleInt(1))", span="129-129"];
m9_60 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteIConvertable()", span="125-125"];
m9_888 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1533-1533"];
m9_936 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonTextWriterTest.cs", label="SetWriteState(JsonToken.StartObject, null)", span="1535-1535"];
m9_937 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonTextWriterTest.cs", label="_writer.Write(''{{{'')", span="1537-1537"];
m9_938 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteStartObject()", span="1533-1533"];
m9_151 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float?)", span="441-441"];
m9_400 [cluster="Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteWhitespace(string)", span="1262-1262"];
m9_722 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="349-349"];
m9_775 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1237-1237"];
m9_776 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="1239-1239"];
m9_777 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1240-1240"];
m9_786 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(@''[\r\n  '2000 a.m.',\r\n  '2000 a.m.'\r\n]'', sw.ToString())", span="1253-1256"];
m9_778 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="writer.Formatting = Formatting.Indented", span="1241-1241"];
m9_779 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="writer.DateFormatString = ''yyyy tt''", span="1242-1242"];
m9_781 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="writer.QuoteChar = '\''", span="1244-1244"];
m9_782 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="writer.WriteStartArray()", span="1246-1246"];
m9_783 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1248-1248"];
m9_784 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1249-1249"];
m9_785 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="writer.WriteEnd()", span="1251-1251"];
m9_787 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Culture()", span="1237-1237"];
m9_154 [cluster="System.DateTime.DateTime(long, System.DateTimeKind)", file="JsonTextWriterTest.cs", label="Entry System.DateTime.DateTime(long, System.DateTimeKind)", span="0-0"];
m9_997 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", span="1642-1642"];
m9_998 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1644-1644"];
m9_999 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToUInt32(System.IFormatProvider)", span="1642-1642"];
m9_315 [cluster="Newtonsoft.Json.JsonWriter.Flush()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.Flush()", span="344-344"];
m9_343 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="535-535"];
m9_344 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="537-537"];
m9_345 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="538-538"];
m9_359 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="565-565"];
m9_346 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="540-540"];
m9_347 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="542-542"];
m9_348 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="543-543"];
m9_349 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="545-545"];
m9_350 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="546-546"];
m9_351 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="547-547"];
m9_352 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="548-548"];
m9_353 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="549-549"];
m9_354 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="550-550"];
m9_355 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="551-551"];
m9_356 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="552-552"];
m9_357 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="jsonWriter.Flush()", span="554-554"];
m9_358 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="string expected = @''[\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity'''',\r\n  ''''NaN'''',\r\n  ''''Infinity'''',\r\n  ''''-Infinity''''\r\n]''", span="557-564"];
m9_360 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="567-567"];
m9_361 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_String()", span="535-535"];
m9_64 [cluster="System.IO.StringWriter.ToString()", file="JsonTextWriterTest.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m9_17 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="222-222"];
m9_983 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", span="1619-1619"];
m9_984 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1621-1621"];
m9_985 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToSingle(System.IFormatProvider)", span="1619-1619"];
m9_980 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", span="1614-1614"];
m9_981 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1616-1616"];
m9_982 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToSByte(System.IFormatProvider)", span="1614-1614"];
m9_36 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="369-369"];
m9_773 [cluster="System.Uri.Uri(string)", file="JsonTextWriterTest.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m9_965 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", span="1589-1589"];
m9_966 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1591-1591"];
m9_967 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToDecimal(System.IFormatProvider)", span="1589-1589"];
m9_180 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="255-255"];
m9_181 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="257-257"];
m9_182 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="258-258"];
m9_191 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="271-271"];
m9_183 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="260-260"];
m9_184 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="262-262"];
m9_185 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(@''''''These pretzels are making me thirsty!'''''')", span="263-263"];
m9_186 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''Jeff's house was burninated.'')", span="264-264"];
m9_187 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'')", span="265-265"];
m9_188 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''35% of\t statistics\n are made\r up.'')", span="266-266"];
m9_189 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="267-267"];
m9_190 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="string expected = @''[''''\''''These pretzels are making me thirsty!\'''''''',''''Jeff's house was burninated.'''',''''1. You don't talk about fight club.\r\n2. You don't talk about fight club.'''',''''35% of\t statistics\n are made\r up.'''']''", span="270-270"];
m9_192 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(expected, result)", span="273-273"];
m9_193 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.StringEscaping()", span="255-255"];
m9_417 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="662-662"];
m9_418 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="664-664"];
m9_419 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="665-665"];
m9_426 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="677-677"];
m9_420 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="667-667"];
m9_421 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="669-669"];
m9_422 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="671-671"];
m9_423 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteRaw(@''''''PropertyName'''':[1,2,3,4,5]'')", span="672-672"];
m9_424 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEnd()", span="673-673"];
m9_425 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="string expected = @''{''''PropertyName'''':[1,2,3,4,5]}''", span="676-676"];
m9_427 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(expected, result)", span="679-679"];
m9_428 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInObject()", span="662-662"];
m9_771 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTimeOffset)", span="606-606"];
m9_534 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken, object)", span="459-459"];
m9_517 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long)", span="854-854"];
m9_518 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ulong)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ulong)", span="864-864"];
m9_806 [cluster="System.Exception.Exception(string)", file="JsonTextWriterTest.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m9_872 [cluster="System.IO.TextWriter.Write(char[])", file="JsonTextWriterTest.cs", label="Entry System.IO.TextWriter.Write(char[])", span="0-0"];
m9_903 [cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382"];
m9_931 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m9_441 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="434-434"];
m9_711 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="557-557"];
m9_619 [cluster="System.Convert.FromBase64String(string)", file="JsonTextWriterTest.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m9_35 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTextWriterTest.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m9_618 [cluster="string.Trim(params char[])", file="JsonTextWriterTest.cs", label="Entry string.Trim(params char[])", span="0-0"];
m9_142 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(byte?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(byte?)", span="1117-1117"];
m9_789 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1261-1261"];
m9_790 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="char c = (char)0", span="1263-1263"];
m9_791 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="StringWriter swNew = new StringWriter()", span="1267-1267"];
m9_795 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="WriteEscapedJavaScriptStringOld(swOld, c.ToString(), '''', true)", span="1272-1272"];
m9_799 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="throw new Exception(''Difference for char '{0}' (value {1}). Old text: {2}, New text: {3}''.FormatWith(CultureInfo.InvariantCulture, c, (int)c, oldText, newText));", span="1278-1278"];
m9_800 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="c++", span="1280-1280"];
m9_792 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="char[] buffer = null", span="1268-1268"];
m9_796 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="string newText = swNew.ToString()", span="1274-1274"];
m9_794 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="StringWriter swOld = new StringWriter()", span="1271-1271"];
m9_797 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="string oldText = swOld.ToString()", span="1275-1275"];
m9_798 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="newText != oldText", span="1277-1277"];
m9_801 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="c != char.MaxValue", span="1281-1281"];
m9_802 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CompareNewStringEscapingWithOld()", span="1261-1261"];
m9_152 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal?)", span="1142-1142"];
m9_932 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m9_150 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double?)", span="468-468"];
m9_99 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="167-167"];
m9_100 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="169-169"];
m9_101 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="170-170"];
m9_134 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="string json = sw.ToString()", span="208-208"];
m9_102 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="172-172"];
m9_103 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((char?)null)", span="173-173"];
m9_104 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((char?)'c')", span="174-174"];
m9_105 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((bool?)null)", span="175-175"];
m9_106 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((bool?)true)", span="176-176"];
m9_107 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((byte?)null)", span="177-177"];
m9_108 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((byte?)1)", span="178-178"];
m9_109 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((sbyte?)null)", span="179-179"];
m9_110 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((sbyte?)1)", span="180-180"];
m9_111 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((short?)null)", span="181-181"];
m9_112 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((short?)1)", span="182-182"];
m9_113 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((ushort?)null)", span="183-183"];
m9_114 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((ushort?)1)", span="184-184"];
m9_115 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((int?)null)", span="185-185"];
m9_116 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((int?)1)", span="186-186"];
m9_117 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((uint?)null)", span="187-187"];
m9_118 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((uint?)1)", span="188-188"];
m9_119 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((long?)null)", span="189-189"];
m9_120 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((long?)1)", span="190-190"];
m9_121 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((ulong?)null)", span="191-191"];
m9_122 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((ulong?)1)", span="192-192"];
m9_123 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((double?)null)", span="193-193"];
m9_124 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((double?)1.1)", span="194-194"];
m9_125 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((float?)null)", span="195-195"];
m9_126 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((float?)1.1)", span="196-196"];
m9_127 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((decimal?)null)", span="197-197"];
m9_128 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((decimal?)1.1m)", span="198-198"];
m9_129 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((DateTime?)null)", span="199-199"];
m9_130 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((DateTime?)new DateTime(DateTimeUtils.InitialJavaScriptDateTicks, DateTimeKind.Utc))", span="200-200"];
m9_131 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((DateTimeOffset?)null)", span="202-202"];
m9_132 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((DateTimeOffset?)new DateTimeOffset(DateTimeUtils.InitialJavaScriptDateTicks, TimeSpan.Zero))", span="203-203"];
m9_133 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="205-205"];
m9_135 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="string expected", span="209-209"];
m9_137 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(expected, json)", span="217-217"];
m9_136 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="expected = @''[null,''''c'''',null,true,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1,null,1.1,null,1.1,null,1.1,null,''''1970-01-01T00:00:00Z'''',null,''''1970-01-01T00:00:00+00:00'''']''", span="212-212"];
m9_138 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NullableValueFormatting()", span="167-167"];
m9_382 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(double)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(double)", span="458-458"];
m9_54 [cluster="Unk.IsFalse", file="JsonTextWriterTest.cs", label="Entry Unk.IsFalse", span=""];
m9_383 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(float)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(float)", span="431-431"];
m9_620 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="975-975"];
m9_621 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="977-977"];
m9_622 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="978-978"];
m9_636 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="1004-1004"];
m9_623 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="string text = ''Hello world.''", span="980-980"];
m9_625 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="983-983"];
m9_624 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="981-981"];
m9_629 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(data)", span="989-989"];
m9_630 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(data)", span="990-990"];
m9_631 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((object)data)", span="991-991"];
m9_626 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="985-985"];
m9_627 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="986-986"];
m9_628 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="988-988"];
m9_632 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((byte[])null)", span="992-992"];
m9_633 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((Uri)null)", span="993-993"];
m9_634 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="994-994"];
m9_635 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="string expected = @''[\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  ''''SGVsbG8gd29ybGQu'''',\r\n  null,\r\n  null\r\n]''", span="997-1003"];
m9_637 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="1006-1006"];
m9_638 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteBytesInArray()", span="975-975"];
m9_12 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonTextWriterTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m9_639 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Uri)", span="675-675"];
m9_772 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.TimeSpan)", span="655-655"];
m9_946 [cluster="Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="200-200"];
m9_533 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonToken)", span="468-468"];
m9_96 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="788-788"];
m9_141 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool?)", span="1068-1068"];
m9_571 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="901-901"];
m9_572 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="903-903"];
m9_573 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="904-904"];
m9_597 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="942-942"];
m9_574 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="906-906"];
m9_575 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="908-908"];
m9_576 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="909-909"];
m9_577 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="911-911"];
m9_578 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.Indentation = 5", span="913-913"];
m9_579 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(5, jsonWriter.Indentation)", span="914-914"];
m9_580 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.IndentChar = '_'", span="915-915"];
m9_581 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="Assert.AreEqual('_', jsonWriter.IndentChar)", span="916-916"];
m9_582 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.QuoteName = true", span="917-917"];
m9_583 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(true, jsonWriter.QuoteName)", span="918-918"];
m9_584 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.QuoteChar = '\''", span="919-919"];
m9_585 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="Assert.AreEqual('\'', jsonWriter.QuoteChar)", span="920-920"];
m9_586 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="922-922"];
m9_587 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''propertyName'')", span="924-924"];
m9_588 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="925-925"];
m9_589 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.IndentChar = '?'", span="927-927"];
m9_590 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="Assert.AreEqual('?', jsonWriter.IndentChar)", span="928-928"];
m9_591 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.Indentation = 6", span="929-929"];
m9_592 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(6, jsonWriter.Indentation)", span="930-930"];
m9_593 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''prop2'')", span="932-932"];
m9_594 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(123)", span="933-933"];
m9_595 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndObject()", span="935-935"];
m9_596 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="string expected = @''{\r\n_____'propertyName': NaN,\r\n??????'prop2': 123\r\n}''", span="938-941"];
m9_598 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="944-944"];
m9_599 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Indentation()", span="901-901"];
m9_148 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(long?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(long?)", span="1019-1019"];
m9_362 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="571-571"];
m9_363 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="573-573"];
m9_364 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="574-574"];
m9_379 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="602-602"];
m9_365 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="576-576"];
m9_366 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="578-578"];
m9_367 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.String", span="579-579"];
m9_368 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.QuoteChar = '\''", span="580-580"];
m9_369 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="582-582"];
m9_370 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="583-583"];
m9_371 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="584-584"];
m9_372 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="585-585"];
m9_373 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="586-586"];
m9_374 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="587-587"];
m9_375 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="588-588"];
m9_376 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="589-589"];
m9_377 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="jsonWriter.Flush()", span="591-591"];
m9_378 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="string expected = @''[\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity',\r\n  'NaN',\r\n  'Infinity',\r\n  '-Infinity'\r\n]''", span="594-601"];
m9_380 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="604-604"];
m9_381 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_QuoteChar()", span="571-571"];
m9_438 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m9_930 [cluster="string.String(char[])", file="JsonTextWriterTest.cs", label="Entry string.String(char[])", span="0-0"];
m9_915 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, bool)", span="444-444"];
m9_805 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1286-1286"];
m9_808 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label=appendDelimiters, span="1289-1289"];
m9_809 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="writer.Write(delimiter)", span="1290-1290"];
m9_810 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="s != null", span="1292-1292"];
m9_815 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="i < s.Length", span="1298-1298"];
m9_816 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="var c = s[i]", span="1300-1300"];
m9_817 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="c >= ' ' && c < 128 && c != '\\' && c != delimiter", span="1303-1303"];
m9_851 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="chars = s.ToCharArray()", span="1369-1369"];
m9_852 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="writer.Write(chars, lastWritePosition, i - lastWritePosition)", span="1372-1372"];
m9_855 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="writer.Write(escapedValue)", span="1377-1377"];
m9_856 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="writer.Write(unicodeBuffer)", span="1379-1379"];
m9_859 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="writer.Write(s)", span="1385-1385"];
m9_861 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="chars = s.ToCharArray()", span="1390-1390"];
m9_862 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="writer.Write(chars, lastWritePosition, s.Length - lastWritePosition)", span="1393-1393"];
m9_863 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label=appendDelimiters, span="1398-1398"];
m9_864 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="writer.Write(delimiter)", span="1399-1399"];
m9_811 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="char[] chars = null", span="1294-1294"];
m9_812 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="char[] unicodeBuffer = null", span="1295-1295"];
m9_850 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="chars == null", span="1368-1368"];
m9_860 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="chars == null", span="1389-1389"];
m9_813 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="int lastWritePosition = 0", span="1296-1296"];
m9_843 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="unicodeBuffer == null", span="1348-1348"];
m9_845 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="StringUtils.ToCharAsUnicode(c, unicodeBuffer)", span="1351-1351"];
m9_814 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="int i = 0", span="1298-1298"];
m9_849 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="i > lastWritePosition", span="1366-1366"];
m9_858 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="lastWritePosition == 0", span="1382-1382"];
m9_853 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="lastWritePosition = i + 1", span="1375-1375"];
m9_857 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="i++", span="1298-1298"];
m9_819 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label=c, span="1308-1308"];
m9_842 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="c <= '\u001f'", span="1346-1346"];
m9_818 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="string escapedValue", span="1306-1306"];
m9_820 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\t'", span="1310-1310"];
m9_822 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\n'", span="1313-1313"];
m9_824 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\r'", span="1316-1316"];
m9_826 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\f'", span="1319-1319"];
m9_828 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\b'", span="1322-1322"];
m9_830 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\\'", span="1325-1325"];
m9_832 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\u0085'", span="1328-1328"];
m9_834 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\u2028'", span="1331-1331"];
m9_836 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\u2029'", span="1334-1334"];
m9_838 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="'\''", span="1337-1337"];
m9_840 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="''''", span="1341-1341"];
m9_821 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\t''", span="1311-1311"];
m9_823 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\n''", span="1314-1314"];
m9_825 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\r''", span="1317-1317"];
m9_827 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\f''", span="1320-1320"];
m9_829 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\b''", span="1323-1323"];
m9_831 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\\''", span="1326-1326"];
m9_833 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\u0085''", span="1329-1329"];
m9_835 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\u2028''", span="1332-1332"];
m9_837 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\u2029''", span="1335-1335"];
m9_839 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = @''\'''", span="1339-1339"];
m9_841 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = ''\\\''''", span="1343-1343"];
m9_847 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = null", span="1358-1358"];
m9_844 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="unicodeBuffer = new char[6]", span="1349-1349"];
m9_846 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue = EscapedUnicodeText", span="1354-1354"];
m9_848 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="escapedValue == null", span="1363-1363"];
m9_854 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="!string.Equals(escapedValue, EscapedUnicodeText)", span="1376-1376"];
m9_865 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEscapedJavaScriptStringOld(System.IO.TextWriter, string, char, bool)", span="1286-1286"];
m9_473 [cluster="Newtonsoft.Json.JsonWriter.WriteEndConstructor()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndConstructor()", span="398-398"];
m9_866 [cluster="System.IO.TextWriter.Write(char)", file="JsonTextWriterTest.cs", label="Entry System.IO.TextWriter.Write(char)", span="0-0"];
m9_295 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="451-451"];
m9_296 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="453-453"];
m9_297 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="454-454"];
m9_311 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="481-481"];
m9_298 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="456-456"];
m9_299 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="458-458"];
m9_300 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="459-459"];
m9_301 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="461-461"];
m9_302 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="462-462"];
m9_303 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="463-463"];
m9_304 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="464-464"];
m9_305 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="465-465"];
m9_306 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="466-466"];
m9_307 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="467-467"];
m9_308 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="468-468"];
m9_309 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="jsonWriter.Flush()", span="470-470"];
m9_310 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="string expected = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity,\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="473-480"];
m9_312 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="483-483"];
m9_313 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Symbol()", span="451-451"];
m9_342 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(float?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(float?)", span="1044-1044"];
m9_63 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(object)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(object)", span="321-321"];
m9_91 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="891-891"];
m9_686 [cluster="Newtonsoft.Json.JsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteNull()", span="339-339"];
m9_868 [cluster="string.ToCharArray()", file="JsonTextWriterTest.cs", label="Entry string.ToCharArray()", span="0-0"];
m9_140 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(char?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(char?)", span="1105-1105"];
m9_265 [cluster="Newtonsoft.Json.JsonWriter.WriteEnd()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEnd()", span="425-425"];
m9_971 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", span="1599-1599"];
m9_972 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1601-1601"];
m9_973 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToInt16(System.IFormatProvider)", span="1599-1599"];
m9_53 [cluster="Newtonsoft.Json.JsonTextWriter.Close()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Close()", span="149-149"];
m9_929 [cluster="Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.SetWriteState(Newtonsoft.Json.JsonToken, object)", span="1447-1447"];
m9_685 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartConstructor(string)", span="187-187"];
m9_774 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.Guid)", span="634-634"];
m9_600 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="389-389"];
m9_740 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1180-1180"];
m9_741 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="1182-1182"];
m9_742 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1183-1183"];
m9_747 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''{'Blah':null}'', sw.ToString())", span="1190-1190"];
m9_743 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs", label="writer.QuoteChar = '\''", span="1184-1184"];
m9_744 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs", label="writer.WriteStartObject()", span="1186-1186"];
m9_745 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs", label="writer.WritePropertyName(''Blah'')", span="1187-1187"];
m9_746 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs", label="writer.WriteEnd()", span="1188-1188"];
m9_748 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEndOnProperty()", span="1180-1180"];
m9_905 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="882-882"];
m9_146 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int?)", span="994-994"];
m9_145 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(ushort?)", span="1093-1093"];
m9_949 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", span="1564-1564"];
m9_950 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", file="JsonTextWriterTest.cs", label="return TypeCode.Int32;", span="1566-1566"];
m9_951 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.GetTypeCode()", span="1564-1564"];
m9_968 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", span="1594-1594"];
m9_969 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1596-1596"];
m9_970 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToDouble(System.IFormatProvider)", span="1594-1594"];
m9_13 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)", file="JsonTextWriterTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream, System.Text.Encoding)", span="0-0"];
m9_97 [cluster="Newtonsoft.Json.JsonWriter.WriteUndefined()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteUndefined()", span="796-796"];
m9_218 [cluster="Newtonsoft.Json.JsonWriter.WriteComment(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteComment(string)", span="1253-1253"];
m9_920 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1511-1511"];
m9_921 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs", label="SetWriteState(JsonToken.PropertyName, name)", span="1513-1513"];
m9_924 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs", label="_writer.Write(new string(name.ToCharArray().Reverse().ToArray()))", span="1518-1518"];
m9_922 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs", label=QuoteName, span="1515-1515"];
m9_923 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs", label="_writer.Write(QuoteChar)", span="1516-1516"];
m9_925 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs", label=QuoteName, span="1520-1520"];
m9_926 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs", label="_writer.Write(QuoteChar)", span="1521-1521"];
m9_927 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs", label="_writer.Write(':')", span="1523-1523"];
m9_928 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string, bool)", span="1511-1511"];
m9_519 [cluster="System.Console.WriteLine(string)", file="JsonTextWriterTest.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m9_90 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="826-826"];
m9_962 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", span="1584-1584"];
m9_963 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1586-1586"];
m9_964 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToDateTime(System.IFormatProvider)", span="1584-1584"];
m9_902 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonTextWriterTest.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m9_887 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1501-1501"];
m9_916 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterTest.cs", label="_writer = textWriter", span="1503-1503"];
m9_917 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.CustomJsonTextWriter(System.IO.TextWriter)", span="1501-1501"];
m9_22 [cluster="Unk.AreEqual", file="JsonTextWriterTest.cs", label="Entry Unk.AreEqual", span=""];
m9_23 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", span="88-88"];
m9_24 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="90-90"];
m9_25 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="91-91"];
m9_32 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(@''{name:''''value''''}'', sb.ToString())", span="102-102"];
m9_26 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw) { QuoteName = false }", span="92-92"];
m9_27 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="writer.WriteStartObject()", span="94-94"];
m9_28 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="writer.WritePropertyName(''name'')", span="96-96"];
m9_29 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="writer.WriteValue(''value'')", span="97-97"];
m9_30 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="writer.WriteEndObject()", span="99-99"];
m9_31 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="writer.Flush()", span="100-100"];
m9_33 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteNameAndStrings()", span="88-88"];
m9_217 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="407-407"];
m9_474 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="748-748"];
m9_475 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="750-750"];
m9_476 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="751-751"];
m9_496 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(@''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,-1.7976931348623157E+308,Infinity,-Infinity,NaN]'', sb.ToString())", span="778-778"];
m9_477 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="753-753"];
m9_478 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="755-755"];
m9_479 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="757-757"];
m9_480 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(0.0)", span="759-759"];
m9_481 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(0f)", span="760-760"];
m9_482 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(0.1)", span="761-761"];
m9_483 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(1.0)", span="762-762"];
m9_484 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(1.000001)", span="763-763"];
m9_485 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(0.000001)", span="764-764"];
m9_486 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.Epsilon)", span="765-765"];
m9_487 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="766-766"];
m9_488 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="767-767"];
m9_489 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="768-768"];
m9_490 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.MaxValue)", span="769-769"];
m9_491 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.MinValue)", span="770-770"];
m9_492 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="771-771"];
m9_493 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="772-772"];
m9_494 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="773-773"];
m9_495 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="775-775"];
m9_497 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteFloatingPointNumber()", span="748-748"];
m9_37 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141"];
m9_98 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m9_941 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1545-1545"];
m9_942 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs", label="token == JsonToken.EndObject", span="1547-1547"];
m9_944 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs", label="base.WriteEnd(token)", span="1550-1550"];
m9_943 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs", label="_writer.Write(''}}}'')", span="1548-1548"];
m9_945 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteEnd(Newtonsoft.Json.JsonToken)", span="1545-1545"];
m9_955 [cluster="System.NotImplementedException.NotImplementedException()", file="JsonTextWriterTest.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m9_892 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1423-1423"];
m9_893 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="var d = new Dictionary<string, int>\r\n            {\r\n                { ''a'', 1 },\r\n            }", span="1425-1428"];
m9_894 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="var jsonSerializerSettings = new JsonSerializerSettings\r\n            {\r\n                Formatting = Formatting.Indented,\r\n            }", span="1429-1432"];
m9_898 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="serializer.Serialize(writer, d)", span="1438-1438"];
m9_895 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="var serializer = JsonSerializer.Create(jsonSerializerSettings)", span="1433-1433"];
m9_896 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="var stringWriter = new StringWriter()", span="1434-1434"];
m9_897 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="var writer = new JsonTextWriter(stringWriter) { QuoteName = false }", span="1436-1436"];
m9_900 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(@''{\r\n  a: 1\r\n}'', stringWriter.ToString())", span="1442-1444"];
m9_899 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="writer.Close()", span="1439-1439"];
m9_901 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteDictionaryNames()", span="1423-1423"];
m9_561 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="885-885"];
m9_562 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTextWriterTest.cs", label="ExceptionAssert.Throws<ArgumentException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.Formatting = Formatting.Indented;\r\n                    jsonWriter.QuoteChar = '*';\r\n                }\r\n            }, @''Invalid JavaScript string quote character. Valid quote characters are ' and ''''.'')", span="887-897"];
m9_563 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.InvalidQuoteChar()", span="885-885"];
m9_890 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1526-1526"];
m9_933 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs", label="SetWriteState(JsonToken.Null, null)", span="1528-1528"];
m9_934 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs", label="_writer.Write(''NULL!!!'')", span="1530-1530"];
m9_935 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WriteNull()", span="1526-1526"];
m9_770 [cluster="System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", file="JsonTextWriterTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(int, int, int, int, int, int, System.TimeSpan)", span="0-0"];
m9_153 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(System.DateTime?)", span="1154-1154"];
m9_15 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m9_399 [cluster="Newtonsoft.Json.JsonWriter.WriteRaw(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteRaw(string)", span="805-805"];
m9_1000 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", span="1647-1647"];
m9_1001 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1649-1649"];
m9_1002 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToUInt64(System.IFormatProvider)", span="1647-1647"];
m9_219 [cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="331-331"];
m9_156 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextWriterTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m9_564 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="887-897"];
m9_172 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="242-251"];
m9_173 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="244-244"];
m9_174 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="245-245"];
m9_175 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="247-247"];
m9_176 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(new Version(1, 1, 1, 1))", span="248-248"];
m9_177 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="249-249"];
m9_178 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="242-251"];
m9_544 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.Integer, ''three'')", span="853-853"];
m9_547 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.Integer)", span="858-858"];
m9_543 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="851-854"];
m9_546 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="856-859"];
m9_545 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="851-854"];
m9_548 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="856-859"];
m9_552 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Entry lambda expression", span="867-881"];
m9_553 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="869-869"];
m9_554 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="870-870"];
m9_555 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="872-872"];
m9_556 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="874-874"];
m9_557 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(0.0)", span="876-876"];
m9_558 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="878-878"];
m9_559 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="879-879"];
m9_560 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="867-881"];
m9_565 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="889-889"];
m9_566 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="890-890"];
m9_567 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="892-892"];
m9_568 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="894-894"];
m9_569 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="jsonWriter.QuoteChar = '*'", span="895-895"];
m9_570 [cluster="lambda expression", file="JsonTextWriterTest.cs", label="Exit lambda expression", span="887-897"];
m9_889 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1506-1506"];
m9_918 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonTextWriterTest.cs", label="WritePropertyName(name, true)", span="1508-1508"];
m9_919 [cluster="Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.CustomJsonTextWriter.WritePropertyName(string)", span="1506-1506"];
m9_959 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", span="1579-1579"];
m9_960 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1581-1581"];
m9_961 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToChar(System.IFormatProvider)", span="1579-1579"];
m9_316 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="487-487"];
m9_317 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="489-489"];
m9_318 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="490-490"];
m9_338 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="529-529"];
m9_319 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="492-492"];
m9_320 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="494-494"];
m9_321 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.DefaultValue", span="495-495"];
m9_322 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="497-497"];
m9_323 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="498-498"];
m9_324 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.PositiveInfinity)", span="499-499"];
m9_325 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NegativeInfinity)", span="500-500"];
m9_326 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="501-501"];
m9_327 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.PositiveInfinity)", span="502-502"];
m9_328 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NegativeInfinity)", span="503-503"];
m9_329 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((double?)double.NaN)", span="504-504"];
m9_330 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((double?)double.PositiveInfinity)", span="505-505"];
m9_331 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((double?)double.NegativeInfinity)", span="506-506"];
m9_332 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((float?)float.NaN)", span="507-507"];
m9_333 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((float?)float.PositiveInfinity)", span="508-508"];
m9_334 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((float?)float.NegativeInfinity)", span="509-509"];
m9_335 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="510-510"];
m9_336 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="jsonWriter.Flush()", span="512-512"];
m9_337 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="string expected = @''[\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  0.0,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null,\r\n  null\r\n]''", span="515-528"];
m9_339 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="531-531"];
m9_340 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.FloatingPointNonFiniteNumbers_Zero()", span="487-487"];
m9_401 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="634-634"];
m9_402 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="636-636"];
m9_403 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="637-637"];
m9_414 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="656-656"];
m9_404 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="639-639"];
m9_405 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="641-641"];
m9_406 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="642-642"];
m9_407 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="644-644"];
m9_408 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="645-645"];
m9_409 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="646-646"];
m9_410 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteRaw('',[1,2,3,4,5]'')", span="647-647"];
m9_411 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(float.NaN)", span="648-648"];
m9_412 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="649-649"];
m9_413 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="string expected = @''[\r\n  NaN,[1,2,3,4,5],[1,2,3,4,5],\r\n  NaN\r\n]''", span="652-655"];
m9_415 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="658-658"];
m9_416 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInArray()", span="634-634"];
m9_703 [cluster="Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.EnumUtils.GetValues(System.Type)", span="140-140"];
m9_220 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="317-317"];
m9_221 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="319-319"];
m9_222 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="320-320"];
m9_238 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="350-350"];
m9_223 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="322-322"];
m9_224 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="324-324"];
m9_225 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="326-326"];
m9_226 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="327-327"];
m9_227 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="328-328"];
m9_228 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="329-329"];
m9_229 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''500W'')", span="330-330"];
m9_230 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="331-331"];
m9_231 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="332-332"];
m9_232 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="333-333"];
m9_233 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteComment(''(broken)'')", span="334-334"];
m9_234 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="335-335"];
m9_235 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="336-336"];
m9_236 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="jsonWriter.Close()", span="337-337"];
m9_237 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="340-349"];
m9_239 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="352-352"];
m9_240 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseWithRemainingContent()", span="317-317"];
m9_216 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="357-357"];
m9_51 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="JsonTextWriterTest.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m9_439 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextWriterTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m9_749 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1195-1195"];
m9_750 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="1197-1197"];
m9_751 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1198-1198"];
m9_768 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(@''[\r\n  '2000-01-01T01:01:01Z',\r\n  '2000-01-01T01:01:01+00:00',\r\n  '\/Date(946688461000)\/',\r\n  '\/Date(946688461000+0000)\/',\r\n  '2000 A.D.',\r\n  '2000 A.D.',\r\n  'AQID',\r\n  '00:00:00',\r\n  'http://www.google.com/',\r\n  '00000000-0000-0000-0000-000000000000'\r\n]'', sw.ToString())", span="1222-1233"];
m9_752 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.Formatting = Formatting.Indented", span="1199-1199"];
m9_753 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.QuoteChar = '\''", span="1200-1200"];
m9_754 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteStartArray()", span="1202-1202"];
m9_755 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1204-1204"];
m9_756 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1205-1205"];
m9_757 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.DateFormatHandling = DateFormatHandling.MicrosoftDateFormat", span="1207-1207"];
m9_758 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1208-1208"];
m9_759 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1209-1209"];
m9_760 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.DateFormatString = ''yyyy gg''", span="1211-1211"];
m9_761 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Utc))", span="1212-1212"];
m9_762 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new DateTimeOffset(2000, 1, 1, 1, 1, 1, TimeSpan.Zero))", span="1213-1213"];
m9_763 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new byte[] { 1, 2, 3 })", span="1215-1215"];
m9_764 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(TimeSpan.Zero)", span="1216-1216"];
m9_765 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new Uri(''http://www.google.com/''))", span="1217-1217"];
m9_766 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteValue(Guid.Empty)", span="1218-1218"];
m9_767 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="writer.WriteEnd()", span="1220-1220"];
m9_769 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.QuoteChar()", span="1195-1195"];
m9_179 [cluster="System.Version.Version(int, int, int, int)", file="JsonTextWriterTest.cs", label="Entry System.Version.Version(int, int, int, int)", span="0-0"];
m9_384 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="608-608"];
m9_385 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="610-610"];
m9_386 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="611-611"];
m9_396 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="628-628"];
m9_387 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="613-613"];
m9_388 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="615-615"];
m9_389 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="jsonWriter.FloatFormatHandling = FloatFormatHandling.Symbol", span="616-616"];
m9_390 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteRaw(''[1,2,3,4,5]'')", span="618-618"];
m9_391 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteWhitespace(''  '')", span="619-619"];
m9_392 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="620-620"];
m9_393 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(double.NaN)", span="621-621"];
m9_394 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="622-622"];
m9_395 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="string expected = @''[1,2,3,4,5]  [\r\n  NaN\r\n]''", span="625-627"];
m9_397 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="630-630"];
m9_398 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawInStart()", span="608-608"];
m9_65 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="136-136"];
m9_66 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="138-138"];
m9_67 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="139-139"];
m9_85 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="161-161"];
m9_68 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="141-141"];
m9_69 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="143-143"];
m9_70 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue('@')", span="144-144"];
m9_71 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''\r\n\t\f\b?{\\r\\n\''\''')", span="145-145"];
m9_72 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(true)", span="146-146"];
m9_73 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(10)", span="147-147"];
m9_74 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(10.99)", span="148-148"];
m9_75 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(0.99)", span="149-149"];
m9_76 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(0.000000000000000001d)", span="150-150"];
m9_77 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(0.000000000000000001m)", span="151-151"];
m9_78 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((string)null)", span="152-152"];
m9_79 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue((object)null)", span="153-153"];
m9_80 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="154-154"];
m9_81 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteNull()", span="155-155"];
m9_82 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteUndefined()", span="156-156"];
m9_83 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndArray()", span="157-157"];
m9_84 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="string expected = @''[''''@'''',''''\r\n\t\f\b?{\\r\\n\''''''''',true,10,10.99,0.99,1E-18,0.000000000000000001,null,null,''''This is a string.'''',null,undefined]''", span="160-160"];
m9_86 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(expected, result)", span="163-163"];
m9_87 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.ValueFormatting()", span="136-136"];
m9_266 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="408-408"];
m9_267 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="410-410"];
m9_268 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="411-411"];
m9_269 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="413-413"];
m9_270 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="415-415"];
m9_271 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="417-417"];
m9_272 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="418-418"];
m9_273 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual('''', jsonWriter.Path)", span="419-419"];
m9_274 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="421-421"];
m9_275 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="422-422"];
m9_276 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="423-423"];
m9_277 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="425-425"];
m9_278 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="426-426"];
m9_279 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''CPU'', jsonWriter.Path)", span="427-427"];
m9_280 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="429-429"];
m9_281 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Property, jsonWriter.WriteState)", span="430-430"];
m9_282 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="431-431"];
m9_283 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="433-433"];
m9_284 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="434-434"];
m9_285 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="436-436"];
m9_286 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Array, jsonWriter.WriteState)", span="437-437"];
m9_287 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''Drives[0]'', jsonWriter.Path)", span="438-438"];
m9_288 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEnd()", span="440-440"];
m9_289 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Object, jsonWriter.WriteState)", span="441-441"];
m9_290 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''Drives'', jsonWriter.Path)", span="442-442"];
m9_291 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndObject()", span="444-444"];
m9_292 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="445-445"];
m9_293 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Assert.AreEqual('''', jsonWriter.Path)", span="446-446"];
m9_294 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.State()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.State()", span="408-408"];
m9_535 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="842-842"];
m9_536 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="844-844"];
m9_537 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="845-845"];
m9_538 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="847-847"];
m9_539 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.StartArray)", span="849-849"];
m9_540 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs", label="ExceptionAssert.Throws<FormatException>(() =>\r\n                {\r\n                    jsonWriter.WriteToken(JsonToken.Integer, ''three'');\r\n                }, ''Input string was not in a correct format.'')", span="851-854"];
m9_541 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs", label="ExceptionAssert.Throws<ArgumentNullException>(() =>\r\n                {\r\n                    jsonWriter.WriteToken(JsonToken.Integer);\r\n                }, @''Value cannot be null.\r\nParameter name: value'')", span="856-860"];
m9_542 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect_BadValue()", span="842-842"];
m9_952 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", span="1569-1569"];
m9_953 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1571-1571"];
m9_954 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToBoolean(System.IFormatProvider)", span="1569-1569"];
m9_88 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="373-373"];
m9_341 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double?)", span="1056-1056"];
m9_704 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1108-1108"];
m9_705 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="1110-1110"];
m9_706 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                DateTimeZoneHandling = Json.DateTimeZoneHandling.Utc\r\n            }", span="1111-1114"];
m9_708 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(@''''''2000-01-01T01:01:01Z'''''', sw.ToString())", span="1118-1118"];
m9_707 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs", label="writer.WriteValue(new DateTime(2000, 1, 1, 1, 1, 1, DateTimeKind.Unspecified))", span="1116-1116"];
m9_709 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.DateTimeZoneHandling()", span="1108-1108"];
m9_601 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="948-948"];
m9_602 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="950-950"];
m9_603 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="951-951"];
m9_611 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="965-965"];
m9_604 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="string text = ''Hello world.''", span="953-953"];
m9_606 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="JsonTextWriter jsonWriter = new JsonTextWriter(sw)", span="956-956"];
m9_605 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="954-954"];
m9_614 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(text, Encoding.UTF8.GetString(d2, 0, d2.Length))", span="971-971"];
m9_609 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(data)", span="961-961"];
m9_607 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="958-958"];
m9_608 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(Formatting.Indented, jsonWriter.Formatting)", span="959-959"];
m9_610 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="string expected = @''''''SGVsbG8gd29ybGQu''''''", span="964-964"];
m9_612 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(expected, result)", span="967-967"];
m9_613 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="byte[] d2 = Convert.FromBase64String(result.Trim(''''))", span="969-969"];
m9_615 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteSingleBytes()", span="948-948"];
m9_687 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1083-1083"];
m9_688 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="JsonWriter.State[][] stateArray = JsonWriter.BuildStateArray()", span="1085-1085"];
m9_689 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="var valueStates = JsonWriter.StateArrayTempate[7]", span="1087-1087"];
m9_700 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(valueStates, stateArray[(int)valueToken], ''Error for '' + valueToken + '' states.'')", span="1101-1101"];
m9_690 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="EnumUtils.GetValues(typeof(JsonToken))", span="1089-1089"];
m9_691 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label=valueToken, span="1091-1091"];
m9_692 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="JsonToken.Integer", span="1093-1093"];
m9_693 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="JsonToken.Float", span="1094-1094"];
m9_694 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="JsonToken.String", span="1095-1095"];
m9_695 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="JsonToken.Boolean", span="1096-1096"];
m9_696 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="JsonToken.Null", span="1097-1097"];
m9_697 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="JsonToken.Undefined", span="1098-1098"];
m9_698 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="JsonToken.Date", span="1099-1099"];
m9_699 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="JsonToken.Bytes", span="1100-1100"];
m9_701 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BuildStateArray()", span="1083-1083"];
m9_61 [cluster="System.IO.StringWriter.StringWriter()", file="JsonTextWriterTest.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m9_873 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1403-1403"];
m9_874 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="1405-1405"];
m9_875 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="CustomJsonTextWriter writer = new CustomJsonTextWriter(sw) { Formatting = Formatting.Indented }", span="1406-1406"];
m9_885 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(@''{{{\r\n  ''''1ytreporP'''': NULL!!!\r\n}}}'', sw.ToString())", span="1417-1419"];
m9_876 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="writer.WriteStartObject()", span="1407-1407"];
m9_877 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1408-1408"];
m9_878 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="writer.WritePropertyName(''Property1'')", span="1409-1409"];
m9_879 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Property, writer.WriteState)", span="1410-1410"];
m9_880 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''Property1'', writer.Path)", span="1411-1411"];
m9_881 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="writer.WriteNull()", span="1412-1412"];
m9_882 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Object, writer.WriteState)", span="1413-1413"];
m9_883 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="writer.WriteEndObject()", span="1414-1414"];
m9_884 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Start, writer.WriteState)", span="1415-1415"];
m9_886 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CustomJsonTextWriterTests()", span="1403-1403"];
m9_807 [cluster="string.FormatWith(System.IFormatProvider, object, object, object, object)", file="JsonTextWriterTest.cs", label="Entry string.FormatWith(System.IFormatProvider, object, object, object, object)", span="62-62"];
m9_472 [cluster="Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartConstructor(string)", span="390-390"];
m9_906 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1449-1449"];
m9_907 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs", label="string json = @''//comment*//*hi*/\r\n{//comment\r\nName://comment\r\ntrue//comment after true'' + StringUtils.CarriageReturn + @''\r\n,//comment after comma'' + StringUtils.CarriageReturnLineFeed + @''\r\n''''ExpiryDate''''://comment'' + StringUtils.LineFeed + @''\r\nnew\r\n'' + StringUtils.LineFeed +\r\n                  @''Constructor\r\n(//comment\r\nnull//comment\r\n),\r\n        ''''Price'''': 3.99,\r\n        ''''Sizes'''': //comment\r\n[//comment\r\n\r\n          ''''Small''''//comment\r\n]//comment\r\n}//comment \r\n//comment 1 ''", span="1451-1470"];
m9_908 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs", label="JsonTextReader r = new JsonTextReader(new StringReader(json))", span="1472-1472"];
m9_909 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="1474-1474"];
m9_912 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs", label="w.WriteToken(r, true)", span="1478-1478"];
m9_910 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs", label="JsonTextWriter w = new JsonTextWriter(sw)", span="1475-1475"];
m9_913 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(@''/*comment*//*hi*/*/{/*comment*/\r\n  ''''Name'''': /*comment*/ true/*comment after true*//*comment after comma*/,\r\n  ''''ExpiryDate'''': /*comment*/ new Constructor(\r\n    /*comment*/,\r\n    null\r\n    /*comment*/\r\n  ),\r\n  ''''Price'''': 3.99,\r\n  ''''Sizes'''': /*comment*/ [\r\n    /*comment*/\r\n    ''''Small''''\r\n    /*comment*/\r\n  ]/*comment*/\r\n}/*comment *//*comment 1 */'', sw.ToString())", span="1480-1493"];
m9_911 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs", label="w.Formatting = Formatting.Indented", span="1476-1476"];
m9_914 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteComments()", span="1449-1449"];
m9_19 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m9_147 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(uint?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(uint?)", span="1007-1007"];
m9_442 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="697-697"];
m9_443 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="699-699"];
m9_444 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="700-700"];
m9_454 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(@''{''''d0'''':[1,2],''''d1'''':[1,2],''''d2'''':[1,2]}'', sb.ToString())", span="720-720"];
m9_445 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="702-702"];
m9_446 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="int i = 0", span="704-704"];
m9_448 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="707-707"];
m9_450 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''d'' + i)", span="711-711"];
m9_451 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteRawValue(rawJson)", span="712-712"];
m9_453 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndObject()", span="717-717"];
m9_447 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="string rawJson = ''[1,2]''", span="705-705"];
m9_449 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="i < 3", span="709-709"];
m9_452 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="i++", span="714-714"];
m9_455 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteRawValue()", span="697-697"];
m9_994 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", span="1637-1637"];
m9_995 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1639-1639"];
m9_996 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToUInt16(System.IFormatProvider)", span="1637-1637"];
m9_989 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1629-1629"];
m9_990 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs", label="conversionType == typeof(int)", span="1631-1631"];
m9_992 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new Exception(''Type not supported: '' + conversionType.FullName);", span="1634-1634"];
m9_991 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs", label="return _value;", span="1632-1632"];
m9_993 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToType(System.Type, System.IFormatProvider)", span="1629-1629"];
m9_870 [cluster="string.Equals(string, string)", file="JsonTextWriterTest.cs", label="Entry string.Equals(string, string)", span="0-0"];
m9_723 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1144-1144"];
m9_724 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="1146-1146"];
m9_725 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.EscapeNonAscii\r\n            }", span="1147-1150"];
m9_728 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="string json = sw.ToString()", span="1156-1156"];
m9_726 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="string unicode = ''\u5f20''", span="1152-1152"];
m9_727 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="writer.WriteValue(unicode)", span="1154-1154"];
m9_732 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(unicode, reader.ReadAsString())", span="1163-1163"];
m9_735 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="writer.WriteValue(unicode)", span="1171-1171"];
m9_729 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(8, json.Length)", span="1158-1158"];
m9_730 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(@''''''\u5f20'''''', json)", span="1159-1159"];
m9_731 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="1161-1161"];
m9_733 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="sw = new StringWriter()", span="1165-1165"];
m9_734 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="writer = new JsonTextWriter(sw)\r\n            {\r\n                StringEscapeHandling = StringEscapeHandling.Default\r\n            }", span="1166-1169"];
m9_736 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="json = sw.ToString()", span="1173-1173"];
m9_737 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(3, json.Length)", span="1175-1175"];
m9_738 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''\''\u5f20\'''', json)", span="1176-1176"];
m9_739 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.NonAsciiStringEscapeHandling()", span="1144-1144"];
m9_974 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", span="1604-1604"];
m9_975 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1606-1606"];
m9_976 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToInt32(System.IFormatProvider)", span="1604-1604"];
m9_429 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="683-683"];
m9_430 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(''[1,2,3,4,5]''))", span="685-685"];
m9_431 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs", label="reader.Read()", span="686-686"];
m9_432 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs", label="reader.Read()", span="687-687"];
m9_435 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs", label="writer.WriteToken(reader)", span="691-691"];
m9_433 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter()", span="689-689"];
m9_434 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="690-690"];
m9_436 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''1'', sw.ToString())", span="693-693"];
m9_437 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteToken()", span="683-683"];
m9_93 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(double)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(double)", span="882-882"];
m9_95 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(object)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(object)", span="1229-1229"];
m9_168 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="240-240"];
m9_169 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTextWriterTest.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringWriter sw = new StringWriter();\r\n                using (JsonTextWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n                    jsonWriter.WriteValue(new Version(1, 1, 1, 1));\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, @''Unsupported type: System.Version. Use the JsonSerializer class to get the object's JSON representation. Path ''.'')", span="242-251"];
m9_170 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteValueObjectWithUnsupportedValue()", span="240-240"];
m9_143 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(sbyte?)", span="1130-1130"];
m9_139 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="176-176"];
m9_956 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", span="1574-1574"];
m9_957 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="throw new NotImplementedException();", span="1576-1576"];
m9_958 [cluster="Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.ConvertibleInt.ToByte(System.IFormatProvider)", span="1574-1574"];
m9_39 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="106-106"];
m9_40 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="MemoryStream ms = new MemoryStream()", span="108-108"];
m9_41 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(new StreamWriter(ms))", span="109-109"];
m9_42 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="Assert.IsTrue(ms.CanRead)", span="111-111"];
m9_44 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="Assert.IsFalse(ms.CanRead)", span="113-113"];
m9_43 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="writer.Close()", span="112-112"];
m9_45 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="ms = new MemoryStream()", span="115-115"];
m9_46 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="writer = new JsonTextWriter(new StreamWriter(ms)) { CloseOutput = false }", span="116-116"];
m9_47 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="Assert.IsTrue(ms.CanRead)", span="118-118"];
m9_49 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="Assert.IsTrue(ms.CanRead)", span="120-120"];
m9_48 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="writer.Close()", span="119-119"];
m9_50 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.CloseOutput()", span="106-106"];
m9_710 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextWriterTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m9_520 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="822-822"];
m9_521 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="824-824"];
m9_522 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="825-825"];
m9_531 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(@''[1,{''''string'''':2147483647}]'', sb.ToString())", span="838-838"];
m9_523 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="827-827"];
m9_524 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.StartArray)", span="829-829"];
m9_525 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.Integer, 1)", span="830-830"];
m9_526 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.StartObject)", span="831-831"];
m9_527 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.PropertyName, ''string'')", span="832-832"];
m9_528 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.Integer, int.MaxValue)", span="833-833"];
m9_529 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.EndObject)", span="834-834"];
m9_530 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteToken(JsonToken.EndArray)", span="835-835"];
m9_532 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteTokenDirect()", span="822-822"];
m9_38 [cluster="System.Text.StringBuilder.ToString()", file="JsonTextWriterTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m9_549 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="865-865"];
m9_550 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTextWriterTest.cs", label="ExceptionAssert.Throws<JsonWriterException>(() =>\r\n            {\r\n                StringBuilder sb = new StringBuilder();\r\n                StringWriter sw = new StringWriter(sb);\r\n\r\n                using (JsonWriter jsonWriter = new JsonTextWriter(sw))\r\n                {\r\n                    jsonWriter.WriteStartArray();\r\n\r\n                    jsonWriter.WriteValue(0.0);\r\n\r\n                    jsonWriter.WriteEndArray();\r\n                    jsonWriter.WriteEndArray();\r\n                }\r\n            }, ''No token to close. Path ''.'')", span="867-881"];
m9_551 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.BadWriteEndArray()", span="865-865"];
m9_617 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(byte[])", span="585-585"];
m9_616 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextWriterTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m9_867 [cluster="Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.ToCharAsUnicode(char, char[])", span="126-126"];
m9_92 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="835-835"];
m9_640 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1010-1010"];
m9_641 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="1012-1012"];
m9_642 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="1013-1013"];
m9_683 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(@''[\r\n  {\r\n    ''''Property1'''': [\r\n      1,\r\n      [\r\n        [\r\n          []\r\n        ]\r\n      ]\r\n    ]\r\n  },\r\n  {\r\n    ''''Property2'''': new Constructor1(\r\n      null,\r\n      [\r\n        1\r\n      ]\r\n    )\r\n  }\r\n]'', sb.ToString())", span="1060-1079"];
m9_643 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="string text = ''Hello world.''", span="1015-1015"];
m9_645 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="1018-1018"];
m9_644 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="byte[] data = Encoding.UTF8.GetBytes(text)", span="1016-1016"];
m9_646 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.Formatting = Formatting.Indented", span="1020-1020"];
m9_647 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteStartArray()", span="1022-1022"];
m9_648 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual('''', writer.Path)", span="1023-1023"];
m9_649 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteStartObject()", span="1024-1024"];
m9_650 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[0]'', writer.Path)", span="1025-1025"];
m9_651 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WritePropertyName(''Property1'')", span="1026-1026"];
m9_652 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1027-1027"];
m9_653 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteStartArray()", span="1028-1028"];
m9_654 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[0].Property1'', writer.Path)", span="1029-1029"];
m9_655 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteValue(1)", span="1030-1030"];
m9_656 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[0].Property1[0]'', writer.Path)", span="1031-1031"];
m9_657 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteStartArray()", span="1032-1032"];
m9_658 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[0].Property1[1]'', writer.Path)", span="1033-1033"];
m9_659 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteStartArray()", span="1034-1034"];
m9_660 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[0].Property1[1][0]'', writer.Path)", span="1035-1035"];
m9_661 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteStartArray()", span="1036-1036"];
m9_662 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[0].Property1[1][0][0]'', writer.Path)", span="1037-1037"];
m9_663 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteEndObject()", span="1038-1038"];
m9_664 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[0]'', writer.Path)", span="1039-1039"];
m9_665 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteStartObject()", span="1040-1040"];
m9_666 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[1]'', writer.Path)", span="1041-1041"];
m9_667 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WritePropertyName(''Property2'')", span="1042-1042"];
m9_668 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1043-1043"];
m9_669 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteStartConstructor(''Constructor1'')", span="1044-1044"];
m9_670 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[1].Property2'', writer.Path)", span="1045-1045"];
m9_671 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteNull()", span="1046-1046"];
m9_672 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[1].Property2[0]'', writer.Path)", span="1047-1047"];
m9_673 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteStartArray()", span="1048-1048"];
m9_674 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1049-1049"];
m9_675 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteValue(1)", span="1050-1050"];
m9_676 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[1].Property2[1][0]'', writer.Path)", span="1051-1051"];
m9_677 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteEnd()", span="1052-1052"];
m9_678 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[1].Property2[1]'', writer.Path)", span="1053-1053"];
m9_679 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteEndObject()", span="1054-1054"];
m9_680 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(''[1]'', writer.Path)", span="1055-1055"];
m9_681 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="writer.WriteEndArray()", span="1056-1056"];
m9_682 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Assert.AreEqual('''', writer.Path)", span="1057-1057"];
m9_684 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.Path()", span="1010-1010"];
m9_871 [cluster="System.IO.TextWriter.Write(string)", file="JsonTextWriterTest.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m9_171 [cluster="Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.ExceptionAssert.Throws<TException>(System.Action, params string[])", span="358-358"];
m9_194 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="277-277"];
m9_195 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="279-279"];
m9_196 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="280-280"];
m9_213 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="string result = sb.ToString()", span="311-311"];
m9_197 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="282-282"];
m9_198 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.Formatting = Formatting.Indented", span="284-284"];
m9_199 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="286-286"];
m9_200 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''CPU'')", span="287-287"];
m9_201 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''Intel'')", span="288-288"];
m9_202 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''PSU'')", span="289-289"];
m9_203 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''500W'')", span="290-290"];
m9_204 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''Drives'')", span="291-291"];
m9_205 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartArray()", span="292-292"];
m9_206 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''DVD read/writer'')", span="293-293"];
m9_207 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteComment(''(broken)'')", span="294-294"];
m9_208 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''500 gigabyte hard drive'')", span="295-295"];
m9_209 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''200 gigabype hard drive'')", span="296-296"];
m9_210 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndObject()", span="297-297"];
m9_211 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(WriteState.Start, jsonWriter.WriteState)", span="298-298"];
m9_212 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="string expected = @''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''PSU'''': ''''500W'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer''''\r\n    /*(broken)*/,\r\n    ''''500 gigabyte hard drive'''',\r\n    ''''200 gigabype hard drive''''\r\n  ]\r\n}''", span="301-310"];
m9_214 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="StringAssert.AreEqual(expected, result)", span="313-313"];
m9_215 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteEnd()", span="277-277"];
m9_457 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="724-724"];
m9_458 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="StringBuilder sb = new StringBuilder()", span="726-726"];
m9_459 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="StringWriter sw = new StringWriter(sb)", span="727-727"];
m9_470 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="Assert.AreEqual(@''{''''con'''':new Ext.data.JsonStore({''''aa'''':''''aa''''})}'', sb.ToString())", span="744-744"];
m9_460 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="729-729"];
m9_461 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="731-731"];
m9_462 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''con'')", span="732-732"];
m9_463 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartConstructor(''Ext.data.JsonStore'')", span="734-734"];
m9_464 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteStartObject()", span="735-735"];
m9_465 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="jsonWriter.WritePropertyName(''aa'')", span="736-736"];
m9_466 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteValue(''aa'')", span="737-737"];
m9_467 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndObject()", span="738-738"];
m9_468 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndConstructor()", span="739-739"];
m9_469 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="jsonWriter.WriteEndObject()", span="741-741"];
m9_471 [cluster="Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", file="JsonTextWriterTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextWriterTest.WriteObjectNestedInConstructor()", span="724-724"];
m9_1003 [file="JsonTextWriterTest.cs", label=jsonWriter, span=""];
m9_1004 [file="JsonTextWriterTest.cs", label="Newtonsoft.Json.Tests.CustomJsonTextWriter", span=""];
m9_1005 [file="JsonTextWriterTest.cs", label="out Newtonsoft.Json.Tests.ConvertibleInt", span=""];
m9_1006 [file="JsonTextWriterTest.cs", label="Newtonsoft.Json.Tests.ConvertibleInt", span=""];
m11_189 [cluster="Unk.Descendants", file="PerformanceTests.cs", label="Entry Unk.Descendants", span=""];
m11_279 [cluster="System.IO.MemoryStream.ToArray()", file="PerformanceTests.cs", label="Entry System.IO.MemoryStream.ToArray()", span="0-0"];
m11_119 [cluster="System.Console.WriteLine(string, object)", file="PerformanceTests.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m11_632 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", file="PerformanceTests.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)", span="0-0"];
m11_471 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartObject()", span="166-166"];
m11_460 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="34-34"];
m11_30 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="304-304"];
m11_528 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(System.IO.TextReader, System.Type)", span="684-684"];
m11_351 [cluster="System.DateTime.AddDays(double)", file="PerformanceTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m11_518 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", span="834-834"];
m11_519 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs", label="Type type = typeof(T)", span="836-836"];
m11_521 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs", label=isoDateTimeConverter, span="842-842"];
m11_523 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs", label="var value = (T)serializer.Deserialize(new StringReader(json), type)", span="845-845"];
m11_524 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs", label="return value;", span="846-846"];
m11_520 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="838-838"];
m11_522 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs", label="serializer.Converters.Add(new IsoDateTimeConverter())", span="843-843"];
m11_525 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNet<T>(string, bool)", span="834-834"];
m11_207 [cluster="Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Utilities.JavaScriptUtils.WriteEscapedJavaScriptString(System.IO.TextWriter, string, char, bool, bool[], Newtonsoft.Json.StringEscapeHandling, ref char[])", span="101-101"];
m11_142 [cluster="Newtonsoft.Json.Linq.JObject.Parse(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.Parse(string)", span="371-371"];
m11_730 [cluster="Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.Add(Newtonsoft.Json.Linq.JToken)", span="330-330"];
m11_132 [cluster="int.ToString()", file="PerformanceTests.cs", label="Entry int.ToString()", span="0-0"];
m11_483 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", span="794-794"];
m11_491 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs", label="string json", span="796-796"];
m11_494 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs", label="formatter.Serialize(ms, value)", span="799-799"];
m11_496 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs", label="return json;", span="803-803"];
m11_492 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs", label="MemoryStream ms = new MemoryStream(Buffer)", span="797-797"];
m11_493 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs", label="BinaryFormatter formatter = new BinaryFormatter()", span="798-798"];
m11_495 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs", label="json = ''Bytes = '' + ms.Position", span="801-801"];
m11_497 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeBinaryFormatter(object)", span="794-794"];
m11_374 [cluster="System.IO.StreamReader.ReadToEnd()", file="PerformanceTests.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m11_61 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="219-219"];
m11_62 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<TestClass>(SerializeMethod.DataContractSerializer, XmlText)", span="221-221"];
m11_63 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<TestClass>(SerializeMethod.BinaryFormatter, HexToBytes(BinaryFormatterHex))", span="222-222"];
m11_64 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs", label="DeserializeTests<TestClass>(JsonText)", span="223-223"];
m11_65 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<TestClass>(SerializeMethod.JsonNetWithIsoConverter, JsonIsoText)", span="224-224"];
m11_66 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<TestClass>(SerializeMethod.JsonNetBinary, HexToBytes(BsonHex))", span="225-225"];
m11_67 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.Deserialize()", span="219-219"];
m11_35 [cluster="System.IO.File.ReadAllText(string)", file="PerformanceTests.cs", label="Entry System.IO.File.ReadAllText(string)", span="0-0"];
m11_36 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", span="808-808"];
m11_500 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="Deserialize<T>(method, json)", span="813-813"];
m11_503 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="iterations = iterations ?? Iterations", span="818-818"];
m11_507 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="value = Deserialize<T>(method, json)", span="823-823"];
m11_506 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="x < iterations.Value", span="821-821"];
m11_499 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label=warmUp, span="812-812"];
m11_501 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="Stopwatch timed = new Stopwatch()", span="815-815"];
m11_502 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="timed.Start()", span="816-816"];
m11_504 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="T value = default(T)", span="820-820"];
m11_508 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="x++", span="821-821"];
m11_512 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="Console.WriteLine(value)", span="830-830"];
m11_498 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="GC.Collect()", span="810-810"];
m11_510 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="Console.WriteLine(''Deserialize method: {0}'', method)", span="828-828"];
m11_505 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="int x = 0", span="821-821"];
m11_509 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="timed.Stop()", span="826-826"];
m11_511 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="Console.WriteLine(''{0} ms'', timed.ElapsedMilliseconds)", span="829-829"];
m11_513 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="Console.WriteLine()", span="831-831"];
m11_514 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.BenchmarkDeserializeMethod<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object, int?, bool)", span="808-808"];
m11_648 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", span="1033-1033"];
m11_650 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JsonNet, s)", span="1037-1037"];
m11_649 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", file="PerformanceTests.cs", label="string s = (new string('\0', 30))", span="1035-1035"];
m11_651 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeUnicodeChars()", span="1033-1033"];
m11_188 [cluster="Unk.Parse", file="PerformanceTests.cs", label="Entry Unk.Parse", span=""];
m11_565 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsString()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsString()", span="349-349"];
m11_276 [cluster="Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.BsonWriter(System.IO.Stream)", span="65-65"];
m11_462 [cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104"];
m11_481 [cluster="System.IO.StringWriter.ToString()", file="PerformanceTests.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m11_472 [cluster="Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WritePropertyName(string)", span="222-222"];
m11_364 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", span="625-625"];
m11_365 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs", label="DataContractJsonSerializer dataContractSerializer\r\n                = new DataContractJsonSerializer(value.GetType())", span="627-628"];
m11_367 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs", label="dataContractSerializer.WriteObject(ms, value)", span="631-631"];
m11_370 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs", label="return sr.ReadToEnd();", span="637-637"];
m11_366 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs", label="MemoryStream ms = new MemoryStream()", span="630-630"];
m11_368 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="633-633"];
m11_369 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs", label="StreamReader sr = new StreamReader(ms)", span="635-635"];
m11_371 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContractJson(object)", span="625-625"];
m11_568 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", span="909-909"];
m11_569 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="Address a = new Address()", span="911-911"];
m11_570 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="reader.Read()", span="912-912"];
m11_571 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="reader.TokenType == JsonToken.PropertyName", span="914-914"];
m11_572 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="(string)reader.Value", span="916-916"];
m11_574 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="a.Street = reader.ReadAsString()", span="919-919"];
m11_576 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="a.Phone = reader.ReadAsString()", span="922-922"];
m11_578 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="a.Entered = reader.ReadAsDateTime().GetValueOrDefault()", span="925-925"];
m11_579 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="return a;", span="934-934"];
m11_573 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="''Street''", span="918-918"];
m11_575 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="''Phone''", span="921-921"];
m11_577 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="''Entered''", span="924-924"];
m11_580 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.CreateAddress(Newtonsoft.Json.JsonTextReader)", span="909-909"];
m11_78 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", span="243-243"];
m11_84 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs", label="SerializeSize(image)", span="251-251"];
m11_79 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs", label="Image image = new Image()", span="245-245"];
m11_83 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs", label="image.Caption = ''I have no idea what you are talking about so here's a bunny with a pancake on its head''", span="249-249"];
m11_80 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs", label="image.Data = System.IO.File.ReadAllBytes(@''bunny_pancake.jpg'')", span="246-246"];
m11_81 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs", label="image.FileName = ''bunny_pancake.jpg''", span="247-247"];
m11_82 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs", label="image.Author = ''Hironori Akutagawa''", span="248-248"];
m11_85 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeData()", span="243-243"];
m11_474 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(string)", span="369-369"];
m11_357 [cluster="Newtonsoft.Json.Tests.SimpleObject.SimpleObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.SimpleObject.SimpleObject()", span="1259-1259"];
m11_590 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="708-708"];
m11_120 [cluster="System.Diagnostics.Stopwatch.Stop()", file="PerformanceTests.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m11_624 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", span="993-993"];
m11_625 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(xml))", span="995-995"];
m11_627 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs", label="return (T)serializer.ReadObject(ms);", span="998-998"];
m11_626 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs", label="DataContractSerializer serializer = new DataContractSerializer(typeof(T))", span="997-997"];
m11_628 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContract<T>(string)", span="993-993"];
m11_653 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", span="1041-1041"];
m11_656 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="int i = 0", span="1045-1045"];
m11_655 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="timer.Start()", span="1044-1044"];
m11_657 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="i < 100000", span="1045-1045"];
m11_659 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="i++", span="1045-1045"];
m11_662 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="Console.WriteLine(linq)", span="1058-1058"];
m11_654 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="Stopwatch timer = new Stopwatch()", span="1043-1043"];
m11_658 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="JObject o = JObject.Parse(@''{\r\n  ''''CPU'''': ''''Intel'''',\r\n  ''''Drives'''': [\r\n    ''''DVD read/writer'''',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'')", span="1047-1053"];
m11_660 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="timer.Stop()", span="1055-1055"];
m11_661 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="string linq = timer.Elapsed.TotalSeconds.ToString()", span="1057-1057"];
m11_663 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.ParseJObject()", span="1041-1041"];
m11_647 [cluster="Newtonsoft.Json.Tests.LargeRecursiveTestClass.LargeRecursiveTestClass()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.LargeRecursiveTestClass.LargeRecursiveTestClass()", span="1160-1160"];
m11_131 [cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87"];
m11_742 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="703-703"];
m11_516 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="965-965"];
m11_604 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return DeserializeJsonNet<T>((string)json, false);", span="970-970"];
m11_606 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return DeserializeJsonNet<T>((string)json, true);", span="972-972"];
m11_609 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return (T)(object)DeserializeJsonNetManual((string)json);", span="975-975"];
m11_612 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return DeserializeJsonNetBinary<T>((byte[])json);", span="979-979"];
m11_614 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return DeserializeBinaryFormatter<T>((byte[])json);", span="981-981"];
m11_616 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return DeserializeWebExtensions<T>((string)json);", span="983-983"];
m11_618 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return DeserializeDataContract<T>((string)json);", span="985-985"];
m11_620 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return DeserializeDataContractJson<T>((string)json);", span="987-987"];
m11_603 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JsonNet", span="969-969"];
m11_605 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JsonNetWithIsoConverter", span="971-971"];
m11_608 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="typeof(T) == typeof(TestClass)", span="974-974"];
m11_611 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JsonNetBinary", span="978-978"];
m11_613 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.BinaryFormatter", span="980-980"];
m11_615 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JavaScriptSerializer", span="982-982"];
m11_617 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.DataContractSerializer", span="984-984"];
m11_619 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.DataContractJsonSerializer", span="986-986"];
m11_602 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label=method, span="967-967"];
m11_621 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="throw new ArgumentOutOfRangeException(''method'');", span="989-989"];
m11_610 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return default(T);", span="977-977"];
m11_607 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JsonNetManual", span="973-973"];
m11_622 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.Deserialize<T>(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="965-965"];
m11_478 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(System.DateTime)", span="557-557"];
m11_633 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", span="1009-1009"];
m11_645 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JsonNetBinary, rootValue)", span="1029-1029"];
m11_636 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="int i = 0", span="1013-1013"];
m11_634 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="LargeRecursiveTestClass rootValue = null", span="1011-1011"];
m11_635 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="LargeRecursiveTestClass parentValue = null", span="1012-1012"];
m11_637 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="i < 20", span="1013-1013"];
m11_640 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="rootValue = currentValue", span="1022-1022"];
m11_644 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="i++", span="1013-1013"];
m11_639 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="rootValue == null", span="1021-1021"];
m11_638 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="LargeRecursiveTestClass currentValue = new LargeRecursiveTestClass()\r\n                {\r\n                    Integer = int.MaxValue,\r\n                    Text = ''The quick red fox jumped over the lazy dog.''\r\n                }", span="1015-1019"];
m11_641 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="parentValue != null", span="1023-1023"];
m11_642 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="parentValue.Child = currentValue", span="1024-1024"];
m11_643 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="parentValue = currentValue", span="1026-1026"];
m11_646 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeLargeObject()", span="1009-1009"];
m11_0 [cluster="Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.CanConvert(System.Type)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.CanConvert(System.Type)", span="33-33"];
m11_2 [cluster="Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.CanConvert(System.Type)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.CanConvert(System.Type)", span="33-33"];
m11_1 [cluster="Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.CanConvert(System.Type)", file="PerformanceTests.cs", label="return objectType == typeof(System.Net.Mail.Attachment);", span="35-35"];
m11_3 [cluster="Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="38-38"];
m11_11 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", span="121-121"];
m11_19 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", span="580-580"];
m11_332 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="TestClass test = new TestClass()", span="582-582"];
m11_347 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="return test;", span="604-604"];
m11_333 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="test.dictionary = new Dictionary<string, int> { { ''Val & asd1'', 1 }, { ''Val2 & asd1'', 3 }, { ''Val3 & asd1'', 4 } }", span="584-584"];
m11_334 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="test.Address1.Street = ''fff Street''", span="587-587"];
m11_335 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="test.Address1.Entered = DateTime.Now.AddDays(20)", span="588-588"];
m11_336 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="test.BigNumber = 34123123123.121M", span="590-590"];
m11_337 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="test.Now = DateTime.Now.AddHours(1)", span="591-591"];
m11_338 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="test.strings = new List<string>() { null, ''Markus egger ]><[, (2nd)'', null }", span="592-592"];
m11_342 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="test.Addresses.Add(address)", span="598-598"];
m11_346 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="test.Addresses.Add(address)", span="603-603"];
m11_339 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="Address address = new Address()", span="594-594"];
m11_341 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="address.Street = ''\u001farray\u003caddress''", span="596-596"];
m11_343 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="address = new Address()", span="600-600"];
m11_345 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="address.Street = ''array 2 address''", span="602-602"];
m11_340 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="address.Entered = DateTime.Now.AddDays(-1)", span="595-595"];
m11_344 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="address.Entered = DateTime.Now.AddDays(-2)", span="601-601"];
m11_348 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.CreateSerializationObject()", span="580-580"];
m11_315 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", file="PerformanceTests.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream, object)", span="0-0"];
m11_31 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="182-182"];
m11_33 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<IList<RootObject>>(SerializeMethod.JsonNet, json, Iterations / 10, false)", span="186-186"];
m11_32 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="PerformanceTests.cs", label="var json = System.IO.File.ReadAllText(''large.json'')", span="184-184"];
m11_34 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeLargeJson()", span="182-182"];
m11_362 [cluster="JavaScriptSerializer.cstr", file="PerformanceTests.cs", label="Entry JavaScriptSerializer.cstr", span=""];
m11_15 [cluster="System.NotImplementedException.NotImplementedException()", file="PerformanceTests.cs", label="Entry System.NotImplementedException.NotImplementedException()", span="0-0"];
m11_16 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="PerformanceTests.cs", label="TestClass test = CreateSerializationObject()", span="129-129"];
m11_17 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="PerformanceTests.cs", label="SerializeTests(test)", span="131-131"];
m11_18 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.Serialize()", span="127-127"];
m11_4 [cluster="Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PerformanceTests.cs", label="var info = serializer.Deserialize<AttachmentInfo>(reader)", span="40-40"];
m11_355 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSimpleObject()", file="PerformanceTests.cs", label="return new SimpleObject\r\n            {\r\n                Name = ''Simple-1'',\r\n                Id = 2311,\r\n                Address = ''Planet Earth'',\r\n                Scores = new[] { 82, 96, 49, 40, 38, 38, 78, 96, 2, 39 }\r\n            };", span="609-615"];
m11_356 [cluster="Newtonsoft.Json.Tests.PerformanceTests.CreateSimpleObject()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.CreateSimpleObject()", span="607-607"];
m11_467 [cluster="JArray.cstr", file="PerformanceTests.cs", label="Entry JArray.cstr", span=""];
m11_74 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", span="237-237"];
m11_75 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", file="PerformanceTests.cs", label="SerializeSize(CreateSerializationObject())", span="239-239"];
m11_76 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeSizeNormal()", span="237-237"];
m11_10 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="PerformanceTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m11_316 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Serialize(method, value)", span="561-561"];
m11_321 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="x < Iterations", span="567-567"];
m11_322 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = Serialize(method, value)", span="569-569"];
m11_320 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="int x = 0", span="567-567"];
m11_319 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="string json = null", span="566-566"];
m11_317 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Stopwatch timed = new Stopwatch()", span="563-563"];
m11_323 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="x++", span="567-567"];
m11_324 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="timed.Stop()", span="572-572"];
m11_327 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Console.WriteLine(json)", span="576-576"];
m11_325 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Console.WriteLine(''Serialize method: {0}'', method)", span="574-574"];
m11_318 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="timed.Start()", span="564-564"];
m11_326 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Console.WriteLine(''{0} ms'', timed.ElapsedMilliseconds)", span="575-575"];
m11_328 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Console.WriteLine()", span="577-577"];
m11_329 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.BenchmarkSerializeMethod(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="559-559"];
m11_564 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="PerformanceTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m11_567 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="331-331"];
m11_5 [cluster="Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="PerformanceTests.cs", label="var attachment = info != null\r\n                ? new System.Net.Mail.Attachment(new MemoryStream(Convert.FromBase64String(info.ContentBase64)), ''application/octet-stream'')\r\n                {\r\n                    ContentDisposition = { FileName = info.FileName }\r\n                }\r\n                : null", span="42-47"];
m11_51 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.DataContractSerializer, value)", span="207-207"];
m11_52 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.BinaryFormatter, value)", span="208-208"];
m11_53 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JavaScriptSerializer, value)", span="209-209"];
m11_54 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.DataContractJsonSerializer, value)", span="210-210"];
m11_55 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JsonNet, value)", span="211-211"];
m11_56 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JsonNetLinq, value)", span="212-212"];
m11_57 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JsonNetManual, value)", span="213-213"];
m11_58 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JsonNetWithIsoConverter, value)", span="214-214"];
m11_59 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JsonNetBinary, value)", span="215-215"];
m11_60 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeTests(object)", span="205-205"];
m11_121 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", span="299-299"];
m11_129 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="TimeOperation(() =>\r\n            {\r\n                JObject oo = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    oo = JObject.Parse(jsonText);\r\n                }\r\n\r\n                return oo;\r\n            }, ''JObject'')", span="311-320"];
m11_128 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="int interations = 1000", span="309-309"];
m11_123 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="int i = 0", span="302-302"];
m11_127 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="string jsonText = o.ToString()", span="306-306"];
m11_122 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="JObject o = new JObject()", span="301-301"];
m11_124 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="i < 50", span="302-302"];
m11_125 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="o[i.ToString()] = i", span="304-304"];
m11_126 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="i++", span="302-302"];
m11_130 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.BuildJObject()", span="299-299"];
m11_14 [cluster="Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.TestObjects.AttachmentReadConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="51-51"];
m11_69 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<T>(SerializeMethod.JavaScriptSerializer, json)", span="230-230"];
m11_70 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<T>(SerializeMethod.DataContractJsonSerializer, json)", span="231-231"];
m11_71 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<T>(SerializeMethod.JsonNet, json)", span="232-232"];
m11_72 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<T>(SerializeMethod.JsonNetManual, json)", span="233-233"];
m11_73 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeTests<T>(string)", span="228-228"];
m11_697 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", span="1101-1101"];
m11_698 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", file="PerformanceTests.cs", label="TimeOperation<object>(() =>\r\n            {\r\n                for (int i = 0; i < Iterations * 100; i++)\r\n                {\r\n                    JObject test = new JObject(\r\n                        new JProperty(''one'', 1),\r\n                        new JProperty(''two'', 2));\r\n\r\n                    test[''i''] = i;\r\n                    int j = (int)test[''i''];\r\n                    test[''j''] = j;\r\n                }\r\n                return null;\r\n            }, ''JObjectCreationAndPropertyAccess'')", span="1103-1116"];
m11_699 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.JObjectCreationAndPropertyAccess()", span="1101-1101"];
m11_191 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", span="399-399"];
m11_194 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", color=green, community=0, file="PerformanceTests.cs", label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    using (StringWriter w = StringUtils.CreateStringWriter(StringUtils.GetLength(text) ?? 16))\r\n                    {\r\n                        char[] buffer = null;\r\n                        JavaScriptUtils.WriteEscapedJavaScriptString(w, text, '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, ref buffer);\r\n                    }\r\n                }\r\n\r\n                return '''';\r\n            }, ''New'')", prediction=21, span="425-437"];
m11_192 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", file="PerformanceTests.cs", label="string text = @''The general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n\r\nThe general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n\r\nThe general form of an HTML element is therefore: <tag attribute1=''''value1'''' attribute2=''''value2''''>content</tag>.\r\nSome HTML elements are defined as empty elements and take the form <tag attribute1=''''value1'''' attribute2=''''value2'''' >.\r\nEmpty elements may enclose no content, for instance, the BR tag or the inline IMG tag.\r\nThe name of an HTML element is the name used in the tags.\r\nNote that the end tag's name is preceded by a slash character, ''''/'''', and that in empty elements the end tag is neither required nor allowed.\r\nIf attributes are not mentioned, default values are used in each case.\r\n''", span="401-421"];
m11_193 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", file="PerformanceTests.cs", label="int interations = 1000", span="423-423"];
m11_195 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeString()", span="399-399"];
m11_463 [cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293"];
m11_9 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", span="113-113"];
m11_665 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", span="1062-1062"];
m11_667 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", file="PerformanceTests.cs", label="TimeOperation<object>(() =>\r\n            {\r\n                for (int i = 0; i < Iterations; i++)\r\n                {\r\n                    test[''dummy''] = new JValue(i);\r\n                    test.ToString(Formatting.None);\r\n                }\r\n                return null;\r\n            }, ''JObject.ToString'')", span="1066-1074"];
m11_666 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", file="PerformanceTests.cs", label="JObject test = JObject.Parse(JsonText)", span="1064-1064"];
m11_668 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.JObjectToString()", span="1062-1062"];
m11_275 [cluster="System.IO.MemoryStream.MemoryStream()", file="PerformanceTests.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m11_468 [cluster="Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString(Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="421-421"];
m11_8 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JsonNet, helloWorld)", span="117-117"];
m11_117 [cluster="System.Diagnostics.Stopwatch.Start()", file="PerformanceTests.cs", label="Entry System.Diagnostics.Stopwatch.Start()", span="0-0"];
m11_372 [cluster="System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", file="PerformanceTests.cs", label="Entry System.IO.MemoryStream.Seek(long, System.IO.SeekOrigin)", span="0-0"];
m11_77 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", span="478-478"];
m11_241 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="byte[] jsonBytes = TimeOperation(() =>\r\n            {\r\n                string json = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    json = JsonConvert.SerializeObject(value, Formatting.None);\r\n                }\r\n\r\n                return Encoding.UTF8.GetBytes(json);\r\n            }, ''Json.NET'')", span="483-492"];
m11_242 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="byte[] bsonBytes = TimeOperation(() =>\r\n            {\r\n                MemoryStream ms = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    ms = new MemoryStream();\r\n                    JsonSerializer serializer = new JsonSerializer();\r\n                    BsonWriter writer = new BsonWriter(ms);\r\n\r\n                    serializer.Serialize(writer, value);\r\n                    writer.Flush();\r\n                }\r\n\r\n                return ms.ToArray();\r\n            }, ''Json.NET BSON'')", span="494-508"];
m11_243 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="byte[] xmlBytes = TimeOperation(() =>\r\n            {\r\n                MemoryStream ms = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    ms = new MemoryStream();\r\n                    DataContractSerializer dataContractSerializer = new DataContractSerializer(value.GetType());\r\n                    dataContractSerializer.WriteObject(ms, value);\r\n                }\r\n\r\n                return ms.ToArray();\r\n            }, ''DataContractSerializer'')", span="510-521"];
m11_244 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="byte[] wcfJsonBytes = TimeOperation(() =>\r\n            {\r\n                MemoryStream ms = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    ms = new MemoryStream();\r\n                    DataContractJsonSerializer dataContractJsonSerializer = new DataContractJsonSerializer(value.GetType());\r\n                    dataContractJsonSerializer.WriteObject(ms, value);\r\n                }\r\n\r\n                return ms.ToArray();\r\n            }, ''DataContractJsonSerializer'')", span="523-534"];
m11_245 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="byte[] binaryFormatterBytes = TimeOperation(() =>\r\n            {\r\n                MemoryStream ms = null;\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    ms = new MemoryStream();\r\n                    BinaryFormatter formatter = new BinaryFormatter();\r\n                    formatter.Serialize(ms, value);\r\n                }\r\n\r\n                return ms.ToArray();\r\n            }, ''BinaryFormatter'')", span="536-547"];
m11_240 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="int interations = 100", span="481-481"];
m11_246 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="Console.WriteLine(''Json.NET size: {0} bytes'', jsonBytes.Length)", span="549-549"];
m11_247 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="Console.WriteLine(''BSON size: {0} bytes'', bsonBytes.Length)", span="550-550"];
m11_249 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="Console.WriteLine(''WCF XML size: {0} bytes'', xmlBytes.Length)", span="552-552"];
m11_248 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="Console.WriteLine(''WCF JSON size: {0} bytes'', wcfJsonBytes.Length)", span="551-551"];
m11_250 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="Console.WriteLine(''BinaryFormatter size: {0} bytes'', binaryFormatterBytes.Length)", span="553-553"];
m11_251 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeSize(object)", span="478-478"];
m11_29 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="72-72"];
m11_464 [cluster="Newtonsoft.Json.Linq.JArray.JArray(object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray(object)", span="91-91"];
m11_20 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", span="135-135"];
m11_21 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs", label="int i = 0", span="137-137"];
m11_22 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs", label="i < 10", span="137-137"];
m11_26 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs", label="i++", span="137-137"];
m11_23 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs", label="var fs = System.IO.File.OpenText(''large.json'')", span="139-139"];
m11_25 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs", label="jsonTextReader.Read()", span="142-142"];
m11_24 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs", label="JsonTextReader jsonTextReader = new JsonTextReader(fs)", span="140-140"];
m11_27 [cluster="Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.ReadLargeJson()", span="135-135"];
m11_677 [cluster="Newtonsoft.Json.Linq.JValue.JValue(long)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(long)", span="70-70"];
m11_465 [cluster="JObject.cstr", file="PerformanceTests.cs", label="Entry JObject.cstr", span=""];
m11_595 [cluster="Unk.>", file="PerformanceTests.cs", label="Entry Unk.>", span=""];
m11_466 [cluster="Unk.Select", file="PerformanceTests.cs", label="Entry Unk.Select", span=""];
m11_623 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", span="1001-1001"];
m11_629 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", file="PerformanceTests.cs", label="BinaryFormatter formatter = new BinaryFormatter()", span="1003-1003"];
m11_630 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", file="PerformanceTests.cs", label="return (T)formatter.Deserialize(new MemoryStream(bytes));", span="1004-1004"];
m11_631 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeBinaryFormatter<T>(byte[])", span="1001-1001"];
m11_12 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", file="PerformanceTests.cs", label="DeserializeTests<SimpleObject>(SimpleJsonText)", span="123-123"];
m11_13 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeSimpleObject()", span="121-121"];
m11_476 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(int)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(int)", span="389-389"];
m11_133 [cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410"];
m11_277 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(Newtonsoft.Json.JsonWriter, object)", span="882-882"];
m11_143 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", span="324-324"];
m11_150 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="iteration < totalIterations", span="350-350"];
m11_164 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="iteration < totalIterations", span="365-365"];
m11_144 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="long totalIterations = 100000", span="326-326"];
m11_149 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="long iteration = 0", span="350-350"];
m11_157 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="++iteration", span="350-350"];
m11_151 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="var obj = JObject.Parse(json)", span="352-352"];
m11_158 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="watch.Stop()", span="359-359"];
m11_163 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="long iteration = 0", span="365-365"];
m11_181 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="++iteration", span="365-365"];
m11_165 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="var doc = XDocument.Parse(xml)", span="367-367"];
m11_182 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="watch.Stop()", span="393-393"];
m11_160 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="Console.WriteLine(''JSON: '' + watch.Elapsed.TotalSeconds)", span="361-361"];
m11_184 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="Console.WriteLine(''XML: '' + watch.Elapsed.TotalSeconds)", span="395-395"];
m11_145 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="String xml =\r\n                @''<?xml  version=''''1.0'''' encoding=''''ISO-8859-1''''?>\r\n                <root>\r\n                    <property name=''''Property1''''>1</property>\r\n                    <property name=''''Property2''''>2</property>\r\n                    <property name=''''Property3''''>3</property>\r\n                    <property name=''''Property4''''>4</property>\r\n                    <property name=''''Property5''''>5</property>\r\n                </root>''", span="328-336"];
m11_159 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="var performance1 = (totalIterations / watch.ElapsedMilliseconds) * 1000", span="360-360"];
m11_183 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="var performance2 = (totalIterations / watch.ElapsedMilliseconds) * 1000", span="394-394"];
m11_148 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="watch.Start()", span="349-349"];
m11_156 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="obj[''Property5''].Value<Int32>()", span="357-357"];
m11_146 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="String json =\r\n                @''{\r\n                    ''''Property1'''':''''1'''',\r\n                    ''''Property2'''':''''2'''',\r\n                    ''''Property3'''':''''3'''',\r\n                    ''''Property4'''':''''4'''',\r\n                    ''''Property5'''':''''5''''\r\n                }''", span="338-345"];
m11_152 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="obj[''Property1''].Value<Int32>()", span="353-353"];
m11_153 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="obj[''Property2''].Value<Int32>()", span="354-354"];
m11_154 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="obj[''Property3''].Value<Int32>()", span="355-355"];
m11_155 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="obj[''Property4''].Value<Int32>()", span="356-356"];
m11_147 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="var watch = new Stopwatch()", span="348-348"];
m11_162 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="watch.Start()", span="364-364"];
m11_167 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label=alarmProperties, span="369-369"];
m11_166 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="var alarmProperties = doc.Descendants(''property'')", span="368-368"];
m11_161 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="watch.Reset()", span="363-363"];
m11_172 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="Int32.Parse(property.Value)", span="376-376"];
m11_174 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="Int32.Parse(property.Value)", span="379-379"];
m11_176 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="Int32.Parse(property.Value)", span="382-382"];
m11_178 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="Int32.Parse(property.Value)", span="385-385"];
m11_180 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="Int32.Parse(property.Value)", span="388-388"];
m11_168 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="var attr = property.Attribute(''name'')", span="371-371"];
m11_171 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="''Property1''", span="375-375"];
m11_173 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="''Property2''", span="378-378"];
m11_175 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="''Property3''", span="381-381"];
m11_177 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="''Property4''", span="384-384"];
m11_179 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="''Property5''", span="387-387"];
m11_169 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="var name = attr.Value", span="372-372"];
m11_170 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label=name, span="373-373"];
m11_185 [cluster="Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.BuildJObjectComparedToXml()", span="324-324"];
m11_223 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type)", span="1705-1705"];
m11_290 [cluster="DataContractSerializer.cstr", file="PerformanceTests.cs", label="Entry DataContractSerializer.cstr", span=""];
m11_231 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="445-445"];
m11_278 [cluster="Newtonsoft.Json.Bson.BsonWriter.Flush()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Bson.BsonWriter.Flush()", span="84-84"];
m11_529 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", span="849-849"];
m11_530 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="TestClass c = new TestClass()", span="851-851"];
m11_531 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="853-853"];
m11_560 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="return c;", span="906-906"];
m11_540 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="c.strings.Add((string)reader.Value)", span="866-866"];
m11_545 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="c.dictionary.Add(key, reader.ReadAsInt32().GetValueOrDefault())", span="874-874"];
m11_547 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="c.Name = reader.ReadAsString()", span="878-878"];
m11_549 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="c.Now = reader.ReadAsDateTime().GetValueOrDefault()", span="881-881"];
m11_551 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="c.BigNumber = reader.ReadAsDecimal().GetValueOrDefault()", span="884-884"];
m11_554 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="c.Address1 = CreateAddress(reader)", span="888-888"];
m11_559 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="c.Addresses.Add(address)", span="895-895"];
m11_532 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.Read()", span="854-854"];
m11_533 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.Read()", span="855-855"];
m11_534 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.TokenType == JsonToken.PropertyName", span="857-857"];
m11_535 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="string propertyName = (string)reader.Value", span="859-859"];
m11_538 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.Read()", span="863-863"];
m11_539 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="864-864"];
m11_542 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.Read()", span="870-870"];
m11_543 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.Read() && reader.TokenType != JsonToken.EndObject", span="871-871"];
m11_544 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="string key = (string)reader.Value", span="873-873"];
m11_553 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.Read()", span="887-887"];
m11_556 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.Read()", span="891-891"];
m11_557 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="reader.Read() && reader.TokenType != JsonToken.EndArray", span="892-892"];
m11_558 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="var address = CreateAddress(reader)", span="894-894"];
m11_546 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="''Name''", span="877-877"];
m11_548 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="''Now''", span="880-880"];
m11_550 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="''BigNumber''", span="883-883"];
m11_536 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label=propertyName, span="860-860"];
m11_537 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="''strings''", span="862-862"];
m11_541 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="''dictionary''", span="869-869"];
m11_552 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="''Address1''", span="886-886"];
m11_555 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="''Addresses''", span="890-890"];
m11_561 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetManual(string)", span="849-849"];
m11_232 [cluster="Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JToken.ToObject(System.Type, Newtonsoft.Json.JsonSerializer)", span="1830-1830"];
m11_215 [cluster="Newtonsoft.Json.Linq.JValue.JValue(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JValue.JValue(string)", span="154-154"];
m11_731 [cluster="System.Console.WriteLine(string, object, object)", file="PerformanceTests.cs", label="Entry System.Console.WriteLine(string, object, object)", span="0-0"];
m11_526 [cluster="System.Collections.ObjectModel.Collection<T>.Add(T)", file="PerformanceTests.cs", label="Entry System.Collections.ObjectModel.Collection<T>.Add(T)", span="0-0"];
m11_354 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PerformanceTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_596 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", span="956-956"];
m11_597 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs", label="DataContractJsonSerializer dataContractSerializer = new DataContractJsonSerializer(typeof(T))", span="958-958"];
m11_598 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs", label="MemoryStream ms = new MemoryStream(Encoding.UTF8.GetBytes(json))", span="960-960"];
m11_599 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs", label="return (T)dataContractSerializer.ReadObject(ms);", span="962-962"];
m11_600 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeDataContractJson<T>(string)", span="956-956"];
m11_118 [cluster="System.Console.WriteLine(string)", file="PerformanceTests.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_350 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PerformanceTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m11_743 [cluster="Unk.AreEqual", file="PerformanceTests.cs", label="Entry Unk.AreEqual", span=""];
m11_479 [cluster="Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteValue(decimal)", span="547-547"];
m11_349 [cluster="Newtonsoft.Json.Tests.TestClass.TestClass()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.TestClass.TestClass()", span="1170-1170"];
m11_292 [cluster="Unk.WriteObject", file="PerformanceTests.cs", label="Entry Unk.WriteObject", span=""];
m11_678 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", span="1078-1078"];
m11_681 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs", label="TimeOperation<object>(() =>\r\n            {\r\n                for (int i = 0; i < Iterations; i++)\r\n                {\r\n                    test[''dummy''] = new JValue(i);\r\n                    ms.Seek(0, SeekOrigin.Begin);\r\n                    JsonTextWriter jsonTextWriter = new JsonTextWriter(new StreamWriter(ms));\r\n                    test.WriteTo(jsonTextWriter);\r\n                    jsonTextWriter.Flush();\r\n                    ms.ToArray();\r\n\r\n                    //Encoding.UTF8.GetBytes(test.ToString(Formatting.None));\r\n                }\r\n                return null;\r\n            }, ''JObject.ToString'')", span="1083-1097"];
m11_679 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs", label="JObject test = JObject.Parse(JsonText)", span="1080-1080"];
m11_680 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs", label="MemoryStream ms = new MemoryStream()", span="1081-1081"];
m11_682 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.JObjectToString2()", span="1078-1078"];
m11_205 [cluster="Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.GetLength(string)", span="118-118"];
m11_252 [cluster="Unk.TimeOperation", file="PerformanceTests.cs", label="Entry Unk.TimeOperation", span=""];
m11_480 [cluster="Newtonsoft.Json.JsonTextWriter.Flush()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.Flush()", span="141-141"];
m11_475 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="381-381"];
m11_49 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="PerformanceTests.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m11_470 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124"];
m11_303 [cluster="DataContractJsonSerializer.cstr", file="PerformanceTests.cs", label="Entry DataContractJsonSerializer.cstr", span=""];
m11_488 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="686-690"];
m11_196 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="425-437"];
m11_201 [cluster="lambda expression", color=green, community=0, file="PerformanceTests.cs", label="JavaScriptUtils.WriteEscapedJavaScriptString(w, text, '''', true, JavaScriptUtils.DoubleQuoteCharEscapeFlags, StringEscapeHandling.Default, ref buffer)", prediction=22, span="432-432"];
m11_199 [cluster="lambda expression", file="PerformanceTests.cs", label="StringWriter w = StringUtils.CreateStringWriter(StringUtils.GetLength(text) ?? 16)", span="429-429"];
m11_200 [cluster="lambda expression", file="PerformanceTests.cs", label="char[] buffer = null", span="431-431"];
m11_202 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="427-427"];
m11_671 [cluster="lambda expression", file="PerformanceTests.cs", label="i < Iterations", span="1068-1068"];
m11_685 [cluster="lambda expression", file="PerformanceTests.cs", label="i < Iterations", span="1085-1085"];
m11_702 [cluster="lambda expression", file="PerformanceTests.cs", label="i < Iterations * 100", span="1105-1105"];
m11_198 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="427-427"];
m11_216 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="447-455"];
m11_224 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="457-465"];
m11_233 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="467-475"];
m11_204 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="425-437"];
m11_197 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="427-427"];
m11_134 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="311-320"];
m11_253 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="483-492"];
m11_263 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="494-508"];
m11_280 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="510-521"];
m11_293 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="523-534"];
m11_304 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="536-547"];
m11_669 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="1066-1074"];
m11_670 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="1068-1068"];
m11_674 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="1068-1068"];
m11_672 [cluster="lambda expression", file="PerformanceTests.cs", label="test[''dummy''] = new JValue(i)", span="1070-1070"];
m11_675 [cluster="lambda expression", file="PerformanceTests.cs", label="return null;", span="1073-1073"];
m11_683 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="1083-1097"];
m11_684 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="1085-1085"];
m11_692 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="1085-1085"];
m11_686 [cluster="lambda expression", file="PerformanceTests.cs", label="test[''dummy''] = new JValue(i)", span="1087-1087"];
m11_693 [cluster="lambda expression", file="PerformanceTests.cs", label="return null;", span="1096-1096"];
m11_700 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="1103-1116"];
m11_701 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="1105-1105"];
m11_707 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="1105-1105"];
m11_703 [cluster="lambda expression", file="PerformanceTests.cs", label="JObject test = new JObject(\r\n                        new JProperty(''one'', 1),\r\n                        new JProperty(''two'', 2))", span="1107-1109"];
m11_708 [cluster="lambda expression", file="PerformanceTests.cs", label="return null;", span="1115-1115"];
m11_203 [cluster="lambda expression", file="PerformanceTests.cs", label="return '''';", span="436-436"];
m11_137 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="314-314"];
m11_219 [cluster="lambda expression", file="PerformanceTests.cs", label="s.ToObject(typeof(string))", span="451-451"];
m11_227 [cluster="lambda expression", file="PerformanceTests.cs", label="s.ToObject(typeof(string), new JsonSerializer())", span="461-461"];
m11_236 [cluster="lambda expression", file="PerformanceTests.cs", label="s.Value<string>()", span="471-471"];
m11_218 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="449-449"];
m11_226 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="459-459"];
m11_235 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="469-469"];
m11_222 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="447-455"];
m11_217 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="449-449"];
m11_230 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="457-465"];
m11_225 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="459-459"];
m11_239 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="467-475"];
m11_234 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="469-469"];
m11_138 [cluster="lambda expression", file="PerformanceTests.cs", label="oo = JObject.Parse(jsonText)", span="316-316"];
m11_141 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="311-320"];
m11_135 [cluster="lambda expression", file="PerformanceTests.cs", label="JObject oo = null", span="313-313"];
m11_257 [cluster="lambda expression", file="PerformanceTests.cs", label="json = JsonConvert.SerializeObject(value, Formatting.None)", span="488-488"];
m11_270 [cluster="lambda expression", file="PerformanceTests.cs", label="serializer.Serialize(writer, value)", span="503-503"];
m11_285 [cluster="lambda expression", file="PerformanceTests.cs", label="DataContractSerializer dataContractSerializer = new DataContractSerializer(value.GetType())", span="516-516"];
m11_286 [cluster="lambda expression", file="PerformanceTests.cs", label="dataContractSerializer.WriteObject(ms, value)", span="517-517"];
m11_298 [cluster="lambda expression", file="PerformanceTests.cs", label="DataContractJsonSerializer dataContractJsonSerializer = new DataContractJsonSerializer(value.GetType())", span="529-529"];
m11_299 [cluster="lambda expression", file="PerformanceTests.cs", label="dataContractJsonSerializer.WriteObject(ms, value)", span="530-530"];
m11_310 [cluster="lambda expression", file="PerformanceTests.cs", label="formatter.Serialize(ms, value)", span="543-543"];
m11_256 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="486-486"];
m11_266 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="497-497"];
m11_283 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="513-513"];
m11_296 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="526-526"];
m11_307 [cluster="lambda expression", file="PerformanceTests.cs", label="i < interations", span="539-539"];
m11_260 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="483-492"];
m11_254 [cluster="lambda expression", file="PerformanceTests.cs", label="string json = null", span="485-485"];
m11_274 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="494-508"];
m11_264 [cluster="lambda expression", file="PerformanceTests.cs", label="MemoryStream ms = null", span="496-496"];
m11_289 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="510-521"];
m11_281 [cluster="lambda expression", file="PerformanceTests.cs", label="MemoryStream ms = null", span="512-512"];
m11_302 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="523-534"];
m11_294 [cluster="lambda expression", file="PerformanceTests.cs", label="MemoryStream ms = null", span="525-525"];
m11_313 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="536-547"];
m11_305 [cluster="lambda expression", file="PerformanceTests.cs", label="MemoryStream ms = null", span="538-538"];
m11_673 [cluster="lambda expression", file="PerformanceTests.cs", label="test.ToString(Formatting.None)", span="1071-1071"];
m11_676 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="1066-1074"];
m11_689 [cluster="lambda expression", file="PerformanceTests.cs", label="test.WriteTo(jsonTextWriter)", span="1090-1090"];
m11_687 [cluster="lambda expression", file="PerformanceTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="1088-1088"];
m11_688 [cluster="lambda expression", file="PerformanceTests.cs", label="JsonTextWriter jsonTextWriter = new JsonTextWriter(new StreamWriter(ms))", span="1089-1089"];
m11_691 [cluster="lambda expression", file="PerformanceTests.cs", label="ms.ToArray()", span="1092-1092"];
m11_694 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="1083-1097"];
m11_709 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="1103-1116"];
m11_704 [cluster="lambda expression", file="PerformanceTests.cs", label="test[''i''] = i", span="1111-1111"];
m11_706 [cluster="lambda expression", file="PerformanceTests.cs", label="test[''j''] = j", span="1113-1113"];
m11_705 [cluster="lambda expression", file="PerformanceTests.cs", label="int j = (int)test[''i'']", span="1112-1112"];
m11_136 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="314-314"];
m11_139 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="314-314"];
m11_140 [cluster="lambda expression", file="PerformanceTests.cs", label="return oo;", span="319-319"];
m11_220 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="449-449"];
m11_228 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="459-459"];
m11_237 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="469-469"];
m11_221 [cluster="lambda expression", file="PerformanceTests.cs", label="return '''';", span="454-454"];
m11_229 [cluster="lambda expression", file="PerformanceTests.cs", label="return '''';", span="464-464"];
m11_238 [cluster="lambda expression", file="PerformanceTests.cs", label="return '''';", span="474-474"];
m11_271 [cluster="lambda expression", file="PerformanceTests.cs", label="writer.Flush()", span="504-504"];
m11_258 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="486-486"];
m11_259 [cluster="lambda expression", file="PerformanceTests.cs", label="return Encoding.UTF8.GetBytes(json);", span="491-491"];
m11_268 [cluster="lambda expression", file="PerformanceTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="500-500"];
m11_269 [cluster="lambda expression", file="PerformanceTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="501-501"];
m11_284 [cluster="lambda expression", file="PerformanceTests.cs", label="ms = new MemoryStream()", span="515-515"];
m11_287 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="513-513"];
m11_297 [cluster="lambda expression", file="PerformanceTests.cs", label="ms = new MemoryStream()", span="528-528"];
m11_300 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="526-526"];
m11_308 [cluster="lambda expression", file="PerformanceTests.cs", label="ms = new MemoryStream()", span="541-541"];
m11_309 [cluster="lambda expression", file="PerformanceTests.cs", label="BinaryFormatter formatter = new BinaryFormatter()", span="542-542"];
m11_311 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="539-539"];
m11_255 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="486-486"];
m11_265 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="497-497"];
m11_272 [cluster="lambda expression", file="PerformanceTests.cs", label="i++", span="497-497"];
m11_267 [cluster="lambda expression", file="PerformanceTests.cs", label="ms = new MemoryStream()", span="499-499"];
m11_273 [cluster="lambda expression", file="PerformanceTests.cs", label="return ms.ToArray();", span="507-507"];
m11_282 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="513-513"];
m11_288 [cluster="lambda expression", file="PerformanceTests.cs", label="return ms.ToArray();", span="520-520"];
m11_295 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="526-526"];
m11_301 [cluster="lambda expression", file="PerformanceTests.cs", label="return ms.ToArray();", span="533-533"];
m11_306 [cluster="lambda expression", file="PerformanceTests.cs", label="int i = 0", span="539-539"];
m11_312 [cluster="lambda expression", file="PerformanceTests.cs", label="return ms.ToArray();", span="546-546"];
m11_690 [cluster="lambda expression", file="PerformanceTests.cs", label="jsonTextWriter.Flush()", span="1091-1091"];
m11_489 [cluster="lambda expression", file="PerformanceTests.cs", label="new JObject(\r\n                                    new JProperty(''Street'', a.Street),\r\n                                    new JProperty(''Phone'', a.Phone),\r\n                                    new JProperty(''Entered'', a.Entered))", span="687-690"];
m11_486 [cluster="lambda expression", file="PerformanceTests.cs", label="new JProperty(d.Key, d.Value)", span="678-678"];
m11_485 [cluster="lambda expression", file="PerformanceTests.cs", label="Entry lambda expression", span="678-678"];
m11_490 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="686-690"];
m11_487 [cluster="lambda expression", file="PerformanceTests.cs", label="Exit lambda expression", span="678-678"];
m11_86 [cluster="Newtonsoft.Json.Tests.Image.Image()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.Image.Image()", span="50-50"];
m11_291 [cluster="object.GetType()", file="PerformanceTests.cs", label="Entry object.GetType()", span="0-0"];
m11_352 [cluster="System.DateTime.AddHours(double)", file="PerformanceTests.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m11_729 [cluster="Newtonsoft.Json.Linq.JArray.JArray()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JArray.JArray()", span="65-65"];
m11_37 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", span="190-190"];
m11_43 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="BenchmarkSerializeMethod(SerializeMethod.JsonNet, value)", span="198-198"];
m11_45 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="BenchmarkDeserializeMethod<IList<KeyValuePair<string, int>>>(SerializeMethod.JsonNet, json)", span="202-202"];
m11_39 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="int i = 0", span="193-193"];
m11_38 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="IList<KeyValuePair<string, int>> value = new List<KeyValuePair<string, int>>()", span="192-192"];
m11_40 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="i < 100", span="193-193"];
m11_44 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="string json = JsonConvert.SerializeObject(value)", span="200-200"];
m11_41 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="value.Add(new KeyValuePair<string, int>(''Key'' + i, i))", span="195-195"];
m11_42 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="i++", span="193-193"];
m11_46 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeKeyValuePair()", span="190-190"];
m11_105 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", span="280-280"];
m11_106 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="operation()", span="283-283"];
m11_109 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="T result = operation()", span="288-288"];
m11_110 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="Console.WriteLine(name)", span="290-290"];
m11_113 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="return result;", span="295-295"];
m11_107 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="Stopwatch timed = new Stopwatch()", span="285-285"];
m11_108 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="timed.Start()", span="286-286"];
m11_111 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="Console.WriteLine(''{0} ms'', timed.ElapsedMilliseconds)", span="291-291"];
m11_112 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="timed.Stop()", span="293-293"];
m11_114 [cluster="Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.TimeOperation<T>(System.Func<T>, string)", span="280-280"];
m11_591 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", span="949-949"];
m11_592 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", file="PerformanceTests.cs", label="JavaScriptSerializer ser = new JavaScriptSerializer { MaxJsonLength = int.MaxValue }", span="951-951"];
m11_593 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", file="PerformanceTests.cs", label="return ser.Deserialize<T>(json);", span="953-953"];
m11_594 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeWebExtensions<T>(string)", span="949-949"];
m11_115 [cluster="System.Func<TResult>.Invoke()", file="PerformanceTests.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m11_331 [cluster="System.Console.WriteLine()", file="PerformanceTests.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m11_6 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", span="113-113"];
m11_7 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeAnonymous()", file="PerformanceTests.cs", label="var helloWorld = new { message = ''Hello, World!'' }", span="115-115"];
m11_695 [cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="PerformanceTests.cs", label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0"];
m11_330 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="657-657"];
m11_450 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = SerializeWebExtensions(value)", span="776-776"];
m11_452 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = SerializeDataContractJson(value)", span="779-779"];
m11_454 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = SerializeDataContract(value)", span="782-782"];
m11_456 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = SerializeBinaryFormatter(value)", span="785-785"];
m11_449 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JavaScriptSerializer", span="775-775"];
m11_458 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="return json;", span="791-791"];
m11_451 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.DataContractJsonSerializer", span="778-778"];
m11_453 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.DataContractSerializer", span="781-781"];
m11_455 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.BinaryFormatter", span="784-784"];
m11_386 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = JsonConvert.SerializeObject(value)", span="664-664"];
m11_383 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="string json", span="659-659"];
m11_384 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label=method, span="661-661"];
m11_388 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = JsonConvert.SerializeObject(value, new IsoDateTimeConverter())", span="667-667"];
m11_390 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="TestClass c = value as TestClass", span="671-671"];
m11_396 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="TestClass c = value as TestClass", span="703-703"];
m11_447 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="serializer.Serialize(writer, value)", span="769-769"];
m11_394 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = string.Empty", span="697-697"];
m11_393 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = o.ToString(Formatting.None)", span="693-693"];
m11_442 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = string.Empty", span="760-760"];
m11_441 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = sw.ToString()", span="756-756"];
m11_448 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="json = ''Bytes = '' + ms.Position", span="772-772"];
m11_385 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JsonNet", span="663-663"];
m11_457 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="throw new ArgumentOutOfRangeException(''method'');", span="788-788"];
m11_387 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JsonNetWithIsoConverter", span="666-666"];
m11_389 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JsonNetLinq", span="669-669"];
m11_395 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JsonNetManual", span="701-701"];
m11_443 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="SerializeMethod.JsonNetBinary", span="764-764"];
m11_391 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="c != null", span="672-672"];
m11_392 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="JObject o = new JObject(\r\n                            new JProperty(''strings'', new JArray(\r\n                                c.strings\r\n                                )),\r\n                            new JProperty(''dictionary'', new JObject(c.dictionary.Select(d => new JProperty(d.Key, d.Value)))),\r\n                            new JProperty(''Name'', c.Name),\r\n                            new JProperty(''Now'', c.Now),\r\n                            new JProperty(''BigNumber'', c.BigNumber),\r\n                            new JProperty(''Address1'', new JObject(\r\n                                new JProperty(''Street'', c.Address1.Street),\r\n                                new JProperty(''Phone'', c.Address1.Phone),\r\n                                new JProperty(''Entered'', c.Address1.Entered))),\r\n                            new JProperty(''Addresses'', new JArray(c.Addresses.Select(a =>\r\n                                new JObject(\r\n                                    new JProperty(''Street'', a.Street),\r\n                                    new JProperty(''Phone'', a.Phone),\r\n                                    new JProperty(''Entered'', a.Entered)))))\r\n                            )", span="674-691"];
m11_397 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="c != null", span="704-704"];
m11_403 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="c.strings", span="711-711"];
m11_408 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="c.dictionary", span="718-718"];
m11_413 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(c.Name)", span="725-725"];
m11_415 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(c.Now)", span="727-727"];
m11_417 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(c.BigNumber)", span="729-729"];
m11_421 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(c.BigNumber)", span="733-733"];
m11_423 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(c.BigNumber)", span="735-735"];
m11_425 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(c.BigNumber)", span="737-737"];
m11_429 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="c.Addresses", span="741-741"];
m11_445 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="767-767"];
m11_446 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="BsonWriter writer = new BsonWriter(ms)", span="768-768"];
m11_398 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="StringWriter sw = new StringWriter()", span="706-706"];
m11_440 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.Flush()", span="755-755"];
m11_444 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="MemoryStream ms = new MemoryStream(Buffer)", span="766-766"];
m11_402 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteStartArray()", span="710-710"];
m11_404 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(s)", span="713-713"];
m11_405 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteEndArray()", span="715-715"];
m11_407 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteStartObject()", span="717-717"];
m11_410 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(keyValuePair.Value)", span="721-721"];
m11_409 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(keyValuePair.Key)", span="720-720"];
m11_411 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteEndObject()", span="723-723"];
m11_399 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="JsonTextWriter writer = new JsonTextWriter(sw)", span="707-707"];
m11_412 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Name'')", span="724-724"];
m11_414 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Now'')", span="726-726"];
m11_416 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''BigNumber'')", span="728-728"];
m11_418 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Address1'')", span="730-730"];
m11_420 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Street'')", span="732-732"];
m11_422 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Street'')", span="734-734"];
m11_424 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Street'')", span="736-736"];
m11_426 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteEndObject()", span="738-738"];
m11_428 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteStartArray()", span="740-740"];
m11_437 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteEndObject()", span="750-750"];
m11_430 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteStartObject()", span="743-743"];
m11_438 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteEndArray()", span="752-752"];
m11_432 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(address.Street)", span="745-745"];
m11_434 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(address.Phone)", span="747-747"];
m11_436 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteValue(address.Entered)", span="749-749"];
m11_439 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteEndObject()", span="753-753"];
m11_401 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''strings'')", span="709-709"];
m11_406 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''dictionary'')", span="716-716"];
m11_400 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteStartObject()", span="708-708"];
m11_419 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WriteStartObject()", span="731-731"];
m11_427 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Addresses'')", span="739-739"];
m11_431 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Street'')", span="744-744"];
m11_433 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Phone'')", span="746-746"];
m11_435 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="writer.WritePropertyName(''Entered'')", span="748-748"];
m11_459 [cluster="Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.Serialize(Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod, object)", span="657-657"];
m11_732 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", span="1142-1142"];
m11_740 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="Console.WriteLine(''Deserialize big ass nested array in {0} millis'', sw.ElapsedMilliseconds)", span="1156-1156"];
m11_735 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="sw = new Stopwatch()", span="1147-1147"];
m11_738 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="sw.Stop()", span="1152-1152"];
m11_736 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="sw.Start()", span="1148-1148"];
m11_733 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="string json = (new string('[', 100000)) + ''1'' + ((new string(']', 100000)))", span="1144-1144"];
m11_739 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="Assert.AreEqual(1, a.Count)", span="1154-1154"];
m11_734 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="Stopwatch sw", span="1146-1146"];
m11_737 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="var a = (JArray)JsonConvert.DeserializeObject(json)", span="1150-1150"];
m11_741 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeNestedJToken()", span="1142-1142"];
m11_527 [cluster="System.IO.StringReader.StringReader(string)", file="PerformanceTests.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m11_710 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", span="1120-1120"];
m11_719 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="j < i", span="1129-1129"];
m11_712 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="int i = 10000", span="1123-1123"];
m11_718 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="int j = 0", span="1129-1129"];
m11_723 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="j++", span="1129-1129"];
m11_720 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="JArray temp = new JArray()", span="1131-1131"];
m11_724 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="ija.Add(1)", span="1135-1135"];
m11_711 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="Stopwatch sw", span="1122-1122"];
m11_713 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="i <= 100000", span="1123-1123"];
m11_726 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="Console.WriteLine(''Created a JToken of depth {0} (using OM) in {1} millis'', i, sw.ElapsedMilliseconds)", span="1137-1137"];
m11_727 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="i += 10000", span="1123-1123"];
m11_717 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="JToken ijt = ija", span="1128-1128"];
m11_722 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="ija = temp", span="1133-1133"];
m11_716 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="JArray ija = new JArray()", span="1127-1127"];
m11_721 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="ija.Add(temp)", span="1132-1132"];
m11_725 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="sw.Stop()", span="1136-1136"];
m11_714 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="sw = new Stopwatch()", span="1125-1125"];
m11_715 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="sw.Start()", span="1126-1126"];
m11_728 [cluster="Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.NestedJToken()", span="1120-1120"];
m11_517 [cluster="System.Console.WriteLine(object)", file="PerformanceTests.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m11_186 [cluster="System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", file="PerformanceTests.cs", label="Entry System.Collections.Generic.IEnumerable<Newtonsoft.Json.Linq.JToken>.Value<U>()", span="157-157"];
m11_581 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", span="937-937"];
m11_582 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs", label="Type type = typeof(T)", span="939-939"];
m11_587 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs", label="return (T)serializer.Deserialize(new BsonReader(new MemoryStream(bson)), type);", span="946-946"];
m11_583 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs", label="JsonSerializer serializer = new JsonSerializer()", span="941-941"];
m11_586 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs", label="serializer.ReferenceLoopHandling = ReferenceLoopHandling.Ignore", span="944-944"];
m11_584 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs", label="serializer.ObjectCreationHandling = Newtonsoft.Json.ObjectCreationHandling.Replace", span="942-942"];
m11_585 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs", label="serializer.MissingMemberHandling = Newtonsoft.Json.MissingMemberHandling.Ignore", span="943-943"];
m11_588 [cluster="Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.DeserializeJsonNetBinary<T>(byte[])", span="937-937"];
m11_589 [cluster="Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Bson.BsonReader.BsonReader(System.IO.Stream)", span="125-125"];
m11_208 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", span="441-441"];
m11_211 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs", label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    s.ToObject(typeof(string));\r\n                }\r\n\r\n                return '''';\r\n            }, ''New'')", span="447-455"];
m11_212 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs", label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    s.ToObject(typeof(string), new JsonSerializer());\r\n                }\r\n\r\n                return '''';\r\n            }, ''Old'')", span="457-465"];
m11_213 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs", label="TimeOperation(() =>\r\n            {\r\n                for (int i = 0; i < interations; i++)\r\n                {\r\n                    s.Value<string>();\r\n                }\r\n\r\n                return '''';\r\n            }, ''Value'')", span="467-475"];
m11_209 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs", label="JValue s = new JValue(''String!'')", span="443-443"];
m11_210 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs", label="int interations = 1000000", span="445-445"];
m11_214 [cluster="Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.JTokenToObject()", span="441-441"];
m11_47 [cluster="System.Collections.Generic.List<T>.List()", file="PerformanceTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_563 [cluster="System.Nullable<T>.GetValueOrDefault()", file="PerformanceTests.cs", label="Entry System.Nullable<T>.GetValueOrDefault()", span="0-0"];
m11_314 [cluster="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", file="PerformanceTests.cs", label="Entry System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.BinaryFormatter()", span="0-0"];
m11_68 [cluster="Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.TestFixtureBase.HexToBytes(string)", span="232-232"];
m11_28 [cluster="System.IO.File.OpenText(string)", file="PerformanceTests.cs", label="Entry System.IO.File.OpenText(string)", span="0-0"];
m11_373 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="PerformanceTests.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m11_206 [cluster="Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Utilities.StringUtils.CreateStringWriter(int)", span="110-110"];
m11_469 [cluster="System.IO.StringWriter.StringWriter()", file="PerformanceTests.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m11_87 [cluster="System.IO.File.ReadAllBytes(string)", file="PerformanceTests.cs", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
m11_187 [cluster="System.Diagnostics.Stopwatch.Reset()", file="PerformanceTests.cs", label="Entry System.Diagnostics.Stopwatch.Reset()", span="0-0"];
m11_190 [cluster="Unk.Attribute", file="PerformanceTests.cs", label="Entry Unk.Attribute", span=""];
m11_477 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="365-365"];
m11_601 [cluster="Unk.ReadObject", file="PerformanceTests.cs", label="Entry Unk.ReadObject", span=""];
m11_566 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTime()", span="358-358"];
m11_48 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="PerformanceTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m11_652 [cluster="string.String(char, int)", file="PerformanceTests.cs", label="Entry string.String(char, int)", span="0-0"];
m11_261 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525"];
m11_50 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512"];
m11_358 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", span="618-618"];
m11_359 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="PerformanceTests.cs", label="JavaScriptSerializer ser = new JavaScriptSerializer()", span="620-620"];
m11_360 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="PerformanceTests.cs", label="return ser.Serialize(value);", span="622-622"];
m11_361 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeWebExtensions(object)", span="618-618"];
m11_515 [cluster="System.GC.Collect()", file="PerformanceTests.cs", label="Entry System.GC.Collect()", span="0-0"];
m11_484 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="PerformanceTests.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m11_375 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", span="641-641"];
m11_376 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs", label="DataContractSerializer dataContractSerializer\r\n                = new DataContractSerializer(value.GetType())", span="643-644"];
m11_378 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs", label="dataContractSerializer.WriteObject(ms, value)", span="647-647"];
m11_381 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs", label="return sr.ReadToEnd();", span="653-653"];
m11_377 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs", label="MemoryStream ms = new MemoryStream()", span="646-646"];
m11_379 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs", label="ms.Seek(0, SeekOrigin.Begin)", span="649-649"];
m11_380 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs", label="StreamReader sr = new StreamReader(ms)", span="651-651"];
m11_382 [cluster="Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", file="PerformanceTests.cs", label="Exit Newtonsoft.Json.Tests.PerformanceTests.SerializeDataContract(object)", span="641-641"];
m11_461 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, params Newtonsoft.Json.JsonConverter[])", span="536-536"];
m11_473 [cluster="Newtonsoft.Json.JsonTextWriter.WriteStartArray()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextWriter.WriteStartArray()", span="176-176"];
m11_664 [cluster="double.ToString()", file="PerformanceTests.cs", label="Entry double.ToString()", span="0-0"];
m11_696 [cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="430-430"];
m11_116 [cluster="System.Diagnostics.Stopwatch.Stopwatch()", file="PerformanceTests.cs", label="Entry System.Diagnostics.Stopwatch.Stopwatch()", span="0-0"];
m11_562 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsInt32()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsInt32()", span="340-340"];
m11_482 [cluster="System.IO.MemoryStream.MemoryStream(byte[])", file="PerformanceTests.cs", label="Entry System.IO.MemoryStream.MemoryStream(byte[])", span="0-0"];
m11_353 [cluster="Newtonsoft.Json.Tests.Address.Address()", file="PerformanceTests.cs", label="Entry Newtonsoft.Json.Tests.Address.Address()", span="1227-1227"];
m11_363 [cluster="Unk.Serialize", file="PerformanceTests.cs", label="Entry Unk.Serialize", span=""];
m11_262 [cluster="System.Text.Encoding.GetBytes(string)", file="PerformanceTests.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m11_744 [file="PerformanceTests.cs", label="Newtonsoft.Json.Tests.PerformanceTests", span=""];
m11_748 [file="PerformanceTests.cs", label=text, span=""];
m11_747 [file="PerformanceTests.cs", label=interations, span=""];
m11_753 [file="PerformanceTests.cs", label=test, span=""];
m11_754 [file="PerformanceTests.cs", label=test, span=""];
m11_745 [file="PerformanceTests.cs", label=interations, span=""];
m11_750 [file="PerformanceTests.cs", label=s, span=""];
m11_749 [file="PerformanceTests.cs", label=interations, span=""];
m11_746 [file="PerformanceTests.cs", label=jsonText, span=""];
m11_752 [file="PerformanceTests.cs", label=object, span=""];
m11_751 [file="PerformanceTests.cs", label=interations, span=""];
m11_755 [file="PerformanceTests.cs", label=ms, span=""];
m12_18 [cluster="System.Array.Copy(System.Array, int, System.Array, int, int)", file="StringBuffer.cs", label="Entry System.Array.Copy(System.Array, int, System.Array, int, int)", span="0-0"];
m12_27 [cluster="System.Array.Copy(System.Array, System.Array, int)", file="StringBuffer.cs", label="Entry System.Array.Copy(System.Array, System.Array, int)", span="0-0"];
m12_12 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", span="65-65"];
m12_13 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", file="StringBuffer.cs", label="_position + count >= _buffer.Length", span="67-67"];
m12_15 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", file="StringBuffer.cs", label="Array.Copy(buffer, startIndex, _buffer, _position, count)", span="70-70"];
m12_16 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", file="StringBuffer.cs", label="_position += count", span="72-72"];
m12_17 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Utilities.StringBuffer.Append(char[], int, int)", span="65-65"];
m12_3 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", span="50-50"];
m12_5 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", span="50-50"];
m12_19 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="75-75"];
m12_21 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="StringBuffer.cs", label="_position = 0", span="78-78"];
m12_22 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="75-75"];
m12_34 [cluster="string.String(char[], int, int)", file="StringBuffer.cs", label="Entry string.String(char[], int, int)", span="0-0"];
m12_0 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer()", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer()", span="45-45"];
m12_2 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer()", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Utilities.StringBuffer.StringBuffer()", span="45-45"];
m12_28 [cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString()", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.ToString()", span="90-90"];
m12_29 [cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString()", file="StringBuffer.cs", label="return ToString(0, _position);", span="92-92"];
m12_30 [cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString()", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Utilities.StringBuffer.ToString()", span="90-90"];
m12_6 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char)", span="55-55"];
m12_7 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="StringBuffer.cs", label="_position == _buffer.Length", span="58-58"];
m12_9 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="StringBuffer.cs", label="_buffer[_position++] = value", span="62-62"];
m12_10 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Utilities.StringBuffer.Append(char)", span="55-55"];
m12_31 [cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", span="95-95"];
m12_32 [cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", file="StringBuffer.cs", label="return new string(_buffer, start, length);", span="98-98"];
m12_33 [cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Utilities.StringBuffer.ToString(int, int)", span="95-95"];
m12_11 [cluster="Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", span="81-81"];
m12_25 [cluster="Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", file="StringBuffer.cs", label="_buffer = newBuffer", span="87-87"];
m12_26 [cluster="Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Utilities.StringBuffer.EnsureSize(int)", span="81-81"];
m12_35 [cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="StringBuffer.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="101-101"];
m12_37 [cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="StringBuffer.cs", label="Exit Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="101-101"];
m12_38 [file="StringBuffer.cs", label="Newtonsoft.Json.Utilities.StringBuffer", span=""];
m2_122 -> m2_127  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_122 -> m2_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.ReferenceLoopHandling?", style=dashed];
m2_122 -> m2_130  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_336 -> m2_338  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m2_340 -> m2_340  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m2_338 -> m2_338  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m2_342 -> m2_342  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m2_339 -> m2_339  [color=darkseagreen4, key=1, label="System.Collections.DictionaryEntry", style=dashed];
m2_266 -> m2_266  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m2_267 -> m2_267  [color=darkseagreen4, key=1, label=serializationEntry, style=dashed];
m2_77 -> m2_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_77 -> m2_259  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m2_77 -> m2_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m2_77 -> m2_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_77 -> m2_264  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m2_77 -> m2_270  [color=darkseagreen4, key=1, label="System.Runtime.Serialization.ISerializable", style=dashed];
m2_77 -> m2_260  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_77 -> m2_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_77 -> m2_268  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_263 -> m2_265  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m2_147 -> m2_153  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_148 -> m2_150  [color=darkseagreen4, key=1, label=converter, style=dashed];
m2_156 -> m2_158  [color=darkseagreen4, key=1, label="out string", style=dashed];
m2_196 -> m2_354  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_76 -> m2_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_76 -> m2_276  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m2_76 -> m2_286  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m2_76 -> m2_277  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_76 -> m2_278  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m2_76 -> m2_280  [color=darkseagreen4, key=1, label="System.Dynamic.IDynamicMetaObjectProvider", style=dashed];
m2_76 -> m2_282  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_76 -> m2_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_280 -> m2_283  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m2_278 -> m2_280  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m2_73 -> m2_166  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_73 -> m2_164  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_73 -> m2_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_36 -> m2_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedDictionary", style=dashed];
m2_75 -> m2_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m2_75 -> m2_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m2_75 -> m2_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m2_75 -> m2_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_75 -> m2_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedDictionary", style=dashed];
m2_321 -> m2_327  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m2_315 -> m2_330  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m2_319 -> m2_329  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m2_319 -> m2_323  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m2_319 -> m2_326  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m2_320 -> m2_327  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_320 -> m2_322  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_320 -> m2_324  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_320 -> m2_325  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_9 -> m2_59  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_9 -> m2_41  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_9 -> m2_42  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_9 -> m2_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_9 -> m2_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m2_9 -> m2_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_9 -> m2_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_9 -> m2_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_9 -> m2_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_9 -> m2_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_9 -> m2_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_9 -> m2_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_80 -> m2_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_80 -> m2_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m2_80 -> m2_83  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m2_80 -> m2_86  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_87 -> m2_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m2_87 -> m2_90  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m2_89 -> m2_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m2_85 -> m2_94  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m2_85 -> m2_90  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m2_85 -> m2_88  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m2_72 -> m2_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m2_72 -> m2_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m2_72 -> m2_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m2_72 -> m2_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m2_72 -> m2_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m2_72 -> m2_250  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_72 -> m2_252  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_224 -> m2_226  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m2_224 -> m2_228  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m2_224 -> m2_251  [color=darkseagreen4, key=1, label=isReference, style=dashed];
m2_225 -> m2_231  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m2_225 -> m2_251  [color=darkseagreen4, key=1, label=includeTypeDetails, style=dashed];
m2_241 -> m2_245  [color=darkseagreen4, key=1, label=valueContract, style=dashed];
m2_240 -> m2_245  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_240 -> m2_242  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_240 -> m2_243  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_240 -> m2_244  [color=darkseagreen4, key=1, label=value, style=dashed];
m2_239 -> m2_247  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_238 -> m2_248  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m2_197 -> m2_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_8 -> m2_18  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_34 -> m2_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m2_34 -> m2_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m2_34 -> m2_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_34 -> m2_296  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m2_34 -> m2_298  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m2_70 -> m2_171  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_70 -> m2_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_70 -> m2_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m2_70 -> m2_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_70 -> m2_181  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_70 -> m2_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_70 -> m2_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_70 -> m2_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_70 -> m2_193  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_70 -> m2_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_70 -> m2_175  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_70 -> m2_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m2_70 -> m2_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_179 -> m2_189  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m2_180 -> m2_186  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_180 -> m2_188  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_180 -> m2_182  [color=darkseagreen4, key=1, label=property, style=dashed];
m2_184 -> m2_186  [color=darkseagreen4, key=1, label=memberValue, style=dashed];
m2_69 -> m2_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_69 -> m2_215  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_69 -> m2_217  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_69 -> m2_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_2 -> m2_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_200 -> m2_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_200 -> m2_348  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_22 -> m2_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_22 -> m2_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_22 -> m2_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_22 -> m2_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_22 -> m2_30  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_22 -> m2_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_121 -> m2_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_121 -> m2_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_121 -> m2_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_100 -> m2_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_100 -> m2_103  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_100 -> m2_105  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_100 -> m2_107  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_100 -> m2_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_100 -> m2_111  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_100 -> m2_108  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_100 -> m2_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_100 -> m2_114  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m2_100 -> m2_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_102 -> m2_105  [color=darkseagreen4, key=1, label=defaultValue, style=dashed];
m2_101 -> m2_115  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m2_101 -> m2_108  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m2_361 -> m2_59  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_49  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_96  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_103  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_109  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_111  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_127  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_128  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_166  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_170  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_189  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_192  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_203  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_213  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_218  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_219  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_230  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_232  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_242  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_245  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_248  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_254  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_259  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_261  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_262  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_267  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_269  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_275  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_283  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_286  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_299  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_303  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_324  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_327  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_330  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_334  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m2_361 -> m2_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalWriter", style=dashed];
m4_188 -> m4_194  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_189 -> m4_194  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m4_192 -> m4_194  [color=darkseagreen4, key=1, label=writer, style=dashed];
m4_105 -> m4_107  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_105 -> m4_108  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_105 -> m4_109  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_105 -> m4_110  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_105 -> m4_111  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_113 -> m4_115  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_113 -> m4_116  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_285 -> m4_289  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_285 -> m4_290  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_285 -> m4_291  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_285 -> m4_292  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_285 -> m4_293  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_288 -> m4_290  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_288 -> m4_291  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_288 -> m4_292  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_288 -> m4_293  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_37 -> m4_46  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_38 -> m4_40  [color=darkseagreen4, key=1, label=properties, style=dashed];
m4_38 -> m4_41  [color=darkseagreen4, key=1, label=properties, style=dashed];
m4_46 -> m4_46  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_46 -> m4_48  [color=darkseagreen4, key=1, label=parameterValues, style=dashed];
m4_42 -> m4_44  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_42 -> m4_45  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_307 -> m4_309  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_307 -> m4_312  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_308 -> m4_312  [color=darkseagreen4, key=1, label=users, style=dashed];
m4_308 -> m4_313  [color=darkseagreen4, key=1, label=users, style=dashed];
m4_309 -> m4_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_272 -> m4_276  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_272 -> m4_277  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_272 -> m4_278  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_272 -> m4_279  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_272 -> m4_280  [color=darkseagreen4, key=1, label=c1, style=dashed];
m4_275 -> m4_277  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_275 -> m4_278  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_275 -> m4_279  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_275 -> m4_280  [color=darkseagreen4, key=1, label=c2, style=dashed];
m4_207 -> m4_211  [color=darkseagreen4, key=1, label=testDates, style=dashed];
m4_208 -> m4_211  [color=darkseagreen4, key=1, label=jsonSerializer, style=dashed];
m4_210 -> m4_212  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m4_180 -> m4_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_60 -> m4_62  [color=darkseagreen4, key=1, label=list, style=dashed];
m4_249 -> m4_252  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_250 -> m4_252  [color=darkseagreen4, key=1, label=enumerable, style=dashed];
m4_233 -> m4_235  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_233 -> m4_236  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_233 -> m4_237  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_233 -> m4_238  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_239 -> m4_241  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_219 -> m4_221  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_219 -> m4_222  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_219 -> m4_223  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_219 -> m4_224  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_225 -> m4_227  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_267 -> m4_269  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_173 -> m4_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_152 -> m4_154  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_152 -> m4_155  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_152 -> m4_156  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_152 -> m4_157  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_152 -> m4_158  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_152 -> m4_159  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_120 -> m4_122  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_120 -> m4_123  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_123 -> m4_125  [color=darkseagreen4, key=1, label=a, style=dashed];
m4_137 -> m4_137  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_137 -> m4_139  [color=darkseagreen4, key=1, label=rss, style=dashed];
m4_139 -> m4_139  [color=darkseagreen4, key=1, label=p, style=dashed];
m4_164 -> m4_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_10 -> m4_13  [color=darkseagreen4, key=1, label=array, style=dashed];
m4_10 -> m4_14  [color=darkseagreen4, key=1, label=array, style=dashed];
m4_11 -> m4_13  [color=darkseagreen4, key=1, label=text, style=dashed];
m4_12 -> m4_14  [color=darkseagreen4, key=1, label=date, style=dashed];
m4_68 -> m4_73  [color=darkseagreen4, key=1, label=o, style=dashed];
m4_69 -> m4_71  [color=darkseagreen4, key=1, label=resultObjects, style=dashed];
m4_69 -> m4_72  [color=darkseagreen4, key=1, label=resultObjects, style=dashed];
m4_74 -> m4_76  [color=darkseagreen4, key=1, label=resultUrls, style=dashed];
m4_317 -> m4_312  [color=darkseagreen4, key=1, label=name, style=dashed];
m4_318 -> m4_312  [color=darkseagreen4, key=1, label=users, style=dashed];
m4_318 -> m4_313  [color=darkseagreen4, key=1, label=users, style=dashed];
m6_5 -> m6_5  [color=darkseagreen4, key=1, label=properties, style=dashed];
m6_5 -> m6_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_27 -> m6_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver", style=dashed];
m6_27 -> m6_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Documentation.Examples.Serializer.CustomContractResolver.DynamicContractResolver", style=dashed];
m7_133 -> m7_135  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_129 -> m7_132  [color=darkseagreen4, key=1, label=listRef, style=dashed];
m7_136 -> m7_138  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_136 -> m7_139  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_136 -> m7_140  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_136 -> m7_141  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_136 -> m7_142  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_531 -> m7_534  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_531 -> m7_537  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_531 -> m7_536  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_243 -> m7_245  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_248 -> m7_250  [color=darkseagreen4, key=1, label=newCollection, style=dashed];
m7_160 -> m7_164  [color=darkseagreen4, key=1, label=newValues, style=dashed];
m7_53 -> m7_62  [color=green, key=1, label=values, style=dashed];
m7_53 -> m7_63  [color=green, key=1, label=values, style=dashed];
m7_55 -> m7_57  [color=darkseagreen4, key=1, label=e, style=dashed];
m7_55 -> m7_58  [color=darkseagreen4, key=1, label=e, style=dashed];
m7_56 -> m7_59  [color=darkseagreen4, key=1, label=p, style=dashed];
m7_56 -> m7_60  [color=darkseagreen4, key=1, label=p, style=dashed];
m7_56 -> m7_61  [color=darkseagreen4, key=1, label=p, style=dashed];
m7_66 -> m7_71  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m7_67 -> m7_71  [color=darkseagreen4, key=1, label=personRef, style=dashed];
m7_107 -> m7_111  [color=green, key=1, label=containerTypeName, style=dashed];
m7_108 -> m7_111  [color=green, key=1, label=productListTypeName, style=dashed];
m7_184 -> m7_187  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m7_184 -> m7_188  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m7_184 -> m7_196  [color=darkseagreen4, key=1, label=testObject, style=dashed];
m7_197 -> m7_202  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_208 -> m7_212  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m7_208 -> m7_210  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m7_208 -> m7_211  [color=darkseagreen4, key=1, label=anotherTestObject, style=dashed];
m7_213 -> m7_215  [color=darkseagreen4, key=1, label=list, style=dashed];
m7_213 -> m7_216  [color=darkseagreen4, key=1, label=list, style=dashed];
m7_190 -> m7_196  [color=darkseagreen4, key=1, label=serializingTester, style=dashed];
m7_193 -> m7_196  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m7_314 -> m7_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m7_314 -> m7_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.SerializableWrapper", style=dashed];
m7_316 -> m7_319  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_316 -> m7_320  [color=darkseagreen4, key=1, label=writer, style=dashed];
m7_317 -> m7_319  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m7_397 -> m7_400  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_397 -> m7_403  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_397 -> m7_399  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_397 -> m7_401  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_397 -> m7_402  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_394 -> m7_396  [color=darkseagreen4, key=1, label=json, style=dashed];
m7_277 -> m7_279  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m7_277 -> m7_280  [color=darkseagreen4, key=1, label=nextInLine, style=dashed];
m7_412 -> m7_414  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_412 -> m7_415  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_412 -> m7_416  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_257 -> m7_260  [color=darkseagreen4, key=1, label=productClassRef, style=dashed];
m7_307 -> m7_309  [color=darkseagreen4, key=1, label=w, style=dashed];
m7_307 -> m7_310  [color=darkseagreen4, key=1, label=w, style=dashed];
m7_6 -> m7_8  [color=green, key=1, label=w2, style=dashed];
m7_425 -> m7_427  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_425 -> m7_428  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_432 -> m7_434  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_432 -> m7_435  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_29 -> m7_31  [color=darkseagreen4, key=1, label=employee, style=dashed];
m7_379 -> m7_382  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_379 -> m7_381  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_379 -> m7_383  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_379 -> m7_384  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_373 -> m7_375  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_373 -> m7_376  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_100 -> m7_102  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_100 -> m7_103  [color=darkseagreen4, key=1, label=request, style=dashed];
m7_294 -> m7_296  [color=darkseagreen4, key=1, label=output, style=dashed];
m7_297 -> m7_299  [color=darkseagreen4, key=1, label=obj, style=dashed];
m7_289 -> m7_301  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_42 -> m7_45  [color=darkseagreen4, key=1, label=personRef, style=dashed];
m7_41 -> m7_45  [color=darkseagreen4, key=1, label=employeeRef, style=dashed];
m7_174 -> m7_176  [color=darkseagreen4, key=1, label="out string", style=dashed];
m7_85 -> m7_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_345 -> m7_347  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_345 -> m7_348  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_119 -> m7_121  [color=darkseagreen4, key=1, label=deserialized, style=dashed];
m7_115 -> m7_118  [color=darkseagreen4, key=1, label=typeNamePropertyRef, style=dashed];
m7_122 -> m7_124  [color=darkseagreen4, key=1, label=nested, style=dashed];
m7_20 -> m7_23  [color=green, key=1, label=employeeRef, style=dashed];
m7_490 -> m7_492  [color=darkseagreen4, key=1, label=d2, style=dashed];
m7_445 -> m7_447  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_445 -> m7_448  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_452 -> m7_454  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_452 -> m7_455  [color=darkseagreen4, key=1, label=c2, style=dashed];
m7_466 -> m7_468  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_466 -> m7_469  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_466 -> m7_470  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_466 -> m7_471  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_466 -> m7_472  [color=darkseagreen4, key=1, label=o2, style=dashed];
m7_363 -> m7_365  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_363 -> m7_366  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_363 -> m7_367  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_363 -> m7_368  [color=darkseagreen4, key=1, label=l2, style=dashed];
m7_355 -> m7_357  [color=darkseagreen4, key=1, label=c1, style=dashed];
m7_356 -> m7_359  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_356 -> m7_360  [color=darkseagreen4, key=1, label=l, style=dashed];
m7_551 -> m7_271  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m7_551 -> m7_274  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m7_551 -> m7_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m7_551 -> m7_284  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests.CustomEnumerable<T>", style=dashed];
m7_552 -> m7_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m7_552 -> m7_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m7_552 -> m7_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.TypeNameHandlingTests", style=dashed];
m7_554 -> m7_528  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m7_554 -> m7_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m7_554 -> m7_537  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m7_554 -> m7_543  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m7_554 -> m7_545  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Serialization.Example", style=dashed];
m9_159 -> m9_161  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_159 -> m9_162  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_159 -> m9_163  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_164 -> m9_166  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_160 -> m9_162  [color=darkseagreen4, key=1, label=value, style=dashed];
m9_245 -> m9_247  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_248  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_249  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_250  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_251  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_252  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_253  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_254  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_255  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_256  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_257  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_258  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_259  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_245 -> m9_260  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_261 -> m9_263  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_714 -> m9_716  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_715 -> m9_720  [color=darkseagreen4, key=1, label=script, style=dashed];
m9_947 -> m9_1005  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ConvertibleInt", style=dashed];
m9_499 -> m9_514  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_499 -> m9_515  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_501 -> m9_503  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_504  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_505  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_506  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_507  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_508  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_509  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_510  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_511  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_512  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_501 -> m9_513  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_3 -> m9_5  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_3 -> m9_6  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_3 -> m9_7  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_56 -> m9_59  [color=darkseagreen4, key=1, label=sw, style=dashed];
m9_776 -> m9_786  [color=darkseagreen4, key=1, label=sw, style=dashed];
m9_777 -> m9_782  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_777 -> m9_783  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_777 -> m9_784  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_777 -> m9_785  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_346 -> m9_349  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_346 -> m9_350  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_346 -> m9_351  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_346 -> m9_352  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_346 -> m9_353  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_346 -> m9_354  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_346 -> m9_355  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_346 -> m9_356  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_346 -> m9_357  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_358 -> m9_360  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_183 -> m9_185  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_183 -> m9_186  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_183 -> m9_187  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_183 -> m9_188  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_183 -> m9_189  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_190 -> m9_192  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_420 -> m9_422  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_420 -> m9_423  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_420 -> m9_424  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_425 -> m9_427  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_790 -> m9_795  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_790 -> m9_799  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_790 -> m9_800  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_800 -> m9_800  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_796 -> m9_798  [color=darkseagreen4, key=1, label=newText, style=dashed];
m9_796 -> m9_799  [color=darkseagreen4, key=1, label=newText, style=dashed];
m9_797 -> m9_799  [color=darkseagreen4, key=1, label=oldText, style=dashed];
m9_101 -> m9_103  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_104  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_105  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_106  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_107  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_108  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_109  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_110  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_111  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_112  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_113  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_114  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_115  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_116  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_117  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_118  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_119  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_120  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_121  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_122  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_123  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_124  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_125  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_126  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_127  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_128  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_129  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_130  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_131  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_132  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_101 -> m9_133  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_134 -> m9_137  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_625 -> m9_627  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_625 -> m9_628  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_625 -> m9_629  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_625 -> m9_630  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_625 -> m9_631  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_625 -> m9_632  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_625 -> m9_633  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_625 -> m9_634  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_624 -> m9_629  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_624 -> m9_630  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_624 -> m9_631  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_635 -> m9_637  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_574 -> m9_577  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_579  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_581  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_583  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_585  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_586  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_587  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_588  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_590  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_592  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_593  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_594  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_574 -> m9_595  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_596 -> m9_598  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_365 -> m9_369  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_365 -> m9_370  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_365 -> m9_371  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_365 -> m9_372  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_365 -> m9_373  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_365 -> m9_374  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_365 -> m9_375  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_365 -> m9_376  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_365 -> m9_377  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_378 -> m9_380  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_805 -> m9_809  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m9_805 -> m9_810  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_805 -> m9_815  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_805 -> m9_817  [color=darkseagreen4, key=1, label=char, style=dashed];
m9_805 -> m9_852  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m9_805 -> m9_855  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m9_805 -> m9_856  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m9_805 -> m9_859  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m9_805 -> m9_862  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m9_805 -> m9_863  [color=darkseagreen4, key=1, label=bool, style=dashed];
m9_805 -> m9_864  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m9_816 -> m9_819  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_816 -> m9_842  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_816 -> m9_845  [color=darkseagreen4, key=1, label=c, style=dashed];
m9_851 -> m9_860  [color=darkseagreen4, key=1, label=chars, style=dashed];
m9_851 -> m9_862  [color=darkseagreen4, key=1, label=chars, style=dashed];
m9_811 -> m9_850  [color=darkseagreen4, key=1, label=chars, style=dashed];
m9_811 -> m9_852  [color=darkseagreen4, key=1, label=chars, style=dashed];
m9_811 -> m9_860  [color=darkseagreen4, key=1, label=chars, style=dashed];
m9_811 -> m9_862  [color=darkseagreen4, key=1, label=chars, style=dashed];
m9_812 -> m9_843  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m9_812 -> m9_845  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m9_812 -> m9_856  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m9_813 -> m9_849  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m9_813 -> m9_852  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m9_813 -> m9_858  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m9_813 -> m9_862  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m9_814 -> m9_849  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_814 -> m9_852  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_814 -> m9_857  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_853 -> m9_858  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m9_853 -> m9_862  [color=darkseagreen4, key=1, label=lastWritePosition, style=dashed];
m9_857 -> m9_857  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_847 -> m9_854  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m9_847 -> m9_855  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m9_844 -> m9_856  [color=darkseagreen4, key=1, label=unicodeBuffer, style=dashed];
m9_846 -> m9_854  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m9_846 -> m9_855  [color=darkseagreen4, key=1, label=escapedValue, style=dashed];
m9_298 -> m9_301  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_298 -> m9_302  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_298 -> m9_303  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_298 -> m9_304  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_298 -> m9_305  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_298 -> m9_306  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_298 -> m9_307  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_298 -> m9_308  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_298 -> m9_309  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_310 -> m9_312  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_741 -> m9_747  [color=darkseagreen4, key=1, label=sw, style=dashed];
m9_742 -> m9_744  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_742 -> m9_745  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_742 -> m9_746  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_920 -> m9_924  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_24 -> m9_32  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_26 -> m9_28  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_26 -> m9_29  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_26 -> m9_30  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_26 -> m9_31  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_475 -> m9_496  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_477 -> m9_479  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_480  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_481  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_482  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_483  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_484  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_485  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_486  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_487  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_488  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_489  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_490  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_491  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_492  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_493  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_494  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_477 -> m9_495  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_941 -> m9_944  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonToken", style=dashed];
m9_893 -> m9_898  [color=darkseagreen4, key=1, label=d, style=dashed];
m9_895 -> m9_898  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m9_896 -> m9_900  [color=darkseagreen4, key=1, label=stringWriter, style=dashed];
m9_897 -> m9_899  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_562 -> m9_564  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_174 -> m9_176  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_174 -> m9_177  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_555 -> m9_557  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_555 -> m9_558  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_555 -> m9_559  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_322  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_323  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_324  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_325  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_326  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_327  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_328  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_329  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_330  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_331  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_332  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_333  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_334  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_335  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_319 -> m9_336  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_337 -> m9_339  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_404 -> m9_407  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_404 -> m9_408  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_404 -> m9_409  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_404 -> m9_410  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_404 -> m9_411  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_404 -> m9_412  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_413 -> m9_415  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_223 -> m9_225  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_226  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_227  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_228  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_229  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_230  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_231  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_232  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_233  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_234  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_235  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_223 -> m9_236  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_237 -> m9_239  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_750 -> m9_768  [color=darkseagreen4, key=1, label=sw, style=dashed];
m9_751 -> m9_754  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_755  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_756  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_758  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_759  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_761  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_762  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_763  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_764  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_765  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_766  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_751 -> m9_767  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_387 -> m9_390  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_387 -> m9_391  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_387 -> m9_392  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_387 -> m9_393  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_387 -> m9_394  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_395 -> m9_397  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_68 -> m9_70  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_71  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_72  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_73  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_74  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_75  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_76  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_77  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_78  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_79  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_80  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_81  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_82  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_68 -> m9_83  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_84 -> m9_86  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_269 -> m9_271  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_272  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_273  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_274  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_275  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_276  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_277  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_278  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_279  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_280  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_281  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_282  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_283  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_284  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_285  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_286  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_287  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_288  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_289  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_290  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_291  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_292  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_269 -> m9_293  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_538 -> m9_540  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_538 -> m9_544  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_538 -> m9_541  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_538 -> m9_547  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_540 -> m9_543  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_541 -> m9_546  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_705 -> m9_708  [color=darkseagreen4, key=1, label=sw, style=dashed];
m9_604 -> m9_614  [color=darkseagreen4, key=1, label=text, style=dashed];
m9_606 -> m9_608  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_606 -> m9_609  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_605 -> m9_609  [color=darkseagreen4, key=1, label=data, style=dashed];
m9_610 -> m9_612  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_688 -> m9_700  [color=darkseagreen4, key=1, label=stateArray, style=dashed];
m9_689 -> m9_700  [color=darkseagreen4, key=1, label=valueStates, style=dashed];
m9_690 -> m9_700  [color=darkseagreen4, key=1, label=valueToken, style=dashed];
m9_874 -> m9_885  [color=darkseagreen4, key=1, label=sw, style=dashed];
m9_875 -> m9_877  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_875 -> m9_878  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_875 -> m9_879  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_875 -> m9_880  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_875 -> m9_881  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_875 -> m9_882  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_875 -> m9_883  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_875 -> m9_884  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_908 -> m9_912  [color=darkseagreen4, key=1, label=r, style=dashed];
m9_909 -> m9_913  [color=darkseagreen4, key=1, label=sw, style=dashed];
m9_910 -> m9_912  [color=darkseagreen4, key=1, label=w, style=dashed];
m9_443 -> m9_454  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_445 -> m9_448  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_445 -> m9_450  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_445 -> m9_451  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_445 -> m9_453  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_446 -> m9_449  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_446 -> m9_450  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_446 -> m9_452  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_447 -> m9_451  [color=darkseagreen4, key=1, label=rawJson, style=dashed];
m9_452 -> m9_452  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_989 -> m9_992  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_725 -> m9_727  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_728 -> m9_730  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_726 -> m9_732  [color=darkseagreen4, key=1, label=unicode, style=dashed];
m9_726 -> m9_735  [color=darkseagreen4, key=1, label=unicode, style=dashed];
m9_736 -> m9_738  [color=darkseagreen4, key=1, label=json, style=dashed];
m9_430 -> m9_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_430 -> m9_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m9_433 -> m9_436  [color=darkseagreen4, key=1, label=sw, style=dashed];
m9_169 -> m9_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_40 -> m9_42  [color=darkseagreen4, key=1, label=ms, style=dashed];
m9_40 -> m9_44  [color=darkseagreen4, key=1, label=ms, style=dashed];
m9_41 -> m9_43  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_45 -> m9_47  [color=darkseagreen4, key=1, label=ms, style=dashed];
m9_45 -> m9_49  [color=darkseagreen4, key=1, label=ms, style=dashed];
m9_46 -> m9_48  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_521 -> m9_531  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_523 -> m9_525  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_523 -> m9_526  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_523 -> m9_527  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_523 -> m9_528  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_523 -> m9_529  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_523 -> m9_530  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_550 -> m9_552  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_641 -> m9_683  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_645 -> m9_647  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_648  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_649  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_650  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_651  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_652  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_653  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_654  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_655  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_656  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_657  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_658  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_659  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_660  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_661  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_662  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_663  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_664  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_665  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_666  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_667  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_668  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_669  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_670  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_671  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_672  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_673  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_674  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_675  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_676  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_677  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_678  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_679  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_680  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_681  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_645 -> m9_682  [color=darkseagreen4, key=1, label=writer, style=dashed];
m9_197 -> m9_199  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_200  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_201  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_202  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_203  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_204  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_205  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_206  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_207  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_208  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_209  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_210  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_197 -> m9_211  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_212 -> m9_214  [color=darkseagreen4, key=1, label=expected, style=dashed];
m9_458 -> m9_470  [color=darkseagreen4, key=1, label=sb, style=dashed];
m9_460 -> m9_462  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_460 -> m9_463  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_460 -> m9_464  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_460 -> m9_465  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_460 -> m9_466  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_460 -> m9_467  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_460 -> m9_468  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_460 -> m9_469  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_1003 -> m9_544  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_1003 -> m9_547  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m9_1004 -> m9_918  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_921  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_922  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_923  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_924  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_925  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_926  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_927  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_933  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_934  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_936  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_937  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_939  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_943  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1004 -> m9_944  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.CustomJsonTextWriter", style=dashed];
m9_1006 -> m9_991  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.ConvertibleInt", style=dashed];
m11_518 -> m11_521  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_520 -> m11_522  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_483 -> m11_494  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_492 -> m11_494  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_36 -> m11_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod", style=dashed];
m11_36 -> m11_499  [color=darkseagreen4, key=1, label=bool, style=dashed];
m11_36 -> m11_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod", style=dashed];
m11_503 -> m11_506  [color=darkseagreen4, key=1, label="int?", style=dashed];
m11_507 -> m11_512  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_501 -> m11_509  [color=darkseagreen4, key=1, label=timed, style=dashed];
m11_501 -> m11_511  [color=darkseagreen4, key=1, label=timed, style=dashed];
m11_504 -> m11_512  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_508 -> m11_508  [color=darkseagreen4, key=1, label=x, style=dashed];
m11_505 -> m11_508  [color=darkseagreen4, key=1, label=x, style=dashed];
m11_364 -> m11_367  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_365 -> m11_367  [color=darkseagreen4, key=1, label=dataContractSerializer, style=dashed];
m11_366 -> m11_368  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_568 -> m11_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m11_568 -> m11_571  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m11_568 -> m11_572  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m11_569 -> m11_579  [color=darkseagreen4, key=1, label=a, style=dashed];
m11_79 -> m11_84  [color=darkseagreen4, key=1, label=image, style=dashed];
m11_625 -> m11_627  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_656 -> m11_659  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_659 -> m11_659  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_654 -> m11_660  [color=darkseagreen4, key=1, label=timer, style=dashed];
m11_516 -> m11_604  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_516 -> m11_606  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_516 -> m11_609  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_516 -> m11_612  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_516 -> m11_614  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_516 -> m11_616  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_516 -> m11_618  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_516 -> m11_620  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_636 -> m11_644  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_634 -> m11_645  [color=darkseagreen4, key=1, label=rootValue, style=dashed];
m11_634 -> m11_639  [color=darkseagreen4, key=1, label=rootValue, style=dashed];
m11_635 -> m11_641  [color=darkseagreen4, key=1, label=parentValue, style=dashed];
m11_640 -> m11_645  [color=darkseagreen4, key=1, label=rootValue, style=dashed];
m11_644 -> m11_644  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_332 -> m11_342  [color=darkseagreen4, key=1, label=test, style=dashed];
m11_332 -> m11_346  [color=darkseagreen4, key=1, label=test, style=dashed];
m11_332 -> m11_347  [color=darkseagreen4, key=1, label=test, style=dashed];
m11_339 -> m11_342  [color=darkseagreen4, key=1, label=address, style=dashed];
m11_343 -> m11_346  [color=darkseagreen4, key=1, label=address, style=dashed];
m11_10 -> m11_325  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod", style=dashed];
m11_322 -> m11_327  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_320 -> m11_323  [color=darkseagreen4, key=1, label=x, style=dashed];
m11_319 -> m11_327  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_317 -> m11_324  [color=darkseagreen4, key=1, label=timed, style=dashed];
m11_317 -> m11_326  [color=darkseagreen4, key=1, label=timed, style=dashed];
m11_323 -> m11_323  [color=darkseagreen4, key=1, label=x, style=dashed];
m11_5 -> m11_52  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_5 -> m11_53  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_5 -> m11_54  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_5 -> m11_55  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_5 -> m11_56  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_5 -> m11_57  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_5 -> m11_58  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_5 -> m11_59  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_129 -> m11_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_128 -> m11_137  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_123 -> m11_126  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_126 -> m11_126  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_14 -> m11_70  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_14 -> m11_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_14 -> m11_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_698 -> m11_700  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_194 -> m11_196  [color=green, key=1, label="lambda expression", style=dashed];
m11_192 -> m11_201  [color=green, key=1, label=text, style=dashed];
m11_193 -> m11_198  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_667 -> m11_669  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_666 -> m11_673  [color=darkseagreen4, key=1, label=test, style=dashed];
m11_77 -> m11_270  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_77 -> m11_286  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_77 -> m11_299  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_77 -> m11_310  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_241 -> m11_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_241 -> m11_246  [color=darkseagreen4, key=1, label=jsonBytes, style=dashed];
m11_242 -> m11_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_242 -> m11_247  [color=darkseagreen4, key=1, label=bsonBytes, style=dashed];
m11_243 -> m11_280  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_243 -> m11_249  [color=darkseagreen4, key=1, label=xmlBytes, style=dashed];
m11_244 -> m11_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_244 -> m11_248  [color=darkseagreen4, key=1, label=wcfJsonBytes, style=dashed];
m11_245 -> m11_304  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_245 -> m11_250  [color=darkseagreen4, key=1, label=binaryFormatterBytes, style=dashed];
m11_240 -> m11_256  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_240 -> m11_266  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_240 -> m11_283  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_240 -> m11_296  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_240 -> m11_307  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_21 -> m11_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_26 -> m11_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_623 -> m11_630  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m11_144 -> m11_150  [color=darkseagreen4, key=1, label=totalIterations, style=dashed];
m11_144 -> m11_164  [color=darkseagreen4, key=1, label=totalIterations, style=dashed];
m11_149 -> m11_157  [color=darkseagreen4, key=1, label=iteration, style=dashed];
m11_157 -> m11_157  [color=darkseagreen4, key=1, label=iteration, style=dashed];
m11_151 -> m11_153  [color=darkseagreen4, key=1, label=obj, style=dashed];
m11_151 -> m11_154  [color=darkseagreen4, key=1, label=obj, style=dashed];
m11_151 -> m11_155  [color=darkseagreen4, key=1, label=obj, style=dashed];
m11_151 -> m11_156  [color=darkseagreen4, key=1, label=obj, style=dashed];
m11_163 -> m11_181  [color=darkseagreen4, key=1, label=iteration, style=dashed];
m11_181 -> m11_181  [color=darkseagreen4, key=1, label=iteration, style=dashed];
m11_147 -> m11_158  [color=darkseagreen4, key=1, label=watch, style=dashed];
m11_147 -> m11_182  [color=darkseagreen4, key=1, label=watch, style=dashed];
m11_147 -> m11_160  [color=darkseagreen4, key=1, label=watch, style=dashed];
m11_147 -> m11_184  [color=darkseagreen4, key=1, label=watch, style=dashed];
m11_147 -> m11_161  [color=darkseagreen4, key=1, label=watch, style=dashed];
m11_147 -> m11_162  [color=darkseagreen4, key=1, label=watch, style=dashed];
m11_167 -> m11_172  [color=darkseagreen4, key=1, label=property, style=dashed];
m11_167 -> m11_174  [color=darkseagreen4, key=1, label=property, style=dashed];
m11_167 -> m11_176  [color=darkseagreen4, key=1, label=property, style=dashed];
m11_167 -> m11_178  [color=darkseagreen4, key=1, label=property, style=dashed];
m11_167 -> m11_180  [color=darkseagreen4, key=1, label=property, style=dashed];
m11_530 -> m11_540  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_530 -> m11_545  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_530 -> m11_559  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_530 -> m11_560  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_531 -> m11_533  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_534  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_538  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_539  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_540  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_542  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_543  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_545  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_553  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_556  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_531 -> m11_557  [color=darkseagreen4, key=1, label=reader, style=dashed];
m11_597 -> m11_599  [color=darkseagreen4, key=1, label=dataContractSerializer, style=dashed];
m11_681 -> m11_683  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_679 -> m11_689  [color=darkseagreen4, key=1, label=test, style=dashed];
m11_680 -> m11_687  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_680 -> m11_691  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_201 -> m11_201  [color=green, key=1, label=buffer, style=dashed];
m11_199 -> m11_201  [color=green, key=1, label=w, style=dashed];
m11_202 -> m11_202  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_197 -> m11_202  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_670 -> m11_674  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_674 -> m11_674  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_684 -> m11_692  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_692 -> m11_692  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_701 -> m11_707  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_707 -> m11_707  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_217 -> m11_220  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_225 -> m11_228  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_234 -> m11_237  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_138 -> m11_140  [color=darkseagreen4, key=1, label=oo, style=dashed];
m11_135 -> m11_140  [color=darkseagreen4, key=1, label=oo, style=dashed];
m11_257 -> m11_259  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_254 -> m11_259  [color=darkseagreen4, key=1, label=json, style=dashed];
m11_264 -> m11_273  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_281 -> m11_288  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_294 -> m11_301  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_305 -> m11_312  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_688 -> m11_690  [color=darkseagreen4, key=1, label=jsonTextWriter, style=dashed];
m11_136 -> m11_139  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_139 -> m11_139  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_220 -> m11_220  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_228 -> m11_228  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_237 -> m11_237  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_258 -> m11_258  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_268 -> m11_270  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_269 -> m11_271  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_284 -> m11_286  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_284 -> m11_288  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_287 -> m11_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_297 -> m11_299  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_297 -> m11_301  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_300 -> m11_300  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_308 -> m11_310  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_308 -> m11_312  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_311 -> m11_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_255 -> m11_258  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_265 -> m11_272  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_272 -> m11_272  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_267 -> m11_273  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_282 -> m11_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_295 -> m11_300  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_306 -> m11_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_486 -> m11_486  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, int>", style=dashed];
m11_39 -> m11_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_39 -> m11_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_38 -> m11_43  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_38 -> m11_41  [color=darkseagreen4, key=1, label=value, style=dashed];
m11_42 -> m11_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_105 -> m11_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_109 -> m11_113  [color=darkseagreen4, key=1, label=result, style=dashed];
m11_107 -> m11_111  [color=darkseagreen4, key=1, label=timed, style=dashed];
m11_107 -> m11_112  [color=darkseagreen4, key=1, label=timed, style=dashed];
m11_591 -> m11_593  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_330 -> m11_384  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests.SerializeMethod", style=dashed];
m11_330 -> m11_447  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_396 -> m11_403  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_396 -> m11_408  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_396 -> m11_413  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_396 -> m11_415  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_396 -> m11_417  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_396 -> m11_421  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_396 -> m11_423  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_396 -> m11_425  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_396 -> m11_429  [color=darkseagreen4, key=1, label=c, style=dashed];
m11_392 -> m11_485  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_392 -> m11_488  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_429 -> m11_432  [color=darkseagreen4, key=1, label=address, style=dashed];
m11_429 -> m11_434  [color=darkseagreen4, key=1, label=address, style=dashed];
m11_429 -> m11_436  [color=darkseagreen4, key=1, label=address, style=dashed];
m11_445 -> m11_447  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_410 -> m11_410  [color=darkseagreen4, key=1, label=keyValuePair, style=dashed];
m11_409 -> m11_409  [color=darkseagreen4, key=1, label=keyValuePair, style=dashed];
m11_399 -> m11_413  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_415  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_417  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_421  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_423  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_425  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_440  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_402  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_404  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_405  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_407  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_410  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_409  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_411  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_401  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_406  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_412  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_414  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_416  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_418  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_419  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_420  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_422  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_424  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_426  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_427  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_428  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_430  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_431  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_432  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_433  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_434  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_435  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_436  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_437  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_438  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_399 -> m11_439  [color=darkseagreen4, key=1, label=writer, style=dashed];
m11_735 -> m11_740  [color=darkseagreen4, key=1, label=sw, style=dashed];
m11_735 -> m11_738  [color=darkseagreen4, key=1, label=sw, style=dashed];
m11_737 -> m11_739  [color=darkseagreen4, key=1, label=a, style=dashed];
m11_712 -> m11_719  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_712 -> m11_726  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_718 -> m11_723  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_723 -> m11_723  [color=darkseagreen4, key=1, label=j, style=dashed];
m11_722 -> m11_724  [color=darkseagreen4, key=1, label=ija, style=dashed];
m11_716 -> m11_724  [color=darkseagreen4, key=1, label=ija, style=dashed];
m11_716 -> m11_721  [color=darkseagreen4, key=1, label=ija, style=dashed];
m11_714 -> m11_726  [color=darkseagreen4, key=1, label=sw, style=dashed];
m11_714 -> m11_725  [color=darkseagreen4, key=1, label=sw, style=dashed];
m11_581 -> m11_587  [color=darkseagreen4, key=1, label="byte[]", style=dashed];
m11_582 -> m11_587  [color=darkseagreen4, key=1, label=type, style=dashed];
m11_583 -> m11_587  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m11_211 -> m11_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_212 -> m11_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_213 -> m11_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_209 -> m11_219  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_209 -> m11_227  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_209 -> m11_236  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_210 -> m11_218  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_210 -> m11_226  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_210 -> m11_235  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_358 -> m11_360  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_375 -> m11_378  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_376 -> m11_378  [color=darkseagreen4, key=1, label=dataContractSerializer, style=dashed];
m11_377 -> m11_379  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_744 -> m11_2  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_33  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_45  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_51  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_56  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_57  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_62  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_64  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_66  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_71  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_72  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_84  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_609  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_614  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_616  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_618  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_620  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_645  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_671  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_685  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_744 -> m11_702  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.PerformanceTests", style=dashed];
m11_748 -> m11_201  [color=green, key=1, label=text, style=dashed];
m11_747 -> m11_198  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_753 -> m11_673  [color=darkseagreen4, key=1, label=test, style=dashed];
m11_754 -> m11_689  [color=darkseagreen4, key=1, label=test, style=dashed];
m11_745 -> m11_137  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_750 -> m11_219  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_750 -> m11_227  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_750 -> m11_236  [color=darkseagreen4, key=1, label=s, style=dashed];
m11_749 -> m11_218  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_749 -> m11_226  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_749 -> m11_235  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_752 -> m11_270  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_752 -> m11_286  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_752 -> m11_299  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_752 -> m11_310  [color=darkseagreen4, key=1, label=object, style=dashed];
m11_751 -> m11_256  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_751 -> m11_266  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_751 -> m11_283  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_751 -> m11_296  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_751 -> m11_307  [color=darkseagreen4, key=1, label=interations, style=dashed];
m11_755 -> m11_687  [color=darkseagreen4, key=1, label=ms, style=dashed];
m11_755 -> m11_691  [color=darkseagreen4, key=1, label=ms, style=dashed];
m12_12 -> m12_15  [color=darkseagreen4, key=1, label="char[]", style=dashed];
m12_38 -> m12_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m12_38 -> m12_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m12_38 -> m12_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m12_38 -> m12_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
m12_38 -> m12_32  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.StringBuffer", style=dashed];
}
