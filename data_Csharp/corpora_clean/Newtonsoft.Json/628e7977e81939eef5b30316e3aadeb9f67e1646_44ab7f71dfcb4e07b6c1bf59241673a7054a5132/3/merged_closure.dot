digraph  {
m0_10 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", color=green, community=0, file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", prediction=0, span="48-48"];
m0_11 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="BinaryConverterTests.cs", label="BinaryClass binaryClass = new BinaryClass()", span="50-50"];
m0_12 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="BinaryConverterTests.cs", label="binaryClass.Binary = new Binary(TestData)", span="51-51"];
m0_13 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="BinaryConverterTests.cs", label="binaryClass.NullBinary = null", span="52-52"];
m0_14 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="BinaryConverterTests.cs", label="string json = JsonConvert.SerializeObject(binaryClass, Formatting.Indented, new BinaryConverter())", span="54-54"];
m0_17 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.BinaryClass.BinaryClass()", color=green, community=0, file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.BinaryClass.BinaryClass()", prediction=1, span="41-41"];
m0_15 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Binary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullBinary'''': null\r\n}'', json)", span="56-59"];
m0_18 [cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting, params Newtonsoft.Json.JsonConverter[])", span="561-561"];
m0_6 [cluster="Newtonsoft.Json.Converters.BinaryConverter.BinaryConverter()", color=green, community=0, file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Converters.BinaryConverter.BinaryConverter()", prediction=2, span="44-44"];
m0_16 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", file="BinaryConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeBinaryClass()", span="48-48"];
m0_27 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", span="87-87"];
m0_28 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="SqlBinaryClass sqlBinaryClass = new SqlBinaryClass()", span="89-89"];
m0_29 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="sqlBinaryClass.SqlBinary = new SqlBinary(TestData)", span="90-90"];
m0_30 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="sqlBinaryClass.NullableSqlBinary1 = new SqlBinary(TestData)", span="91-91"];
m0_31 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="sqlBinaryClass.NullableSqlBinary2 = null", span="92-92"];
m0_32 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="string json = JsonConvert.SerializeObject(sqlBinaryClass, Formatting.Indented, new BinaryConverter())", span="94-94"];
m0_35 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SqlBinaryClass.SqlBinaryClass()", file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SqlBinaryClass.SqlBinaryClass()", span="79-79"];
m0_33 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''SqlBinary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary1'''': ''''\\nVGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary2'''': null\r\n}'', json)", span="96-100"];
m0_34 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeSqlBinaryClass()", span="87-87"];
m0_37 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", span="104-104"];
m0_38 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="string json = @''{\r\n  ''''SqlBinary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullableSqlBinary1'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''\\nNullableSqlBinary2'''': null\r\n}''", span="106-110"];
m0_39 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="SqlBinaryClass sqlBinaryClass = JsonConvert.DeserializeObject<SqlBinaryClass>(json, new BinaryConverter())", span="112-112"];
m0_7 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="665-665"];
m0_40 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(new SqlBinary(TestData), sqlBinaryClass.SqlBinary)", span="114-114"];
m0_41 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(new SqlBinary(TestData), sqlBinaryClass.NullableSqlBinary1)", span="115-115"];
m0_42 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(null, sqlBinaryClass.NullableSqlBinary2)", span="116-116"];
m0_43 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", file="BinaryConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeSqlBinaryClass()", span="104-104"];
m0_44 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", span="121-121"];
m0_45 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="BinaryConverterTests.cs", label="string json = @''{\r\n  ''''ByteArray'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullByteArray'''': null\r\n}''", span="123-126"];
m0_46 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="BinaryConverterTests.cs", label="ByteArrayClass byteArrayClass = JsonConvert.DeserializeObject<ByteArrayClass>(json, new BinaryConverter())", span="128-128"];
m0_47 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(TestData, byteArrayClass.ByteArray)", span="130-130"];
m0_48 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(null, byteArrayClass.NullByteArray)", span="131-131"];
m0_49 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", file="BinaryConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeByteArrayClass()", span="121-121"];
m0_0 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", span="28-28"];
m0_1 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="BinaryConverterTests.cs", label="string json = @''{\r\n  ''''Binary'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullBinary'''': null\r\n}''", span="30-33"];
m0_2 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="BinaryConverterTests.cs", label="BinaryClass binaryClass = JsonConvert.DeserializeObject<BinaryClass>(json, new BinaryConverter())", span="35-35"];
m0_3 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(new Binary(TestData), binaryClass.Binary)", span="37-37"];
m0_4 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(null, binaryClass.NullBinary)", span="38-38"];
m0_5 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", file="BinaryConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.DeserializeBinaryClass()", span="28-28"];
m0_19 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", span="64-64"];
m0_20 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="BinaryConverterTests.cs", label="ByteArrayClass byteArrayClass = new ByteArrayClass()", span="66-66"];
m0_26 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.ByteArrayClass.ByteArrayClass()", file="BinaryConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.BinaryConverterTests.ByteArrayClass.ByteArrayClass()", span="20-20"];
m0_21 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="BinaryConverterTests.cs", label="byteArrayClass.ByteArray = TestData", span="67-67"];
m0_22 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="BinaryConverterTests.cs", label="byteArrayClass.NullByteArray = null", span="68-68"];
m0_23 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="BinaryConverterTests.cs", label="string json = JsonConvert.SerializeObject(byteArrayClass, Formatting.Indented, new BinaryConverter())", span="70-70"];
m0_24 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="BinaryConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''ByteArray'''': ''''VGhpcyBpcyBzb21lIHRlc3QgZGF0YSEhIQ=='''',\r\n  ''''NullByteArray'''': null\r\n}'', \\njson)", span="72-75"];
m0_25 [cluster="Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", file="BinaryConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.BinaryConverterTests.SerializeByteArrayClass()", span="64-64"];
m1_53 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="146-146"];
m1_54 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="string json = @''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': \\n2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''\\n2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''\\nStringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2147483647,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}''", span="148-169"];
m1_55 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="DataSet ds = JsonConvert.DeserializeObject<DataSet>(json, new IsoDateTimeConverter())", span="171-171"];
m1_56 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.IsNotNull(ds)", span="172-172"];
m1_57 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(2, ds.Tables.Count)", span="174-174"];
m1_58 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''FirstTable'', ds.Tables[0].TableName)", span="175-175"];
m1_59 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''SecondTable'', ds.Tables[1].TableName)", span="176-176"];
m1_60 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="DataTable dt = ds.Tables[0]", span="178-178"];
m1_73 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(1, ds.Tables[0].Rows.Count)", span="192-192"];
m1_74 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(1, ds.Tables[1].Rows.Count)", span="193-193"];
m1_52 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", file="DataSetConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, params Newtonsoft.Json.JsonConverter[])", span="665-665"];
m1_51 [cluster="Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", file="DataSetConverterTests.cs", label="Entry Newtonsoft.Json.Converters.IsoDateTimeConverter.IsoDateTimeConverter()", span="9-9"];
m1_61 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''StringCol'', dt.Columns[0].ColumnName)", span="179-179"];
m1_62 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(typeof(string), dt.Columns[0].DataType)", span="180-180"];
m1_63 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''Int32Col'', dt.Columns[1].ColumnName)", span="181-181"];
m1_64 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(typeof(long), dt.Columns[1].DataType)", span="182-182"];
m1_65 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''BooleanCol'', dt.Columns[2].ColumnName)", span="183-183"];
m1_66 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(typeof(bool), dt.Columns[2].DataType)", span="184-184"];
m1_67 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''TimeSpanCol'', dt.Columns[3].ColumnName)", span="185-185"];
m1_68 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(typeof(string), dt.Columns[3].DataType)", span="186-186"];
m1_69 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''DateTimeCol'', dt.Columns[4].ColumnName)", span="187-187"];
m1_70 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(typeof(string), dt.Columns[4].DataType)", span="188-188"];
m1_71 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''DecimalCol'', dt.Columns[5].ColumnName)", span="189-189"];
m1_72 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(typeof(double), dt.Columns[5].DataType)", span="190-190"];
m1_75 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.DeserializeMultiTableDataSet()", span="146-146"];
m1_112 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="DataSet ds = new DataSet()", span="255-255"];
m1_113 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="256-256"];
m1_114 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="257-257"];
m1_115 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="DataSetAndTableTestClass c = new DataSetAndTableTestClass\r\n        {\r\n          Before = ''Before'',\r\n          Set = ds,\r\n          \\nMiddle = ''Middle'',\r\n          Table = CreateDataTable(''LoneTable'', 2),\r\n          After = ''After''\r\n        }", span="259-266"];
m1_50 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", span="196-196"];
m1_116 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new IsoDateTimeConverter())", span="268-268"];
m1_118 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="DataSetAndTableTestClass c2 = JsonConvert.DeserializeObject<DataSetAndTableTestClass>(json, new IsoDateTimeConverter())", span="324-324"];
m1_119 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.Before, c2.Before)", span="326-326"];
m1_120 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.Set.Tables.Count, c2.Set.Tables.Count)", span="327-327"];
m1_121 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.Middle, c2.Middle)", span="328-328"];
m1_122 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.Table.Rows.Count, c2.Table.Rows.Count)", span="329-329"];
m1_123 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.After, c2.After)", span="330-330"];
m1_125 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="DataSetConverterTests.cs", label="string json = JsonConvert.SerializeObject(c, Formatting.Indented, new IsoDateTimeConverter())", span="313-313"];
m1_117 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.Blah()", file="DataSetConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before'''',\r\n  ''''Set'''': {\r\n    ''''FirstTable'''': [\r\n      {\r\n        ''''\\nStringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      },\r\n      {\r\n        ''''\\nStringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 2,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      }\r\n    ],\r\n    ''''\\nSecondTable'''': [\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': \\ntrue,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''\\nDecimalCol'''': 64.0021\r\n      }\r\n    ]\r\n  },\r\n  ''''Middle'''': ''''Middle'''',\r\n  ''''Table'''': [\r\n    {\r\n      ''''\\nStringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''\\nStringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''\\nAfter'''': ''''After''''\r\n}'', json)", span="270-322"];
m1_126 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="DataSetConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Before'''': ''''Before'''',\r\n  ''''Set'''': {\r\n    ''''FirstTable'''': [\r\n      {\r\n        ''''\\nStringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      },\r\n      {\r\n        ''''\\nStringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 2,\r\n        ''''BooleanCol'''': true,\r\n        ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''DecimalCol'''': 64.0021\r\n      }\r\n    ],\r\n    ''''\\nSecondTable'''': [\r\n      {\r\n        ''''StringCol'''': ''''Item Name'''',\r\n        ''''Int32Col'''': 1,\r\n        ''''BooleanCol'''': \\ntrue,\r\n        ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n        ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n        ''''\\nDecimalCol'''': 64.0021\r\n      }\r\n    ]\r\n  },\r\n  ''''Middle'''': ''''Middle'''',\r\n  ''''Table'''': [\r\n    {\r\n      ''''\\nStringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''\\nStringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 2,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''\\nAfter'''': ''''After''''\r\n}'', json)", span="315-367"];
m1_132 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.After, c2.After)", span="375-375"];
m1_131 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.Table.Rows.Count, c2.Table.Rows.Count)", span="374-374"];
m1_128 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.Before, c2.Before)", span="371-371"];
m1_129 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.Set.Tables.Count, c2.Set.Tables.Count)", span="372-372"];
m1_130 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="DataSetConverterTests.cs", label="Assert.AreEqual(c.Middle, c2.Middle)", span="373-373"];
m1_133 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", color=green, community=2, file="DataSetConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", prediction=3, span="298-298"];
m1_127 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeDataSetProperty()", file="DataSetConverterTests.cs", label="DataSetAndTableTestClass c2 = JsonConvert.DeserializeObject<DataSetAndTableTestClass>(json, new IsoDateTimeConverter())", span="369-369"];
m1_43 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="ds.Tables.Add(CreateDataTable(''FirstTable'', 2))", span="73-73"];
m1_44 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="ds.Tables.Add(CreateDataTable(''SecondTable'', 1))", span="74-74"];
m1_76 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="DataTable myTable = new DataTable(dataTableName)", span="199-199"];
m1_97 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="i <= rows", span="227-227"];
m1_77 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="DataColumn colString = new DataColumn(''StringCol'')", span="202-202"];
m1_79 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myTable.Columns.Add(colString)", span="204-204"];
m1_82 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myTable.Columns.Add(colInt32)", span="208-208"];
m1_85 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myTable.Columns.Add(colBoolean)", span="212-212"];
m1_88 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myTable.Columns.Add(colTimeSpan)", span="216-216"];
m1_92 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myTable.Columns.Add(colDateTime)", span="221-221"];
m1_95 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myTable.Columns.Add(colDecimal)", span="225-225"];
m1_98 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="DataRow myNewRow = myTable.NewRow()", span="229-229"];
m1_105 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myTable.Rows.Add(myNewRow)", span="237-237"];
m1_107 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="return myTable;", span="240-240"];
m1_78 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="colString.DataType = typeof(string)", span="203-203"];
m1_80 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="DataColumn colInt32 = new DataColumn(''Int32Col'')", span="206-206"];
m1_81 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="colInt32.DataType = typeof(int)", span="207-207"];
m1_83 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="DataColumn colBoolean = new DataColumn(''BooleanCol'')", span="210-210"];
m1_84 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="colBoolean.DataType = typeof(bool)", span="211-211"];
m1_86 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="DataColumn colTimeSpan = new DataColumn(''TimeSpanCol'')", span="214-214"];
m1_87 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="colTimeSpan.DataType = typeof(TimeSpan)", span="215-215"];
m1_89 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="DataColumn colDateTime = new DataColumn(''DateTimeCol'')", span="218-218"];
m1_90 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="colDateTime.DataType = typeof(DateTime)", span="219-219"];
m1_91 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="colDateTime.DateTimeMode = DataSetDateTime.Utc", span="220-220"];
m1_93 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="DataColumn colDecimal = new DataColumn(''DecimalCol'')", span="223-223"];
m1_94 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="colDecimal.DataType = typeof(decimal)", span="224-224"];
m1_96 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="int i = 1", span="227-227"];
m1_100 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myNewRow[''Int32Col''] = i", span="232-232"];
m1_106 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="i++", span="227-227"];
m1_99 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myNewRow[''StringCol''] = ''Item Name''", span="231-231"];
m1_101 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myNewRow[''BooleanCol''] = true", span="233-233"];
m1_102 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myNewRow[''TimeSpanCol''] = new TimeSpan(10, 22, 10, 15, 100)", span="234-234"];
m1_103 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myNewRow[''DateTimeCol''] = new DateTime(2000, 12, 29, 0, 0, 0, DateTimeKind.Utc)", span="235-235"];
m1_104 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="myNewRow[''DecimalCol''] = 64.0021", span="236-236"];
m1_109 [cluster="System.TimeSpan.TimeSpan(int, int, int, int, int)", file="DataSetConverterTests.cs", label="Entry System.TimeSpan.TimeSpan(int, int, int, int, int)", span="0-0"];
m1_110 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="DataSetConverterTests.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m1_108 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", file="DataSetConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.CreateDataTable(string, int)", span="196-196"];
m1_0 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", span="15-15"];
m1_1 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="DataSet dataSet = new DataSet(''dataSet'')", span="17-17"];
m1_2 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="dataSet.Namespace = ''NetFrameWork''", span="18-18"];
m1_3 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="DataTable table = new DataTable()", span="19-19"];
m1_9 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="dataSet.Tables.Add(table)", span="26-26"];
m1_16 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="dataSet.AcceptChanges()", span="35-35"];
m1_17 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="string json = JsonConvert.SerializeObject(dataSet, Formatting.Indented)", span="37-37"];
m1_4 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="DataColumn idColumn = new DataColumn(''id'', typeof(int))", span="20-20"];
m1_7 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="table.Columns.Add(idColumn)", span="24-24"];
m1_8 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="table.Columns.Add(itemColumn)", span="25-25"];
m1_12 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="DataRow newRow = table.NewRow()", span="30-30"];
m1_14 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="table.Rows.Add(newRow)", span="32-32"];
m1_5 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="idColumn.AutoIncrement = true", span="21-21"];
m1_6 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="DataColumn itemColumn = new DataColumn(''item'')", span="23-23"];
m1_10 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="int i = 0", span="28-28"];
m1_11 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="i < 2", span="28-28"];
m1_13 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="newRow[''item''] = ''item '' + i", span="31-31"];
m1_15 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="i++", span="28-28"];
m1_18 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''Table1'''': [\r\n    {\r\n      ''''id'''': 0,\r\n      ''''item'''': ''''item 0''''\r\n    },\r\n    {\r\n      ''''\\nid'''': 1,\r\n      ''''item'''': ''''item 1''''\r\n    }\r\n  ]\r\n}'', json)", span="39-50"];
m1_19 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="DataSet deserializedDataSet = JsonConvert.DeserializeObject<DataSet>(json)", span="52-52"];
m1_39 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="DataSetConverterTests.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="637-637"];
m1_20 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.IsNotNull(deserializedDataSet)", span="53-53"];
m1_21 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.AreEqual(1, deserializedDataSet.Tables.Count)", span="55-55"];
m1_22 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="DataTable dt = deserializedDataSet.Tables[0]", span="57-57"];
m1_23 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''Table1'', dt.TableName)", span="59-59"];
m1_24 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.AreEqual(2, dt.Columns.Count)", span="60-60"];
m1_25 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''id'', dt.Columns[0].ColumnName)", span="61-61"];
m1_26 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.AreEqual(typeof(long), dt.Columns[0].DataType)", span="62-62"];
m1_27 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.AreEqual(''item'', dt.Columns[1].ColumnName)", span="63-63"];
m1_28 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.AreEqual(typeof(string), dt.Columns[1].DataType)", span="64-64"];
m1_29 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Assert.AreEqual(2, dt.Rows.Count)", span="66-66"];
m1_30 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", file="DataSetConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeAndDeserialize()", span="15-15"];
m1_41 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Entry Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="70-70"];
m1_42 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="DataSet ds = new DataSet()", span="72-72"];
m1_45 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="string json = JsonConvert.SerializeObject(ds, Formatting.Indented, new IsoDateTimeConverter())", span="76-76"];
m1_46 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="DataSet deserializedDs = JsonConvert.DeserializeObject<DataSet>(json, new IsoDateTimeConverter())", span="108-108"];
m1_47 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.AreEqual(@''{\r\n  ''''FirstTable'''': [\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': \\n1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''\\n2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    },\r\n    {\r\n      ''''StringCol'''': ''''Item Name'''',\r\n      ''''\\nInt32Col'''': 2,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''\\n2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ],\r\n  ''''SecondTable'''': [\r\n    {\r\n      ''''\\nStringCol'''': ''''Item Name'''',\r\n      ''''Int32Col'''': 1,\r\n      ''''BooleanCol'''': true,\r\n      ''''TimeSpanCol'''': ''''\\n10.22:10:15.1000000'''',\r\n      ''''DateTimeCol'''': ''''2000-12-29T00:00:00Z'''',\r\n      ''''DecimalCol'''': 64.0021\r\n    }\r\n  ]\r\n}'', \\njson)", span="110-139"];
m1_48 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Assert.IsNotNull(deserializedDs)", span="141-141"];
m1_49 [cluster="Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", file="DataSetConverterTests.cs", label="Exit Newtonsoft.Json.Tests.Converters.DataSetConverterTests.SerializeMultiTableDataSet()", span="70-70"];
m2_44 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", span="116-116"];
m2_48 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label=tokenType, span="118-118"];
m2_49 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Integer", span="120-120"];
m2_51 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Float", span="122-122"];
m2_53 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.String", span="124-124"];
m2_57 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Boolean", span="128-128"];
m2_59 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Date", span="130-130"];
m2_61 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="throw new ArgumentOutOfRangeException();", span="133-133"];
m2_50 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (long);", span="121-121"];
m2_62 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", span="116-116"];
m2_52 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (double);", span="123-123"];
m2_54 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Null", span="125-125"];
m2_55 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="JsonToken.Undefined", span="126-126"];
m2_56 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (string);", span="127-127"];
m2_58 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (bool);", span="129-129"];
m2_60 [cluster="Newtonsoft.Json.Converters.DataTableConverter.GetColumnDataType(Newtonsoft.Json.JsonToken)", file="DataTableConverter.cs", label="return typeof (DateTime);", span="131-131"];
m2_63 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", file="DataTableConverter.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException()", span="0-0"];
m2_64 [cluster="Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", span="144-144"];
m2_65 [cluster="Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", file="DataTableConverter.cs", label="return (valueType == typeof(DataTable));", span="146-146"];
m2_66 [cluster="Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Converters.DataTableConverter.CanConvert(System.Type)", span="144-144"];
m2_17 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="70-70"];
m2_18 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="DataTable dt", span="72-72"];
m2_19 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.TokenType == JsonToken.PropertyName", span="74-74"];
m2_20 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dt = new DataTable((string)reader.Value)", span="76-76"];
m2_21 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="77-77"];
m2_23 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="84-84"];
m2_24 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.TokenType == JsonToken.StartObject", span="86-86"];
m2_26 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="89-89"];
m2_27 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.TokenType == JsonToken.PropertyName", span="91-91"];
m2_28 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="string columnName = (string) reader.Value", span="93-93"];
m2_29 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="95-95"];
m2_31 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Type columnType = GetColumnDataType(reader.TokenType)", span="99-99"];
m2_33 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dr[columnName] = reader.Value ?? DBNull.Value", span="103-103"];
m2_34 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="104-104"];
m2_37 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="reader.Read()", span="110-110"];
m2_22 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dt = new DataTable()", span="81-81"];
m2_25 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="DataRow dr = dt.NewRow()", span="88-88"];
m2_30 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="!dt.Columns.Contains(columnName)", span="97-97"];
m2_32 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dt.Columns.Add(new DataColumn(columnName, columnType))", span="100-100"];
m2_36 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dt.Rows.Add(dr)", span="108-108"];
m2_38 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="return dt;", span="113-113"];
m2_41 [cluster="Newtonsoft.Json.JsonReader.Read()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="217-217"];
m2_35 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="dr.EndEdit()", span="107-107"];
m2_39 [cluster="Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Converters.DataTableConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="70-70"];
m2_0 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="42-42"];
m2_1 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="DataTable table = (DataTable)value", span="44-44"];
m2_2 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="writer.WriteStartArray()", span="46-46"];
m2_4 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="writer.WriteStartObject()", span="50-50"];
m2_7 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="serializer.Serialize(writer, row[column])", span="54-54"];
m2_8 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="writer.WriteEndObject()", span="56-56"];
m2_9 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="writer.WriteEndArray()", span="59-59"];
m2_3 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="table.Rows", span="48-48"];
m2_11 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256"];
m2_5 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="row.Table.Columns", span="51-51"];
m2_12 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239"];
m2_15 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248"];
m2_16 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="DataTableConverter.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265"];
m2_10 [cluster="Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", file="DataTableConverter.cs", label="Exit Newtonsoft.Json.Converters.DataTableConverter.WriteJson(Newtonsoft.Json.JsonWriter, object, Newtonsoft.Json.JsonSerializer)", span="42-42"];
m3_0 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="50-50"];
m3_1 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="_resolverType = resolverType", span="52-52"];
m3_2 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="_contractType = contractType", span="53-53"];
m3_3 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.ResolverContractKey(System.Type, System.Type)", span="50-50"];
m3_53 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="211-211"];
m3_54 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(objectType)", span="214-214"];
m3_55 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> defaultMembers = ReflectionUtils.GetFieldsAndProperties(objectType, DefaultMembersSearchFlags)\r\n        .Where(\\nm => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="217-218"];
m3_56 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> allMembers = ReflectionUtils.GetFieldsAndProperties(objectType, BindingFlags.Public | BindingFlags.NonPublic | \\nBindingFlags.Instance | BindingFlags.Static)\r\n        .Where(m => !ReflectionUtils.IsIndexedProperty(m)).ToList()", span="219-220"];
m3_67 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="objectType.AssignableToTypeName(''System.Data.Objects.DataClasses.EntityObject'', out match)", span="249-249"];
m3_64 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="dataContractAttribute != null && JsonTypeReflector.GetAttribute<DataMemberAttribute>(member) != null", span="239-239"];
m3_71 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataContractAttribute(System.Type)", span="96-96"];
m3_60 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="defaultMembers.Contains(member)", span="228-228"];
m3_72 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetFieldsAndProperties(System.Type, System.Reflection.BindingFlags)", span="664-664"];
m3_81 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="218-218"];
m3_57 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="List<MemberInfo> serializableMembers = new List<MemberInfo>()", span="222-222"];
m3_58 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label=allMembers, span="223-223"];
m3_85 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="220-220"];
m3_61 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="231-231"];
m3_63 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="237-237"];
m3_65 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers.Add(member)", span="240-240"];
m3_68 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="serializableMembers = serializableMembers.Where(ShouldSerializeEntityMember).ToList()", span="250-250"];
m3_69 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="return serializableMembers;", span="253-253"];
m3_75 [cluster="System.Collections.Generic.List<T>.List()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_59 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="SerializeCompilerGeneratedMembers || !member.IsDefined(typeof(CompilerGeneratedAttribute), true)", span="226-226"];
m3_62 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(member) != null", span="236-236"];
m3_66 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="Type match", span="247-247"];
m3_76 [cluster="System.Reflection.MemberInfo.IsDefined(System.Type, bool)", file="DefaultContractResolver.cs", label="Entry System.Reflection.MemberInfo.IsDefined(System.Type, bool)", span="0-0"];
m3_77 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m3_78 [cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_79 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetAttribute<T>(System.Reflection.ICustomAttributeProvider)", span="314-314"];
m3_80 [cluster="System.Type.AssignableToTypeName(string, out System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.AssignableToTypeName(string, out System.Type)", span="293-293"];
m3_70 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetSerializableMembers(System.Type)", span="211-211"];
m3_248 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", span="692-692"];
m3_343 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="!method.IsDefined(attributeType, false)", span="694-694"];
m3_345 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="currentCallback != null", span="697-697"];
m3_346 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new Exception(''Invalid attribute. Both '{0}' and '{1}' in type '{2}' have '{3}'.''.FormatWith(CultureInfo.InvariantCulture, \\nmethod, currentCallback, GetClrTypeFullName(method.DeclaringType), attributeType));", span="698-698"];
m3_347 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="prevAttributeType != null", span="700-700"];
m3_348 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new Exception(''Invalid Callback. Method '{3}' in type '{2}' has both '{0}' and '{1}'.''.FormatWith(CultureInfo.InvariantCulture, \\nprevAttributeType, attributeType, GetClrTypeFullName(method.DeclaringType), method));", span="701-701"];
m3_349 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="method.IsVirtual", span="703-703"];
m3_350 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new Exception(''Virtual Method '{0}' of type '{1}' cannot be marked with '{2}' attribute.''.FormatWith(CultureInfo.InvariantCulture, \\nmethod, GetClrTypeFullName(method.DeclaringType), attributeType));", span="704-704"];
m3_351 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="method.ReturnType != typeof(void)", span="706-706"];
m3_352 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must return void.''.FormatWith(CultureInfo.InvariantCulture, GetClrTypeFullName(\\nmethod.DeclaringType), method));", span="707-707"];
m3_353 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="attributeType == typeof(OnErrorAttribute)", span="709-709"];
m3_354 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="parameters == null || parameters.Length != 2 || parameters[0].ParameterType != typeof(StreamingContext) || parameters[1].ParameterType != \\ntypeof(ErrorContext)", span="711-711"];
m3_355 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new Exception(''Serialization Error Callback '{1}' in type '{0}' must have two parameters of type '{2}' and '{3}'.''.FormatWith(\\nCultureInfo.InvariantCulture, GetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext), typeof(ErrorContext)));", span="712-712"];
m3_356 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="parameters == null || parameters.Length != 1 || parameters[0].ParameterType != typeof(StreamingContext)", span="716-716"];
m3_357 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="throw new Exception(''Serialization Callback '{1}' in type '{0}' must have a single parameter of type '{2}'.''.FormatWith(CultureInfo.InvariantCulture, \\nGetClrTypeFullName(method.DeclaringType), method, typeof(StreamingContext)));", span="717-717"];
m3_358 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="prevAttributeType = attributeType", span="720-720"];
m3_344 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="return false;", span="695-695"];
m3_360 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", span="692-692"];
m3_133 [cluster="System.Exception.Exception(string)", file="DefaultContractResolver.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m3_361 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="725-725"];
m3_362 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="DefaultContractResolver.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m3_359 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.IsValidCallback(System.Reflection.MethodInfo, System.Reflection.ParameterInfo[], \\nSystem.Type, System.Reflection.MethodInfo, ref System.Type)", file="DefaultContractResolver.cs", label="return true;", span="722-722"];
m3_256 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="532-532"];
m3_257 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="JsonArrayContract contract = new JsonArrayContract(objectType)", span="534-534"];
m3_258 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="535-535"];
m3_259 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="537-537"];
m3_261 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="50-50"];
m3_114 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="412-412"];
m3_260 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateArrayContract(System.Type)", span="532-532"];
m3_96 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="275-275"];
m3_97 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="JsonObjectContract contract = new JsonObjectContract(objectType)", span="277-277"];
m3_99 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.MemberSerialization = JsonTypeReflector.GetObjectMemberSerialization(objectType)", span="280-280"];
m3_101 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic).Any(c => c.IsDefined(typeof(JsonConstructorAttribute), \\ntrue))", span="284-284"];
m3_102 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo constructor = GetAttributeConstructor(objectType)", span="286-286"];
m3_107 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo constructor = GetParametrizedConstructor(objectType)", span="295-295"];
m3_98 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="278-278"];
m3_100 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.Properties.AddRange(CreateProperties(contract.UnderlyingType, contract.MemberSerialization))", span="281-281"];
m3_104 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.OverrideConstructor = constructor", span="289-289"];
m3_105 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ConstructorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="290-290"];
m3_106 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.DefaultCreator == null || contract.DefaultCreatorNonPublic", span="293-293"];
m3_109 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ParametrizedConstructor = constructor", span="298-298"];
m3_110 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ConstructorParameters.AddRange(CreateConstructorParameters(constructor, contract.Properties))", span="299-299"];
m3_111 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="302-302"];
m3_113 [cluster="Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonObjectContract.JsonObjectContract(System.Type)", span="70-70"];
m3_115 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetObjectMemberSerialization(System.Type)", span="142-142"];
m3_117 [cluster="System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.IList<T>.AddRange<T>(System.Collections.Generic.IEnumerable<T>)", span="194-194"];
m3_116 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="739-739"];
m3_118 [cluster="System.Type.GetConstructors(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructors(System.Reflection.BindingFlags)", span="0-0"];
m3_123 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="284-284"];
m3_103 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="constructor != null", span="287-287"];
m3_120 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="305-305"];
m3_121 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="333-333"];
m3_108 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="constructor != null", span="296-296"];
m3_122 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", span="317-317"];
m3_112 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateObjectContract(System.Type)", span="275-275"];
m3_274 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="572-572"];
m3_275 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="JsonISerializableContract contract = new JsonISerializableContract(objectType)", span="574-574"];
m3_277 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="ConstructorInfo constructorInfo = objectType.GetConstructor(BindingFlags.Public | BindingFlags.NonPublic | BindingFlags.Instance, \\nnull, new[] { typeof(SerializationInfo), typeof(StreamingContext) }, null)", span="577-577"];
m3_276 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="575-575"];
m3_280 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="contract.ISerializableCreator = (args => methodCall(null, args))", span="582-582"];
m3_281 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="585-585"];
m3_283 [cluster="Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonISerializableContract.JsonISerializableContract(System.Type)", span="49-49"];
m3_284 [cluster="System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", file="DefaultContractResolver.cs", label="Entry System.Type.GetConstructor(System.Reflection.BindingFlags, System.Reflection.Binder, System.Type[], System.Reflection.ParameterModifier[])", span="0-0"];
m3_278 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="constructorInfo != null", span="578-578"];
m3_279 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="MethodCall<object, object> methodCall = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(constructorInfo)", span="580-580"];
m3_285 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", span="59-59"];
m3_287 [cluster="lambda expression", file="DefaultContractResolver.cs", label="methodCall(null, args)", span="582-582"];
m3_282 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateISerializableContract(System.Type)", span="572-572"];
m3_88 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="257-257"];
m3_89 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="PropertyInfo propertyInfo = memberInfo as PropertyInfo", span="259-259"];
m3_90 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="propertyInfo != null", span="260-260"];
m3_91 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="propertyInfo.PropertyType.IsGenericType && propertyInfo.PropertyType.GetGenericTypeDefinition().FullName == ''System.Data.Objects.DataClasses.EntityReference`\\n1''", span="262-262"];
m3_93 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return true;", span="266-266"];
m3_92 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return false;", span="263-263"];
m3_95 [cluster="System.Type.GetGenericTypeDefinition()", file="DefaultContractResolver.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m3_94 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ShouldSerializeEntityMember(System.Reflection.MemberInfo)", span="257-257"];
m3_185 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="404-404"];
m3_186 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs", label="return JsonTypeReflector.ReflectionDelegateFactory.CreateDefaultConstructor<object>(createdType);", span="406-406"];
m3_187 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetDefaultCreator(System.Type)", span="404-404"];
m3_188 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateDefaultConstructor<T>(System.Type)", span="60-60"];
m3_298 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="612-612"];
m3_299 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="JsonStringContract contract = new JsonStringContract(objectType)", span="614-614"];
m3_300 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="615-615"];
m3_301 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="617-617"];
m3_303 [cluster="Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonStringContract.JsonStringContract(System.Type)", span="41-41"];
m3_302 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateStringContract(System.Type)", span="612-612"];
m3_189 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="JsonContainerAttribute containerAttribute = JsonTypeReflector.GetJsonContainerAttribute(contract.UnderlyingType)", span="414-414"];
m3_191 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.IsReference = containerAttribute._isReference", span="417-417"];
m3_192 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(contract.UnderlyingType)", span="422-422"];
m3_194 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.IsReference = true", span="425-425"];
m3_195 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.Converter = ResolveContractConverter(contract.UnderlyingType)", span="429-429"];
m3_196 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.InternalConverter = JsonSerializer.GetMatchingConverter(BuiltInConverters, contract.UnderlyingType)", span="432-432"];
m3_197 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="ReflectionUtils.HasDefaultConstructor(contract.CreatedType, true)\r\n        || contract.CreatedType.IsValueType", span="434-435"];
m3_198 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.DefaultCreator = GetDefaultCreator(contract.CreatedType)", span="437-437"];
m3_199 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="contract.DefaultCreatorNonPublic = (!contract.CreatedType.IsValueType &&\r\n                                            ReflectionUtils.GetDefaultConstructor(\\ncontract.CreatedType) == null)", span="439-440"];
m3_200 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="ResolveCallbackMethods(contract, contract.UnderlyingType)", span="443-443"];
m3_190 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="containerAttribute != null", span="415-415"];
m3_202 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonContainerAttribute(System.Type)", span="80-80"];
m3_193 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="dataContractAttribute != null && dataContractAttribute.IsReference", span="424-424"];
m3_181 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="399-399"];
m3_203 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Collections.Generic.IList<Newtonsoft.Json.JsonConverter>, System.Type)", span="458-458"];
m3_204 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.HasDefaultConstructor(System.Type, bool)", span="155-155"];
m3_205 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetDefaultConstructor(System.Type)", span="165-165"];
m3_201 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.InitializeContract(Newtonsoft.Json.Serialization.JsonContract)", span="412-412"];
m3_206 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="446-446"];
m3_4 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="56-56"];
m3_5 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DefaultContractResolver.cs", label="return _resolverType.GetHashCode() ^ _contractType.GetHashCode();", span="58-58"];
m3_6 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.GetHashCode()", span="56-56"];
m3_7 [cluster="System.Type.GetHashCode()", file="DefaultContractResolver.cs", label="Entry System.Type.GetHashCode()", span="0-0"];
m3_137 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="IList<ConstructorInfo> constructors = objectType.GetConstructors(BindingFlags.Public | BindingFlags.Instance)", span="319-319"];
m3_138 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="constructors.Count == 1", span="321-321"];
m3_139 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="return constructors[0];", span="322-322"];
m3_140 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="return null;", span="324-324"];
m3_141 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetParametrizedConstructor(System.Type)", span="317-317"];
m3_8 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="61-61"];
m3_9 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="!(obj is ResolverContractKey)", span="63-63"];
m3_11 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="return Equals((ResolverContractKey)obj);", span="66-66"];
m3_10 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="return false;", span="64-64"];
m3_12 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(object)", span="61-61"];
m3_13 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="69-69"];
m3_207 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="t.BaseType != null", span="448-448"];
m3_208 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="ResolveCallbackMethods(contract, t.BaseType)", span="449-449"];
m3_214 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="GetCallbackMethodsForType(t, out onSerializing, out onSerialized, out onDeserializing, out onDeserialized, out onError)", span="457-457"];
m3_216 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnSerializing = onSerializing", span="460-460"];
m3_218 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnSerialized = onSerialized", span="462-462"];
m3_220 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnDeserializing = onDeserializing", span="464-464"];
m3_222 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnDeserialized = onDeserialized", span="466-466"];
m3_224 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="contract.OnError = onError", span="468-468"];
m3_209 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="MethodInfo onSerializing", span="451-451"];
m3_210 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="MethodInfo onSerialized", span="452-452"];
m3_211 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="MethodInfo onDeserializing", span="453-453"];
m3_212 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="MethodInfo onDeserialized", span="454-454"];
m3_213 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="MethodInfo onError", span="455-455"];
m3_215 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onSerializing != null", span="459-459"];
m3_217 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onSerialized != null", span="461-461"];
m3_219 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onDeserializing != null", span="463-463"];
m3_221 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onDeserialized != null", span="465-465"];
m3_223 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="onError != null", span="467-467"];
m3_226 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, \\nout System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", span="471-471"];
m3_225 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveCallbackMethods(Newtonsoft.Json.Serialization.JsonContract, System.Type)", span="446-446"];
m3_22 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="156-156"];
m3_23 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label=_sharedCache, span="158-158"];
m3_24 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label="return _sharedContractCache;", span="159-159"];
m3_25 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label="return _instanceContractCache;", span="161-161"];
m3_26 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCache()", span="156-156"];
m3_262 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="545-545"];
m3_263 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="JsonPrimitiveContract contract = new JsonPrimitiveContract(objectType)", span="547-547"];
m3_267 [cluster="Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPrimitiveContract.JsonPrimitiveContract(System.Type)", span="38-38"];
m3_264 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="548-548"];
m3_265 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="550-550"];
m3_266 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePrimitiveContract(System.Type)", span="545-545"];
m3_227 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onSerializing = null", span="473-473"];
m3_232 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="type.GetMethods(BindingFlags.NonPublic | BindingFlags.Public | BindingFlags.Instance | BindingFlags.DeclaredOnly)", span="479-479"];
m3_228 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onSerialized = null", span="474-474"];
m3_236 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnSerializingAttribute), onSerializing, ref prevAttributeType)", span="489-489"];
m3_246 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, \\nout System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", span="471-471"];
m3_229 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onDeserializing = null", span="475-475"];
m3_238 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnSerializedAttribute), onSerialized, ref prevAttributeType)", span="493-493"];
m3_230 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onDeserialized = null", span="476-476"];
m3_240 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnDeserializingAttribute), onDeserializing, ref prevAttributeType)", span="497-497"];
m3_231 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onError = null", span="477-477"];
m3_242 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnDeserializedAttribute), onDeserialized, ref prevAttributeType)", span="501-501"];
m3_244 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="IsValidCallback(method, parameters, typeof(OnErrorAttribute), onError, ref prevAttributeType)", span="505-505"];
m3_233 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="method.ContainsGenericParameters", span="483-483"];
m3_235 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="ParameterInfo[] parameters = method.GetParameters()", span="487-487"];
m3_237 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onSerializing = method", span="491-491"];
m3_239 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onSerialized = method", span="495-495"];
m3_241 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onDeserializing = method", span="499-499"];
m3_243 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onDeserialized = method", span="503-503"];
m3_245 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="onError = method", span="507-507"];
m3_247 [cluster="System.Type.GetMethods(System.Reflection.BindingFlags)", file="DefaultContractResolver.cs", label="Entry System.Type.GetMethods(System.Reflection.BindingFlags)", span="0-0"];
m3_234 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetCallbackMethodsForType(System.Type, out System.Reflection.MethodInfo, out \\nSystem.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo, out System.Reflection.MethodInfo)", file="DefaultContractResolver.cs", label="Type prevAttributeType = null", span="486-486"];
m3_153 [cluster="System.Reflection.MethodBase.GetParameters()", file="DefaultContractResolver.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m3_249 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="517-517"];
m3_250 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="JsonDictionaryContract contract = new JsonDictionaryContract(objectType)", span="519-519"];
m3_251 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="520-520"];
m3_252 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="contract.PropertyNameResolver = ResolvePropertyName", span="522-522"];
m3_253 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="524-524"];
m3_255 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.JsonDictionaryContract(System.Type)", span="55-55"];
m3_254 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDictionaryContract(System.Type)", span="517-517"];
m3_142 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="var constructorParameters = constructor.GetParameters()", span="335-335"];
m3_143 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="JsonPropertyCollection parameterCollection = new JsonPropertyCollection(constructor.DeclaringType)", span="337-337"];
m3_145 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="JsonProperty matchingMemberProperty = memberProperties.GetClosestMatchProperty(parameterInfo.Name)", span="341-341"];
m3_144 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label=constructorParameters, span="339-339"];
m3_150 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="parameterCollection.AddProperty(property)", span="350-350"];
m3_151 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="return parameterCollection;", span="354-354"];
m3_154 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.JsonPropertyCollection(System.Type)", span="45-45"];
m3_146 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="matchingMemberProperty != null && matchingMemberProperty.PropertyType != parameterInfo.ParameterType", span="343-343"];
m3_148 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="JsonProperty property = CreatePropertyFromConstructorParameter(matchingMemberProperty, parameterInfo)", span="346-346"];
m3_155 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="93-93"];
m3_147 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="matchingMemberProperty = null", span="344-344"];
m3_149 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="property != null", span="348-348"];
m3_156 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", span="363-363"];
m3_157 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.AddProperty(Newtonsoft.Json.Serialization.JsonProperty)", span="65-65"];
m3_152 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateConstructorParameters(System.Reflection.ConstructorInfo, Newtonsoft.Json.Serialization.JsonPropertyCollection)", span="333-333"];
m3_50 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="625-625"];
m3_304 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Type t = ReflectionUtils.EnsureNotNullableType(objectType)", span="627-627"];
m3_325 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.EnsureNotNullableType(System.Type)", span="197-197"];
m3_305 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="JsonConvert.IsJsonPrimitiveType(t)", span="629-629"];
m3_306 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreatePrimitiveContract(t);", span="630-630"];
m3_307 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetJsonObjectAttribute(t) != null", span="632-632"];
m3_308 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateObjectContract(t);", span="633-633"];
m3_309 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="JsonTypeReflector.GetJsonArrayAttribute(t) != null", span="635-635"];
m3_310 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateArrayContract(t);", span="636-636"];
m3_311 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="t == typeof(JToken) || t.IsSubclassOf(typeof(JToken))", span="638-638"];
m3_312 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateLinqContract(t);", span="639-639"];
m3_313 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="CollectionUtils.IsDictionaryType(t)", span="641-641"];
m3_314 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDictionaryContract(t);", span="642-642"];
m3_315 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="typeof(IEnumerable).IsAssignableFrom(t)", span="644-644"];
m3_316 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateArrayContract(t);", span="645-645"];
m3_317 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="CanConvertToString(t)", span="647-647"];
m3_318 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateStringContract(t);", span="648-648"];
m3_319 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="typeof(ISerializable).IsAssignableFrom(t)", span="651-651"];
m3_320 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateISerializableContract(t);", span="652-652"];
m3_321 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="typeof(IDynamicMetaObjectProvider).IsAssignableFrom(t)", span="656-656"];
m3_322 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateDynamicContract(t);", span="657-657"];
m3_323 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="return CreateObjectContract(t);", span="660-660"];
m3_326 [cluster="Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonConvert.IsJsonPrimitiveType(System.Type)", span="484-484"];
m3_324 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateContract(System.Type)", span="625-625"];
m3_327 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonObjectAttribute(System.Type)", span="85-85"];
m3_328 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonArrayAttribute(System.Type)", span="90-90"];
m3_329 [cluster="System.Type.IsSubclassOf(System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.IsSubclassOf(System.Type)", span="0-0"];
m3_268 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="558-558"];
m3_330 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.IsDictionaryType(System.Type)", span="379-379"];
m3_331 [cluster="System.Type.IsAssignableFrom(System.Type)", file="DefaultContractResolver.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m3_332 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="663-663"];
m3_290 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="595-595"];
m3_32 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="177-177"];
m3_33 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="type == null", span="179-179"];
m3_36 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="ResolverContractKey key = new ResolverContractKey(GetType(), type)", span="183-183"];
m3_39 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="contract = CreateContract(type)", span="187-187"];
m3_34 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="throw new ArgumentNullException(''type'');", span="180-180"];
m3_35 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="JsonContract contract", span="182-182"];
m3_46 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", span="177-177"];
m3_47 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DefaultContractResolver.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m3_48 [cluster="object.GetType()", file="DefaultContractResolver.cs", label="Entry object.GetType()", span="0-0"];
m3_37 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Dictionary<ResolverContractKey, JsonContract> cache = GetCache()", span="184-184"];
m3_38 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="cache == null || !cache.TryGetValue(key, out contract)", span="185-185"];
m3_43 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="updatedCache[key] = contract", span="197-197"];
m3_45 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="203-203"];
m3_49 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)", span="0-0"];
m3_40 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label=_typeContractCacheLock, span="190-190"];
m3_41 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="cache = GetCache()", span="192-192"];
m3_42 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="Dictionary<ResolverContractKey, JsonContract> updatedCache =\r\n            (cache != null)\r\n              ? new Dictionary<ResolverContractKey, \\nJsonContract>(cache)\r\n              : new Dictionary<ResolverContractKey, JsonContract>()", span="193-196"];
m3_52 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_51 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="DefaultContractResolver.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m3_44 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContract(System.Type)", file="DefaultContractResolver.cs", label="UpdateCache(updatedCache)", span="199-199"];
m3_27 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, \\nNewtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, \\nNewtonsoft.Json.Serialization.JsonContract>)", span="164-164"];
m3_403 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", span="891-891"];
m3_459 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MemberInfo specifiedMember = member.DeclaringType.GetProperty(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="893-893"];
m3_461 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="specifiedMember = member.DeclaringType.GetField(member.Name + JsonTypeReflector.SpecifiedPostfix)", span="895-895"];
m3_465 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="property.GetIsSpecified = o => (bool)specifiedPropertyGet(o)", span="904-904"];
m3_466 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="property.SetIsSpecified = JsonTypeReflector.ReflectionDelegateFactory.CreateSet<object>(specifiedMember)", span="905-905"];
m3_468 [cluster="System.Type.GetProperty(string)", file="DefaultContractResolver.cs", label="Entry System.Type.GetProperty(string)", span="0-0"];
m3_460 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="specifiedMember == null", span="894-894"];
m3_462 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="specifiedMember == null || ReflectionUtils.GetMemberUnderlyingType(specifiedMember) != typeof(bool)", span="897-897"];
m3_464 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Func<object, object> specifiedPropertyGet = JsonTypeReflector.ReflectionDelegateFactory.CreateGet<object>(specifiedMember)", span="902-902"];
m3_469 [cluster="System.Type.GetField(string)", file="DefaultContractResolver.cs", label="Entry System.Type.GetField(string)", span="0-0"];
m3_463 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return;", span="899-899"];
m3_399 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetMemberUnderlyingType(System.Reflection.MemberInfo)", span="487-487"];
m3_467 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetIsSpecifiedActions(Newtonsoft.Json.Serialization.JsonProperty, System.Reflection.MemberInfo)", span="891-891"];
m3_470 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateGet<T>(System.Reflection.MemberInfo)", span="33-33"];
m3_473 [cluster="lambda expression", file="DefaultContractResolver.cs", label="(bool)specifiedPropertyGet(o)", span="904-904"];
m3_471 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateSet<T>(System.Reflection.MemberInfo)", span="46-46"];
m3_379 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="779-779"];
m3_387 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonProperty property = new JsonProperty()", span="781-781"];
m3_388 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.PropertyType = ReflectionUtils.GetMemberUnderlyingType(member)", span="782-782"];
m3_389 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.ValueProvider = CreateMemberValueProvider(member)", span="783-783"];
m3_392 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="SetPropertySettingsFromAttributes(property, member, member.Name, member.DeclaringType, memberSerialization, out allowNonPublicAccess, \\nout hasExplicitAttribute)", span="787-787"];
m3_393 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Readable = ReflectionUtils.CanReadMemberValue(member, allowNonPublicAccess)", span="789-789"];
m3_394 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.Writable = ReflectionUtils.CanSetMemberValue(member, allowNonPublicAccess, hasExplicitAttribute)", span="790-790"];
m3_395 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property.ShouldSerialize = CreateShouldSerializeTest(member)", span="791-791"];
m3_396 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="SetIsSpecifiedActions(property, member)", span="793-793"];
m3_397 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="return property;", span="795-795"];
m3_179 [cluster="Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonProperty.JsonProperty()", span="32-32"];
m3_390 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="bool allowNonPublicAccess", span="785-785"];
m3_380 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="763-763"];
m3_391 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="bool hasExplicitAttribute", span="786-786"];
m3_180 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", span="798-798"];
m3_400 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanReadMemberValue(System.Reflection.MemberInfo, bool)", span="598-598"];
m3_401 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.CanSetMemberValue(System.Reflection.MemberInfo, bool, bool)", span="632-632"];
m3_402 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="878-878"];
m3_398 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperty(System.Reflection.MemberInfo, Newtonsoft.Json.MemberSerialization)", span="779-779"];
m3_381 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label=DynamicCodeGeneration, span="766-766"];
m3_382 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return new DynamicValueProvider(member);", span="767-767"];
m3_383 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return new ReflectionValueProvider(member);", span="770-770"];
m3_385 [cluster="Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DynamicValueProvider.DynamicValueProvider(System.Reflection.MemberInfo)", span="49-49"];
m3_384 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateMemberValueProvider(System.Reflection.MemberInfo)", span="763-763"];
m3_386 [cluster="Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.ReflectionValueProvider.ReflectionValueProvider(System.Reflection.MemberInfo)", span="46-46"];
m3_291 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="JsonDynamicContract contract = new JsonDynamicContract(objectType)", span="597-597"];
m3_294 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="contract.Properties.AddRange(CreateProperties(objectType, MemberSerialization.OptOut))", span="601-601"];
m3_297 [cluster="Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonDynamicContract.JsonDynamicContract(System.Type)", span="55-55"];
m3_292 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="598-598"];
m3_293 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="contract.PropertyNameResolver = ResolvePropertyName", span="600-600"];
m3_295 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="603-603"];
m3_296 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateDynamicContract(System.Type)", span="595-595"];
m3_182 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="return JsonTypeReflector.GetJsonConverter(objectType, objectType);", span="401-401"];
m3_184 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetJsonConverter(System.Reflection.ICustomAttributeProvider, System.Type)", span="174-174"];
m3_183 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.ResolveContractConverter(System.Type)", span="399-399"];
m3_333 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="TypeConverter converter = ConvertUtils.GetConverter(type)", span="666-666"];
m3_337 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="type == typeof(Type) || type.IsSubclassOf(typeof(Type))", span="681-681"];
m3_341 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.GetConverter(System.Type)", span="490-490"];
m3_334 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="converter != null\r\n#if !SILVERLIGHT\r\n && !(converter is ComponentConverter)\r\n && !(converter is ReferenceConverter)\r\n#endif\r\n && \\nconverter.GetType() != typeof(TypeConverter)", span="669-674"];
m3_335 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="converter.CanConvertTo(typeof(string))", span="676-676"];
m3_342 [cluster="System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", file="DefaultContractResolver.cs", label="Entry System.ComponentModel.TypeConverter.CanConvertTo(System.Type)", span="0-0"];
m3_336 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="return true;", span="677-677"];
m3_340 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", span="663-663"];
m3_338 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="return true;", span="682-682"];
m3_339 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CanConvertToString(System.Type)", file="DefaultContractResolver.cs", label="return false;", span="689-689"];
m3_28 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, \\nNewtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label=_sharedCache, span="166-166"];
m3_29 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, \\nNewtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label="_sharedContractCache = cache", span="167-167"];
m3_30 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, \\nNewtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label="_instanceContractCache = cache", span="169-169"];
m3_31 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, \\nNewtonsoft.Json.Serialization.JsonContract>)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.UpdateCache(System.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.ResolverContractKey, \\nNewtonsoft.Json.Serialization.JsonContract>)", span="164-164"];
m3_269 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="JsonLinqContract contract = new JsonLinqContract(objectType)", span="560-560"];
m3_273 [cluster="Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonLinqContract.JsonLinqContract(System.Type)", span="16-16"];
m3_270 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="InitializeContract(contract)", span="561-561"];
m3_271 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="return contract;", span="563-563"];
m3_272 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateLinqContract(System.Type)", span="558-558"];
m3_16 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="136-136"];
m3_17 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver()", span="136-136"];
m3_404 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="hasExplicitAttribute = false", span="800-800"];
m3_405 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="DataContractAttribute dataContractAttribute = JsonTypeReflector.GetDataContractAttribute(declaringType)", span="803-803"];
m3_407 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="dataContractAttribute != null && attributeProvider is MemberInfo", span="806-806"];
m3_408 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute = JsonTypeReflector.GetDataMemberAttribute((MemberInfo)attributeProvider)", span="807-807"];
m3_410 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="JsonPropertyAttribute propertyAttribute = JsonTypeReflector.GetAttribute<JsonPropertyAttribute>(attributeProvider)", span="812-812"];
m3_413 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="bool hasIgnoreAttribute = (JsonTypeReflector.GetAttribute<JsonIgnoreAttribute>(attributeProvider) != null)", span="816-816"];
m3_419 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="mappedName = name", span="826-826"];
m3_420 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.PropertyName = ResolvePropertyName(mappedName)", span="828-828"];
m3_421 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.UnderlyingName = name", span="829-829"];
m3_423 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.Required = propertyAttribute.Required", span="832-832"];
m3_425 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.Required = (dataMemberAttribute.IsRequired) ? Required.AllowNull : Required.Default", span="835-835"];
m3_426 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.Required = Required.Default", span="838-838"];
m3_427 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.Ignored = (hasIgnoreAttribute ||\r\n                      (memberSerialization == MemberSerialization.OptIn\r\n                       && \\npropertyAttribute == null\r\n#if !PocketPC && !NET20\r\n && dataMemberAttribute == null\r\n#endif\r\n))", span="840-846"];
m3_428 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.Converter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="850-850"];
m3_429 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.MemberConverter = JsonTypeReflector.GetJsonConverter(attributeProvider, property.PropertyType)", span="851-851"];
m3_430 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="DefaultValueAttribute defaultValueAttribute = JsonTypeReflector.GetAttribute<DefaultValueAttribute>(attributeProvider)", span="853-853"];
m3_431 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.DefaultValue = (defaultValueAttribute != null) ? defaultValueAttribute.Value : null", span="854-854"];
m3_432 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.NullValueHandling = (propertyAttribute != null) ? propertyAttribute._nullValueHandling : null", span="856-856"];
m3_433 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.DefaultValueHandling = (propertyAttribute != null) ? propertyAttribute._defaultValueHandling : null", span="857-857"];
m3_434 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.ReferenceLoopHandling = (propertyAttribute != null) ? propertyAttribute._referenceLoopHandling : null", span="858-858"];
m3_435 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.ObjectCreationHandling = (propertyAttribute != null) ? propertyAttribute._objectCreationHandling : null", span="859-859"];
m3_436 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.TypeNameHandling = (propertyAttribute != null) ? propertyAttribute._typeNameHandling : null", span="860-860"];
m3_437 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="property.IsReference = (propertyAttribute != null) ? propertyAttribute._isReference : null", span="861-861"];
m3_446 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", span="798-798"];
m3_406 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="DataMemberAttribute dataMemberAttribute", span="805-805"];
m3_409 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute = null", span="809-809"];
m3_417 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute != null && dataMemberAttribute.Name != null", span="822-822"];
m3_418 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="mappedName = dataMemberAttribute.Name", span="823-823"];
m3_424 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute != null", span="834-834"];
m3_443 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="dataMemberAttribute != null", span="870-870"];
m3_447 [cluster="Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.JsonTypeReflector.GetDataMemberAttribute(System.Reflection.MemberInfo)", span="110-110"];
m3_411 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute != null", span="813-813"];
m3_415 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute != null && propertyAttribute.PropertyName != null", span="819-819"];
m3_416 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="mappedName = propertyAttribute.PropertyName", span="820-820"];
m3_422 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute != null", span="831-831"];
m3_441 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="propertyAttribute != null", span="866-866"];
m3_412 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="hasExplicitAttribute = true", span="814-814"];
m3_414 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="string mappedName", span="818-818"];
m3_438 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = false", span="863-863"];
m3_439 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="(DefaultMembersSearchFlags & BindingFlags.NonPublic) == BindingFlags.NonPublic", span="864-864"];
m3_440 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="865-865"];
m3_442 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="867-867"];
m3_444 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="allowNonPublicAccess = true", span="872-872"];
m3_445 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.SetPropertySettingsFromAttributes(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ICustomAttributeProvider, string, System.Type, Newtonsoft.Json.MemberSerialization, out bool, out bool)", file="DefaultContractResolver.cs", label="hasExplicitAttribute = true", span="873-873"];
m3_476 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.ResolvePropertyName(string)", file="DefaultContractResolver.cs", label="return propertyName;", span="915-915"];
m3_18 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="150-150"];
m3_19 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="DefaultMembersSearchFlags = BindingFlags.Public | BindingFlags.Instance", span="152-152"];
m3_20 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="_sharedCache = shareCache", span="153-153"];
m3_21 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.DefaultContractResolver(bool)", span="150-150"];
m3_14 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DefaultContractResolver.cs", label="return (_resolverType == other._resolverType && _contractType == other._contractType);", span="71-71"];
m3_15 [cluster="Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.ResolverContractKey.Equals(Newtonsoft.Json.Serialization.ResolverContractKey)", span="69-69"];
m3_363 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="type.IsGenericTypeDefinition || !type.ContainsGenericParameters", span="727-727"];
m3_364 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="return type.FullName;", span="728-728"];
m3_365 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="return string.Format(CultureInfo.InvariantCulture, ''{0}.{1}'', new object[] { type.Namespace, type.Name });", span="730-730"];
m3_366 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetClrTypeFullName(System.Type)", span="725-725"];
m3_367 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="DefaultContractResolver.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m3_126 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="IList<ConstructorInfo> markedConstructors = objectType.GetConstructors(BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic)\\n.Where(c => c.IsDefined(typeof(JsonConstructorAttribute), true)).ToList()", span="307-307"];
m3_127 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="markedConstructors.Count > 1", span="309-309"];
m3_129 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="markedConstructors.Count == 1", span="311-311"];
m3_130 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="return markedConstructors[0];", span="312-312"];
m3_134 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="307-307"];
m3_128 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="throw new Exception(''Multiple constructors with the JsonConstructorAttribute.'');", span="310-310"];
m3_132 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", span="305-305"];
m3_131 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.GetAttributeConstructor(System.Type)", file="DefaultContractResolver.cs", label="return null;", span="314-314"];
m3_368 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="List<MemberInfo> members = GetSerializableMembers(type)", span="741-741"];
m3_371 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonPropertyCollection properties = new JsonPropertyCollection(type)", span="745-745"];
m3_373 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="JsonProperty property = CreateProperty(member, memberSerialization)", span="749-749"];
m3_369 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="members == null", span="742-742"];
m3_372 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label=members, span="747-747"];
m3_370 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="throw new JsonSerializationException(''Null collection of seralizable members returned.'');", span="743-743"];
m3_378 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m3_377 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", span="739-739"];
m3_375 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="properties.AddProperty(property)", span="752-752"];
m3_374 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateProperties(System.Type, Newtonsoft.Json.MemberSerialization)", file="DefaultContractResolver.cs", label="property != null", span="751-751"];
m3_449 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodInfo shouldSerializeMethod = member.DeclaringType.GetMethod(JsonTypeReflector.ShouldSerializePrefix + member.Name, new Type[\\n0])", span="880-880"];
m3_455 [cluster="System.Type.GetMethod(string, System.Type[])", file="DefaultContractResolver.cs", label="Entry System.Type.GetMethod(string, System.Type[])", span="0-0"];
m3_450 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="shouldSerializeMethod == null || shouldSerializeMethod.ReturnType != typeof(bool)", span="882-882"];
m3_452 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="MethodCall<object, object> shouldSerializeCall =\r\n        JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(\\nshouldSerializeMethod)", span="885-886"];
m3_451 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return null;", span="883-883"];
m3_454 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", span="878-878"];
m3_453 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreateShouldSerializeTest(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="return o => (bool)shouldSerializeCall(o);", span="888-888"];
m3_457 [cluster="lambda expression", file="DefaultContractResolver.cs", label="(bool)shouldSerializeCall(o)", span="888-888"];
m3_158 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="JsonProperty property = new JsonProperty()", span="365-365"];
m3_159 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.PropertyType = parameterInfo.ParameterType", span="366-366"];
m3_162 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="SetPropertySettingsFromAttributes(property, parameterInfo, parameterInfo.Name, parameterInfo.Member.DeclaringType, MemberSerialization.OptOut, \\nout allowNonPublicAccess, out hasExplicitAttribute)", span="370-370"];
m3_165 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="matchingMemberProperty != null", span="376-376"];
m3_166 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.PropertyName = (property.PropertyName != parameterInfo.Name) ? property.PropertyName : matchingMemberProperty.PropertyName", span="378-378"];
m3_167 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Converter = property.Converter ?? matchingMemberProperty.Converter", span="379-379"];
m3_168 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.MemberConverter = property.MemberConverter ?? matchingMemberProperty.MemberConverter", span="380-380"];
m3_169 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.DefaultValue = property.DefaultValue ?? matchingMemberProperty.DefaultValue", span="381-381"];
m3_170 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Required = (property.Required != Required.Default) ? property.Required : matchingMemberProperty.Required", span="382-382"];
m3_171 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.IsReference = property.IsReference ?? matchingMemberProperty.IsReference", span="383-383"];
m3_172 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.NullValueHandling = property.NullValueHandling ?? matchingMemberProperty.NullValueHandling", span="384-384"];
m3_173 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.DefaultValueHandling = property.DefaultValueHandling ?? matchingMemberProperty.DefaultValueHandling", span="385-385"];
m3_174 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.ReferenceLoopHandling = property.ReferenceLoopHandling ?? matchingMemberProperty.ReferenceLoopHandling", span="386-386"];
m3_175 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.ObjectCreationHandling = property.ObjectCreationHandling ?? matchingMemberProperty.ObjectCreationHandling", span="387-387"];
m3_176 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.TypeNameHandling = property.TypeNameHandling ?? matchingMemberProperty.TypeNameHandling", span="388-388"];
m3_163 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Readable = false", span="372-372"];
m3_164 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="property.Writable = true", span="373-373"];
m3_177 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="return property;", span="391-391"];
m3_160 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="bool allowNonPublicAccess", span="368-368"];
m3_161 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="bool hasExplicitAttribute", span="369-369"];
m3_178 [cluster="Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", file="DefaultContractResolver.cs", label="Exit Newtonsoft.Json.Serialization.DefaultContractResolver.CreatePropertyFromConstructorParameter(Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Reflection.ParameterInfo)", span="363-363"];
m3_82 [cluster="lambda expression", file="DefaultContractResolver.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="218-218"];
m3_84 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsIndexedProperty(System.Reflection.MemberInfo)", span="511-511"];
m3_83 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="218-218"];
m3_86 [cluster="lambda expression", file="DefaultContractResolver.cs", label="!ReflectionUtils.IsIndexedProperty(m)", span="220-220"];
m3_87 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="220-220"];
m3_124 [cluster="lambda expression", file="DefaultContractResolver.cs", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="284-284"];
m3_125 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="284-284"];
m3_135 [cluster="lambda expression", file="DefaultContractResolver.cs", label="c.IsDefined(typeof(JsonConstructorAttribute), true)", span="307-307"];
m3_136 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="307-307"];
m3_286 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="582-582"];
m3_289 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="DefaultContractResolver.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
m3_288 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="582-582"];
m3_456 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="888-888"];
m3_458 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="888-888"];
m3_472 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Entry lambda expression", span="904-904"];
m3_475 [cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultContractResolver.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m3_474 [cluster="lambda expression", file="DefaultContractResolver.cs", label="Exit lambda expression", span="904-904"];
m4_0 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="50-50"];
m4_1 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs", label="ReflectionUtils.ImplementsGenericDefinition(underlyingType, typeof(ICollection<>), out _genericCollectionDefinitionType)", span="53-53"];
m4_3 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs", label="CollectionItemType = ReflectionUtils.GetCollectionItemType(UnderlyingType)", span="59-59"];
m4_5 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs", label="_isCollectionItemTypeNullableType = ReflectionUtils.IsNullableType(CollectionItemType)", span="63-63"];
m4_9 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.ImplementsGenericDefinition(System.Type, System.Type, out System.Type)", span="253-253"];
m4_2 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs", label="CollectionItemType = _genericCollectionDefinitionType.GetGenericArguments()[0]", span="55-55"];
m4_10 [cluster="System.Type.GetGenericArguments()", file="JsonArrayContract.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m4_4 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs", label="CollectionItemType != null", span="62-62"];
m4_11 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetCollectionItemType(System.Type)", span="371-371"];
m4_52 [cluster="System.Type.GetGenericTypeDefinition()", file="JsonArrayContract.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m4_6 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs", label="IsTypeGenericCollectionInterface(UnderlyingType)", span="65-65"];
m4_12 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="190-190"];
m4_7 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs", label="CreatedType = ReflectionUtils.MakeGenericType(typeof(List<>), CollectionItemType)", span="67-67"];
m4_8 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.JsonArrayContract(System.Type)", span="50-50"];
m4_13 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="116-116"];
m4_14 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.MakeGenericType(System.Type, params System.Type[])", span="760-760"];
m4_32 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", span="101-101"];
m4_38 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", file="JsonArrayContract.cs", label="_genericWrapperType == null", span="103-103"];
m4_39 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", file="JsonArrayContract.cs", label="_genericWrapperType = ReflectionUtils.MakeGenericType(typeof (CollectionWrapper<>), CollectionItemType)", span="105-105"];
m4_43 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", span="101-101"];
m4_44 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", color=green, community=0, file="JsonArrayContract.cs", label="Type constructorArgument", prediction=4, span="112-112"];
m4_41 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", file="JsonArrayContract.cs", label="ConstructorInfo genericWrapperConstructor = _genericWrapperType.GetConstructor(new[] { constructorArgument })", span="111-111"];
m4_42 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", file="JsonArrayContract.cs", label="_genericWrapperCreator = JsonTypeReflector.ReflectionDelegateFactory.CreateMethodCall<object>(genericWrapperConstructor)", span="112-112"];
m4_45 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", color=green, community=0, file="JsonArrayContract.cs", label="ReflectionUtils.InheritsGenericDefinition(_genericCollectionDefinitionType, typeof(List<>))\r\n          || _genericCollectionDefinitionType.GetGenericTypeDefinition() == \\ntypeof(IEnumerable<>)", prediction=5, span="114-115"];
m4_46 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", color=green, community=0, file="JsonArrayContract.cs", label="constructorArgument = ReflectionUtils.MakeGenericType(typeof(ICollection<>), CollectionItemType)", prediction=6, span="116-116"];
m4_53 [cluster="Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", color=green, community=0, file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionDelegateFactory.CreateMethodCall<T>(System.Reflection.MethodBase)", prediction=5, span="59-59"];
m4_47 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.EnsureGenericWrapperCreator()", color=green, community=0, file="JsonArrayContract.cs", label="constructorArgument = _genericCollectionDefinitionType", prediction=8, span="118-118"];
m4_48 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs", label="return false;", span="119-119"];
m4_49 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs", label="Type genericDefinition = type.GetGenericTypeDefinition()", span="121-121"];
m4_15 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="71-71"];
m4_16 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="(list is IList && (CollectionItemType == null || !_isCollectionItemTypeNullableType))\r\n        || UnderlyingType.IsArray", span="73-74"];
m4_17 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="return new CollectionWrapper<object>((IList)list);", span="75-75"];
m4_20 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="return (IWrappedCollection) _genericWrapperCreator(null, list);", span="80-80"];
m4_21 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="IList values = ((IEnumerable) list).Cast<object>().ToList()", span="84-84"];
m4_18 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="_genericCollectionDefinitionType != null", span="77-77"];
m4_30 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="71-71"];
m4_31 [cluster="Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Utilities.CollectionWrapper<T>.CollectionWrapper(System.Collections.IList)", span="46-46"];
m4_19 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="EnsureGenericWrapperCreator()", span="79-79"];
m4_33 [cluster="Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", file="JsonArrayContract.cs", label="Entry Newtonsoft.Json.Utilities.MethodCall<T, TResult>.Invoke(T, params object[])", span="27-27"];
m4_22 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="CollectionItemType != null", span="86-86"];
m4_23 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="Array array = Array.CreateInstance(CollectionItemType, values.Count)", span="88-88"];
m4_25 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="i < values.Count", span="89-89"];
m4_26 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="array.SetValue(values[i], i)", span="91-91"];
m4_29 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="return new CollectionWrapper<object>(values);", span="97-97"];
m4_34 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JsonArrayContract.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m4_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JsonArrayContract.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m4_24 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="int i = 0", span="89-89"];
m4_28 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="values = array", span="94-94"];
m4_36 [cluster="System.Array.CreateInstance(System.Type, int)", file="JsonArrayContract.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m4_27 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonArrayContract.cs", label="i++", span="89-89"];
m4_37 [cluster="System.Array.SetValue(object, int)", file="JsonArrayContract.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m4_51 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs", label="Exit Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", span="116-116"];
m4_50 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.IsTypeGenericCollectionInterface(System.Type)", file="JsonArrayContract.cs", label="return (genericDefinition == typeof(IList<>)\r\n              || genericDefinition == typeof(ICollection<>)\r\n              || \\ngenericDefinition == typeof(IEnumerable<>));", span="123-125"];
m5_0 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="JsonPropertyAttribute.cs", label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="96-96"];
m5_1 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", file="JsonPropertyAttribute.cs", label="Exit Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute()", span="96-96"];
m5_2 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="Entry Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="104-104"];
m5_3 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="PropertyName = propertyName", span="106-106"];
m5_4 [cluster="Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", file="JsonPropertyAttribute.cs", label="Exit Newtonsoft.Json.JsonPropertyAttribute.JsonPropertyAttribute(string)", span="104-104"];
m6_59 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueNonProperty(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueNonProperty(Newtonsoft.Json.JsonReader, System.Type, \\nNewtonsoft.Json.Serialization.JsonContract)", span="201-201"];
m6_113 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueNonProperty(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonConverter converter = GetConverter(contract, null)", span="203-203"];
m6_115 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueNonProperty(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return converter.ReadJson(reader, objectType, null, GetInternalSerializer());", span="206-206"];
m6_116 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueNonProperty(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return CreateValueInternal(reader, objectType, contract, null, null);", span="208-208"];
m6_114 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueNonProperty(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="converter != null && converter.CanRead", span="205-205"];
m6_109 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", span="268-268"];
m6_117 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueNonProperty(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueNonProperty(Newtonsoft.Json.JsonReader, System.Type, \\nNewtonsoft.Json.Serialization.JsonContract)", span="201-201"];
m6_111 [cluster="Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, object, Newtonsoft.Json.JsonSerializer)", span="54-54"];
m6_60 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="123-123"];
m6_112 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", span="211-211"];
m6_261 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="443-443"];
m6_262 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract == null", span="445-445"];
m6_263 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, \\nobjectType));", span="446-446"];
m6_264 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = contract as JsonArrayContract", span="448-448"];
m6_266 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Cannot deserialize JSON array into type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, \\nobjectType));", span="450-450"];
m6_268 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", span="443-443"];
m6_33 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonSerializerInternalReader.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m6_32 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string)", span="52-52"];
m6_265 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="arrayContract == null", span="449-449"];
m6_267 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureArrayContract(System.Type, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return arrayContract;", span="452-452"];
m6_34 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="455-455"];
m6_269 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="457-457"];
m6_270 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when deserializing object.'');", span="458-458"];
m6_271 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CheckedRead(Newtonsoft.Json.JsonReader)", span="455-455"];
m6_29 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="217-217"];
m6_50 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="112-112"];
m6_51 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader == null", span="114-114"];
m6_53 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.None && !ReadForType(reader, objectType, null)", span="117-117"];
m6_55 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="return CreateValueNonProperty(reader, objectType, GetContractSafe(objectType));", span="120-120"];
m6_52 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw new ArgumentNullException(''reader'');", span="115-115"];
m6_56 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", span="112-112"];
m6_57 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonSerializerInternalReader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_54 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Deserialize(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="return null;", span="118-118"];
m6_58 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", span="1042-1042"];
m6_40 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="96-96"];
m6_259 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", span="765-765"];
m6_431 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Type objectType = contract.UnderlyingType", span="767-767"];
m6_432 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="SerializationInfo serializationInfo = new SerializationInfo(contract.UnderlyingType, GetFormatterConverter())", span="769-769"];
m6_434 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="774-774"];
m6_436 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="777-777"];
m6_437 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="778-778"];
m6_439 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="serializationInfo.AddValue(memberName, JToken.ReadFrom(reader))", span="781-781"];
m6_443 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected token when deserializing object: '' + reader.TokenType);", span="789-789"];
m6_444 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="!exit && reader.Read()", span="791-791"];
m6_445 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.ISerializableCreator == null", span="793-793"];
m6_447 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="object createdObject = contract.ISerializableCreator(serializationInfo, Serializer.Context)", span="796-796"];
m6_448 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="id != null", span="798-798"];
m6_449 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Serializer.ReferenceResolver.AddReference(this, id, createdObject)", span="799-799"];
m6_450 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserializing(createdObject, Serializer.Context)", span="802-802"];
m6_451 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserialized(createdObject, Serializer.Context)", span="803-803"];
m6_433 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="bool exit = false", span="771-771"];
m6_454 [cluster="System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.SerializationInfo(System.Type, System.Runtime.Serialization.IFormatterConverter)", span="0-0"];
m6_66 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", span="132-132"];
m6_435 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="776-776"];
m6_440 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="783-783"];
m6_441 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="785-785"];
m6_438 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="779-779"];
m6_35 [cluster="object.ToString()", file="JsonSerializerInternalReader.cs", label="Entry object.ToString()", span="0-0"];
m6_453 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", span="765-765"];
m6_456 [cluster="System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationInfo.AddValue(string, object)", span="0-0"];
m6_455 [cluster="Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JToken.ReadFrom(Newtonsoft.Json.JsonReader)", span="1168-1168"];
m6_442 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="exit = true", span="786-786"];
m6_452 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateISerializable(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonISerializableContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="return createdObject;", span="805-805"];
m6_457 [cluster="Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.ObjectConstructor<T>.Invoke(params object[])", span="30-30"];
m6_384 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.AddReference(object, string, object)", span="61-61"];
m6_385 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserializing(object, System.Runtime.Serialization.StreamingContext)", span="122-122"];
m6_388 [cluster="Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonContract.InvokeOnDeserialized(object, System.Runtime.Serialization.StreamingContext)", span="130-130"];
m6_41 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="type == null", span="98-98"];
m6_43 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="return Serializer.ContractResolver.ResolveContract(type);", span="101-101"];
m6_42 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="return null;", span="99-99"];
m6_44 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type)", span="96-96"];
m6_28 [cluster="Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IContractResolver.ResolveContract(System.Type)", span="42-42"];
m6_256 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", span="610-610"];
m6_350 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="object dictionary", span="612-612"];
m6_351 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null &&\r\n        (!contract.DefaultCreatorNonPublic || Serializer.ConstructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="614-615"];
m6_352 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="dictionary = contract.DefaultCreator()", span="616-616"];
m6_353 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, \\ncontract.UnderlyingType));", span="618-618"];
m6_354 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="IWrappedDictionary dictionaryWrapper = contract.CreateWrapper(dictionary)", span="620-620"];
m6_355 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="PopulateDictionary(dictionaryWrapper, reader, contract, id)", span="622-622"];
m6_358 [cluster="System.Func<TResult>.Invoke()", file="JsonSerializerInternalReader.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m6_357 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", span="610-610"];
m6_356 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateDictionary(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="return dictionaryWrapper.UnderlyingDictionary;", span="624-624"];
m6_257 [cluster="Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonDictionaryContract.CreateWrapper(object)", span="79-79"];
m6_38 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, \\nNewtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, string)", span="627-627"];
m6_296 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.FormatValueForPrint(object)", span="513-513"];
m6_297 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="value == null", span="515-515"];
m6_299 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="value is string", span="518-518"];
m6_300 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="return @'''''''' + value + @'''''''';", span="519-519"];
m6_301 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="return value.ToString();", span="521-521"];
m6_298 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="return ''{null}'';", span="516-516"];
m6_302 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.FormatValueForPrint(object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.FormatValueForPrint(object)", span="513-513"];
m6_552 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", span="992-992"];
m6_568 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="IDictionary<JsonProperty, object> propertyValues = new Dictionary<JsonProperty, object>()", span="994-994"];
m6_570 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="998-998"];
m6_572 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1001-1001"];
m6_573 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.ConstructorParameters.GetClosestMatchProperty(memberName) ??\r\n              contract.Properties.GetClosestMatchProperty(\\nmemberName)", span="1005-1006"];
m6_575 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, property.PropertyType, property.Converter)", span="1010-1010"];
m6_578 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="propertyValues[property] = CreateValueProperty(reader, property, null, true, null)", span="1014-1014"];
m6_579 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1016-1016"];
m6_580 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1020-1020"];
m6_583 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, \\nmemberName, objectType.Name));", span="1024-1024"];
m6_584 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1026-1026"];
m6_588 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected token when deserializing object: '' + reader.TokenType);", span="1035-1035"];
m6_589 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!exit && reader.Read()", span="1037-1037"];
m6_569 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="bool exit = false", span="995-995"];
m6_590 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="return propertyValues;", span="1039-1039"];
m6_554 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_571 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1000-1000"];
m6_585 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1029-1029"];
m6_586 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1031-1031"];
m6_576 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1011-1011"];
m6_581 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1021-1021"];
m6_491 [cluster="Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonPropertyCollection.GetClosestMatchProperty(string)", span="93-93"];
m6_574 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="property != null", span="1008-1008"];
m6_577 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="!property.Ignored", span="1013-1013"];
m6_591 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", span="992-992"];
m6_99 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", span="183-183"];
m6_331 [cluster="Newtonsoft.Json.JsonReader.Skip()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.Skip()", span="242-242"];
m6_582 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Serializer.MissingMemberHandling == MissingMemberHandling.Error", span="1023-1023"];
m6_587 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ResolvePropertyAndConstructorValues(Newtonsoft.Json.Serialization.JsonObjectContract, \\nNewtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="exit = true", span="1032-1032"];
m6_85 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="162-162"];
m6_86 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="164-164"];
m6_90 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="172-172"];
m6_91 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteToken(reader, reader.Depth - 1)", span="173-173"];
m6_26 [cluster="Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ValidationUtils.ArgumentNotNull(object, string)", span="94-94"];
m6_87 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="JToken token", span="167-167"];
m6_88 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="168-168"];
m6_89 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteStartObject()", span="170-170"];
m6_92 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="writer.WriteEndObject()", span="175-175"];
m6_93 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="token = writer.Token", span="177-177"];
m6_83 [cluster="Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.JTokenWriter()", span="48-48"];
m6_96 [cluster="Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JTokenWriter.WriteStartObject()", span="70-70"];
m6_97 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader, int)", span="325-325"];
m6_98 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248"];
m6_94 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="return token;", span="180-180"];
m6_95 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJObject(Newtonsoft.Json.JsonReader)", span="162-162"];
m6_39 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", span="1078-1078"];
m6_612 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserializing(newObject, Serializer.Context)", span="1080-1080"];
m6_613 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Dictionary<JsonProperty, PropertyPresence> propertiesPresence =\r\n        contract.Properties.ToDictionary(m => m, m => PropertyPresence.None)", span="1082-1083"];
m6_614 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="id != null", span="1085-1085"];
m6_615 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Serializer.ReferenceResolver.AddReference(this, id, newObject)", span="1086-1086"];
m6_616 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="1088-1088"];
m6_617 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="1092-1092"];
m6_619 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="1095-1095"];
m6_620 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="1101-1101"];
m6_623 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Could not find member '{0}' on object of type '{1}'''.FormatWith(CultureInfo.InvariantCulture, \\nmemberName, contract.UnderlyingType.Name));", span="1106-1106"];
m6_624 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1108-1108"];
m6_625 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, property.PropertyType, property.Converter)", span="1112-1112"];
m6_627 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="SetPropertyPresence(reader, property, propertiesPresence)", span="1115-1115"];
m6_628 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="SetPropertyValue(property, reader, newObject)", span="1117-1117"];
m6_630 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, memberName, ex)", span="1121-1121"];
m6_631 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, initialDepth)", span="1122-1122"];
m6_642 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(newObject, EnsureType(property.DefaultValue, CultureInfo.InvariantCulture, property.PropertyType))", span="1141-1141"];
m6_646 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserialized(newObject, Serializer.Context)", span="1150-1150"];
m6_647 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="1151-1151"];
m6_649 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected token when deserializing object: '' + reader.TokenType);", span="1156-1156"];
m6_650 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="1158-1158"];
m6_634 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label=propertiesPresence, span="1128-1128"];
m6_654 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1083-1083"];
m6_657 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="1083-1083"];
m6_618 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="1094-1094"];
m6_633 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="1127-1127"];
m6_648 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="1152-1152"];
m6_626 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="1113-1113"];
m6_621 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="property == null", span="1103-1103"];
m6_622 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Serializer.MissingMemberHandling == MissingMemberHandling.Error", span="1105-1105"];
m6_653 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1163-1163"];
m6_629 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label=Exception, span="1119-1119"];
m6_303 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", span="524-524"];
m6_386 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, object, \\nSystem.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.IsErrorHandled(object, Newtonsoft.Json.Serialization.JsonContract, \\nobject, System.Exception)", span="100-100"];
m6_632 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw;", span="1124-1124"];
m6_387 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, int)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, int)", span="1173-1173"];
m6_652 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", span="1078-1078"];
m6_635 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = propertyPresence.Key", span="1130-1130"];
m6_636 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="PropertyPresence presence = propertyPresence.Value", span="1131-1131"];
m6_639 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="property.Required == Required.AllowNull || property.Required == Required.Always", span="1136-1136"];
m6_640 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Required property '{0}' not found in JSON.''.FormatWith(CultureInfo.InvariantCulture, property.PropertyName));", span="1137-1137"];
m6_641 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer.DefaultValueHandling), DefaultValueHandling.Populate)\r\n                    && \\nproperty.Writable", span="1139-1140"];
m6_644 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="property.Required == Required.Always", span="1144-1144"];
m6_645 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Required property '{0}' expects a value but got null.''.FormatWith(CultureInfo.InvariantCulture, \\nproperty.PropertyName));", span="1145-1145"];
m6_637 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label=presence, span="1133-1133"];
m6_638 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="PropertyPresence.None", span="1135-1135"];
m6_643 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="PropertyPresence.Null", span="1143-1143"];
m6_332 [cluster="System.Nullable<T>.GetValueOrDefault(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Nullable<T>.GetValueOrDefault(T)", span="0-0"];
m6_334 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="590-590"];
m6_155 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", span="489-489"];
m6_338 [cluster="Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.SetValue(object, object)", span="37-37"];
m6_651 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateObject(object, Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when deserializing object.'');", span="1160-1160"];
m6_118 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract is JsonLinqContract", span="213-213"];
m6_119 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateJToken(reader, contract);", span="214-214"];
m6_120 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="218-218"];
m6_122 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateObject(reader, objectType, contract, member, existingValue);", span="223-223"];
m6_124 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateList(reader, objectType, contract, member, existingValue, null);", span="225-225"];
m6_130 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader.Value, CultureInfo.InvariantCulture, objectType);", span="231-231"];
m6_132 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string.IsNullOrEmpty((string) reader.Value) &&\r\n              objectType != null &&\r\n                ReflectionUtils.IsNullableType(\\nobjectType)", span="234-236"];
m6_134 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType == typeof (byte[])", span="240-240"];
m6_135 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return Convert.FromBase64String((string) reader.Value);", span="241-241"];
m6_136 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader.Value, CultureInfo.InvariantCulture, objectType);", span="243-243"];
m6_139 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string constructorName = reader.Value.ToString()", span="246-246"];
m6_143 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType == typeof (DBNull)", span="251-251"];
m6_145 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return EnsureType(reader.Value, CultureInfo.InvariantCulture, objectType);", span="254-254"];
m6_147 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return new JRaw((string) reader.Value);", span="256-256"];
m6_149 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected token while deserializing object: '' + reader.TokenType);", span="261-261"];
m6_150 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="263-263"];
m6_152 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", span="211-211"];
m6_72 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="141-141"];
m6_121 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartObject", span="222-222"];
m6_123 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartArray", span="224-224"];
m6_125 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Integer", span="226-226"];
m6_131 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.String", span="232-232"];
m6_137 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.StartConstructor", span="244-244"];
m6_141 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Null", span="249-249"];
m6_146 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Raw", span="255-255"];
m6_148 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="257-257"];
m6_153 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", span="292-292"];
m6_154 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", span="461-461"];
m6_126 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Float", span="227-227"];
m6_127 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Boolean", span="228-228"];
m6_128 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Date", span="229-229"];
m6_129 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Bytes", span="230-230"];
m6_157 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.IsNullableType(System.Type)", span="190-190"];
m6_133 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return null;", span="237-237"];
m6_156 [cluster="string.IsNullOrEmpty(string)", file="JsonSerializerInternalReader.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_158 [cluster="System.Convert.FromBase64String(string)", file="JsonSerializerInternalReader.cs", label="Entry System.Convert.FromBase64String(string)", span="0-0"];
m6_138 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndConstructor", span="245-245"];
m6_140 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return constructorName;", span="248-248"];
m6_142 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonToken.Undefined", span="250-250"];
m6_144 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return DBNull.Value;", span="252-252"];
m6_159 [cluster="Newtonsoft.Json.Linq.JRaw.JRaw(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.JRaw(object)", span="27-27"];
m6_151 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueInternal(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when deserializing object.'');", span="265-265"];
m6_73 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(reader, ''reader'')", span="143-143"];
m6_74 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="contract != null && contract.UnderlyingType == typeof (JRaw)", span="145-145"];
m6_75 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return JRaw.Create(reader);", span="147-147"];
m6_78 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="writer.WriteToken(reader)", span="154-154"];
m6_76 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JToken token", span="151-151"];
m6_82 [cluster="Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Linq.JRaw.Create(Newtonsoft.Json.JsonReader)", span="37-37"];
m6_81 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", span="141-141"];
m6_77 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="JTokenWriter writer = new JTokenWriter()", span="152-152"];
m6_79 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="token = writer.Token", span="155-155"];
m6_84 [cluster="Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteToken(Newtonsoft.Json.JsonReader)", span="309-309"];
m6_80 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateJToken(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonContract)", file="JsonSerializerInternalReader.cs", label="return token;", span="158-158"];
m6_285 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="targetType == null", span="491-491"];
m6_286 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="return value;", span="492-492"];
m6_287 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="Type valueType = ReflectionUtils.GetObjectType(value)", span="494-494"];
m6_288 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="valueType != targetType", span="498-498"];
m6_289 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="return ConvertUtils.ConvertOrCast(value, culture, targetType);", span="502-502"];
m6_291 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Error converting value {0} to type '{1}'.''.FormatWith(CultureInfo.InvariantCulture, FormatValueForPrint(\\nvalue), targetType), ex);", span="506-506"];
m6_292 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="return value;", span="510-510"];
m6_293 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", span="489-489"];
m6_294 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.GetObjectType(object)", span="55-55"];
m6_295 [cluster="Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ConvertUtils.ConvertOrCast(object, System.Globalization.CultureInfo, System.Type)", span="375-375"];
m6_290 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.EnsureType(object, System.Globalization.CultureInfo, System.Type)", file="JsonSerializerInternalReader.cs", label=Exception, span="504-504"];
m6_253 [cluster="Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializationException.JsonSerializationException(string, System.Exception)", span="63-63"];
m6_401 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForTypeArrayHack(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForTypeArrayHack(Newtonsoft.Json.JsonReader, System.Type)", span="698-698"];
m6_402 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForTypeArrayHack(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="return ReadForType(reader, t, null);", span="704-704"];
m6_404 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForTypeArrayHack(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.EndArray", span="708-708"];
m6_407 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForTypeArrayHack(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForTypeArrayHack(Newtonsoft.Json.JsonReader, System.Type)", span="698-698"];
m6_403 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForTypeArrayHack(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label=JsonReaderException, span="706-706"];
m6_405 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForTypeArrayHack(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="return true;", span="709-709"];
m6_406 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForTypeArrayHack(Newtonsoft.Json.JsonReader, System.Type)", file="JsonSerializerInternalReader.cs", label="throw;", span="711-711"];
m6_31 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", span="715-715"];
m6_408 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="object list = wrappedList.UnderlyingCollection", span="717-717"];
m6_409 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="wrappedList.IsFixedSize", span="720-720"];
m6_410 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="722-722"];
m6_411 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="return wrappedList.UnderlyingCollection;", span="723-723"];
m6_412 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="reference != null", span="726-726"];
m6_413 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="Serializer.ReferenceResolver.AddReference(this, reference, list)", span="727-727"];
m6_414 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserializing(list, Serializer.Context)", span="729-729"];
m6_415 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="731-731"];
m6_416 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="ReadForTypeArrayHack(reader, contract.CollectionItemType)", span="733-733"];
m6_417 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="735-735"];
m6_419 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserialized(list, Serializer.Context)", span="738-738"];
m6_420 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="return wrappedList.UnderlyingCollection;", span="740-740"];
m6_422 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="object value = CreateValueNonProperty(reader, contract.CollectionItemType, GetContractSafe(contract.CollectionItemType))", span="746-746"];
m6_423 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="wrappedList.Add(value)", span="748-748"];
m6_425 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(list, contract, wrappedList.Count, ex)", span="752-752"];
m6_426 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, initialDepth)", span="753-753"];
m6_429 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", span="715-715"];
m6_428 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when deserializing array.'');", span="761-761"];
m6_418 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndArray", span="737-737"];
m6_421 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="741-741"];
m6_424 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label=Exception, span="750-750"];
m6_430 [cluster="System.Collections.IList.Add(object)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.IList.Add(object)", span="0-0"];
m6_427 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateList(Newtonsoft.Json.Utilities.IWrappedCollection, Newtonsoft.Json.JsonReader, \\nstring, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="throw;", span="755-755"];
m6_100 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="JsonContract contract = GetContractSafe(property.PropertyType, currentValue)", span="185-185"];
m6_101 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="Type objectType = property.PropertyType", span="186-186"];
m6_102 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="JsonConverter converter = GetConverter(contract, property.MemberConverter)", span="188-188"];
m6_104 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="!gottenCurrentValue && target != null && property.Readable", span="192-192"];
m6_105 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="193-193"];
m6_106 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="return converter.ReadJson(reader, objectType, currentValue, GetInternalSerializer());", span="195-195"];
m6_107 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="return CreateValueInternal(reader, objectType, contract, property, currentValue);", span="198-198"];
m6_45 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type, object)", span="104-104"];
m6_103 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="converter != null && converter.CanRead", span="190-190"];
m6_110 [cluster="Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IValueProvider.GetValue(object)", span="44-44"];
m6_108 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateValueProperty(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nobject, bool, object)", span="183-183"];
m6_337 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, \\nobject)", span="595-595"];
m6_342 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer.NullValueHandling) == NullValueHandling.Ignore && value == null", span="597-597"];
m6_344 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer.DefaultValueHandling), DefaultValueHandling.Ignore)\r\n        && \\nMiscellaneousUtils.ValueEquals(value, property.DefaultValue)", span="600-601"];
m6_346 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="!property.Writable", span="604-604"];
m6_343 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="598-598"];
m6_349 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, \\nobject)", span="595-595"];
m6_336 [cluster="Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.MiscellaneousUtils.ValueEquals(object, object)", span="14-14"];
m6_345 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="602-602"];
m6_347 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return false;", span="605-605"];
m6_348 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ShouldSetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return true;", span="607-607"];
m6_272 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="object value", span="463-463"];
m6_273 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="HasDefinedType(objectType)", span="464-464"];
m6_274 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract arrayContract = EnsureArrayContract(objectType, contract)", span="466-466"];
m6_275 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="existingValue == null", span="468-468"];
m6_276 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="value = CreateAndPopulateList(reader, reference, arrayContract)", span="469-469"];
m6_277 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="value = PopulateList(arrayContract.CreateWrapper(existingValue), reader, reference, arrayContract)", span="471-471"];
m6_278 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="value = CreateJToken(reader, contract)", span="475-475"];
m6_255 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasDefinedType(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasDefinedType(System.Type)", span="480-480"];
m6_279 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="return value;", span="477-477"];
m6_281 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateList(Newtonsoft.Json.JsonReader, string, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateList(Newtonsoft.Json.JsonReader, string, Newtonsoft.Json.Serialization.JsonArrayContract)", span="680-680"];
m6_282 [cluster="Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonArrayContract.CreateWrapper(object)", span="71-71"];
m6_280 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateList(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object, string)", span="461-461"];
m6_592 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="bool hasConverter = (GetConverter(GetContractSafe(t), propertyConverter) != null)", span="1046-1046"];
m6_594 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="return reader.Read();", span="1049-1049"];
m6_595 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="t == typeof (byte[])", span="1051-1051"];
m6_596 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsBytes()", span="1053-1053"];
m6_598 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="(t == typeof (decimal) || t == typeof (decimal?))", span="1056-1056"];
m6_599 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDecimal()", span="1058-1058"];
m6_601 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="(t == typeof (DateTimeOffset) || t == typeof (DateTimeOffset?))", span="1062-1062"];
m6_602 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="reader.ReadAsDateTimeOffset()", span="1064-1064"];
m6_604 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="1071-1071"];
m6_606 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.Comment", span="1073-1073"];
m6_593 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label=hasConverter, span="1048-1048"];
m6_608 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", span="1042-1042"];
m6_609 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="223-223"];
m6_597 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="return true;", span="1054-1054"];
m6_610 [cluster="Newtonsoft.Json.JsonReader.ReadAsDecimal()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDecimal()", span="229-229"];
m6_600 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="return true;", span="1059-1059"];
m6_611 [cluster="Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsDateTimeOffset()", span="236-236"];
m6_603 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="return true;", span="1065-1065"];
m6_605 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="return false;", span="1072-1072"];
m6_607 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.ReadForType(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="return true;", span="1075-1075"];
m6_283 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasDefinedType(System.Type)", file="JsonSerializerInternalReader.cs", label="return (type != null && type != typeof (object) && !typeof (JToken).IsAssignableFrom(type)\r\n#if !(NET35 || NET20 || WINDOWS_PHONE)\r\n        && \\ntype != typeof (IDynamicMetaObjectProvider)\r\n#endif\r\n        );", span="482-486"];
m6_284 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasDefinedType(System.Type)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasDefinedType(System.Type)", span="480-480"];
m6_254 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m6_174 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="294-294"];
m6_176 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="298-298"];
m6_178 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string propertyName = reader.Value.ToString()", span="304-304"];
m6_180 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="308-308"];
m6_181 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType != JsonToken.String && reader.TokenType != JsonToken.Null", span="309-309"];
m6_183 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string reference = (reader.Value != null) ? reader.Value.ToString() : null", span="312-312"];
m6_184 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="314-314"];
m6_186 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName", span="318-318"];
m6_191 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="330-330"];
m6_192 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string qualifiedTypeName = reader.Value.ToString()", span="331-331"];
m6_193 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="333-333"];
m6_194 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="(((member != null) ? member.TypeNameHandling : null) ?? Serializer.TypeNameHandling) != TypeNameHandling.None", span="335-335"];
m6_204 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType != null && !objectType.IsAssignableFrom(specifiedType)", span="354-354"];
m6_205 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Type specified in JSON '{0}' is not compatible with '{1}'.''.FormatWith(CultureInfo.InvariantCulture, \\nspecifiedType.AssemblyQualifiedName, objectType.AssemblyQualifiedName));", span="355-355"];
m6_210 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="364-364"];
m6_211 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="366-366"];
m6_212 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="368-368"];
m6_215 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="373-373"];
m6_216 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object list = CreateList(reader, objectType, contract, member, existingValue, id)", span="374-374"];
m6_217 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="375-375"];
m6_220 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="specialProperty\r\n          && reader.TokenType == JsonToken.PropertyName", span="382-383"];
m6_221 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="!HasDefinedType(objectType)", span="386-386"];
m6_222 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateJObject(reader);", span="387-387"];
m6_223 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract == null", span="389-389"];
m6_224 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Could not resolve type '{0}' to a JsonContract.''.FormatWith(CultureInfo.InvariantCulture, \\nobjectType));", span="390-390"];
m6_225 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract dictionaryContract = contract as JsonDictionaryContract", span="392-392"];
m6_227 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="existingValue == null", span="395-395"];
m6_228 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateAndPopulateDictionary(reader, dictionaryContract, id);", span="396-396"];
m6_229 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return PopulateDictionary(dictionaryContract.CreateWrapper(existingValue), reader, dictionaryContract, id);", span="398-398"];
m6_230 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonObjectContract objectContract = contract as JsonObjectContract", span="401-401"];
m6_232 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="existingValue == null", span="404-404"];
m6_233 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateAndPopulateObject(reader, objectContract, id);", span="405-405"];
m6_234 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return PopulateObject(existingValue, reader, objectContract, id);", span="407-407"];
m6_235 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonPrimitiveContract primitiveContract = contract as JsonPrimitiveContract", span="410-410"];
m6_237 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName && string.Equals(reader.Value.ToString(), JsonTypeReflector.ValuePropertyName, StringComparison.Ordinal)", span="414-414"];
m6_238 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="416-416"];
m6_239 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="object value = CreateValueInternal(reader, objectType, primitiveContract, member, existingValue)", span="417-417"];
m6_240 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="419-419"];
m6_242 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonISerializableContract serializableContract = contract as JsonISerializableContract", span="425-425"];
m6_244 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateISerializable(reader, serializableContract, id);", span="428-428"];
m6_245 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="JsonDynamicContract dynamicContract = contract as JsonDynamicContract", span="433-433"];
m6_247 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return CreateDynamic(reader, dynamicContract, id);", span="436-436"];
m6_248 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Cannot deserialize JSON object into type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, \\nobjectType));", span="440-440"];
m6_175 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string id = null", span="296-296"];
m6_177 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="bool specialProperty", span="300-300"];
m6_179 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.RefPropertyName, StringComparison.Ordinal)", span="306-306"];
m6_190 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.TypePropertyName, StringComparison.Ordinal)", span="328-328"];
m6_209 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="362-362"];
m6_214 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string.Equals(propertyName, JsonTypeReflector.ArrayValuesPropertyName, StringComparison.Ordinal)", span="371-371"];
m6_36 [cluster="string.Equals(string, string, System.StringComparison)", file="JsonSerializerInternalReader.cs", label="Entry string.Equals(string, string, System.StringComparison)", span="0-0"];
m6_182 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''JSON reference {0} property must have a string or null value.''.FormatWith(CultureInfo.InvariantCulture, \\nJsonTypeReflector.RefPropertyName));", span="310-310"];
m6_249 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", span="292-292"];
m6_185 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="reference != null", span="316-316"];
m6_188 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return Serializer.ReferenceResolver.ResolveReference(this, reference);", span="321-321"];
m6_189 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="specialProperty = true", span="325-325"];
m6_187 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Additional content found in JSON reference object. A JSON reference object should only have \\na {0} property.''.FormatWith(CultureInfo.InvariantCulture, JsonTypeReflector.RefPropertyName));", span="319-319"];
m6_250 [cluster="Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.IReferenceResolver.ResolveReference(object, string)", span="38-38"];
m6_197 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="ReflectionUtils.SplitFullyQualifiedTypeName(qualifiedTypeName, out typeName, out assemblyName)", span="339-339"];
m6_201 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Error resolving type specified in JSON '{0}'.''.FormatWith(CultureInfo.InvariantCulture, \\nqualifiedTypeName), ex);", span="348-348"];
m6_203 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Type specified in JSON '{0}' was not resolved.''.FormatWith(CultureInfo.InvariantCulture, \\nqualifiedTypeName));", span="352-352"];
m6_195 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string typeName", span="337-337"];
m6_208 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="specialProperty = true", span="360-360"];
m6_196 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="string assemblyName", span="338-338"];
m6_251 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.SplitFullyQualifiedTypeName(string, out string, out string)", span="840-840"];
m6_198 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="Type specifiedType", span="341-341"];
m6_199 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="specifiedType = Serializer.Binder.BindToType(assemblyName, typeName)", span="344-344"];
m6_252 [cluster="System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", file="JsonSerializerInternalReader.cs", label="Entry System.Runtime.Serialization.SerializationBinder.BindToType(string, string)", span="0-0"];
m6_200 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label=Exception, span="346-346"];
m6_202 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="specifiedType == null", span="351-351"];
m6_206 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectType = specifiedType", span="357-357"];
m6_207 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="contract = GetContractSafe(specifiedType)", span="358-358"];
m6_213 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="specialProperty = true", span="369-369"];
m6_219 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="specialProperty = false", span="380-380"];
m6_218 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return list;", span="376-376"];
m6_226 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="dictionaryContract != null", span="393-393"];
m6_231 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="objectContract != null", span="402-402"];
m6_258 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", span="880-880"];
m6_236 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="primitiveContract != null", span="411-411"];
m6_241 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="return value;", span="420-420"];
m6_243 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="serializableContract != null", span="426-426"];
m6_246 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObject(Newtonsoft.Json.JsonReader, System.Type, Newtonsoft.Json.Serialization.JsonContract, \\nNewtonsoft.Json.Serialization.JsonProperty, object)", file="JsonSerializerInternalReader.cs", label="dynamicContract != null", span="434-434"];
m6_260 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", span="810-810"];
m6_46 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type, object)", file="JsonSerializerInternalReader.cs", label="value == null", span="106-106"];
m6_47 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type, object)", file="JsonSerializerInternalReader.cs", label="return GetContractSafe(type);", span="107-107"];
m6_48 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type, object)", file="JsonSerializerInternalReader.cs", label="return Serializer.ContractResolver.ResolveContract(value.GetType());", span="109-109"];
m6_49 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetContractSafe(System.Type, object)", span="104-104"];
m6_27 [cluster="object.GetType()", file="JsonSerializerInternalReader.cs", label="Entry object.GetType()", span="0-0"];
m6_510 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.ConstructorInfo, string)", span="911-911"];
m6_512 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(constructorInfo, ''constructorInfo'')", span="913-913"];
m6_513 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="Type objectType = contract.UnderlyingType", span="915-915"];
m6_514 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IDictionary<JsonProperty, object> propertyValues = ResolvePropertyAndConstructorValues(contract, reader, objectType)", span="917-917"];
m6_515 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IDictionary<ParameterInfo, object> constructorParameters = constructorInfo.GetParameters().ToDictionary(p => p, p => (object) null)", span="919-919"];
m6_522 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="object createdObject = constructorInfo.Invoke(constructorParameters.Values.ToArray())", span="931-931"];
m6_523 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="933-933"];
m6_524 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="Serializer.ReferenceResolver.AddReference(this, id, createdObject)", span="934-934"];
m6_525 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserializing(createdObject, Serializer.Context)", span="936-936"];
m6_549 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserialized(createdObject, Serializer.Context)", span="988-988"];
m6_517 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label=propertyValues, span="922-922"];
m6_516 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IDictionary<JsonProperty, object> remainingPropertyValues = new Dictionary<JsonProperty, object>()", span="920-920"];
m6_518 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="ParameterInfo matchingConstructorParameter = constructorParameters.ForgivingCaseSensitiveFind(kv => kv.Key.Name, propertyValue.Key.UnderlyingName)\\n.Key", span="924-924"];
m6_520 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="constructorParameters[matchingConstructorParameter] = propertyValue.Value", span="926-926"];
m6_509 [cluster="System.Reflection.MethodBase.GetParameters()", file="JsonSerializerInternalReader.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m6_559 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="919-919"];
m6_562 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="919-919"];
m6_521 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="remainingPropertyValues.Add(propertyValue)", span="928-928"];
m6_526 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label=remainingPropertyValues, span="939-939"];
m6_519 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="matchingConstructorParameter != null", span="925-925"];
m6_555 [cluster="System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ForgivingCaseSensitiveFind<TSource>(System.Func<TSource, string>, string)", span="352-352"];
m6_565 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="924-924"];
m6_556 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m6_511 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="JsonSerializerInternalReader.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m6_557 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m6_530 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(createdObject, value)", span="946-946"];
m6_535 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="object createdObjectCollection = property.ValueProvider.GetValue(createdObject)", span="957-957"];
m6_543 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="object createdObjectDictionary = property.ValueProvider.GetValue(createdObject)", span="973-973"];
m6_550 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="return createdObject;", span="989-989"];
m6_527 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = remainingPropertyValue.Key", span="941-941"];
m6_528 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="object value = remainingPropertyValue.Value", span="942-942"];
m6_531 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="!property.Writable && value != null", span="948-948"];
m6_532 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="JsonContract propertyContract = Serializer.ContractResolver.ResolveContract(property.PropertyType)", span="951-951"];
m6_529 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="ShouldSetPropertyValue(remainingPropertyValue.Key, remainingPropertyValue.Value)", span="944-944"];
m6_538 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection newValues = propertyArrayContract.CreateWrapper(value)", span="961-961"];
m6_546 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IWrappedDictionary newValues = jsonDictionaryContract.CreateWrapper(value)", span="977-977"];
m6_533 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="propertyContract is JsonArrayContract", span="953-953"];
m6_534 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="JsonArrayContract propertyArrayContract = propertyContract as JsonArrayContract", span="955-955"];
m6_541 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="propertyContract is JsonDictionaryContract", span="969-969"];
m6_542 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="JsonDictionaryContract jsonDictionaryContract = propertyContract as JsonDictionaryContract", span="971-971"];
m6_537 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IWrappedCollection createdObjectCollectionWrapper = propertyArrayContract.CreateWrapper(createdObjectCollection)", span="960-960"];
m6_536 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="createdObjectCollection != null", span="958-958"];
m6_540 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="createdObjectCollectionWrapper.Add(newValue)", span="965-965"];
m6_539 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label=newValues, span="963-963"];
m6_545 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="IWrappedDictionary createdObjectDictionaryWrapper = jsonDictionaryContract.CreateWrapper(createdObjectDictionary)", span="976-976"];
m6_544 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="createdObjectDictionary != null", span="974-974"];
m6_548 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="createdObjectDictionaryWrapper.Add(newValue.Key, newValue.Value)", span="981-981"];
m6_547 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label=newValues, span="979-979"];
m6_558 [cluster="System.Collections.IDictionary.Add(object, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Collections.IDictionary.Add(object, object)", span="0-0"];
m6_551 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nSystem.Reflection.ConstructorInfo, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateObjectFromNonDefaultConstructor(Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonObjectContract, System.Reflection.ConstructorInfo, string)", span="911-911"];
m6_663 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, int)", file="JsonSerializerInternalReader.cs", label="ClearErrorContext()", span="1175-1175"];
m6_664 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, int)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="1177-1177"];
m6_665 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, int)", file="JsonSerializerInternalReader.cs", label="reader.Depth > (initialDepth + 1)", span="1179-1179"];
m6_666 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, int)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="1181-1181"];
m6_668 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalBase.ClearErrorContext()", span="92-92"];
m6_667 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, int)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HandleError(Newtonsoft.Json.JsonReader, int)", span="1173-1173"];
m6_389 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateList(Newtonsoft.Json.JsonReader, string, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="return CollectionUtils.CreateAndPopulateList(contract.CreatedType, (l, isTemporaryListReference) =>\r\n        {\r\n          if (\\nreference != null && isTemporaryListReference)\r\n            throw new JsonSerializationException(''Cannot preserve reference to \\narray or readonly list: {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));\r\n\r\n#if !PocketPC\r\n          \\nif (contract.OnSerializing != null && isTemporaryListReference)\r\n            throw new JsonSerializationException(''Cannot call \\nOnSerializing on an array or readonly list: {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));\r\n#endif\r\n          \\nif (contract.OnError != null && isTemporaryListReference)\r\n            throw new JsonSerializationException(''Cannot call OnError \\non an array or readonly list: {0}''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));\r\n\r\n          PopulateList(\\ncontract.CreateWrapper(l), reader, reference, contract);\r\n        });", span="682-695"];
m6_393 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="reference != null && isTemporaryListReference", span="684-684"];
m6_394 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Cannot preserve reference to array or readonly list: {0}''.FormatWith(CultureInfo.InvariantCulture, \\ncontract.UnderlyingType));", span="685-685"];
m6_395 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="contract.OnSerializing != null && isTemporaryListReference", span="688-688"];
m6_396 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Cannot call OnSerializing on an array or readonly list: {0}''.FormatWith(CultureInfo.InvariantCulture, \\ncontract.UnderlyingType));", span="689-689"];
m6_397 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="contract.OnError != null && isTemporaryListReference", span="691-691"];
m6_398 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Cannot call OnError on an array or readonly list: {0}''.FormatWith(CultureInfo.InvariantCulture, \\ncontract.UnderlyingType));", span="692-692"];
m6_399 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="PopulateList(contract.CreateWrapper(l), reader, reference, contract)", span="694-694"];
m6_391 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateAndPopulateList(System.Type, System.Action<System.Collections.IList, bool>)", span="475-475"];
m6_390 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateList(Newtonsoft.Json.JsonReader, string, Newtonsoft.Json.Serialization.JsonArrayContract)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateList(Newtonsoft.Json.JsonReader, string, Newtonsoft.Json.Serialization.JsonArrayContract)", span="680-680"];
m6_392 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Entry lambda expression", span="682-695"];
m6_67 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="_formatterConverter == null", span="134-134"];
m6_68 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="_formatterConverter = new JsonFormatterConverter(GetInternalSerializer())", span="135-135"];
m6_69 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="return _formatterConverter;", span="137-137"];
m6_71 [cluster="Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonFormatterConverter.JsonFormatterConverter(Newtonsoft.Json.JsonSerializer)", span="41-41"];
m6_70 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetFormatterConverter()", span="132-132"];
m6_61 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="_internalSerializer == null", span="125-125"];
m6_62 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="_internalSerializer = new JsonSerializerProxy(this)", span="126-126"];
m6_63 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="return _internalSerializer;", span="128-128"];
m6_65 [cluster="Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerProxy.JsonSerializerProxy(Newtonsoft.Json.Serialization.JsonSerializerInternalReader)", span="135-135"];
m6_64 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetInternalSerializer()", span="123-123"];
m6_160 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="JsonConverter converter = null", span="270-270"];
m6_161 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="memberConverter != null", span="271-271"];
m6_162 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="converter = memberConverter", span="274-274"];
m6_163 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="contract != null", span="276-276"];
m6_165 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="contract.Converter != null", span="279-279"];
m6_166 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="converter = contract.Converter", span="281-281"];
m6_167 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="(matchingConverter = Serializer.GetMatchingConverter(contract.UnderlyingType)) != null", span="282-282"];
m6_169 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="contract.InternalConverter != null", span="285-285"];
m6_170 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="converter = contract.InternalConverter", span="287-287"];
m6_171 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="return converter;", span="289-289"];
m6_164 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="JsonConverter matchingConverter", span="278-278"];
m6_168 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="converter = matchingConverter", span="284-284"];
m6_173 [cluster="Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonSerializer.GetMatchingConverter(System.Type)", span="453-453"];
m6_172 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.GetConverter(Newtonsoft.Json.Serialization.JsonContract, Newtonsoft.Json.JsonConverter)", span="268-268"];
m6_359 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="id != null", span="629-629"];
m6_360 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="Serializer.ReferenceResolver.AddReference(this, id, dictionary.UnderlyingDictionary)", span="630-630"];
m6_361 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserializing(dictionary.UnderlyingDictionary, Serializer.Context)", span="632-632"];
m6_362 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="634-634"];
m6_363 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="638-638"];
m6_365 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="object keyValue = reader.Value", span="641-641"];
m6_366 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="keyValue = EnsureType(keyValue, CultureInfo.InvariantCulture, contract.DictionaryKeyType)", span="646-646"];
m6_368 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Could not convert string '{0}' to dictionary key type '{1}'. Create a TypeConverter to convert \\nfrom the string to the key type object.''.FormatWith(CultureInfo.InvariantCulture, reader.Value, contract.DictionaryKeyType), ex);", span="650-650"];
m6_369 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="!ReadForType(reader, contract.DictionaryValueType, null)", span="653-653"];
m6_371 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="dictionary[keyValue] = CreateValueNonProperty(reader, contract.DictionaryValueType, GetContractSafe(contract.DictionaryValueType))", span="656-656"];
m6_373 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(dictionary, contract, keyValue, ex)", span="660-660"];
m6_374 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, initialDepth)", span="661-661"];
m6_378 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserialized(dictionary.UnderlyingDictionary, Serializer.Context)", span="669-669"];
m6_379 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="return dictionary.UnderlyingDictionary;", span="671-671"];
m6_380 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected token when deserializing object: '' + reader.TokenType);", span="673-673"];
m6_381 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="675-675"];
m6_364 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="640-640"];
m6_376 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.Comment", span="666-666"];
m6_377 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="668-668"];
m6_367 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="648-648"];
m6_370 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when deserializing object.'');", span="654-654"];
m6_372 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label=Exception, span="658-658"];
m6_375 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="throw;", span="663-663"];
m6_383 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, \\nNewtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDictionaryContract, string)", span="627-627"];
m6_382 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PopulateDictionary(Newtonsoft.Json.Utilities.IWrappedDictionary, Newtonsoft.Json.JsonReader, \\nNewtonsoft.Json.Serialization.JsonDictionaryContract, string)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when deserializing object.'');", span="677-677"];
m6_660 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="property != null", span="1165-1165"];
m6_661 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="requiredProperties[property] = (reader.TokenType == JsonToken.Null || reader.TokenType == JsonToken.Undefined)\r\n          ? PropertyPresence.Null\r\n          : \\nPropertyPresence.Value", span="1167-1169"];
m6_662 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyPresence(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonProperty, \\nSystem.Collections.Generic.Dictionary<Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.Serialization.JsonSerializerInternalReader.PropertyPresence>)", span="1163-1163"];
m6_458 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="IDynamicMetaObjectProvider newObject = null", span="812-812"];
m6_459 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.UnderlyingType.IsInterface || contract.UnderlyingType.IsAbstract", span="814-814"];
m6_460 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Could not create an instance of type {0}. Type is an interface or abstract class and cannot \\nbe instantated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="815-815"];
m6_461 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null &&\r\n        (!contract.DefaultCreatorNonPublic || Serializer.ConstructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="817-818"];
m6_462 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="newObject = (IDynamicMetaObjectProvider) contract.DefaultCreator()", span="819-819"];
m6_463 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unable to find a default constructor to use for type {0}.''.FormatWith(CultureInfo.InvariantCulture, \\ncontract.UnderlyingType));", span="821-821"];
m6_464 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="id != null", span="823-823"];
m6_465 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Serializer.ReferenceResolver.AddReference(this, id, newObject)", span="824-824"];
m6_466 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserializing(newObject, Serializer.Context)", span="826-826"];
m6_467 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="int initialDepth = reader.Depth", span="828-828"];
m6_469 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="reader.TokenType", span="833-833"];
m6_471 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="string memberName = reader.Value.ToString()", span="836-836"];
m6_472 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="!reader.Read()", span="840-840"];
m6_474 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonProperty property = contract.Properties.GetClosestMatchProperty(memberName)", span="844-844"];
m6_476 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="SetPropertyValue(property, reader, newObject)", span="847-847"];
m6_477 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Type t = (JsonReader.IsPrimitiveToken(reader.TokenType)) ? reader.ValueType : typeof (IDynamicMetaObjectProvider)", span="851-851"];
m6_478 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="object value = CreateValueNonProperty(reader, t, GetContractSafe(t, null))", span="853-853"];
m6_481 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="IsErrorHandled(newObject, contract, memberName, ex)", span="860-860"];
m6_482 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="HandleError(reader, initialDepth)", span="861-861"];
m6_486 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected token when deserializing object: '' + reader.TokenType);", span="870-870"];
m6_487 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="!exit && reader.Read()", span="872-872"];
m6_488 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.InvokeOnDeserialized(newObject, Serializer.Context)", span="874-874"];
m6_479 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="newObject.TrySetMember(memberName, value)", span="855-855"];
m6_489 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="876-876"];
m6_490 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", span="810-810"];
m6_468 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="bool exit = false", span="830-830"];
m6_470 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonToken.PropertyName", span="835-835"];
m6_484 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="JsonToken.EndObject", span="866-866"];
m6_473 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected end when setting {0}'s value.''.FormatWith(CultureInfo.InvariantCulture, memberName));", span="841-841"];
m6_475 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="property != null && property.Writable && !property.Ignored", span="845-845"];
m6_480 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label=Exception, span="858-858"];
m6_335 [cluster="Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.JsonReader.IsPrimitiveToken(Newtonsoft.Json.JsonToken)", span="365-365"];
m6_492 [cluster="System.Dynamic.IDynamicMetaObjectProvider.TrySetMember(string, object)", file="JsonSerializerInternalReader.cs", label="Entry System.Dynamic.IDynamicMetaObjectProvider.TrySetMember(string, object)", span="120-120"];
m6_483 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw;", span="863-863"];
m6_485 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateDynamic(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonDynamicContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="exit = true", span="867-867"];
m6_493 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="object newObject = null", span="882-882"];
m6_494 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.UnderlyingType.IsInterface || contract.UnderlyingType.IsAbstract", span="884-884"];
m6_495 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Could not create an instance of type {0}. Type is an interface or abstract class and cannot \\nbe instantated.''.FormatWith(CultureInfo.InvariantCulture, contract.UnderlyingType));", span="885-885"];
m6_496 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.OverrideConstructor != null", span="887-887"];
m6_497 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.OverrideConstructor.GetParameters().Length > 0", span="889-889"];
m6_498 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="return CreateObjectFromNonDefaultConstructor(reader, contract, contract.OverrideConstructor, id);", span="890-890"];
m6_499 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="newObject = contract.OverrideConstructor.Invoke(null)", span="892-892"];
m6_500 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.DefaultCreator != null &&\r\n        (!contract.DefaultCreatorNonPublic || Serializer.ConstructorHandling == ConstructorHandling.AllowNonPublicDefaultConstructor)", span="894-895"];
m6_501 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="newObject = contract.DefaultCreator()", span="897-897"];
m6_502 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="contract.ParametrizedConstructor != null", span="899-899"];
m6_503 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="return CreateObjectFromNonDefaultConstructor(reader, contract, contract.ParametrizedConstructor, id);", span="901-901"];
m6_505 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unable to find a constructor to use for type {0}. A class should either have a default constructor, \\none constructor with arguments or a constructor marked with the JsonConstructor attribute.''.FormatWith(CultureInfo.InvariantCulture, \\ncontract.UnderlyingType));", span="905-905"];
m6_506 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="PopulateObject(newObject, reader, contract, id)", span="907-907"];
m6_504 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="newObject == null", span="904-904"];
m6_507 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="return newObject;", span="908-908"];
m6_508 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.CreateAndPopulateObject(Newtonsoft.Json.JsonReader, Newtonsoft.Json.Serialization.JsonObjectContract, \\nstring)", span="880-880"];
m6_340 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="return ((value & flag) == flag);", span="592-592"];
m6_341 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.HasFlag(Newtonsoft.Json.DefaultValueHandling, Newtonsoft.Json.DefaultValueHandling)", span="590-590"];
m6_304 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="property.Ignored", span="526-526"];
m6_305 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="528-528"];
m6_310 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="ObjectCreationHandling objectCreationHandling =\r\n        property.ObjectCreationHandling.GetValueOrDefault(Serializer.ObjectCreationHandling)", span="536-537"];
m6_311 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="(objectCreationHandling == ObjectCreationHandling.Auto || objectCreationHandling == ObjectCreationHandling.Reuse)\r\n        && (\\nreader.TokenType == JsonToken.StartArray || reader.TokenType == JsonToken.StartObject)\r\n          && property.Readable", span="539-541"];
m6_312 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="currentValue = property.ValueProvider.GetValue(target)", span="543-543"];
m6_314 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="useExistingValue = (currentValue != null\r\n          && !property.PropertyType.IsArray\r\n            && !ReflectionUtils.InheritsGenericDefinition(\\nproperty.PropertyType, typeof (ReadOnlyCollection<>))\r\n              && !property.PropertyType.IsValueType)", span="546-549"];
m6_315 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="!property.Writable && !useExistingValue", span="552-552"];
m6_316 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="554-554"];
m6_318 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="property.NullValueHandling.GetValueOrDefault(Serializer.NullValueHandling) == NullValueHandling.Ignore && reader.TokenType == JsonToken.Null", span="559-559"];
m6_319 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="561-561"];
m6_321 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="HasFlag(property.DefaultValueHandling.GetValueOrDefault(Serializer.DefaultValueHandling), DefaultValueHandling.Ignore)\r\n        && \\nJsonReader.IsPrimitiveToken(reader.TokenType)\r\n          && MiscellaneousUtils.ValueEquals(reader.Value, property.DefaultValue)", span="566-568"];
m6_322 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="reader.Skip()", span="570-570"];
m6_325 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="object value = CreateValueProperty(reader, property, target, gottenCurrentValue, existingValue)", span="575-575"];
m6_326 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="(!useExistingValue || value != currentValue)\r\n        && ShouldSetPropertyValue(property, value)", span="580-581"];
m6_327 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="property.ValueProvider.SetValue(target, value)", span="583-583"];
m6_328 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="property.SetIsSpecified != null", span="585-585"];
m6_329 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="property.SetIsSpecified(target, true)", span="586-586"];
m6_307 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="object currentValue = null", span="532-532"];
m6_306 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="return;", span="529-529"];
m6_330 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", span="524-524"];
m6_308 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="bool useExistingValue = false", span="533-533"];
m6_324 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="object existingValue = (useExistingValue) ? currentValue : null", span="574-574"];
m6_309 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="bool gottenCurrentValue = false", span="534-534"];
m6_313 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="gottenCurrentValue = true", span="544-544"];
m6_333 [cluster="Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.ReflectionUtils.InheritsGenericDefinition(System.Type, System.Type)", span="327-327"];
m6_317 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="return;", span="555-555"];
m6_320 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="return;", span="562-562"];
m6_323 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.SetPropertyValue(Newtonsoft.Json.Serialization.JsonProperty, Newtonsoft.Json.JsonReader, \\nobject)", file="JsonSerializerInternalReader.cs", label="return;", span="571-571"];
m6_339 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JsonSerializerInternalReader.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m6_0 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="48-48"];
m6_1 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.JsonSerializerInternalReader(Newtonsoft.Json.JsonSerializer)", span="48-48"];
m6_2 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="53-53"];
m6_3 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="ValidationUtils.ArgumentNotNull(target, ''target'')", span="55-55"];
m6_4 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Type objectType = target.GetType()", span="57-57"];
m6_6 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.None", span="61-61"];
m6_7 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.Read()", span="62-62"];
m6_8 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartArray", span="64-64"];
m6_10 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateList(CollectionUtils.CreateCollectionWrapper(target), reader, null, (JsonArrayContract) contract)", span="67-67"];
m6_12 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.StartObject", span="71-71"];
m6_13 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="73-73"];
m6_15 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="reader.TokenType == JsonToken.PropertyName && string.Equals(reader.Value.ToString(), JsonTypeReflector.IdPropertyName, StringComparison.Ordinal)", span="76-76"];
m6_16 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="78-78"];
m6_17 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="id = (reader.Value != null) ? reader.Value.ToString() : null", span="79-79"];
m6_18 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="CheckedRead(reader)", span="80-80"];
m6_20 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateDictionary(CollectionUtils.CreateDictionaryWrapper(target), reader, (JsonDictionaryContract) contract, id)", span="84-84"];
m6_22 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="PopulateObject(target, reader, (JsonObjectContract) contract, id)", span="86-86"];
m6_24 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Unexpected initial token '{0}' when populating object. Expected JSON object or array.''.FormatWith(\\nCultureInfo.InvariantCulture, reader.TokenType));", span="92-92"];
m6_5 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="JsonContract contract = Serializer.ContractResolver.ResolveContract(objectType)", span="59-59"];
m6_11 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Cannot populate JSON array onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="69-69"];
m6_23 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="throw new JsonSerializationException(''Cannot populate JSON object onto type '{0}'.''.FormatWith(CultureInfo.InvariantCulture, objectType));", span="88-88"];
m6_9 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract is JsonArrayContract", span="66-66"];
m6_19 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract is JsonDictionaryContract", span="83-83"];
m6_21 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="contract is JsonObjectContract", span="85-85"];
m6_30 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateCollectionWrapper(object)", span="391-391"];
m6_25 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="Exit Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", span="53-53"];
m6_14 [cluster="Newtonsoft.Json.Serialization.JsonSerializerInternalReader.Populate(Newtonsoft.Json.JsonReader, object)", file="JsonSerializerInternalReader.cs", label="string id = null", span="75-75"];
m6_37 [cluster="Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", file="JsonSerializerInternalReader.cs", label="Entry Newtonsoft.Json.Utilities.CollectionUtils.CreateDictionaryWrapper(object)", span="446-446"];
m6_400 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="682-695"];
m6_560 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label=p, span="919-919"];
m6_561 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="919-919"];
m6_563 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="(object) null", span="919-919"];
m6_564 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="919-919"];
m6_566 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="kv.Key.Name", span="924-924"];
m6_567 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="924-924"];
m6_655 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label=m, span="1083-1083"];
m6_656 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1083-1083"];
m6_658 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="PropertyPresence.None", span="1083-1083"];
m6_659 [cluster="lambda expression", file="JsonSerializerInternalReader.cs", label="Exit lambda expression", span="1083-1083"];
m7_156 [cluster="Newtonsoft.Json.JsonTextReader.PeekNext()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.PeekNext()", span="298-298"];
m7_157 [cluster="Newtonsoft.Json.JsonTextReader.PeekNext()", file="JsonTextReader.cs", label="return _reader.Peek();", span="300-300"];
m7_158 [cluster="Newtonsoft.Json.JsonTextReader.PeekNext()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.PeekNext()", span="298-298"];
m7_152 [cluster="System.IO.TextReader.Peek()", file="JsonTextReader.cs", label="Entry System.IO.TextReader.Peek()", span="0-0"];
m7_390 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="938-938"];
m7_509 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="MatchValue('u', JsonConvert.Undefined, true)", span="940-940"];
m7_510 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="SetToken(JsonToken.Undefined)", span="942-942"];
m7_511 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Error parsing undefined value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="946-946"];
m7_413 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", span="863-863"];
m7_512 [cluster="Newtonsoft.Json.JsonTextReader.ParseUndefined()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUndefined()", span="938-938"];
m7_257 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken)", span="258-258"];
m7_79 [cluster="Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", span="190-190"];
m7_159 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="309-309"];
m7_160 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="_readType = ReadType.Read", span="311-311"];
m7_161 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="return ReadInternal();", span="312-312"];
m7_162 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.Read()", span="309-309"];
m7_163 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadInternal()", span="392-392"];
m7_89 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadOffset(string)", span="196-196"];
m7_90 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="bool negative = (offsetText[0] == '-')", span="198-198"];
m7_91 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="int hours = int.Parse(offsetText.Substring(1, 2), NumberStyles.Integer, CultureInfo.InvariantCulture)", span="200-200"];
m7_93 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="offsetText.Length >= 5", span="202-202"];
m7_94 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="minutes = int.Parse(offsetText.Substring(3, 2), NumberStyles.Integer, CultureInfo.InvariantCulture)", span="203-203"];
m7_96 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label=negative, span="206-206"];
m7_100 [cluster="string.Substring(int, int)", file="JsonTextReader.cs", label="Entry string.Substring(int, int)", span="0-0"];
m7_92 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="int minutes = 0", span="201-201"];
m7_95 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="TimeSpan offset = TimeSpan.FromHours(hours) + TimeSpan.FromMinutes(minutes)", span="205-205"];
m7_82 [cluster="int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry int.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m7_97 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="offset = offset.Negate()", span="207-207"];
m7_98 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="return offset;", span="209-209"];
m7_101 [cluster="System.TimeSpan.FromHours(double)", file="JsonTextReader.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m7_102 [cluster="System.TimeSpan.FromMinutes(double)", file="JsonTextReader.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m7_103 [cluster="System.TimeSpan.Negate()", file="JsonTextReader.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m7_99 [cluster="Newtonsoft.Json.JsonTextReader.ReadOffset(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadOffset(string)", span="196-196"];
m7_153 [cluster="Newtonsoft.Json.JsonTextReader.HasNext()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.HasNext()", span="293-293"];
m7_154 [cluster="Newtonsoft.Json.JsonTextReader.HasNext()", file="JsonTextReader.cs", label="return (_reader.Peek() != -1);", span="295-295"];
m7_155 [cluster="Newtonsoft.Json.JsonTextReader.HasNext()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.HasNext()", span="293-293"];
m7_231 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", span="440-440"];
m7_232 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label=currentChar, span="444-444"];
m7_252 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="469-469"];
m7_253 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''After parsing a value an unexpected character was encountered: {0}. Line {1}, position {2}.'', \\ncurrentChar, _currentLineNumber, _currentLinePosition);", span="475-475"];
m7_233 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="'}'", span="446-446"];
m7_236 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="']'", span="449-449"];
m7_239 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="')'", span="452-452"];
m7_242 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="'/'", span="455-455"];
m7_245 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="','", span="458-458"];
m7_248 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="' '", span="462-462"];
m7_234 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.EndObject)", span="447-447"];
m7_235 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="return true;", span="448-448"];
m7_256 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", span="440-440"];
m7_237 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="450-450"];
m7_238 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="return true;", span="451-451"];
m7_240 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.EndConstructor)", span="453-453"];
m7_241 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="return true;", span="454-454"];
m7_243 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="ParseComment()", span="456-456"];
m7_244 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="return true;", span="457-457"];
m7_258 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseComment()", span="804-804"];
m7_246 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="SetStateBasedOnCurrent()", span="460-460"];
m7_247 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="return false;", span="461-461"];
m7_259 [cluster="Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetStateBasedOnCurrent()", span="342-342"];
m7_249 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="StringUtils.Tab", span="463-463"];
m7_250 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="464-464"];
m7_251 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="465-465"];
m7_254 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="(currentChar = MoveNext()) != '\0' || !_end", span="479-479"];
m7_260 [cluster="char.IsWhiteSpace(char)", file="JsonTextReader.cs", label="Entry char.IsWhiteSpace(char)", span="0-0"];
m7_255 [cluster="Newtonsoft.Json.JsonTextReader.ParsePostValue(char)", file="JsonTextReader.cs", label="return false;", span="481-481"];
m7_78 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MoveNext()", span="265-265"];
m7_32 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseDate(string)", span="212-212"];
m7_104 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="string value = text.Substring(6, text.Length - 8)", span="214-214"];
m7_105 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="DateTimeKind kind = DateTimeKind.Utc", span="215-215"];
m7_106 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="int index = value.IndexOf('+', 1)", span="217-217"];
m7_108 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="index = value.IndexOf('-', 1)", span="220-220"];
m7_112 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="offset = ReadOffset(value.Substring(index))", span="227-227"];
m7_113 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="value = value.Substring(0, index)", span="228-228"];
m7_114 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="long javaScriptTicks = long.Parse(value, NumberStyles.Integer, CultureInfo.InvariantCulture)", span="231-231"];
m7_119 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label=kind, span="245-245"];
m7_107 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="index == -1", span="219-219"];
m7_110 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="index != -1", span="224-224"];
m7_127 [cluster="string.IndexOf(char, int)", file="JsonTextReader.cs", label="Entry string.IndexOf(char, int)", span="0-0"];
m7_109 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="TimeSpan offset = TimeSpan.Zero", span="222-222"];
m7_117 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="SetToken(JsonToken.Date, new DateTimeOffset(utcDateTime.Add(offset).Ticks, offset))", span="238-238"];
m7_111 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="kind = DateTimeKind.Local", span="226-226"];
m7_128 [cluster="string.Substring(int)", file="JsonTextReader.cs", label="Entry string.Substring(int)", span="0-0"];
m7_115 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="DateTime utcDateTime = JsonConvert.ConvertJavaScriptTicksToDateTime(javaScriptTicks)", span="233-233"];
m7_129 [cluster="long.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry long.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m7_116 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsDateTimeOffset", span="236-236"];
m7_121 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="dateTime = DateTime.SpecifyKind(utcDateTime.ToLocalTime(), DateTimeKind.Unspecified)", span="248-248"];
m7_123 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="dateTime = utcDateTime.ToLocalTime()", span="251-251"];
m7_124 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="dateTime = utcDateTime", span="254-254"];
m7_130 [cluster="Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonConvert.ConvertJavaScriptTicksToDateTime(long)", span="200-200"];
m7_118 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="DateTime dateTime", span="243-243"];
m7_131 [cluster="System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", file="JsonTextReader.cs", label="Entry System.DateTimeOffset.DateTimeOffset(long, System.TimeSpan)", span="0-0"];
m7_126 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseDate(string)", span="212-212"];
m7_132 [cluster="System.DateTime.Add(System.TimeSpan)", file="JsonTextReader.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m7_28 [cluster="Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.SetToken(Newtonsoft.Json.JsonToken, object)", span="268-268"];
m7_120 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="DateTimeKind.Unspecified", span="247-247"];
m7_122 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="DateTimeKind.Local", span="250-250"];
m7_125 [cluster="Newtonsoft.Json.JsonTextReader.ParseDate(string)", file="JsonTextReader.cs", label="SetToken(JsonToken.Date, dateTime)", span="258-258"];
m7_133 [cluster="System.DateTime.ToLocalTime()", file="JsonTextReader.cs", label="Entry System.DateTime.ToLocalTime()", span="0-0"];
m7_134 [cluster="System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", file="JsonTextReader.cs", label="Entry System.DateTime.SpecifyKind(System.DateTime, System.DateTimeKind)", span="0-0"];
m7_529 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1001-1001"];
m7_530 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="base.Close()", span="1003-1003"];
m7_531 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="CloseInput && _reader != null", span="1005-1005"];
m7_536 [cluster="Newtonsoft.Json.JsonReader.Close()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReader.Close()", span="448-448"];
m7_532 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="_reader.Close()", span="1006-1006"];
m7_533 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="_buffer != null", span="1008-1008"];
m7_537 [cluster="System.IO.TextReader.Close()", file="JsonTextReader.cs", label="Entry System.IO.TextReader.Close()", span="0-0"];
m7_534 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="_buffer.Clear()", span="1009-1009"];
m7_535 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.Close()", span="1001-1001"];
m7_538 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Clear()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Clear()", span="67-67"];
m7_191 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="373-373"];
m7_192 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="_readType = ReadType.ReadAsDateTimeOffset", span="375-375"];
m7_193 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="!ReadInternal()", span="379-379"];
m7_194 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected end when reading date: Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="380-380"];
m7_195 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="TokenType == JsonToken.Comment", span="381-381"];
m7_201 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="TokenType == JsonToken.String && DateTimeOffset.TryParse((string)Value, Culture, DateTimeStyles.None, out dt)", span="399-399"];
m7_196 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="TokenType == JsonToken.Null", span="383-383"];
m7_197 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="return null;", span="384-384"];
m7_198 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="TokenType == JsonToken.Date", span="385-385"];
m7_199 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="return (DateTimeOffset)Value;", span="386-386"];
m7_200 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected token when reading date: {0}. Line {1}, position {2}.'', TokenType, _currentLineNumber, _\\ncurrentLinePosition);", span="388-388"];
m7_202 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="SetToken(JsonToken.Date, dt)", span="401-401"];
m7_204 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected token when reading date: {0}. Line {1}, position {2}.'', TokenType, _currentLineNumber, _\\ncurrentLinePosition);", span="405-405"];
m7_203 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReader.cs", label="return dt;", span="402-402"];
m7_206 [cluster="System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", file="JsonTextReader.cs", label="Entry System.DateTimeOffset.TryParse(string, System.IFormatProvider, System.Globalization.DateTimeStyles, out System.DateTimeOffset)", span="0-0"];
m7_228 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadInternal()", span="392-392"];
m7_205 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="currentChar = _lastChar.Value", span="399-399"];
m7_207 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="currentChar = MoveNext()", span="404-404"];
m7_135 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="int value = _reader.Read()", span="267-267"];
m7_136 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label=value, span="269-269"];
m7_149 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="return (char)value;", span="290-290"];
m7_151 [cluster="System.IO.TextReader.Read()", file="JsonTextReader.cs", label="Entry System.IO.TextReader.Read()", span="0-0"];
m7_137 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="-1", span="271-271"];
m7_140 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label=CarriageReturnValue, span="274-274"];
m7_145 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label=LineFeedValue, span="281-281"];
m7_148 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="_currentLinePosition++", span="286-286"];
m7_138 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="_end = true", span="272-272"];
m7_139 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="return '\0';", span="273-273"];
m7_150 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MoveNext()", span="265-265"];
m7_141 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="_reader.Peek() == LineFeedValue", span="275-275"];
m7_142 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="_reader.Read()", span="276-276"];
m7_143 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="_currentLineNumber++", span="278-278"];
m7_144 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="_currentLinePosition = 0", span="279-279"];
m7_146 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="_currentLineNumber++", span="282-282"];
m7_147 [cluster="Newtonsoft.Json.JsonTextReader.MoveNext()", file="JsonTextReader.cs", label="_currentLinePosition = 0", span="283-283"];
m7_453 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="char currentChar = MoveNext()", span="808-808"];
m7_454 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="currentChar == '*'", span="810-810"];
m7_455 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="(currentChar = MoveNext()) != '\0' || !_end", span="812-812"];
m7_462 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Error parsing comment. Expected: *. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="837-837"];
m7_456 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="currentChar == '*'", span="814-814"];
m7_461 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_buffer.Append(currentChar)", span="831-831"];
m7_463 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="SetToken(JsonToken.Comment, _buffer.ToString())", span="840-840"];
m7_457 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="(currentChar = MoveNext()) != '\0' || !_end", span="816-816"];
m7_458 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="currentChar == '/'", span="818-818"];
m7_460 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_buffer.Append(currentChar)", span="825-825"];
m7_459 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_buffer.Append('*')", span="824-824"];
m7_80 [cluster="Newtonsoft.Json.Utilities.StringBuffer.Append(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.Append(char)", span="55-55"];
m7_465 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseComment()", span="804-804"];
m7_464 [cluster="Newtonsoft.Json.JsonTextReader.ParseComment()", file="JsonTextReader.cs", label="_buffer.Position = 0", span="842-842"];
m7_29 [cluster="Newtonsoft.Json.Utilities.StringBuffer.ToString()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.ToString()", span="82-82"];
m7_385 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="699-699"];
m7_400 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="MatchValue('n', ''new'', true)", span="701-701"];
m7_401 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="char currentChar = MoveNext()", span="703-703"];
m7_412 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseConstructor()", span="699-699"];
m7_402 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="EatWhitespace(currentChar, true, out currentChar)", span="705-705"];
m7_403 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="char.IsLetter(currentChar)", span="707-707"];
m7_404 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_buffer.Append(currentChar)", span="709-709"];
m7_406 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="EatWhitespace(currentChar, false, out currentChar)", span="713-713"];
m7_300 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", span="684-684"];
m7_414 [cluster="char.IsLetter(char)", file="JsonTextReader.cs", label="Entry char.IsLetter(char)", span="0-0"];
m7_405 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar = MoveNext()", span="710-710"];
m7_407 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="currentChar != '('", span="715-715"];
m7_408 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected character while parsing constructor: {0}. Line {1}, position {2}.'', currentChar, _\\ncurrentLineNumber, _currentLinePosition);", span="716-716"];
m7_409 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="string constructorName = _buffer.ToString()", span="718-718"];
m7_410 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="_buffer.Position = 0", span="719-719"];
m7_411 [cluster="Newtonsoft.Json.JsonTextReader.ParseConstructor()", file="JsonTextReader.cs", label="SetToken(JsonToken.StartConstructor, constructorName)", span="721-721"];
m7_389 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumber(char)", span="726-726"];
m7_415 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="char currentChar = firstChar", span="728-728"];
m7_425 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="bool nonBase10 = (firstChar == '0' && !number.StartsWith(''0.'', StringComparison.OrdinalIgnoreCase))", span="750-750"];
m7_416 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="bool end = false", span="731-731"];
m7_417 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="IsSeperator(currentChar)", span="734-734"];
m7_419 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="_lastChar = currentChar", span="737-737"];
m7_420 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="_buffer.Append(currentChar)", span="741-741"];
m7_421 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="!end && ((currentChar = MoveNext()) != '\0' || !_end)", span="744-744"];
m7_418 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="end = true", span="736-736"];
m7_445 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.IsSeperator(char)", span="882-882"];
m7_422 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="string number = _buffer.ToString()", span="746-746"];
m7_423 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="object numberValue", span="747-747"];
m7_428 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="long integer = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n            ? Convert.ToInt64(number, 16)\r\n            : \\nConvert.ToInt64(number, 8)", span="757-759"];
m7_430 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="numberValue = decimal.Parse(number, NumberStyles.Number | NumberStyles.AllowExponent, CultureInfo.InvariantCulture)", span="765-765"];
m7_433 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="numberValue = number.StartsWith(''0x'', StringComparison.OrdinalIgnoreCase)\r\n            ? Convert.ToInt64(number, 16)\r\n            : \\nConvert.ToInt64(number, 8)", span="774-776"];
m7_435 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="number.IndexOf(''.'', StringComparison.OrdinalIgnoreCase) != -1 || number.IndexOf(''e'', StringComparison.OrdinalIgnoreCase) != \\n-1", span="779-779"];
m7_436 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="numberValue = Convert.ToDouble(number, CultureInfo.InvariantCulture)", span="781-781"];
m7_438 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="numberValue = Convert.ToInt64(number, CultureInfo.InvariantCulture)", span="788-788"];
m7_440 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="throw new JsonReaderException(''JSON integer {0} is too large or small for an Int64.''.FormatWith(CultureInfo.InvariantCulture, \\nnumber), ex);", span="792-792"];
m7_424 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="JsonToken numberType", span="748-748"];
m7_30 [cluster="string.StartsWith(string, System.StringComparison)", file="JsonTextReader.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m7_426 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsDecimal", span="752-752"];
m7_427 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label=nonBase10, span="754-754"];
m7_432 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label=nonBase10, span="772-772"];
m7_446 [cluster="System.Convert.ToInt64(string, int)", file="JsonTextReader.cs", label="Entry System.Convert.ToInt64(string, int)", span="0-0"];
m7_429 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="numberValue = Convert.ToDecimal(integer)", span="761-761"];
m7_431 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="numberType = JsonToken.Float", span="768-768"];
m7_443 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="SetToken(numberType, numberValue)", span="801-801"];
m7_447 [cluster="System.Convert.ToDecimal(long)", file="JsonTextReader.cs", label="Entry System.Convert.ToDecimal(long)", span="0-0"];
m7_448 [cluster="decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry decimal.Parse(string, System.Globalization.NumberStyles, System.IFormatProvider)", span="0-0"];
m7_442 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="_buffer.Position = 0", span="799-799"];
m7_434 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="777-777"];
m7_449 [cluster="string.IndexOf(string, System.StringComparison)", file="JsonTextReader.cs", label="Entry string.IndexOf(string, System.StringComparison)", span="0-0"];
m7_450 [cluster="System.Convert.ToDouble(string, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry System.Convert.ToDouble(string, System.IFormatProvider)", span="0-0"];
m7_437 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="numberType = JsonToken.Float", span="782-782"];
m7_439 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label=OverflowException, span="790-790"];
m7_441 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="numberType = JsonToken.Integer", span="795-795"];
m7_451 [cluster="System.Convert.ToInt64(string, System.IFormatProvider)", file="JsonTextReader.cs", label="Entry System.Convert.ToInt64(string, System.IFormatProvider)", span="0-0"];
m7_444 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumber(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumber(char)", span="726-726"];
m7_452 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception)", span="74-74"];
m7_87 [cluster="string.FormatWith(System.IFormatProvider, params object[])", file="JsonTextReader.cs", label="Entry string.FormatWith(System.IFormatProvider, params object[])", span="48-48"];
m7_208 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="currentChar == '\0' && _end", span="407-407"];
m7_213 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Array", span="414-414"];
m7_175 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", color=green, community=0, file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", prediction=9, span="353-353"];
m7_176 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="_readType = ReadType.ReadAsDecimal", span="345-345"];
m7_177 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="!ReadInternal()", span="349-349"];
m7_178 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected end when reading decimal: Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="350-350"];
m7_179 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="TokenType == JsonToken.Comment", span="351-351"];
m7_189 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", span="343-343"];
m7_180 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="TokenType == JsonToken.Null", span="353-353"];
m7_181 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="return null;", span="354-354"];
m7_182 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="TokenType == JsonToken.Float", span="355-355"];
m7_183 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="return (decimal?)Value;", span="356-356"];
m7_184 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="decimal d", span="358-358"];
m7_190 [cluster="decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", file="JsonTextReader.cs", label="Entry decimal.TryParse(string, System.Globalization.NumberStyles, System.IFormatProvider, out decimal)", span="0-0"];
m7_186 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, d)", span="361-361"];
m7_187 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="return d;", span="362-362"];
m7_188 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDecimal()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected token when reading decimal: {0}. Line {1}, position {2}.'', TokenType, _currentLineNumber, _\\ncurrentLinePosition);", span="365-365"];
m7_474 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReader.cs", label="bool match = MatchValue(firstChar, value)", span="866-866"];
m7_475 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReader.cs", label="!noTrailingNonSeperatorCharacters", span="868-868"];
m7_476 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReader.cs", label="return match;", span="870-870"];
m7_479 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReader.cs", label="bool matchAndNoTrainingNonSeperatorCharacters = (match && (next == '\0' || IsSeperator(next)))", span="876-876"];
m7_466 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", span="845-845"];
m7_477 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReader.cs", label="int c = PeekNext()", span="874-874"];
m7_481 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", span="863-863"];
m7_478 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReader.cs", label="char next = (c != -1) ? (char) c : '\0'", span="875-875"];
m7_480 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string, bool)", file="JsonTextReader.cs", label="return matchAndNoTrainingNonSeperatorCharacters;", span="878-878"];
m7_482 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label=c, span="884-884"];
m7_497 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="char.IsWhiteSpace(c)", span="903-903"];
m7_483 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="'}'", span="886-886"];
m7_487 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="'/'", span="890-890"];
m7_489 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="')'", span="893-893"];
m7_492 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="' '", span="897-897"];
m7_484 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="']'", span="887-887"];
m7_485 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="','", span="888-888"];
m7_486 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return true;", span="889-889"];
m7_500 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.IsSeperator(char)", span="882-882"];
m7_488 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return (HasNext() && PeekNext() == '*');", span="892-892"];
m7_490 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="CurrentState == State.Constructor || CurrentState == State.ConstructorStart", span="894-894"];
m7_491 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return true;", span="895-895"];
m7_499 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return false;", span="908-908"];
m7_493 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="StringUtils.Tab", span="898-898"];
m7_494 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="899-899"];
m7_495 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="900-900"];
m7_496 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return true;", span="901-901"];
m7_498 [cluster="Newtonsoft.Json.JsonTextReader.IsSeperator(char)", file="JsonTextReader.cs", label="return true;", span="904-904"];
m7_277 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseProperty(char)", span="518-518"];
m7_278 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="char currentChar = firstChar", span="520-520"];
m7_279 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="char quoteChar", span="521-521"];
m7_280 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="ValidIdentifierChar(currentChar)", span="523-523"];
m7_282 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="currentChar = ParseUnquotedProperty(currentChar)", span="526-526"];
m7_283 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="currentChar == '''' || currentChar == '\''", span="528-528"];
m7_284 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="quoteChar = currentChar", span="530-530"];
m7_287 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Invalid property identifier character: {0}. Line {1}, position {2}.'', currentChar, _currentLineNumber, _\\ncurrentLinePosition);", span="536-536"];
m7_288 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="currentChar != ':'", span="539-539"];
m7_294 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="QuoteChar = quoteChar", span="551-551"];
m7_281 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="quoteChar = '\0'", span="525-525"];
m7_298 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="557-557"];
m7_299 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", span="562-562"];
m7_285 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="ReadStringIntoBuffer(quoteChar)", span="531-531"];
m7_286 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="currentChar = MoveNext()", span="532-532"];
m7_25 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="108-108"];
m7_297 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseProperty(char)", span="518-518"];
m7_289 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="currentChar = MoveNext()", span="541-541"];
m7_293 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.PropertyName, _buffer.ToString())", span="550-550"];
m7_290 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="EatWhitespace(currentChar, false, out currentChar)", span="544-544"];
m7_291 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="currentChar != ':'", span="546-546"];
m7_292 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Invalid character after parsing property name. Expected ':' but got: {0}. Line {1}, position {\\n2}.'', currentChar, _currentLineNumber, _currentLinePosition);", span="547-547"];
m7_295 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="_buffer.Position = 0", span="552-552"];
m7_296 [cluster="Newtonsoft.Json.JsonTextReader.ParseProperty(char)", file="JsonTextReader.cs", label="return true;", span="554-554"];
m7_217 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return ParseValue(currentChar);", span="418-418"];
m7_221 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return ParseObject(currentChar);", span="423-423"];
m7_223 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="ParsePostValue(currentChar)", span="427-427"];
m7_209 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return false;", span="408-408"];
m7_210 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label=CurrentState, span="410-410"];
m7_211 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Start", span="412-412"];
m7_218 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Complete", span="419-419"];
m7_219 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Object", span="421-421"];
m7_222 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.PostValue", span="424-424"];
m7_225 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Closed", span="430-430"];
m7_226 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Error", span="432-432"];
m7_227 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected state: {0}. Line {1}, position {2}.'', CurrentState, _currentLineNumber, _currentLinePosition);", span="435-435"];
m7_212 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Property", span="413-413"];
m7_214 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.ArrayStart", span="415-415"];
m7_215 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.Constructor", span="416-416"];
m7_216 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.ConstructorStart", span="417-417"];
m7_229 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseValue(char)", span="588-588"];
m7_220 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="State.ObjectStart", span="422-422"];
m7_230 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseObject(char)", span="484-484"];
m7_224 [cluster="Newtonsoft.Json.JsonTextReader.ReadInternal()", file="JsonTextReader.cs", label="return true;", span="428-428"];
m7_301 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs", label="return (char.IsLetterOrDigit(value) || value == '_' || value == '$');", span="559-559"];
m7_302 [cluster="Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ValidIdentifierChar(char)", span="557-557"];
m7_303 [cluster="char.IsLetterOrDigit(char)", file="JsonTextReader.cs", label="Entry char.IsLetterOrDigit(char)", span="0-0"];
m7_383 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseFalse()", span="950-950"];
m7_513 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="MatchValue('f', JsonConvert.False, true)", span="952-952"];
m7_514 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="SetToken(JsonToken.Boolean, false)", span="954-954"];
m7_515 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Error parsing boolean value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="958-958"];
m7_516 [cluster="Newtonsoft.Json.JsonTextReader.ParseFalse()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseFalse()", span="950-950"];
m7_304 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="_buffer.Append(firstChar)", span="565-565"];
m7_305 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="char currentChar", span="567-567"];
m7_306 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="(currentChar = MoveNext()) != '\0' || !_end", span="569-569"];
m7_307 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar) || currentChar == ':'", span="571-571"];
m7_308 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="return currentChar;", span="573-573"];
m7_309 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="ValidIdentifierChar(currentChar)", span="575-575"];
m7_310 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="_buffer.Append(currentChar)", span="577-577"];
m7_311 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Invalid JavaScript property identifier character: {0}. Line {1}, position {2}.'', currentChar, _\\ncurrentLineNumber, _currentLinePosition);", span="581-581"];
m7_312 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected end when parsing unquoted property name. Line {0}, position {1}.'', _currentLineNumber, _\\ncurrentLinePosition);", span="585-585"];
m7_313 [cluster="Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseUnquotedProperty(char)", span="562-562"];
m7_9 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseString(char)", span="72-72"];
m7_10 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="ReadStringIntoBuffer(quote)", span="74-74"];
m7_23 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="QuoteChar = quote", span="103-103"];
m7_11 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_readType == ReadType.ReadAsBytes", span="76-76"];
m7_12 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="byte[] data", span="78-78"];
m7_18 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="string text = _buffer.ToString()", span="93-93"];
m7_13 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_buffer.Position == 0", span="79-79"];
m7_14 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="data = new byte[0]", span="81-81"];
m7_15 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="data = Convert.FromBase64CharArray(_buffer.GetInternalBuffer(), 0, _buffer.Position)", span="85-85"];
m7_17 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.Bytes, data)", span="89-89"];
m7_16 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_buffer.Position = 0", span="86-86"];
m7_26 [cluster="Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.GetInternalBuffer()", span="93-93"];
m7_27 [cluster="System.Convert.FromBase64CharArray(char[], int, int)", file="JsonTextReader.cs", label="Entry System.Convert.FromBase64CharArray(char[], int, int)", span="0-0"];
m7_24 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseString(char)", span="72-72"];
m7_19 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="_buffer.Position = 0", span="94-94"];
m7_20 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="text.StartsWith(''/Date('', StringComparison.Ordinal) && text.EndsWith('')/'', StringComparison.Ordinal)", span="96-96"];
m7_21 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="ParseDate(text)", span="98-98"];
m7_22 [cluster="Newtonsoft.Json.JsonTextReader.ParseString(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.String, text)", span="102-102"];
m7_31 [cluster="string.EndsWith(string, System.StringComparison)", file="JsonTextReader.cs", label="Entry string.EndsWith(string, System.StringComparison)", span="0-0"];
m7_261 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label=currentChar, span="488-488"];
m7_272 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="503-503"];
m7_273 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="return ParseProperty(currentChar);", span="509-509"];
m7_262 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="'}'", span="490-490"];
m7_265 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="'/'", span="493-493"];
m7_268 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="' '", span="496-496"];
m7_263 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.EndObject)", span="491-491"];
m7_264 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="return true;", span="492-492"];
m7_276 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseObject(char)", span="484-484"];
m7_266 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="ParseComment()", span="494-494"];
m7_267 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="return true;", span="495-495"];
m7_269 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="StringUtils.Tab", span="497-497"];
m7_270 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="498-498"];
m7_271 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="499-499"];
m7_274 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="(currentChar = MoveNext()) != '\0' || !_end", span="513-513"];
m7_275 [cluster="Newtonsoft.Json.JsonTextReader.ParseObject(char)", file="JsonTextReader.cs", label="return false;", span="515-515"];
m7_387 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="974-974"];
m7_521 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="MatchValue('I', JsonConvert.PositiveInfinity, true)", span="976-976"];
m7_522 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.PositiveInfinity)", span="978-978"];
m7_523 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Error parsing positive infinity value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="982-982"];
m7_524 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberPositiveInfinity()", span="974-974"];
m7_539 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1018-1018"];
m7_540 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs", label="return true;", span="1020-1020"];
m7_541 [cluster="Newtonsoft.Json.JsonTextReader.HasLineInfo()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.HasLineInfo()", span="1018-1018"];
m7_314 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label=currentChar, span="592-592"];
m7_317 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseString(currentChar)", span="596-596"];
m7_332 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected character encountered while parsing value: {0}. Line {1}, position {2}.'', currentChar, _\\ncurrentLineNumber, _currentLinePosition);", span="614-614"];
m7_344 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseNumber(currentChar)", span="631-631"];
m7_374 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="char.IsWhiteSpace(currentChar)", span="664-664"];
m7_375 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="char.IsNumber(currentChar) || currentChar == '-' || currentChar == '.'", span="668-668"];
m7_376 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseNumber(currentChar)", span="670-670"];
m7_378 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected character encountered while parsing value: {0}. Line {1}, position {2}.'', currentChar, _\\ncurrentLineNumber, _currentLinePosition);", span="675-675"];
m7_315 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="''''", span="594-594"];
m7_319 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'t'", span="598-598"];
m7_322 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'f'", span="601-601"];
m7_325 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'n'", span="604-604"];
m7_335 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'N'", span="621-621"];
m7_338 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'I'", span="624-624"];
m7_341 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'-'", span="627-627"];
m7_346 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'/'", span="633-633"];
m7_349 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'u'", span="636-636"];
m7_352 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'{'", span="639-639"];
m7_355 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'['", span="642-642"];
m7_358 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'}'", span="645-645"];
m7_361 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="']'", span="648-648"];
m7_364 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="','", span="651-651"];
m7_367 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="')'", span="654-654"];
m7_370 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="' '", span="657-657"];
m7_316 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="'\''", span="595-595"];
m7_318 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="597-597"];
m7_381 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseValue(char)", span="588-588"];
m7_320 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseTrue()", span="599-599"];
m7_321 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="600-600"];
m7_382 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseTrue()", span="911-911"];
m7_323 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseFalse()", span="602-602"];
m7_324 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="603-603"];
m7_326 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="HasNext()", span="605-605"];
m7_327 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="char next = (char)PeekNext()", span="607-607"];
m7_333 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected end. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="618-618"];
m7_328 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="next == 'u'", span="609-609"];
m7_330 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="next == 'e'", span="611-611"];
m7_329 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseNull()", span="610-610"];
m7_334 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="620-620"];
m7_384 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNull()", span="926-926"];
m7_331 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseConstructor()", span="612-612"];
m7_336 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseNumberNaN()", span="622-622"];
m7_337 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="623-623"];
m7_386 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="986-986"];
m7_339 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseNumberPositiveInfinity()", span="625-625"];
m7_340 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="626-626"];
m7_342 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="PeekNext() == 'I'", span="628-628"];
m7_343 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseNumberNegativeInfinity()", span="629-629"];
m7_345 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="632-632"];
m7_388 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="962-962"];
m7_347 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseComment()", span="634-634"];
m7_348 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="635-635"];
m7_350 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="ParseUndefined()", span="637-637"];
m7_351 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="638-638"];
m7_353 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.StartObject)", span="640-640"];
m7_354 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="641-641"];
m7_356 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.StartArray)", span="643-643"];
m7_357 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="644-644"];
m7_359 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.EndObject)", span="646-646"];
m7_360 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="647-647"];
m7_362 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.EndArray)", span="649-649"];
m7_363 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="650-650"];
m7_365 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.Undefined)", span="652-652"];
m7_366 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="653-653"];
m7_368 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="SetToken(JsonToken.EndConstructor)", span="655-655"];
m7_369 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="656-656"];
m7_371 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="StringUtils.Tab", span="658-658"];
m7_372 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="StringUtils.LineFeed", span="659-659"];
m7_373 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="StringUtils.CarriageReturn", span="660-660"];
m7_379 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="(currentChar = MoveNext()) != '\0' || !_end", span="679-679"];
m7_391 [cluster="char.IsNumber(char)", file="JsonTextReader.cs", label="Entry char.IsNumber(char)", span="0-0"];
m7_377 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return true;", span="671-671"];
m7_380 [cluster="Newtonsoft.Json.JsonTextReader.ParseValue(char)", file="JsonTextReader.cs", label="return false;", span="681-681"];
m7_505 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="MatchValue('n', JsonConvert.Null, true)", span="928-928"];
m7_506 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="SetToken(JsonToken.Null)", span="930-930"];
m7_507 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Error parsing null value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="934-934"];
m7_508 [cluster="Newtonsoft.Json.JsonTextReader.ParseNull()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNull()", span="926-926"];
m7_501 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="MatchValue('t', JsonConvert.True, true)", span="916-916"];
m7_502 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="SetToken(JsonToken.Boolean, true)", span="918-918"];
m7_503 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Error parsing boolean value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="922-922"];
m7_504 [cluster="Newtonsoft.Json.JsonTextReader.ParseTrue()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseTrue()", span="911-911"];
m7_467 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReader.cs", label="char currentChar = firstChar", span="847-847"];
m7_469 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReader.cs", label="currentChar != value[i]", span="852-852"];
m7_471 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReader.cs", label="i < value.Length && ((currentChar = MoveNext()) != '\0' || !_end)", span="858-858"];
m7_472 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReader.cs", label="return (i == value.Length);", span="860-860"];
m7_468 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReader.cs", label="int i = 0", span="849-849"];
m7_470 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReader.cs", label="i++", span="856-856"];
m7_473 [cluster="Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.MatchValue(char, string)", span="845-845"];
m7_392 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReader.cs", label="bool whitespace = false", span="686-686"];
m7_393 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReader.cs", label="char currentChar = initialChar", span="687-687"];
m7_398 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReader.cs", label="return (!oneOrMore || whitespace);", span="696-696"];
m7_394 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReader.cs", label="currentChar == ' ' || char.IsWhiteSpace(currentChar)", span="688-688"];
m7_397 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReader.cs", label="finalChar = currentChar", span="694-694"];
m7_395 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReader.cs", label="whitespace = true", span="690-690"];
m7_396 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReader.cs", label="currentChar = MoveNext()", span="691-691"];
m7_399 [cluster="Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.EatWhitespace(char, bool, out char)", span="684-684"];
m7_525 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="MatchValue('N', JsonConvert.NaN, true)", span="988-988"];
m7_526 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.NaN)", span="990-990"];
m7_527 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Error parsing NaN value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="994-994"];
m7_528 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNaN()", span="986-986"];
m7_164 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="321-321"];
m7_165 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="_readType = ReadType.ReadAsBytes", span="323-323"];
m7_174 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="321-321"];
m7_169 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="TokenType == JsonToken.Null", span="331-331"];
m7_170 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="return null;", span="332-332"];
m7_171 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="TokenType == JsonToken.Bytes", span="333-333"];
m7_172 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="return (byte[]) Value;", span="334-334"];
m7_173 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected token when reading bytes: {0}. Line {1}, position {2}.'', TokenType, _currentLineNumber, _\\ncurrentLinePosition);", span="336-336"];
m7_84 [cluster="Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", file="JsonTextReader.cs", label="string message = format.FormatWith(CultureInfo.InvariantCulture, args)", span="192-192"];
m7_85 [cluster="Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", file="JsonTextReader.cs", label="return new JsonReaderException(message, null, _currentLineNumber, _currentLinePosition);", span="193-193"];
m7_88 [cluster="Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonReaderException.JsonReaderException(string, System.Exception, int, int)", span="93-93"];
m7_86 [cluster="Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.CreateJsonReaderException(string, params object[])", span="190-190"];
m7_0 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="62-62"];
m7_1 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="reader == null", span="64-64"];
m7_3 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_reader = reader", span="67-67"];
m7_2 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="throw new ArgumentNullException(''reader'');", span="65-65"];
m7_7 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JsonTextReader.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_6 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="62-62"];
m7_4 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_buffer = new StringBuffer(4096)", span="68-68"];
m7_8 [cluster="Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", file="JsonTextReader.cs", label="Entry Newtonsoft.Json.Utilities.StringBuffer.StringBuffer(int)", span="50-50"];
m7_5 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReader.cs", label="_currentLineNumber = 1", span="69-69"];
m7_517 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="MatchValue('-', JsonConvert.NegativeInfinity, true)", span="964-964"];
m7_518 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="SetToken(JsonToken.Float, double.NegativeInfinity)", span="966-966"];
m7_519 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Error parsing negative infinity value. Line {0}, position {1}.'', _currentLineNumber, _currentLinePosition);", span="970-970"];
m7_520 [cluster="Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ParseNumberNegativeInfinity()", span="962-962"];
m7_33 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=true, span="110-110"];
m7_38 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unterminated string. Expected delimiter: {0}. Line {1}, position {2}.'', quote, _currentLineNumber, _\\ncurrentLinePosition);", span="118-118"];
m7_70 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unterminated string. Expected delimiter: {0}. Line {1}, position {2}.'', quote, _currentLineNumber, _\\ncurrentLinePosition);", span="169-169"];
m7_73 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="currentChar == quote", span="174-174"];
m7_34 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char currentChar = MoveNext()", span="112-112"];
m7_77 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="Exit Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", span="108-108"];
m7_35 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=currentChar, span="114-114"];
m7_36 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\0'", span="116-116"];
m7_40 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\\'", span="122-122"];
m7_71 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="''''", span="172-172"];
m7_76 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append(currentChar)", span="184-184"];
m7_37 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=_end, span="117-117"];
m7_39 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append('\0')", span="120-120"];
m7_41 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="(currentChar = MoveNext()) != '\0' || !_end", span="123-123"];
m7_42 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label=currentChar, span="125-125"];
m7_58 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append(currentChar)", span="148-148"];
m7_69 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Bad JSON escape sequence: {0}. Line {1}, position {2}.'', @''\'' + currentChar, _currentLineNumber, _\\ncurrentLinePosition);", span="164-164"];
m7_75 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append(currentChar)", span="180-180"];
m7_43 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'b'", span="127-127"];
m7_45 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'t'", span="130-130"];
m7_47 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'n'", span="133-133"];
m7_49 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'f'", span="136-136"];
m7_51 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'r'", span="139-139"];
m7_53 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\\'", span="142-142"];
m7_55 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="''''", span="145-145"];
m7_59 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'u'", span="150-150"];
m7_44 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append('\b')", span="128-128"];
m7_46 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append('\t')", span="131-131"];
m7_48 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append('\n')", span="134-134"];
m7_50 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append('\f')", span="137-137"];
m7_52 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append('\r')", span="140-140"];
m7_54 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append('\\')", span="143-143"];
m7_56 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\''", span="146-146"];
m7_57 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'/'", span="147-147"];
m7_60 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char[] hexValues = new char[4]", span="151-151"];
m7_61 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="int i = 0", span="152-152"];
m7_62 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="i < hexValues.Length", span="152-152"];
m7_64 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="hexValues[i] = currentChar", span="155-155"];
m7_67 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="char hexChar = Convert.ToChar(int.Parse(new string(hexValues), NumberStyles.HexNumber, NumberFormatInfo.InvariantInfo))", span="160-160"];
m7_66 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="i++", span="152-152"];
m7_63 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="(currentChar = MoveNext()) != '\0' || !_end", span="154-154"];
m7_65 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="throw CreateJsonReaderException(''Unexpected end while parsing unicode character. Line {0}, position {1}.'', _currentLineNumber, _\\ncurrentLinePosition);", span="157-157"];
m7_83 [cluster="System.Convert.ToChar(int)", file="JsonTextReader.cs", label="Entry System.Convert.ToChar(int)", span="0-0"];
m7_81 [cluster="string.String(char[])", file="JsonTextReader.cs", label="Entry string.String(char[])", span="0-0"];
m7_68 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="_buffer.Append(hexChar)", span="161-161"];
m7_72 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="'\''", span="173-173"];
m7_74 [cluster="Newtonsoft.Json.JsonTextReader.ReadStringIntoBuffer(char)", file="JsonTextReader.cs", label="return;", span="176-176"];
m8_125 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="233-233"];
m8_126 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''h\0i'''))", span="235-235"];
m8_127 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="236-236"];
m8_128 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''h\0i'', reader.Value)", span="238-238"];
m8_24 [cluster="System.IO.StringReader.StringReader(string)", file="JsonTextReaderTest.cs", label="Entry System.IO.StringReader.StringReader(string)", span="0-0"];
m8_13 [cluster="Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.JsonTextReader(System.IO.TextReader)", span="62-62"];
m8_25 [cluster="Newtonsoft.Json.JsonReader.Read()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.Read()", span="217-217"];
m8_129 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNullTerminatorStrings()", span="233-233"];
m8_498 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="781-781"];
m8_499 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946708260000-0631)\/''''}''", span="783-783"];
m8_500 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="785-785"];
m8_501 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="787-787"];
m8_502 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="788-788"];
m8_503 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="790-790"];
m8_504 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="791-791"];
m8_505 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="793-793"];
m8_506 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="794-794"];
m8_507 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="795-795"];
m8_508 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6).Add(TimeSpan.FromMinutes(-31))), reader.Value)", span="796-796"];
m8_509 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="798-798"];
m8_510 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="799-799"];
m8_80 [cluster="Newtonsoft.Json.JsonTextReader.Read()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Read()", span="309-309"];
m8_466 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsDateTimeOffset()", span="373-373"];
m8_469 [cluster="System.TimeSpan.FromHours(double)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m8_468 [cluster="System.DateTime.DateTime(int, int, int)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m8_467 [cluster="System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.DateTimeOffset.DateTimeOffset(System.DateTime, System.TimeSpan)", span="0-0"];
m8_513 [cluster="System.TimeSpan.Add(System.TimeSpan)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.Add(System.TimeSpan)", span="0-0"];
m8_512 [cluster="System.TimeSpan.FromMinutes(double)", file="JsonTextReaderTest.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m8_511 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetWithMinutes()", span="781-781"];
m8_331 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="529-529"];
m8_332 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="string json =\r\n        @''[0.0,0.0,0.1,1.0,1.000001,1E-06,4.94065645841247E-324,Infinity,-Infinity,NaN,1.7976931348623157E+308,\\n-1.7976931348623157E+308,Infinity,-Infinity,NaN]''", span="531-532"];
m8_333 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(json))", span="534-534"];
m8_334 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="536-536"];
m8_335 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="537-537"];
m8_336 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="539-539"];
m8_337 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="540-540"];
m8_338 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="541-541"];
m8_339 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="543-543"];
m8_340 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="544-544"];
m8_341 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.0, jsonReader.Value)", span="545-545"];
m8_342 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="547-547"];
m8_343 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="548-548"];
m8_344 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0.1, jsonReader.Value)", span="549-549"];
m8_345 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="551-551"];
m8_346 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="552-552"];
m8_347 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.0, jsonReader.Value)", span="553-553"];
m8_348 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="555-555"];
m8_349 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="556-556"];
m8_350 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1.000001, jsonReader.Value)", span="557-557"];
m8_351 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="559-559"];
m8_352 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="560-560"];
m8_353 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1E-06, jsonReader.Value)", span="561-561"];
m8_354 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="563-563"];
m8_355 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="564-564"];
m8_356 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4.94065645841247E-324, jsonReader.Value)", span="565-565"];
m8_357 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="567-567"];
m8_358 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="568-568"];
m8_359 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="569-569"];
m8_360 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="571-571"];
m8_361 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="572-572"];
m8_362 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="573-573"];
m8_363 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="575-575"];
m8_364 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="576-576"];
m8_365 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="577-577"];
m8_366 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="579-579"];
m8_367 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="580-580"];
m8_368 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.MaxValue, jsonReader.Value)", span="581-581"];
m8_369 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="583-583"];
m8_370 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="584-584"];
m8_371 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.MinValue, jsonReader.Value)", span="585-585"];
m8_372 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="587-587"];
m8_373 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="588-588"];
m8_374 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.PositiveInfinity, jsonReader.Value)", span="589-589"];
m8_375 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="591-591"];
m8_376 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="592-592"];
m8_377 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NegativeInfinity, jsonReader.Value)", span="593-593"];
m8_378 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="595-595"];
m8_379 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, jsonReader.TokenType)", span="596-596"];
m8_380 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(double.NaN, jsonReader.Value)", span="597-597"];
m8_381 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="599-599"];
m8_382 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="600-600"];
m8_383 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadFloatingPointNumber()", span="529-529"];
m8_529 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", prediction=10, span="826-826"];
m8_530 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''1/30/2011''''}''", prediction=11, span="828-828"];
m8_531 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", prediction=12, span="830-830"];
m8_532 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''en-US'')", prediction=13, span="831-831"];
m8_533 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=12, span="833-833"];
m8_534 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", prediction=12, span="834-834"];
m8_535 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=12, span="836-836"];
m8_536 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", prediction=12, span="837-837"];
m8_537 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", prediction=12, span="839-839"];
m8_538 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", prediction=12, span="840-840"];
m8_539 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", prediction=12, span="841-841"];
m8_540 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", prediction=21, span="843-843"];
m8_542 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=12, span="846-846"];
m8_543 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", prediction=12, span="847-847"];
m8_545 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JsonTextReaderTest.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m8_541 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", prediction=24, span="844-844"];
m8_544 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetUnitedStatesDate()", prediction=25, span="826-826"];
m8_528 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", file="JsonTextReaderTest.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, System.DateTimeKind)", span="0-0"];
m8_151 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="278-278"];
m8_152 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[  ''))", span="280-280"];
m8_153 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="281-281"];
m8_154 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="282-282"];
m8_155 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesNoStartWithUnexpectedEnd()", span="278-278"];
m8_142 [cluster="Newtonsoft.Json.JsonReader.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonReader.ReadAsBytes()", span="223-223"];
m8_384 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="606-606"];
m8_385 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="string json = @''{\r\n    ''''A'''' : true,\r\n    ''''B'''' ''''hello'''', // Notice the colon is missing\r\n    ''''C'''' : ''''\\nbye''''\r\n}''", span="608-612"];
m8_386 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="614-614"];
m8_387 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="616-616"];
m8_388 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="617-617"];
m8_389 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="619-619"];
m8_390 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="620-620"];
m8_391 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="622-622"];
m8_392 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Boolean, reader.TokenType)", span="623-623"];
m8_393 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="reader.Read()", span="625-625"];
m8_394 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.MissingColon()", span="606-606"];
m8_395 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="629-629"];
m8_396 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''''''SGVsbG8gd29ybGQu'''''')", span="631-631"];
m8_397 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(s)", span="632-632"];
m8_398 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="634-634"];
m8_399 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Assert.IsNotNull(data)", span="635-635"];
m8_400 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="string text = Encoding.UTF8.GetString(data, 0, data.Length)", span="637-637"];
m8_403 [cluster="Newtonsoft.Json.JsonTextReader.ReadAsBytes()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.ReadAsBytes()", span="321-321"];
m8_405 [cluster="System.Text.Encoding.GetString(byte[], int, int)", file="JsonTextReaderTest.cs", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
m8_401 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Hello world.'', text)", span="638-638"];
m8_402 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadSingleBytes()", span="629-629"];
m8_186 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="329-329"];
m8_187 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="331-331"];
m8_188 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="332-332"];
m8_149 [cluster="System.Text.Encoding.GetBytes(string)", file="JsonTextReaderTest.cs", label="Entry System.Text.Encoding.GetBytes(string)", span="0-0"];
m8_189 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{num:1,data:''' + Convert.ToBase64String(helloWorldData) + @'''}''))", span="334-334"];
m8_197 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(helloWorldData, data)", span="342-342"];
m8_150 [cluster="System.Convert.ToBase64String(byte[])", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToBase64String(byte[])", span="0-0"];
m8_190 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="335-335"];
m8_191 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="336-336"];
m8_192 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="337-337"];
m8_193 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="338-338"];
m8_194 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="339-339"];
m8_195 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="340-340"];
m8_196 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="341-341"];
m8_198 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="343-343"];
m8_199 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="344-344"];
m8_200 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="345-345"];
m8_201 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="347-347"];
m8_202 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInObject()", span="329-329"];
m8_282 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="453-453"];
m8_283 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="string input = @''[\r\n  NaN,\r\n  Infinity,\r\n  -Infinity\r\n]''", span="455-459"];
m8_284 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="461-461"];
m8_285 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="463-463"];
m8_286 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="465-465"];
m8_287 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="466-466"];
m8_288 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="468-468"];
m8_289 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="469-469"];
m8_290 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NaN)", span="470-470"];
m8_291 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="472-472"];
m8_292 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="473-473"];
m8_293 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.PositiveInfinity)", span="474-474"];
m8_294 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="476-476"];
m8_295 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Float)", span="477-477"];
m8_296 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, double.NegativeInfinity)", span="478-478"];
m8_297 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="480-480"];
m8_298 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="481-481"];
m8_299 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.FloatingPointNonFiniteNumbers()", span="453-453"];
m8_118 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="219-219"];
m8_119 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs", label="new JsonTextReader(null)", span="221-221"];
m8_120 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.NullTextReader()", span="219-219"];
m8_484 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="759-759"];
m8_485 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+06)\\/\''}''", span="761-761"];
m8_486 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="763-763"];
m8_487 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="765-765"];
m8_488 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="766-766"];
m8_489 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="768-768"];
m8_490 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="769-769"];
m8_491 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="771-771"];
m8_492 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="772-772"];
m8_493 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="773-773"];
m8_494 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="774-774"];
m8_495 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="776-776"];
m8_496 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="777-777"];
m8_497 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetHoursOnly()", span="759-759"];
m8_143 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="267-267"];
m8_144 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="269-269"];
m8_145 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="270-270"];
m8_146 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''''' + Convert.ToBase64String(helloWorldData)))", span="272-272"];
m8_147 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="273-273"];
m8_148 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithUnexpectedEnd()", span="267-267"];
m8_138 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="259-259"];
m8_139 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''true''))", span="261-261"];
m8_140 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="reader.ReadAsBytes()", span="262-262"];
m8_141 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesWithBadCharacter()", span="259-259"];
m8_406 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="642-642"];
m8_407 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="StringReader s = new StringReader(@''[0372, 0xFA, 0XFA]'')", span="644-644"];
m8_408 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(s)", span="645-645"];
m8_409 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="647-647"];
m8_410 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, jsonReader.TokenType)", span="648-648"];
m8_411 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="650-650"];
m8_412 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="651-651"];
m8_413 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="652-652"];
m8_414 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="654-654"];
m8_415 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="655-655"];
m8_416 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="656-656"];
m8_417 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="658-658"];
m8_418 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, jsonReader.TokenType)", span="659-659"];
m8_419 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(250, jsonReader.Value)", span="660-660"];
m8_420 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(jsonReader.Read())", span="662-662"];
m8_421 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, jsonReader.TokenType)", span="663-663"];
m8_422 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="665-665"];
m8_423 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadOctalNumber()", span="642-642"];
m8_134 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="251-251"];
m8_135 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\''))", span="253-253"];
m8_136 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="reader.Read()", span="254-254"];
m8_137 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfControlCharacter()", span="251-251"];
m8_121 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="226-226"];
m8_122 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader('''hi''))", span="228-228"];
m8_123 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="reader.Read()", span="229-229"];
m8_124 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfString()", span="226-226"];
m8_228 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="396-396"];
m8_229 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="StringBuilder sb = new StringBuilder()", span="398-398"];
m8_265 [cluster="System.Text.StringBuilder.StringBuilder()", file="JsonTextReaderTest.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m8_230 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="StringWriter sw = new StringWriter(sb)", span="399-399"];
m8_256 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="string json = sb.ToString()", span="435-435"];
m8_266 [cluster="System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", file="JsonTextReaderTest.cs", label="Entry System.IO.StringWriter.StringWriter(System.Text.StringBuilder)", span="0-0"];
m8_231 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="401-401"];
m8_267 [cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="109-109"];
m8_232 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartArray()", span="403-403"];
m8_233 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(true)", span="404-404"];
m8_234 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartObject()", span="406-406"];
m8_235 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''integer'')", span="407-407"];
m8_236 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(99)", span="408-408"];
m8_237 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''string'')", span="409-409"];
m8_238 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(''how now brown cow?'')", span="410-410"];
m8_239 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''array'')", span="411-411"];
m8_240 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartArray()", span="413-413"];
m8_243 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(i)", span="416-416"];
m8_245 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteStartObject()", span="419-419"];
m8_246 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WritePropertyName(''decimal'')", span="420-420"];
m8_247 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(990.00990099m)", span="421-421"];
m8_248 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndObject()", span="422-422"];
m8_249 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(5)", span="424-424"];
m8_250 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndArray()", span="425-425"];
m8_251 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndObject()", span="427-427"];
m8_252 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteValue(''This is a string.'')", span="429-429"];
m8_253 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteNull()", span="430-430"];
m8_254 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteNull()", span="431-431"];
m8_255 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="jsonWriter.WriteEndArray()", span="432-432"];
m8_268 [cluster="Newtonsoft.Json.JsonWriter.WriteStartArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartArray()", span="256-256"];
m8_269 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(bool)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(bool)", span="735-735"];
m8_270 [cluster="Newtonsoft.Json.JsonWriter.WriteStartObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteStartObject()", span="239-239"];
m8_271 [cluster="Newtonsoft.Json.JsonWriter.WritePropertyName(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WritePropertyName(string)", span="292-292"];
m8_272 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(int)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(int)", span="679-679"];
m8_273 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(string)", span="670-670"];
m8_241 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="int i = 0", span="414-414"];
m8_242 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="i < 5", span="414-414"];
m8_244 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="i++", span="414-414"];
m8_274 [cluster="Newtonsoft.Json.JsonWriter.WriteValue(decimal)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteValue(decimal)", span="791-791"];
m8_275 [cluster="Newtonsoft.Json.JsonWriter.WriteEndObject()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndObject()", span="248-248"];
m8_276 [cluster="Newtonsoft.Json.JsonWriter.WriteEndArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteEndArray()", span="265-265"];
m8_277 [cluster="Newtonsoft.Json.JsonWriter.WriteNull()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonWriter.WriteNull()", span="634-634"];
m8_278 [cluster="System.Text.StringBuilder.ToString()", file="JsonTextReaderTest.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m8_257 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonSerializer serializer = new JsonSerializer()", span="437-437"];
m8_258 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="object jsonObject = serializer.Deserialize(new JsonTextReader(new StringReader(json)))", span="439-439"];
m8_263 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(json, sb.ToString())", span="449-449"];
m8_262 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="serializer.Serialize(sw, jsonObject)", span="446-446"];
m8_279 [cluster="Newtonsoft.Json.JsonSerializer.JsonSerializer()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.JsonSerializer()", span="286-286"];
m8_280 [cluster="Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Deserialize(Newtonsoft.Json.JsonReader)", span="374-374"];
m8_259 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="sb = new StringBuilder()", span="441-441"];
m8_260 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="sw = new StringWriter(sb)", span="442-442"];
m8_261 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="JsonWriter jsonWriter = new JsonTextWriter(sw)", span="444-444"];
m8_281 [cluster="Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonSerializer.Serialize(System.IO.TextWriter, object)", span="429-429"];
m8_264 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.WriteReadWrite()", span="396-396"];
m8_317 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="509-509"];
m8_318 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="string json = @''[''''\u003c'''',''''\u5f20'''']''", span="511-511"];
m8_319 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="513-513"];
m8_320 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="515-515"];
m8_321 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="516-516"];
m8_322 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="518-518"];
m8_323 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''<'', reader.Value)", span="519-519"];
m8_324 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="521-521"];
m8_325 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(24352, Convert.ToInt32(Convert.ToChar((string)reader.Value)))", span="522-522"];
m8_326 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="reader.Read()", span="524-524"];
m8_327 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="525-525"];
m8_330 [cluster="System.Convert.ToInt32(char)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToInt32(char)", span="0-0"];
m8_329 [cluster="System.Convert.ToChar(string)", file="JsonTextReaderTest.cs", label="Entry System.Convert.ToChar(string)", span="0-0"];
m8_328 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.EscapedUnicodeText()", span="509-509"];
m8_18 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="56-56"];
m8_19 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n''''matches'''' : [\r\n{''''t'''':''''C'''', ''''n'''':''''Citigroup Inc.'''', ''''e'''':''''NYSE'''', ''''\\nid'''':''''662713''''}\r\n,{''''t'''':''''CHL'''', ''''n'''':''''China Mobile Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''\\n660998''''}\r\n,{''''t'''':''''PTR'''', ''''n'''':''''PetroChina Company Limited (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''\\n664536''''}\r\n,{''''t'''':''''RIO'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''\\n671472''''}\r\n,{''''t'''':''''RIOPR'''', ''''n'''':''''Companhia Vale do Rio Doce (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''\\n3512643''''}\r\n,{''''t'''':''''CSCO'''', ''''n'''':''''Cisco Systems, Inc.'''', ''''e'''':''''NASDAQ'''', ''''id'''':''''99624''''}\r\n,{''''\\nt'''':''''CVX'''', ''''n'''':''''Chevron Corporation'''', ''''e'''':''''NYSE'''', ''''id'''':''''667226''''}\r\n,{''''t'''':''''\\nTM'''', ''''n'''':''''Toyota Motor Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''655880''''}\r\n,{''''t'''':''''\\nJPM'''', ''''n'''':''''JPMorgan Chase \\x26 Co.'''', ''''e'''':''''NYSE'''', ''''id'''':''''665639''''}\r\n,{''''t'''':''''COP'''', ''''\\nn'''':''''ConocoPhillips'''', ''''e'''':''''NYSE'''', ''''id'''':''''1691168''''}\r\n,{''''t'''':''''LFC'''', ''''n'''':''''China \\nLife Insurance Company Ltd. (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''688679''''}\r\n,{''''t'''':''''NOK'''', ''''n'''':''''\\nNokia Corporation (ADR)'''', ''''e'''':''''NYSE'''', ''''id'''':''''657729''''}\r\n,{''''t'''':''''KO'''', ''''n'''':''''The Coca-Cola \\nCompany'''', ''''e'''':''''NYSE'''', ''''id'''':''''6550''''}\r\n,{''''t'''':''''VZ'''', ''''n'''':''''Verizon Communications Inc.'''', ''''\\ne'''':''''NYSE'''', ''''id'''':''''664887''''}\r\n,{''''t'''':''''AMX'''', ''''n'''':''''America Movil S.A.B de C.V. (ADR)'''', ''''\\ne'''':''''NYSE'''', ''''id'''':''''665834''''}],\r\n''''all'''' : false\r\n}\r\n''", span="58-77"];
m8_20 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(new StringReader(input))", span="79-79"];
m8_21 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="81-81"];
m8_22 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Console.WriteLine(jsonReader.Value)", span="83-83"];
m8_23 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.YahooFinance()", span="56-56"];
m8_26 [cluster="System.Console.WriteLine(object)", file="JsonTextReaderTest.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m8_81 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="164-164"];
m8_82 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher',array:[1,2]}''", span="166-166"];
m8_83 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="168-168"];
m8_84 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="170-170"];
m8_85 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="172-172"];
m8_86 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="174-174"];
m8_87 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="175-175"];
m8_88 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="176-176"];
m8_89 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="178-178"];
m8_90 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="179-179"];
m8_91 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="180-180"];
m8_92 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="182-182"];
m8_93 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="183-183"];
m8_94 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="184-184"];
m8_95 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="185-185"];
m8_96 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="186-186"];
m8_97 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="188-188"];
m8_98 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="189-189"];
m8_99 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="190-190"];
m8_100 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="192-192"];
m8_101 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="193-193"];
m8_102 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.Depth)", span="194-194"];
m8_103 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="196-196"];
m8_104 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Integer)", span="197-197"];
m8_105 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Value)", span="198-198"];
m8_106 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.Depth)", span="199-199"];
m8_107 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="201-201"];
m8_108 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.Integer)", span="202-202"];
m8_109 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.Value)", span="203-203"];
m8_110 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.Depth)", span="204-204"];
m8_111 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="206-206"];
m8_112 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="207-207"];
m8_113 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="208-208"];
m8_114 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="210-210"];
m8_115 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="211-211"];
m8_116 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="212-212"];
m8_117 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.Depth()", span="164-164"];
m8_156 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="287-287"];
m8_157 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{aww''))", span="289-289"];
m8_158 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="290-290"];
m8_159 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="reader.Read()", span="291-291"];
m8_160 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndWhenParsingUnquotedProperty()", span="287-287"];
m8_424 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="669-669"];
m8_425 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="string json = @''{''''Message'''':''''Hi,I\u0092ve send you smth''''}''", span="671-671"];
m8_426 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="673-673"];
m8_427 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="675-675"];
m8_428 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="676-676"];
m8_429 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="678-678"];
m8_430 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="679-679"];
m8_431 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(''Message'', reader.Value)", span="680-680"];
m8_432 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="682-682"];
m8_433 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="683-683"];
m8_434 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''Hi,I'' + '\u0092' + ''ve send you smth'', reader.Value)", span="684-684"];
m8_435 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="686-686"];
m8_436 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="687-687"];
m8_437 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="689-689"];
m8_438 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadUnicode()", span="669-669"];
m8_470 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="737-737"];
m8_471 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''\/Date(946706400000-0600)\/''''}''", span="739-739"];
m8_472 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="741-741"];
m8_473 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="743-743"];
m8_474 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="744-744"];
m8_475 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="746-746"];
m8_476 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="747-747"];
m8_477 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="749-749"];
m8_478 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="750-750"];
m8_479 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="751-751"];
m8_480 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(-6)), reader.Value)", span="752-752"];
m8_481 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="754-754"];
m8_482 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="755-755"];
m8_483 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNegative()", span="737-737"];
m8_514 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", prediction=26, span="804-804"];
m8_515 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''2011-08-01T21:25Z''''}''", prediction=27, span="806-806"];
m8_516 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", prediction=28, span="808-808"];
m8_517 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=29, span="810-810"];
m8_518 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", prediction=28, span="811-811"];
m8_519 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=28, span="813-813"];
m8_520 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", prediction=28, span="814-814"];
m8_521 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", prediction=28, span="816-816"];
m8_522 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", prediction=28, span="817-817"];
m8_523 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", prediction=28, span="818-818"];
m8_524 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2011, 8, 1, 21, 25, 0, DateTimeKind.Utc), TimeSpan.Zero), reader.Value)", prediction=28, span="819-819"];
m8_525 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=28, span="821-821"];
m8_526 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", prediction=28, span="822-822"];
m8_527 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetIsoDate()", prediction=39, span="804-804"];
m8_27 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="89-89"];
m8_28 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}''", span="91-97"];
m8_29 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="99-99"];
m8_30 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="JsonTextReader jsonReader = new JsonTextReader(sr)", span="101-101"];
m8_31 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.None)", span="103-103"];
m8_32 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.LineNumber)", span="104-104"];
m8_33 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.LinePosition)", span="105-105"];
m8_34 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="107-107"];
m8_35 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="108-108"];
m8_36 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LineNumber)", span="109-109"];
m8_37 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="110-110"];
m8_38 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="112-112"];
m8_39 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="113-113"];
m8_40 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''CPU'')", span="114-114"];
m8_41 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="115-115"];
m8_42 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, jsonReader.LinePosition)", span="116-116"];
m8_43 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="118-118"];
m8_44 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="119-119"];
m8_45 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''Intel'')", span="120-120"];
m8_46 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(2, jsonReader.LineNumber)", span="121-121"];
m8_47 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(14, jsonReader.LinePosition)", span="122-122"];
m8_48 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="124-124"];
m8_49 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="125-125"];
m8_50 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''Drives'')", span="126-126"];
m8_51 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="127-127"];
m8_52 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(9, jsonReader.LinePosition)", span="128-128"];
m8_53 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="130-130"];
m8_54 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartArray)", span="131-131"];
m8_55 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LineNumber)", span="132-132"];
m8_56 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(11, jsonReader.LinePosition)", span="133-133"];
m8_57 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="135-135"];
m8_58 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="136-136"];
m8_59 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''DVD read/writer'')", span="137-137"];
m8_60 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="138-138"];
m8_61 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(4, jsonReader.LineNumber)", span="139-139"];
m8_62 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(21, jsonReader.LinePosition)", span="140-140"];
m8_63 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="142-142"];
m8_64 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="143-143"];
m8_65 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''500 gigabyte hard drive'')", span="144-144"];
m8_66 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '''')", span="145-145"];
m8_67 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(5, jsonReader.LineNumber)", span="146-146"];
m8_68 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(29, jsonReader.LinePosition)", span="147-147"];
m8_69 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="149-149"];
m8_70 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndArray)", span="150-150"];
m8_71 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(6, jsonReader.LineNumber)", span="151-151"];
m8_72 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(3, jsonReader.LinePosition)", span="152-152"];
m8_73 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="154-154"];
m8_74 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="155-155"];
m8_75 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(7, jsonReader.LineNumber)", span="156-156"];
m8_76 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.LinePosition)", span="157-157"];
m8_77 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(jsonReader.Read())", span="159-159"];
m8_78 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingIndented()", span="89-89"];
m8_171 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="309-309"];
m8_172 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="string helloWorld = ''Hello world!''", span="311-311"];
m8_173 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="byte[] helloWorldData = Encoding.UTF8.GetBytes(helloWorld)", span="312-312"];
m8_174 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''[1,''' + Convert.ToBase64String(helloWorldData) + @''']''))", span="314-314"];
m8_180 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(helloWorldData, data)", span="320-320"];
m8_175 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="315-315"];
m8_176 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="316-316"];
m8_177 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="317-317"];
m8_178 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="318-318"];
m8_179 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="byte[] data = reader.ReadAsBytes()", span="319-319"];
m8_181 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Bytes, reader.TokenType)", span="321-321"];
m8_182 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="322-322"];
m8_183 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="323-323"];
m8_184 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="325-325"];
m8_185 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadBytesFollowingNumberInArray()", span="309-309"];
m8_223 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="382-382"];
m8_224 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReaderTest.cs", label="string input = @''{\r\n  CPU: 'Intel',\r\n  Drives: [ /* Com*ment */\r\n    'DVD read/writer',\r\n    ''''500 gigabyte hard drive''''\r\n  ]\r\n}'' + '\n'", span="384-390"];
m8_225 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReaderTest.cs", label="object o = JsonConvert.DeserializeObject(input)", span="392-392"];
m8_227 [cluster="Newtonsoft.Json.JsonConvert.DeserializeObject(string)", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject(string)", span="601-601"];
m8_226 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadNewlineLastCharacter()", span="382-382"];
m8_452 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="715-715"];
m8_453 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="string json = ''{\''Offset\'':\''\\/Date(946663200000+0600)\\/\''}''", span="717-717"];
m8_454 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="719-719"];
m8_455 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="721-721"];
m8_456 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="722-722"];
m8_457 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="724-724"];
m8_458 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="725-725"];
m8_459 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", span="727-727"];
m8_460 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", span="728-728"];
m8_461 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", span="729-729"];
m8_462 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTimeOffset(new DateTime(2000, 1, 1), TimeSpan.FromHours(6)), reader.Value)", span="730-730"];
m8_463 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="732-732"];
m8_464 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="733-733"];
m8_465 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffset()", span="715-715"];
m8_0 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="38-38"];
m8_1 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="MemoryStream ms = new MemoryStream()", span="40-40"];
m8_2 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StreamReader(ms))", span="41-41"];
m8_3 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="43-43"];
m8_5 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(ms.CanRead)", span="45-45"];
m8_12 [cluster="System.IO.MemoryStream.MemoryStream()", file="JsonTextReaderTest.cs", label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0"];
m8_14 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="JsonTextReaderTest.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m8_4 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader.Close()", span="44-44"];
m8_16 [cluster="Newtonsoft.Json.JsonTextReader.Close()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.JsonTextReader.Close()", span="1001-1001"];
m8_6 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="ms = new MemoryStream()", span="47-47"];
m8_7 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader = new JsonTextReader(new StreamReader(ms)) { CloseInput = false }", span="48-48"];
m8_8 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="50-50"];
m8_10 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(ms.CanRead)", span="52-52"];
m8_9 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="reader.Close()", span="51-51"];
m8_11 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.CloseInput()", span="38-38"];
m8_161 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="295-295"];
m8_162 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@''{'hi\r\nbye':1}''))", span="297-297"];
m8_163 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="298-298"];
m8_164 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="299-299"];
m8_165 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="300-300"];
m8_166 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(@''hi\r\nbye'', reader.Value)", span="301-302"];
m8_167 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="303-303"];
m8_168 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="304-304"];
m8_169 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Assert.IsFalse(reader.Read())", span="305-305"];
m8_170 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ParsingQuotedPropertyWithControlCharacters()", span="295-295"];
m8_300 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="486-486"];
m8_301 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="int length = 20000", span="488-488"];
m8_302 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="string json = @''['''''' + new string(' ', length) + @'''''']''", span="489-489"];
m8_303 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="491-491"];
m8_315 [cluster="string.String(char, int)", file="JsonTextReaderTest.cs", label="Entry string.String(char, int)", span="0-0"];
m8_304 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="493-493"];
m8_305 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartArray, reader.TokenType)", span="494-494"];
m8_306 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="496-496"];
m8_307 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.String, reader.TokenType)", span="497-497"];
m8_308 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(string), reader.ValueType)", span="498-498"];
m8_309 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(20000, reader.Value.ToString().Length)", span="499-499"];
m8_310 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="501-501"];
m8_311 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="502-502"];
m8_312 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="reader.Read()", span="504-504"];
m8_313 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndArray, reader.TokenType)", span="505-505"];
m8_316 [cluster="object.ToString()", file="JsonTextReaderTest.cs", label="Entry object.ToString()", span="0-0"];
m8_314 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.LongStringTest()", span="486-486"];
m8_130 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="243-243"];
m8_131 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="JsonReader reader = new JsonTextReader(new StringReader(@'''h\u006''))", span="245-245"];
m8_132 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="reader.Read()", span="246-246"];
m8_133 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.UnexpectedEndOfHex()", span="243-243"];
m8_203 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="351-351"];
m8_204 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="string input = ''{value:'Purple\\r \\n monkey\\'s:\\tdishwasher'}''", span="353-353"];
m8_205 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="StringReader sr = new StringReader(input)", span="355-355"];
m8_206 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="JsonReader jsonReader = new JsonTextReader(sr)", span="357-357"];
m8_207 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="359-359"];
m8_208 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="361-361"];
m8_209 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.StartObject)", span="362-362"];
m8_210 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="363-363"];
m8_211 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="365-365"];
m8_212 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.PropertyName)", span="366-366"];
m8_213 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="367-367"];
m8_214 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="369-369"];
m8_215 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.String)", span="370-370"];
m8_216 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.Value, ''Purple\r \n monkey's:\tdishwasher'')", span="371-371"];
m8_217 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.QuoteChar, '\'')", span="372-372"];
m8_218 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(1, jsonReader.Depth)", span="373-373"];
m8_219 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="jsonReader.Read()", span="375-375"];
m8_220 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(jsonReader.TokenType, JsonToken.EndObject)", span="376-376"];
m8_221 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(0, jsonReader.Depth)", span="377-377"];
m8_222 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadingEscapedStrings()", span="351-351"];
m8_439 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="693-693"];
m8_440 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="string json = @''{''''text'''':0xabcdef12345}''", span="695-695"];
m8_441 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", span="697-697"];
m8_442 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="699-699"];
m8_443 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", span="700-700"];
m8_444 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="702-702"];
m8_445 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", span="703-703"];
m8_446 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="705-705"];
m8_447 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Integer, reader.TokenType)", span="706-706"];
m8_448 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(11806310474565, reader.Value)", span="707-707"];
m8_449 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", span="709-709"];
m8_450 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", span="710-710"];
m8_451 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadHexidecimalWithAllLetters()", span="693-693"];
m8_546 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", prediction=40, span="851-851"];
m8_547 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="string json = @''{''''Offset'''':''''30/1/2011''''}''", prediction=41, span="853-853"];
m8_548 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", prediction=42, span="855-855"];
m8_549 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''en-NZ'')", prediction=43, span="856-856"];
m8_550 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=42, span="858-858"];
m8_551 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", prediction=42, span="859-859"];
m8_552 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=42, span="861-861"];
m8_553 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", prediction=42, span="862-862"];
m8_554 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="reader.ReadAsDateTimeOffset()", prediction=42, span="864-864"];
m8_555 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Date, reader.TokenType)", prediction=42, span="865-865"];
m8_556 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(DateTimeOffset), reader.ValueType)", prediction=42, span="866-866"];
m8_557 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="DateTimeOffset dt = (DateTimeOffset)reader.Value", prediction=51, span="868-868"];
m8_559 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=42, span="871-871"];
m8_560 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", prediction=42, span="872-872"];
m8_558 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(new DateTime(2011, 1, 30, 0, 0, 0, DateTimeKind.Unspecified), dt.DateTime)", prediction=54, span="869-869"];
m8_561 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", color=green, community=1, file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDateTimeOffsetNewZealandDate()", prediction=55, span="851-851"];
m8_577 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Entry Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", prediction=56, span="899-899"];
m8_578 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="string json = @''{''''decimal'''':''''9,99''''}''", prediction=57, span="901-901"];
m8_579 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="JsonTextReader reader = new JsonTextReader(new StringReader(json))", prediction=58, span="903-903"];
m8_580 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="reader.Culture = new CultureInfo(''fr-FR'')", prediction=59, span="904-904"];
m8_581 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=58, span="906-906"];
m8_582 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.StartObject, reader.TokenType)", prediction=58, span="907-907"];
m8_583 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=58, span="909-909"];
m8_584 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.PropertyName, reader.TokenType)", prediction=58, span="910-910"];
m8_585 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="decimal? d = reader.ReadAsDecimal()", prediction=64, span="912-912"];
m8_586 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.Float, reader.TokenType)", prediction=58, span="913-913"];
m8_587 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(typeof(decimal), reader.ValueType)", prediction=58, span="914-914"];
m8_589 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.IsTrue(reader.Read())", prediction=58, span="917-917"];
m8_590 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(JsonToken.EndObject, reader.TokenType)", prediction=58, span="918-918"];
m8_588 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Assert.AreEqual(9.99m, d)", prediction=64, span="915-915"];
m8_591 [cluster="Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", color=green, community=1, file="JsonTextReaderTest.cs", label="Exit Newtonsoft.Json.Tests.JsonTextReaderTest.ReadAsDecimalFrench()", prediction=70, span="899-899"];
m0_8;
m0_9;
m0_36;
m1_40;
m1_38;
m1_31;
m1_34;
m1_37;
m1_32;
m1_33;
m1_35;
m1_36;
m2_40;
m2_42;
m2_43;
m2_46;
m2_45;
m2_47;
m2_13;
m2_14;
m3_478;
m3_74;
m3_73;
m3_119;
m3_480;
m3_479;
m3_481;
m3_482;
m3_483;
m3_484;
m5_5;
m6_553;
m6_669;
m6_670;
m6_671;
m6_672;
m7_542;
m7_547;
m8_15;
m8_79;
m8_404;
m8_17;
m0_39 -> m0_41  [color=darkseagreen4, key=1, label=sqlBinaryClass, style=dashed];
m0_39 -> m0_42  [color=darkseagreen4, key=1, label=sqlBinaryClass, style=dashed];
m0_46 -> m0_48  [color=darkseagreen4, key=1, label=byteArrayClass, style=dashed];
m0_2 -> m0_4  [color=darkseagreen4, key=1, label=binaryClass, style=dashed];
m1_55 -> m1_57  [color=darkseagreen4, key=1, label=ds, style=dashed];
m1_55 -> m1_58  [color=darkseagreen4, key=1, label=ds, style=dashed];
m1_55 -> m1_59  [color=darkseagreen4, key=1, label=ds, style=dashed];
m1_55 -> m1_73  [color=darkseagreen4, key=1, label=ds, style=dashed];
m1_55 -> m1_74  [color=darkseagreen4, key=1, label=ds, style=dashed];
m1_60 -> m1_62  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_63  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_64  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_65  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_66  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_67  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_68  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_69  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_70  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_71  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_60 -> m1_72  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_112 -> m1_114  [color=green, key=1, label=ds, style=dashed];
m1_115 -> m1_119  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_115 -> m1_120  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_115 -> m1_121  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_115 -> m1_122  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_115 -> m1_123  [color=darkseagreen4, key=1, label=c, style=dashed];
m1_50 -> m1_97  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_118 -> m1_120  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_118 -> m1_121  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_118 -> m1_122  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_118 -> m1_123  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_121 -> m1_123  [color=darkseagreen4, key=1, label=ds, style=dashed];
m1_127 -> m1_113  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m1_127 -> m1_114  [color=green, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m1_127 -> m1_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m1_127 -> m1_123  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m1_127 -> m1_132  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_127 -> m1_131  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_127 -> m1_129  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_127 -> m1_130  [color=darkseagreen4, key=1, label=c2, style=dashed];
m1_127 -> m1_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m1_127 -> m1_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Tests.Converters.DataSetConverterTests", style=dashed];
m1_76 -> m1_79  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m1_76 -> m1_82  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m1_76 -> m1_85  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m1_76 -> m1_88  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m1_76 -> m1_92  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m1_76 -> m1_95  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m1_76 -> m1_105  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m1_76 -> m1_107  [color=darkseagreen4, key=1, label=myTable, style=dashed];
m1_98 -> m1_105  [color=darkseagreen4, key=1, label=myNewRow, style=dashed];
m1_96 -> m1_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_106 -> m1_106  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_2 -> m1_9  [color=darkseagreen4, key=1, label=dataSet, style=dashed];
m1_2 -> m1_16  [color=darkseagreen4, key=1, label=dataSet, style=dashed];
m1_3 -> m1_7  [color=darkseagreen4, key=1, label=table, style=dashed];
m1_3 -> m1_8  [color=darkseagreen4, key=1, label=table, style=dashed];
m1_3 -> m1_9  [color=darkseagreen4, key=1, label=table, style=dashed];
m1_3 -> m1_14  [color=darkseagreen4, key=1, label=table, style=dashed];
m1_12 -> m1_14  [color=darkseagreen4, key=1, label=newRow, style=dashed];
m1_5 -> m1_7  [color=darkseagreen4, key=1, label=idColumn, style=dashed];
m1_6 -> m1_8  [color=darkseagreen4, key=1, label=itemColumn, style=dashed];
m1_10 -> m1_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_15 -> m1_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=deserializedDataSet, style=dashed];
m1_22 -> m1_24  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_22 -> m1_25  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_22 -> m1_26  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_22 -> m1_27  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_22 -> m1_28  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_22 -> m1_29  [color=darkseagreen4, key=1, label=dt, style=dashed];
m1_42 -> m1_44  [color=darkseagreen4, key=1, label=ds, style=dashed];
m1_45 -> m1_47  [color=darkseagreen4, key=1, label=json, style=dashed];
m1_46 -> m1_48  [color=darkseagreen4, key=1, label=deserializedDs, style=dashed];
m2_17 -> m2_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_17 -> m2_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_17 -> m2_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_17 -> m2_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_17 -> m2_26  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_17 -> m2_27  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_17 -> m2_29  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_17 -> m2_34  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_17 -> m2_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m2_20 -> m2_30  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_20 -> m2_32  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_20 -> m2_36  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_20 -> m2_38  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_28 -> m2_30  [color=darkseagreen4, key=1, label=columnName, style=dashed];
m2_28 -> m2_32  [color=darkseagreen4, key=1, label=columnName, style=dashed];
m2_22 -> m2_30  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_22 -> m2_32  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_22 -> m2_36  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_22 -> m2_38  [color=darkseagreen4, key=1, label=dt, style=dashed];
m2_25 -> m2_35  [color=darkseagreen4, key=1, label=dr, style=dashed];
m2_25 -> m2_36  [color=darkseagreen4, key=1, label=dr, style=dashed];
m2_0 -> m2_2  [color=green, key=1, label="Newtonsoft.Json.JsonSerializer", style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_0 -> m2_7  [color=green, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_0 -> m2_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_0 -> m2_9  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonWriter", style=dashed];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=table, style=dashed];
m2_2 -> m2_7  [color=green, key=1, label=resolver, style=dashed];
m2_3 -> m2_5  [color=darkseagreen4, key=1, label=row, style=dashed];
m2_3 -> m2_7  [color=darkseagreen4, key=1, label=row, style=dashed];
m2_5 -> m2_7  [color=green, key=1, label=column, style=dashed];
m3_1 -> m3_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m3_2 -> m3_478  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m3_53 -> m3_67  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_54 -> m3_64  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m3_55 -> m3_60  [color=darkseagreen4, key=1, label=defaultMembers, style=dashed];
m3_55 -> m3_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_56 -> m3_58  [color=darkseagreen4, key=1, label=allMembers, style=dashed];
m3_56 -> m3_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_57 -> m3_61  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m3_57 -> m3_63  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m3_57 -> m3_65  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m3_57 -> m3_69  [color=darkseagreen4, key=1, label=serializableMembers, style=dashed];
m3_58 -> m3_60  [color=darkseagreen4, key=1, label=member, style=dashed];
m3_58 -> m3_61  [color=darkseagreen4, key=1, label=member, style=dashed];
m3_58 -> m3_62  [color=darkseagreen4, key=1, label=member, style=dashed];
m3_58 -> m3_63  [color=darkseagreen4, key=1, label=member, style=dashed];
m3_58 -> m3_64  [color=darkseagreen4, key=1, label=member, style=dashed];
m3_58 -> m3_65  [color=darkseagreen4, key=1, label=member, style=dashed];
m3_248 -> m3_345  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_248 -> m3_346  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_248 -> m3_347  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m3_248 -> m3_348  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m3_248 -> m3_349  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_248 -> m3_350  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_248 -> m3_351  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_248 -> m3_352  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_248 -> m3_353  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_248 -> m3_354  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m3_248 -> m3_355  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_248 -> m3_356  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo[]", style=dashed];
m3_248 -> m3_357  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_358 -> m3_360  [color=darkseagreen4, key=1, label="ref System.Type", style=dashed];
m3_361 -> m3_364  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_361 -> m3_365  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_257 -> m3_259  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_114 -> m3_197  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_114 -> m3_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m3_96 -> m3_101  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_97 -> m3_100  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_97 -> m3_105  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_97 -> m3_106  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_97 -> m3_110  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_97 -> m3_111  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_101 -> m3_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_102 -> m3_105  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m3_107 -> m3_110  [color=darkseagreen4, key=1, label=constructor, style=dashed];
m3_275 -> m3_281  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_280 -> m3_287  [color=darkseagreen4, key=1, label="object[]", style=dashed];
m3_279 -> m3_287  [color=darkseagreen4, key=1, label=methodCall, style=dashed];
m3_89 -> m3_91  [color=darkseagreen4, key=1, label=propertyInfo, style=dashed];
m3_299 -> m3_301  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_206 -> m3_208  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_206 -> m3_214  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_137 -> m3_139  [color=darkseagreen4, key=1, label=constructors, style=dashed];
m3_8 -> m3_11  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_11 -> m3_480  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m3_214 -> m3_217  [color=darkseagreen4, key=1, label=onSerialized, style=dashed];
m3_214 -> m3_219  [color=darkseagreen4, key=1, label=onDeserializing, style=dashed];
m3_214 -> m3_221  [color=darkseagreen4, key=1, label=onDeserialized, style=dashed];
m3_214 -> m3_223  [color=darkseagreen4, key=1, label=onError, style=dashed];
m3_226 -> m3_232  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_263 -> m3_265  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_227 -> m3_236  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_227 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_232 -> m3_236  [color=darkseagreen4, key=1, label=method, style=dashed];
m3_232 -> m3_238  [color=darkseagreen4, key=1, label=method, style=dashed];
m3_232 -> m3_240  [color=darkseagreen4, key=1, label=method, style=dashed];
m3_232 -> m3_242  [color=darkseagreen4, key=1, label=method, style=dashed];
m3_232 -> m3_244  [color=darkseagreen4, key=1, label=method, style=dashed];
m3_228 -> m3_238  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_228 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_236 -> m3_236  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m3_229 -> m3_240  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_229 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_238 -> m3_238  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m3_230 -> m3_242  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_230 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_240 -> m3_240  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m3_231 -> m3_244  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_231 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_242 -> m3_242  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m3_244 -> m3_244  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m3_235 -> m3_238  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_235 -> m3_240  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_235 -> m3_242  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_235 -> m3_244  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_237 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_239 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_241 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_243 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_245 -> m3_246  [color=darkseagreen4, key=1, label="out System.Reflection.MethodInfo", style=dashed];
m3_234 -> m3_236  [color=darkseagreen4, key=1, label=prevAttributeType, style=dashed];
m3_250 -> m3_253  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_142 -> m3_144  [color=darkseagreen4, key=1, label=constructorParameters, style=dashed];
m3_143 -> m3_150  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m3_143 -> m3_151  [color=darkseagreen4, key=1, label=parameterCollection, style=dashed];
m3_144 -> m3_146  [color=darkseagreen4, key=1, label=parameterInfo, style=dashed];
m3_148 -> m3_150  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_156 -> m3_162  [color=darkseagreen4, key=1, label="System.Reflection.ParameterInfo", style=dashed];
m3_156 -> m3_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m3_304 -> m3_306  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_307  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_308  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_309  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_310  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_311  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_312  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_313  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_314  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_315  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_316  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_317  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_318  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_319  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_320  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_321  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_322  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_304 -> m3_323  [color=darkseagreen4, key=1, label=t, style=dashed];
m3_332 -> m3_337  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_290 -> m3_294  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_36 -> m3_38  [color=darkseagreen4, key=1, label=key, style=dashed];
m3_39 -> m3_45  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_42 -> m3_44  [color=darkseagreen4, key=1, label=updatedCache, style=dashed];
m3_459 -> m3_462  [color=darkseagreen4, key=1, label=specifiedMember, style=dashed];
m3_465 -> m3_473  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_464 -> m3_473  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m3_379 -> m3_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.MemberSerialization", style=dashed];
m3_379 -> m3_396  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m3_387 -> m3_392  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_387 -> m3_396  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_387 -> m3_397  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_380 -> m3_382  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m3_380 -> m3_383  [color=darkseagreen4, key=1, label="System.Reflection.MemberInfo", style=dashed];
m3_180 -> m3_407  [color=darkseagreen4, key=1, label="System.Reflection.ICustomAttributeProvider", style=dashed];
m3_291 -> m3_294  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_291 -> m3_295  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_333 -> m3_335  [color=darkseagreen4, key=1, label=converter, style=dashed];
m3_269 -> m3_271  [color=darkseagreen4, key=1, label=contract, style=dashed];
m3_404 -> m3_446  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_405 -> m3_407  [color=darkseagreen4, key=1, label=dataContractAttribute, style=dashed];
m3_408 -> m3_417  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m3_408 -> m3_424  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m3_408 -> m3_443  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m3_410 -> m3_415  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m3_410 -> m3_422  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m3_410 -> m3_441  [color=darkseagreen4, key=1, label=propertyAttribute, style=dashed];
m3_409 -> m3_417  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m3_409 -> m3_424  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m3_409 -> m3_443  [color=darkseagreen4, key=1, label=dataMemberAttribute, style=dashed];
m3_412 -> m3_446  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_438 -> m3_446  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_440 -> m3_446  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_442 -> m3_446  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_444 -> m3_446  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m3_126 -> m3_129  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m3_126 -> m3_130  [color=darkseagreen4, key=1, label=markedConstructors, style=dashed];
m3_126 -> m3_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_368 -> m3_372  [color=darkseagreen4, key=1, label=members, style=dashed];
m3_371 -> m3_375  [color=darkseagreen4, key=1, label=properties, style=dashed];
m3_373 -> m3_375  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_449 -> m3_452  [color=darkseagreen4, key=1, label=shouldSerializeMethod, style=dashed];
m3_452 -> m3_457  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m3_453 -> m3_457  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_158 -> m3_162  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_158 -> m3_177  [color=darkseagreen4, key=1, label=property, style=dashed];
m4_53 -> m4_1  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_53 -> m4_4  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_53 -> m4_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_53 -> m4_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_53 -> m4_45  [color=green, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_53 -> m4_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_53 -> m4_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_53 -> m4_19  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_53 -> m4_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_53 -> m4_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m4_15 -> m4_17  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_15 -> m4_20  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_21 -> m4_25  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_21 -> m4_26  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_21 -> m4_29  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_23 -> m4_26  [color=darkseagreen4, key=1, label=array, style=dashed];
m4_24 -> m4_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_24 -> m4_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m4_27 -> m4_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_59 -> m6_115  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_59 -> m6_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_113 -> m6_115  [color=darkseagreen4, key=1, label=converter, style=dashed];
m6_109 -> m6_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonConverter", style=dashed];
m6_109 -> m6_163  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_109 -> m6_165  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_109 -> m6_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_112 -> m6_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_112 -> m6_120  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_112 -> m6_122  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_112 -> m6_124  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_112 -> m6_130  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_112 -> m6_132  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_112 -> m6_134  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_112 -> m6_135  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_112 -> m6_136  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_112 -> m6_143  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_112 -> m6_145  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_112 -> m6_147  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_112 -> m6_149  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_112 -> m6_150  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_261 -> m6_263  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_261 -> m6_266  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_264 -> m6_267  [color=darkseagreen4, key=1, label=arrayContract, style=dashed];
m6_50 -> m6_53  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_50 -> m6_55  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_58 -> m6_594  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_58 -> m6_595  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_58 -> m6_596  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_58 -> m6_598  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_58 -> m6_599  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_58 -> m6_601  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_58 -> m6_602  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_58 -> m6_604  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_58 -> m6_606  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_40 -> m6_43  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_259 -> m6_434  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_259 -> m6_437  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_259 -> m6_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_259 -> m6_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_259 -> m6_444  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_259 -> m6_445  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m6_259 -> m6_448  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_259 -> m6_449  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_259 -> m6_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m6_259 -> m6_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonISerializableContract", style=dashed];
m6_432 -> m6_439  [color=darkseagreen4, key=1, label=serializationInfo, style=dashed];
m6_436 -> m6_438  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_436 -> m6_439  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_447 -> m6_449  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m6_447 -> m6_450  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m6_447 -> m6_451  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m6_447 -> m6_452  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m6_256 -> m6_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_256 -> m6_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_256 -> m6_355  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_354 -> m6_356  [color=darkseagreen4, key=1, label=dictionaryWrapper, style=dashed];
m6_38 -> m6_360  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_38 -> m6_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_38 -> m6_363  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_38 -> m6_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_38 -> m6_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_38 -> m6_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_38 -> m6_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_38 -> m6_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDictionaryContract", style=dashed];
m6_38 -> m6_379  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedDictionary", style=dashed];
m6_38 -> m6_380  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_38 -> m6_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_296 -> m6_299  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_296 -> m6_300  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_296 -> m6_301  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_552 -> m6_570  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_552 -> m6_575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_552 -> m6_579  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_552 -> m6_580  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_552 -> m6_583  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_552 -> m6_584  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_552 -> m6_588  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_552 -> m6_589  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_568 -> m6_590  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m6_572 -> m6_576  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_572 -> m6_581  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_572 -> m6_583  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_573 -> m6_575  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_573 -> m6_577  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_99 -> m6_104  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_99 -> m6_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_99 -> m6_107  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_85 -> m6_90  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_85 -> m6_91  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_88 -> m6_91  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_88 -> m6_92  [color=darkseagreen4, key=1, label=writer, style=dashed];
m6_39 -> m6_613  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_39 -> m6_614  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_39 -> m6_615  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_39 -> m6_617  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_39 -> m6_623  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_39 -> m6_624  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_39 -> m6_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_39 -> m6_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_39 -> m6_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_39 -> m6_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_39 -> m6_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_39 -> m6_642  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_39 -> m6_646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_39 -> m6_647  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_39 -> m6_649  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_39 -> m6_650  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_613 -> m6_627  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m6_613 -> m6_634  [color=darkseagreen4, key=1, label=propertiesPresence, style=dashed];
m6_613 -> m6_654  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_613 -> m6_657  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_616 -> m6_631  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m6_619 -> m6_623  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_619 -> m6_626  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_619 -> m6_630  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_620 -> m6_625  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_620 -> m6_627  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_620 -> m6_628  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_303 -> m6_305  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_303 -> m6_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_303 -> m6_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_303 -> m6_315  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_303 -> m6_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_303 -> m6_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_303 -> m6_319  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_303 -> m6_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_303 -> m6_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_303 -> m6_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_303 -> m6_327  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_303 -> m6_328  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_303 -> m6_329  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_387 -> m6_664  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_387 -> m6_665  [color=darkseagreen4, key=1, label=int, style=dashed];
m6_387 -> m6_666  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_635 -> m6_639  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_635 -> m6_640  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_635 -> m6_641  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_635 -> m6_642  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_635 -> m6_644  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_635 -> m6_645  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_155 -> m6_286  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_155 -> m6_288  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_155 -> m6_289  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_155 -> m6_291  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_155 -> m6_292  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_72 -> m6_74  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_72 -> m6_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_72 -> m6_78  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_176  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_181  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_153 -> m6_204  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_153 -> m6_205  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_153 -> m6_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_220  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_221  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_153 -> m6_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_153 -> m6_224  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_153 -> m6_227  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_153 -> m6_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_229  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_153 -> m6_232  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_153 -> m6_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_234  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_153 -> m6_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_153 -> m6_248  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_154 -> m6_273  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_154 -> m6_275  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_401 -> m6_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_31 -> m6_409  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m6_31 -> m6_410  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_31 -> m6_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m6_31 -> m6_412  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_31 -> m6_413  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_31 -> m6_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_31 -> m6_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_31 -> m6_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_31 -> m6_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_31 -> m6_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m6_31 -> m6_423  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Utilities.IWrappedCollection", style=dashed];
m6_31 -> m6_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_31 -> m6_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_408 -> m6_413  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_408 -> m6_414  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_408 -> m6_419  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_408 -> m6_425  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_415 -> m6_426  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m6_100 -> m6_107  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_101 -> m6_106  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m6_101 -> m6_107  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m6_102 -> m6_106  [color=darkseagreen4, key=1, label=converter, style=dashed];
m6_105 -> m6_107  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_45 -> m6_47  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_45 -> m6_48  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_337 -> m6_344  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_337 -> m6_346  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonProperty", style=dashed];
m6_281 -> m6_393  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_281 -> m6_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_281 -> m6_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_281 -> m6_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_281 -> m6_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_281 -> m6_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_281 -> m6_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_178 -> m6_190  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_178 -> m6_209  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_178 -> m6_214  [color=darkseagreen4, key=1, label=propertyName, style=dashed];
m6_183 -> m6_185  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_183 -> m6_188  [color=darkseagreen4, key=1, label=reference, style=dashed];
m6_192 -> m6_197  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m6_192 -> m6_201  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m6_192 -> m6_203  [color=darkseagreen4, key=1, label=qualifiedTypeName, style=dashed];
m6_211 -> m6_228  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_211 -> m6_229  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_211 -> m6_233  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_211 -> m6_234  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_211 -> m6_244  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_211 -> m6_247  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_216 -> m6_218  [color=darkseagreen4, key=1, label=list, style=dashed];
m6_225 -> m6_228  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m6_225 -> m6_229  [color=darkseagreen4, key=1, label=dictionaryContract, style=dashed];
m6_230 -> m6_233  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m6_230 -> m6_234  [color=darkseagreen4, key=1, label=objectContract, style=dashed];
m6_239 -> m6_241  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_242 -> m6_244  [color=darkseagreen4, key=1, label=serializableContract, style=dashed];
m6_245 -> m6_247  [color=darkseagreen4, key=1, label=dynamicContract, style=dashed];
m6_175 -> m6_228  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_175 -> m6_229  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_175 -> m6_233  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_175 -> m6_234  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_175 -> m6_244  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_175 -> m6_247  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_177 -> m6_220  [color=darkseagreen4, key=1, label=specialProperty, style=dashed];
m6_199 -> m6_204  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m6_199 -> m6_205  [color=darkseagreen4, key=1, label=specifiedType, style=dashed];
m6_206 -> m6_221  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_206 -> m6_224  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_206 -> m6_248  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_207 -> m6_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonContract", style=dashed];
m6_258 -> m6_494  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_258 -> m6_495  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_258 -> m6_496  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_258 -> m6_497  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_258 -> m6_498  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_258 -> m6_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_258 -> m6_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_258 -> m6_503  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_258 -> m6_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_258 -> m6_506  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_260 -> m6_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m6_260 -> m6_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m6_260 -> m6_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m6_260 -> m6_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m6_260 -> m6_464  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_260 -> m6_465  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_260 -> m6_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m6_260 -> m6_469  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_260 -> m6_472  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_260 -> m6_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_260 -> m6_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m6_260 -> m6_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_260 -> m6_486  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_260 -> m6_487  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_260 -> m6_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonDynamicContract", style=dashed];
m6_510 -> m6_523  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_510 -> m6_524  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_510 -> m6_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_510 -> m6_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonObjectContract", style=dashed];
m6_514 -> m6_517  [color=darkseagreen4, key=1, label=propertyValues, style=dashed];
m6_515 -> m6_559  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_515 -> m6_562  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_522 -> m6_524  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m6_522 -> m6_525  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m6_522 -> m6_530  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m6_522 -> m6_549  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m6_522 -> m6_550  [color=darkseagreen4, key=1, label=createdObject, style=dashed];
m6_516 -> m6_521  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m6_516 -> m6_526  [color=darkseagreen4, key=1, label=remainingPropertyValues, style=dashed];
m6_518 -> m6_521  [color=darkseagreen4, key=1, label=propertyValue, style=dashed];
m6_518 -> m6_565  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_527 -> m6_530  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_527 -> m6_531  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_528 -> m6_530  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_528 -> m6_531  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_532 -> m6_541  [color=darkseagreen4, key=1, label=propertyContract, style=dashed];
m6_529 -> m6_529  [color=darkseagreen4, key=1, label=remainingPropertyValue, style=dashed];
m6_537 -> m6_540  [color=darkseagreen4, key=1, label=createdObjectCollectionWrapper, style=dashed];
m6_545 -> m6_548  [color=darkseagreen4, key=1, label=createdObjectDictionaryWrapper, style=dashed];
m6_548 -> m6_548  [color=darkseagreen4, key=1, label=newValue, style=dashed];
m6_389 -> m6_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_392 -> m6_395  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_392 -> m6_397  [color=darkseagreen4, key=1, label=bool, style=dashed];
m6_392 -> m6_399  [color=darkseagreen4, key=1, label="System.Collections.IList", style=dashed];
m6_160 -> m6_171  [color=darkseagreen4, key=1, label=converter, style=dashed];
m6_362 -> m6_374  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m6_366 -> m6_373  [color=darkseagreen4, key=1, label=keyValue, style=dashed];
m6_458 -> m6_465  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_458 -> m6_466  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_458 -> m6_476  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_458 -> m6_479  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_458 -> m6_481  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_458 -> m6_488  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_458 -> m6_489  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_462 -> m6_465  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_462 -> m6_466  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_462 -> m6_476  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_462 -> m6_479  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_462 -> m6_481  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_462 -> m6_488  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_462 -> m6_489  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_467 -> m6_482  [color=darkseagreen4, key=1, label=initialDepth, style=dashed];
m6_471 -> m6_473  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_471 -> m6_479  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_471 -> m6_481  [color=darkseagreen4, key=1, label=memberName, style=dashed];
m6_474 -> m6_476  [color=darkseagreen4, key=1, label=property, style=dashed];
m6_493 -> m6_504  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_493 -> m6_506  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_493 -> m6_507  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_499 -> m6_506  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_499 -> m6_507  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_501 -> m6_506  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_501 -> m6_507  [color=darkseagreen4, key=1, label=newObject, style=dashed];
m6_312 -> m6_326  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m6_314 -> m6_326  [color=darkseagreen4, key=1, label=useExistingValue, style=dashed];
m6_325 -> m6_327  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_307 -> m6_326  [color=darkseagreen4, key=1, label=currentValue, style=dashed];
m6_308 -> m6_315  [color=darkseagreen4, key=1, label=useExistingValue, style=dashed];
m6_308 -> m6_326  [color=darkseagreen4, key=1, label=useExistingValue, style=dashed];
m6_2 -> m6_6  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2 -> m6_7  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2 -> m6_8  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2 -> m6_10  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2 -> m6_12  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2 -> m6_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2 -> m6_15  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2 -> m6_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2 -> m6_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_2 -> m6_20  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2 -> m6_22  [color=darkseagreen4, key=1, label=object, style=dashed];
m6_2 -> m6_24  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m6_4 -> m6_11  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m6_4 -> m6_23  [color=darkseagreen4, key=1, label=objectType, style=dashed];
m6_17 -> m6_20  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_17 -> m6_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_5 -> m6_9  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_5 -> m6_10  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_5 -> m6_19  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_5 -> m6_20  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_5 -> m6_21  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_5 -> m6_22  [color=darkseagreen4, key=1, label=contract, style=dashed];
m6_14 -> m6_20  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_14 -> m6_22  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_566 -> m6_566  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<System.Reflection.ParameterInfo, object>", style=dashed];
m7_413 -> m7_475  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_89 -> m7_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_90 -> m7_96  [color=darkseagreen4, key=1, label=negative, style=dashed];
m7_95 -> m7_98  [color=darkseagreen4, key=1, label=offset, style=dashed];
m7_231 -> m7_252  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_231 -> m7_253  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_105 -> m7_119  [color=darkseagreen4, key=1, label=kind, style=dashed];
m7_106 -> m7_110  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_108 -> m7_110  [color=darkseagreen4, key=1, label=index, style=dashed];
m7_112 -> m7_117  [color=darkseagreen4, key=1, label=offset, style=dashed];
m7_109 -> m7_117  [color=darkseagreen4, key=1, label=offset, style=dashed];
m7_111 -> m7_119  [color=darkseagreen4, key=1, label=kind, style=dashed];
m7_115 -> m7_117  [color=darkseagreen4, key=1, label=utcDateTime, style=dashed];
m7_201 -> m7_203  [color=darkseagreen4, key=1, label=dt, style=dashed];
m7_205 -> m7_208  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_205 -> m7_213  [color=green, key=1, label=currentChar, style=dashed];
m7_205 -> m7_217  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_205 -> m7_221  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_205 -> m7_223  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_207 -> m7_217  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_207 -> m7_221  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_207 -> m7_223  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_135 -> m7_149  [color=darkseagreen4, key=1, label=value, style=dashed];
m7_455 -> m7_461  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_457 -> m7_460  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_402 -> m7_402  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_402 -> m7_404  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_402 -> m7_406  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_406 -> m7_406  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_406 -> m7_408  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_300 -> m7_398  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_405 -> m7_406  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_409 -> m7_411  [color=darkseagreen4, key=1, label=constructorName, style=dashed];
m7_415 -> m7_417  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_415 -> m7_420  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_425 -> m7_427  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m7_425 -> m7_432  [color=darkseagreen4, key=1, label=nonBase10, style=dashed];
m7_445 -> m7_497  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_422 -> m7_435  [color=darkseagreen4, key=1, label=number, style=dashed];
m7_422 -> m7_440  [color=darkseagreen4, key=1, label=number, style=dashed];
m7_430 -> m7_443  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m7_433 -> m7_443  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m7_436 -> m7_443  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m7_438 -> m7_443  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m7_429 -> m7_443  [color=darkseagreen4, key=1, label=numberValue, style=dashed];
m7_431 -> m7_443  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m7_434 -> m7_443  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m7_437 -> m7_443  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m7_441 -> m7_443  [color=darkseagreen4, key=1, label=numberType, style=dashed];
m7_474 -> m7_476  [color=darkseagreen4, key=1, label=match, style=dashed];
m7_466 -> m7_469  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_466 -> m7_472  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_278 -> m7_280  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_278 -> m7_283  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_278 -> m7_287  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_278 -> m7_288  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_25 -> m7_38  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_25 -> m7_70  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_25 -> m7_73  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_290 -> m7_290  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_290 -> m7_292  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_229 -> m7_317  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_229 -> m7_332  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_229 -> m7_344  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_229 -> m7_374  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_229 -> m7_375  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_229 -> m7_376  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_229 -> m7_378  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_230 -> m7_272  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_230 -> m7_273  [color=darkseagreen4, key=1, label=char, style=dashed];
m7_306 -> m7_308  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_306 -> m7_309  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_306 -> m7_310  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_306 -> m7_311  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_18 -> m7_20  [color=darkseagreen4, key=1, label=text, style=dashed];
m7_18 -> m7_21  [color=darkseagreen4, key=1, label=text, style=dashed];
m7_18 -> m7_22  [color=darkseagreen4, key=1, label=text, style=dashed];
m7_15 -> m7_17  [color=darkseagreen4, key=1, label=data, style=dashed];
m7_327 -> m7_330  [color=darkseagreen4, key=1, label=next, style=dashed];
m7_467 -> m7_469  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_468 -> m7_470  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_470 -> m7_470  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_470 -> m7_472  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_392 -> m7_398  [color=darkseagreen4, key=1, label=whitespace, style=dashed];
m7_397 -> m7_399  [color=darkseagreen4, key=1, label="out char", style=dashed];
m7_395 -> m7_398  [color=darkseagreen4, key=1, label=whitespace, style=dashed];
m7_41 -> m7_58  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_41 -> m7_69  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_41 -> m7_73  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_41 -> m7_75  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_41 -> m7_76  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_60 -> m7_62  [color=darkseagreen4, key=1, label=hexValues, style=dashed];
m7_61 -> m7_66  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_66 -> m7_66  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_63 -> m7_69  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_63 -> m7_73  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_63 -> m7_75  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m7_63 -> m7_76  [color=darkseagreen4, key=1, label=currentChar, style=dashed];
m8_126 -> m8_128  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_500 -> m8_502  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_500 -> m8_503  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_500 -> m8_504  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_500 -> m8_505  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_500 -> m8_506  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_500 -> m8_507  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_500 -> m8_508  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_500 -> m8_509  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_500 -> m8_510  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_333 -> m8_335  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_336  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_337  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_338  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_339  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_340  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_341  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_342  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_343  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_344  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_345  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_346  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_347  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_348  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_349  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_350  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_351  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_352  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_353  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_354  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_355  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_356  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_357  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_358  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_359  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_360  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_361  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_362  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_363  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_364  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_365  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_366  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_367  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_368  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_369  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_370  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_371  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_372  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_373  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_374  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_375  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_376  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_377  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_378  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_379  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_380  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_381  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_333 -> m8_382  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_531 -> m8_533  [color=green, key=1, label=reader, style=dashed];
m8_531 -> m8_534  [color=green, key=1, label=reader, style=dashed];
m8_531 -> m8_535  [color=green, key=1, label=reader, style=dashed];
m8_531 -> m8_536  [color=green, key=1, label=reader, style=dashed];
m8_531 -> m8_537  [color=green, key=1, label=reader, style=dashed];
m8_531 -> m8_538  [color=green, key=1, label=reader, style=dashed];
m8_531 -> m8_539  [color=green, key=1, label=reader, style=dashed];
m8_531 -> m8_542  [color=green, key=1, label=reader, style=dashed];
m8_531 -> m8_543  [color=green, key=1, label=reader, style=dashed];
m8_541 -> m8_541  [color=green, key=1, label=dt, style=dashed];
m8_152 -> m8_154  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_386 -> m8_388  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_386 -> m8_389  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_386 -> m8_390  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_386 -> m8_391  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_386 -> m8_392  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_386 -> m8_393  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_188 -> m8_197  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m8_189 -> m8_191  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_189 -> m8_192  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_189 -> m8_193  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_189 -> m8_194  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_189 -> m8_195  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_189 -> m8_198  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_189 -> m8_199  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_189 -> m8_200  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_189 -> m8_201  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_285 -> m8_287  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_288  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_289  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_290  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_291  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_292  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_293  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_294  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_295  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_296  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_297  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_285 -> m8_298  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_486 -> m8_488  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_486 -> m8_489  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_486 -> m8_490  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_486 -> m8_491  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_486 -> m8_492  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_486 -> m8_493  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_486 -> m8_494  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_486 -> m8_495  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_486 -> m8_496  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_408 -> m8_410  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_411  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_412  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_413  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_414  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_415  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_416  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_417  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_418  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_419  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_420  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_421  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_408 -> m8_422  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_256 -> m8_263  [color=darkseagreen4, key=1, label=json, style=dashed];
m8_231 -> m8_233  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_234  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_235  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_236  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_237  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_238  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_239  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_240  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_243  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_245  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_246  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_247  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_248  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_249  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_250  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_251  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_252  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_253  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_254  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_231 -> m8_255  [color=darkseagreen4, key=1, label=jsonWriter, style=dashed];
m8_241 -> m8_243  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_241 -> m8_244  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_244 -> m8_244  [color=darkseagreen4, key=1, label=i, style=dashed];
m8_257 -> m8_262  [color=darkseagreen4, key=1, label=serializer, style=dashed];
m8_258 -> m8_262  [color=darkseagreen4, key=1, label=jsonObject, style=dashed];
m8_259 -> m8_263  [color=darkseagreen4, key=1, label=sb, style=dashed];
m8_260 -> m8_262  [color=darkseagreen4, key=1, label=sw, style=dashed];
m8_319 -> m8_321  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_319 -> m8_322  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_319 -> m8_323  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_319 -> m8_324  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_319 -> m8_325  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_319 -> m8_326  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_319 -> m8_327  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_20 -> m8_22  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_86  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_87  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_88  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_89  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_90  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_91  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_92  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_93  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_94  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_95  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_96  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_97  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_98  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_99  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_100  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_101  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_102  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_103  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_104  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_105  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_106  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_107  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_108  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_109  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_110  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_111  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_112  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_113  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_114  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_115  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_84 -> m8_116  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_157 -> m8_159  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_428  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_429  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_430  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_431  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_432  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_433  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_434  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_435  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_436  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_426 -> m8_437  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_472 -> m8_474  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_472 -> m8_475  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_472 -> m8_476  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_472 -> m8_477  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_472 -> m8_478  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_472 -> m8_479  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_472 -> m8_480  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_472 -> m8_481  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_472 -> m8_482  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_516 -> m8_518  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_516 -> m8_519  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_516 -> m8_520  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_516 -> m8_521  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_516 -> m8_522  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_516 -> m8_523  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_516 -> m8_524  [color=green, key=1, label=reader, style=dashed];
m8_516 -> m8_525  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_516 -> m8_526  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_521 -> m8_524  [color=darkseagreen4, key=1, label=d, style=dashed];
m8_30 -> m8_32  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_33  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_34  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_35  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_36  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_37  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_38  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_39  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_40  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_41  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_42  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_43  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_44  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_45  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_46  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_47  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_48  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_49  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_50  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_51  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_52  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_53  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_54  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_55  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_56  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_57  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_58  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_59  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_60  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_61  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_62  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_63  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_64  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_65  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_66  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_67  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_68  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_69  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_70  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_71  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_72  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_73  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_74  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_75  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_76  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_30 -> m8_77  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_173 -> m8_180  [color=darkseagreen4, key=1, label=helloWorldData, style=dashed];
m8_174 -> m8_176  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_174 -> m8_177  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_174 -> m8_178  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_174 -> m8_181  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_174 -> m8_182  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_174 -> m8_183  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_174 -> m8_184  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_454 -> m8_456  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_454 -> m8_457  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_454 -> m8_458  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_454 -> m8_459  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_454 -> m8_460  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_454 -> m8_461  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_454 -> m8_462  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_454 -> m8_463  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_454 -> m8_464  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_1 -> m8_3  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_1 -> m8_5  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_6 -> m8_8  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_6 -> m8_10  [color=darkseagreen4, key=1, label=ms, style=dashed];
m8_7 -> m8_9  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_162 -> m8_164  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_162 -> m8_165  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_162 -> m8_166  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_162 -> m8_167  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_162 -> m8_168  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_162 -> m8_169  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_305  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_306  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_307  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_308  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_309  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_310  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_311  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_312  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_303 -> m8_313  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_206 -> m8_208  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_209  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_210  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_211  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_212  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_213  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_214  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_215  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_216  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_217  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_218  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_219  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_220  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_206 -> m8_221  [color=darkseagreen4, key=1, label=jsonReader, style=dashed];
m8_441 -> m8_443  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_441 -> m8_444  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_441 -> m8_445  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_441 -> m8_446  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_441 -> m8_447  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_441 -> m8_448  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_441 -> m8_449  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_441 -> m8_450  [color=darkseagreen4, key=1, label=reader, style=dashed];
m8_548 -> m8_550  [color=green, key=1, label=reader, style=dashed];
m8_548 -> m8_551  [color=green, key=1, label=reader, style=dashed];
m8_548 -> m8_552  [color=green, key=1, label=reader, style=dashed];
m8_548 -> m8_553  [color=green, key=1, label=reader, style=dashed];
m8_548 -> m8_554  [color=green, key=1, label=reader, style=dashed];
m8_548 -> m8_555  [color=green, key=1, label=reader, style=dashed];
m8_548 -> m8_556  [color=green, key=1, label=reader, style=dashed];
m8_548 -> m8_559  [color=green, key=1, label=reader, style=dashed];
m8_548 -> m8_560  [color=green, key=1, label=reader, style=dashed];
m8_558 -> m8_558  [color=green, key=1, label=dt, style=dashed];
m8_579 -> m8_581  [color=green, key=1, label=reader, style=dashed];
m8_579 -> m8_582  [color=green, key=1, label=reader, style=dashed];
m8_579 -> m8_583  [color=green, key=1, label=reader, style=dashed];
m8_579 -> m8_584  [color=green, key=1, label=reader, style=dashed];
m8_579 -> m8_586  [color=green, key=1, label=reader, style=dashed];
m8_579 -> m8_587  [color=green, key=1, label=reader, style=dashed];
m8_579 -> m8_589  [color=green, key=1, label=reader, style=dashed];
m8_579 -> m8_590  [color=green, key=1, label=reader, style=dashed];
m8_585 -> m8_588  [color=green, key=1, label=d, style=dashed];
m3_480 -> m3_12  [color=darkseagreen4, key=1, label="ref Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m3_479 -> m3_5  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m3_479 -> m3_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m3_479 -> m3_14  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.ResolverContractKey", style=dashed];
m3_481 -> m3_59  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_258  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_98  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_100  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_105  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_110  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_276  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_300  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_214  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_23  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_25  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_264  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_251  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_306  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_308  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_314  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_316  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_322  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_392  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_381  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_294  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_28  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_270  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_439  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_481 -> m3_162  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.DefaultContractResolver", style=dashed];
m3_482 -> m3_287  [color=darkseagreen4, key=1, label=methodCall, style=dashed];
m3_483 -> m3_457  [color=darkseagreen4, key=1, label=shouldSerializeCall, style=dashed];
m3_484 -> m3_473  [color=darkseagreen4, key=1, label=specifiedPropertyGet, style=dashed];
m6_669 -> m6_115  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_53  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_55  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_449  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_450  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_451  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_43  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_351  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_355  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_575  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_582  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_612  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_615  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_622  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_625  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_627  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_628  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_630  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_631  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_641  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_642  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_646  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_119  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_122  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_124  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_130  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_136  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_145  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_291  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_413  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_414  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_416  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_419  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_425  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_106  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_107  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_174  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_184  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_191  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_212  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_215  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_222  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_228  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_229  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_233  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_238  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_244  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_247  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_47  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_524  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_529  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_549  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_663  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_389  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_67  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_61  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_63  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_360  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_361  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_369  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_373  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_374  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_465  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_466  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_476  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_481  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_482  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_498  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_500  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_318  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_321  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_16  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_18  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_20  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_669 -> m6_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonSerializerInternalReader", style=dashed];
m6_670 -> m6_393  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_670 -> m6_399  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_671 -> m6_394  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_671 -> m6_395  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_671 -> m6_396  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_671 -> m6_397  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_671 -> m6_398  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_671 -> m6_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.Serialization.JsonArrayContract", style=dashed];
m6_672 -> m6_399  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonReader", style=dashed];
m7_542 -> m7_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_198  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_200  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_177  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_178  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_179  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_180  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_182  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_183  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_208  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_210  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_173  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_542 -> m7_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_157  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_509  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_510  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_511  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_161  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_154  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_234  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_237  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_240  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_243  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_246  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_253  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_116  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_117  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_125  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_530  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_531  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_532  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_533  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_534  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_193  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_194  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_195  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_196  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_198  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_199  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_201  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_202  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_204  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_141  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_142  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_143  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_146  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_148  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_459  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_460  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_461  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_462  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_463  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_400  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_402  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_404  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_406  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_408  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_411  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_417  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_420  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_426  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_443  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_206  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_177  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_178  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_179  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_180  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_182  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_183  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_186  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_188  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_488  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_490  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_280  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_285  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_287  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_290  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_292  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_293  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_213  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_215  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_217  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_221  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_223  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_227  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_513  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_514  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_515  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_304  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_309  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_310  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_311  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_312  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_10  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_11  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_13  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_17  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_21  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_22  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_263  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_266  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_273  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_521  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_522  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_523  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_317  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_320  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_323  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_326  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_329  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_331  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_332  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_333  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_336  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_339  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_342  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_343  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_344  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_347  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_350  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_353  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_356  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_359  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_362  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_365  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_368  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_376  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_378  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_505  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_506  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_507  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_501  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_502  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_503  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_525  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_526  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_527  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_169  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_171  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_172  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_173  [color=green, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_85  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_517  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_518  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_519  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_37  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_38  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_39  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_44  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_46  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_48  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_50  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_52  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_54  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_58  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_65  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_68  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_69  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_70  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_75  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
m7_547 -> m7_76  [color=darkseagreen4, key=1, label="Newtonsoft.Json.JsonTextReader", style=dashed];
}
