digraph  {
n23 [label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website", span=""];
n0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()"];
n1 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()", span="47-47", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website()"];
n2 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)"];
n3 [label="website == null", span="53-53", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)"];
n5 [label="Url = website.Url", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)"];
n4 [label="throw new ArgumentNullException(''website'');", span="54-54", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)"];
n6 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)", span="51-51", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website.Website(Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website)"];
n7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n8 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", span="62-62", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()"];
n9 [label="string json = @''{'Url':'http://www.google.com'}''", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()"];
n10 [label="JsonConvert.DeserializeObject<Website>(json)", span="69-69", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()"];
n13 [label="Website website = JsonConvert.DeserializeObject<Website>(json, new JsonSerializerSettings\r\n            {\r\n                ConstructorHandling = ConstructorHandling.AllowNonPublicDefaultConstructor\r\n            })", span="78-81", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()"];
n11 [label=Exception, span="71-71", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()"];
n17 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)"];
n12 [label="Console.WriteLine(ex)", span="73-73", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", color=red, community=0];
n18 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)"];
n14 [label="Console.WriteLine(website.Url)", span="83-83", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()"];
n19 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="382-382", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()"];
n20 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)"];
n15 [label="Assert.AreEqual(''http://www.google.com'', website.Url)", span="87-87", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()"];
n21 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)"];
n16 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", span="62-62", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()"];
n22 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual"];
d12 [label="Console.WriteLine(ex.Message)", span="73-73", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Example()", color=green, community=0];
m0_35 [label="Entry Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", span="359-359", cluster="Newtonsoft.Json.JsonSerializerSettings.JsonSerializerSettings()", file="JContainer.cs"];
m0_99 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicNoWriteExtensionDataAttributeTestClass.PublicNoWriteExtensionDataAttributeTestClass()", span="298-298", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicNoWriteExtensionDataAttributeTestClass.PublicNoWriteExtensionDataAttributeTestClass()", file="JContainer.cs"];
m0_58 [label="Entry Newtonsoft.Json.Linq.JObject.JObject()", span="87-87", cluster="Newtonsoft.Json.Linq.JObject.JObject()", file="JContainer.cs"];
m0_37 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", span="135-135", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs"];
m0_38 [label="string json = @''{\r\n              'HourlyRate': 150,\r\n              'Hours': 40,\r\n              'TaxRate': 0.125\r\n            }''", span="137-141", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs"];
m0_39 [label="var invoice = JsonConvert.DeserializeObject<CustomerInvoice>(json)", span="143-143", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs"];
m0_40 [label="invoice.TaxRate = 0.15m", span="146-146", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs"];
m0_41 [label="string result = JsonConvert.SerializeObject(invoice)", span="148-148", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs"];
m0_42 [label="Assert.AreEqual(@''{''''TaxRate'''':0.15,''''HourlyRate'''':150,''''Hours'''':40}'', result)", span="155-155", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs"];
m0_43 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", span="135-135", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataExample()", file="JContainer.cs"];
m0_132 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs"];
m0_133 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n    ''''HourlyWage'''': 2.0,\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n    ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n  }\r\n}''", span="474-485", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs", color=green, community=0];
m0_134 [label="PublicExtensionDataAttributeTestClassWithNonDefaultConstructor c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClassWithNonDefaultConstructor>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="487-490", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", color=red, community=0, file="JContainer.cs"];
m0_135 [label="Assert.AreEqual(''Name!'', c2.Name)", span="492-492", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs"];
m0_136 [label="WagePerson bizzaroC2 = (WagePerson)c2.ExtensionData[''Self'']", span="494-494", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs"];
m0_137 [label="Assert.AreEqual(2m, bizzaroC2.HourlyWage)", span="496-496", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs"];
m0_138 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", span="472-472", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandlingNonDefaultConstructor()", file="JContainer.cs"];
m0_20 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", span="81-81", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs"];
m0_21 [label="string json = @''{\r\n              'TaxRate': 0.125,\r\n              'a':null\r\n            }''", span="83-86", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs"];
m0_22 [label="var invoice = JsonConvert.DeserializeObject<ExtendedObject>(json)", span="88-88", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs"];
m0_23 [label="Assert.AreEqual(JTokenType.Null, invoice._additionalData[''a''].Type)", span="90-90", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs"];
m0_24 [label="Assert.AreEqual(typeof(double), ((JValue)invoice._additionalData[''TaxRate'']).Value.GetType())", span="91-91", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs"];
m0_25 [label="string result = JsonConvert.SerializeObject(invoice)", span="93-93", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs"];
m0_26 [label="Assert.AreEqual(@''{''''TaxRate'''':0.125,''''a'''':null}'', result)", span="95-95", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs"];
m0_27 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", span="81-81", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataWithNull()", file="JContainer.cs"];
m0_91 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", span="342-342", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="JContainer.cs"];
m0_92 [label="string json = JsonConvert.SerializeObject(new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!''\r\n            })", span="344-347", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="JContainer.cs"];
m0_93 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="349-349", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="JContainer.cs"];
m0_94 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", span="342-342", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataNull()", file="JContainer.cs"];
m0_59 [label="Entry Newtonsoft.Json.Linq.JArray.JArray(params object[])", span="82-82", cluster="Newtonsoft.Json.Linq.JArray.JArray(params object[])", file="JContainer.cs"];
m0_125 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs"];
m0_126 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n    ''''HourlyWage'''': 2.0,\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n    ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n  }\r\n}''", span="446-457", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", color=green, community=0, file="JContainer.cs"];
m0_127 [label="PublicExtensionDataAttributeTestClass c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects\r\n            })", span="459-462", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", color=green, community=0];
m0_128 [label="Assert.AreEqual(''Name!'', c2.Name)", span="464-464", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs"];
m0_129 [label="WagePerson bizzaroC2 = (WagePerson)c2.ExtensionData[''Self'']", span="466-466", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs"];
m0_130 [label="Assert.AreEqual(2m, bizzaroC2.HourlyWage)", span="468-468", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", color=red, community=0, file="JContainer.cs"];
m0_131 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", span="444-444", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs"];
m0_139 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", span="500-500", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs"];
m0_140 [label="PublicExtensionDataAttributeTestClass c = new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    {\r\n                        ''Test'', new WagePerson\r\n                        {\r\n                            HourlyWage = 2.1m\r\n                        }\r\n                    }\r\n                }\r\n            }", span="502-514", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs", color=green, community=0];
m0_141 [label="string json = JsonConvert.SerializeObject(c, new JsonSerializerSettings\r\n            {\r\n                TypeNameHandling = TypeNameHandling.Objects,\r\n                Formatting = Formatting.Indented\r\n            })", span="516-520", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs"];
m0_142 [label="StringAssert.AreEqual(@''{\r\n  ''''$type'''': ''''Newtonsoft.Json.Tests.Serialization.ExtensionDataTests+PublicExtensionDataAttributeTestClass, Newtonsoft.Json.Tests'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': {\r\n    ''''$type'''': ''''Newtonsoft.Json.Tests.TestObjects.WagePerson, Newtonsoft.Json.Tests'''',\r\n    ''''HourlyWage'''': 2.1,\r\n    ''''Name'''': null,\r\n    ''''BirthDate'''': ''''0001-01-01T00:00:00'''',\r\n    ''''LastModified'''': ''''0001-01-01T00:00:00''''\r\n  }\r\n}'', json)", span="522-532", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs"];
m0_143 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", span="500-500", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataTypeNamdHandling()", file="JContainer.cs"];
m0_95 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", span="353-353", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="JContainer.cs"];
m0_96 [label="string json = JsonConvert.SerializeObject(new PublicNoWriteExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    { ''Test'', 1 }\r\n                }\r\n            })", span="355-362", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", color=green, community=0, file="JContainer.cs"];
m0_97 [label="Assert.AreEqual(@''{''''Name'''':''''Name!''''}'', json)", span="364-364", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="JContainer.cs"];
m0_98 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", span="353-353", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicNoWriteExtensionData()", file="JContainer.cs"];
m0_30 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", span="99-99", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs"];
m0_31 [label="string json = @''{\r\n              'TaxRate': 0.125,\r\n              'a':null\r\n            }''", span="101-104", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs"];
m0_32 [label="var invoice = JsonConvert.DeserializeObject<ExtendedObject>(json, new JsonSerializerSettings\r\n            {\r\n                FloatParseHandling = FloatParseHandling.Decimal\r\n            })", span="106-109", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs"];
m0_33 [label="Assert.AreEqual(typeof(decimal), ((JValue)invoice._additionalData[''TaxRate'']).Value.GetType())", span="111-111", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs"];
m0_34 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", span="99-99", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataFloatParseHandling()", file="JContainer.cs"];
m0_47 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="JContainer.cs"];
m0_174 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs"];
m0_175 [label="var c = JsonConvert.DeserializeObject<ExtensionDataAttributesInheritanceTestClass>(''{'first':1,'second':2}'')", span="595-595", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs"];
m0_176 [label="Assert.AreEqual(null, c.ExtensionData1)", span="597-597", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs"];
m0_177 [label="Assert.AreEqual(null, c.ExtensionData2)", span="598-598", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs"];
m0_178 [label="Assert.AreEqual(2, c.ExtensionData0.Count)", span="599-599", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs"];
m0_179 [label="Assert.AreEqual(1, (int)c.ExtensionData0[''first''])", span="600-600", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs"];
m0_180 [label="Assert.AreEqual(2, (int)c.ExtensionData0[''second''])", span="601-601", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs"];
m0_181 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", span="593-593", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataAttributesInheritanceTest()", file="JContainer.cs"];
m0_61 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="JContainer.cs"];
m0_48 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs"];
m0_49 [label="JObjectExtensionDataTestClass c = new JObjectExtensionDataTestClass()", span="198-198", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs"];
m0_50 [label="c.Name = ''Name!''", span="199-199", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs"];
m0_51 [label="c.ExtensionData = new JObject\r\n            {\r\n                { ''one'', 1 },\r\n                { ''two'', ''II'' },\r\n                { ''three'', new JArray(1, 1, 1) }\r\n            }", span="200-205", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs"];
m0_52 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="207-207", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs"];
m0_55 [label="Assert.IsTrue(JToken.DeepEquals(c.ExtensionData, c2.ExtensionData))", span="212-212", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs"];
m0_53 [label="JObjectExtensionDataTestClass c2 = JsonConvert.DeserializeObject<JObjectExtensionDataTestClass>(json)", span="209-209", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs"];
m0_54 [label="Assert.AreEqual(''Name!'', c2.Name)", span="211-211", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs"];
m0_56 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", span="196-196", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.RoundTripJObjectExtensionData()", file="JContainer.cs"];
m0_144 [label="Entry Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", span="27-27", cluster="Newtonsoft.Json.Tests.TestObjects.WagePerson.WagePerson()", file="JContainer.cs"];
m0_160 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", span="263-263", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTestClass.FieldExtensionDataAttributeTestClass()", file="JContainer.cs"];
m0_76 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", span="281-281", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", file="JContainer.cs"];
m0_77 [label="Name = name", span="283-283", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", file="JContainer.cs"];
m0_78 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", span="281-281", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor(string)", file="JContainer.cs"];
m0_14 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JContainer.cs"];
m0_18 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="JContainer.cs"];
m0_155 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs"];
m0_156 [label="FieldExtensionDataAttributeTestClass c = new FieldExtensionDataAttributeTestClass\r\n            {\r\n                ExtensionData = new Dictionary<object, object>()\r\n            }", span="561-564", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs"];
m0_157 [label="string json = JsonConvert.SerializeObject(c)", span="566-566", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs"];
m0_158 [label="Assert.AreEqual(''{}'', json)", span="568-568", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs"];
m0_159 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", span="559-559", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Serialize()", file="JContainer.cs"];
m0_86 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", span="327-327", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="JContainer.cs"];
m0_87 [label="string json = JsonConvert.SerializeObject(new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    { ''Test'', 1 }\r\n                }\r\n            })", span="329-336", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="JContainer.cs"];
m0_88 [label="Assert.AreEqual(@''{''''Name'''':''''Name!'''',''''Test'''':1}'', json)", span="338-338", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="JContainer.cs"];
m0_89 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", span="327-327", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionData()", file="JContainer.cs"];
m0_15 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", span="525-525", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.Formatting)", file="JContainer.cs"];
m0_100 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", span="368-368", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="JContainer.cs"];
m0_101 [label="PublicNoReadExtensionDataAttributeTestClass c = JsonConvert.DeserializeObject<PublicNoReadExtensionDataAttributeTestClass>(@''{''''Name'''':''''Name!'''',''''Test'''':1}'')", span="370-370", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="JContainer.cs"];
m0_102 [label="Assert.AreEqual(null, c.ExtensionData)", span="372-372", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="JContainer.cs"];
m0_103 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", span="368-368", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeNoReadPublicExtensionData()", file="JContainer.cs"];
m0_104 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", span="376-376", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs"];
m0_105 [label="var c = new PublicExtensionDataAttributeTestClass\r\n            {\r\n                Name = ''Name!'',\r\n                ExtensionData = new Dictionary<object, object>\r\n                {\r\n                    { ''Test'', 1 }\r\n                }\r\n            }", span="378-385", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs", color=green, community=0];
m0_106 [label="c.ExtensionData[''Self''] = c", span="386-386", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs"];
m0_107 [label="string json = JsonConvert.SerializeObject(c, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All,\r\n                Formatting = Formatting.Indented\r\n            })", span="388-392", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", color=red, community=0, file="JContainer.cs"];
m0_108 [label="StringAssert.AreEqual(@''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}'', json)", span="394-401", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", color=green, community=0, file="JContainer.cs"];
m0_109 [label="var c2 = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            })", span="403-406", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs", color=green, community=0];
m0_110 [label="Assert.AreEqual(''Name!'', c2.Name)", span="408-408", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", color=green, community=0, file="JContainer.cs"];
m0_111 [label="PublicExtensionDataAttributeTestClass bizzaroC2 = (PublicExtensionDataAttributeTestClass)c2.ExtensionData[''Self'']", span="410-410", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs", color=green, community=0];
m0_112 [label="Assert.AreEqual(c2, bizzaroC2)", span="412-412", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs"];
m0_113 [label="Assert.AreEqual(1, (long)bizzaroC2.ExtensionData[''Test''])", span="413-413", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs"];
m0_114 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", span="376-376", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.SerializePublicExtensionDataCircularReference()", file="JContainer.cs"];
m0_29 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object)", span="512-512", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object)", file="JContainer.cs"];
m0_57 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.JObjectExtensionDataTestClass.JObjectExtensionDataTestClass()", span="187-187", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.JObjectExtensionDataTestClass.JObjectExtensionDataTestClass()", file="JContainer.cs"];
m0_17 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", span="739-739", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string)", file="JContainer.cs"];
m0_19 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="JContainer.cs"];
m0_145 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_146 [label="string json = @''{\r\n  'Name':'Name!',\r\n  'NoMatch':'NoMatch!',\r\n  'ExtensionData':{'HAI':true}\r\n}''", span="538-542", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_147 [label="var c = JsonConvert.DeserializeObject<PublicExtensionDataAttributeTestClass>(json)", span="544-544", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_148 [label="Assert.AreEqual(''Name!'', c.Name)", span="546-546", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_149 [label="Assert.AreEqual(2, c.ExtensionData.Count)", span="547-547", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_150 [label="Assert.AreEqual(''NoMatch!'', (string)c.ExtensionData[''NoMatch''])", span="549-549", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_151 [label="var o = (JObject)c.ExtensionData[''ExtensionData'']", span="553-553", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_152 [label="Assert.AreEqual(1, o.Count)", span="554-554", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_153 [label="Assert.IsTrue(JToken.DeepEquals(new JObject { { ''HAI'', true } }, o))", span="555-555", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_154 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", span="536-536", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicExtensionData()", file="JContainer.cs"];
m0_3 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", span="57-57", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_4 [label="ExtensionDataDeserializeWithNonDefaultConstructor c = new ExtensionDataDeserializeWithNonDefaultConstructor(''Name!'')", span="59-59", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_5 [label="c._extensionData = new Dictionary<string, JToken>\r\n            {\r\n                { ''Key!'', ''Value!'' }\r\n            }", span="60-63", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_6 [label="string json = JsonConvert.SerializeObject(c, Formatting.Indented)", span="65-65", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_7 [label="StringAssert.AreEqual(@''{\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Key!'''': ''''Value!''''\r\n}'', json)", span="67-70", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_8 [label="var c2 = JsonConvert.DeserializeObject<ExtensionDataDeserializeWithNonDefaultConstructor>(json)", span="72-72", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_9 [label="Assert.AreEqual(''Name!'', c2.Name)", span="74-74", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_10 [label="Assert.IsNotNull(c2._extensionData)", span="75-75", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_11 [label="Assert.AreEqual(1, c2._extensionData.Count)", span="76-76", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_12 [label="Assert.AreEqual(''Value!'', (string)c2._extensionData[''Key!''])", span="77-77", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_13 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", span="57-57", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructorTest()", file="JContainer.cs"];
m0_161 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs"];
m0_162 [label="var c = JsonConvert.DeserializeObject<FieldExtensionDataAttributeTestClass>(''{'first':1,'second':2}'')", span="574-574", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs"];
m0_163 [label="Assert.AreEqual(2, c.ExtensionData.Count)", span="576-576", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs"];
m0_164 [label="Assert.AreEqual(1, (long)c.ExtensionData[''first''])", span="577-577", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs"];
m0_165 [label="Assert.AreEqual(2, (long)c.ExtensionData[''second''])", span="578-578", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs"];
m0_166 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", span="572-572", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.FieldExtensionDataAttributeTest_Deserialize()", file="JContainer.cs"];
m0_0 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", span="45-45", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", file="JContainer.cs"];
m0_1 [label="Name = name", span="47-47", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", file="JContainer.cs"];
m0_2 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", span="45-45", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor.ExtensionDataDeserializeWithNonDefaultConstructor(string)", file="JContainer.cs"];
m0_79 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", span="315-315", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs"];
m0_80 [label="string json = @''{'DisplayName':'John Smith', 'SAMAccountName':'contoso\\johns'}''", span="317-317", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs"];
m0_81 [label="DirectoryAccount account = JsonConvert.DeserializeObject<DirectoryAccount>(json)", span="319-319", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs"];
m0_82 [label="Assert.AreEqual(''John Smith'', account.DisplayName)", span="321-321", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs"];
m0_83 [label="Assert.AreEqual(''contoso'', account.Domain)", span="322-322", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs"];
m0_84 [label="Assert.AreEqual(''johns'', account.UserName)", span="323-323", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs"];
m0_85 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", span="315-315", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializeDirectoryAccount()", file="JContainer.cs"];
m0_167 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs"];
m0_168 [label="var c = JsonConvert.DeserializeObject<MultipleExtensionDataAttributesTestClass>(''{'first':[1],'second':[2]}'')", span="584-584", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs"];
m0_169 [label="Assert.AreEqual(null, c.ExtensionData1)", span="586-586", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs"];
m0_170 [label="Assert.AreEqual(2, c.ExtensionData2.Count)", span="587-587", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs"];
m0_171 [label="Assert.AreEqual(1, (int)((JArray)c.ExtensionData2[''first''])[0])", span="588-588", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs"];
m0_172 [label="Assert.AreEqual(2, (int)((JArray)c.ExtensionData2[''second''])[0])", span="589-589", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs"];
m0_173 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", span="582-582", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.MultipleExtensionDataAttributesTest()", file="JContainer.cs"];
m0_36 [label="Entry Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", span="802-802", cluster="Newtonsoft.Json.JsonConvert.DeserializeObject<T>(string, Newtonsoft.Json.JsonSerializerSettings)", file="JContainer.cs"];
m0_62 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", span="216-216", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_63 [label="string json = @''{\r\n  ''''Ints'''': [1,2,3],\r\n  ''''Ignored'''': [1,2,3],\r\n  ''''Readonly'''': ''''Readonly'''',\r\n  ''''Name'''': ''''Actually set!'''',\r\n  ''''CustomName'''': ''''Wrong name!'''',\r\n  ''''GetPrivate'''': true,\r\n  ''''GetOnly'''': true,\r\n  ''''NewValueSimple'''': true,\r\n  ''''NewValueComplex'''': [1,2,3]\r\n}''", span="218-228", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_64 [label="ExtensionDataTestClass c = JsonConvert.DeserializeObject<ExtensionDataTestClass>(json)", span="230-230", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", color=green, community=0];
m0_65 [label="Assert.AreEqual(''Actually set!'', c.Name)", span="232-232", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", color=green, community=0];
m0_66 [label="Assert.AreEqual(4, c.Ints.Count)", span="233-233", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs", color=green, community=0];
m0_67 [label="Assert.AreEqual(''Readonly'', (string)c.ExtensionData[''Readonly''])", span="235-235", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_68 [label="Assert.AreEqual(''Wrong name!'', (string)c.ExtensionData[''CustomName''])", span="236-236", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_69 [label="Assert.AreEqual(true, (bool)c.ExtensionData[''GetPrivate''])", span="237-237", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_70 [label="Assert.AreEqual(true, (bool)c.ExtensionData[''GetOnly''])", span="238-238", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_71 [label="Assert.AreEqual(true, (bool)c.ExtensionData[''NewValueSimple''])", span="239-239", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_72 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), c.ExtensionData[''NewValueComplex'']))", span="240-240", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", color=red, community=0, file="JContainer.cs"];
m0_73 [label="Assert.IsTrue(JToken.DeepEquals(new JArray(1, 2, 3), c.ExtensionData[''Ignored'']))", span="241-241", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_74 [label="Assert.AreEqual(7, c.ExtensionData.Count)", span="243-243", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_75 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", span="216-216", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTest()", file="JContainer.cs"];
m0_16 [label="Entry Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", span="184-184", cluster="Newtonsoft.Json.Tests.StringAssert.AreEqual(string, string)", file="JContainer.cs"];
m0_90 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClass.PublicExtensionDataAttributeTestClass()", span="269-269", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClass.PublicExtensionDataAttributeTestClass()", file="JContainer.cs"];
m0_28 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="JContainer.cs"];
m0_116 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs"];
m0_117 [label="string json = @''{\r\n  ''''$id'''': ''''1'''',\r\n  ''''Name'''': ''''Name!'''',\r\n  ''''Test'''': 1,\r\n  ''''Self'''': {\r\n    ''''$ref'''': ''''1''''\r\n  }\r\n}''", span="419-426", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs", color=green, community=0];
m0_118 [label="var c2 = JsonConvert.DeserializeObject<PublicJTokenExtensionDataAttributeTestClass>(json, new JsonSerializerSettings\r\n            {\r\n                PreserveReferencesHandling = PreserveReferencesHandling.All\r\n            })", span="428-431", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs"];
m0_119 [label="Assert.AreEqual(''Name!'', c2.Name)", span="433-433", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs"];
m0_120 [label="JObject bizzaroC2 = (JObject)c2.ExtensionData[''Self'']", span="435-435", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs"];
m0_123 [label="Assert.AreEqual(1, (int)c2.ExtensionData[''Test''])", span="440-440", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs"];
m0_121 [label="Assert.AreEqual(''Name!'', (string)bizzaroC2[''Name''])", span="437-437", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs"];
m0_122 [label="Assert.AreEqual(1, (int)bizzaroC2[''Test''])", span="438-438", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs"];
m0_124 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", span="417-417", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.DeserializePublicJTokenExtensionDataCircularReference()", file="JContainer.cs"];
m0_44 [label="Entry Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", file="JContainer.cs"];
m0_45 [label="Ints = new List<int> { 0 }", span="183-183", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", file="JContainer.cs"];
m0_46 [label="Exit Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", span="181-181", cluster="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass.ExtensionDataTestClass()", file="JContainer.cs"];
m0_115 [label="Entry Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", span="570-570", cluster="Newtonsoft.Json.JsonConvert.SerializeObject(object, Newtonsoft.Json.JsonSerializerSettings)", file="JContainer.cs"];
m0_60 [label="Entry Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", span="152-152", cluster="Newtonsoft.Json.Linq.JToken.DeepEquals(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)", file="JContainer.cs"];
m0_182 [label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor", span="", file="JContainer.cs"];
m0_183 [label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass", span="", file="JContainer.cs"];
m0_184 [label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor", span="", file="JContainer.cs"];
m1_17 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="SerializeWithJsonSerializerToFile.cs"];
m1_10 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", span="70-70", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", file="SerializeWithJsonSerializerToFile.cs"];
m1_18 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", span="70-70", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", file="SerializeWithJsonSerializerToFile.cs"];
m1_12 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="SerializeWithJsonSerializerToFile.cs"];
m1_13 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="403-403", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="SerializeWithJsonSerializerToFile.cs"];
m1_11 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", file="SerializeWithJsonSerializerToFile.cs"];
m1_14 [label="return new StreamWriter(new MemoryStream());", span="67-67", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", file="SerializeWithJsonSerializerToFile.cs"];
m1_15 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", file="SerializeWithJsonSerializerToFile.cs"];
m1_8 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="SerializeWithJsonSerializerToFile.cs"];
m1_7 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="SerializeWithJsonSerializerToFile.cs"];
m1_9 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="SerializeWithJsonSerializerToFile.cs"];
m1_16 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="SerializeWithJsonSerializerToFile.cs"];
m1_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs"];
m1_1 [label="JObject videogameRatings = new JObject(\r\n                new JProperty(''Halo'', 9),\r\n                new JProperty(''Starcraft'', 9),\r\n                new JProperty(''Call of Duty'', 7.5))", span="47-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs"];
m1_2 [label="File.WriteAllText(@''c:\videogames.json'', videogameRatings.ToString())", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs"];
m1_5 [label="videogameRatings.WriteTo(writer)", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs"];
m1_3 [label="StreamWriter file = File.CreateText(@''c:\videogames.json'')", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs"];
m1_4 [label="JsonTextWriter writer = new JsonTextWriter(file)", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs"];
m1_6 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="SerializeWithJsonSerializerToFile.cs"];
m2_17 [label="Entry System.IO.MemoryStream.MemoryStream()", span="0-0", cluster="System.IO.MemoryStream.MemoryStream()", file="WriteToJsonFile.cs"];
m2_13 [label="Entry Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", span="403-403", cluster="Newtonsoft.Json.Linq.JObject.WriteTo(Newtonsoft.Json.JsonWriter, params Newtonsoft.Json.JsonConverter[])", file="WriteToJsonFile.cs"];
m2_12 [label="Entry Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", span="124-124", cluster="Newtonsoft.Json.JsonTextWriter.JsonTextWriter(System.IO.TextWriter)", file="WriteToJsonFile.cs"];
m2_10 [label="Entry Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", span="68-68", cluster="Newtonsoft.Json.Tests.Documentation.File.WriteAllText(string, string)", file="WriteToJsonFile.cs"];
m2_18 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", span="70-70", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.WriteAllText(string, string)", file="WriteToJsonFile.cs"];
m2_11 [label="Entry Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", span="63-63", cluster="Newtonsoft.Json.Tests.Documentation.File.CreateText(string)", file="WriteToJsonFile.cs"];
m2_14 [label="return new StreamWriter(new MemoryStream());", span="67-67", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", color=green, community=0, file="WriteToJsonFile.cs"];
m2_15 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", span="65-65", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.File.CreateText(string)", file="WriteToJsonFile.cs"];
m2_8 [label="Entry Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", span="293-293", cluster="Newtonsoft.Json.Linq.JProperty.JProperty(string, object)", file="WriteToJsonFile.cs"];
m2_7 [label="Entry Newtonsoft.Json.Linq.JObject.JObject(params object[])", span="104-104", cluster="Newtonsoft.Json.Linq.JObject.JObject(params object[])", file="WriteToJsonFile.cs"];
m2_9 [label="Entry Newtonsoft.Json.Linq.JToken.ToString()", span="410-410", cluster="Newtonsoft.Json.Linq.JToken.ToString()", file="WriteToJsonFile.cs"];
m2_16 [label="Entry System.IO.StreamWriter.StreamWriter(System.IO.Stream)", span="0-0", cluster="System.IO.StreamWriter.StreamWriter(System.IO.Stream)", file="WriteToJsonFile.cs"];
m2_0 [label="Entry Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs"];
m2_1 [label="JObject videogameRatings = new JObject(\r\n                new JProperty(''Halo'', 9),\r\n                new JProperty(''Starcraft'', 9),\r\n                new JProperty(''Call of Duty'', 7.5))", span="47-50", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs"];
m2_2 [label="File.WriteAllText(@''c:\videogames.json'', videogameRatings.ToString())", span="52-52", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs"];
m2_5 [label="videogameRatings.WriteTo(writer)", span="58-58", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs"];
m2_3 [label="StreamWriter file = File.CreateText(@''c:\videogames.json'')", span="55-55", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs"];
m2_4 [label="JsonTextWriter writer = new JsonTextWriter(file)", span="56-56", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs"];
m2_6 [label="Exit Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", span="44-44", cluster="Newtonsoft.Json.Tests.Documentation.Samples.Linq.WriteToJsonFile.Example()", file="WriteToJsonFile.cs"];
n23 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Documentation.Samples.Serializer.DeserializeConstructorHandling.Website"];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n4 -> n6  [key=0, style=solid];
n4 -> n7  [key=2, style=dotted];
n6 -> n2  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n13  [key=1, style=dashed, color=darkseagreen4, label=json];
n9 -> n9  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [key=0, style=solid];
n10 -> n17  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n13 -> n20  [key=2, style=dotted];
n13 -> n15  [key=1, style=dashed, color=darkseagreen4, label=website];
n11 -> n12  [key=0, style=solid, color=red];
n11 -> d12  [key=0, style=solid, color=green];
n12 -> n13  [key=0, style=solid, color=red];
n12 -> n18  [key=2, style=dotted, color=red];
n14 -> n15  [key=0, style=solid];
n14 -> n21  [key=2, style=dotted];
n15 -> n16  [key=0, style=solid];
n15 -> n22  [key=2, style=dotted];
n16 -> n8  [key=0, style=bold, color=blue];
d12 -> n13  [key=0, style=solid, color=green];
d12 -> n21  [key=2, style=dotted, color=green];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_38  [key=3, color=green, style=bold, label="Local variable string json"];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_17  [key=2, style=dotted];
m0_39 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=invoice];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_29  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_18  [key=2, style=dotted];
m0_43 -> m0_37  [key=0, style=bold, color=blue];
m0_132 -> m0_133  [key=0, style=solid, color=green];
m0_133 -> m0_134  [key=0, style=solid, color=green];
m0_133 -> m0_126  [key=3, color=green, style=bold, label="Local variable string json"];
m0_134 -> m0_135  [key=0, style=solid, color=red];
m0_134 -> m0_35  [key=2, style=dotted, color=red];
m0_134 -> m0_36  [key=2, style=dotted, color=red];
m0_134 -> m0_136  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_134 -> n19  [key=2, style=dotted];
m0_135 -> m0_136  [key=0, style=solid];
m0_135 -> m0_18  [key=2, style=dotted];
m0_136 -> m0_137  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_18  [key=2, style=dotted];
m0_138 -> m0_132  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_21  [key=3, color=green, style=bold, label="Local variable string json"];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_17  [key=2, style=dotted];
m0_22 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=invoice];
m0_22 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=invoice];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_18  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_28  [key=2, style=dotted];
m0_24 -> m0_18  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_29  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_18  [key=2, style=dotted];
m0_27 -> m0_20  [key=0, style=bold, color=blue];
m0_91 -> m0_92  [key=0, style=solid];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_90  [key=2, style=dotted];
m0_92 -> m0_29  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_18  [key=2, style=dotted];
m0_94 -> m0_91  [key=0, style=bold, color=blue];
m0_125 -> m0_126  [key=0, style=solid, color=green];
m0_126 -> m0_127  [key=0, style=solid, color=green];
m0_126 -> m0_126  [key=3, color=green, style=bold, label="Local variable string json"];
m0_127 -> m0_128  [key=0, style=solid, color=green];
m0_127 -> m0_35  [key=2, style=dotted];
m0_127 -> m0_36  [key=2, style=dotted, color=green];
m0_127 -> m0_129  [key=1, style=dashed, color=green, label=c2];
m0_127 -> n19  [key=2, style=dotted, color=green];
m0_128 -> m0_129  [key=0, style=solid];
m0_128 -> m0_18  [key=2, style=dotted];
m0_129 -> m0_130  [key=0, style=solid, color=red];
m0_130 -> m0_131  [key=0, style=solid, color=red];
m0_130 -> m0_18  [key=2, style=dotted, color=red];
m0_131 -> m0_125  [key=0, style=bold, color=blue];
m0_139 -> m0_140  [key=0, style=solid, color=green];
m0_140 -> m0_141  [key=0, style=solid, color=green];
m0_140 -> m0_90  [key=2, style=dotted, color=green];
m0_140 -> m0_14  [key=2, style=dotted, color=green];
m0_140 -> m0_144  [key=2, style=dotted, color=green];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_35  [key=2, style=dotted];
m0_141 -> m0_115  [key=2, style=dotted];
m0_141 -> n19  [key=2, style=dotted];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_16  [key=2, style=dotted];
m0_143 -> m0_139  [key=0, style=bold, color=blue];
m0_95 -> m0_96  [key=0, style=solid, color=green];
m0_96 -> m0_97  [key=0, style=solid, color=green];
m0_96 -> m0_99  [key=2, style=dotted, color=green];
m0_96 -> m0_14  [key=2, style=dotted, color=green];
m0_96 -> m0_29  [key=2, style=dotted, color=green];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_18  [key=2, style=dotted];
m0_98 -> m0_95  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_21  [key=3, color=green, style=bold, label="Local variable string json"];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_35  [key=2, style=dotted];
m0_32 -> m0_36  [key=2, style=dotted];
m0_32 -> n19  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_28  [key=2, style=dotted];
m0_33 -> m0_18  [key=2, style=dotted];
m0_34 -> m0_30  [key=0, style=bold, color=blue];
m0_174 -> m0_175  [key=0, style=solid];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_17  [key=2, style=dotted];
m0_175 -> m0_177  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_175 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_175 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_175 -> m0_180  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_18  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_18  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_18  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_18  [key=2, style=dotted];
m0_180 -> m0_181  [key=0, style=solid];
m0_180 -> m0_18  [key=2, style=dotted];
m0_181 -> m0_174  [key=0, style=bold, color=blue];
m0_48 -> m0_49  [key=0, style=solid];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_57  [key=2, style=dotted];
m0_49 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_49 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_49 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_58  [key=2, style=dotted];
m0_51 -> m0_59  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_15  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_60  [key=2, style=dotted];
m0_55 -> m0_61  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_17  [key=2, style=dotted];
m0_53 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_18  [key=2, style=dotted];
m0_56 -> m0_48  [key=0, style=bold, color=blue];
m0_76 -> m0_77  [key=0, style=solid];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_76  [key=0, style=bold, color=blue];
m0_155 -> m0_156  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_160  [key=2, style=dotted];
m0_156 -> m0_14  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_29  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_18  [key=2, style=dotted];
m0_159 -> m0_155  [key=0, style=bold, color=blue];
m0_86 -> m0_87  [key=0, style=solid];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_90  [key=2, style=dotted];
m0_87 -> m0_14  [key=2, style=dotted];
m0_87 -> m0_29  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_18  [key=2, style=dotted];
m0_89 -> m0_86  [key=0, style=bold, color=blue];
m0_100 -> m0_101  [key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_17  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_18  [key=2, style=dotted];
m0_103 -> m0_100  [key=0, style=bold, color=blue];
m0_104 -> m0_105  [key=0, style=solid, color=green];
m0_105 -> m0_106  [key=0, style=solid, color=green];
m0_105 -> m0_90  [key=2, style=dotted, color=green];
m0_105 -> m0_14  [key=2, style=dotted, color=green];
m0_105 -> m0_107  [key=1, style=dashed, color=green, label=c];
m0_106 -> m0_107  [key=0, style=solid, color=red];
m0_107 -> m0_108  [key=0, style=solid, color=green];
m0_107 -> m0_35  [key=2, style=dotted, color=red];
m0_107 -> m0_115  [key=2, style=dotted, color=red];
m0_107 -> m0_109  [key=1, style=dashed, color=green, label=json];
m0_107 -> n19  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid, color=green];
m0_108 -> m0_16  [key=2, style=dotted, color=green];
m0_109 -> m0_110  [key=0, style=solid, color=green];
m0_109 -> m0_35  [key=2, style=dotted];
m0_109 -> m0_36  [key=2, style=dotted, color=green];
m0_109 -> m0_111  [key=1, style=dashed, color=green, label=c2];
m0_109 -> m0_112  [key=1, style=dashed, color=green, label=c2];
m0_109 -> n19  [key=2, style=dotted, color=green];
m0_110 -> m0_111  [key=0, style=solid, color=green];
m0_110 -> m0_18  [key=2, style=dotted, color=green];
m0_111 -> m0_112  [key=0, style=solid, color=green];
m0_111 -> m0_113  [key=1, style=dashed, color=green, label=bizzaroC2];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_18  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_18  [key=2, style=dotted];
m0_114 -> m0_104  [key=0, style=bold, color=blue];
m0_145 -> m0_146  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_146  [key=3, color=green, style=bold, label="Local variable string json"];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_17  [key=2, style=dotted];
m0_147 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_147 -> m0_150  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_147 -> m0_151  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_18  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_18  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_18  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_153  [key=1, style=dashed, color=darkseagreen4, label=o];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_18  [key=2, style=dotted];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_58  [key=2, style=dotted];
m0_153 -> m0_60  [key=2, style=dotted];
m0_153 -> m0_61  [key=2, style=dotted];
m0_154 -> m0_145  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_0  [key=2, style=dotted];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_15  [key=2, style=dotted];
m0_6 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label=json];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_17  [key=2, style=dotted];
m0_8 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_8 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_8 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_18  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_19  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_18  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_18  [key=2, style=dotted];
m0_13 -> m0_3  [key=0, style=bold, color=blue];
m0_161 -> m0_162  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_17  [key=2, style=dotted];
m0_162 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_162 -> m0_165  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_18  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_18  [key=2, style=dotted];
m0_165 -> m0_166  [key=0, style=solid];
m0_165 -> m0_18  [key=2, style=dotted];
m0_166 -> m0_161  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_80  [key=3, color=green, style=bold, label="Local variable string json"];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_17  [key=2, style=dotted];
m0_81 -> m0_83  [key=1, style=dashed, color=darkseagreen4, label=account];
m0_81 -> m0_84  [key=1, style=dashed, color=darkseagreen4, label=account];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_18  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_18  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_18  [key=2, style=dotted];
m0_85 -> m0_79  [key=0, style=bold, color=blue];
m0_167 -> m0_168  [key=0, style=solid];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_17  [key=2, style=dotted];
m0_168 -> m0_170  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_168 -> m0_171  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_168 -> m0_172  [key=1, style=dashed, color=darkseagreen4, label=c];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_18  [key=2, style=dotted];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_18  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_18  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_18  [key=2, style=dotted];
m0_173 -> m0_167  [key=0, style=bold, color=blue];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid, color=green];
m0_63 -> m0_63  [key=3, color=darkorchid, style=bold, label="Local variable string json"];
m0_64 -> m0_65  [key=0, style=solid, color=green];
m0_64 -> m0_17  [key=2, style=dotted, color=green];
m0_64 -> m0_66  [key=1, style=dashed, color=green, label=c];
m0_64 -> m0_67  [key=1, style=dashed, color=green, label=c];
m0_64 -> m0_68  [key=1, style=dashed, color=green, label=c];
m0_64 -> m0_69  [key=1, style=dashed, color=green, label=c];
m0_64 -> m0_70  [key=1, style=dashed, color=green, label=c];
m0_64 -> m0_71  [key=1, style=dashed, color=green, label=c];
m0_64 -> m0_72  [key=1, style=dashed, color=green, label=c];
m0_64 -> m0_73  [key=1, style=dashed, color=green, label=c];
m0_64 -> m0_74  [key=1, style=dashed, color=green, label=c];
m0_65 -> m0_66  [key=0, style=solid, color=green];
m0_65 -> m0_18  [key=2, style=dotted, color=green];
m0_66 -> m0_67  [key=0, style=solid, color=green];
m0_66 -> m0_18  [key=2, style=dotted, color=green];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_18  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_18  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_18  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_18  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid, color=red];
m0_71 -> m0_18  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid, color=red];
m0_72 -> m0_59  [key=2, style=dotted, color=red];
m0_72 -> m0_60  [key=2, style=dotted, color=red];
m0_72 -> m0_61  [key=2, style=dotted, color=red];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_59  [key=2, style=dotted];
m0_73 -> m0_60  [key=2, style=dotted];
m0_73 -> m0_61  [key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_18  [key=2, style=dotted];
m0_75 -> m0_62  [key=0, style=bold, color=blue];
m0_116 -> m0_117  [key=0, style=solid, color=green];
m0_117 -> m0_118  [key=0, style=solid, color=green];
m0_117 -> m0_108  [key=3, color=green, style=bold, label="Local variable string json"];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_35  [key=2, style=dotted];
m0_118 -> m0_36  [key=2, style=dotted];
m0_118 -> m0_120  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_118 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label=c2];
m0_118 -> n19  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_18  [key=2, style=dotted];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [key=1, style=dashed, color=darkseagreen4, label=bizzaroC2];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_18  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_18  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_18  [key=2, style=dotted];
m0_124 -> m0_116  [key=0, style=bold, color=blue];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=2, style=dotted];
m0_46 -> m0_44  [key=0, style=bold, color=blue];
m0_182 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataDeserializeWithNonDefaultConstructor"];
m0_183 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.ExtensionDataTestClass"];
m0_184 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label="Newtonsoft.Json.Tests.Serialization.ExtensionDataTests.PublicExtensionDataAttributeTestClassWithNonDefaultConstructor"];
m1_10 -> m1_18  [key=0, style=solid];
m1_10 -> m1_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string s1"];
m1_18 -> m1_10  [key=0, style=bold, color=blue];
m1_11 -> m1_14  [key=0, style=solid];
m1_11 -> m1_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string path"];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=2, style=dotted];
m1_14 -> m1_17  [key=2, style=dotted];
m1_15 -> m1_11  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_8  [key=2, style=dotted];
m1_1 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=videogameRatings];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_9  [key=2, style=dotted];
m1_2 -> m1_10  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_13  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_11  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m2_10 -> m2_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string s1"];
m2_10 -> m2_18  [key=0, style=solid];
m2_18 -> m2_10  [key=0, style=bold, color=blue];
m2_11 -> m2_14  [key=0, style=solid, color=green];
m2_11 -> m2_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string path"];
m2_14 -> m2_15  [key=0, style=solid, color=green];
m2_14 -> m2_16  [key=2, style=dotted, color=green];
m2_14 -> m2_17  [key=2, style=dotted, color=green];
m2_15 -> m2_11  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_1 -> m2_8  [key=2, style=dotted];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=videogameRatings];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_10  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_13  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_11  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_0  [key=0, style=bold, color=blue];
}
